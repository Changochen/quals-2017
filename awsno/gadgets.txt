Gadgets information
============================================================
0x000000000074a2ac : adc ah, 0xf8 ; jmp rax
0x000000000074b474 : adc ah, 0xf9 ; jmp qword ptr [rax]
0x0000000000793359 : adc ah, ah ; call qword ptr [rdx]
0x0000000000793429 : adc ah, ah ; jmp qword ptr [rdi]
0x00000000005541ca : adc ah, bh ; add byte ptr [rcx], sil ; in eax, dx ; jmp 0x55419c
0x00000000007b00d0 : adc ah, bh ; in eax, dx ; jmp rdx
0x000000000079b159 : adc ah, bh ; jmp qword ptr [rcx]
0x0000000000509a3c : adc ah, byte ptr [rcx + 0x17] ; add bl, ch ; mov ecx, dword ptr [rax - 0x77] ; ret
0x0000000000417e7f : adc ah, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x8948
0x000000000049d3a4 : adc ah, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000006c855f : adc ah, byte ptr [rsi - 0x3f] ; ret 0xf08
0x00000000007a7ba9 : adc ah, ch ; call qword ptr [rbx]
0x00000000007956b1 : adc ah, ch ; call rsp
0x00000000007a7a89 : adc ah, ch ; jmp qword ptr [rsi]
0x000000000078b6a9 : adc ah, cl ; call qword ptr [rbx]
0x00000000007e0cdd : adc ah, dl ; add al, 0 ; retf 0x504
0x000000000073e3d5 : adc ah, dl ; call qword ptr [rax]
0x00000000006c4227 : adc al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000006b83e4 : adc al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0xb60f
0x0000000000777e08 : adc al, 0 ; add byte ptr [rax], al ; add al, 0xc7 ; add al, byte ptr [rax] ; retf
0x000000000077ff40 : adc al, 0 ; add byte ptr [rax], al ; cmp al, 0x48 ; add eax, dword ptr [rax] ; ret 0xc84e
0x00000000007a79f8 : adc al, 0 ; add byte ptr [rax], al ; hlt ; ret 5
0x00000000007a7af0 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x00000000007b81f0 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; retf 6
0x0000000000777f70 : adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; enter 2, 0x46 ; retf -0x38
0x0000000000777970 : adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 2
0x0000000000789b80 : adc al, 0 ; add byte ptr [rax], al ; jl 0x789b73 ; add eax, dword ptr [rax] ; pop rax ; ret
0x00000000007b82b0 : adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; retf
0x00000000007aa5c0 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xf80005ee ; retf
0x0000000000791248 : adc al, 0 ; add byte ptr [rax], al ; pop rbx ; add al, 0 ; ret 0xffe2
0x00000000007a7960 : adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 5
0x0000000000777f58 : adc al, 0 ; add byte ptr [rax], al ; push rsp ; enter 2, 0x48 ; retf -0x38
0x0000000000777958 : adc al, 0 ; add byte ptr [rax], al ; push rsp ; ret 2
0x00000000007a7aa0 : adc al, 0 ; add byte ptr [rax], al ; pushfq ; ret
0x00000000007779a0 : adc al, 0 ; add byte ptr [rax], al ; pushfq ; ret 2
0x0000000000777e20 : adc al, 0 ; add byte ptr [rax], al ; sbb al, 0xc7 ; add al, byte ptr [rax] ; retf
0x00000000005b8a35 : adc al, 0 ; add byte ptr [rax], al ; test al, 1 ; jne 0x5b8a4e ; call rax
0x0000000000777f88 : adc al, 0 ; add byte ptr [rax], al ; test al, cl ; add al, byte ptr [rax] ; retf -0x38
0x00000000007bad48 : adc al, 0 ; add byte ptr [rax], al ; test byte ptr [rsi], 0 ; nop ; ret 0xfff0
0x000000000078cd38 : adc al, 0 ; add byte ptr [rax], al ; xor al, 0x16 ; add al, 0 ; retf -0x3879
0x00000000007e3967 : adc al, 0 ; add cl, dl ; xlatb ; sub al, byte ptr [rax] ; retf
0x000000000052fc3b : adc al, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000510f67 : adc al, 0 ; add rsp, 8 ; ret
0x00000000007bfcfc : adc al, 0 ; call 0xffffffffc3818213
0x00000000007d96ca : adc al, 0 ; fimul word ptr [rdi] ; add eax, 0xf90014f1 ; syscall
0x00000000007d0984 : adc al, 0 ; jmp qword ptr [rdi]
0x00000000007d501c : adc al, 0 ; lahf ; add eax, 0x11f205 ; ret
0x00000000007cdc8b : adc al, 0 ; mov dl, 0xf ; add eax, 0xbc0011ea ; sysenter
0x0000000000606bc7 : adc al, 0 ; mov dword ptr [rdi + 0x18], 0 ; ret
0x0000000000577cc1 : adc al, 0 ; mov rdi, rbx ; call 0x6d4747
0x000000000053d15d : adc al, 0 ; nop ; ret
0x0000000000547c5a : adc al, 0 ; nop dword ptr [rax] ; ret
0x0000000000585f75 : adc al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007d05aa : adc al, 0 ; ret
0x00000000007c2274 : adc al, 0 ; ret 0x1807
0x00000000007d2ec0 : adc al, 0 ; ret 0x2414
0x00000000007c672e : adc al, 0 ; ret 0x3e0e
0x00000000007d50fb : adc al, 0 ; retf
0x00000000007d48fa : adc al, 0 ; retf 0x1e09
0x00000000007cded8 : adc al, 0 ; retf 0x514
0x00000000007d96d0 : adc al, 0 ; stc ; syscall
0x00000000007e68fb : adc al, 0 ; stosb byte ptr [rdi], al ; adc al, 5 ; ret 0x14
0x00000000007e871a : adc al, 0 ; xchg eax, ecx ; syscall
0x00000000007cd94e : adc al, 0 ; xchg eax, edi ; add dword ptr [rbp + 0x316e201], ecx ; retf 0x502
0x00000000007d96b8 : adc al, 0 ; xchg eax, esi ; syscall
0x000000000057e733 : adc al, 0x10 ; add bl, ch ; fimul dword ptr [rax - 0x77] ; ret
0x000000000055e722 : adc al, 0x12 ; add bl, ch ; xchg byte ptr [rax - 0x77], cl ; ret
0x0000000000744434 : adc al, 0x12 ; out dx, al ; jmp qword ptr [rax]
0x000000000052e72f : adc al, 0x15 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005732f7 : adc al, 0x16 ; add bl, ch ; mov word ptr [rax - 0x77], cs ; ret
0x000000000051f19d : adc al, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e36b2 : adc al, 0x16 ; jmp qword ptr [rsi]
0x000000000050fe3e : adc al, 0x17 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007d927f : adc al, 0x18 ; add byte ptr [rax], al ; retf
0x00000000005232ee : adc al, 0x1b ; add bl, ch ; retf -0x76b8
0x000000000049e672 : adc al, 0x1e ; add byte ptr [rax - 0x77], cl ; ret
0x000000000049d0d2 : adc al, 0x22 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000006d3f5a : adc al, 0x24 ; mov edi, 1 ; call rax
0x0000000000538cb2 : adc al, 0x24 ; mov qword ptr [rax], rdx ; add rsp, 0x18 ; ret
0x000000000045f1e3 : adc al, 0x26 ; add cl, cl ; ret
0x0000000000688113 : adc al, 0x30 ; cmp rdx, rdi ; jne 0x6880ff ; ret
0x000000000079ed5c : adc al, 0x36 ; add eax, 0xe8383800 ; call rsp
0x00000000004ca697 : adc al, 0x39 ; ret 0x107c
0x0000000000689b51 : adc al, 0x39 ; setle al ; ret
0x000000000051eec8 : adc al, 0x3a ; add byte ptr [rcx - 0x75], r8b ; adc byte ptr [r9], r15b ; retf
0x00000000006bdac3 : adc al, 0x3c ; add dh, byte ptr [rsi + 8] ; ret
0x000000000078f61c : adc al, 0x3f ; add al, 0 ; add byte ptr [rax], 0xe2 ; jmp qword ptr [rbx]
0x000000000074f75c : adc al, 0x40 ; add byte ptr [rax], al ; in al, dx ; cmp ecx, ebp ; call rsp
0x0000000000459fb8 : adc al, 0x46 ; add byte ptr es:[rax - 0x77], cl ; ret 0x8948
0x0000000000607903 : adc al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000006943b2 : adc al, 0x48 ; add esp, 0x28 ; ret
0x00000000006cfe84 : adc al, 0x48 ; add esp, 0x38 ; ret
0x000000000065ced5 : adc al, 0x48 ; add esp, 8 ; ret
0x00000000005e6aff : adc al, 0x48 ; mov eax, dword ptr [rip + 0x41bde1] ; call rax
0x00000000005d9507 : adc al, 0x48 ; mov eax, dword ptr [rip + 0x4293d9] ; call rax
0x00000000007a0e1c : adc al, 0x57 ; add eax, 0xe8a3a000 ; call qword ptr [rax]
0x0000000000606ca8 : adc al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000007a191c : adc al, 0x62 ; add eax, 0xe8b58000 ; jmp qword ptr [rbx]
0x00000000007a231c : adc al, 0x6c ; add eax, 0xe8f58000 ; call qword ptr [rax]
0x00000000007a265c : adc al, 0x6f ; add eax, 0xe8fe1000 ; call rsi
0x00000000007388f4 : adc al, 0x79 ; salc ; jmp qword ptr [rax - 0x35]
0x000000000067bc59 : adc al, 0x83 ; ret
0x0000000000585ea5 : adc al, 0x85 ; sal byte ptr [rbp + 2], 0x5b ; ret
0x00000000007eed0a : adc al, 0x86 ; add al, byte ptr [rcx] ; movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x1e01
0x00000000007a401c : adc al, 0x89 ; add eax, 0xe9a0a000 ; call qword ptr [rdi]
0x000000000065dd77 : adc al, 0x89 ; ret 0x4488
0x00000000006c8d18 : adc al, 0x89 ; ret 0xb60f
0x00000000006a430c : adc al, 0x8a ; sub eax, edx ; add eax, 1 ; ret
0x0000000000440d4c : adc al, 0x8b ; adc byte ptr [r9], dil ; ret 0x1b7c
0x0000000000440d2c : adc al, 0x8b ; adc byte ptr [r9], dil ; ret 0x538b
0x00000000004e4952 : adc al, 0x8b ; push rbp ; test byte ptr [rbx + 0x2948c445], cl ; ret 0x8948
0x00000000007ce9d9 : adc al, 0x8e ; add al, byte ptr [rcx] ; lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0x1e01
0x000000000075455c : adc al, 0x8e ; add byte ptr [rax], al ; call 0xffffffffd575148c
0x000000000075495c : adc al, 0x92 ; add byte ptr [rax], al ; sbb bh, byte ptr [rbx] ; iretd ; call rsp
0x00000000007e5dd3 : adc al, 0x93 ; or dword ptr [rax], eax ; retf 0x506
0x00000000007a4d1c : adc al, 0x96 ; add eax, 0xeb3b5000 ; call qword ptr [rbx]
0x0000000000784f5c : adc al, 0x98 ; add eax, dword ptr [rax] ; push rax ; rcr edi, cl ; call rax
0x00000000006a32f8 : adc al, 0x9c ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rbx ; ret
0x00000000004cb193 : adc al, 0x9f ; add al, ch ; retf 0x1b54
0x00000000007cd53a : adc al, 0xa1 ; sbb byte ptr [rax], al ; ret 0x505
0x00000000007e9ed2 : adc al, 0xa8 ; and dword ptr [rax], eax ; retf 0x520
0x000000000041fe58 : adc al, 0xaf ; add byte ptr es:[rax - 0x77], cl ; ret
0x000000000078671c : adc al, 0xb0 ; add eax, dword ptr [rax] ; sal ch, 0xdf ; call qword ptr [rbx]
0x0000000000585588 : adc al, 0xb0 ; add rsp, 8 ; ret
0x00000000007a6f1c : adc al, 0xb8 ; add eax, 0xebdc4000 ; call qword ptr [rsi]
0x00000000007fa02a : adc al, 0xb9 ; stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; mov word ptr [rsi + 5], cs ; ret
0x00000000004d28de : adc al, 0xbe ; adc byte ptr [rip - 0x70410000], cl ; ret 0x6e
0x00000000004e7be9 : adc al, 0xbe ; adc dword ptr [rbx], 0x8fbf0000 ; ret 0x6e
0x00000000004db2e0 : adc al, 0xbe ; adc eax, 0x8fbf0000 ; ret 0x6e
0x0000000000431438 : adc al, 0xbe ; adc eax, 0xbf000000 ; scasb al, byte ptr [rdi] ; ret 0x6d
0x00000000004d2959 : adc al, 0xbe ; adc ecx, dword ptr [rip - 0x70410000] ; ret 0x6e
0x00000000004db493 : adc al, 0xbe ; adc rax, -0x70410000 ; ret 0x6e
0x00000000004d2519 : adc al, 0xbe ; add byte ptr [rip - 0x70410000], cl ; ret 0x6e
0x00000000004c3750 : adc al, 0xbe ; add eax, 0x8fbf0000 ; ret 0x6e
0x00000000004c26f5 : adc al, 0xbe ; add eax, dword ptr [rip - 0x70410000] ; ret 0x6e
0x00000000004db1af : adc al, 0xbe ; and byte ptr [rip - 0x70410000], dl ; ret 0x6e
0x00000000004d2cd0 : adc al, 0xbe ; and cl, byte ptr [rip - 0x70410000] ; ret 0x6e
0x00000000004efb65 : adc al, 0xbe ; call qword ptr [rsi]
0x00000000004d89a9 : adc al, 0xbe ; cli ; or eax, 0x8fbf0000 ; ret 0x6e
0x00000000004d84de : adc al, 0xbe ; fimul dword ptr [rip - 0x70410000] ; ret 0x6e
0x00000000004d85a3 : adc al, 0xbe ; fimul word ptr [rip - 0x70410000] ; ret 0x6e
0x00000000004dce80 : adc al, 0xbe ; fist word ptr [rip - 0x70410000] ; ret 0x6e
0x00000000004d8575 : adc al, 0xbe ; fisttp qword ptr [rip - 0x70410000] ; ret 0x6e
0x00000000004c6530 : adc al, 0xbe ; fld qword ptr [rip - 0x70410000] ; ret 0x6e
0x00000000004d8548 : adc al, 0xbe ; fmul qword ptr [rip - 0x70410000] ; ret 0x6e
0x00000000004dce01 : adc al, 0xbe ; fst dword ptr [rip - 0x70410000] ; ret 0x6e
0x00000000004e0bde : adc al, 0xbe ; imul edx, dword ptr [rax], 0x8fbf0000 ; ret 0x6e
0x00000000004f13a4 : adc al, 0xbe ; imul edx, dword ptr [rdi], 0x8fbf0000 ; ret 0x6e
0x00000000004c66c8 : adc al, 0xbe ; in al, dx ; add eax, 0x8fbf0000 ; ret 0x6e
0x00000000004d87e1 : adc al, 0xbe ; in al, dx ; or eax, 0x8fbf0000 ; ret 0x6e
0x00000000004d880f : adc al, 0xbe ; in eax, dx ; or eax, 0x8fbf0000 ; ret 0x6e
0x00000000004c3e6b : adc al, 0xbe ; insb byte ptr [rdi], dx ; add eax, 0x8fbf0000 ; ret 0x6e
0x00000000004db854 : adc al, 0xbe ; insd dword ptr [rdi], dx ; adc eax, 0x8fbf0000 ; ret 0x6e
0x00000000004c3ee5 : adc al, 0xbe ; insd dword ptr [rdi], dx ; add eax, 0x8fbf0000 ; ret 0x6e
0x00000000004d8867 : adc al, 0xbe ; int1 ; or eax, 0x8fbf0000 ; ret 0x6e
0x00000000004d813b : adc al, 0xbe ; lea ecx, dword ptr [rip - 0x70410000] ; ret 0x6e
0x00000000004dbf23 : adc al, 0xbe ; mov byte ptr [rip - 0x70410000], dl ; ret 0x6e
0x00000000004dbf94 : adc al, 0xbe ; mov dword ptr [rip - 0x70410000], edx ; ret 0x6e
0x0000000000435a7b : adc al, 0xbe ; mov ebx, 0xbf000000 ; scasb al, byte ptr [rdi] ; ret 0x6d
0x00000000004dbfbf : adc al, 0xbe ; mov edx, dword ptr [rip - 0x70410000] ; ret 0x6e
0x00000000004d80e4 : adc al, 0xbe ; mov word ptr [rip - 0x70410000], cs ; ret 0x6e
0x00000000004c4f14 : adc al, 0xbe ; mov word ptr [rip - 0x70410000], es ; ret 0x6e
0x00000000004c5991 : adc al, 0xbe ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0x8fbf0000 ; ret 0x6e
0x00000000004d280c : adc al, 0xbe ; or cl, byte ptr [rip - 0x70410000] ; ret 0x6e
0x00000000004cf188 : adc al, 0xbe ; or dword ptr [rdx], 0x8fbf0000 ; ret 0x6e
0x00000000004d2e10 : adc al, 0xbe ; or eax, 0x8fbf0000 ; ret 0x6e
0x0000000000437863 : adc al, 0xbe ; or eax, 0xbf000001 ; scasb al, byte ptr [rdi] ; ret 0x6d
0x00000000004d3136 : adc al, 0xbe ; or rax, 0x8fbf0000 ; ret 0x6e
0x00000000004dbded : adc al, 0xbe ; outsb dx, byte ptr [rsi] ; adc eax, 0x8fbf0000 ; ret 0x6e
0x00000000004db65d : adc al, 0xbe ; pop rax ; adc eax, 0x8fbf0000 ; ret 0x6e
0x00000000004c399b : adc al, 0xbe ; pop rbp ; add eax, 0x8fbf0000 ; ret 0x6e
0x00000000004db73e : adc al, 0xbe ; pop rbx ; adc eax, 0x8fbf0000 ; ret 0x6e
0x00000000004db6d5 : adc al, 0xbe ; pop rcx ; adc eax, 0x8fbf0000 ; ret 0x6e
0x00000000004d341c : adc al, 0xbe ; pop rcx ; or eax, 0x8fbf0000 ; ret 0x6e
0x00000000004c3a5c : adc al, 0xbe ; pop rdi ; add eax, 0x8fbf0000 ; ret 0x6e
0x00000000004c3951 : adc al, 0xbe ; pop rdx ; add eax, 0x8fbf0000 ; ret 0x6e
0x00000000004c39d1 : adc al, 0xbe ; pop rsi ; add eax, 0x8fbf0000 ; ret 0x6e
0x00000000004c37e7 : adc al, 0xbe ; push rax ; add eax, 0x8fbf0000 ; ret 0x6e
0x00000000004d31f2 : adc al, 0xbe ; push rcx ; or eax, 0x8fbf0000 ; ret 0x6e
0x00000000004d32c1 : adc al, 0xbe ; push rdx ; or eax, 0x8fbf0000 ; ret 0x6e
0x0000000000468cd9 : adc al, 0xbe ; ret
0x00000000004840d0 : adc al, 0xbe ; ret 0
0x00000000004dc6d4 : adc al, 0xbe ; ret 0x15
0x00000000004ef36d : adc al, 0xbe ; ret 0x16
0x00000000004d1a12 : adc al, 0xbe ; ret 0xc
0x000000000048864b : adc al, 0xbe ; ret 1
0x0000000000490d2d : adc al, 0xbe ; ret 3
0x00000000004ce04e : adc al, 0xbe ; ret 9
0x00000000004a73fb : adc al, 0xbe ; retf
0x00000000004e52c4 : adc al, 0xbe ; retf 0x12
0x00000000004dc8ee : adc al, 0xbe ; retf 0x15
0x00000000004a732c : adc al, 0xbe ; retf 2
0x00000000004d8332 : adc al, 0xbe ; ror dword ptr [rip - 0x70410000], cl ; ret 0x6e
0x00000000004d8420 : adc al, 0xbe ; salc ; or eax, 0x8fbf0000 ; ret 0x6e
0x00000000004d2b7e : adc al, 0xbe ; sbb cl, byte ptr [rip - 0x70410000] ; ret 0x6e
0x00000000004d2be4 : adc al, 0xbe ; sbb ecx, dword ptr [rip - 0x70410000] ; ret 0x6e
0x00000000004d3600 : adc al, 0xbe ; scasb al, byte ptr [rdi] ; or eax, 0x8fbf0000 ; ret 0x6e
0x00000000004d89dc : adc al, 0xbe ; std ; or eax, 0x8fbf0000 ; ret 0x6e
0x00000000004db21e : adc al, 0xbe ; sub dl, byte ptr [rip - 0x70410000] ; ret 0x6e
0x00000000004d2e96 : adc al, 0xbe ; sub dword ptr [rip - 0x70410000], ecx ; ret 0x6e
0x00000000004d2ee5 : adc al, 0xbe ; sub ecx, dword ptr [rip - 0x70410000] ; ret 0x6e
0x00000000004db24f : adc al, 0xbe ; sub edx, dword ptr [rip - 0x70410000] ; ret 0x6e
0x000000000040ff34 : adc al, 0xbe ; syscall
0x00000000004d8032 : adc al, 0xbe ; test byte ptr [rip - 0x70410000], cl ; ret 0x6e
0x00000000004caf7b : adc al, 0xbe ; test dword ptr [rax], 0x8fbf0000 ; ret 0x6e
0x00000000004dc168 : adc al, 0xbe ; wait ; adc eax, 0x8fbf0000 ; ret 0x6e
0x00000000004d805c : adc al, 0xbe ; xchg byte ptr [rip - 0x70410000], cl ; ret 0x6e
0x00000000004c4b78 : adc al, 0xbe ; xchg dword ptr [rip - 0x70410000], eax ; ret 0x6e
0x00000000004dbee8 : adc al, 0xbe ; xchg dword ptr [rip - 0x70410000], edx ; ret 0x6e
0x00000000004dc08e : adc al, 0xbe ; xchg eax, ebp ; adc eax, 0x8fbf0000 ; ret 0x6e
0x00000000004c52ee : adc al, 0xbe ; xchg eax, ecx ; add eax, 0x8fbf0000 ; ret 0x6e
0x00000000004c56a1 : adc al, 0xbe ; xchg eax, esi ; add eax, 0x8fbf0000 ; ret 0x6e
0x00000000004d2f84 : adc al, 0xbe ; xor cl, byte ptr [rip - 0x70410000] ; ret 0x6e
0x00000000004de16b : adc al, 0xbe ; xor edx, dword ptr [rip - 0x70410000] ; ret 0x6e
0x000000000067fa93 : adc al, 0xc0 ; lea eax, dword ptr [rax + rdx*2 + 0x42] ; ret
0x000000000075785c : adc al, 0xc1 ; add byte ptr [rax], al ; and al, bl ; iretd ; call rsp
0x00000000006ce563 : adc al, 0xc7 ; ret
0x000000000079815c : adc al, 0xca ; add al, 0 ; ret 0xe5d8
0x00000000007a811c : adc al, 0xca ; add eax, 0xec1c6200 ; call qword ptr [rbx]
0x0000000000736614 : adc al, 0xca ; sar edi, 1 ; js 0x736648 ; add al, byte ptr [rax] ; pop rdx ; retf -0x2f
0x0000000000733dcd : adc al, 0xcd ; call rax
0x000000000075875c : adc al, 0xd0 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; or edx, eax ; call rsp
0x0000000000736b55 : adc al, 0xd2 ; call rax
0x0000000000737505 : adc al, 0xd3 ; jmp rax
0x0000000000506b6b : adc al, 0xd6 ; test rdx, rdx ; je 0x506b67 ; ret
0x000000000050700b : adc al, 0xd6 ; test rdx, rdx ; je 0x507008 ; pop rbx ; ret
0x0000000000554dab : adc al, 0xd6 ; test rdx, rdx ; je 0x554da7 ; ret
0x000000000055528b : adc al, 0xd6 ; test rdx, rdx ; je 0x555288 ; pop rbx ; ret
0x0000000000625adb : adc al, 0xd6 ; test rdx, rdx ; je 0x625ad7 ; ret
0x0000000000625dcb : adc al, 0xd6 ; test rdx, rdx ; je 0x625dc8 ; pop rbx ; ret
0x0000000000767cc9 : adc al, 0xd7 ; jmp qword ptr [rbx]
0x0000000000775bd9 : adc al, 0xdc ; call rdi
0x000000000073ab25 : adc al, 0xdd ; jmp rax
0x0000000000757c18 : adc al, 0xe0 ; iretd ; call qword ptr [rcx]
0x000000000078b7c9 : adc al, 0xe1 ; call qword ptr [rdx]
0x0000000000793539 : adc al, 0xe4 ; call rsp
0x00000000007400c5 : adc al, 0xe5 ; jmp rax
0x000000000079b2e1 : adc al, 0xe7 ; call qword ptr [rdi]
0x00000000007414e5 : adc al, 0xe7 ; jmp qword ptr [rax]
0x000000000079b2c9 : adc al, 0xe7 ; jmp qword ptr [rcx]
0x0000000000501860 : adc al, 0xe8 ; retf 0x1847
0x000000000064b1ac : adc al, 0xf ; ret
0x000000000068fbac : adc al, 0xf0 ; ret
0x00000000006c0a4e : adc al, 0xf1 ; sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000006d431c : adc al, 0xf7 ; add rsp, 8 ; ret
0x0000000000620bb8 : adc al, 0xfb ; or dword ptr [rax], eax ; leave ; ret
0x0000000000677dfc : adc al, 0xff ; dec dword ptr [rcx + 1] ; ret 0x8944
0x00000000004513db : adc al, 0xff ; dec ecx ; ret
0x00000000007ebf9e : adc al, 0xff ; or byte ptr [rax], al ; ret
0x000000000067617b : adc al, 1 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000676162 : adc al, 1 ; add byte ptr [rax], al ; ret
0x0000000000519083 : adc al, 1 ; pop rbx ; ret
0x0000000000518357 : adc al, 1 ; ret
0x000000000076cb5d : adc al, 2 ; add byte ptr [rax], ah ; fstp st(1) ; call qword ptr [rcx]
0x00000000007d7cc9 : adc al, 2 ; retf 0x33
0x00000000006a32c6 : adc al, 3 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007f0d91 : adc al, 3 ; ret 0x1303
0x000000000079cb7d : adc al, 5 ; add byte ptr [rsi], bl ; ret
0x00000000007d974e : adc al, 5 ; mov ch, 0x14 ; add dh, al ; adc al, 5 ; retf
0x00000000007d2ebd : adc al, 5 ; rcl dword ptr [rax + rax], 1 ; ret 0x2414
0x00000000007e68fe : adc al, 5 ; ret 0x14
0x00000000007d9754 : adc al, 5 ; retf
0x00000000007e3225 : adc al, 5 ; retf 0x526
0x00000000007d50f8 : adc al, 5 ; stosd dword ptr [rdi], eax ; adc al, 0 ; retf
0x00000000006d139e : adc al, 6 ; ret
0x0000000000745d59 : adc al, 7 ; add al, dl ; push rsp ; jmp rax
0x0000000000745d61 : adc al, 7 ; add byte ptr [rax + 0x55], ah ; jmp qword ptr [rax]
0x00000000007bcbb5 : adc al, 7 ; add byte ptr [rax + 8], ch ; int1 ; call qword ptr [rbx]
0x00000000007d927c : adc al, 7 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; adc al, 0x18 ; add byte ptr [rax], al ; retf
0x00000000006be443 : adc al, 7 ; ret
0x00000000007bfe05 : adc al, 7 ; retf 0xe06
0x0000000000549ed2 : adc al, 7 ; setg al ; ret
0x00000000006a8d9a : adc al, 8 ; ret
0x00000000006b295d : adc al, bl ; nop ; ret
0x00000000006696d0 : adc al, byte ptr [rax + rax] ; nop dword ptr [rax + rax] ; pop rbx ; ret
0x000000000069c90e : adc al, byte ptr [rax - 0x78] ; xor al, 2 ; jne 0x69c8d7 ; ret
0x00000000005d0346 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000606ba6 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000007e366b : adc al, byte ptr [rax] ; add byte ptr [rax], al ; retf 0x512
0x000000000074ca25 : adc al, byte ptr [rax] ; add byte ptr [rbx + rax*2 - 0x34], cl ; call rsp
0x00000000007bf082 : adc al, byte ptr [rax] ; add byte ptr [rdx], dh ; add eax, 0x53e016d ; retf 0x301
0x00000000007bf04a : adc al, byte ptr [rax] ; add byte ptr [rsi], ch ; add eax, 0x53e016d ; retf 0x301
0x000000000054a7c0 : adc al, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000007ddc1b : adc al, byte ptr [rax] ; call qword ptr [rcx]
0x00000000007edcc8 : adc al, byte ptr [rax] ; call qword ptr [rdx]
0x0000000000555e71 : adc al, byte ptr [rax] ; call qword ptr [rip + 0x4aca6f]
0x00000000007edc86 : adc al, byte ptr [rax] ; clc ; syscall
0x00000000007cb914 : adc al, byte ptr [rax] ; cld ; syscall
0x00000000007efcfb : adc al, byte ptr [rax] ; iretd ; syscall
0x00000000005565ea : adc al, byte ptr [rax] ; mov r12d, eax ; call qword ptr [rip + 0x4ac2f3]
0x000000000055665b : adc al, byte ptr [rax] ; mov r13d, eax ; call qword ptr [rip + 0x4ac282]
0x0000000000555ebd : adc al, byte ptr [rax] ; mov r14d, eax ; call qword ptr [rip + 0x4aca20]
0x0000000000558522 : adc al, byte ptr [rax] ; mov rdi, rbx ; call 0x6d4747
0x00000000005594ed : adc al, byte ptr [rax] ; nop ; ret
0x0000000000587ea0 : adc al, byte ptr [rax] ; nop word ptr [rax + rax] ; pop rbx ; ret
0x0000000000563d9f : adc al, byte ptr [rax] ; pop rbx ; ret
0x00000000007d014c : adc al, byte ptr [rax] ; ret
0x00000000007dd125 : adc al, byte ptr [rax] ; ret 0x512
0x00000000007d4991 : adc al, byte ptr [rax] ; retf
0x00000000007edc57 : adc al, byte ptr [rax] ; retf 0x490d
0x00000000007e60da : adc al, byte ptr [rax] ; retf 0x512
0x00000000007e687f : adc al, byte ptr [rax] ; retf 0xe10
0x00000000007d96be : adc al, byte ptr [rax] ; test eax, 0x1582050f ; add ah, al ; syscall
0x00000000007e4cc5 : adc al, byte ptr [rax] ; xchg eax, edi ; add ebx, dword ptr [rcx] ; call qword ptr [rdx]
0x00000000005bcfe4 : adc al, byte ptr [rbx + 0xc] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000069b9c2 : adc al, byte ptr [rbx - 0x68f0fd08] ; ret 0xfb83
0x00000000005d15fa : adc al, byte ptr [rbx] ; call rax
0x000000000054432a : adc al, byte ptr [rcx + rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000057cd6c : adc al, byte ptr [rcx - 0x73] ; add r15, qword ptr [rcx] ; ret 0x8f0f
0x000000000040c01a : adc al, byte ptr [rcx] ; add byte ptr [rax], al ; leave ; ret
0x00000000005293b3 : adc al, byte ptr [rcx] ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000005f160d : adc al, byte ptr [rcx] ; call rax
0x00000000006a1f05 : adc al, byte ptr [rcx] ; ror byte ptr [rax - 0x77], 1 ; ret 0xf089
0x00000000007bc92d : adc al, byte ptr [rdi] ; add byte ptr [rax + 5], dh ; int1 ; call qword ptr [rax]
0x00000000007e65dd : adc al, byte ptr [rdi] ; lock or byte ptr [rsi], al ; xchg eax, esp ; adc byte ptr [rax], al ; ret
0x00000000005d6949 : adc al, byte ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rdi + 0x48], 0x89 ; ret 0x8348
0x0000000000736229 : adc al, byte ptr [rdx] ; add byte ptr [rdx - 0x2f], dh ; call qword ptr [rax]
0x000000000073fc71 : adc al, byte ptr [rip - 0x1b1b9000] ; call qword ptr [rax]
0x00000000005715e5 : adc al, ch ; call qword ptr [r8]
0x00000000004c3859 : adc al, ch ; jno 0x4c38ba ; sbb dword ptr [rax], eax ; leave ; ret
0x00000000004c37c2 : adc al, ch ; or byte ptr [rdi + 0x19], dl ; add cl, cl ; ret
0x000000000052e997 : adc al, ch ; ret
0x00000000006640a0 : adc al, ch ; retf -0x2605
0x000000000044d262 : adc al, ch ; retf 0x2342
0x00000000004a9fec : adc al, ch ; sbb al, 0 ; nop ; leave ; ret
0x00000000004fa4b0 : adc al, ch ; sbb al, byte ptr [rcx + 0x1c] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000053d3fc : adc al, ch ; scasb al, byte ptr [rdi] ; retf
0x00000000006a332f : adc al, ch ; sti ; jns 0x6a333c ; add byte ptr [rax + 0x29], cl ; ret
0x000000000050591f : adc al, ch ; stosd dword ptr [rdi], eax ; lea ebx, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000520028 : adc al, ch ; xchg eax, edx ; ret 0xffff
0x00000000007473f4 : adc al, cl ; hlt ; call qword ptr [rax]
0x000000000072ad4f : adc al, dh ; loope 0x72ad29 ; ret
0x000000000072adcf : adc al, dh ; loope 0x72ada9 ; ret
0x00000000007cd504 : adc al, dh ; sbb byte ptr [rax], al ; retf 0x1403
0x000000000051907f : adc al, dh ; sub dword ptr [rax + 0x14], 1 ; pop rbx ; ret
0x0000000000518353 : adc al, dh ; sub dword ptr [rax + 0x14], 1 ; ret
0x0000000000741495 : adc bh, ah ; jmp rax
0x00000000005a2028 : adc bh, ah ; jo 0x5a2033 ; mov rdi, rbp ; call rax
0x00000000005a2097 : adc bh, ah ; jo 0x5a20a2 ; mov rdi, rbp ; call rax
0x00000000005a21f7 : adc bh, ah ; jo 0x5a2202 ; mov rdi, r12 ; call rax
0x000000000073911c : adc bh, al ; xlatb ; call rax
0x00000000006a19dc : adc bh, bh ; cmp rax, rsi ; jne 0x6a19d7 ; ret
0x000000000068e8a3 : adc bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000557b1d : adc bh, bh ; shr al, 1 ; or eax, 0x8900129a ; ret
0x0000000000565d1c : adc bh, byte ptr [rax + 0x15ff0011] ; ret 0x49cb
0x00000000005e1c92 : adc bh, byte ptr [rax] ; ret 0x1474
0x00000000006555e4 : adc bh, byte ptr [rbp - 0x76b7fffe] ; ret
0x00000000006ca1d5 : adc bh, byte ptr [rcx] ; ret 0x167e
0x000000000067a8a1 : adc bh, byte ptr [rcx] ; ret 0x3c7e
0x00000000005c805c : adc bh, byte ptr [rcx] ; ret 0x4f7e
0x00000000005cab84 : adc bh, byte ptr [rcx] ; ret 0x8e0f
0x0000000000566267 : adc bh, byte ptr [rcx] ; retf -0x70f1
0x000000000056242a : adc bh, byte ptr [rcx] ; retf -0x71f1
0x00000000004e4354 : adc bh, byte ptr [rcx] ; ror byte ptr [rdi], 1 ; ret 0xc085
0x0000000000604141 : adc bh, byte ptr [rdi + 0x71] ; add byte ptr [rcx], dh ; shr al, 0x40 ; retf 7
0x0000000000604860 : adc bh, byte ptr [rdi + 0x71] ; add byte ptr [rcx], dh ; shr al, 0x8f ; retf 7
0x00000000006047f6 : adc bh, byte ptr [rdi + 0x71] ; add byte ptr [rcx], dh ; shr al, 0xb3 ; ret
0x00000000006047a9 : adc bh, byte ptr [rdi + 0x71] ; add byte ptr [rcx], dh ; shr al, 0xd8 ; ret
0x00000000006047cb : adc bh, byte ptr [rdi + 0x71] ; add byte ptr [rcx], dh ; shr al, 0xde ; ret
0x0000000000604798 : adc bh, byte ptr [rdi + 0x71] ; add byte ptr [rcx], dh ; shr al, 0xe9 ; ret
0x00000000006047ba : adc bh, byte ptr [rdi + 0x71] ; add byte ptr [rcx], dh ; shr al, 0xef ; ret
0x00000000007daa91 : adc bh, byte ptr [rdi] ; add byte ptr [rax], al ; retf
0x00000000006216ca : adc bh, byte ptr [rsi] ; add bh, bh ; ror cl, 1 ; ret
0x00000000006c95af : adc bh, dh ; inc dword ptr [rcx + rcx*4 + 0x68] ; or byte ptr [rax - 0x77], cl ; ret
0x000000000074b62d : adc bh, dl ; jmp qword ptr [rax]
0x000000000067f73e : adc bl, al ; mov eax, dword ptr [rdi + 4] ; sub eax, 1 ; ret
0x00000000007aaaa0 : adc bl, bl ; in al, dx ; call qword ptr [rdx]
0x00000000006c0f8d : adc bl, bl ; sub al, 0x24 ; add rsp, 0x18 ; ret
0x000000000051ec2a : adc bl, byte ptr [rbx + 0x1b] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000550718 : adc bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004715ee : adc bl, byte ptr [rcx] ; call rax
0x00000000007d95db : adc bl, byte ptr [rdi] ; ret
0x000000000079f310 : adc bl, byte ptr [rsi - 0x18] ; jmp qword ptr [rcx]
0x000000000074a204 : adc bl, cl ; clc ; jmp rax
0x0000000000748304 : adc bl, cl ; cmc ; dec dword ptr [rax + 0x200007c9] ; retf
0x00000000007457c4 : adc bl, cl ; out dx, eax ; call qword ptr [rax]
0x00000000007065e8 : adc bl, dl ; push rdi ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; retf
0x000000000059eba4 : adc byte ptr [r13 + 0x5bb67fc0], al ; ret
0x000000000058ef38 : adc byte ptr [r13 + 0x63480151], r9b ; retf 0x3489
0x0000000000517ee1 : adc byte ptr [r13 - 0x3f61f040], r8b ; ret
0x000000000045f959 : adc byte ptr [r14], spl ; add cl, cl ; ret
0x000000000048d5fa : adc byte ptr [r8 - 0x77], cl ; ret 0x894c
0x000000000040ed6d : adc byte ptr [r8 - 0x77], cl ; retf 0x5d90
0x00000000005091b6 : adc byte ptr [r8 - 0x77], r9b ; clc ; add rsp, 8 ; ret
0x000000000054a092 : adc byte ptr [r8 - 0x77], r9b ; js 0x54a0a6 ; ret
0x00000000005190c2 : adc byte ptr [r8 - 0x7b], cl ; sal byte ptr [rdi + rax + 0x5b], cl ; ret
0x000000000067104b : adc byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; retf 0
0x0000000000581892 : adc byte ptr [r8 - 0x7b], r9b ; sal byte ptr [rdi + rax - 0x75], 0 ; ret
0x00000000005b8895 : adc byte ptr [r8 - 0x7d], cl ; ret 0x4801
0x000000000053be65 : adc byte ptr [r8], al ; add byte ptr [rax], al ; add al, ch ; ret 0x1456
0x000000000055ecd8 : adc byte ptr [r8], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006b3729 : adc byte ptr [r9 - 0x75], r9b ; push rax ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000523640 : adc byte ptr [r9 - 0x77], cl ; fisttp qword ptr [rax - 0x77] ; ret
0x000000000048efb5 : adc byte ptr [r9 - 0x77], r9b ; ret
0x00000000004fc69a : adc byte ptr [r9 - 0x7d], al ; call qword ptr [rdx]
0x0000000000501955 : adc byte ptr [r9], al ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000440d4e : adc byte ptr [r9], dil ; ret 0x1b7c
0x0000000000440d2e : adc byte ptr [r9], dil ; ret 0x538b
0x000000000051f4fc : adc byte ptr [r9], r15b ; ret
0x000000000051eece : adc byte ptr [r9], r15b ; retf
0x0000000000664826 : adc byte ptr [rax + 0x29], cl ; retf 0x148
0x00000000004a7c83 : adc byte ptr [rax + 0x29], cl ; ror dword ptr [rax - 0x77], 1 ; retf -0x49f1
0x00000000004b2e07 : adc byte ptr [rax + 0x29], cl ; ror dword ptr [rax - 0x77], 1 ; retf 0x148
0x00000000004bd13d : adc byte ptr [rax + 0x39], cl ; ret 0x1575
0x0000000000411269 : adc byte ptr [rax + 0x39], cl ; ret 0x2275
0x000000000040efd0 : adc byte ptr [rax + 0x39], cl ; ret 0x2c74
0x0000000000450643 : adc byte ptr [rax + 0x39], cl ; ret 0x4975
0x000000000061b9e4 : adc byte ptr [rax + 0x39], cl ; ret 0x5e75
0x000000000045635c : adc byte ptr [rax + 0x39], cl ; ret 0x774
0x0000000000451a7b : adc byte ptr [rax + 0x39], cl ; ret 0x775
0x0000000000541d25 : adc byte ptr [rax + 0x39], cl ; ret 0x8c0f
0x0000000000412410 : adc byte ptr [rax + 0x39], cl ; ret 0x940f
0x00000000006a42a7 : adc byte ptr [rax + 0x39], cl ; ret 0x974
0x00000000004123e5 : adc byte ptr [rax + 0x39], cl ; ret 0xa74
0x000000000041242b : adc byte ptr [rax + 0x39], cl ; ret 0xa75
0x00000000006a460b : adc byte ptr [rax + 0x39], cl ; ret 0xe775
0x000000000066c6c6 : adc byte ptr [rax + 0x39], cl ; retf -0x1b8b
0x00000000006c6d4e : adc byte ptr [rax + 0x39], cl ; sal byte ptr [rbp - 0x14], 1 ; ret
0x000000000066bd16 : adc byte ptr [rax + 0x39], cl ; sal byte ptr [rbp - 0x1c], 1 ; ret
0x0000000000517dae : adc byte ptr [rax + 0x48157501], bpl ; mov esi, ebx ; call rax
0x0000000000517daf : adc byte ptr [rax + 0x48157501], ch ; mov esi, ebx ; call rax
0x000000000051123f : adc byte ptr [rax + 0x5588c145], cl ; ret 0xe7e8
0x000000000052417c : adc byte ptr [rax + 0x63], cl ; add al, 0x39 ; ret 0x217f
0x0000000000525b08 : adc byte ptr [rax + 0x63], cl ; add al, 0x39 ; ret 0x5f7e
0x000000000050aaf7 : adc byte ptr [rax + 0x63], cl ; add al, 0x39 ; ret 0x607e
0x0000000000519981 : adc byte ptr [rax + 0x63], cl ; add al, 0x39 ; ret 0x667e
0x000000000055e155 : adc byte ptr [rax + 0x63], cl ; add al, 0x39 ; ret 0x8e0f
0x00000000006719f5 : adc byte ptr [rax + 0x63], cl ; add al, 0x39 ; retf 0x717f
0x000000000051a67e : adc byte ptr [rax + 0x63], cl ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000587000 : adc byte ptr [rax + 0x63], cl ; fimul word ptr [rcx - 0x17157622] ; ret
0x000000000060297b : adc byte ptr [rax + 0x63], cl ; ret
0x00000000006bb43f : adc byte ptr [rax + 0x63], cl ; ret 0x2b48
0x00000000004977dd : adc byte ptr [rax + 0x63], cl ; retf -0x74b7
0x0000000000619dbc : adc byte ptr [rax + 0xa], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000006b3baa : adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x148
0x000000000066b16f : adc byte ptr [rax + 5], cl ; loopne 0x66b17c ; add byte ptr [rax], al ; ret
0x0000000000664b1b : adc byte ptr [rax + 9], cl ; rol byte ptr [rcx + 0x5f], 1 ; ret
0x000000000056f9a8 : adc byte ptr [rax + rsi*2], al ; mov rdi, rbx ; call rax
0x000000000073e99c : adc byte ptr [rax - 0x1e], dh ; call rax
0x000000000073dc1c : adc byte ptr [rax - 0x1f], dl ; jmp rax
0x000000000073c6e4 : adc byte ptr [rax - 0x21], bh ; call qword ptr [rax]
0x000000000074d4a8 : adc byte ptr [rax - 0x34], dh ; call rcx
0x000000000051341e : adc byte ptr [rax - 0x58000000], 1 ; jne 0x513432 ; jmp rax
0x00000000006ad4f8 : adc byte ptr [rax - 0x68], cl ; mov qword ptr [rdx + rax*8 - 8], rcx ; ret
0x000000000067615f : adc byte ptr [rax - 0x75], cl ; adc al, 1 ; add byte ptr [rax], al ; ret
0x00000000004642dd : adc byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x39], cl ; ret 0x940f
0x00000000005f7632 : adc byte ptr [rax - 0x75], cl ; add eax, 0x40b2ae ; call rax
0x00000000005ecb60 : adc byte ptr [rax - 0x75], cl ; add eax, 0x415d80 ; call rax
0x00000000005e9812 : adc byte ptr [rax - 0x75], cl ; add eax, 0x4190ce ; call rax
0x00000000004bbbd8 : adc byte ptr [rax - 0x75], cl ; add eax, 0x546d08 ; call rax
0x0000000000455a01 : adc byte ptr [rax - 0x75], cl ; add eax, 0x5acedf ; call rax
0x0000000000452ac4 : adc byte ptr [rax - 0x75], cl ; add eax, 0x5afe1c ; call rax
0x000000000040b9a0 : adc byte ptr [rax - 0x75], cl ; add eax, 0x5f6f40 ; call rax
0x00000000006168fe : adc byte ptr [rax - 0x75], cl ; fmul st(1) ; ret
0x000000000055ba40 : adc byte ptr [rax - 0x75], cl ; je 0x55ba71 ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000055bc40 : adc byte ptr [rax - 0x75], cl ; je 0x55bc71 ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000055be40 : adc byte ptr [rax - 0x75], cl ; je 0x55be71 ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000055c040 : adc byte ptr [rax - 0x75], cl ; je 0x55c071 ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000055c5b0 : adc byte ptr [rax - 0x75], cl ; je 0x55c5e1 ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000005652ec : adc byte ptr [rax - 0x75], cl ; je 0x56531d ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000005c66e0 : adc byte ptr [rax - 0x75], cl ; je 0x5c6711 ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000068717b : adc byte ptr [rax - 0x75], cl ; je 0x6871ac ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000004f01ad : adc byte ptr [rax - 0x75], cl ; mov r8d, 0x3904408b ; ret 0x277e
0x000000000053b2fd : adc byte ptr [rax - 0x75], cl ; or byte ptr [rax + 0x39], cl ; ret 0x597e
0x000000000053ae9e : adc byte ptr [rax - 0x75], cl ; or byte ptr [rax + 0x39], cl ; ret 0xe7f
0x00000000004ec41e : adc byte ptr [rax - 0x75], cl ; or byte ptr [rcx - 0x77], cl ; retf -0x2877
0x000000000051aa2d : adc byte ptr [rax - 0x75], cl ; push rdx ; xor dh, dh ; ret 0xf01
0x00000000006760df : adc byte ptr [rax - 0x75], cl ; sbb al, 1 ; add byte ptr [rax], al ; ret
0x00000000004c9df3 : adc byte ptr [rax - 0x75], cl ; test al, 0x8b ; add al, 0x39 ; ret 0x277e
0x00000000005091b7 : adc byte ptr [rax - 0x77], cl ; clc ; add rsp, 8 ; ret
0x0000000000517f36 : adc byte ptr [rax - 0x77], cl ; clc ; mov edx, esi ; jg 0x517f48 ; ret
0x000000000056f776 : adc byte ptr [rax - 0x77], cl ; clc ; mov edx, esi ; jg 0x56f788 ; ret
0x0000000000584026 : adc byte ptr [rax - 0x77], cl ; clc ; mov edx, esi ; jg 0x584038 ; ret
0x00000000005841a6 : adc byte ptr [rax - 0x77], cl ; clc ; mov edx, esi ; jg 0x5841b8 ; ret
0x000000000059c0d6 : adc byte ptr [rax - 0x77], cl ; clc ; mov edx, esi ; jg 0x59c0e8 ; ret
0x000000000052a95d : adc byte ptr [rax - 0x77], cl ; fbstp dword ptr [rcx] ; shr al, 0x78 ; call qword ptr [rdi]
0x000000000054db36 : adc byte ptr [rax - 0x77], cl ; jg 0x54db4c ; jne 0x54db49 ; xor eax, eax ; ret
0x000000000052220c : adc byte ptr [rax - 0x77], cl ; jo 0x522221 ; mov qword ptr [rsi], rax ; ret
0x000000000052220b : adc byte ptr [rax - 0x77], cl ; jo 0x522222 ; mov qword ptr [rsi], rax ; ret
0x000000000052243c : adc byte ptr [rax - 0x77], cl ; jo 0x522459 ; mov qword ptr [rsi], rax ; ret
0x000000000052243b : adc byte ptr [rax - 0x77], cl ; jo 0x52245a ; mov qword ptr [rsi], rax ; ret
0x000000000052720c : adc byte ptr [rax - 0x77], cl ; jo 0x527221 ; mov qword ptr [rsi], rax ; ret
0x000000000052720b : adc byte ptr [rax - 0x77], cl ; jo 0x527222 ; mov qword ptr [rsi], rax ; ret
0x000000000052743c : adc byte ptr [rax - 0x77], cl ; jo 0x527459 ; mov qword ptr [rsi], rax ; ret
0x000000000052743b : adc byte ptr [rax - 0x77], cl ; jo 0x52745a ; mov qword ptr [rsi], rax ; ret
0x0000000000542bdc : adc byte ptr [rax - 0x77], cl ; jo 0x542bf1 ; mov qword ptr [rsi], rax ; ret
0x0000000000542bdb : adc byte ptr [rax - 0x77], cl ; jo 0x542bf2 ; mov qword ptr [rsi], rax ; ret
0x0000000000542e0c : adc byte ptr [rax - 0x77], cl ; jo 0x542e29 ; mov qword ptr [rsi], rax ; ret
0x0000000000542e0b : adc byte ptr [rax - 0x77], cl ; jo 0x542e2a ; mov qword ptr [rsi], rax ; ret
0x00000000005670fc : adc byte ptr [rax - 0x77], cl ; jo 0x567111 ; mov qword ptr [rsi], rax ; ret
0x00000000005670fb : adc byte ptr [rax - 0x77], cl ; jo 0x567112 ; mov qword ptr [rsi], rax ; ret
0x000000000056732c : adc byte ptr [rax - 0x77], cl ; jo 0x567349 ; mov qword ptr [rsi], rax ; ret
0x000000000056732b : adc byte ptr [rax - 0x77], cl ; jo 0x56734a ; mov qword ptr [rsi], rax ; ret
0x0000000000590e4c : adc byte ptr [rax - 0x77], cl ; jo 0x590e61 ; mov qword ptr [rsi], rax ; ret
0x0000000000590e4b : adc byte ptr [rax - 0x77], cl ; jo 0x590e62 ; mov qword ptr [rsi], rax ; ret
0x000000000059107c : adc byte ptr [rax - 0x77], cl ; jo 0x591099 ; mov qword ptr [rsi], rax ; ret
0x000000000059107b : adc byte ptr [rax - 0x77], cl ; jo 0x59109a ; mov qword ptr [rsi], rax ; ret
0x00000000005a973c : adc byte ptr [rax - 0x77], cl ; jo 0x5a9751 ; mov qword ptr [rsi], rax ; ret
0x00000000005a973b : adc byte ptr [rax - 0x77], cl ; jo 0x5a9752 ; mov qword ptr [rsi], rax ; ret
0x00000000005a996c : adc byte ptr [rax - 0x77], cl ; jo 0x5a9989 ; mov qword ptr [rsi], rax ; ret
0x00000000005a996b : adc byte ptr [rax - 0x77], cl ; jo 0x5a998a ; mov qword ptr [rsi], rax ; ret
0x000000000054a093 : adc byte ptr [rax - 0x77], cl ; js 0x54a0a5 ; ret
0x000000000067611f : adc byte ptr [rax - 0x77], cl ; mov eax, 0x1d0 ; ret
0x000000000067605f : adc byte ptr [rax - 0x77], cl ; mov eax, 0x1d8 ; ret
0x00000000006c23d9 : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000004f7970 : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000526fff : adc byte ptr [rax - 0x77], cl ; ret 0x6348
0x00000000006a1f96 : adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000048d5fb : adc byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000004bddf4 : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000004c9f99 : adc byte ptr [rax - 0x77], cl ; retf
0x00000000006b411d : adc byte ptr [rax - 0x77], cl ; retf 0x2948
0x000000000040ed6e : adc byte ptr [rax - 0x77], cl ; retf 0x5d90
0x000000000067104c : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0
0x000000000052223e : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xc], cl ; ret
0x00000000005190c3 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + rax + 0x5b], cl ; ret
0x0000000000581893 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + rax - 0x75], 0 ; ret
0x000000000054e178 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rcx + 0x48], cl ; mov eax, edi ; ret
0x0000000000577c41 : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000537477 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000537476 : adc byte ptr [rax - 0x7d], r9b ; ret 0x4801
0x00000000007471ac : adc byte ptr [rax - 0xc], dh ; call rax
0x0000000000747064 : adc byte ptr [rax - 0xc], dl ; jmp rax
0x000000000050bd57 : adc byte ptr [rax], 0x6f ; add byte ptr [rax - 0x77], cl ; ja 0x50bd6f ; ret
0x00000000007b07a0 : adc byte ptr [rax], 0xee ; call qword ptr [rax]
0x000000000053be66 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x1456
0x0000000000525538 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054dc72 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000576097 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x0000000000532167 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x26], dh ; ret
0x00000000004511b3 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add cl, cl ; ret
0x000000000043232e : adc byte ptr [rax], al ; add byte ptr [rax], al ; call 0x6be5d6
0x00000000004f43e1 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000006a8b21 : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000006cdf7a : adc byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd089
0x00000000007e57ba : adc byte ptr [rax], al ; add byte ptr [rsi + 5], bl ; retf 0x101
0x0000000000581656 : adc byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000000000055ecd9 : adc byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000057e4e9 : adc byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000007d496e : adc byte ptr [rax], al ; call qword ptr [rax]
0x00000000007f4d79 : adc byte ptr [rax], al ; cmc ; syscall
0x00000000007f0261 : adc byte ptr [rax], al ; cwde ; syscall
0x00000000007ee674 : adc byte ptr [rax], al ; fisttp dword ptr [rdi] ; add byte ptr [rax], al ; add ah, bh ; syscall
0x00000000007e6524 : adc byte ptr [rax], al ; in al, dx ; syscall
0x00000000005280ce : adc byte ptr [rax], al ; je 0x5280df ; add rsp, 0x28 ; ret
0x0000000000543a5d : adc byte ptr [rax], al ; je 0x543a6e ; add rsp, 0x28 ; ret
0x000000000054e810 : adc byte ptr [rax], al ; je 0x54e826 ; xor eax, eax ; ret
0x00000000005632b3 : adc byte ptr [rax], al ; je 0x5632c4 ; ret
0x00000000006a4323 : adc byte ptr [rax], al ; je 0x6a4334 ; ret
0x00000000007f5607 : adc byte ptr [rax], al ; loopne 0x7f5623 ; add eax, 0xfb001085 ; syscall
0x0000000000575e77 : adc byte ptr [rax], al ; mov ebx, eax ; call qword ptr [rip + 0x48ca67]
0x000000000058233f : adc byte ptr [rax], al ; mov edi, 0x20 ; call 0x6be5d9
0x00000000007f0267 : adc byte ptr [rax], al ; mov esp, 0xffe050f ; add dh, al ; syscall
0x000000000040b35d : adc byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f757a] ; call rax
0x00000000005b05e9 : adc byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000057c8ad : adc byte ptr [rax], al ; mov rbp, rax ; jmp 0x57c87d
0x000000000057c8ac : adc byte ptr [rax], al ; mov rbp, rax ; jmp 0x57c87e
0x000000000057c8ab : adc byte ptr [rax], al ; mov rbp, rax ; jmp 0x57c87f
0x000000000057851f : adc byte ptr [rax], al ; mov rdi, rbp ; call 0x6d4747
0x000000000057e689 : adc byte ptr [rax], al ; nop ; nop dword ptr [rax] ; ret
0x000000000059ec10 : adc byte ptr [rax], al ; nop word ptr [rax + rax] ; pop rbx ; ret
0x00000000005b8958 : adc byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000007e6393 : adc byte ptr [rax], al ; ret
0x00000000007cdc1a : adc byte ptr [rax], al ; ret 0xcc07
0x00000000007ca86e : adc byte ptr [rax], al ; retf
0x0000000000668cc6 : adc byte ptr [rax], al ; retf 0x3b9a
0x00000000007f885b : adc byte ptr [rax], al ; retf 0x501
0x00000000007cb71e : adc byte ptr [rax], al ; retf 0x911
0x00000000005632a4 : adc byte ptr [rax], al ; setne al ; pop rbx ; ret
0x00000000006a32e3 : adc byte ptr [rax], al ; setne al ; ret
0x00000000005923a3 : adc byte ptr [rax], al ; shr eax, 0x1f ; add rsp, 8 ; ret
0x00000000007cc589 : adc byte ptr [rax], al ; std ; syscall
0x00000000007f560d : adc byte ptr [rax], al ; sti ; syscall
0x00000000007cc595 : adc byte ptr [rax], al ; xchg eax, ebx ; adc byte ptr [rsi], al ; ret 0x10
0x00000000007e6195 : adc byte ptr [rax], al ; xchg eax, edx ; syscall
0x00000000005730ca : adc byte ptr [rax], al ; xor eax, eax ; mov rdi, rbx ; call 0x67fb5b
0x00000000005a56da : adc byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000739958 : adc byte ptr [rax], bl ; add eax, dword ptr [rax] ; retf -0x2789
0x00000000004817e2 : adc byte ptr [rax], bl ; call rax
0x0000000000648792 : adc byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000007e57b9 : adc byte ptr [rax], r8b ; add byte ptr [rsi + 5], bl ; retf 0x101
0x000000000054da2c : adc byte ptr [rbp + 0x18], ch ; add byte ptr [rax - 0x77], cl ; ret
0x000000000068fa1a : adc byte ptr [rbp + 0x480974d2], al ; mov eax, dword ptr [rax + 0x50] ; ret
0x000000000059eba5 : adc byte ptr [rbp + 0x5bb67fc0], al ; ret
0x000000000069f2ba : adc byte ptr [rbp + 0x63480151], cl ; retf -0x77c0
0x000000000058ef39 : adc byte ptr [rbp + 0x63480151], cl ; retf 0x3489
0x00000000006cf482 : adc byte ptr [rbp + 0xb], dh ; xor eax, eax ; ret
0x00000000006d36d1 : adc byte ptr [rbp + 0xf], cl ; retf 0x14d
0x00000000006a0c10 : adc byte ptr [rbp - 0x13], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006c9df6 : adc byte ptr [rbp - 0x25], dh ; ret
0x00000000005d3376 : adc byte ptr [rbp - 0x3f61f040], al ; nop ; pop rbp ; ret
0x0000000000517ee2 : adc byte ptr [rbp - 0x3f61f040], al ; ret
0x0000000000542a03 : adc byte ptr [rbp - 0x3f], dh ; test rdx, rdx ; jne 0x5429f5 ; ret
0x00000000005a5573 : adc byte ptr [rbp - 0x3f], dh ; test rdx, rdx ; jne 0x5a5565 ; ret
0x00000000005aee09 : adc byte ptr [rbp - 0x77], cl ; ret 0xc148
0x0000000000663735 : adc byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x95 ; ret 0x7983
0x000000000074702c : adc byte ptr [rbp - 0xc], cl ; jmp rax
0x000000000067b8ec : adc byte ptr [rbx + 0x38], dh ; add byte ptr [rbx + 0x480f02c0], al ; ret 0x9848
0x00000000006b6e6d : adc byte ptr [rbx + 0x416601c0], al ; mov dword ptr [rdx + 0x22], eax ; ret
0x00000000005ced3b : adc byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000040b2f0 : adc byte ptr [rbx + 0x41], bl ; pop rsp ; pop rbp ; ret
0x000000000058ef36 : adc byte ptr [rbx + 0x518d104f], cl ; add dword ptr [rax + 0x63], ecx ; retf 0x3489
0x000000000070c9d0 : adc byte ptr [rbx + 0x58], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; retf 0x70
0x000000000055cb2f : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x000000000055c687 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004f6e5f : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004f76f4 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000067075f : adc byte ptr [rbx + 0xc7880], al ; add byte ptr [rcx], al ; ret
0x000000000066b12f : adc byte ptr [rbx + 0xc9080], al ; add byte ptr [rcx], al ; ret
0x00000000004e4352 : adc byte ptr [rbx + 0xfd03912], cl ; ret 0xc085
0x00000000006c7dba : adc byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax] ; ret
0x00000000004c3c97 : adc byte ptr [rbx - 0x3f7cf3c0], cl ; add dword ptr [rcx], edi ; ret 0x4d0f
0x00000000006c4c81 : adc byte ptr [rbx - 0x6bf0fe05], al ; ret 0x8440
0x00000000005262bc : adc byte ptr [rbx - 0x76b7ffe7], al ; ret
0x000000000062ac2c : adc byte ptr [rbx - 0x76b7fff6], bl ; ret
0x000000000073d80c : adc byte ptr [rbx], 0xe1 ; jmp rax
0x000000000073e414 : adc byte ptr [rbx], 0xe2 ; call rax
0x00000000007f2135 : adc byte ptr [rbx], 5 ; ret
0x000000000077c735 : adc byte ptr [rbx], al ; add byte ptr [rax], bl ; jl 0x77c71e ; call qword ptr [rsi]
0x00000000007f886d : adc byte ptr [rbx], al ; add byte ptr [rdx], 0x12 ; ret
0x0000000000451830 : adc byte ptr [rbx], bl ; call rax
0x000000000056ce83 : adc byte ptr [rbx], dh ; jo 0x56ce90 ; mov esi, 0x703358 ; call rax
0x00000000006c3082 : adc byte ptr [rbx], dh ; mov rdi, r15 ; call rax
0x00000000006c2c67 : adc byte ptr [rbx], dh ; mov rdi, rbx ; call rax
0x00000000006c3081 : adc byte ptr [rbx], sil ; mov rdi, r15 ; call rax
0x00000000006c2c66 : adc byte ptr [rbx], sil ; mov rdi, rbx ; call rax
0x0000000000632234 : adc byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000043be2f : adc byte ptr [rcx + 0x5c], al ; pop r13 ; pop rbp ; ret
0x00000000005dcb6a : adc byte ptr [rcx + 0x63], cl ; ret 0x8948
0x00000000006079f7 : adc byte ptr [rcx + 0x75182454], cl ; ret 0xf883
0x000000000051be9c : adc byte ptr [rcx + 0x7fc239d3], cl ; xor byte ptr [rax - 0x77], cl ; retf -0x2177
0x00000000005121a9 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000007452d4 : adc byte ptr [rcx - 0x11], dl ; jmp rax
0x00000000007900c0 : adc byte ptr [rcx - 0x1e], cl ; jmp qword ptr [rbx]
0x00000000006bdb79 : adc byte ptr [rcx - 0x3b7cb728], cl ; push rax ; pop rbx ; ret
0x00000000006a613f : adc byte ptr [rcx - 0x3b7cb730], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000006b372a : adc byte ptr [rcx - 0x75], cl ; push rax ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000006bb7af : adc byte ptr [rcx - 0x77], al ; ret 0x8f0f
0x0000000000523641 : adc byte ptr [rcx - 0x77], cl ; fisttp qword ptr [rax - 0x77] ; ret
0x000000000048efb6 : adc byte ptr [rcx - 0x77], cl ; ret
0x00000000004fc69b : adc byte ptr [rcx - 0x7d], al ; call qword ptr [rdx]
0x00000000006b3d50 : adc byte ptr [rcx - 0x7d], cl ; ret
0x000000000046eb15 : adc byte ptr [rcx], ah ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000687f52 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000501956 : adc byte ptr [rcx], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000053b1e7 : adc byte ptr [rcx], al ; ret
0x000000000051f4fd : adc byte ptr [rcx], bh ; ret
0x00000000004ca6a7 : adc byte ptr [rcx], bh ; ret 0x147e
0x0000000000440d4f : adc byte ptr [rcx], bh ; ret 0x1b7c
0x00000000005ceb0d : adc byte ptr [rcx], bh ; ret 0x2b7e
0x00000000005ce266 : adc byte ptr [rcx], bh ; ret 0x2c7e
0x00000000005d1d6e : adc byte ptr [rcx], bh ; ret 0x487e
0x0000000000440d2f : adc byte ptr [rcx], bh ; ret 0x538b
0x00000000005d8d9c : adc byte ptr [rcx], bh ; ret 0x57f
0x00000000005cfb63 : adc byte ptr [rcx], bh ; ret 0x8e0f
0x00000000005d2cdb : adc byte ptr [rcx], bh ; ret 0x8f0f
0x00000000005d7e0f : adc byte ptr [rcx], bh ; ret 0x97e
0x00000000004b9ae0 : adc byte ptr [rcx], bh ; ret 0xa74
0x00000000005cd8c4 : adc byte ptr [rcx], bh ; ret 0xb74
0x00000000005d45fd : adc byte ptr [rcx], bh ; ret 0xb7d
0x000000000051eecf : adc byte ptr [rcx], bh ; retf
0x000000000050db68 : adc byte ptr [rcx], bh ; retf -0x70f1
0x000000000065ea49 : adc byte ptr [rcx], ch ; ret 0x8b41
0x000000000062d530 : adc byte ptr [rcx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000073d76c : adc byte ptr [rcx], cl ; call qword ptr [rax]
0x00000000006c96ce : adc byte ptr [rcx], cl ; enter -0x1d3f, 0x18 ; or eax, edx ; ret
0x0000000000591797 : adc byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000005438b2 : adc byte ptr [rcx], dh ; shr al, 0x98 ; ret 0x13
0x00000000005438a6 : adc byte ptr [rcx], dh ; shr al, 0xa2 ; ret 0x13
0x00000000004ca6a6 : adc byte ptr [rcx], dil ; ret 0x147e
0x00000000005ceb0c : adc byte ptr [rcx], dil ; ret 0x2b7e
0x00000000005ce265 : adc byte ptr [rcx], dil ; ret 0x2c7e
0x00000000005d1d6d : adc byte ptr [rcx], dil ; ret 0x487e
0x00000000005d8d9b : adc byte ptr [rcx], dil ; ret 0x57f
0x00000000005cfb62 : adc byte ptr [rcx], dil ; ret 0x8e0f
0x00000000005d2cda : adc byte ptr [rcx], dil ; ret 0x8f0f
0x00000000005d7e0e : adc byte ptr [rcx], dil ; ret 0x97e
0x00000000004b9adf : adc byte ptr [rcx], dil ; ret 0xa74
0x00000000005cd8c3 : adc byte ptr [rcx], dil ; ret 0xb74
0x00000000005d45fc : adc byte ptr [rcx], dil ; ret 0xb7d
0x00000000004f18c6 : adc byte ptr [rcx], dl ; call rax
0x000000000046eb14 : adc byte ptr [rcx], r12b ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005654b9 : adc byte ptr [rcx], r15b ; ret
0x000000000053ed42 : adc byte ptr [rdi + 1], bh ; ret
0x000000000079f840 : adc byte ptr [rdi - 0x18], ah ; jmp qword ptr [rdi]
0x0000000000740544 : adc byte ptr [rdi - 0x1b], ch ; call rax
0x000000000073e79c : adc byte ptr [rdi - 0x1e], cl ; jmp qword ptr [rax]
0x000000000073b8bc : adc byte ptr [rdi - 0x22], al ; jmp qword ptr [rax]
0x00000000004b3ebc : adc byte ptr [rdi - 0x76b7ffe0], ah ; ret 0x8948
0x000000000079ae60 : adc byte ptr [rdi], al ; jmp qword ptr [rcx]
0x00000000004f74c2 : adc byte ptr [rdi], al ; sete al ; ret
0x00000000004118e4 : adc byte ptr [rdi], bl ; call rax
0x000000000050bd58 : adc byte ptr [rdi], ch ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000686d51 : adc byte ptr [rdi], cl ; fidivr dword ptr [rcx] ; enter 0x777c, -0x77 ; ret 0xca29
0x000000000053e8c0 : adc byte ptr [rdi], cl ; lahf ; ret 0xd184
0x00000000006c9dba : adc byte ptr [rdi], cl ; mov dh, 0xc0 ; mov dword ptr [rsi + 0xc], eax ; ret
0x00000000006b9710 : adc byte ptr [rdi], cl ; ret 0x8d41
0x00000000005cb20c : adc byte ptr [rdi], cl ; ret 0x9589
0x00000000006a5c61 : adc byte ptr [rdi], cl ; wait ; ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000006a55fd : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2574
0x00000000005c0422 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8444
0x00000000004fda1a : adc byte ptr [rdx + 0x6ede40], bh ; mov rdi, rbx ; call rax
0x000000000050b0f7 : adc byte ptr [rdx + 0x6ef540], bh ; mov rdi, r12 ; call rax
0x00000000005074b6 : adc byte ptr [rdx + 0x6ef560], bh ; mov rdi, rbx ; call rax
0x0000000000521617 : adc byte ptr [rdx + 0x6f2680], bh ; mov rdi, rbx ; call rax
0x000000000052a7d3 : adc byte ptr [rdx + 0x6f2690], bh ; mov rdi, rbp ; call rax
0x000000000051dd1b : adc byte ptr [rdx + 0x6f2690], bh ; mov rdi, rbx ; call rax
0x000000000052a72f : adc byte ptr [rdx + 0x6f26a0], bh ; mov rdi, rbp ; call rax
0x000000000051dd9e : adc byte ptr [rdx + 0x6f26a0], bh ; mov rdi, rbx ; call rax
0x0000000000521646 : adc byte ptr [rdx + 0x6f4510], bh ; mov rdi, rbx ; call rax
0x00000000005384a8 : adc byte ptr [rdx + 0x6f9200], bh ; mov rdi, rbx ; call rax
0x000000000053857c : adc byte ptr [rdx + 0x6f92f0], bh ; mov rdi, rbx ; call rax
0x000000000053e9fd : adc byte ptr [rdx + 0x6fa4c0], bh ; mov rdi, r15 ; call rax
0x000000000053e304 : adc byte ptr [rdx + 0x6fa4c0], bh ; mov rdi, rbx ; call rax
0x000000000053e37c : adc byte ptr [rdx + 0x6fa4d0], bh ; mov rdi, rbx ; call rax
0x000000000054018e : adc byte ptr [rdx + 0x6fa720], bh ; mov rdi, rbx ; call rax
0x000000000054010b : adc byte ptr [rdx + 0x6fa730], bh ; mov rdi, rbx ; call rax
0x000000000055572a : adc byte ptr [rdx + 0x6fe660], bh ; mov rdi, rbx ; call rax
0x000000000056421e : adc byte ptr [rdx + 0x701f80], bh ; mov rdi, rbx ; call rax
0x000000000056419b : adc byte ptr [rdx + 0x701f90], bh ; mov rdi, rbx ; call rax
0x000000000056f872 : adc byte ptr [rdx + 0x704400], bh ; mov rdi, r13 ; call rax
0x000000000058a263 : adc byte ptr [rdx + 0x7070c0], bh ; mov rdi, r12 ; call rax
0x0000000000588aee : adc byte ptr [rdx + 0x7070c0], bh ; mov rdi, rbx ; call rax
0x0000000000588a6b : adc byte ptr [rdx + 0x7070d0], bh ; mov rdi, rbx ; call rax
0x00000000005a7d2b : adc byte ptr [rdx + 0x70fa40], bh ; mov rdi, rbx ; call rax
0x00000000005a7dae : adc byte ptr [rdx + 0x70fa50], bh ; mov rdi, rbx ; call rax
0x000000000060708e : adc byte ptr [rdx + 0x718060], bh ; mov rdi, r14 ; call rax
0x000000000062a55f : adc byte ptr [rdx + 0x71bbc0], bh ; mov rdi, r12 ; call rax
0x000000000062640a : adc byte ptr [rdx + 0x71bbe0], bh ; mov rdi, rbx ; call rax
0x000000000065c504 : adc byte ptr [rdx + 0x71fe90], bh ; mov rdi, rbx ; call rax
0x00000000006c14ed : adc byte ptr [rdx + 0x730d00], bh ; call rax
0x00000000006c22e2 : adc byte ptr [rdx + 0x730f20], bh ; mov rdi, rbp ; call rax
0x0000000000770ff4 : adc byte ptr [rdx + 0xe], al ; or byte ptr [rbx + rcx + 2], al ; ret 0xe0a
0x000000000074400c : adc byte ptr [rdx - 0x13], bl ; jmp qword ptr [rax]
0x00000000006563bc : adc byte ptr [rdx - 0x76b7fffa], al ; ret
0x00000000006b6c74 : adc byte ptr [rdx - 0x78], al ; add r10b, byte ptr [rcx] ; ret
0x00000000007467cc : adc byte ptr [rdx - 0xd], ah ; jmp rax
0x00000000007cbb01 : adc byte ptr [rdx - 0xe], 0xe ; ret 0x69
0x00000000007492e4 : adc byte ptr [rdx - 9], ch ; jmp rax
0x000000000043bee8 : adc byte ptr [rdx], ah ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000049f5d3 : adc byte ptr [rdx], ah ; add cl, cl ; ret
0x00000000005e18b8 : adc byte ptr [rdx], al ; call rax
0x00000000007e872f : adc byte ptr [rdx], al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; adc eax, dword ptr [rax] ; call qword ptr [rax]
0x00000000007a7900 : adc byte ptr [rdx], al ; in al, dx ; jmp rdi
0x00000000007f980d : adc byte ptr [rdx], bl ; add byte ptr [rax], al ; sub al, 0x31 ; ret 0x101
0x000000000074b62c : adc byte ptr [rdx], dl ; cli ; jmp qword ptr [rax]
0x00000000006774b5 : adc byte ptr [rip + 0x484ed46a], al ; add eax, ebx ; pop rbx ; ret
0x00000000006a47d2 : adc byte ptr [rip + 0x73248], al ; ret
0x00000000006a4762 : adc byte ptr [rip + 0x73c34], al ; ret
0x00000000006822f2 : adc byte ptr [rip + 0x95728], al ; ret
0x0000000000683fda : adc byte ptr [rip + 0xa4770], al ; ret
0x000000000079c7dd : adc byte ptr [rip - 0x184a9800], al ; call rsp
0x000000000063182e : adc byte ptr [rip - 0x3b7cb800], bh ; sbb byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000007cb5de : adc byte ptr [rip - 0x54faed28], al ; adc byte ptr [rsi], cl ; ret
0x00000000007cc592 : adc byte ptr [rip - 0x6cffef39], al ; adc byte ptr [rsi], al ; ret 0x10
0x00000000004d28e0 : adc byte ptr [rip - 0x70410000], cl ; ret 0x6e
0x000000000042b8bc : adc byte ptr [rip - 0x76b7ffd7], ch ; ret 0x8948
0x00000000006b7adf : adc byte ptr [rsi + 0x39], ah ; ret 0xf41
0x0000000000519f00 : adc byte ptr [rsi + 0xd], bh ; add edx, 1 ; ret
0x0000000000682d1c : adc byte ptr [rsi + 0xf], ah ; push rsp ; ret
0x000000000053e6c2 : adc byte ptr [rsi + 2], bh ; mov dword ptr [rax], edx ; add rsp, 8 ; ret
0x000000000074a230 : adc byte ptr [rsi + 8], 0 ; add bh, cl ; clc ; call rax
0x000000000061e4d4 : adc byte ptr [rsi + rdi], al ; call rax
0x00000000007439f4 : adc byte ptr [rsi - 0x14], al ; jmp qword ptr [rax]
0x000000000053e88f : adc byte ptr [rsi - 0x77], ah ; ret
0x000000000045f659 : adc byte ptr [rsi], ah ; add cl, cl ; ret
0x0000000000742db1 : adc byte ptr [rsi], al ; add ah, cl ; shr edx, cl ; call qword ptr [rax]
0x00000000007cc598 : adc byte ptr [rsi], al ; ret 0x10
0x00000000007e687c : adc byte ptr [rsi], al ; salc ; adc al, byte ptr [rax] ; retf 0xe10
0x000000000062188a : adc byte ptr [rsi], bh ; add bh, bh ; ror cl, 1 ; ret
0x0000000000743ebc : adc byte ptr [rsi], cl ; in eax, dx ; jmp rax
0x00000000007cb5e4 : adc byte ptr [rsi], cl ; ret
0x00000000004a18e2 : adc byte ptr [rsi], dl ; call rax
0x00000000007c5358 : adc byte ptr [rsi], dl ; retf
0x000000000068209c : adc byte ptr [rsp + 0x18], al ; add rsp, 0x28 ; ret
0x00000000006a47ac : adc byte ptr [rsp + 0x1c], al ; add rsp, 0x28 ; ret
0x0000000000681f06 : adc byte ptr [rsp + 0x28], al ; add rsp, 0x38 ; ret
0x0000000000683090 : adc byte ptr [rsp + 0x38], al ; add rsp, 0x48 ; ret
0x0000000000682b2a : adc byte ptr [rsp + 8], al ; add rsp, 0x18 ; ret
0x0000000000526f49 : adc byte ptr [rsp + rax - 0x3d], bh ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000051232c : adc byte ptr [rsp + rbx], ah ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000682ade : adc byte ptr [rsp - 0x10], al ; ret
0x00000000006a4fd8 : adc byte ptr [rsp - 0x18], dl ; movapd xmm0, xmm2 ; ret
0x00000000006c0e50 : adc byte ptr [rsp], al ; add rsp, 0x18 ; ret
0x0000000000581655 : adc byte ptr fs:[rax], al ; add rsp, 0x28 ; ret
0x0000000000541d24 : adc byte ptr gs:[rax + 0x39], cl ; ret 0x8c0f
0x00000000005ecb5f : adc byte ptr gs:[rax - 0x75], cl ; add eax, 0x415d80 ; call rax
0x00000000005e9811 : adc byte ptr gs:[rax - 0x75], cl ; add eax, 0x4190ce ; call rax
0x00000000004bbbd7 : adc byte ptr gs:[rax - 0x75], cl ; add eax, 0x546d08 ; call rax
0x0000000000455a00 : adc byte ptr gs:[rax - 0x75], cl ; add eax, 0x5acedf ; call rax
0x0000000000452ac3 : adc byte ptr gs:[rax - 0x75], cl ; add eax, 0x5afe1c ; call rax
0x0000000000632233 : adc byte ptr gs:[rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000077b349 : adc ch, bl ; call qword ptr [rcx]
0x000000000073fba4 : adc ch, bl ; in al, -1 ; push rax ; syscall
0x00000000005f5026 : adc ch, byte ptr [rax - 2] ; dec dword ptr [rax - 0x77] ; ret
0x00000000006a8cb7 : adc ch, byte ptr [rcx] ; ret
0x000000000063d56b : adc ch, byte ptr [rcx] ; ret 0xd089
0x000000000040d8ba : adc ch, byte ptr [rsi] ; sub eax, dword ptr [rax] ; leave ; ret
0x0000000000733ced : adc ch, cl ; call rax
0x0000000000733cf5 : adc ch, cl ; jmp qword ptr [rax]
0x00000000007b0999 : adc ch, dh ; call qword ptr [rax]
0x000000000074857c : adc ch, dh ; cmc ; jmp qword ptr [rax]
0x0000000000744435 : adc ch, dh ; jmp qword ptr [rax]
0x00000000006b37a8 : adc ch, dl ; jb 0x6b37b3 ; mov rdi, rbx ; call rax
0x00000000006b4f8f : adc ch, dl ; jb 0x6b4f9a ; mov rdi, rbx ; call rax
0x0000000000745428 : adc cl, 6 ; add byte ptr [rax + 0x73], dh ; out dx, eax ; call rax
0x000000000074bfc9 : adc cl, ah ; call rsp
0x0000000000548d98 : adc cl, byte ptr [rax + 0x39] ; retf -0x70f1
0x00000000004cfadd : adc cl, byte ptr [rax + 0x63] ; dec dword ptr [rax + 0x63] ; retf 0x2948
0x0000000000480374 : adc cl, byte ptr [rax + 0x63] ; retf -0x74b7
0x0000000000481c1c : adc cl, byte ptr [rax + 0x63] ; retf -0x74b8
0x00000000004ae0fe : adc cl, byte ptr [rax + 0x63] ; retf 0x6348
0x00000000005aa225 : adc cl, byte ptr [rax - 0x73] ; push rcx ; add dword ptr [rax + 0x29], ecx ; ret 0x8148
0x00000000004f5511 : adc cl, byte ptr [rax - 0x77] ; ret
0x000000000061d6d4 : adc cl, byte ptr [rax - 0x77] ; ret 0x10b8
0x000000000066522a : adc cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000000005083c4 : adc cl, byte ptr [rax - 0x7d] ; ret 0x8901
0x00000000006d6ec3 : adc cl, byte ptr [rbp - 0x3749f152] ; retf
0x0000000000534a0f : adc cl, byte ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x94 ; ret 0x8548
0x00000000005a3b2a : adc cl, byte ptr [rbx + rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000064bb53 : adc cl, byte ptr [rbx - 0x76b7fbb6] ; ret
0x000000000060d303 : adc cl, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000069062d : adc cl, byte ptr [rcx - 0x3b7cb728] ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000005beba4 : adc cl, byte ptr [rcx - 0x77] ; in eax, 0x39 ; retf 0x4c7f
0x00000000006bbdfc : adc cl, byte ptr [rcx - 0x77] ; retf -0x76bb
0x00000000005ee922 : adc cl, byte ptr [rcx] ; add byte ptr [rbx - 0x7bf0fe05], al ; retf
0x000000000067d829 : adc cl, byte ptr [rdi] ; ret
0x0000000000733d5d : adc cl, ch ; call qword ptr [rax]
0x0000000000733d4d : adc cl, ch ; jmp rax
0x0000000000450444 : adc cl, cl ; ret
0x0000000000744d0c : adc cl, dl ; out dx, al ; jmp qword ptr [rax]
0x0000000000798f59 : adc dh, ah ; jmp rbx
0x00000000007dba2a : adc dh, bh ; and al, 3 ; ret 0x505
0x00000000006a5a64 : adc dh, bl ; loope 0x6a5ab7 ; add esp, 0x48 ; ret
0x00000000006a59a4 : adc dh, bl ; ror dword ptr [rax - 0x7d], -0x3c ; ret
0x0000000000768030 : adc dh, byte ptr [rbp - 0x29] ; jmp qword ptr [rbx]
0x00000000005a8ca8 : adc dh, byte ptr [rcx] ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000722d60 : adc dh, byte ptr [rip - 0x8ec370e] ; cwde ; call qword ptr [rcx]
0x00000000007b07a1 : adc dh, ch ; call qword ptr [rax]
0x0000000000744425 : adc dh, ch ; call rax
0x0000000000744eac : adc dh, ch ; out dx, al ; jmp rax
0x0000000000751ed9 : adc dh, cl ; call rcx
0x0000000000551009 : adc dh, dh ; ret 0xf01
0x000000000053e709 : adc dh, dh ; ret 0xf38
0x00000000006a19db : adc dil, r15b ; cmp rax, rsi ; jne 0x6a19d8 ; ret
0x00000000005e0493 : adc dl, 0x5e ; add byte ptr [rax - 0x77], cl ; ret 0xbe
0x0000000000761ec1 : adc dl, ah ; call rcx
0x00000000005a55a7 : adc dl, bh ; jo 0x5a55af ; ret
0x000000000057e8d0 : adc dl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044b1ba : adc dl, byte ptr [rbp + 0x27] ; add cl, cl ; ret
0x000000000058b42a : adc dl, byte ptr [rbx - 0x76b7ffec] ; ret
0x00000000005a34cb : adc dl, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007f2130 : adc dl, byte ptr [rbx] ; stosb byte ptr [rdi], al ; sub byte ptr [rbx], al ; adc byte ptr [rbx], 5 ; ret
0x0000000000570099 : adc dl, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f1665 : adc dl, byte ptr [rcx] ; call rax
0x00000000007e367c : adc dl, byte ptr [rdi] ; ret
0x000000000052f43a : adc dl, byte ptr [rip - 0x157cb800] ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000051f12a : adc dl, byte ptr [rsi + 0x1b] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005734c8 : adc dl, byte ptr [rsi] ; add bl, ch ; mov byte ptr [rax - 0x77], cl ; ret
0x00000000007e3676 : adc dl, byte ptr [rsi] ; mov al, 0x38 ; add ebp, eax ; adc dl, byte ptr [rdi] ; ret
0x00000000007dc40c : adc dl, cl ; add dword ptr [rax], eax ; ret
0x00000000006a76ec : adc dl, dh ; dec dword ptr [rax - 0x77] ; ret
0x00000000007cf4bf : adc dl, dl ; add dword ptr [rax], eax ; retf
0x0000000000736aed : adc dl, dl ; jmp qword ptr [rax]
0x0000000000736b1d : adc dl, dl ; jmp rax
0x000000000074b454 : adc dl, dl ; stc ; call qword ptr [rax]
0x00000000006a76eb : adc dl, r14b ; dec dword ptr [rax - 0x77] ; ret
0x0000000000656ba1 : adc dword ptr [r8], r8d ; add byte ptr [rax + 0x63], cl ; retf
0x000000000042499b : adc dword ptr [rax + 0x29480026], esi ; ret
0x00000000006a1c04 : adc dword ptr [rax + 1], edi ; ret
0x00000000007dd1ec : adc dword ptr [rax + rbx + 0x1318c705], ebp ; ret 0x518
0x000000000050848e : adc dword ptr [rax - 0x77], ecx ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000060f457 : adc dword ptr [rax - 0x77], ecx ; ret
0x0000000000656ba2 : adc dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf
0x0000000000651604 : adc dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x00000000006544c4 : adc dword ptr [rax], eax ; add byte ptr [rsi + 1], bh ; call rax
0x000000000053dabb : adc dword ptr [rax], eax ; add rsp, 8 ; ret
0x00000000007e8a0e : adc dword ptr [rax], eax ; cld ; or dword ptr [rsi], esp ; retf 0x12
0x00000000007dfc41 : adc dword ptr [rax], eax ; mov eax, 0xece250f ; add bh, ch ; syscall
0x00000000007cdc91 : adc dword ptr [rax], eax ; mov esp, 0x340f ; cld ; syscall
0x00000000005666ca : adc dword ptr [rax], eax ; mov r13d, eax ; call qword ptr [rip + 0x49c213]
0x0000000000583f41 : adc dword ptr [rax], eax ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000056848b : adc dword ptr [rax], eax ; mov rdi, rbx ; call 0x6d4747
0x000000000056b0cc : adc dword ptr [rax], eax ; nop ; mov rax, qword ptr [rdi + 8] ; ret
0x0000000000568a8d : adc dword ptr [rax], eax ; nop ; movzx eax, byte ptr [rdi + 0x18] ; ret
0x00000000007d5022 : adc dword ptr [rax], eax ; ret
0x00000000007f62c1 : adc dword ptr [rax], eax ; ret 0x511
0x00000000007e0fde : adc dword ptr [rax], eax ; ret 0x605
0x00000000007dd114 : adc dword ptr [rax], eax ; retf
0x00000000007cc577 : adc dword ptr [rax], eax ; retf 0x60f
0x00000000007d4956 : adc dword ptr [rax], eax ; std ; syscall
0x000000000048179f : adc dword ptr [rax], ebx ; call rax
0x00000000007492e1 : adc dword ptr [rax], ecx ; add byte ptr [rax], dl ; push 0xf7 ; jmp rax
0x000000000048179e : adc dword ptr [rax], r11d ; call rax
0x00000000006b3496 : adc dword ptr [rbp + 0x69480150], ecx ; rol byte ptr [rax], cl ; retf 0x3b9a
0x00000000005266cb : adc dword ptr [rbp + rdx + 0x48a5eb00], -0x77 ; ret
0x00000000004cf13e : adc dword ptr [rbp - 0x80], ebp ; cli ; sub byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000005b49dd : adc dword ptr [rbp], eax ; ret
0x00000000005cd559 : adc dword ptr [rbx + 0x43], 0 ; call rax
0x00000000005503f8 : adc dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x0000000000432abb : adc dword ptr [rbx - 0x76b7ffd8], edi ; ret 0x8948
0x00000000004e7beb : adc dword ptr [rbx], 0x8fbf0000 ; ret 0x6e
0x00000000005d1714 : adc dword ptr [rbx], eax ; call rax
0x000000000040f5b3 : adc dword ptr [rbx], ebp ; add cl, cl ; ret
0x00000000005235a2 : adc dword ptr [rbx], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006c4863 : adc dword ptr [rbx], esi ; xor eax, eax ; call 0x680b1b
0x00000000005374d5 : adc dword ptr [rcx + 0x39], ecx ; ret 0x747f
0x0000000000673a2e : adc dword ptr [rcx + 0x415d5bd8], ecx ; pop rsp ; ret
0x000000000072288a : adc dword ptr [rcx + rdi + 3], -0x4d ; ret 0x67a7
0x0000000000721a54 : adc dword ptr [rcx - 0x52d3834], ebp ; loope 0x721a51 ; xchg eax, ebx ; retf
0x0000000000677b5c : adc dword ptr [rcx - 0x77], eax ; retf -0x7cb7
0x00000000005062da : adc dword ptr [rcx - 0x77], ecx ; loopne 0x50626d ; retf
0x0000000000506506 : adc dword ptr [rcx - 0x77], ecx ; loopne 0x506499 ; retf
0x00000000005fa3ae : adc dword ptr [rcx - 0x7d], ecx ; ret 0x4908
0x00000000006315da : adc dword ptr [rcx], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005f173b : adc dword ptr [rcx], eax ; call rax
0x0000000000471768 : adc dword ptr [rcx], ebx ; call rax
0x00000000005bb733 : adc dword ptr [rcx], edi ; ret 0x147f
0x00000000005bb867 : adc dword ptr [rcx], edi ; ret 0x8e0f
0x00000000005701e9 : adc dword ptr [rcx], edx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007ed4e4 : adc dword ptr [rcx], edx ; nop ; and eax, dword ptr [rax] ; ret
0x00000000005a8d38 : adc dword ptr [rcx], esi ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000004f7a5e : adc dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004a3a9b : adc dword ptr [rdi + 0x2948001e], edi ; ret
0x000000000055982b : adc dword ptr [rdi - 0x76b7ffe9], ebp ; ret
0x00000000007dcc7d : adc dword ptr [rdi], 0x517ba00 ; xchg eax, edi ; sbb al, byte ptr [rax] ; retf 0x517
0x0000000000745cc1 : adc dword ptr [rdi], eax ; add byte ptr [rax + 0x4d], dl ; call qword ptr [rax]
0x00000000005cd46e : adc dword ptr [rdi], ecx ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000006211cb : adc dword ptr [rdi], edx ; add bh, bh ; ror cl, 1 ; ret
0x000000000049176c : adc dword ptr [rdi], edx ; call rax
0x000000000044fc0c : adc dword ptr [rdi], esp ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004504f4 : adc dword ptr [rdi], esp ; add cl, cl ; ret
0x0000000000672f79 : adc dword ptr [rdi], esp ; ret
0x000000000055ed2b : adc dword ptr [rdx + 0x17], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000597451 : adc dword ptr [rdx - 0x76b7fff2], edx ; ret
0x000000000054c529 : adc dword ptr [rdx], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000007cc570 : adc dword ptr [rdx], 0x60fb800 ; cdq ; adc dword ptr [rax], eax ; retf 0x60f
0x00000000005e16f6 : adc dword ptr [rdx], eax ; call rax
0x000000000049f813 : adc dword ptr [rdx], esp ; add cl, cl ; ret
0x00000000007f2b73 : adc dword ptr [rip + 0x19ca3], ecx ; ret 0x511
0x000000000073fc31 : adc dword ptr [rip - 0x1b1d2000], eax ; call qword ptr [rax]
0x000000000073fc09 : adc dword ptr [rip - 0x1b201000], eax ; jmp qword ptr [rax]
0x00000000007ddc15 : adc dword ptr [rip - 0x51faee0b], eax ; adc al, byte ptr [rax] ; call qword ptr [rcx]
0x000000000054ec78 : adc dword ptr [rip - 0x76b40000], eax ; out dx, eax ; call rax
0x000000000065d259 : adc dword ptr [rsi + 0x3a], 0 ; jmp rax
0x000000000061accb : adc dword ptr [rsi + rdi], edi ; call rax
0x00000000007ac865 : adc dword ptr [rsi], eax ; add byte ptr [rax + 0x4b], dl ; in eax, dx ; call qword ptr [rax]
0x0000000000742de9 : adc dword ptr [rsi], eax ; add byte ptr [rax], ah ; fsubr st(2) ; call qword ptr [rax]
0x00000000006cb54b : adc dword ptr [rsi], ebp ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000049e9f8 : adc dword ptr [rsi], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005df55b : adc dword ptr [rsi], ecx ; add cl, cl ; ret
0x0000000000573567 : adc dword ptr [rsi], edx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007d5116 : adc eax, 0x15da05 ; retf
0x00000000007dd18e : adc eax, 0x15da06 ; retf
0x00000000007d0405 : adc eax, 0x15ee05 ; ret
0x00000000007e3261 : adc eax, 0x1922ea05 ; ret
0x000000000065be2d : adc eax, 0x1d89db85 ; retf 0x3acf
0x00000000007e327f : adc eax, 0x2320f505 ; call qword ptr [rip + 0x2520ca05]
0x00000000007e6ced : adc eax, 0x3209b0b ; retf
0x00000000006bfac5 : adc eax, 0x342dae ; mov qword ptr [rax], rbx ; pop rbx ; ret
0x00000000006a83b0 : adc eax, 0x35a2b3 ; mov rax, rdx ; ret
0x00000000006a834c : adc eax, 0x35a3 ; ret
0x00000000006a7633 : adc eax, 0x35b288 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006a4636 : adc eax, 0x35e285 ; mov eax, ebx ; pop rbx ; ret
0x00000000006a461f : adc eax, 0x35e29c ; mov eax, ebx ; pop rbx ; ret
0x0000000000695283 : adc eax, 0x36d658 ; call 0x681539
0x000000000069525c : adc eax, 0x36d67f ; call 0x681539
0x000000000068ec90 : adc eax, 0x37373b ; mov rax, rdx ; ret
0x000000000045a45f : adc eax, 0x3900002f ; ret
0x00000000006a0e9a : adc eax, 0x39440b77 ; retf -0x69f1
0x0000000000660327 : adc eax, 0x39ffffe5 ; ror dword ptr [rdi], -0x7a ; retf
0x0000000000648803 : adc eax, 0x3ba0d8 ; mov eax, ebx ; pop rbx ; ret
0x00000000007f6fe6 : adc eax, 0x3baf06 ; ret
0x0000000000634b1d : adc eax, 0x3cddbe ; call 0x681539
0x0000000000653b50 : adc eax, 0x3d800000 ; ret 0x3b4f
0x00000000005b5e81 : adc eax, 0x44ca62 ; call qword ptr [rip + 0x44ca54]
0x00000000005b4a64 : adc eax, 0x44de77 ; call 0x681539
0x00000000005b4a49 : adc eax, 0x44de92 ; call 0x681539
0x00000000006d41fb : adc eax, 0x48000000 ; add esp, 0x18 ; ret
0x0000000000687c17 : adc eax, 0x4800019d ; add esp, 0x20 ; pop rbx ; ret
0x000000000057e4e7 : adc eax, 0x48001096 ; add esp, 8 ; ret
0x0000000000407c39 : adc eax, 0x4800277f ; mov edi, ebx ; call 0x6d4749
0x00000000006cbba7 : adc eax, 0x4800336d ; add esp, 8 ; jmp rax
0x00000000006a07a7 : adc eax, 0x48003621 ; add esp, 8 ; jmp rax
0x00000000004f72b7 : adc eax, 0x480050c7 ; add esp, 8 ; ret
0x0000000000525bbc : adc eax, 0x48906600 ; mov eax, dword ptr [rdi + 8] ; ret
0x0000000000523f12 : adc eax, 0x48a8eb00 ; mov ebx, eax ; jmp 0x523ee6
0x000000000054db49 : adc eax, 0x48c03100 ; add esp, 8 ; ret
0x0000000000575318 : adc eax, 0x48d5c3 ; call 0x681539
0x0000000000564a56 : adc eax, 0x49de85 ; call 0x681539
0x0000000000564a3a : adc eax, 0x49dea1 ; call 0x681539
0x0000000000555e74 : adc eax, 0x4aca6f ; call qword ptr [rip + 0x4aca61]
0x00000000005541c9 : adc eax, 0x4ae712 ; xor ebp, ebp ; jmp 0x55419d
0x000000000054658d : adc eax, 0x4bc356 ; call qword ptr [rip + 0x4bc2c8]
0x000000000054656a : adc eax, 0x4bc379 ; call qword ptr [rip + 0x4bc2eb]
0x0000000000534b28 : adc eax, 0x4cddb3 ; call 0x681539
0x000000000053461e : adc eax, 0x4ce2bd ; mov eax, ebx ; pop rbx ; ret
0x00000000007acc35 : adc eax, 0x4dd80006 ; in eax, dx ; jmp qword ptr [rax]
0x000000000051531d : adc eax, 0x4ed5be ; call 0x681539
0x0000000000515301 : adc eax, 0x4ed5da ; call 0x681539
0x00000000005152af : adc eax, 0x4ed62c ; call 0x681539
0x0000000000515293 : adc eax, 0x4ed648 ; call 0x681539
0x0000000000505e43 : adc eax, 0x4fca18 ; call qword ptr [rip + 0x4fca92]
0x0000000000505df5 : adc eax, 0x4fca6e ; call qword ptr [rip + 0x4fca70]
0x0000000000505e3d : adc eax, 0x4fcaa6 ; call qword ptr [rip + 0x4fca18]
0x0000000000505e1a : adc eax, 0x4fcac9 ; call qword ptr [rip + 0x4fca3b]
0x00000000007d90e1 : adc eax, 0x504aa00 ; retf 0x15
0x00000000007d96dc : adc eax, 0x510ae00 ; retf
0x00000000007e7048 : adc eax, 0x5149a07 ; retf
0x00000000007e11a5 : adc eax, 0x515a600 ; retf
0x00000000007dd197 : adc eax, 0x515f600 ; retf 0x19
0x00000000007d9769 : adc eax, 0x5168b00 ; retf
0x0000000000563c0d : adc eax, 0x558b4800 ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000563cdd : adc eax, 0x558b4800 ; sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000745d91 : adc eax, 0x56300007 ; call rax
0x0000000000407327 : adc eax, 0x58002cd4 ; pop rbx ; pop rbp ; ret
0x0000000000407d27 : adc eax, 0x5b002cca ; pop rbp ; pop r12 ; ret
0x000000000054bf0c : adc eax, 0x5b8beb00 ; ret
0x00000000007ddb98 : adc eax, 0x60de105 ; retf 0x16
0x00000000007dcba1 : adc eax, 0x60fca00 ; mov cl, 0x15 ; add ah, dh ; syscall
0x0000000000565dd2 : adc eax, 0x615ff00 ; retf
0x000000000055fa6c : adc eax, 0x688d4c00 ; or byte ptr [rax - 0x77], cl ; ret
0x000000000053650a : adc eax, 0x76a0bf00 ; outsd dx, dword ptr [rsi] ; add al, ch ; retf 0x1596
0x0000000000556a26 : adc eax, 0x7b8d4800 ; add dword ptr [rax - 0x77], ecx ; ret 0xc7
0x00000000004f72e7 : adc eax, 0x85fff0c7 ; ror byte ptr [rdi], 0x94 ; ret 0xb60f
0x00000000007e650a : adc eax, 0x8800109b ; syscall
0x00000000004e3ff7 : adc eax, 0x89001a50 ; ret 0x8d8b
0x00000000005cd012 : adc eax, 0x8948000f ; ret 0x8948
0x000000000056e60c : adc eax, 0x89480011 ; ret
0x000000000051fda5 : adc eax, 0x89480016 ; ret
0x000000000046e624 : adc eax, 0x89480021 ; ret
0x000000000046d022 : adc eax, 0x89480025 ; ret 0x8948
0x00000000004ef2b8 : adc eax, 0x8948fffa ; ret 0x894c
0x00000000005fd372 : adc eax, 0x894c000c ; out -0x18, eax ; ret
0x00000000006a0efa : adc eax, 0x8c48348 ; ret
0x000000000055dfb4 : adc eax, 0x8d001f0f ; add dword ptr [rax - 0x77], ecx ; ret 0x2948
0x00000000005367f9 : adc eax, 0x8de8bf00 ; outsd dx, dword ptr [rsi] ; add al, ch ; retf
0x00000000004db175 : adc eax, 0x8fbf0000 ; ret 0x6e
0x00000000007dfc33 : adc eax, 0x92000df8 ; syscall
0x00000000007e6193 : adc eax, 0x920010a5 ; syscall
0x00000000007e76ba : adc eax, 0x970034dd ; xor al, byte ptr [rdx] ; ret 0x34
0x00000000007e6081 : adc eax, 0x9d000fe6 ; syscall
0x00000000007e63f9 : adc eax, 0xb9001082 ; syscall
0x000000000043143a : adc eax, 0xbf000000 ; scasb al, byte ptr [rdi] ; ret 0x6d
0x000000000052e95b : adc eax, 0xc0834800 ; add dword ptr [rsi + 0x39], esp ; ret 0xf275
0x000000000053f8fe : adc eax, 0xc4834800 ; or byte ptr [rax + 0x29], cl ; ret
0x00000000005185c1 : adc eax, 0xc4834800 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000005183fe : adc eax, 0xc4834800 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000526664 : adc eax, 0xc4894100 ; call qword ptr [rip + 0x4dc279]
0x00000000007e6649 : adc eax, 0xc600108f ; syscall
0x00000000005f5697 : adc eax, 0xc9000c92 ; ret
0x00000000004d7887 : adc eax, 0xc9001e91 ; ret
0x0000000000432597 : adc eax, 0xc9ffff85 ; ret
0x0000000000471308 : adc eax, 0xd0ff0059 ; leave ; ret
0x000000000052697a : adc eax, 0xd93be800 ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x0000000000526652 : adc eax, 0xdcd1e800 ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x00000000005263aa : adc eax, 0xdf79e800 ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x00000000005284fa : adc eax, 0xdf894800 ; call 0x6d4747
0x000000000076ccbd : adc eax, 0xe0d00002 ; fcos ; retf 1
0x00000000005be5c7 : adc eax, 0xe3eb000c ; nop dword ptr [rax] ; ret
0x000000000052355e : adc eax, 0xea834800 ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000061b339 : adc eax, 0xeb000648 ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000531973 : adc eax, 0xeb0014f2 ; retf 0x6690
0x00000000007eb980 : adc eax, 0xeb4c0f83 ; or al, 0 ; xlatb ; syscall
0x00000000007e6522 : adc eax, 0xec0010b5 ; syscall
0x000000000068f74f : adc eax, 0xf000000 ; ret
0x00000000006b8025 : adc eax, 0xf6000000 ; ret 0xf04
0x00000000007e61ab : adc eax, 0xf60010bf ; syscall
0x000000000052bd69 : adc eax, 0xfa834800 ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000007ddc72 : adc eax, 0xfb805 ; retf
0x000000000055fafa : adc eax, 0xfc834100 ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000007e3209 : adc eax, dword ptr [rax] ; add bh, bh ; add ebp, esp ; add al, 1 ; retf 0x203
0x00000000006c4367 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000007f5dee : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000006b341f : adc eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000552c12 : adc eax, dword ptr [rax] ; add byte ptr [rsi + 1], bh ; call rax
0x000000000047a937 : adc eax, dword ptr [rax] ; add cl, cl ; ret
0x00000000007e8732 : adc eax, dword ptr [rax] ; call qword ptr [rax]
0x00000000007ebe10 : adc eax, dword ptr [rax] ; call qword ptr [rdi]
0x00000000007c6728 : adc eax, dword ptr [rax] ; in al, dx ; or eax, 0x148505 ; ret 0x3e0e
0x00000000007e872c : adc eax, dword ptr [rax] ; int1 ; adc byte ptr [rdx], al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; adc eax, dword ptr [rax] ; call qword ptr [rax]
0x00000000005361bd : adc eax, dword ptr [rax] ; lea rdi, qword ptr [rsp + 0x60] ; call 0x672409
0x00000000007d9533 : adc eax, dword ptr [rax] ; lodsb al, byte ptr [rsi] ; syscall
0x0000000000543923 : adc eax, dword ptr [rax] ; mov rdi, r13 ; xor eax, eax ; call 0x67fb5b
0x0000000000547cd4 : adc eax, dword ptr [rax] ; mov rdi, rbp ; call 0x6d4747
0x0000000000536143 : adc eax, dword ptr [rax] ; mov rdi, rbx ; call 0x672407
0x00000000005438dc : adc eax, dword ptr [rax] ; mov rdi, rbx ; xor eax, eax ; call 0x67fb5b
0x0000000000544dfd : adc eax, dword ptr [rax] ; nop ; cmp edi, esi ; sete al ; ret
0x0000000000544e9c : adc eax, dword ptr [rax] ; nop ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000005502ad : adc eax, dword ptr [rax] ; nop ; mov rax, rdi ; mov rdx, rsi ; ret
0x00000000005a2b1b : adc eax, dword ptr [rax] ; nop ; nop ; lock add dword ptr [rdi], 1 ; ret
0x000000000054720d : adc eax, dword ptr [rax] ; nop ; ret
0x00000000007cd39a : adc eax, dword ptr [rax] ; or byte ptr [rdx], 8 ; ret 0x13
0x000000000059cab9 : adc eax, dword ptr [rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007cd5be : adc eax, dword ptr [rax] ; ret
0x00000000007ea0d8 : adc eax, dword ptr [rax] ; ret 0x9f01
0x00000000007ce2ff : adc eax, dword ptr [rax] ; retf
0x00000000007cb5c9 : adc eax, dword ptr [rax] ; retf 0x309
0x00000000007e5f5b : adc eax, dword ptr [rax] ; retf 0x3413
0x0000000000568763 : adc eax, dword ptr [rax] ; shr eax, 0x1f ; add rsp, 8 ; ret
0x0000000000529c44 : adc eax, dword ptr [rbx] ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000007dac29 : adc eax, dword ptr [rbx] ; call qword ptr [rdx]
0x00000000007dabd3 : adc eax, dword ptr [rbx] ; mov bl, 0xf ; or dword ptr [rax], eax ; add ch, bl ; syscall
0x00000000007dac1d : adc eax, dword ptr [rbx] ; retf 0x1412
0x0000000000490889 : adc eax, dword ptr [rcx] ; and eax, dword ptr [rax] ; leave ; ret
0x00000000005f1530 : adc eax, dword ptr [rcx] ; call rax
0x00000000007bfcf6 : adc eax, dword ptr [rdi] ; retf
0x000000000079cacd : adc eax, dword ptr [rip - 0x183d9200] ; call qword ptr [rbx]
0x000000000079caed : adc eax, dword ptr [rip - 0x183d9e00] ; call qword ptr [rdx]
0x00000000007d9cbc : adc eax, dword ptr [rsi + rbx + 0x518c703] ; ret 0x32a
0x0000000000742e49 : adc eax, dword ptr [rsi] ; add al, dh ; fucomp st(2) ; call rax
0x00000000007acaf5 : adc eax, dword ptr [rsi] ; add byte ptr [rax], ch ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000722fdd : adc eax, ebp ; xchg eax, ebp ; retf
0x0000000000677931 : adc eax, ecx ; cli ; add eax, 0x2944c931 ; retf -0x2d95
0x00000000006a8cd9 : adc ebp, dword ptr [rbp + rdx*8 + 0x5bd889ff] ; ret
0x0000000000606075 : adc ebp, dword ptr [rbx - 0x76b7fff9] ; ret
0x00000000004c4459 : adc ebp, dword ptr [rcx + 0x1c] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006a8f83 : adc ebp, dword ptr [rip + 0x5c415d5b] ; ret
0x000000000066e379 : adc ebp, dword ptr [rsi - 0x76b70001] ; ret
0x000000000067c3a0 : adc ebp, eax ; retf -0x2788
0x0000000000548602 : adc ebp, ebx ; ret
0x00000000007b0a01 : adc ebp, esi ; call qword ptr [rdx]
0x000000000074799d : adc ebp, esi ; call rax
0x00000000007a7c59 : adc ebp, esp ; jmp qword ptr [rax]
0x00000000004073bb : adc ebx, 0x5b58002c ; pop rbp ; ret
0x0000000000643767 : adc ebx, 0x89480003 ; ret
0x0000000000481526 : adc ebx, dword ptr [rax] ; call rax
0x00000000006d698e : adc ebx, dword ptr [rbp - 0x213d2e7f] ; retf
0x0000000000471516 : adc ebx, dword ptr [rcx] ; call rax
0x000000000060ee9d : adc ebx, dword ptr [rip - 0x76b7fff9] ; ret
0x000000000073aacd : adc ebx, ebp ; call rax
0x00000000007d4b6c : adc ebx, ebx ; add al, byte ptr [rax] ; cdq ; add dword ptr [rcx], ecx ; add byte ptr [rax], al ; ret
0x00000000004eed9b : adc ebx, edi ; sbb al, 0 ; leave ; ret
0x00000000007463bd : adc ebx, esi ; jmp qword ptr [rax]
0x0000000000775a61 : adc ebx, esp ; jmp qword ptr [rax]
0x00000000004735ba : adc ecx, dword ptr [rax + 0x29] ; ror dword ptr [rax - 0x77], 1 ; retf -0x3eb8
0x00000000006d3baa : adc ecx, dword ptr [rax + 0x63] ; ret 0xbc80
0x00000000005f365b : adc ecx, dword ptr [rax + 0x63] ; retf
0x00000000005cadad : adc ecx, dword ptr [rax + 0x63] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000006c0d5d : adc ecx, dword ptr [rax - 0x75] ; add al, 0x24 ; add rsp, 0x18 ; ret
0x0000000000522981 : adc ecx, dword ptr [rax - 0x75] ; or byte ptr [rax + 0x39], cl ; ret
0x00000000006b80d4 : adc ecx, dword ptr [rax - 0x75] ; xor byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 0x29], cl ; retf 0x3c80
0x0000000000577014 : adc ecx, dword ptr [rax - 0x77] ; ret
0x000000000066b784 : adc ecx, dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000067f8fc : adc ecx, dword ptr [rax - 0x7d] ; rol dword ptr [rcx], -0x7b ; idiv byte ptr [rdi - 0x3a] ; ret
0x00000000006433b7 : adc ecx, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005cd240 : adc ecx, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000006c111d : adc ecx, dword ptr [rdi] ; mov bh, 4 ; and al, 0x48 ; add esp, 0x18 ; ret
0x00000000006333ae : adc ecx, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004d295b : adc ecx, dword ptr [rip - 0x70410000] ; ret 0x6e
0x0000000000733dad : adc ecx, ebp ; push qword ptr [rax - 0x3b] ; add al, 0 ; ret 0xcd13
0x0000000000736005 : adc ecx, edx ; jmp qword ptr [rax]
0x0000000000752001 : adc ecx, esi ; call rcx
0x000000000073d7d5 : adc ecx, esp ; call qword ptr [rax]
0x00000000006a1b42 : adc edi, dword ptr [rax - 1] ; ret
0x00000000007e7045 : adc edi, dword ptr [rax] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; adc eax, 0x5149a07 ; retf
0x000000000051c5ba : adc edi, dword ptr [rcx] ; ret
0x000000000040682b : adc edi, ebx ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007dac6b : adc edi, ecx ; add dword ptr [rax], eax ; retf 0x501
0x00000000005dbcd7 : adc edi, edi ; dec ecx ; ret
0x0000000000748d7d : adc edi, esi ; call rax
0x00000000004f153e : adc edx, dword ptr [rcx] ; call rax
0x0000000000563371 : adc edx, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000491562 : adc edx, dword ptr [rdi] ; call rax
0x00000000006216c9 : adc edx, dword ptr [rdx] ; add bh, bh ; ror cl, 1 ; ret
0x00000000004e1548 : adc edx, dword ptr [rdx] ; call rax
0x00000000007e68d6 : adc edx, dword ptr [rsi] ; add byte ptr [rax], al ; retf 0x513
0x00000000004915b6 : adc edx, dword ptr es:[rdi] ; call rax
0x00000000007fb0d1 : adc edx, ebp ; jge 0x7fb0ed ; out 0x7d, eax ; ret
0x000000000075f6f1 : adc edx, ebx ; jmp qword ptr [rbx]
0x000000000074b61d : adc edx, edi ; call rax
0x00000000007f0e7e : adc esi, dword ptr [rbp - 0x11] ; or eax, dword ptr [rbx] ; retf
0x0000000000611c1f : adc esi, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000053e4ac : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000066da79 : adc esi, dword ptr [rdi - 0x76b70001] ; ret
0x0000000000691857 : adc esi, dword ptr [rdi] ; add byte ptr [rcx], bh ; ret
0x00000000007d341b : adc esi, dword ptr [rdx - 0x47] ; and al, byte ptr [rax] ; retf
0x00000000007b0921 : adc esi, ebp ; call rax
0x0000000000405429 : adc esi, ebx ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000073499d : adc esi, ecx ; call qword ptr [rax]
0x000000000073498d : adc esi, ecx ; call rax
0x0000000000722d64 : adc esi, edi ; cwde ; call qword ptr [rcx]
0x0000000000748d8d : adc esi, edi ; jmp qword ptr [rax]
0x00000000007486cd : adc esi, esi ; jmp qword ptr [rax]
0x00000000007d7400 : adc esi, esp ; add eax, dword ptr [rcx] ; retf
0x000000000047d57a : adc esp, dword ptr [rax + rax] ; leave ; ret
0x000000000048d2b2 : adc esp, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000417d61 : adc esp, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x8948
0x000000000044d57b : adc esp, dword ptr [rdi] ; add cl, cl ; ret
0x000000000045e848 : adc esp, dword ptr [rdx] ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000045e834 : adc esp, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000049f369 : adc esp, dword ptr [rdx] ; add cl, cl ; ret
0x000000000045f608 : adc esp, dword ptr [rsi] ; add cl, cl ; ret
0x000000000049f368 : adc esp, dword ptr fs:[rdx] ; add cl, cl ; ret
0x00000000007956e1 : adc esp, ebp ; call rsp
0x0000000000722a57 : adc esp, ebp ; loope 0x722a5c ; sal ch, cl ; cli ; retf
0x000000000073d81d : adc esp, ecx ; call qword ptr [rax]
0x000000000078b6c1 : adc esp, ecx ; call qword ptr [rbx]
0x000000000073d80d : adc esp, ecx ; jmp rax
0x000000000079b201 : adc esp, edi ; call qword ptr [rax]
0x000000000079b299 : adc esp, edi ; jmp rax
0x000000000073e415 : adc esp, edx ; call rax
0x0000000000722f6f : adc esp, esi ; or dword ptr [rcx - 0x6c], eax ; cmc ; retf
0x00000000004534cb : adc esp, esi ; pop rdx ; add bh, bh ; ror cl, 1 ; ret
0x00000000004134cb : adc esp, esi ; pop rsi ; add bh, bh ; ror cl, 1 ; ret
0x00000000007934d9 : adc esp, esp ; call rsp
0x000000000067f73d : adc r11b, r8b ; mov eax, dword ptr [rdi + 4] ; sub eax, 1 ; ret
0x0000000000562429 : adc r15b, byte ptr [r9] ; retf -0x71f1
0x0000000000518352 : adc r8b, r14b ; sub dword ptr [rax + 0x14], 1 ; ret
0x000000000051907e : adc r8b, sil ; sub dword ptr [rax + 0x14], 1 ; pop rbx ; ret
0x000000000052c187 : adc rax, -0x157cb800 ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000004db495 : adc rax, -0x70410000 ; ret 0x6e
0x000000000079caeb : add ah, ah ; adc eax, dword ptr [rip - 0x183d9e00] ; call qword ptr [rdx]
0x00000000007b38eb : add ah, ah ; add dword ptr [rsi], 0xef257000 ; call qword ptr [rcx]
0x000000000079fdeb : add ah, ah ; add eax, 0xe8748000 ; jmp qword ptr [rbx]
0x00000000007a1ceb : add ah, ah ; add eax, 0xe8cdb000 ; jmp rsi
0x0000000000781eeb : add ah, ah ; add eax, dword ptr [eax] ; rcl bh, 0xde ; jmp qword ptr [rbx]
0x000000000075db2b : add ah, ah ; and eax, dword ptr [rcx] ; add ah, cl ; in al, dx ; sar edi, 1 ; ret
0x000000000073a33b : add ah, ah ; and ebx, ebx ; inc dword ptr [rax + 0x4b] ; add eax, dword ptr [rax] ; ret 0xdb27
0x00000000007c6bfe : add ah, ah ; and ecx, eax ; or dh, bh ; cmp al, byte ptr [rax] ; ret 0x52c
0x00000000007930a9 : add ah, ah ; call qword ptr [rdi]
0x00000000007930c9 : add ah, ah ; call rsp
0x000000000079512b : add ah, ah ; cdq ; add al, 0 ; rcr bh, 0xe4 ; jmp rsi
0x00000000007622eb : add ah, ah ; imul eax, dword ptr [rcx], 0 ; shl byte ptr [rsi], 0xd4 ; jmp qword ptr [rbx]
0x000000000076a3eb : add ah, ah ; in al, dx ; add dword ptr [rax], eax ; pop rdx ; pushfq ; leave ; call qword ptr [rdx]
0x0000000000737c2b : add ah, ah ; in eax, -0x2d ; call qword ptr [rax]
0x00000000007ac42f : add ah, ah ; in eax, dx ; call qword ptr [rbx]
0x0000000000772eeb : add ah, ah ; ja 0x772ef9 ; add al, dh ; cmp al, 0xdb ; jmp qword ptr [rax]
0x0000000000792beb : add ah, ah ; je 0x792bf9 ; add byte ptr [rsi], ch ; retf -0x1d
0x00000000007b30eb : add ah, ah ; jns 0x7b30fd ; add byte ptr [rax + 0xf], al ; out dx, eax ; jmp qword ptr [rcx]
0x0000000000797d47 : add ah, ah ; mov bh, 0xe5 ; call qword ptr [rdx]
0x0000000000757eeb : add ah, ah ; mov dword ptr [rax], 0xcfe2be00 ; call qword ptr [rbx]
0x0000000000739a1b : add ah, ah ; mov ebx, eax ; call qword ptr [rax]
0x000000000076772b : add ah, ah ; mov edi, 0xf57c0001 ; salc ; jmp qword ptr [rax]
0x00000000007a47eb : add ah, ah ; nop ; add eax, 0xc6335000 ; call qword ptr [rdx]
0x00000000007351c3 : add ah, ah ; or al, 0xcf ; jmp rax
0x00000000007ac0eb : add ah, ah ; or dword ptr [rsi], eax ; add byte ptr [rsi + 0x43], bl ; in eax, dx ; call rcx
0x00000000007ac4eb : add ah, ah ; or eax, 0x46c40006 ; in eax, dx ; call qword ptr [rbx]
0x00000000007a082b : add ah, ah ; push rax ; add eax, 0xe894e000 ; call qword ptr [rcx]
0x00000000007a0eeb : add ah, ah ; push rdi ; add eax, 0xe8a46000 ; jmp qword ptr [rax]
0x000000000079542b : add ah, ah ; pushfq ; add al, 0 ; push rax ; add ch, ah ; call rsp
0x0000000000777b2b : add ah, ah ; ret
0x0000000000738593 : add ah, ah ; ret 0xffd5
0x00000000007582eb : add ah, ah ; retf
0x00000000007346c3 : add ah, ah ; retf -0x33
0x000000000076822b : add ah, ah ; retf 1
0x00000000007889eb : add ah, ah ; rol byte ptr [rbx], cl ; add byte ptr [rax], ah ; jg 0x7889db ; jmp qword ptr [rcx]
0x0000000000757417 : add ah, ah ; ror edi, 1 ; call rcx
0x000000000075b32b : add ah, ah ; sti ; add byte ptr [rax], al ; clc ; or cl, dl ; call rsp
0x00000000007c70dd : add ah, ah ; syscall
0x00000000007384ab : add ah, ah ; test ebp, edx ; jmp qword ptr [rax]
0x00000000007848eb : add ah, ah ; xchg eax, ecx ; add eax, dword ptr [rax] ; or ch, 0xdf ; jmp qword ptr [rax]
0x00000000007e687a : add ah, al ; adc byte ptr [rsi], al ; salc ; adc al, byte ptr [rax] ; retf 0xe10
0x000000000079cacb : add ah, al ; adc eax, dword ptr [rip - 0x183d9200] ; call qword ptr [rbx]
0x00000000007abbcb : add ah, al ; add al, 6 ; add byte ptr [rax + 0x3b], bh ; in eax, dx ; call qword ptr [rcx]
0x000000000074b7cb : add ah, al ; add byte ptr [rax], al ; add byte ptr [rdx - 0x2a], dl ; retf
0x0000000000751d0b : add ah, al ; add byte ptr gs:[rax], al ; pop rsp ; or al, 0xce ; call rsp
0x00000000007ed745 : add ah, al ; and eax, 0x29b106 ; retf 0xe25
0x0000000000737b33 : add ah, al ; fst st(3) ; jmp qword ptr [rax]
0x0000000000768647 : add ah, al ; fst st(7) ; jmp qword ptr [rbx]
0x00000000007ac4ef : add ah, al ; in eax, dx ; call qword ptr [rbx]
0x00000000007abec7 : add ah, al ; in eax, dx ; jmp qword ptr [rsi]
0x00000000007bb5cb : add ah, al ; inc byte ptr [rsi] ; add byte ptr [rax], ah ; loope 0x7bb5cb ; jmp rbx
0x0000000000786ec9 : add ah, al ; jmp qword ptr [rdi]
0x0000000000596f07 : add ah, al ; jo 0x596f13 ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000073636b : add ah, al ; mov dl, cl ; call qword ptr [rax]
0x00000000007ac3cb : add ah, al ; or al, 6 ; add ah, dh ; in eax, dx ; call qword ptr [rbx]
0x000000000076c1cb : add ah, al ; or al, byte ptr [rdx] ; add byte ptr [rax], dl ; ret 0xffd9
0x00000000007c0e6b : add ah, al ; or byte ptr [rax], bl ; retf 0x11
0x00000000007d48f5 : add ah, al ; or dword ptr [rsi], eax ; test byte ptr [rax + rax], dl ; retf 0x1e09
0x0000000000735783 : add ah, al ; out 0xcf, al ; call qword ptr [rax]
0x000000000076160b : add ah, al ; pop rsi ; add dword ptr [rax], eax ; retf -0x2bfd
0x0000000000757a0b : add ah, al ; ret 0
0x00000000007a79cb : add ah, al ; ret 5
0x00000000007582cb : add ah, al ; retf
0x000000000077820b : add ah, al ; retf 2
0x00000000007c6ad0 : add ah, al ; sbb byte ptr [rax], al ; retf -0x58f7
0x000000000079b0cb : add ah, al ; stc ; add al, 0 ; or byte ptr [rdi], 0xe7 ; call qword ptr [rdx]
0x00000000007358fb : add ah, al ; sti ; iretd ; jmp rax
0x00000000007c0ea2 : add ah, al ; syscall
0x000000000074ec0b : add ah, al ; xor al, 0 ; add byte ptr [rdx + rax - 0x33], ah ; call rsp
0x000000000073525b : add ah, al ; xor ecx, edi ; jmp rax
0x00000000007ea9fe : add ah, bh ; add dword ptr [rdx], ecx ; ret
0x00000000007c5310 : add ah, bh ; add dword ptr [rsi], esi ; add byte ptr [rax], al ; ret 0x502
0x000000000075de03 : add ah, bh ; add dword ptr es:[rax], eax ; push rsp ; not ecx ; jmp qword ptr [rbx]
0x00000000004b01aa : add ah, bh ; and byte ptr [rax], al ; leave ; ret
0x0000000000736c43 : add ah, bh ; and dl, dl ; call qword ptr [rax]
0x00000000007443a3 : add ah, bh ; clc ; in eax, dx ; jmp qword ptr [rax]
0x000000000076a403 : add ah, bh ; in al, dx ; add dword ptr [rax], eax ; push rsp ; pushfq ; leave ; call qword ptr [rdx]
0x00000000007aa903 : add ah, bh ; int1 ; add eax, 0xecdae800 ; call qword ptr [rdx]
0x00000000007627df : add ah, bh ; jge 0x7627bb ; jmp qword ptr [rbx]
0x00000000007b3103 : add ah, bh ; jns 0x7b3115 ; add byte ptr [rdx + 0xf], cl ; out dx, eax ; jmp qword ptr [rax]
0x00000000007a6f03 : add ah, bh ; mov bh, 5 ; add byte ptr [rax], bh ; fsub st(3), st(0) ; call qword ptr [rsi]
0x0000000000794443 : add ah, bh ; mov word ptr [rax + rax], es ; xchg eax, esp ; js 0x794437 ; call rsp
0x00000000007a4803 : add ah, bh ; nop ; add eax, 0xc6334a00 ; call qword ptr [rdx]
0x00000000007cc522 : add ah, bh ; or al, 5 ; ret
0x00000000007e8a0f : add ah, bh ; or dword ptr [rsi], esp ; retf 0x12
0x00000000007ac503 : add ah, bh ; or eax, 0x46c00006 ; in eax, dx ; call qword ptr [rbx]
0x0000000000750f03 : add ah, bh ; push rdi ; add byte ptr [rax], al ; retf -0x33
0x00000000007a0e03 : add ah, bh ; push rsi ; add eax, 0xe8a39800 ; jmp qword ptr [rax]
0x0000000000755403 : add ah, bh ; pushfq ; add byte ptr [rax], al ; pop rdx ; jae 0x7553e2 ; call qword ptr [rdx]
0x00000000006d94a7 : add ah, bh ; ret
0x0000000000797a43 : add ah, bh ; ret 4
0x0000000000778243 : add ah, bh ; retf 2
0x0000000000788a03 : add ah, bh ; rol byte ptr [rbx], cl ; add byte ptr [rax], bh ; jg 0x7889f3 ; call qword ptr [rbx]
0x000000000079d003 : add ah, bh ; sbb byte ptr [rip - 0x182a9400], al ; call qword ptr [rbx]
0x00000000007ad503 : add ah, bh ; sbb eax, 0x8af80006 ; in eax, dx ; call qword ptr [rdi]
0x00000000007a822f : add ah, bh ; sub ah, ch ; jmp qword ptr [rcx]
0x000000000079c703 : add ah, bh ; syscall
0x000000000074ca23 : add ah, bl ; adc al, byte ptr [rax] ; add byte ptr [rbx + rax*2 - 0x34], cl ; call rsp
0x00000000007902e3 : add ah, bl ; add al, 0 ; fcom dword ptr [rax - 0x1e] ; jmp qword ptr [rdx]
0x000000000074f923 : add ah, bl ; add byte ptr [r8], al ; add al, byte ptr [rax - 0x33] ; call rcx
0x000000000075fee3 : add ah, bl ; add dword ptr [r8], r8d ; movsb byte ptr [rdi], byte ptr [rsi] ; je 0x75fec6 ; jmp qword ptr [rbx]
0x000000000075de23 : add ah, bl ; add dword ptr es:[rax], eax ; pop rax ; not ecx ; call rdx
0x0000000000736c33 : add ah, bl ; and dl, dl ; call rax
0x0000000000736c73 : add ah, bl ; and edx, edx ; call rax
0x00000000007ab223 : add ah, bl ; cli ; add eax, 0xecf71800 ; jmp qword ptr [rdi]
0x0000000000757af7 : add ah, bl ; fxch st(0), st(7) ; call qword ptr [rcx]
0x00000000007ac45f : add ah, bl ; in eax, dx ; call qword ptr [rbx]
0x00000000007388e3 : add ah, bl ; ja 0x7388c3 ; lcall ptr [rax] ; retf
0x0000000000792ae3 : add ah, bl ; jae 0x792af3 ; add byte ptr [rbp + rax*8 - 0x1d], dh ; jmp qword ptr [rdx]
0x00000000007629e3 : add ah, bl ; jb 0x7629f0 ; add byte ptr [rcx + rbx*4 - 0x2c], bl ; jmp rax
0x00000000007b6be3 : add ah, bl ; mov ah, 6 ; add al, bh ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, eax ; jmp rdx
0x0000000000734c7b : add ah, bl ; mov cs, esi ; dec dword ptr [rax] ; stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; ret 0xce90
0x0000000000757123 : add ah, bl ; mov ecx, 0xca820000 ; iretd ; call rsp
0x000000000076886f : add ah, bl ; not edi ; jmp qword ptr [rbx]
0x00000000007ac3e3 : add ah, bl ; or al, 6 ; add al, dh ; in eax, dx ; call qword ptr [rbx]
0x0000000000771323 : add ah, bl ; pop rbx ; add al, byte ptr [rax] ; cwde ; ret
0x00000000007b82e3 : add ah, bl ; retf
0x0000000000788223 : add ah, bl ; retf 3
0x00000000007a81e3 : add ah, bl ; retf 5
0x000000000074c677 : add ah, bl ; sub al, 0xcc ; call rsp
0x000000000079e023 : add ah, bl ; sub byte ptr [rip - 0x180cbc00], al ; call rax
0x00000000007e6096 : add ah, bl ; syscall
0x0000000000753be3 : add ah, bl ; test byte ptr [rax], al ; add byte ptr [rax], bl ; fmul st(6), st(0) ; call rdi
0x000000000077e7e3 : add ah, bl ; xor byte ptr [rbx], al ; add al, bl ; retf
0x00000000007d652a : add ah, byte ptr [rbx] ; retf 0x103
0x0000000000418ea9 : add ah, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x8948
0x00000000007cbf56 : add ah, byte ptr [rdi] ; ret 6
0x000000000045e2dd : add ah, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000007904f3 : add ah, ch ; add al, 0 ; mov byte ptr [rax - 0x1e], bl ; jmp qword ptr [rdx]
0x00000000007838f3 : add ah, ch ; add dword ptr [rbx], 0xdf2d7800 ; jmp qword ptr [rdi]
0x000000000079f9f3 : add ah, ch ; add eax, 0xe8676800 ; call qword ptr [rbx]
0x00000000007aa9f3 : add ah, ch ; add eax, 0xecdae800 ; call qword ptr [rcx]
0x0000000000795491 : add ah, ch ; call rsp
0x000000000079f1f3 : add ah, ch ; cmp al, byte ptr [rip - 0x17af2600] ; jmp qword ptr [rbx]
0x000000000073a393 : add ah, ch ; cmp ebx, ebx ; jmp qword ptr [rax]
0x000000000074f75f : add ah, ch ; cmp ecx, ebp ; call rsp
0x000000000054497a : add ah, ch ; dec dword ptr [rax - 0x77] ; ret
0x0000000000779333 : add ah, ch ; fild dword ptr [rdx] ; add al, bh ; ret 0xffdc
0x0000000000789733 : add ah, ch ; fild word ptr [rbx] ; add byte ptr [rax], ch ; mov ah, 0xe0 ; jmp rcx
0x00000000007990f3 : add ah, ch ; fld dword ptr [rax + rax] ; or byte ptr [rsi], bl ; jmp rax
0x0000000000752133 : add ah, ch ; imul eax, dword ptr [rax], 0xce167000 ; call rdx
0x00000000007ac3ff : add ah, ch ; in eax, dx ; call qword ptr [rbx]
0x00000000007b2ff3 : add ah, ch ; js 0x7b3005 ; add byte ptr [rax + 1], cl ; out dx, eax ; jmp qword ptr [rdi]
0x00000000007663f3 : add ah, ch ; lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; ret 0xd5d0
0x0000000000767f33 : add ah, ch ; mov dword ptr [rcx], 0xd72f3600 ; call qword ptr [rdx]
0x00000000007c0a04 : add ah, ch ; or byte ptr [rax], al ; retf 0x6305
0x00000000007c6729 : add ah, ch ; or eax, 0x148505 ; ret 0x3e0e
0x00000000007c143a : add ah, ch ; or eax, 0x169f34 ; ret 0x50e
0x0000000000750ff3 : add ah, ch ; pop rax ; add byte ptr [rax], al ; xchg eax, edx ; retf
0x00000000007907f3 : add ah, ch ; push rax ; add al, 0 ; call 0x2378ea65
0x0000000000757af3 : add ah, ch ; ret
0x0000000000747443 : add ah, ch ; ret 0xfff4
0x00000000007679f3 : add ah, ch ; ret 1
0x00000000007b79f3 : add ah, ch ; ret 6
0x00000000007b81f3 : add ah, ch ; retf 6
0x00000000007677f3 : add ah, ch ; rol byte ptr [rcx], 0 ; retf -0x2901
0x000000000078d4f3 : add ah, ch ; sbb eax, 0x9fb80004 ; loope 0x78d504 ; retf 0
0x00000000007bd2f3 : add ah, ch ; sbb eax, dword ptr [rdi] ; add byte ptr [rax + 0xd], bl ; int1 ; call qword ptr [rax]
0x00000000007cdaa3 : add ah, ch ; syscall
0x0000000000794a33 : add ah, ch ; xchg eax, edx ; add al, 0 ; ret 0xe4b8
0x000000000079fc13 : add ah, cl ; add eax, 0xe86e8800 ; jmp qword ptr [rsi]
0x0000000000781c13 : add ah, cl ; add eax, dword ptr fs:[rax] ; scasq rax, qword ptr [rdi] ; fdivp st(7) ; ret
0x000000000075db2f : add ah, cl ; in al, dx ; sar edi, 1 ; ret
0x000000000075a513 : add ah, cl ; in eax, dx ; add byte ptr [rax], al ; cmpsw word ptr [rsi], word ptr [rdi] ; sar bh, 1 ; ret 1
0x00000000007ac4bf : add ah, cl ; in eax, dx ; call qword ptr [rbx]
0x000000000075b713 : add ah, cl ; inc dword ptr [rax] ; add dl, dl ; sbb ecx, edx ; jmp rbx
0x00000000007bb6d3 : add ah, cl ; inc dword ptr [rsi] ; add al, cl ; out 0xf0, al ; jmp qword ptr [rdx]
0x00000000007aa8d3 : add ah, cl ; int1 ; add eax, 0xecdad800 ; jmp qword ptr [rcx]
0x00000000007f358b : add ah, cl ; jle 0x7f3599 ; sti ; retf -0x23ff
0x0000000000757413 : add ah, cl ; mov esp, 0xd1e40000 ; iretd ; call rcx
0x0000000000775bd3 : add ah, cl ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rax] ; clc ; adc al, 0xdc ; call rdi
0x00000000007ac0d3 : add ah, cl ; or dword ptr [rsi], eax ; add byte ptr [rbx + rax*2 - 0x13], ah ; call qword ptr [rcx]
0x00000000007ac4d3 : add ah, cl ; or eax, 0x46c80006 ; in eax, dx ; call qword ptr [rbx]
0x00000000007625d3 : add ah, cl ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; call 0x2475fa47
0x0000000000757ad3 : add ah, cl ; ret
0x00000000007679d3 : add ah, cl ; ret 1
0x00000000007682d3 : add ah, cl ; retf
0x000000000073523b : add ah, cl ; sbb al, 0xcf ; jmp qword ptr [rax]
0x0000000000758a87 : add ah, cl ; sbb al, dl ; call rsp
0x00000000007d79f2 : add ah, cl ; sbb ch, byte ptr [rcx] ; retf
0x00000000007966d3 : add ah, cl ; scasd eax, dword ptr [rdi] ; add al, 0 ; jle 0x796721 ; in eax, -1 ; retf
0x000000000079cedf : add ah, cl ; shl edi, 1 ; call rbx
0x0000000000742db3 : add ah, cl ; shr edx, cl ; call qword ptr [rax]
0x00000000007e8a62 : add ah, cl ; syscall
0x0000000000744acb : add ah, cl ; xchg eax, ecx ; out dx, al ; jmp rax
0x000000000078fbfb : add ah, dh ; add al, 0 ; push rax ; or edx, esp ; jmp qword ptr [rdx]
0x000000000075ab3b : add ah, dh ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000075e63b : add ah, dh ; add dword ptr cs:[rax], eax ; xor al, 0x14 ; sar bh, cl ; retf
0x00000000007989b9 : add ah, dh ; call qword ptr [rax]
0x000000000075f33b : add ah, dh ; cmp eax, dword ptr [rcx] ; add byte ptr [rdx], cl ; out 0xd2, al ; jmp qword ptr [rcx]
0x000000000075903b : add ah, dh ; fadd dword ptr [rax] ; add byte ptr [rdx], bl ; cmp edx, eax ; call rsp
0x00000000007ac3cf : add ah, dh ; in eax, dx ; call qword ptr [rbx]
0x00000000007b28fb : add ah, dh ; jno 0x7b290d ; add byte ptr [rax - 0x12], al ; out dx, al ; jmp qword ptr [rsi]
0x0000000000756afb : add ah, dh ; mov bl, 0 ; add byte ptr [rsi], bl ; ret 0xffcf
0x00000000007b6cfb : add ah, dh ; mov ch, 6 ; add byte ptr [rax], dl ; stosd dword ptr [rdi], eax ; out dx, eax ; call qword ptr [rcx]
0x00000000007b68fb : add ah, dh ; mov cl, 6 ; add al, dh ; mov edi, gs ; call rsi
0x00000000007670fb : add ah, dh ; mov ecx, 0x521a0001 ; salc ; jmp qword ptr [rbx]
0x00000000007b773b : add ah, dh ; mov edi, 0xbcf00006 ; out dx, eax ; call rax
0x00000000007a5bfb : add ah, dh ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0xeb6b8000 ; jmp qword ptr [rax]
0x00000000007f52c7 : add ah, dh ; or al, 0 ; ret 0x401
0x00000000007ed079 : add ah, dh ; or al, 5 ; ret 0xd
0x00000000007ac3fb : add ah, dh ; or al, 6 ; add ah, ch ; in eax, dx ; call qword ptr [rbx]
0x000000000076c33b : add ah, dh ; or eax, dword ptr [rdx] ; add al, al ; ret
0x000000000075553b : add ah, dh ; popfq ; add byte ptr [rax], al ; and dh, byte ptr [rsi - 0x31] ; call rsp
0x000000000076644f : add ah, dh ; rcl ebp, 1 ; call rsp
0x0000000000766107 : add ah, dh ; ret
0x0000000000787a3b : add ah, dh ; ret 3
0x00000000007979fb : add ah, dh ; ret 4
0x00000000007a79fb : add ah, dh ; ret 5
0x0000000000735e2b : add ah, dh ; retf
0x00000000007386eb : add ah, dh ; salc ; jmp rax
0x00000000007ad2fb : add ah, dh ; sbb eax, dword ptr [rsi] ; add al, al ; je 0x7ad2f8 ; call rsi
0x00000000007dcba8 : add ah, dh ; syscall
0x00000000007baf3b : add ah, dh ; test dword ptr [rsi], 0xf0c85000 ; call rsi
0x000000000074ba1b : add ah, dl ; add al, byte ptr [rax] ; add ah, dl ; stc ; retf
0x0000000000773b1b : add ah, dl ; add dword ptr [rdx], 0 ; push rax ; jno 0x773b06 ; jmp rcx
0x000000000079fedb : add ah, dl ; add eax, 0xe8769000 ; call qword ptr [rax]
0x000000000075badb : add ah, dl ; add eax, dword ptr [rcx] ; add byte ptr [rdx], ch ; xor ecx, edx ; call qword ptr [rdi]
0x00000000007a02db : add ah, dl ; add rax, -0x177f1000 ; call rsi
0x000000000078f821 : add ah, dl ; call qword ptr [rsi]
0x0000000000738e63 : add ah, dl ; cli ; salc ; jmp qword ptr [rax]
0x0000000000737b63 : add ah, dl ; fcomp st(0), st(3) ; jmp rax
0x0000000000744393 : add ah, dl ; imul ebp ; jmp rax
0x00000000007ac48f : add ah, dl ; in eax, dx ; call qword ptr [rbx]
0x0000000000754c97 : add ah, dl ; iretd ; call rbx
0x000000000079bbc7 : add ah, dl ; ja 0x79bbb6 ; jmp rdx
0x000000000078f759 : add ah, dl ; jmp qword ptr [rdi]
0x000000000078f741 : add ah, dl ; jmp qword ptr [rdx]
0x00000000007627db : add ah, dl ; jo 0x7627e8 ; add ah, bh ; jge 0x7627bf ; jmp qword ptr [rbx]
0x000000000074e47f : add ah, dl ; jrcxz 0x74e453 ; jmp qword ptr [rdi]
0x00000000007a80db : add ah, dl ; leave ; add eax, 0xec1c4c00 ; call qword ptr [rbx]
0x00000000007b99db : add ah, dl ; loop 0x7b99ed ; add byte ptr [rax], al ; mov esi, eax ; call rax
0x0000000000760e47 : add ah, dl ; loope 0x760e22 ; call qword ptr [rdi]
0x0000000000756b1b : add ah, dl ; mov bl, 0 ; add byte ptr [rax], ch ; ret 0xffcf
0x0000000000737213 : add ah, dl ; mov edi, 0x5cd8ffd2 ; add al, byte ptr [rax] ; ret 0xffd2
0x00000000007e67fd : add ah, dl ; or al, 5 ; call qword ptr [rcx]
0x00000000007ac1db : add ah, dl ; or al, byte ptr [rsi] ; add byte ptr [rsi + 0x44], bl ; in eax, dx ; call qword ptr [rcx]
0x00000000007907db : add ah, dl ; push rax ; add al, 0 ; shl byte ptr [rax - 0x1e], 1 ; jmp qword ptr [rbx]
0x00000000007608db : add ah, dl ; push rcx ; add dword ptr [rax], eax ; pop rsp ; ret 0xffd3
0x0000000000755ae7 : add ah, dl ; pushfq ; iretd ; jmp qword ptr [rbx]
0x0000000000767adb : add ah, dl ; ret
0x00000000007979db : add ah, dl ; ret 4
0x00000000007681db : add ah, dl ; retf 1
0x00000000007b81db : add ah, dl ; retf 6
0x00000000007577db : add ah, dl ; rol byte ptr [rax], 0 ; ret 0xcfd7
0x00000000007c5d74 : add ah, dl ; sbb eax, 0x7ef205 ; ret 0x31e
0x000000000074ba1f : add ah, dl ; stc ; retf
0x000000000079c6db : add ah, dl ; syscall
0x0000000000773bdb : add ah, dl ; test byte ptr [rdx], al ; add al, dh ; jae 0x773bc6 ; jmp qword ptr [rdx]
0x0000000000774cdb : add ah, dl ; xchg eax, ebp ; add al, byte ptr [rax] ; push rax ; mov bl, 0xdb ; call qword ptr [rax]
0x000000000074300b : add ah, dl ; xor ebp, ebx ; call qword ptr [rax]
0x000000000073e99a : add al, 0 ; adc byte ptr [rax - 0x1e], dh ; call rax
0x000000000073dc1a : add al, 0 ; adc byte ptr [rax - 0x1f], dl ; jmp rax
0x000000000073c6e2 : add al, 0 ; adc byte ptr [rax - 0x21], bh ; call qword ptr [rax]
0x000000000073d80a : add al, 0 ; adc byte ptr [rbx], 0xe1 ; jmp rax
0x000000000073e412 : add al, 0 ; adc byte ptr [rbx], 0xe2 ; call rax
0x00000000007900be : add al, 0 ; adc byte ptr [rcx - 0x1e], cl ; jmp qword ptr [rbx]
0x000000000073d76a : add al, 0 ; adc byte ptr [rcx], cl ; call qword ptr [rax]
0x000000000073e79a : add al, 0 ; adc byte ptr [rdi - 0x1e], cl ; jmp qword ptr [rax]
0x000000000079ae5e : add al, 0 ; adc byte ptr [rdi], al ; jmp qword ptr [rcx]
0x0000000000733d4a : add al, 0 ; adc cl, ch ; jmp rax
0x000000000079548e : add al, 0 ; add ah, ch ; call rsp
0x000000000079ae8e : add al, 0 ; add al, 0xe7 ; jmp qword ptr [rcx]
0x00000000005b851d : add al, 0 ; add al, ch ; retf
0x00000000004fecbe : add al, 0 ; add al, ch ; retf 0x1bfb
0x00000000006fc245 : add al, 0 ; add al, cl ; ret
0x00000000006dcb25 : add al, 0 ; add al, cl ; retf 0x6d
0x0000000000670db2 : add al, 0 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000060842b : add al, 0 ; add byte ptr [rax + 0x39], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x3948
0x0000000000601cf5 : add al, 0 ; add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000006ca03a : add al, 0 ; add byte ptr [rax + 0xf], cl ; ret 0xb60f
0x000000000066b243 : add al, 0 ; add byte ptr [rax + rcx + 0x48], dh ; add esp, 8 ; ret
0x0000000000769d8d : add al, 0 ; add byte ptr [rax + rdi*2], al ; retf
0x000000000073ce82 : add al, 0 ; add byte ptr [rax - 0x20], bl ; call rax
0x000000000044010d : add al, 0 ; add byte ptr [rax - 0x77], cl ; clc ; leave ; ret
0x0000000000534b6e : add al, 0 ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000044d1e5 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000066dd8d : add al, 0 ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; retf 0x12c
0x000000000062e6a5 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000052b851 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000006720ee : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000078f61e : add al, 0 ; add byte ptr [rax], 0xe2 ; jmp qword ptr [rbx]
0x00000000005338de : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xe875
0x0000000000650f32 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a3b8d : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000006b520d : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000006012c6 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8948
0x00000000006d4bc1 : add al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000052ba2b : add al, 0 ; add byte ptr [rax], al ; mov esi, ebx ; mov rdi, r15 ; call rax
0x00000000006cd9c1 : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000051349e : add al, 0 ; add byte ptr [rax], al ; test al, 1 ; jne 0x5134b2 ; jmp rax
0x000000000073c64a : add al, 0 ; add byte ptr [rbp - 0x21], dh ; jmp qword ptr [rax]
0x00000000006646fe : add al, 0 ; add byte ptr [rbp - 0x77], cl ; fisttp word ptr [rcx - 0x77] ; ret
0x000000000040a261 : add al, 0 ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x00000000004133fa : add al, 0 ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop rbp ; ret
0x00000000006cac6b : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000505300 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000007f963e : add al, 0 ; add byte ptr [rbx + 5], al ; ret 2
0x000000000078bece : add al, 0 ; add byte ptr [rbx - 0x1f], al ; call qword ptr [rsi]
0x000000000073ce92 : add al, 0 ; add byte ptr [rbx - 0x20], ah ; jmp qword ptr [rax]
0x00000000004f49aa : add al, 0 ; add byte ptr [rbx - 0x7cb7fe3d], al ; ret 0x3901
0x00000000007ee5ca : add al, 0 ; add byte ptr [rbx], bh ; lea eax, dword ptr [rdx] ; retf 0x102
0x00000000007c28f5 : add al, 0 ; add byte ptr [rcx + 0x22], cl ; ret 1
0x000000000062ef3a : add al, 0 ; add byte ptr [rcx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000064a102 : add al, 0 ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004fc75d : add al, 0 ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000052b757 : add al, 0 ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000079080e : add al, 0 ; add byte ptr [rcx - 0x1e], ah ; jmp qword ptr [rbx]
0x00000000006bcc24 : add al, 0 ; add byte ptr [rcx - 0x7d], al ; ret 0x3101
0x000000000066b474 : add al, 0 ; add byte ptr [rcx], al ; je 0x66b487 ; pop rbx ; ret
0x000000000066b7f3 : add al, 0 ; add byte ptr [rcx], al ; je 0x66b806 ; ret
0x00000000005cc92a : add al, 0 ; add byte ptr [rcx], al ; ret
0x00000000004f49b9 : add al, 0 ; add byte ptr [rcx], bh ; ret
0x00000000004feca3 : add al, 0 ; add byte ptr [rcx], bh ; ret 0x8c0f
0x00000000005c8b95 : add al, 0 ; add byte ptr [rcx], ch ; ret
0x000000000056062b : add al, 0 ; add byte ptr [rcx], ch ; ret 0x6348
0x00000000006b3b2c : add al, 0 ; add byte ptr [rdi + 1], bh ; ret
0x00000000007ca1d7 : add al, 0 ; add byte ptr [rdi + rbx], dh ; retf
0x000000000079ae2e : add al, 0 ; add byte ptr [rdi], al ; jmp qword ptr [rcx]
0x000000000073f082 : add al, 0 ; add byte ptr [rdx - 0x1d], ch ; call qword ptr [rax]
0x00000000006a4a6a : add al, 0 ; add byte ptr [rsi + 0xf], ah ; sub cl, al ; ret
0x00000000005517b0 : add al, 0 ; add byte ptr [rsi + 1], bh ; call rax
0x000000000073d012 : add al, 0 ; add byte ptr [rsi - 0x20], bh ; jmp qword ptr [rax]
0x000000000073f852 : add al, 0 ; add byte ptr [rsp], cl ; call rax
0x00000000006a6c9f : add al, 0 ; add dh, al ; ret
0x00000000006bd386 : add al, 0 ; add eax, edx ; ret
0x00000000006301e3 : add al, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000065dfcf : add al, 0 ; add rsp, 8 ; ret
0x000000000078f73e : add al, 0 ; add spl, dl ; jmp qword ptr [rdx]
0x00000000006d148a : add al, 0 ; and byte ptr [rbp - 0x1f], dh ; ret
0x0000000000733cc2 : add al, 0 ; bswap rbp ; jmp rax
0x000000000078cc26 : add al, 0 ; call 0x1478adb5
0x000000000078f836 : add al, 0 ; call 0x2378da44
0x000000000078f835 : add al, 0 ; call 0x2378da45
0x00000000007907f6 : add al, 0 ; call 0x2378ea62
0x0000000000790646 : add al, 0 ; call 0x2478e8ad
0x0000000000790645 : add al, 0 ; call 0x2478e8ae
0x0000000000790ab6 : add al, 0 ; call 0x2478ed2d
0x00000000006352b2 : add al, 0 ; call 0x681536
0x000000000079b296 : add al, 0 ; clc ; adc esp, edi ; jmp rax
0x000000000079aee6 : add al, 0 ; clc ; add al, 0xe7 ; jmp qword ptr [rcx]
0x000000000078f696 : add al, 0 ; clc ; add dl, ah ; jmp qword ptr [rdx]
0x000000000079ae16 : add al, 0 ; clc ; add esp, edi ; call qword ptr [rbx]
0x0000000000799266 : add al, 0 ; clc ; and al, 0xe6 ; call rdi
0x000000000078b996 : add al, 0 ; clc ; and ecx, esp ; jmp rdi
0x000000000078f0a6 : add al, 0 ; clc ; cmc ; loope 0x78f0b1 ; retf 1
0x0000000000792c36 : add al, 0 ; clc ; retf -0x1d
0x000000000078f4ce : add al, 0 ; cmp ch, 0xe1 ; jmp qword ptr [rbx]
0x000000000073db0a : add al, 0 ; cmp ecx, esp ; call rax
0x000000000078f636 : add al, 0 ; cwde ; add dl, ah ; jmp qword ptr [rbx]
0x000000000078e996 : add al, 0 ; cwde ; out 0xe1, al ; jmp qword ptr [rdx]
0x00000000007902e6 : add al, 0 ; fcom dword ptr [rax - 0x1e] ; jmp qword ptr [rdx]
0x000000000078e276 : add al, 0 ; fmul st(1) ; loope 0x78e281 ; retf 1
0x0000000000790a36 : add al, 0 ; fsubr dword ptr [rax - 0x1e] ; jmp qword ptr [rdx]
0x000000000079767e : add al, 0 ; in ax, -1 ; ret 1
0x00000000007cca55 : add al, 0 ; in eax, dx ; add al, 0x69 ; ret 4
0x0000000000799f8e : add al, 0 ; ja 0x799f7e ; call qword ptr [rbx]
0x00000000007966d6 : add al, 0 ; jle 0x79671e ; in eax, -1 ; retf
0x0000000000797806 : add al, 0 ; jno 0x7977f5 ; jmp rax
0x00000000007944a6 : add al, 0 ; jnp 0x794494 ; call rsp
0x000000000078e49e : add al, 0 ; jo 0x78e479 ; loope 0x78e4a9 ; ret
0x000000000067e00f : add al, 0 ; lea rdi, qword ptr [rbp - 0x70] ; call 0x67aa78
0x00000000007ded56 : add al, 0 ; lodsd eax, dword ptr [rsi] ; add al, 5 ; add byte ptr [rax], al ; ret 0x504
0x00000000007df670 : add al, 0 ; mov ah, 2 ; add al, 0x8c ; add al, 0 ; ret
0x000000000079b04e : add al, 0 ; mov al, 0xc ; out -1, eax ; ret 0
0x00000000007d2812 : add al, 0 ; mov al, byte ptr [rbx] ; add byte ptr [rax], al ; retf 0x504
0x000000000079a9c6 : add al, 0 ; mov bl, 0xc6 ; call qword ptr [rdx]
0x0000000000790796 : add al, 0 ; mov byte ptr [rax - 0x1e], ah ; jmp qword ptr [rdx]
0x00000000007904f6 : add al, 0 ; mov byte ptr [rax - 0x1e], bl ; jmp qword ptr [rdx]
0x0000000000790376 : add al, 0 ; mov byte ptr [rdx - 0x1e], dl ; jmp qword ptr [rdi]
0x00000000007e0cd9 : add al, 0 ; mov ch, 4 ; adc ah, dl ; add al, 0 ; retf 0x504
0x0000000000797786 : add al, 0 ; mov ch, byte ptr [rbx - 0x1b] ; call rsp
0x000000000078db56 : add al, 0 ; mov cl, 0xe1 ; call qword ptr [rax]
0x000000000078db3e : add al, 0 ; mov cl, 0xe1 ; jmp qword ptr [rax]
0x000000000078cec6 : add al, 0 ; mov fs, rcx ; call qword ptr [rax]
0x000000000061e4a2 : add al, 0 ; mov rax, qword ptr [rip + 0x3e4435] ; call rax
0x000000000061e384 : add al, 0 ; mov rax, qword ptr [rip + 0x3e4553] ; call rax
0x000000000061e160 : add al, 0 ; mov rax, qword ptr [rip + 0x3e4777] ; call rax
0x000000000067c787 : add al, 0 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006344d2 : add al, 0 ; mov rdi, r13 ; call 0x6806eb
0x000000000067628c : add al, 0 ; mov rdi, rax ; mov rax, rbx ; pop rbx ; jmp rax
0x0000000000672b1e : add al, 0 ; mov rdi, rbp ; call 0x6bf557
0x0000000000793536 : add al, 0 ; mov word ptr [rsp], ss ; call rsp
0x000000000073e3d2 : add al, 0 ; nop ; adc ah, dl ; call qword ptr [rax]
0x000000000078f7ae : add al, 0 ; nop ; add ah, dl ; jmp qword ptr [rdx]
0x0000000000798aae : add al, 0 ; nop ; add al, 0xe6 ; jmp qword ptr [rax]
0x000000000073ed6a : add al, 0 ; nop ; add bl, ah ; call qword ptr [rax]
0x00000000007e4b77 : add al, 0 ; nop ; add cl, byte ptr [rcx] ; add byte ptr [rax], al ; loope 0x7e4b8b ; ret 0xa301
0x00000000004b0dd2 : add al, 0 ; nop ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000073cba2 : add al, 0 ; nop ; in eax, -0x21 ; call qword ptr [rax]
0x00000000004b2f7a : add al, 0 ; nop ; leave ; ret
0x000000000073c952 : add al, 0 ; nop ; mov ah, 0xdf ; call qword ptr [rax]
0x000000000073d34a : add al, 0 ; nop ; mov ch, 0xe0 ; jmp rax
0x0000000000622e61 : add al, 0 ; nop ; pop rbp ; ret
0x000000000073d51a : add al, 0 ; nop ; ret
0x000000000073e1e2 : add al, 0 ; nop ; ret 0xffe1
0x000000000079a30e : add al, 0 ; nop ; ret 0xffe6
0x000000000073d9ea : add al, 0 ; nop ; sub ah, cl ; jmp rax
0x00000000006696d1 : add al, 0 ; nop dword ptr [rax + rax] ; pop rbx ; ret
0x000000000079b0ce : add al, 0 ; or byte ptr [rdi], 0xe7 ; call qword ptr [rdx]
0x00000000007990f6 : add al, 0 ; or byte ptr [rsi], bl ; jmp rax
0x000000000078b7c6 : add al, 0 ; pop rax ; adc al, 0xe1 ; call qword ptr [rdx]
0x0000000000733cea : add al, 0 ; pop rax ; adc ch, cl ; call rax
0x000000000078f756 : add al, 0 ; pop rax ; add ah, dl ; jmp qword ptr [rdi]
0x0000000000798546 : add al, 0 ; pop rax ; mul ebp ; call qword ptr [rdx]
0x000000000078fab6 : add al, 0 ; pop rax ; or dl, ah ; jmp qword ptr [rbx]
0x0000000000799c76 : add al, 0 ; pop rax ; push rcx ; out 0xff, al ; ret 0
0x000000000079796e : add al, 0 ; pop rax ; xchg eax, ebx ; in eax, -1 ; retf 1
0x000000000079542e : add al, 0 ; push rax ; add ch, ah ; call rsp
0x000000000073cb92 : add al, 0 ; push rax ; in eax, -0x21 ; jmp rax
0x000000000073cf6a : add al, 0 ; push rax ; ja 0x73cf54 ; jmp rax
0x000000000073f7aa : add al, 0 ; push rax ; jmp rbx
0x000000000073c782 : add al, 0 ; push rax ; mov bl, bh ; jmp rax
0x000000000073f312 : add al, 0 ; push rax ; mov ebx, fs ; call rax
0x000000000073f82a : add al, 0 ; push rax ; or ah, ah ; call qword ptr [rax]
0x000000000078fbfe : add al, 0 ; push rax ; or edx, esp ; jmp qword ptr [rdx]
0x000000000073d50a : add al, 0 ; push rax ; ret
0x0000000000797c7e : add al, 0 ; pushfq ; mov ah, 0xe5 ; jmp qword ptr [rbx]
0x00000000007980ae : add al, 0 ; rcl bh, 0xe5 ; jmp qword ptr [rbx]
0x000000000073d81a : add al, 0 ; rcl byte ptr [rbx], 0xe1 ; call qword ptr [rax]
0x000000000079512e : add al, 0 ; rcr bh, 0xe4 ; jmp rsi
0x000000000073f50a : add al, 0 ; ret
0x00000000007df730 : add al, 0 ; ret 0x402
0x00000000007ccb87 : add al, 0 ; ret 0x501
0x00000000007d27d8 : add al, 0 ; ret 0x502
0x00000000007e0edc : add al, 0 ; ret 0x504
0x0000000000733db2 : add al, 0 ; ret 0xcd13
0x00000000007e14f3 : add al, 0 ; ret 0xd04
0x000000000079293e : add al, 0 ; ret 0xe3bc
0x0000000000794a36 : add al, 0 ; ret 0xe4b8
0x000000000079815e : add al, 0 ; ret 0xe5d8
0x000000000079838e : add al, 0 ; ret 0xe5ed
0x000000000073d4d2 : add al, 0 ; ret 0xffe0
0x000000000079124e : add al, 0 ; ret 0xffe2
0x000000000079a22e : add al, 0 ; ret 0xffe6
0x00000000007bf161 : add al, 0 ; retf
0x0000000000797b06 : add al, 0 ; retf -0x1a60
0x0000000000797576 : add al, 0 ; retf -0x1a9c
0x0000000000797016 : add al, 0 ; retf -0x1aab
0x0000000000796246 : add al, 0 ; retf -0x1acc
0x0000000000792bee : add al, 0 ; retf -0x1d
0x000000000073cb12 : add al, 0 ; retf -0x21
0x0000000000733c92 : add al, 0 ; retf -0x32f2
0x000000000078cd3e : add al, 0 ; retf -0x3879
0x00000000007cb1d4 : add al, 0 ; retf 0x3e04
0x00000000007d2730 : add al, 0 ; retf 0x502
0x00000000007e0cdf : add al, 0 ; retf 0x504
0x00000000007d7a5e : add al, 0 ; retf 0xd01
0x000000000078ffae : add al, 0 ; rol byte ptr [rbp - 0x1e], 1 ; jmp qword ptr [rbx]
0x000000000073db7a : add al, 0 ; rol byte ptr [rdx - 0x1f], 1 ; jmp qword ptr [rax]
0x00000000007930a6 : add al, 0 ; rol byte ptr [rdx], 0xe4 ; call qword ptr [rdi]
0x0000000000793aee : add al, 0 ; rol byte ptr [rsi - 0x1c], 1 ; call rsp
0x0000000000792a6e : add al, 0 ; salc ; ret 0xffe3
0x000000000073cfd2 : add al, 0 ; sar byte ptr [rdx - 0x20], 1 ; call rax
0x000000000079b34e : add al, 0 ; sbb al, 0xe7 ; jmp qword ptr [rcx]
0x000000000073d89a : add al, 0 ; sbb byte ptr [rax], 0xe1 ; call qword ptr [rax]
0x0000000000793ef6 : add al, 0 ; sbb byte ptr [rbp - 0x1c], bl ; call rsp
0x0000000000793dc6 : add al, 0 ; sbb byte ptr [rcx - 0x1c], bl ; jmp qword ptr [rbx]
0x0000000000790826 : add al, 0 ; sbb byte ptr [rcx - 0x1e], ah ; jmp qword ptr [rdx]
0x00000000007907de : add al, 0 ; shl byte ptr [rax - 0x1e], 1 ; jmp qword ptr [rbx]
0x0000000000791a5e : add al, 0 ; shl byte ptr [rax], 0xe3 ; jmp qword ptr [rax]
0x000000000073dce2 : add al, 0 ; shl byte ptr [rsi - 0x1f], 1 ; call rax
0x0000000000790a9e : add al, 0 ; shr byte ptr [rbx - 0x1e], 1 ; jmp qword ptr [rdx]
0x00000000007ef914 : add al, 0 ; stosd dword ptr [rdi], eax ; add dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x0000000000799dc6 : add al, 0 ; sub byte ptr [rdi - 0x1a], dl ; call qword ptr [rcx]
0x000000000079ae76 : add al, 0 ; sub byte ptr [rdi], al ; jmp qword ptr [rbx]
0x000000000079694e : add al, 0 ; sub cl, byte ptr [rax - 0x1b] ; call qword ptr [rax]
0x0000000000793c8e : add al, 0 ; sub dl, byte ptr [rbx - 0x1c] ; call rsp
0x000000000078bb16 : add al, 0 ; sub spl, cl ; call qword ptr [rcx]
0x000000000079691e : add al, 0 ; xchg byte ptr [rdi - 0x1b], al ; call rsp
0x00000000007f2777 : add al, 0 ; xchg eax, ebp ; add eax, 0x5059a05 ; retf 0x505
0x0000000000794426 : add al, 0 ; xchg eax, edx ; js 0x794414 ; jmp qword ptr [rdx]
0x0000000000794446 : add al, 0 ; xchg eax, esp ; js 0x794434 ; call rsp
0x0000000000794576 : add al, 0 ; xor bh, byte ptr [rsi - 0x1c] ; call qword ptr [rax]
0x0000000000799e2e : add al, 0 ; xor byte ptr [rax - 0x1a], bl ; call qword ptr [rdx]
0x000000000073e7d2 : add al, 0 ; xor byte ptr [rax - 0x1e], dl ; call rax
0x000000000079023e : add al, 0 ; xor byte ptr [rax - 0x1e], dl ; jmp qword ptr [rbx]
0x000000000078c5ce : add al, 0 ; xor byte ptr [rax - 0x1f], ch ; call qword ptr [rdi]
0x00000000005f7e3f : add al, 0 ; xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000073f0aa : add al, 0 ; xor byte ptr [rbp - 0x1d], ch ; jmp rax
0x000000000079083e : add al, 0 ; xor byte ptr [rcx - 0x1e], ah ; jmp qword ptr [rbx]
0x000000000073ccd2 : add al, 0 ; xor byte ptr [rdx], 0xe0 ; jmp rax
0x000000000073e78a : add al, 0 ; xor byte ptr [rsi - 0x1e], cl ; jmp rax
0x000000000073eeb2 : add al, 0 ; xor byte ptr [rsi], 0xe3 ; jmp qword ptr [rax - 0x35]
0x000000000079ab2e : add al, 0 ; xor cl, 0xe6 ; jmp qword ptr [rcx]
0x000000000078e20e : add al, 0 ; xor cl, cl ; loope 0x78e219 ; retf
0x0000000000570dfc : add al, 0x11 ; add bl, ch ; test dword ptr [rax - 0x77], ecx ; ret
0x00000000005701c5 : add al, 0x11 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b426c : add al, 0x12 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000069c90d : add al, 0x12 ; mov byte ptr [rdx + rax], sil ; jne 0x69c8d8 ; ret
0x00000000006a8f82 : add al, 0x13 ; sub eax, 0x5c415d5b ; ret
0x00000000005942aa : add al, 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000075cc0c : add al, 0x15 ; add dword ptr [rax], eax ; retf -0x2e9e
0x000000000057427c : add al, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e5c0e : add al, 0x16 ; add byte ptr [rax], al ; retf
0x00000000007cca52 : add al, 0x16 ; mov al, byte ptr [rax + rax] ; in eax, dx ; add al, 0x69 ; ret 4
0x00000000007e122a : add al, 0x16 ; ret 4
0x00000000005503ab : add al, 0x17 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x5503a0 ; ret
0x00000000006c6971 : add al, 0x17 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x21], dh ; ret
0x00000000006be461 : add al, 0x17 ; ret
0x00000000006be3fb : add al, 0x17 ; shl eax, 8 ; add eax, esi ; ret
0x0000000000500e76 : add al, 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000544305 : add al, 0x19 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000051e11e : add al, 0x1a ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007f9a00 : add al, 0x1c ; cwde ; sahf ; add dword ptr [rax], eax ; retf
0x0000000000769c10 : add al, 0x1c ; retf 0x7c
0x00000000004f42dc : add al, 0x1e ; add byte ptr [rax - 0x77], cl ; ret
0x000000000067c027 : add al, 0x20 ; and al, byte ptr [rbx + 0x4c0f06f8] ; ret 0x9848
0x00000000004ae1b0 : add al, 0x21 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e5d7e : add al, 0x22 ; ret 5
0x00000000007d2815 : add al, 0x23 ; add byte ptr [rax], al ; retf 0x504
0x00000000004904c8 : add al, 0x23 ; add cl, cl ; ret
0x000000000043f6b8 : add al, 0x24 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006c0d60 : add al, 0x24 ; add rsp, 0x18 ; ret
0x00000000006782d0 : add al, 0x24 ; add rsp, 0x28 ; ret
0x00000000006d06b3 : add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000005b951f : add al, 0x24 ; call qword ptr [rdi]
0x0000000000583d00 : add al, 0x24 ; cmp cl, byte ptr [rcx - 0x77] ; in eax, -0x18 ; jmp rdi
0x00000000006884b9 : add al, 0x24 ; jne 0x688506 ; call rax
0x000000000040f75c : add al, 0x27 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f7628 : add al, 0x29 ; or al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000078e20c : add al, 0x2b ; add al, 0 ; xor cl, cl ; loope 0x78e21b ; retf
0x000000000075e40c : add al, 0x2d ; add dword ptr [rax], eax ; retf -0x2df2
0x0000000000662834 : add al, 0x30 ; add rax, rdx ; ret
0x00000000007d1a06 : add al, 0x31 ; add byte ptr [rax], al ; retf 0x605
0x0000000000667488 : add al, 0x31 ; add rsp, 8 ; ret
0x00000000006b6f9e : add al, 0x31 ; fstp xword ptr [rcx] ; ret 0x57f
0x0000000000693d27 : add al, 0x31 ; idiv byte ptr [rcx] ; retf 0x57c
0x000000000069ca4c : add al, 0x32 ; ret
0x00000000006b2436 : add al, 0x35 ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; jmp qword ptr [rdx]
0x00000000006c5ae6 : add al, 0x37 ; add rsp, 8 ; ret
0x00000000006881f6 : add al, 0x37 ; ret
0x00000000006bd355 : add al, 0x37 ; setne al ; ret
0x00000000006ce0ec : add al, 0x38 ; ret
0x00000000004b0d7e : add al, 0x39 ; ret 0x117c
0x000000000043ffeb : add al, 0x39 ; ret 0x127c
0x00000000004d9cf4 : add al, 0x39 ; ret 0x147f
0x0000000000524180 : add al, 0x39 ; ret 0x217f
0x0000000000508009 : add al, 0x39 ; ret 0x227f
0x00000000004c5dc6 : add al, 0x39 ; ret 0x277e
0x00000000004f7053 : add al, 0x39 ; ret 0x2f7c
0x00000000005f872e : add al, 0x39 ; ret 0x337c
0x000000000055bef9 : add al, 0x39 ; ret 0x4489
0x0000000000467846 : add al, 0x39 ; ret 0x575
0x0000000000525b0c : add al, 0x39 ; ret 0x5f7e
0x000000000050aafb : add al, 0x39 ; ret 0x607e
0x00000000006a646a : add al, 0x39 ; ret 0x617f
0x0000000000519985 : add al, 0x39 ; ret 0x667e
0x00000000005e70f5 : add al, 0x39 ; ret 0x7a75
0x000000000066a7e9 : add al, 0x39 ; ret 0x87c
0x000000000067d34b : add al, 0x39 ; ret 0x8c0f
0x000000000055e159 : add al, 0x39 ; ret 0x8e0f
0x000000000067ab20 : add al, 0x39 ; ret 0x8f0f
0x000000000043bf79 : add al, 0x39 ; ret 0x972
0x00000000004b2cc3 : add al, 0x39 ; ret 0x97c
0x00000000004e6b45 : add al, 0x39 ; ret 0x9e0f
0x00000000004e935d : add al, 0x39 ; ret 0x9f0f
0x00000000006a0838 : add al, 0x39 ; ret 0xa7c
0x0000000000468447 : add al, 0x39 ; retf 0x147e
0x00000000006719f9 : add al, 0x39 ; retf 0x717f
0x00000000007d1003 : add al, 0x3a ; add byte ptr [rax], al ; ret 0x505
0x000000000079f30c : add al, 0x3c ; add eax, 0xe85e1200 ; jmp qword ptr [rcx]
0x00000000007d6caf : add al, 0x3e ; add byte ptr [rax], al ; ret 0x505
0x00000000006a89f2 : add al, 0x3e ; ret
0x000000000052c25d : add al, 0x40 ; mov byte ptr [rcx + rax*8 + 8], 0 ; pop rbx ; ret
0x00000000007217ae : add al, 0x41 ; ret
0x000000000079fa0c : add al, 0x43 ; add eax, 0xe8677000 ; call qword ptr [rbx]
0x00000000006a8faa : add al, 0x45 ; mov eax, 5 ; ret
0x000000000057196a : add al, 0x48 ; add eax, dword ptr [rdi + 8] ; sub rax, 0x28 ; ret
0x000000000059ddcd : add al, 0x48 ; add edi, 8 ; call 0x6aa857
0x000000000053e806 : add al, 0x48 ; add esp, 0x18 ; ret
0x0000000000677cf2 : add al, 0x48 ; add esp, 0x28 ; ret
0x00000000006cfe65 : add al, 0x48 ; add esp, 0x38 ; ret
0x00000000006bc489 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000053e784 : add al, 0x48 ; add esp, 8 ; ret
0x00000000006a48e8 : add al, 0x48 ; cmp eax, 0xe8 ; jne 0x6a48d7 ; ret
0x00000000006a493c : add al, 0x48 ; cmp eax, 0xe8 ; jne 0x6a4927 ; ret
0x00000000006a53b0 : add al, 0x48 ; cmp eax, 0xe8 ; jne 0x6a539f ; ret
0x00000000006a540c : add al, 0x48 ; cmp eax, 0xe8 ; jne 0x6a53f7 ; ret
0x000000000066bcbf : add al, 0x48 ; cmp ecx, eax ; jne 0x66bc5e ; ret
0x000000000066bcbe : add al, 0x48 ; cmp ecx, eax ; jne 0x66bc5f ; ret
0x0000000000575b18 : add al, 0x48 ; lea edi, dword ptr [rdx + rax - 0x28] ; call 0x571dd8
0x00000000007bf459 : add al, 0x48 ; mov al, 7 ; add cl, dh ; add al, 5 ; ret 7
0x000000000054a8b8 : add al, 0x48 ; mov eax, dword ptr [rax] ; ret
0x000000000054db24 : add al, 0x48 ; mov eax, dword ptr [rsi] ; ret
0x0000000000688bfc : add al, 0x48 ; mov eax, ebx ; jne 0x688c48 ; call rax
0x00000000006a096f : add al, 0x48 ; mov eax, edi ; ret
0x000000000053de8e : add al, 0x48 ; mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x0000000000586e97 : add al, 0x49 ; lea edi, dword ptr [rdi + 4] ; call 0x4038f7
0x000000000058c8f2 : add al, 0x4a ; str word ptr [rax - 0x77] ; ret
0x0000000000507628 : add al, 0x4c ; mov ecx, esp ; jne 0x5076ac ; mov rsi, rsp ; call rcx
0x000000000051df4d : add al, 0x4c ; mov ecx, esp ; jne 0x51dfc1 ; mov rsi, rsp ; call rcx
0x00000000005646ac : add al, 0x4c ; mov ecx, esp ; jne 0x56471f ; mov rsi, rsp ; call rcx
0x000000000058a039 : add al, 0x4c ; mov ecx, esp ; jne 0x58a0bd ; mov rsi, rsp ; call rcx
0x00000000006b7987 : add al, 0x4c ; sub esi, esi ; add rsi, rbp ; call 0x403c79
0x000000000072188a : add al, 0x4e ; ret 0x3b3
0x0000000000769d30 : add al, 0x50 ; retf
0x000000000079080c : add al, 0x51 ; add al, 0 ; add byte ptr [rcx - 0x1e], ah ; jmp qword ptr [rbx]
0x00000000005a56d8 : add al, 0x52 ; adc byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000750e4c : add al, 0x57 ; add byte ptr [rax], al ; ret 0xcdc7
0x00000000006cdc88 : add al, 0x5a ; sar edi, cl ; add rsp, 8 ; ret
0x0000000000632ef4 : add al, 0x5b ; ret
0x0000000000769c60 : add al, 0x60 ; retf 0x7c
0x0000000000769408 : add al, 0x64 ; ret
0x000000000079acf8 : add al, 0x64 ; retf
0x00000000007cca58 : add al, 0x69 ; ret 4
0x00000000007217ec : add al, 0x6a ; mov bl, 0x5c ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x00000000007a1cc3 : add al, 0x74 ; ret
0x0000000000792c0c : add al, 0x75 ; add al, 0 ; retf -0x1d
0x00000000006bb680 : add al, 0x76 ; fiadd word ptr [rax - 0x80] ; jmp qword ptr [rax]
0x0000000000783c60 : add al, 0x78 ; ret
0x0000000000769d90 : add al, 0x78 ; retf
0x0000000000426fa8 : add al, 0x79 ; sub dword ptr [rax], eax ; leave ; ret
0x0000000000721e3a : add al, 0x7a ; std ; retf 0x7bc6
0x00000000007c47ec : add al, 0x7c ; out dx, al ; add eax, 0x5059e00 ; retf
0x00000000006a1bbb : add al, 0x7d ; test ebx, ebp ; xchg eax, esi ; xor eax, eax ; ret
0x0000000000632ec6 : add al, 0x80 ; jl 0x632eda ; xor dword ptr [rcx], eax ; je 0x632ed9 ; pop rbx ; ret
0x00000000006d4ce8 : add al, 0x81 ; add r9, rax ; jmp r9
0x0000000000584f4d : add al, 0x82 ; ret
0x00000000006d2b4e : add al, 0x83 ; add rax, r11 ; jmp rax
0x00000000006c70ba : add al, 0x83 ; clc ; push qword ptr [rbp - 0x31] ; pop rbx ; ret
0x000000000067845d : add al, 0x83 ; loopne 0x678466 ; ret
0x0000000000549273 : add al, 0x83 ; ret
0x0000000000607e77 : add al, 0x83 ; rol byte ptr [rcx], 0x39 ; ret 0x8c0f
0x0000000000677b63 : add al, 0x83 ; rol dword ptr [rcx], 0x39 ; ret 0xed7c
0x00000000006d3a4b : add al, 0x84 ; add rax, r12 ; jmp rax
0x0000000000783d40 : add al, 0x84 ; ret
0x0000000000678db7 : add al, 0x85 ; jl 0x678e2b ; jb 0x678dc3 ; ret
0x000000000060e408 : add al, 0x85 ; ror byte ptr [rcx + 0xf5c2444], 0x9e ; ret 0xc839
0x00000000005a8ad2 : add al, 0x85 ; sal byte ptr [rbp + 1], 0xc3 ; push rax ; call 0x405567
0x000000000073890c : add al, 0x85 ; salc ; push rax ; retf
0x00000000005186e6 : add al, 0x85 ; sar byte ptr [rsi + 0x3f], 0x39 ; ret 0x3b7c
0x0000000000763e4c : add al, 0x87 ; add dword ptr [rax], eax ; ret 0xd52e
0x0000000000450442 : add al, 0x89 ; adc cl, cl ; ret
0x00000000005eff05 : add al, 0x89 ; ret
0x00000000004678dc : add al, 0x89 ; ret 0x458b
0x00000000004e93ab : add al, 0x89 ; ret 0x858b
0x000000000043b5ff : add al, 0x89 ; ret 0x8b48
0x00000000005eff2f : add al, 0x89 ; ret 0xc889
0x00000000006ca1d3 : add al, 0x8b ; adc bh, byte ptr [rcx] ; ret 0x167e
0x000000000067a89f : add al, 0x8b ; adc bh, byte ptr [rcx] ; ret 0x3c7e
0x00000000005c805a : add al, 0x8b ; adc bh, byte ptr [rcx] ; ret 0x4f7e
0x00000000005cab82 : add al, 0x8b ; adc bh, byte ptr [rcx] ; ret 0x8e0f
0x0000000000566265 : add al, 0x8b ; adc bh, byte ptr [rcx] ; retf -0x70f1
0x00000000005c4fcb : add al, 0x8b ; adc bh, byte ptr [rcx] ; retf -0x71f1
0x00000000005beba2 : add al, 0x8b ; adc cl, byte ptr [rcx - 0x77] ; in eax, 0x39 ; retf 0x4c7f
0x00000000004f6a49 : add al, 0x8b ; add bh, byte ptr [rcx] ; ret
0x000000000068b23c : add al, 0x8b ; add byte ptr [r9], r15b ; ret 0x447d
0x000000000064b0ce : add al, 0x8b ; add byte ptr [rcx], bh ; ret
0x00000000004fd0d7 : add al, 0x8b ; add byte ptr [rcx], bh ; ret 0x8c0f
0x000000000067bd49 : add al, 0x8b ; add edi, dword ptr [rcx] ; ret 0x407c
0x0000000000599073 : add al, 0x8b ; add edi, dword ptr [rcx] ; ret 0x7d7c
0x000000000055c0ef : add al, 0x8b ; or byte ptr [rcx], bh ; retf -0x72f1
0x00000000005cbfa0 : add al, 0x8b ; sbb edi, dword ptr [rcx] ; ret
0x00000000006a1f22 : add al, 0x8b ; xor dword ptr [rax - 0x77], ecx ; ret 0xf089
0x00000000007df674 : add al, 0x8c ; add al, 0 ; ret
0x000000000073897c : add al, 0x90 ; salc ; call qword ptr [rax]
0x00000000007f69e8 : add al, 0x91 ; or r14d, r14d ; syscall
0x00000000007559e0 : add al, 0x97 ; iretd ; call rsp
0x00000000007559a0 : add al, 0x97 ; iretd ; jmp qword ptr [rsi]
0x00000000007e1696 : add al, 0x9d ; add al, byte ptr [rcx] ; xchg eax, esi ; add dword ptr [rbx], edx ; add byte ptr [rax], al ; retf 0x501
0x00000000006cf52d : add al, 0xa ; add rsp, 8 ; ret
0x0000000000783bd0 : add al, 0xa0 ; ret 0x7d
0x0000000000722e39 : add al, 0xa0 ; retf -0x3985
0x00000000007d5662 : add al, 0xa4 ; add eax, 0x7028400 ; ret 5
0x0000000000783d70 : add al, 0xa4 ; ret
0x00000000007693d8 : add al, 0xa4 ; ret 0x7c
0x00000000006d10e5 : add al, 0xa8 ; add dword ptr [rbp + 0xa], esi ; mov rsi, rsp ; call rax
0x000000000068fed8 : add al, 0xaa ; add dword ptr [rax], eax ; nop dword ptr [rax] ; ret
0x00000000007c70d9 : add al, 0xaa ; or eax, dword ptr [rax] ; add ah, ah ; syscall
0x000000000076644c : add al, 0xad ; add dword ptr [rax], eax ; hlt ; rcl ebp, 1 ; call rsp
0x00000000006a9742 : add al, 0xb ; sub eax, 0x5c415d5b ; ret
0x000000000058f676 : add al, 0xb0 ; add rsp, 8 ; ret
0x0000000000584efd : add al, 0xb0 ; ret
0x0000000000769c90 : add al, 0xb0 ; retf 0x7c
0x000000000079694c : add al, 0xb2 ; add al, 0 ; sub cl, byte ptr [rax - 0x1b] ; call qword ptr [rax]
0x00000000006caf7b : add al, 0xb3 ; add byte ptr [rax], al ; add al, ch ; retf 0x36
0x0000000000756c4c : add al, 0xb5 ; add byte ptr [rax], al ; mov ah, 0xc3 ; iretd ; call rsp
0x00000000006cbb75 : add al, 0xb5 ; mov al, 0x28 ; jae 0x6cbb81 ; ret
0x000000000076734c : add al, 0xbc ; add dword ptr [rax], eax ; add bl, byte ptr [rsi - 0x2a] ; call rsp
0x00000000005c071b : add al, 0xc ; add byte ptr [rax - 0x7d], cl ; cli ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000050fbd9 : add al, 0xc1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x50fbd8 ; ret
0x000000000052f9d9 : add al, 0xc1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x52f9d8 ; ret
0x000000000052fbf9 : add al, 0xc1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x52fbf8 ; ret
0x0000000000597ae9 : add al, 0xc1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x597ae8 ; ret
0x00000000006300c9 : add al, 0xc1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x6300c8 ; ret
0x0000000000630689 : add al, 0xc1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x630688 ; ret
0x000000000066bfe9 : add al, 0xc1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x66bfe8 ; ret
0x000000000068e969 : add al, 0xc1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x68e968 ; ret
0x000000000068ea59 : add al, 0xc1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x68ea58 ; ret
0x000000000068ea99 : add al, 0xc1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x68ea98 ; ret
0x000000000068eb99 : add al, 0xc1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x68eb98 ; ret
0x00000000006a4169 : add al, 0xc1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x6a4168 ; ret
0x00000000006a8299 : add al, 0xc1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x6a8298 ; ret
0x00000000005085eb : add al, 0xc1 ; test rax, rax ; je 0x5085e7 ; ret
0x000000000055696b : add al, 0xc1 ; test rax, rax ; je 0x556967 ; ret
0x000000000062767b : add al, 0xc1 ; test rax, rax ; je 0x627677 ; ret
0x000000000051828b : add al, 0xc3 ; nop dword ptr [rax] ; movzx eax, byte ptr [rdi + 0x40] ; ret
0x0000000000526f4b : add al, 0xc3 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000007eed92 : add al, 0xc4 ; add eax, dword ptr [rax] ; push 4 ; ret 3
0x0000000000783db8 : add al, 0xc4 ; ret
0x00000000004d012e : add al, 0xc5 ; cwde ; shr dword ptr [rsi], 1 ; jmp rax
0x00000000004dab60 : add al, 0xc5 ; shr dword ptr [rsi], cl ; jmp rax
0x0000000000496fbf : add al, 0xc5 ; xor byte ptr [rbx - 0x1f00ff92], dl ; pop rbp ; ret
0x00000000007f6540 : add al, 0xc6 ; sbb dword ptr [rax], eax ; ret
0x00000000005083d0 : add al, 0xc6 ; test rax, rax ; je 0x5083c8 ; pop rbx ; ret
0x0000000000556750 : add al, 0xc6 ; test rax, rax ; je 0x556748 ; pop rbx ; ret
0x0000000000627460 : add al, 0xc6 ; test rax, rax ; je 0x627458 ; pop rbx ; ret
0x0000000000777e0c : add al, 0xc7 ; add al, byte ptr [rax] ; retf
0x000000000050a175 : add al, 0xc7 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000052fa09 : add al, 0xc7 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x52fa08 ; ret
0x0000000000597b19 : add al, 0xc7 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x597b18 ; ret
0x00000000006a6010 : add al, 0xc7 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000006ce57b : add al, 0xc7 ; sar rax, cl ; and eax, 1 ; ret
0x0000000000647f38 : add al, 0xc8 ; or byte ptr [rax], al ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007da17d : add al, 0xcd ; add al, byte ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rdx], eax ; retf
0x00000000007e1225 : add al, 0xd ; add byte ptr [rax], al ; out dx, al ; add al, 0x16 ; ret 4
0x00000000007f8900 : add al, 0xd ; add byte ptr [rax], al ; ret
0x00000000007359c5 : add al, 0xd0 ; inc dword ptr [rax - 0x17] ; add dword ptr [rax], eax ; ret 0xd004
0x00000000007f88f5 : add al, 0xd0 ; or eax, 0x304af00 ; retf
0x00000000007616f9 : add al, 0xd4 ; call rsp
0x00000000007695d0 : add al, 0xd4 ; ret
0x000000000050be96 : add al, 0xd7 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x50be90 ; ret
0x0000000000558b86 : add al, 0xd7 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x558b80 ; ret
0x000000000062b306 : add al, 0xd7 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x62b300 ; ret
0x00000000006a41a7 : add al, 0xd7 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x6a41a0 ; ret
0x00000000006ce5a6 : add al, 0xd7 ; ret
0x00000000007d191a : add al, 0xd8 ; add al, byte ptr [rcx] ; retf
0x000000000068232f : add al, 0xd9 ; retf
0x000000000077f299 : add al, 0xde ; jmp qword ptr [rbx]
0x00000000007e2b65 : add al, 0xde ; or byte ptr [rax], al ; ret
0x00000000005cc230 : add al, 0xe ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005de3b7 : add al, 0xe ; add cl, cl ; ret
0x00000000006a8ddf : add al, 0xe ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006674d9 : add al, 0xe ; add rsp, 8 ; ret
0x0000000000757c78 : add al, 0xe0 ; iretd ; call qword ptr [rbx]
0x00000000007d2150 : add al, 0xe1 ; add eax, dword ptr [rax] ; ret 0x401
0x0000000000793149 : add al, 0xe4 ; call rdx
0x0000000000798ab1 : add al, 0xe6 ; jmp qword ptr [rax]
0x000000000079ae79 : add al, 0xe7 ; jmp qword ptr [rbx]
0x000000000079ae31 : add al, 0xe7 ; jmp qword ptr [rcx]
0x00000000006b78fc : add al, 0xe8 ; outsb dx, byte ptr [rsi] ; ret
0x000000000054929f : add al, 0xe8 ; retf
0x00000000007a2859 : add al, 0xe9 ; call rsi
0x000000000079a30c : add al, 0xec ; add al, 0 ; nop ; ret 0xffe6
0x0000000000783de8 : add al, 0xec ; ret
0x0000000000769cf8 : add al, 0xec ; retf 0x7c
0x0000000000517212 : add al, 0xed ; and byte ptr [rax], al ; add byte ptr [rax], al ; call 0x403c78
0x0000000000663a31 : add al, 0xf ; mov bh, 0xb3 ; ret 0x7213
0x00000000005134ea : add al, 0xf ; mov dh, 0 ; ret
0x00000000006bf5cb : add al, 0xf ; popfq ; ret 0xd184
0x0000000000549276 : add al, 0xf ; ret
0x00000000006bd3d4 : add al, 0xf ; xchg eax, esi ; ret 0x8040
0x00000000006bd3b4 : add al, 0xf ; xchg eax, esi ; ret 0xef83
0x0000000000694649 : add al, 0xf ; xchg eax, esp ; ret 0xfb83
0x000000000068f52d : add al, 0xf0 ; ret
0x0000000000526b49 : add al, 0xf0 ; test rax, rax ; je 0x526b58 ; ret
0x0000000000590919 : add al, 0xf0 ; test rax, rax ; je 0x590928 ; ret
0x00000000006164eb : add al, 0xf1 ; mov qword ptr [rcx + rsi*8 + 8], rdx ; leave ; ret
0x00000000007e6fc3 : add al, 0xf2 ; sbb byte ptr [rdi], al ; mov esi, 0x406 ; ret 0x5a06
0x000000000050fc5d : add al, 0xf7 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000006cb677 : add al, 0xf7 ; ret
0x00000000007cecd1 : add al, 0xfa ; add al, byte ptr [rax] ; ret 0x401
0x00000000007d242e : add al, 0xfc ; or byte ptr [rax], al ; ret 0x403
0x00000000006cb687 : add al, 0xfe ; ret
0x000000000076b80c : add al, 1 ; add al, byte ptr [rax] ; nop ; mov dl, 0xd9 ; call qword ptr [rcx]
0x000000000074b80c : add al, 1 ; add byte ptr [rax], al ; mov bl, bl ; retf
0x00000000006a977e : add al, 1 ; and byte ptr [rbp - 0x23], dh ; ret
0x0000000000507237 : add al, 1 ; lock add dword ptr [rax], 1 ; ret
0x0000000000507d73 : add al, 1 ; lock add dword ptr [rdi], 1 ; ret
0x000000000051d778 : add al, 1 ; lock sub dword ptr [rax], 1 ; jmp 0x51d752
0x00000000005898e8 : add al, 1 ; lock sub dword ptr [rax], 1 ; jmp 0x5898c2
0x00000000005a4e68 : add al, 1 ; lock sub dword ptr [rax], 1 ; jmp 0x5a4e42
0x0000000000507247 : add al, 1 ; lock sub dword ptr [rax], 1 ; ret
0x0000000000507db3 : add al, 1 ; lock sub dword ptr [rdi], 1 ; ret
0x00000000004f7c6f : add al, 1 ; ret
0x00000000007d1c2f : add al, 1 ; ret 0x3d03
0x000000000066375a : add al, 1 ; ret 0x8348
0x00000000007f9594 : add al, 1 ; ret 0xa601
0x00000000007e320f : add al, 1 ; retf 0x203
0x00000000006c5c66 : add al, 2 ; ret
0x0000000000778637 : add al, 2 ; ret 0xe0a
0x000000000064f67b : add al, 3 ; add bl, ch ; fisttp qword ptr [rax - 0x77] ; ret
0x000000000074ba4c : add al, 3 ; add byte ptr [rax], al ; dec ebx ; call rax
0x00000000007d6cac : add al, 3 ; in eax, dx ; add al, 0x3e ; add byte ptr [rax], al ; ret 0x505
0x00000000007d1000 : add al, 3 ; int1 ; add al, 0x3a ; add byte ptr [rax], al ; ret 0x505
0x00000000007ad417 : add al, 3 ; jae 0x7ad42f ; ret
0x00000000007e7d05 : add al, 3 ; ret
0x000000000074c979 : add al, 3 ; ret 0xc01
0x000000000079eb59 : add al, 3 ; retf
0x00000000007cd070 : add al, 3 ; retf 0x505
0x000000000074ef71 : add al, 3 ; retf 0xc01
0x0000000000766b3d : add al, 3 ; retf 0xc09
0x00000000007fc02d : add al, 4 ; add byte ptr [rax], al ; retf
0x00000000007f88f4 : add al, 4 ; ror byte ptr [rip + 0x304af00], 1 ; retf
0x000000000079bbc5 : add al, 5 ; add ah, dl ; ja 0x79bbb8 ; jmp rdx
0x00000000007df29b : add al, 5 ; add al, 0 ; retf 0x3e04
0x00000000007ded59 : add al, 5 ; add byte ptr [rax], al ; ret 0x504
0x00000000007bfccd : add al, 5 ; call qword ptr [rcx]
0x00000000007f4c3a : add al, 5 ; enter 0x10, -0x1b ; add al, 6 ; ret
0x00000000007d85a3 : add al, 5 ; fild dword ptr [rax + rax] ; ret
0x00000000007e0ed9 : add al, 5 ; fild dword ptr [rax + rax] ; ret 0x504
0x00000000007cb1d1 : add al, 5 ; fild dword ptr [rax + rax] ; retf 0x3e04
0x00000000007f5d48 : add al, 5 ; int1 ; sbb al, byte ptr [rax] ; ret
0x00000000007d01e5 : add al, 5 ; movsd dword ptr [rdi], dword ptr [rsi] ; adc eax, dword ptr [rax] ; ret
0x00000000007d1ed8 : add al, 5 ; pushfq ; add al, 7 ; retf
0x00000000007d8f0d : add al, 5 ; ret
0x00000000007c70d3 : add al, 5 ; ret 0x18
0x00000000007dd564 : add al, 5 ; ret 0xb
0x00000000007cca4c : add al, 5 ; ret 4
0x00000000007bf45f : add al, 5 ; ret 7
0x00000000007e6fb1 : add al, 5 ; retf
0x00000000007d90e4 : add al, 5 ; retf 0x15
0x00000000007d28b9 : add al, 5 ; retf 4
0x00000000007e5941 : add al, 5 ; stc ; add al, 0 ; ret
0x00000000007d8f07 : add al, 5 ; wait ; add eax, 0x504bb05 ; ret
0x00000000007eb824 : add al, 5 ; xchg eax, edi ; sbb dword ptr [rax], eax ; ret 0x1b04
0x00000000007abbcd : add al, 6 ; add byte ptr [rax + 0x3b], bh ; in eax, dx ; call qword ptr [rcx]
0x000000000065e1a5 : add al, 6 ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x00000000007abb45 : add al, 6 ; add dh, bl ; cmp ch, ch ; jmp qword ptr [rbx]
0x000000000079bd4c : add al, 6 ; add eax, 0xe786aa00 ; call rsp
0x00000000007f0714 : add al, 6 ; jmp qword ptr [rax]
0x00000000007f4c40 : add al, 6 ; ret
0x00000000007cfcaa : add al, 6 ; ret 4
0x00000000007edc17 : add al, 6 ; retf
0x0000000000687be1 : add al, 6 ; shr al, cl ; and eax, 1 ; ret
0x00000000006a981e : add al, 6 ; sub dh, byte ptr [rbp - 0x23] ; ret
0x00000000006c7e10 : add al, 7 ; ret
0x00000000007d1edb : add al, 7 ; retf
0x0000000000783c08 : add al, 8 ; ret
0x000000000069d6e2 : add al, 9 ; retf -0x313f
0x00000000007463bb : add al, ah ; adc ebx, esi ; jmp qword ptr [rax]
0x000000000078f81f : add al, ah ; add ah, dl ; call qword ptr [rsi]
0x000000000078f67f : add al, ah ; add dl, ah ; jmp qword ptr [rdx]
0x00000000007ebf9b : add al, ah ; add dword ptr [rdi + rdi*8], edx ; or byte ptr [rax], al ; ret
0x000000000073ac03 : add al, ah ; and ebp, ebx ; call rax
0x000000000073ae0b : add al, ah ; cmp ch, bl ; jmp rax
0x000000000073a713 : add al, ah ; cmp ebx, esp ; jmp qword ptr [rax]
0x000000000078246f : add al, ah ; fcomp st(6) ; jmp qword ptr [rcx]
0x00000000007bb41f : add al, ah ; fdivrp st(0) ; jmp qword ptr [rcx]
0x000000000073fb9b : add al, ah ; fsubr st(4), st(0) ; jmp qword ptr [rax]
0x000000000073f5fb : add al, ah ; fsubrp st(3) ; jmp qword ptr [rax]
0x00000000007ac447 : add al, ah ; in eax, dx ; call qword ptr [rbx]
0x0000000000741a03 : add al, ah ; ja 0x7419f2 ; jmp qword ptr [rax]
0x000000000073f0d3 : add al, ah ; jae 0x73f0be ; call rax
0x000000000073f123 : add al, ah ; jbe 0x73f10e ; call qword ptr [rax]
0x00000000007a2c8f : add al, ah ; jmp 0x7aef9b
0x000000000073d733 : add al, ah ; jmp rax
0x000000000073f7bb : add al, ah ; jmp rbx
0x000000000075cf9f : add al, ah ; jno 0x75cf78 ; jmp qword ptr [rbx]
0x000000000074b2d3 : add al, ah ; lodsd eax, dword ptr [rsi] ; stc ; jmp qword ptr [rax]
0x000000000073fc33 : add al, ah ; loop 0x73fc1f ; call qword ptr [rax]
0x000000000073f62b : add al, ah ; loopne 0x73f616 ; jmp rax
0x00000000007ba6af : add al, ah ; mov bl, 0xf0 ; jmp qword ptr [rbx]
0x00000000007498a3 : add al, ah ; mov bl, 0xf7 ; jmp qword ptr [rax]
0x00000000007ad4af : add al, ah ; mov ch, ch ; jmp qword ptr [rax]
0x00000000007441b3 : add al, ah ; mov ebp, ebp ; call qword ptr [rax]
0x00000000007557af : add al, ah ; mov edi, ecx ; jmp rsi
0x00000000007455f3 : add al, ah ; mov edi, gs ; jmp qword ptr [rax]
0x000000000073be73 : add al, ah ; mov esi, ds ; call qword ptr [rax]
0x00000000007410f3 : add al, ah ; mov esi, esp ; call qword ptr [rax]
0x0000000000741133 : add al, ah ; mov fs, esi ; call rax
0x000000000075e247 : add al, ah ; or al, 0xd2 ; call qword ptr [rbx]
0x000000000078b2ff : add al, ah ; or al, 0xe1 ; call qword ptr [rsi]
0x000000000077207f : add al, ah ; or bl, bl ; jmp rax
0x000000000073fe4b : add al, ah ; or ch, ah ; call rax
0x000000000073aa1b : add al, ah ; or ebx, ebp ; call rax
0x0000000000745e9b : add al, ah ; outsb dx, byte ptr [rsi] ; call qword ptr [rax]
0x000000000074aa23 : add al, ah ; pop rbx ; stc ; jmp rax
0x00000000007acf7f : add al, ah ; pop rsi ; in eax, dx ; jmp qword ptr [rcx]
0x00000000007470f3 : add al, ah ; push rsp ; hlt ; jmp qword ptr [rax]
0x00000000004025cf : add al, ah ; ret
0x00000000004022cf : add al, ah ; ret 0x9f
0x000000000077930f : add al, ah ; ret 0xffdc
0x000000000073f4eb : add al, ah ; ret 0xffe3
0x000000000079a34f : add al, ah ; ret 0xffe6
0x00000000007bad7f : add al, ah ; ret 0xfff0
0x00000000007065ef : add al, ah ; retf
0x0000000000741f6b : add al, ah ; retf -0x19
0x000000000073f56b : add al, ah ; retf -0x1d
0x00000000007482eb : add al, ah ; retf -0xb
0x000000000070ca8f : add al, ah ; retf 0x70
0x00000000006d95ff : add al, ah ; retf 0x9f
0x000000000074836b : add al, ah ; sal ch, cl ; jmp qword ptr [rax]
0x00000000007b34af : add al, ah ; sbb bh, ch ; jmp qword ptr [rcx]
0x00000000007efd08 : add al, ah ; syscall
0x00000000007ade5f : add al, ah ; wait ; in eax, dx ; call qword ptr [rdx]
0x0000000000749643 : add al, ah ; xchg bh, dh ; jmp qword ptr [rax]
0x000000000073ad8b : add al, ah ; xor al, 0xdd ; jmp qword ptr [rax]
0x00000000007421d3 : add al, ah ; xor al, ch ; call qword ptr [rax]
0x000000000079b2df : add al, al ; adc al, 0xe7 ; call qword ptr [rdi]
0x000000000073d81b : add al, al ; adc esp, ecx ; call qword ptr [rax]
0x00000000007930a7 : add al, al ; add ah, ah ; call qword ptr [rdi]
0x00000000007616f7 : add al, al ; add al, 0xd4 ; call rsp
0x00000000007ce77a : add al, al ; add eax, 0x5f405 ; retf 0x505
0x00000000007eb7b4 : add al, al ; add eax, 0x68005 ; retf 0x3405
0x00000000007e8908 : add al, al ; add eax, dword ptr [rdx] ; ret 6
0x0000000000748ebb : add al, al ; and al, 0xf7 ; jmp rax
0x0000000000791a5f : add al, al ; and bl, ah ; jmp qword ptr [rax]
0x00000000007716ff : add al, al ; fstp st(2) ; call rsi
0x000000000073b56b : add al, al ; fstp st(5), st(0) ; call rax
0x000000000073fbbb : add al, al ; fucom st(4) ; call rax
0x00000000007aad6f : add al, al ; fucompi st(4) ; jmp qword ptr [rcx]
0x0000000000746feb : add al, al ; hlt ; jmp rax
0x00000000007afe5f : add al, al ; imul ch ; call qword ptr [rax]
0x00000000007f4561 : add al, al ; in eax, dx ; add dword ptr [rip + 0x1eef9], eax ; retf 0x1ed
0x00000000007ac507 : add al, al ; in eax, dx ; call qword ptr [rbx]
0x00000000007b7cff : add al, al ; in eax, dx ; out dx, eax ; jmp qword ptr [rax]
0x000000000074b513 : add al, al ; in eax, dx ; stc ; jmp rax
0x0000000000739953 : add al, al ; ja 0x739933 ; call qword ptr [rax]
0x000000000074549b : add al, al ; ja 0x745492 ; jmp rax
0x000000000074948b : add al, al ; jb 0x74948a ; call qword ptr [rax]
0x00000000007554df : add al, al ; je 0x7554b6 ; call rsp
0x00000000007ad2ff : add al, al ; je 0x7ad2f4 ; call rsi
0x000000000073f1f3 : add al, al ; jge 0x73f1de ; call qword ptr [rax]
0x000000000074ac33 : add al, al ; jge 0x74ac34 ; jmp qword ptr [rax]
0x000000000073b06b : add al, al ; jno 0x73b050 ; call rax
0x0000000000749423 : add al, al ; jno 0x749422 ; call rax
0x0000000000777e3f : add al, al ; jnp 0x777e23 ; jmp qword ptr [rdx]
0x00000000007468f3 : add al, al ; jns 0x7468ee ; call rax
0x000000000073de93 : add al, al ; jp 0x73de7c ; call qword ptr [rax]
0x000000000073eec3 : add al, al ; jrcxz 0x73eecd ; nop ; retf
0x0000000000757eaf : add al, al ; loop 0x757e86 ; call qword ptr [rcx]
0x00000000007f3d02 : add al, al ; mov ah, 1 ; add eax, 0x1b590 ; retf 0x1b4
0x000000000074813b : add al, al ; mov ch, 0xf5 ; jmp qword ptr [rax]
0x0000000000749853 : add al, al ; mov cl, 0xf7 ; call qword ptr [rax]
0x000000000077103f : add al, al ; mov dh, 0xda ; jmp qword ptr [rcx]
0x000000000073be4b : add al, al ; mov esi, ebx ; jmp rax
0x00000000007410e3 : add al, al ; mov esi, esp ; jmp rax
0x000000000073ff93 : add al, al ; or al, 0xe5 ; call qword ptr [rax]
0x000000000074466b : add al, al ; out dx, al ; jmp rax
0x0000000000745dbb : add al, al ; pop rbx ; jmp rax
0x000000000070f140 : add al, al ; pop rcx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x00000000007352f3 : add al, al ; pop rdi ; iretd ; jmp qword ptr [rax]
0x000000000074669b : add al, al ; push rcx ; call rax
0x000000000074712b : add al, al ; push rdi ; hlt ; jmp qword ptr [rax]
0x00000000007470a3 : add al, al ; push rdx ; hlt ; jmp rax
0x0000000000743abb : add al, al ; push rsp ; in al, dx ; jmp qword ptr [rax]
0x0000000000781dbf : add al, al ; rcr esi, 1 ; jmp rcx
0x000000000040256f : add al, al ; ret
0x00000000006f76a7 : add al, al ; ret 0x51
0x00000000006fde0f : add al, al ; ret 0x54
0x000000000073eb6b : add al, al ; ret 0xffe2
0x000000000074a15b : add al, al ; ret 0xfff8
0x00000000006dccb7 : add al, al ; retf
0x00000000007489e3 : add al, al ; retf -0xa
0x00000000007482db : add al, al ; retf -0xb
0x0000000000724e27 : add al, al ; retf 0x66
0x000000000074a66b : add al, al ; sbb al, 0xf9 ; jmp qword ptr [rax]
0x000000000074209b : add al, al ; sbb al, ch ; call qword ptr [rax]
0x000000000074012b : add al, al ; sbb ebp, esp ; call qword ptr [rax]
0x000000000074083b : add al, al ; shl ch, cl ; call rax
0x000000000074b38c : add al, al ; stc ; call rax
0x000000000074b28b : add al, al ; stosd dword ptr [rdi], eax ; stc ; call qword ptr [rax]
0x000000000073e5d3 : add al, al ; sub al, 0xe2 ; jmp rax
0x00000000007d0723 : add al, al ; syscall
0x0000000000743dbb : add al, al ; test al, 0xec ; jmp qword ptr [rax]
0x000000000074b1cb : add al, al ; test al, 0xf9 ; call rax
0x000000000077ceaf : add al, al ; xchg ch, bl ; call qword ptr [rbx]
0x00000000007455d3 : add al, al ; xchg edi, ebp ; jmp qword ptr [rax]
0x0000000000740c73 : add al, al ; xor ah, dh ; call rax
0x000000000077f91f : add al, al ; xor al, 0xde ; call qword ptr [rcx]
0x000000000073ad0b : add al, al ; xor ebp, ebx ; call rax
0x00000000007451ab : add al, al ; xor ebp, edi ; inc eax ; ret 6
0x000000000078b6a7 : add al, bh ; adc ah, cl ; call qword ptr [rbx]
0x0000000000775bd7 : add al, bh ; adc al, 0xdc ; call rdi
0x000000000079b297 : add al, bh ; adc esp, edi ; jmp rax
0x00000000007d1a04 : add al, bh ; add al, 0x31 ; add byte ptr [rax], al ; retf 0x605
0x000000000079aee7 : add al, bh ; add al, 0xe7 ; jmp qword ptr [rcx]
0x0000000000771d47 : add al, bh ; add bl, bl ; call qword ptr [rbx]
0x000000000078f697 : add al, bh ; add dl, ah ; jmp qword ptr [rdx]
0x000000000079ae17 : add al, bh ; add esp, edi ; call qword ptr [rbx]
0x0000000000799267 : add al, bh ; and al, 0xe6 ; call rdi
0x000000000078b997 : add al, bh ; and ecx, esp ; jmp rdi
0x000000000078f0a7 : add al, bh ; cmc ; loope 0x78f0b0 ; retf 1
0x0000000000782517 : add al, bh ; fcomp st(6) ; call qword ptr [rbx]
0x0000000000777617 : add al, bh ; jbe 0x7775fb ; jmp qword ptr [rax]
0x0000000000783f87 : add al, bh ; jle 0x783f6e ; call qword ptr [rax]
0x000000000079fd67 : add al, bh ; jo 0x79fd57 ; jmp rcx
0x000000000076285f : add al, bh ; mov ah, dl ; jmp qword ptr [rbx]
0x0000000000774d97 : add al, bh ; mov bl, 0xdb ; jmp qword ptr [rax]
0x00000000007ad507 : add al, bh ; mov ch, ch ; call qword ptr [rdi]
0x0000000000739aeb : add al, bh ; mov cl, 0xd8 ; jmp qword ptr [rax]
0x00000000007b6be7 : add al, bh ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, eax ; jmp rdx
0x000000000075b32f : add al, bh ; or cl, dl ; call rsp
0x0000000000742903 : add al, bh ; or edx, ebp ; call qword ptr [rax]
0x000000000073492b : add al, bh ; or esi, ecx ; jmp rax
0x00000000007b4547 : add al, bh ; out dx, eax ; call qword ptr [rdi]
0x000000000074591c : add al, bh ; out dx, eax ; call rax
0x00000000007b4c17 : add al, bh ; out dx, eax ; jmp qword ptr [rsi]
0x0000000000402617 : add al, bh ; ret
0x0000000000402317 : add al, bh ; ret 0x9f
0x0000000000779337 : add al, bh ; ret 0xffdc
0x000000000072c9f7 : add al, bh ; retf
0x0000000000744d1b : add al, bh ; retf -0x12
0x0000000000792c37 : add al, bh ; retf -0x1d
0x00000000007e640e : add al, bh ; syscall
0x0000000000742cb3 : add al, bh ; test al, 0xea ; jmp qword ptr [rax]
0x00000000007a7ba7 : add al, bl ; adc ah, ch ; call qword ptr [rbx]
0x00000000007989b7 : add al, bl ; add ah, dh ; call qword ptr [rax]
0x00000000007b0567 : add al, bl ; add ch, dh ; call qword ptr [rdx]
0x00000000007443c3 : add al, bl ; add ch, dh ; call rax
0x000000000078b917 : add al, bl ; and cl, ah ; jmp qword ptr [rdi]
0x00000000007b0117 : add al, bl ; cld ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000785107 : add al, bl ; fcmovnu st(0), st(7) ; jmp rcx
0x0000000000779f37 : add al, bl ; fstp st(4), st(0) ; jmp qword ptr [rsi]
0x00000000007ac477 : add al, bl ; in eax, dx ; call qword ptr [rbx]
0x00000000007acc37 : add al, bl ; in eax, dx ; jmp qword ptr [rax]
0x0000000000773bc7 : add al, bl ; jae 0x773baa ; jmp qword ptr [rdx]
0x0000000000777e57 : add al, bl ; jnp 0x777e3b ; jmp qword ptr [rdx]
0x000000000078e277 : add al, bl ; leave ; loope 0x78e280 ; retf 1
0x000000000077ee47 : add al, bl ; neg ebp ; jmp qword ptr [rdx]
0x000000000078fb57 : add al, bl ; or dl, ah ; jmp qword ptr [rbx]
0x00000000004025b7 : add al, bl ; ret
0x00000000006848cc : add al, bl ; ret 0x6cd9
0x0000000000681e8b : add al, bl ; ret 0x7cd9
0x00000000004022b7 : add al, bl ; ret 0x9f
0x00000000007bad97 : add al, bl ; ret 0xfff0
0x000000000077e7e7 : add al, bl ; retf
0x00000000006a9f17 : add al, bl ; retf -0x127d
0x00000000006a98e8 : add al, bl ; retf -0x3427
0x00000000006a54d7 : add al, bl ; retf -0x3d7d
0x00000000006c4d6f : add al, bl ; retf -0x3e22
0x00000000007a7ed7 : add al, bl ; sbb ah, ch ; call qword ptr [rdi]
0x0000000000789a97 : add al, bl ; shl eax, -1 ; retf
0x00000000007cacaa : add al, bl ; syscall
0x0000000000738913 : add al, bl ; test esi, edx ; jmp qword ptr [rax]
0x00000000007b6617 : add al, bl ; xchg bh, ch ; jmp qword ptr [rbx]
0x0000000000796217 : add al, bl ; xor esp, ebp ; jmp qword ptr [rcx]
0x000000000067602e : add al, bpl ; pop rbx ; xor edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000005749db : add al, bpl ; push rax ; retf
0x0000000000502cd6 : add al, bpl ; push rbp ; call 0xffffffffc3d92cfe
0x00000000005fcafe : add al, bpl ; retf
0x0000000000601c61 : add al, bpl ; retf 0x7f8
0x0000000000737461 : add al, byte ptr [eax] ; pop rsi ; call rdx
0x0000000000736c81 : add al, byte ptr [r8] ; and r10b, dl ; call qword ptr [rax]
0x0000000000736e19 : add al, byte ptr [r8] ; retf -0x2dc5
0x000000000073c6e1 : add al, byte ptr [rax + rax] ; adc byte ptr [rax - 0x21], bh ; call qword ptr [rax]
0x00000000006a4ae9 : add al, byte ptr [rax + rax] ; add byte ptr [rsi + 0xf], ah ; sub cl, al ; ret
0x000000000078b995 : add al, byte ptr [rax + rax] ; clc ; and ecx, esp ; jmp rdi
0x00000000007d1919 : add al, byte ptr [rax + rbx*8] ; add al, byte ptr [rcx] ; retf
0x000000000074f928 : add al, byte ptr [rax - 0x33] ; call rcx
0x00000000006aa9e2 : add al, byte ptr [rax - 0x80] ; inc dword ptr [rcx] ; seta al ; ret
0x00000000007388f2 : add al, byte ptr [rax] ; adc al, 0x79 ; salc ; jmp qword ptr [rax - 0x35]
0x0000000000736b52 : add al, byte ptr [rax] ; adc al, 0xd2 ; call rax
0x000000000073911a : add al, byte ptr [rax] ; adc bh, al ; xlatb ; call rax
0x0000000000736002 : add al, byte ptr [rax] ; adc ecx, edx ; jmp qword ptr [rax]
0x000000000074ba1d : add al, byte ptr [rax] ; add ah, dl ; stc ; retf
0x000000000073890a : add al, byte ptr [rax] ; add al, 0x85 ; salc ; push rax ; retf
0x000000000073897a : add al, byte ptr [rax] ; add al, 0x90 ; salc ; call qword ptr [rax]
0x0000000000640012 : add al, byte ptr [rax] ; add al, ch ; push rdx ; retf
0x00000000006090e5 : add al, byte ptr [rax] ; add al, ch ; ret
0x0000000000551736 : add al, byte ptr [rax] ; add al, ch ; ret 0x115d
0x0000000000608d26 : add al, byte ptr [rax] ; add al, ch ; ret 0x80b
0x000000000060ed1d : add al, byte ptr [rax] ; add al, ch ; retf
0x0000000000640e9a : add al, byte ptr [rax] ; add al, ch ; retf -0x1744
0x000000000051a660 : add al, byte ptr [rax] ; add al, ch ; retf 0x166e
0x000000000064c69a : add al, byte ptr [rax] ; add al, ch ; sahf ; retf 3
0x000000000070c285 : add al, byte ptr [rax] ; add al, cl ; ret 0x70
0x00000000005e5ec9 : add al, byte ptr [rax] ; add byte ptr [rax + 0x14058b48], dl ; retf 0x41
0x0000000000582a3d : add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; retf -0x7cb8
0x0000000000560460 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000066df3b : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret 0x6349
0x000000000057f624 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; retf
0x0000000000607df4 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; retf -0x76b8
0x000000000055c182 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; retf 0x13eb
0x000000000067b9b3 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; retf 0x6348
0x000000000064becf : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000006674ba : add al, byte ptr [rax] ; add byte ptr [rax + 0xf96948], al ; retf 0x3b9a
0x0000000000783c05 : add al, byte ptr [rax] ; add byte ptr [rax + rcx], al ; ret
0x0000000000769c8d : add al, byte ptr [rax] ; add byte ptr [rax + rsi*4], al ; retf 0x7c
0x0000000000502158 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x4848
0x00000000006b2958 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; adc al, bl ; nop ; ret
0x0000000000464091 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; clc ; leave ; ret
0x00000000004816db : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040ae4a : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x69e8
0x00000000006b412b : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf 0x2b48
0x000000000051aa38 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; std ; mov rdi, rax ; call rdx
0x0000000000572338 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x00000000006b7a4e : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000051cb02 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000006d4bd1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000005524ea : add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x00000000006330e2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call rcx
0x00000000006c59ea : add al, byte ptr [rax] ; add byte ptr [rax], al ; jne 0x6c5a2f ; mov eax, edx ; pop rbx ; ret
0x000000000055162c : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r13, qword ptr [rbx + 8] ; call rax
0x000000000040c074 : add al, byte ptr [rax] ; add byte ptr [rax], al ; leave ; ret
0x000000000063383d : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x0000000000636717 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rax ; call rdx
0x000000000063baf0 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbx ; call 0x5a8589
0x0000000000404402 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000667811 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call 0x403b09
0x00000000005498c1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; jmp rax
0x000000000068e139 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000007fb3ce : add al, byte ptr [rax] ; add byte ptr [rax], al ; retf
0x000000000070c985 : add al, byte ptr [rax] ; add byte ptr [rax], cl ; retf 0x70
0x0000000000554532 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x58], dh ; mov rdi, rbp ; call rax
0x00000000004108c9 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop rbp ; ret
0x000000000053bc18 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000509bdf : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004f8312 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000069b761 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x68f0e807], al ; ret 0x8341
0x00000000006a55d1 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x38db1050], cl ; ret
0x000000000057f703 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x63], cl ; retf
0x00000000005543f9 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000067514c : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x1a], al ; call rax
0x0000000000675172 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x1e], al ; call rax
0x00000000005515ff : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x00000000005650fc : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; adc byte ptr [r9], r15b ; ret
0x00000000005654b4 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; adc byte ptr [rcx], r15b ; ret
0x0000000000650ce5 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; add byte ptr [r9], r15b ; retf
0x000000000057f6ce : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004faa3b : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; rol dword ptr [rcx + 0x29], cl ; retf
0x00000000006b2e25 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000061096b : add al, byte ptr [rax] ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000006c32e6 : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret 0x6b7f
0x00000000006c2c16 : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret 0x6d7f
0x00000000004fd033 : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret 0x8c0f
0x0000000000610ee3 : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000004faa4a : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; retf -0x73f1
0x0000000000539817 : add al, byte ptr [rax] ; add byte ptr [rcx], ch ; ret
0x000000000067d351 : add al, byte ptr [rax] ; add byte ptr [rcx], ch ; ret 0x634c
0x000000000056a8ec : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; shr al, 0x5a ; call qword ptr [rbx]
0x00000000005055a7 : add al, byte ptr [rax] ; add byte ptr [rdx + 0x6ef020], bh ; call rax
0x000000000074b9c5 : add al, byte ptr [rax] ; add byte ptr [rdx - 8], bh ; retf
0x000000000074b9a5 : add al, byte ptr [rax] ; add byte ptr [rdx - 8], ch ; retf
0x0000000000683c43 : add al, byte ptr [rax] ; add byte ptr [rsi + 0xf], ah ; ret
0x000000000051a6a9 : add al, byte ptr [rax] ; add byte ptr [rsi + 1], bh ; call rax
0x00000000005548f9 : add al, byte ptr [rax] ; add byte ptr [rsi + 2], bh ; call rax
0x000000000074b9ed : add al, byte ptr [rax] ; add byte ptr [rsi], al ; stc ; retf
0x0000000000769c0d : add al, byte ptr [rax] ; add byte ptr [rsp + rbx], al ; retf 0x7c
0x00000000007369ca : add al, byte ptr [rax] ; add dl, dl ; jmp rax
0x00000000007e0e16 : add al, byte ptr [rax] ; add dword ptr [rbx], 0x30 ; add byte ptr [rax], al ; ret 0x503
0x0000000000680636 : add al, byte ptr [rax] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000684cb4 : add al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000000005633ce : add al, byte ptr [rax] ; add rsp, 0x48 ; ret
0x000000000067facc : add al, byte ptr [rax] ; add rsp, 8 ; ret
0x00000000007386ca : add al, byte ptr [rax] ; and al, 0x1b ; salc ; jmp qword ptr [rax]
0x000000000077703e : add al, byte ptr [rax] ; and byte ptr [rdi - 0x24], ah ; call qword ptr [rdx]
0x0000000000737c1a : add al, byte ptr [rax] ; and ch, 0xd3 ; call rax
0x0000000000736c82 : add al, byte ptr [rax] ; and r10b, dl ; call qword ptr [rax]
0x0000000000775236 : add al, byte ptr [rax] ; call 0x11772e10
0x000000000076e916 : add al, byte ptr [rax] ; call 0x1876c369
0x0000000000774176 : add al, byte ptr [rax] ; call 0x21771d1b
0x00000000007746e6 : add al, byte ptr [rax] ; call 0x21772298
0x000000000073908a : add al, byte ptr [rax] ; call 0xffffffffe1736824
0x0000000000696627 : add al, byte ptr [rax] ; call qword ptr [rip + 0x36c2b1]
0x0000000000695dd9 : add al, byte ptr [rax] ; call qword ptr [rip + 0x36caff]
0x00000000007d4b6e : add al, byte ptr [rax] ; cdq ; add dword ptr [rcx], ecx ; add byte ptr [rax], al ; ret
0x0000000000775bd6 : add al, byte ptr [rax] ; clc ; adc al, 0xdc ; call rdi
0x0000000000771d46 : add al, byte ptr [rax] ; clc ; add bl, bl ; call qword ptr [rbx]
0x0000000000777616 : add al, byte ptr [rax] ; clc ; jbe 0x7775fc ; jmp qword ptr [rax]
0x0000000000774d96 : add al, byte ptr [rax] ; clc ; mov bl, 0xdb ; jmp qword ptr [rax]
0x0000000000779336 : add al, byte ptr [rax] ; clc ; ret 0xffdc
0x00000000007c530f : add al, byte ptr [rax] ; cld ; add dword ptr [rsi], esi ; add byte ptr [rax], al ; ret 0x502
0x0000000000736c42 : add al, byte ptr [rax] ; cld ; and dl, dl ; call qword ptr [rax]
0x000000000073663a : add al, byte ptr [rax] ; cli ; retf
0x00000000007390ea : add al, byte ptr [rax] ; cmp al, 0xad ; xlatb ; jmp rax
0x000000000073766a : add al, byte ptr [rax] ; cmp al, 0xd3 ; jmp rax
0x00000000007f8516 : add al, byte ptr [rax] ; cmp al, 5 ; ret
0x00000000007d136d : add al, byte ptr [rax] ; cmp al, byte ptr [rsi] ; retf 2
0x000000000076ece6 : add al, byte ptr [rax] ; cmp byte ptr [rcx - 0x26], dl ; jmp rsp
0x000000000077a53e : add al, byte ptr [rax] ; cmp dl, 0xdc ; jmp qword ptr [rcx]
0x0000000000737d6a : add al, byte ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; not ebx ; call rax
0x0000000000737a0a : add al, byte ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffd3
0x0000000000738722 : add al, byte ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; xor esi, edx ; push rax ; ret 2
0x000000000076b826 : add al, byte ptr [rax] ; cwde ; mov dl, 0xd9 ; jmp qword ptr [rbx]
0x0000000000771326 : add al, byte ptr [rax] ; cwde ; ret
0x000000000076c256 : add al, byte ptr [rax] ; cwde ; ret 0xffd9
0x0000000000735e92 : add al, byte ptr [rax] ; fcom st(0), st(0) ; call rax
0x0000000000773bc6 : add al, byte ptr [rax] ; fdiv dword ptr [rbx - 0x25] ; jmp qword ptr [rdx]
0x00000000007388e2 : add al, byte ptr [rax] ; fdiv qword ptr [rdi - 0x2a] ; lcall ptr [rax] ; retf
0x0000000000777e56 : add al, byte ptr [rax] ; fdivr dword ptr [rbx - 0x24] ; jmp qword ptr [rdx]
0x00000000007386ea : add al, byte ptr [rax] ; hlt ; salc ; jmp rax
0x000000000077774e : add al, byte ptr [rax] ; ja 0x777734 ; call qword ptr [rcx]
0x0000000000737782 : add al, byte ptr [rax] ; jb 0x73775f ; jmp qword ptr [rax]
0x00000000007362c2 : add al, byte ptr [rax] ; jbe 0x73629d ; jmp rax
0x0000000000739092 : add al, byte ptr [rax] ; jl 0x73902e ; xlatb ; call qword ptr [rax]
0x0000000000738a12 : add al, byte ptr [rax] ; jle 0x7389bf ; salc ; jmp qword ptr [rax]
0x0000000000738dfa : add al, byte ptr [rax] ; jle 0x738df6 ; salc ; jmp qword ptr [rax]
0x0000000000736fe2 : add al, byte ptr [rax] ; jp 0x736fbe ; jmp qword ptr [rax]
0x0000000000736fd2 : add al, byte ptr [rax] ; js 0x736fae ; call rax
0x000000000076fe8e : add al, byte ptr [rax] ; lodsb al, byte ptr [rsi] ; leave ; call qword ptr [rdx]
0x000000000077546e : add al, byte ptr [rax] ; loop 0x775453 ; call rdi
0x0000000000737362 : add al, byte ptr [rax] ; loope 0x73733e ; jmp rax
0x0000000000737baa : add al, byte ptr [rax] ; loope 0x737b87 ; call qword ptr [rax]
0x0000000000776b7e : add al, byte ptr [rax] ; mov al, 0x56 ; fdiv st(7), st(0) ; retf 1
0x0000000000774cc6 : add al, byte ptr [rax] ; mov bl, 0xdb ; jmp qword ptr [rax]
0x0000000000778066 : add al, byte ptr [rax] ; mov byte ptr [rbp - 0x24], bh ; call qword ptr [rbx]
0x0000000000736f7a : add al, byte ptr [rax] ; mov byte ptr [rcx - 0x2e], ch ; call qword ptr [rax]
0x00000000007381d2 : add al, byte ptr [rax] ; mov ch, 0xd4 ; jmp qword ptr [rax]
0x0000000000770c7e : add al, byte ptr [rax] ; mov cl, 0xda ; jmp qword ptr [rdi]
0x000000000076fe76 : add al, byte ptr [rax] ; mov dl, 0x43 ; leave ; call qword ptr [rdx]
0x00000000007388ca : add al, byte ptr [rax] ; mov eax, 0xb0ffd676 ; retf 2
0x0000000000738b82 : add al, byte ptr [rax] ; mov ebx, cs ; salc ; call qword ptr [rax]
0x00000000004993d5 : add al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x569502] ; call rax
0x000000000049689d : add al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x56c03a] ; call rax
0x000000000048cda5 : add al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x575b32] ; call rax
0x000000000048c9c9 : add al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x575f0e] ; call rax
0x000000000048bcf0 : add al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x576be7] ; call rax
0x000000000048b640 : add al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x577297] ; call rax
0x000000000048b560 : add al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x577377] ; call rax
0x0000000000736e12 : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp edx, edx ; call qword ptr [rax]
0x00000000007366b2 : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; rcl ecx, 1 ; jmp qword ptr [rax]
0x0000000000774d2e : add al, byte ptr [rax] ; nop ; mov bl, 0xdb ; call qword ptr [rax]
0x000000000076b80e : add al, byte ptr [rax] ; nop ; mov dl, 0xd9 ; call qword ptr [rcx]
0x00000000006a7d2c : add al, byte ptr [rax] ; nop ; mov eax, 0x1c0 ; ret
0x000000000076c2fe : add al, byte ptr [rax] ; nop ; ret
0x000000000076c57e : add al, byte ptr [rax] ; nop ; retf -0x27
0x0000000000689bb7 : add al, byte ptr [rax] ; nop dword ptr [rax] ; ret
0x0000000000738eda : add al, byte ptr [rax] ; or al, 0xff ; salc ; call qword ptr [rax]
0x0000000000738be2 : add al, byte ptr [rax] ; or bl, ah ; salc ; jmp qword ptr [rax]
0x0000000000738842 : add al, byte ptr [rax] ; out 0x68, al ; salc ; jmp qword ptr [rax]
0x0000000000736832 : add al, byte ptr [rax] ; out 0xd1, al ; call rax
0x000000000073912a : add al, byte ptr [rax] ; out dx, al ; retf -0x29
0x0000000000737922 : add al, byte ptr [rax] ; outsb dx, byte ptr [rsi] ; test al, 0xd3 ; jmp qword ptr [rax]
0x000000000077adb6 : add al, byte ptr [rax] ; pop rax ; add ch, bl ; jmp qword ptr [rax]
0x000000000076d9ae : add al, byte ptr [rax] ; pop rax ; leave ; call qword ptr [rdx]
0x000000000076c2a6 : add al, byte ptr [rax] ; pop rax ; ret
0x000000000076c1f6 : add al, byte ptr [rax] ; pop rax ; ret 0xffd9
0x0000000000738412 : add al, byte ptr [rax] ; pop rax ; sub ch, dl ; call rax
0x000000000067fd87 : add al, byte ptr [rax] ; pop rbx ; ret
0x00000000007383a2 : add al, byte ptr [rax] ; pop rdx ; call rsp
0x000000000073661a : add al, byte ptr [rax] ; pop rdx ; retf -0x2f
0x0000000000739372 : add al, byte ptr [rax] ; pop rsi ; and bl, al ; call qword ptr [rax]
0x0000000000737462 : add al, byte ptr [rax] ; pop rsi ; call rdx
0x000000000073905a : add al, byte ptr [rax] ; pop rsi ; test edi, edx ; jmp rax
0x0000000000738c22 : add al, byte ptr [rax] ; pop rsp ; fcomp st(0), st(6) ; jmp qword ptr [rax]
0x00000000007e4b58 : add al, byte ptr [rax] ; popfq ; add cl, byte ptr [rcx] ; add byte ptr [rax], al ; retf
0x0000000000738c4a : add al, byte ptr [rax] ; push 0xe0 ; salc ; call rax
0x0000000000775a5e : add al, byte ptr [rax] ; push rax ; adc ebx, esp ; jmp qword ptr [rax]
0x0000000000773c2e : add al, byte ptr [rax] ; push rax ; je 0x773c13 ; jmp qword ptr [rdx]
0x000000000073700a : add al, byte ptr [rax] ; push rax ; jge 0x736fe6 ; call rax
0x0000000000773b1e : add al, byte ptr [rax] ; push rax ; jno 0x773b03 ; jmp rcx
0x0000000000774cde : add al, byte ptr [rax] ; push rax ; mov bl, 0xdb ; call qword ptr [rax]
0x0000000000737542 : add al, byte ptr [rax] ; push rax ; sbb dl, bl ; jmp qword ptr [rax]
0x00000000007392c2 : add al, byte ptr [rax] ; push rax ; sbb ebx, eax ; jmp qword ptr [rax]
0x0000000000738fca : add al, byte ptr [rax] ; push rbx ; xlatb ; jmp rax
0x000000000073781a : add al, byte ptr [rax] ; push rdx ; mov edx, ebx ; jmp qword ptr [rax]
0x000000000073763a : add al, byte ptr [rax] ; push rsi ; cmp ebx, edx ; call qword ptr [rax]
0x0000000000738472 : add al, byte ptr [rax] ; push rsi ; jnp 0x738451 ; call rax
0x0000000000738d02 : add al, byte ptr [rax] ; push rsi ; out -0x2a, eax ; jmp rax
0x00000000007367fa : add al, byte ptr [rax] ; push rsp ; loope 0x7367d5 ; call rax
0x0000000000737a82 : add al, byte ptr [rax] ; rcl ebx, 1 ; call qword ptr [rax]
0x00000000007716fe : add al, byte ptr [rax] ; rcr ch, 0xda ; call rsi
0x00000000007382ea : add al, byte ptr [rax] ; ret
0x00000000007efb44 : add al, byte ptr [rax] ; ret 0x1f02
0x00000000007c648e : add al, byte ptr [rax] ; ret 0x2b02
0x00000000007cecd3 : add al, byte ptr [rax] ; ret 0x401
0x00000000007f10da : add al, byte ptr [rax] ; ret 0x501
0x00000000007d40cb : add al, byte ptr [rax] ; ret 0x502
0x00000000007cece4 : add al, byte ptr [rax] ; ret 0xb02
0x00000000007c1d75 : add al, byte ptr [rax] ; ret 0xc02
0x000000000073637a : add al, byte ptr [rax] ; ret 0xd18c
0x00000000007363ba : add al, byte ptr [rax] ; ret 0xd190
0x000000000073650a : add al, byte ptr [rax] ; ret 0xd1bf
0x0000000000737172 : add al, byte ptr [rax] ; ret 0xd2a6
0x0000000000737c8a : add al, byte ptr [rax] ; ret 0xd3eb
0x0000000000737e02 : add al, byte ptr [rax] ; ret 0xd447
0x00000000007380ba : add al, byte ptr [rax] ; ret 0xd498
0x0000000000738432 : add al, byte ptr [rax] ; ret 0xd540
0x00000000007384fa : add al, byte ptr [rax] ; ret 0xd592
0x0000000000738802 : add al, byte ptr [rax] ; ret 0xd667
0x00000000007d1ad2 : add al, byte ptr [rax] ; ret 0xe02
0x000000000073721a : add al, byte ptr [rax] ; ret 0xffd2
0x00000000007382ca : add al, byte ptr [rax] ; ret 0xffd4
0x00000000007792ce : add al, byte ptr [rax] ; ret 0xffdc
0x0000000000736632 : add al, byte ptr [rax] ; retf
0x00000000007391a2 : add al, byte ptr [rax] ; retf -0x280f
0x0000000000738de2 : add al, byte ptr [rax] ; retf -0x290f
0x0000000000738d62 : add al, byte ptr [rax] ; retf -0x2915
0x0000000000738baa : add al, byte ptr [rax] ; retf -0x292f
0x000000000073858a : add al, byte ptr [rax] ; retf -0x2a3f
0x000000000073843a : add al, byte ptr [rax] ; retf -0x2abf
0x00000000007385ca : add al, byte ptr [rax] ; retf -0x2b
0x0000000000737e6a : add al, byte ptr [rax] ; retf -0x2bb3
0x0000000000737df2 : add al, byte ptr [rax] ; retf -0x2bf9
0x0000000000737c22 : add al, byte ptr [rax] ; retf -0x2c1b
0x0000000000737bea : add al, byte ptr [rax] ; retf -0x2c1d
0x0000000000737afa : add al, byte ptr [rax] ; retf -0x2c27
0x0000000000736e1a : add al, byte ptr [rax] ; retf -0x2dc5
0x0000000000736dca : add al, byte ptr [rax] ; retf -0x2dc7
0x0000000000736a5a : add al, byte ptr [rax] ; retf -0x2df9
0x000000000073628a : add al, byte ptr [rax] ; retf -0x2e92
0x0000000000777f76 : add al, byte ptr [rax] ; retf -0x38
0x00000000007f833e : add al, byte ptr [rax] ; retf 0x2702
0x00000000007d1604 : add al, byte ptr [rax] ; retf 0x2c02
0x00000000007f9998 : add al, byte ptr [rax] ; retf 0x502
0x00000000007d5569 : add al, byte ptr [rax] ; retf 0xd02
0x000000000076c33e : add al, byte ptr [rax] ; rol bl, 0xd9 ; call rdi
0x000000000077952e : add al, byte ptr [rax] ; ror al, 0xdc ; jmp qword ptr [rdx]
0x00000000007382da : add al, byte ptr [rax] ; sahf ; ret 0xffd4
0x0000000000738c12 : add al, byte ptr [rax] ; salc ; fst st(6) ; jmp rax
0x00000000007382f2 : add al, byte ptr [rax] ; salc ; ret
0x0000000000737a12 : add al, byte ptr [rax] ; salc ; ret 0xffd3
0x00000000007387ba : add al, byte ptr [rax] ; sbb al, 0x5a ; salc ; call rax
0x0000000000777026 : add al, byte ptr [rax] ; sbb byte ptr [rdi - 0x24], ah ; call qword ptr [rdx]
0x00000000007386f2 : add al, byte ptr [rax] ; sbb byte ptr [rdi], ah ; salc ; inc dword ptr [rax] ; ret 2
0x000000000073701a : add al, byte ptr [rax] ; scasb al, byte ptr [rdi] ; jge 0x736ff6 ; call qword ptr [rax]
0x0000000000736a6a : add al, byte ptr [rax] ; scasb al, byte ptr [rdi] ; or edx, edx ; call rax
0x0000000000738fd2 : add al, byte ptr [rax] ; scasb al, byte ptr [rdi] ; pop rsi ; xlatb ; call qword ptr [rax]
0x000000000076ccbe : add al, byte ptr [rax] ; shl al, 1 ; fcos ; retf 1
0x0000000000738c82 : add al, byte ptr [rax] ; sub bl, ah ; salc ; call rax
0x000000000076e656 : add al, byte ptr [rax] ; sub byte ptr [rbp - 0x26], al ; jmp qword ptr [rax]
0x0000000000777056 : add al, byte ptr [rax] ; sub byte ptr [rdi - 0x24], ah ; call qword ptr [rdx]
0x0000000000739062 : add al, byte ptr [rax] ; xchg dil, dl ; call qword ptr [rax]
0x0000000000736552 : add al, byte ptr [rax] ; xchg eax, edx ; ret 0xffd1
0x00000000007369da : add al, byte ptr [rax] ; xchg eax, esi ; add dl, dl ; jmp qword ptr [rax]
0x00000000007f4fd4 : add al, byte ptr [rax] ; xchg eax, esp ; add bl, byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x0000000000738c5a : add al, byte ptr [rax] ; xchg eax, esp ; loopne 0x738c3a ; call qword ptr [rax]
0x00000000007390fa : add al, byte ptr [rax] ; xor al, 0xae ; xlatb ; jmp qword ptr [rax]
0x000000000077706e : add al, byte ptr [rax] ; xor byte ptr [rdi - 0x24], ah ; call qword ptr [rdx]
0x000000000073878a : add al, byte ptr [rax] ; xor cl, byte ptr [rdi - 0x2a] ; jmp rax
0x000000000076eb66 : add al, byte ptr [rax] ; xor dl, byte ptr [rsi - 0x37] ; call qword ptr [rdx]
0x00000000005017d6 : add al, byte ptr [rbp + 0x39] ; ret 0x8c0f
0x00000000005af857 : add al, byte ptr [rbp + 0x48467ec0] ; add esp, 8 ; ret
0x00000000007e120d : add al, byte ptr [rbp - 0x7c] ; add eax, 0x4103a900 ; retf 5
0x00000000006508eb : add al, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007c6d9d : add al, byte ptr [rbx] ; add byte ptr [rcx], 0x3b ; add byte ptr [rax], al ; retf
0x00000000007db9a4 : add al, byte ptr [rbx] ; enter 5, -0x15 ; add al, byte ptr [rbx] ; ret
0x00000000007d4b63 : add al, byte ptr [rbx] ; jl 0x7d4b71 ; retf
0x00000000007c3d9f : add al, byte ptr [rbx] ; ret
0x00000000007e9c3e : add al, byte ptr [rbx] ; ret 0x501
0x00000000007f8ad4 : add al, byte ptr [rbx] ; retf 0x1702
0x0000000000779e09 : add al, byte ptr [rbx] ; retf 0xa01
0x00000000006651ca : add al, byte ptr [rcx + 0x39] ; retf
0x00000000007ab074 : add al, byte ptr [rcx + 0xa] ; ret
0x00000000006d0a5f : add al, byte ptr [rcx + rcx*4 - 0x40] ; ret
0x00000000006b4119 : add al, byte ptr [rcx - 0x77] ; push rsi ; adc byte ptr [rax - 0x77], cl ; retf 0x2948
0x000000000069d793 : add al, byte ptr [rcx - 0x77] ; retf
0x0000000000660e7e : add al, byte ptr [rcx - 0x78] ; add ecx, ebp ; ret
0x00000000006c0858 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x000000000050bfb0 : add al, byte ptr [rcx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000007da17f : add al, byte ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rdx], eax ; retf
0x000000000040c152 : add al, byte ptr [rcx] ; enter -0x3f7b, -0x70 ; pop rbp ; ret
0x00000000007ce9db : add al, byte ptr [rcx] ; lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0x1e01
0x00000000007d54f8 : add al, byte ptr [rcx] ; mov edx, 0x502 ; retf 0x502
0x00000000007f8338 : add al, byte ptr [rcx] ; movsd dword ptr [rdi], dword ptr [rsi] ; add bl, byte ptr [rcx] ; int1 ; add al, byte ptr [rax] ; retf 0x2702
0x00000000007eed0c : add al, byte ptr [rcx] ; movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x1e01
0x00000000007f779a : add al, byte ptr [rcx] ; ret
0x000000000066374c : add al, byte ptr [rcx] ; ret 0x8348
0x00000000007d191c : add al, byte ptr [rcx] ; retf
0x00000000007d47e1 : add al, byte ptr [rcx] ; retf 0x1201
0x00000000007e1698 : add al, byte ptr [rcx] ; xchg eax, esi ; add dword ptr [rbx], edx ; add byte ptr [rax], al ; retf 0x501
0x00000000007d5667 : add al, byte ptr [rdi] ; ret 5
0x00000000007d6d6a : add al, byte ptr [rdi] ; retf 0x302
0x00000000005e2671 : add al, byte ptr [rdx] ; call rax
0x00000000007a709d : add al, byte ptr [rdx] ; lodsd eax, dword ptr [rsi] ; ret
0x00000000007bbcb1 : add al, byte ptr [rdx] ; ret
0x00000000007a1cd8 : add al, byte ptr [rdx] ; xchg eax, ecx ; ret
0x00000000007dc408 : add al, byte ptr [rip - 0x35effe52] ; add dword ptr [rax], eax ; ret
0x00000000007cbf5c : add al, byte ptr [rip - 0x75fcfa27] ; add ecx, dword ptr [rsi] ; ret 6
0x00000000007d0191 : add al, byte ptr [rip - 0x7afff074] ; add edx, dword ptr [rdx] ; ret 0xe
0x00000000007d5b90 : add al, byte ptr [rip - 0xcfffc6f] ; add ch, byte ptr [rbx] ; ret 3
0x00000000007e2b64 : add al, byte ptr [rsi + rbx*8] ; or byte ptr [rax], al ; ret
0x00000000007bab60 : add al, byte ptr [rsi + rcx + 0x18] ; ret
0x00000000007dbd7c : add al, byte ptr [rsi] ; ret
0x00000000007df673 : add al, byte ptr [rsp + rcx*4] ; add al, 0 ; ret
0x00000000007d5661 : add al, byte ptr [rsp] ; add eax, 0x7028400 ; ret 5
0x0000000000736831 : add al, byte ptr cs:[rax] ; out 0xd1, al ; call rax
0x00000000007369d9 : add al, byte ptr ss:[rax] ; xchg eax, esi ; add dl, dl ; jmp qword ptr [rax]
0x0000000000459fb6 : add al, ch ; adc al, 0x46 ; add byte ptr es:[rax - 0x77], cl ; ret 0x8948
0x0000000000620bb6 : add al, ch ; adc al, 0xfb ; or dword ptr [rax], eax ; leave ; ret
0x0000000000565d1a : add al, ch ; adc bh, byte ptr [rax + 0x15ff0011] ; ret 0x49cb
0x000000000045f957 : add al, ch ; adc byte ptr [r14], spl ; add cl, cl ; ret
0x0000000000619dba : add al, ch ; adc byte ptr [rax + 0xa], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000005262ba : add al, ch ; adc byte ptr [rbx - 0x76b7ffe7], al ; ret
0x000000000046eb12 : add al, ch ; adc byte ptr [rcx], r12b ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b3eba : add al, ch ; adc byte ptr [rdi - 0x76b7ffe0], ah ; ret 0x8948
0x000000000042b8ba : add al, ch ; adc byte ptr [rip - 0x76b7ffd7], ch ; ret 0x8948
0x000000000040d8b8 : add al, ch ; adc ch, byte ptr [rsi] ; sub eax, dword ptr [rax] ; leave ; ret
0x000000000044b1b8 : add al, ch ; adc dl, byte ptr [rbp + 0x27] ; add cl, cl ; ret
0x0000000000432ab9 : add al, ch ; adc dword ptr [rbx - 0x76b7ffd8], edi ; ret 0x8948
0x000000000059744f : add al, ch ; adc dword ptr [rdx - 0x76b7fff2], edx ; ret
0x00000000004d7885 : add al, ch ; adc eax, 0xc9001e91 ; ret
0x0000000000490887 : add al, ch ; adc eax, dword ptr [rcx] ; and eax, dword ptr [rax] ; leave ; ret
0x000000000066e377 : add al, ch ; adc ebp, dword ptr [rsi - 0x76b70001] ; ret
0x000000000066da77 : add al, ch ; adc esi, dword ptr [rdi - 0x76b70001] ; ret
0x000000000049f366 : add al, ch ; adc esp, dword ptr fs:[rdx] ; add cl, cl ; ret
0x000000000078f837 : add al, ch ; add ah, dl ; jmp qword ptr [rdx]
0x00000000004e1260 : add al, ch ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004816d8 : add al, ch ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041c8c8 : add al, ch ; add bl, byte ptr [rip - 0x76b7ffd6] ; ret 0x8948
0x0000000000615aca : add al, ch ; add byte ptr [rbx - 0x76b7fff6], cl ; ret 0x8948
0x000000000059f3dc : add al, ch ; add byte ptr [rcx - 0x1a], ah ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c9eca : add al, ch ; add byte ptr [rdi + 0x1f], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040e4ca : add al, ch ; add byte ptr [rdx], ah ; sub eax, dword ptr [rax] ; leave ; ret
0x00000000004950c8 : add al, ch ; add dl, byte ptr [rbp - 0x76b7ffde] ; ret 0x8948
0x000000000059795f : add al, ch ; add dword ptr [rbp - 0x76b7fff2], ecx ; ret
0x000000000064e609 : add al, ch ; add dword ptr [rbx + 0x15ff0003], esi ; retf
0x00000000004b7ac9 : add al, ch ; add dword ptr [rbx + 0x20], ebp ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000005aa9c9 : add al, ch ; add dword ptr [rcx + rdx], edi ; add byte ptr [rax - 0x77], cl ; ret
0x000000000068a75f : add al, ch ; add dword ptr [rdi - 1], ebx ; dec dword ptr [rax - 0x77] ; ret
0x000000000055cff5 : add al, ch ; add eax, 0x89001291 ; ret
0x0000000000742588 : add al, ch ; add eax, 0xe98fc000 ; jmp qword ptr [rax]
0x00000000004e2049 : add al, ch ; add ebp, 0x8948001d ; ret 0x8948
0x0000000000598dc7 : add al, ch ; add ebx, dword ptr [rax + 0x12] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000057032a : add al, ch ; add edx, dword ptr ss:[rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004e2147 : add al, ch ; add esp, 0x1d ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000062585d : add al, ch ; add esp, dword ptr [rbx - 0x76b7fffb] ; ret
0x000000000051e47b : add al, ch ; add qword ptr [r10], r11 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000544977 : add al, ch ; add r12b, bpl ; dec dword ptr [rax - 0x77] ; ret
0x00000000004fe679 : add al, ch ; and al, 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042cca6 : add al, ch ; and al, 0x3a ; sub dword ptr [rax], eax ; leave ; ret
0x000000000075455f : add al, ch ; and bh, cl ; call rsp
0x000000000058e71a : add al, ch ; and byte ptr [rax + 0x14], ah ; add byte ptr [rax - 0x77], cl ; ret
0x000000000063fff4 : add al, ch ; and byte ptr [rsi - 0x18], bl ; dec dword ptr [rax - 0x77] ; ret
0x000000000053c5a4 : add al, ch ; and byte ptr es:[rax], bl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000489da8 : add al, ch ; and cl, byte ptr [rax + 0x23] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000063c394 : add al, ch ; and cl, byte ptr ss:[rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000045f329 : add al, ch ; and dword ptr [rbp - 0x76b7ffdc], esi ; ret
0x00000000006ac449 : add al, ch ; and dword ptr [rcx], 0x89480001 ; ret 0xc7
0x000000000044b53f : add al, ch ; and dword ptr [rsi + 0x23], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b4207 : add al, ch ; and eax, 0x89000cd3 ; ret
0x000000000059dc3b : add al, ch ; and eax, 0xbe000e2a ; retf 8
0x00000000006ac2a4 : add al, ch ; and eax, dword ptr es:[rcx] ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x000000000044fda7 : add al, ch ; and ebp, eax ; add byte ptr es:[rax - 0x77], cl ; ret 0x8948
0x000000000042aa3d : add al, ch ; and edx, dword ptr [rcx + 0x25] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b6a3d : add al, ch ; and edx, dword ptr [rcx - 0x76b7ffe4] ; ret
0x000000000047d0a7 : add al, ch ; and esi, dword ptr [rsi] ; and al, 0 ; leave ; ret
0x000000000047d73d : add al, ch ; and esp, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000068c080 : add al, ch ; and rax, 0x89480003 ; ret
0x000000000053c07b : add al, ch ; and rax, 0x89480018 ; ret
0x0000000000640e1d : add al, ch ; call qword ptr [rax]
0x00000000005e41f5 : add al, ch ; call rax
0x000000000049d5db : add al, ch ; call rdx
0x000000000058233b : add al, ch ; call rsi
0x00000000005d2661 : add al, ch ; call rsp
0x00000000005de601 : add al, ch ; cdq ; and ecx, dword ptr [rsi] ; add cl, cl ; ret
0x00000000005b1611 : add al, ch ; cdq ; mov dword ptr [rip + 0x3d8b4800], ecx ; retf 0x4545
0x00000000004f3b31 : add al, ch ; cdq ; mov edi, 0x40bf0019 ; retf 0x6d
0x0000000000432331 : add al, ch ; cdq ; ret 0x28
0x00000000005230b3 : add al, ch ; cdq ; retf 0x15
0x00000000005d6131 : add al, ch ; cdq ; test byte ptr [rsi], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000496031 : add al, ch ; cdq ; test dword ptr [rdx], esp ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000051e92c : add al, ch ; clc ; pop rcx ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000656692 : add al, ch ; clc ; pop rdi ; sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000642d7e : add al, ch ; cld ; nop ; dec dword ptr [rax - 0x77] ; ret
0x000000000063f318 : add al, ch ; cld ; push 0xe8 ; dec dword ptr [rax - 0x77] ; ret
0x000000000049f5d0 : add al, ch ; cli ; adc byte ptr [rdx], ah ; add cl, cl ; ret
0x00000000004d8fd0 : add al, ch ; cli ; jbe 0x4d8ffa ; add cl, cl ; ret
0x00000000004c46c4 : add al, ch ; cli ; ret
0x00000000004969d5 : add al, ch ; cmc ; jnp 0x496a04 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000433757 : add al, ch ; cmc ; ret
0x00000000004be98e : add al, ch ; cmp al, 0x1d ; and byte ptr [rax], al ; leave ; ret
0x000000000056e4f4 : add al, ch ; cmp al, 0x69 ; jmp 0xffffffffc3e02e04
0x0000000000424326 : add al, ch ; cmp bh, byte ptr [rax - 0x76b7ffdb] ; ret
0x0000000000614126 : add al, ch ; cmp bh, byte ptr [rdx - 0x76b7fffa] ; ret
0x00000000004c3592 : add al, ch ; cmp byte ptr [rax - 0x76b7ffe1], dh ; ret 0x8948
0x00000000004cff34 : add al, ch ; cmp byte ptr [rax], bh ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004d3a4c : add al, ch ; cmp byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000546892 : add al, ch ; cmp byte ptr [rbp + 0x17], bh ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000495092 : add al, ch ; cmp byte ptr [rbp - 0x76b7ffde], dl ; ret 0x8948
0x00000000004a0312 : add al, ch ; cmp byte ptr [rbp - 0x76b7ffe0], ah ; ret
0x000000000040c84a : add al, ch ; cmp byte ptr [rsi], 0x2b ; add cl, cl ; ret
0x00000000005cd690 : add al, ch ; cmp cl, byte ptr [rdi] ; str word ptr [rax - 0x77] ; ret 0x8948
0x000000000050c20b : add al, ch ; cmp dword ptr [r15], edx ; add bl, ch ; ret 0x8948
0x00000000004aa591 : add al, ch ; cmp dword ptr [rax + 0x21], eax ; add byte ptr [rax - 0x77], cl ; ret 0x2c7
0x0000000000454327 : add al, ch ; cmp dword ptr [rax - 0x76b7ffde], edi ; ret
0x0000000000619a27 : add al, ch ; cmp dword ptr [rcx + 6], esp ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044ea11 : add al, ch ; cmp dword ptr [rsi - 0x76b7ffdb], edi ; ret
0x000000000055a749 : add al, ch ; cmp dword ptr [rsi], 0x89480016 ; ret
0x0000000000494b8f : add al, ch ; cmp ebx, dword ptr [rdx - 0x76b7ffde] ; ret 0x8948
0x000000000052697b : add al, ch ; cmp ebx, ecx ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x00000000007b3e57 : add al, ch ; cmp edi, ebp ; call rsi
0x00000000004d6925 : add al, ch ; cmp edx, dword ptr [rdx - 0x76b7ffe6] ; ret
0x000000000063c00f : add al, ch ; cmp esp, dword ptr [rcx - 0x76b70018] ; ret
0x000000000040c756 : add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000585924 : add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; mov word ptr [rbx], ss ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005897ba : add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; outsb dx, byte ptr [rsi] ; str word ptr [rax - 0x77] ; ret
0x00000000005d5286 : add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xa
0x00000000005f3f18 : add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; retf
0x00000000006bb744 : add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; retf -4
0x00000000005e30a4 : add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; retf 9
0x0000000000577123 : add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; je 0x577144 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000496b23 : add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; jp 0x496b52 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000486235 : add al, ch ; cmpsd dword ptr gs:[rsi], dword ptr [rdi] ; and eax, dword ptr [rax] ; leave ; ret
0x000000000045be32 : add al, ch ; cwde ; add cl, cl ; ret
0x0000000000440b76 : add al, ch ; cwde ; jmp qword ptr [rbx]
0x00000000005f2832 : add al, ch ; cwde ; mov ebp, 0x8948000c ; ret
0x0000000000483f26 : add al, ch ; cwde ; retf
0x00000000004def16 : add al, ch ; cwde ; sbb al, 0x1a ; add byte ptr [rcx], bh ; ret 0x127c
0x000000000050a4fc : add al, ch ; cwde ; wait ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000048fdcc : add al, ch ; dec byte ptr [rax] ; and eax, dword ptr [rax] ; leave ; ret
0x00000000005b95dd : add al, ch ; div r11 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005e64ee : add al, ch ; fadd qword ptr [rax - 0x76b7fff3] ; ret 0x8948
0x00000000005969f2 : add al, ch ; fdivr dword ptr [rbx + 0x12] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005288e4 : add al, ch ; fiadd dword ptr [rcx - 0x76b7ffeb] ; ret
0x0000000000445670 : add al, ch ; ficom dword ptr [rcx + 0x26] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b85f0 : add al, ch ; ficomp dword ptr [rdi + 0x10] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005971f0 : add al, ch ; fidiv dword ptr [rbx + 0x12] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004ca02f : add al, ch ; fild qword ptr [rdx + 0x1b] ; add cl, cl ; ret
0x00000000005927a4 : add al, ch ; fist word ptr es:[rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006736af : add al, ch ; fistp dword ptr [rdx - 1] ; dec dword ptr [rax - 0x77] ; ret
0x00000000004d35c1 : add al, ch ; fisttp dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000045d6f2 : add al, ch ; fmul dword ptr [rsi] ; add byte ptr es:[rax - 0x77], cl ; ret 0x8948
0x0000000000496aed : add al, ch ; fnstsw dword ptr [rdx + 0x22] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000006b1681 : add al, ch ; fucompi st(7) ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000005d90d6 : add al, ch ; hlt ; jne 0x5d90f0 ; add cl, cl ; ret
0x00000000004d78d6 : add al, ch ; hlt ; lea ebx, dword ptr [rsi] ; add cl, cl ; ret
0x000000000063ff20 : add al, ch ; hlt ; pop rsi ; call 0xffffffffc3ed4830
0x00000000005bd516 : add al, ch ; hlt ; ret
0x0000000000414700 : add al, ch ; hlt ; retf
0x000000000045ebd6 : add al, ch ; hlt ; sbb ah, byte ptr [rsi] ; add cl, cl ; ret
0x00000000006876d4 : add al, ch ; imul byte ptr [rsi + 3] ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x000000000057719f : add al, ch ; imul ebx, ebp, 0x8948ffe8 ; ret
0x000000000049809f : add al, ch ; imul ecx, dword ptr [rdi], 0x1f ; add byte ptr [rcx], bh ; ret
0x00000000004499e1 : add al, ch ; imul ecx, dword ptr [rsi], 0x89480026 ; ret
0x0000000000451961 : add al, ch ; imul ecx, esp, 0x89480026 ; ret 0x8948
0x000000000049e9f5 : add al, ch ; imul edx, dword ptr [rcx], 0x1e ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047ae61 : add al, ch ; imul esi, dword ptr [rdi], 0x89480024 ; ret 0x8948
0x000000000060aa46 : add al, ch ; in al, -0xc ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000048d3e6 : add al, ch ; in al, 0x32 ; and eax, dword ptr [rax] ; leave ; ret
0x00000000005d6af4 : add al, ch ; in al, dx ; or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000543a74 : add al, ch ; in al, dx ; retf
0x000000000048198c : add al, ch ; in eax, dx ; and eax, dword ptr [rax] ; leave ; ret
0x00000000007ac417 : add al, ch ; in eax, dx ; call qword ptr [rbx]
0x000000000062a8dd : add al, ch ; in eax, dx ; cmp al, 9 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e00ad : add al, ch ; in eax, dx ; or byte ptr [rsi], cl ; add cl, cl ; ret
0x0000000000404273 : add al, ch ; in eax, dx ; ret
0x00000000005ae25e : add al, ch ; insb byte ptr [rdi], dx ; add edx, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x000000000063eedc : add al, ch ; insb byte ptr [rdi], dx ; call 0xffffffffc3ed37ec
0x000000000053462e : add al, ch ; insb byte ptr [rdi], dx ; call qword ptr [rbx]
0x00000000004aed8e : add al, ch ; insb byte ptr [rdi], dx ; jmp qword ptr [rax]
0x000000000041b22e : add al, ch ; insb byte ptr [rdi], dx ; retf
0x00000000004d825e : add al, ch ; insb byte ptr [rdi], dx ; test byte ptr [rsi], bl ; add cl, cl ; ret
0x00000000004b605e : add al, ch ; insb byte ptr [rdi], dx ; test dword ptr [rax], esp ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000572a59 : add al, ch ; insd dword ptr [rdi], dx ; and al, 0xe9 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004445f3 : add al, ch ; insd dword ptr [rdi], dx ; mov ch, 0x23 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050b45d : add al, ch ; insd dword ptr [rdi], dx ; xor dword ptr [rbx], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000577a7f : add al, ch ; int 0x80
0x00000000004f36fd : add al, ch ; int 0xc3
0x000000000049e66f : add al, ch ; int1 ; adc al, 0x1e ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044456f : add al, ch ; int1 ; mov ch, 0x23 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004551d9 : add al, ch ; int1 ; xchg eax, ebx ; add byte ptr es:[rax - 0x77], cl ; ret 0x8948
0x00000000004a6e84 : add al, ch ; ja 0x4a6eb2 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004d8f80 : add al, ch ; ja 0x4d8faa ; add cl, cl ; ret
0x0000000000438820 : add al, ch ; jae 0x438851 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000045bd27 : add al, ch ; jae 0x45bd7e ; add cl, cl ; ret
0x0000000000488812 : add al, ch ; jae 0x48883e ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000499366 : add al, ch ; jae 0x499394 ; add cl, cl ; ret
0x000000000051cf88 : add al, ch ; jae 0x51cf83 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000492954 : add al, ch ; jbe 0x49293c ; and al, byte ptr [rax] ; leave ; ret
0x0000000000499554 : add al, ch ; jbe 0x4995d0 ; and al, byte ptr [rax] ; leave ; ret
0x000000000056d7fc : add al, ch ; jbe 0x56d7f2 ; dec dword ptr [rax - 0x77] ; ret
0x000000000063c0d4 : add al, ch ; jbe 0x63c080 ; call 0xffffffffc3ed09e4
0x000000000041f2ec : add al, ch ; je 0x41f300 ; add byte ptr es:[rax - 0x77], cl ; ret
0x000000000045f656 : add al, ch ; je 0x45f671 ; add cl, cl ; ret
0x000000000060a6d6 : add al, ch ; je 0x60a695 ; stc ; dec dword ptr [rax - 0x77] ; ret
0x000000000045314d : add al, ch ; jge 0x45310d ; add byte ptr es:[rax - 0x77], cl ; ret 0x8948
0x000000000045c91d : add al, ch ; jge 0x45c968 ; add cl, cl ; ret
0x00000000005e687c : add al, ch ; jge 0x5e6896 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000040de4e : add al, ch ; jl 0x40de81 ; sub eax, dword ptr [rax] ; leave ; ret
0x0000000000442bfe : add al, ch ; jl 0x442c31 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a8d64 : add al, ch ; jl 0x4a8d91 ; add cl, cl ; ret
0x000000000074497b : add al, ch ; jle 0x744971 ; jmp rax
0x000000000057fd5c : add al, ch ; jmp 0xffffffffcc40fd6a
0x000000000054d23b : add al, ch ; jmp qword ptr [rdi]
0x00000000005a193b : add al, ch ; jmp rax
0x000000000060322d : add al, ch ; jmp rdx
0x0000000000493425 : add al, ch ; jne 0x493405 ; and al, byte ptr [rax] ; leave ; ret
0x000000000063ed54 : add al, ch ; jno 0x63ed49 ; dec dword ptr [rax - 0x77] ; ret
0x000000000045a24f : add al, ch ; jnp 0x45a29e ; add byte ptr es:[rax - 0x77], cl ; ret 0x8948
0x0000000000496a7d : add al, ch ; jnp 0x496aac ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000061f01f : add al, ch ; jnp 0x61f043 ; or al, byte ptr [rax] ; leave ; ret
0x0000000000698b20 : add al, ch ; jnp 0x698b2b ; dec dword ptr [rax - 0x77] ; ret
0x0000000000418213 : add al, ch ; jns 0x418246 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000428232 : add al, ch ; jns 0x428264 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000450951 : add al, ch ; jns 0x450939 ; add byte ptr es:[rax - 0x77], cl ; ret 0x8948
0x00000000005263ab : add al, ch ; jns 0x526396 ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x000000000040994a : add al, ch ; jo 0x409992 ; add byte ptr es:[rdi], cl ; mov bh, 5 ; retf
0x00000000006b0284 : add al, ch ; jrcxz 0x6b0291 ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x0000000000543b2b : add al, ch ; lahf ; retf
0x000000000054ef1f : add al, ch ; lahf ; sbb edx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000059a27b : add al, ch ; lahf ; xchg bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000004d7964 : add al, ch ; lea bx, word ptr [rsi] ; add cl, cl ; ret
0x00000000005cd23d : add al, ch ; lea edx, dword ptr [rbx] ; str word ptr [rax - 0x77] ; ret 0x8948
0x00000000004b5863 : add al, ch ; lea esp, dword ptr [eax] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000055587b : add al, ch ; lea r10, qword ptr [r14] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000625721 : add al, ch ; leave ; ret 5
0x00000000005ceed1 : add al, ch ; leave ; sbb cl, byte ptr [rdi] ; add cl, cl ; ret
0x00000000005e8c61 : add al, ch ; ljmp ptr [rsi + 9] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004ff210 : add al, ch ; lock dec dword ptr [rax - 0x77] ; ret
0x0000000000414eb4 : add al, ch ; lodsb al, byte ptr [rsi] ; lodsb al, byte ptr [rsi] ; add byte ptr es:[rax - 0x77], cl ; ret
0x000000000049971e : add al, ch ; lodsb al, byte ptr [rsi] ; outsd dx, dword ptr [rsi] ; and al, byte ptr [rax] ; leave ; ret
0x000000000058bb1e : add al, ch ; lodsb al, byte ptr [rsi] ; sub dl, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046ff9e : add al, ch ; lodsb al, byte ptr [rsi] ; test al, 0x23 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004aaa1d : add al, ch ; lodsd eax, dword ptr [rsi] ; cmp esp, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x2c7
0x0000000000504d1d : add al, ch ; lodsd eax, dword ptr [rsi] ; mov ecx, 0x8948001b ; ret
0x0000000000425047 : add al, ch ; lodsd eax, dword ptr [rsi] ; ret 0x25
0x000000000044309d : add al, ch ; lodsd eax, dword ptr [rsi] ; retf 0x23
0x0000000000492be8 : add al, ch ; loop 0x492bcd ; and al, byte ptr [rax] ; leave ; ret
0x000000000042c1b9 : add al, ch ; loope 0x42c20b ; sub dword ptr [rax], eax ; leave ; ret
0x00000000004e047b : add al, ch ; loope 0x4e04a5 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000005986bb : add al, ch ; maxps xmm2, xmmword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000409536 : add al, ch ; mov ah, 0x68 ; sub byte ptr [rax], al ; call 0x686028
0x000000000060a976 : add al, ch ; mov ah, 0xf5 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000005ce313 : add al, ch ; mov bh, 2 ; str word ptr [rax - 0x77] ; ret 0x8948
0x00000000005731d8 : add al, ch ; mov bl, 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047ce17 : add al, ch ; mov bl, 0x38 ; and al, 0 ; leave ; ret
0x000000000073a453 : add al, ch ; mov bl, bl ; call qword ptr [rax]
0x00000000005cc940 : add al, ch ; mov bl, byte ptr [rdi + rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000495542 : add al, ch ; mov byte ptr [rax - 0x76b7ffde], dl ; ret 0x8948
0x000000000041c104 : add al, ch ; mov byte ptr [rbp + 0x2a], 0 ; leave ; ret
0x00000000004a6042 : add al, ch ; mov byte ptr [rbp - 0x76b7ffdf], al ; ret 0x2c7
0x00000000004c0004 : add al, ch ; mov byte ptr [rsi], 0x20 ; add cl, cl ; ret
0x00000000004d7e88 : add al, ch ; mov byte ptr [rsi], bl ; add cl, cl ; ret
0x0000000000572004 : add al, ch ; mov ch, 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000064078b : add al, ch ; mov ch, 0x53 ; call 0xffffffffc3ed509b
0x000000000051ed6f : add al, ch ; mov ch, 0x55 ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000414aab : add al, ch ; mov ch, 0xb0 ; add byte ptr es:[rax - 0x77], cl ; ret
0x000000000041d740 : add al, ch ; mov ch, byte ptr [rdi] ; sub al, byte ptr [rax] ; leave ; ret
0x00000000005e3488 : add al, ch ; mov cl, 0xd ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000045ddfe : add al, ch ; mov cl, byte ptr [rip - 0x76b80000] ; ret 0x8948
0x000000000073a4f3 : add al, ch ; mov dh, 0xdb ; call qword ptr [rax]
0x0000000000642f66 : add al, ch ; mov dh, 0xef ; loopne 0x642f73 ; jmp 0x63f1f7
0x00000000005b5e7a : add al, ch ; mov dl, 0xb6 ; or al, 0 ; call qword ptr [rip + 0x44ca62]
0x00000000004e9040 : add al, ch ; mov dl, byte ptr [rbp + 0x1d] ; add byte ptr [rax - 0x77], cl ; ret 0x2c7
0x000000000055b2d6 : add al, ch ; mov dl, byte ptr [rbx + 0x12] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000077d167 : add al, ch ; mov ds, ebp ; call qword ptr [rbx]
0x00000000005ede03 : add al, ch ; mov dword ptr [rdi], 0x8948000d ; ret 0x8948
0x00000000004c6bc1 : add al, ch ; mov dword ptr [rsi + rbx], edi ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000642374 : add al, ch ; mov eax, 0x890003f1 ; ret
0x0000000000605874 : add al, ch ; mov eax, 0x890007bc ; ret
0x00000000005d2712 : add al, ch ; mov eax, 0xc9000edf ; ret
0x00000000004cca12 : add al, ch ; mov eax, 0xc9001f3c ; ret
0x000000000041e612 : add al, ch ; mov eax, 0xc9002a20 ; ret
0x00000000004878d5 : add al, ch ; mov eax, dword ptr [rdx - 0x76b7ffe1] ; ret
0x00000000005e4add : add al, ch ; mov ebp, 0xc9000dbe ; ret
0x00000000005d74dd : add al, ch ; mov ebp, 0xc9000e94 ; ret
0x00000000004e7c3f : add al, ch ; mov ebp, dword ptr [rcx + 0x1d] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004ffb71 : add al, ch ; mov ebx, 0x89001819 ; ret
0x0000000000494c3f : add al, ch ; mov ebx, dword ptr [rcx - 0x76b7ffde] ; ret 0x8948
0x000000000060356d : add al, ch ; mov edi, 0x890007df ; ret
0x00000000005b986d : add al, ch ; mov edi, 0x89000c7c ; ret
0x00000000005b546d : add al, ch ; mov edi, 0x89000cc0 ; ret
0x000000000041d1db : add al, ch ; mov edi, 0xc9002a37 ; ret
0x0000000000618210 : add al, ch ; mov edx, 0xc9000a84 ; ret
0x00000000005cdb10 : add al, ch ; mov edx, 0xc9000f2b ; ret
0x000000000048c310 : add al, ch ; mov edx, 0xc9002343 ; ret
0x00000000005c56e4 : add al, ch ; mov es, word ptr [rip - 0x76b7001c] ; ret
0x00000000005d760c : add al, ch ; mov esi, 0xc9000e90 ; ret
0x000000000040fe0c : add al, ch ; mov esi, 0xc9002b08 ; ret
0x00000000004c28d7 : add al, ch ; mov esp, 0x8948001f ; ret 0x8948
0x000000000042c70e : add al, ch ; mov esp, 0xc900293f ; ret
0x0000000000589bd2 : add al, ch ; mov gs, word ptr [rdx + 0xf] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c3187 : add al, ch ; mov r12b, 0x1f ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000423f1d : add al, ch ; mov r12d, 0x89480025 ; ret
0x000000000073908b : add al, ch ; mov ss, edi ; jmp rax
0x000000000041c33e : add al, ch ; mov word ptr [rbx + 0x2a], es ; add cl, cl ; ret
0x0000000000562c88 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; call 0xffffffffc3df2ca8
0x00000000005a90bc : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; jne 0x5a90d6 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000060edc6 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; mov edi, 0x89480007 ; ret
0x000000000049e536 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004f8386 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb ecx, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004abd26 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; sub byte ptr [rcx], ah ; add byte ptr [rax - 0x77], cl ; ret 0x2c7
0x000000000058ba26 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; sub edx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005f76bc : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; test byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000495e26 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; xchg dword ptr [rdx], esp ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000055b226 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; xor edx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f3725 : add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000695287 : add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xfffe
0x00000000006cb325 : add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; xor bh, bh ; dec dword ptr [rax - 0x77] ; ret 0xc7
0x000000000045cd3a : add al, ch ; nop ; cmp dword ptr [rsi], esp ; add cl, cl ; ret
0x00000000004fe470 : add al, ch ; nop ; pop rdx ; lock dec dword ptr [rax - 0x77] ; ret
0x0000000000484056 : add al, ch ; nop ; retf 0x1f
0x00000000005e3ef8 : add al, ch ; or al, byte ptr ds:[rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000637e30 : add al, ch ; or bh, byte ptr [rdx + 3] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000589d58 : add al, ch ; or byte ptr [rcx + 0xf], ch ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005779a8 : add al, ch ; or ch, dl ; call 0xffffffffc3e0c2b8
0x000000000041fbc0 : add al, ch ; or cl, byte ptr [rbx] ; sub al, byte ptr [rax] ; leave ; ret
0x000000000041d3c0 : add al, ch ; or dh, byte ptr [rbx] ; sub al, byte ptr [rax] ; leave ; ret
0x00000000004e1b4a : add al, ch ; or dl, 0x1d ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000061ea91 : add al, ch ; or dword ptr [rdi], ebx ; or al, byte ptr [rax] ; leave ; ret
0x000000000040bf57 : add al, ch ; or dword ptr [rdi], edi ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000491e85 : add al, ch ; or dword ptr [rdx], 0x89480000 ; ret
0x00000000005c94b5 : add al, ch ; or dword ptr [rsi + 0xb], esi ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005d9fc1 : add al, ch ; or dword ptr [rsi + 0xe], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000045a98d : add al, ch ; or eax, 0xc9002660 ; ret
0x000000000064d045 : add al, ch ; or ebp, ebx ; dec dword ptr [rax - 0x77] ; ret
0x0000000000442964 : add al, ch ; out 0x7e, al ; add byte ptr es:[rax - 0x77], cl ; ret
0x000000000078ac87 : add al, ch ; out 0xe0, al ; call qword ptr [rdx]
0x000000000041f279 : add al, ch ; out 8, eax ; add byte ptr es:[rax - 0x77], cl ; ret
0x0000000000570072 : add al, ch ; out dx, al ; add eax, 0x89480011 ; ret
0x0000000000602e7c : add al, ch ; out dx, al ; jle 0x602e91 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050d71c : add al, ch ; out dx, al ; ret
0x00000000004f28ec : add al, ch ; out dx, al ; ret 0x1c
0x0000000000564a3e : add al, ch ; out dx, al ; retf 0x11
0x000000000044cadc : add al, ch ; out dx, al ; sbb ah, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000052e3db : add al, ch ; out dx, eax ; add dword ptr [rcx], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050c0db : add al, ch ; out dx, eax ; and al, 0x1b ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007b43a7 : add al, ch ; out dx, eax ; jmp qword ptr [rdi]
0x0000000000495bdb : add al, ch ; out dx, eax ; mov dword ptr [rdx], esp ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000044e7db : add al, ch ; out dx, eax ; std ; add byte ptr es:[rax - 0x77], cl ; ret 0x8948
0x000000000053da5c : add al, ch ; outsb dx, byte ptr [rsi] ; or ebx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x00000000005d30de : add al, ch ; outsb dx, byte ptr [rsi] ; retf 0xa
0x0000000000495e5c : add al, ch ; outsb dx, byte ptr [rsi] ; xchg dword ptr [rdx], esp ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004206bb : add al, ch ; pandn mm5, qword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000589908 : add al, ch ; pop rax ; insd dword ptr [rdi], dx ; str word ptr [rax - 0x77] ; ret
0x00000000004f38f2 : add al, ch ; pop rax ; ret 0x18
0x000000000058ac6d : add al, ch ; pop rbp ; cmp dword ptr [rbx], edx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005775ab : add al, ch ; pop rbp ; fld1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005773ab : add al, ch ; pop rbp ; fucomi st(0) ; dec dword ptr [rax - 0x77] ; ret
0x000000000053910d : add al, ch ; pop rbp ; ret
0x0000000000523b05 : add al, ch ; pop rbx ; retf
0x000000000067602f : add al, ch ; pop rbx ; xor edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000005b1411 : add al, ch ; pop rcx ; cdq ; or eax, 0x5894800 ; ret 0x4547
0x00000000004b9107 : add al, ch ; pop rcx ; push 0x1c ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000571a71 : add al, ch ; pop rcx ; retf
0x00000000005cd46b : add al, ch ; pop rdi ; adc dword ptr [rdi], ecx ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000062676b : add al, ch ; pop rdi ; jle 0x626781 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000051ff6b : add al, ch ; pop rdi ; out 0x19, al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004330ed : add al, ch ; pop rdi ; retf 0x24
0x00000000004acceb : add al, ch ; pop rdi ; sbb eax, 0x8be4100 ; ret 0x6e
0x000000000065a5d0 : add al, ch ; pop rdx ; fld qword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000005a3270 : add al, ch ; pop rdx ; mov bl, 0x11 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000049ef02 : add al, ch ; pop rsi ; or al, 0x1e ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044ed6c : add al, ch ; pop rsi ; sbb dword ptr [rdi], esp ; add cl, cl ; ret
0x0000000000445c6e : add al, ch ; pop rsp ; mov dword ptr [rdi], esp ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000045dcee : add al, ch ; pop rsp ; retf
0x00000000005b8dec : add al, ch ; pop rsp ; retf -0x1c
0x000000000062d52d : add al, ch ; popfq ; adc byte ptr [rcx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000490bba : add al, ch ; push -0x17ffe101 ; retf
0x000000000048fc62 : add al, ch ; push -0x36ffdcf6 ; ret
0x00000000005e4a62 : add al, ch ; push -0x36fff244 ; ret
0x0000000000657368 : add al, ch ; push -0x76b70016 ; ret
0x000000000065a276 : add al, ch ; push -0x76b7fffe ; ret
0x00000000004982a2 : add al, ch ; push -0x76ffe0f3 ; ret 0x148
0x0000000000499f35 : add al, ch ; push 0x22 ; add cl, cl ; ret
0x000000000040db60 : add al, ch ; push 0x2b ; sub eax, dword ptr [rax] ; leave ; ret
0x000000000060351a : add al, ch ; push rax ; js 0x60352f ; add byte ptr [rax - 0x77], cl ; ret
0x000000000057337a : add al, ch ; push rax ; mov dl, 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006aa88a : add al, ch ; push rax ; mov ebp, ss ; dec dword ptr [rax - 0x77] ; ret
0x00000000006251be : add al, ch ; push rax ; mov ecx, 0xc9900005 ; ret
0x00000000004237fa : add al, ch ; push rax ; ret
0x00000000005d50a4 : add al, ch ; push rax ; ret 0xa
0x00000000005c237a : add al, ch ; push rax ; ret 0xf
0x00000000005749dc : add al, ch ; push rax ; retf
0x000000000046fefa : add al, ch ; push rax ; test eax, 0x89480023 ; ret
0x000000000040ddab : add al, ch ; push rbp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000502cd7 : add al, ch ; push rbp ; call 0xffffffffc3d92cfd
0x00000000004e0075 : add al, ch ; push rbp ; in eax, 0x1d ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000045b845 : add al, ch ; push rbp ; push rcx ; add cl, cl ; ret
0x00000000004d3f69 : add al, ch ; push rbp ; retf
0x000000000040430d : add al, ch ; push rbx ; ret
0x0000000000517217 : add al, ch ; push rbx ; retf -0x12
0x00000000006ac579 : add al, ch ; push rcx ; and byte ptr [rcx], al ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x0000000000526c79 : add al, ch ; push rcx ; jns 0x526c9f ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a6d79 : add al, ch ; push rcx ; js 0x4a6da7 ; add byte ptr [rax - 0x77], cl ; ret 0x2c7
0x00000000005982fb : add al, ch ; push rcx ; js 0x598315 ; add bl, ch ; ret 0x8948
0x00000000004137fb : add al, ch ; push rcx ; ret
0x000000000050c6fb : add al, ch ; push rcx ; xor al, 0x17 ; add bl, ch ; ret 0x8948
0x000000000058c073 : add al, ch ; push rdi ; and eax, 0x89480013 ; ret 0xc7
0x0000000000410673 : add al, ch ; push rdi ; fild qword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000005d4309 : add al, ch ; push rdi ; ret
0x00000000004e38f5 : add al, ch ; push rdi ; ret 0x19
0x0000000000543c09 : add al, ch ; push rdi ; retf 0x13
0x000000000065c178 : add al, ch ; push rdx ; and al, 6 ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x0000000000466af8 : add al, ch ; push rdx ; cmp eax, 0x89480024 ; ret
0x0000000000640014 : add al, ch ; push rdx ; retf
0x000000000065c978 : add al, ch ; push rdx ; sbb al, 6 ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x000000000041d678 : add al, ch ; push rdx ; xor byte ptr [rdx], ch ; add cl, cl ; ret
0x0000000000441e74 : add al, ch ; push rsi ; call 0xffffffffc40d1eaa
0x0000000000599dc4 : add al, ch ; push rsi ; mov edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000463b0a : add al, ch ; push rsi ; retf
0x000000000058e376 : add al, ch ; push rsp ; add dl, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041e276 : add al, ch ; push rsp ; and al, 0x2a ; add cl, cl ; ret
0x000000000055920c : add al, ch ; push rsp ; je 0x55922b ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004d3f92 : add al, ch ; push rsp ; retf
0x00000000004ac876 : add al, ch ; push rsp ; sbb eax, 0x89480021 ; ret 0x8948
0x00000000004e4822 : add al, ch ; pushfq ; ret 0x19
0x000000000049682e : add al, ch ; pushfq ; sahf ; and al, byte ptr [rax] ; leave ; ret
0x00000000004952f7 : add al, ch ; rcl dword ptr [rdx - 0x76b7ffde], cl ; ret 0x8948
0x000000000041648d : add al, ch ; rcl dword ptr [rsi - 0x76b7ffda], cl ; ret
0x0000000000442a9f : add al, ch ; rcl eax, 0x23 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000419d8e : add al, ch ; rcr byte ptr [rbp + 0x26], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040eafa : add al, ch ; rcr byte ptr [rbx], 1 ; sub eax, dword ptr [rax] ; leave ; ret
0x0000000000440878 : add al, ch ; rcr byte ptr [rdi - 0x76b7ffda], cl ; ret
0x000000000065c7f8 : add al, ch ; rcr byte ptr [rip - 0x76b7fffa], cl ; ret 0xc748
0x0000000000526653 : add al, ch ; rcr esp, 1 ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x00000000004025e7 : add al, ch ; ret
0x0000000000674415 : add al, ch ; ret 0
0x000000000056bd8a : add al, ch ; ret 0x113d
0x0000000000551738 : add al, ch ; ret 0x115d
0x000000000055bfa1 : add al, ch ; ret 0x12
0x000000000057eb28 : add al, ch ; ret 0x129e
0x000000000054fc8a : add al, ch ; ret 0x12fe
0x000000000053be6a : add al, ch ; ret 0x1456
0x000000000051df9e : add al, ch ; ret 0x1626
0x0000000000514d6a : add al, ch ; ret 0x16c7
0x000000000051198a : add al, ch ; ret 0x16e1
0x00000000004f390e : add al, ch ; ret 0x18
0x0000000000505d08 : add al, ch ; ret 0x1893
0x0000000000501208 : add al, ch ; ret 0x18de
0x00000000004f2332 : add al, ch ; ret 0x18ef
0x00000000004fb2a8 : add al, ch ; ret 0x18fa
0x00000000004ef7fc : add al, ch ; ret 0x1912
0x00000000004f3c08 : add al, ch ; ret 0x19be
0x00000000004e47ec : add al, ch ; ret 0x19c3
0x00000000004d9088 : add al, ch ; ret 0x1a6a
0x00000000004d6788 : add al, ch ; ret 0x1a93
0x000000000050f808 : add al, ch ; ret 0x1aed
0x00000000004c4940 : add al, ch ; ret 0x1b
0x00000000004ccafc : add al, ch ; ret 0x1b3f
0x00000000004cb2ec : add al, ch ; ret 0x1b58
0x00000000004c7dfc : add al, ch ; ret 0x1b8c
0x00000000004c73fc : add al, ch ; ret 0x1b96
0x0000000000500b08 : add al, ch ; ret 0x1bfb
0x00000000004f2973 : add al, ch ; ret 0x1c
0x00000000004be1fc : add al, ch ; ret 0x1c28
0x00000000004b95fc : add al, ch ; ret 0x1c74
0x00000000004aa224 : add al, ch ; ret 0x1d68
0x00000000004a41ec : add al, ch ; ret 0x1dc9
0x0000000000492b32 : add al, ch ; ret 0x1ee7
0x0000000000491060 : add al, ch ; ret 0x1efa
0x0000000000484890 : add al, ch ; ret 0x1f
0x0000000000480c24 : add al, ch ; ret 0x1ffe
0x0000000000467bfc : add al, ch ; ret 0x218e
0x000000000045e39e : add al, ch ; ret 0x2217
0x000000000045db9e : add al, ch ; ret 0x222a
0x000000000044d488 : add al, ch ; ret 0x2326
0x000000000043cd8a : add al, ch ; ret 0x242d
0x000000000042a888 : add al, ch ; ret 0x2552
0x000000000041a68a : add al, ch ; ret 0x2654
0x0000000000441588 : add al, ch ; ret 0x2692
0x0000000000659ffc : add al, ch ; ret 0x26a
0x0000000000414388 : add al, ch ; ret 0x26b7
0x00000000006a7ef8 : add al, ch ; ret 0x28
0x00000000006719a8 : add al, ch ; ret 0x38f
0x000000000061d3c4 : add al, ch ; ret 0x637
0x00000000006098e8 : add al, ch ; ret 0x806
0x0000000000608d28 : add al, ch ; ret 0x80b
0x00000000005f118a : add al, ch ; ret 0x8e9
0x000000000062e0d8 : add al, ch ; ret 0x928
0x00000000005ebe8a : add al, ch ; ret 0x93c
0x00000000005ec032 : add al, ch ; ret 0x952
0x00000000005e4788 : add al, ch ; ret 0x9b3
0x00000000004022e7 : add al, ch ; ret 0x9f
0x00000000005d3c9e : add al, ch ; ret 0xac9
0x00000000005d308a : add al, ch ; ret 0xaca
0x00000000005d1f9e : add al, ch ; ret 0xae6
0x000000000060c238 : add al, ch ; ret 0xb7b
0x00000000005bb29e : add al, ch ; ret 0xc53
0x00000000005b388a : add al, ch ; ret 0xcc2
0x000000000066d778 : add al, ch ; ret 0xd963
0x00000000005a239e : add al, ch ; ret 0xde2
0x00000000005ae108 : add al, ch ; ret 0xe0f
0x000000000056f2b0 : add al, ch ; ret 0xe95b
0x0000000000671b9e : add al, ch ; ret 0xea
0x00000000005d1138 : add al, ch ; ret 0xedb
0x0000000000599918 : add al, ch ; ret 0xf62
0x0000000000408f28 : add al, ch ; ret 0xf82
0x00000000006cacf8 : add al, ch ; ret 0xfd51
0x000000000069779e : add al, ch ; ret 0xfe8e
0x0000000000697b6a : add al, ch ; ret 0xfe99
0x000000000059a2b8 : add al, ch ; ret 0xfebb
0x000000000068a58a : add al, ch ; ret 0xff55
0x0000000000693508 : add al, ch ; ret 0xffc5
0x00000000007bad67 : add al, ch ; ret 0xfff0
0x00000000005f50a7 : add al, ch ; ret 8
0x00000000004094ef : add al, ch ; retf
0x000000000054bc3a : add al, ch ; retf -0x1472
0x0000000000640e9c : add al, ch ; retf -0x1744
0x0000000000792c57 : add al, ch ; retf -0x1d
0x0000000000639d52 : add al, ch ; retf -0x1e7f
0x000000000063ac52 : add al, ch ; retf -0x1e8e
0x00000000005175a0 : add al, ch ; retf -0x49
0x00000000006d0714 : add al, ch ; retf -0x4f3
0x000000000059b680 : add al, ch ; retf -0x7f
0x000000000057bb30 : add al, ch ; retf -0x9b
0x00000000006c65b0 : add al, ch ; retf -0xa
0x00000000005d67fe : add al, ch ; retf -2
0x000000000056be62 : add al, ch ; retf 0x1156
0x0000000000597700 : add al, ch ; retf 0x126e
0x000000000054fd62 : add al, ch ; retf 0x1317
0x0000000000549af4 : add al, ch ; retf 0x136f
0x0000000000546b62 : add al, ch ; retf 0x13a9
0x0000000000544482 : add al, ch ; retf 0x13b6
0x0000000000544a62 : add al, ch ; retf 0x13ca
0x0000000000540682 : add al, ch ; retf 0x13f4
0x000000000053b896 : add al, ch ; retf 0x144d
0x000000000052f962 : add al, ch ; retf 0x151b
0x0000000000536510 : add al, ch ; retf 0x1596
0x0000000000523896 : add al, ch ; retf 0x15cd
0x000000000040b270 : add al, ch ; retf 0x1640
0x0000000000519c96 : add al, ch ; retf 0x1669
0x000000000051a662 : add al, ch ; retf 0x166e
0x0000000000547be0 : add al, ch ; retf 0x176c
0x00000000004fa8e0 : add al, ch ; retf 0x18f6
0x00000000004f6940 : add al, ch ; retf 0x192f
0x00000000004e3dbc : add al, ch ; retf 0x19cd
0x00000000004dc980 : add al, ch ; retf 0x1a41
0x00000000004d811c : add al, ch ; retf 0x1a89
0x0000000000511624 : add al, ch ; retf 0x1b
0x00000000004cd91c : add al, ch ; retf 0x1b31
0x00000000004f40e0 : add al, ch ; retf 0x1b3c
0x00000000004cb196 : add al, ch ; retf 0x1b54
0x00000000004c3ef4 : add al, ch ; retf 0x1bcb
0x00000000004fecc0 : add al, ch ; retf 0x1bfb
0x00000000004bf8bc : add al, ch ; retf 0x1c12
0x00000000004bed2a : add al, ch ; retf 0x1c25
0x00000000004b65e2 : add al, ch ; retf 0x1c95
0x00000000004e1b84 : add al, ch ; retf 0x1d
0x00000000004af7e4 : add al, ch ; retf 0x1d13
0x00000000004e3430 : add al, ch ; retf 0x1db8
0x00000000004a3080 : add al, ch ; retf 0x1dca
0x00000000004e1400 : add al, ch ; retf 0x1dd1
0x000000000049ac96 : add al, ch ; retf 0x1e59
0x000000000049901c : add al, ch ; retf 0x1e7a
0x0000000000498c1c : add al, ch ; retf 0x1e7e
0x0000000000491ce4 : add al, ch ; retf 0x1eee
0x0000000000489c1c : add al, ch ; retf 0x1f6e
0x0000000000487ee4 : add al, ch ; retf 0x1f8c
0x000000000048571c : add al, ch ; retf 0x1fb3
0x0000000000482a82 : add al, ch ; retf 0x1fd0
0x000000000047fdbc : add al, ch ; retf 0x200d
0x000000000047dc2a : add al, ch ; retf 0x2036
0x00000000004041d0 : add al, ch ; retf 0x204e
0x0000000000467df4 : add al, ch ; retf 0x218c
0x0000000000454680 : add al, ch ; retf 0x22b4
0x0000000000454bf4 : add al, ch ; retf 0x22be
0x000000000043a8f4 : add al, ch ; retf 0x2461
0x0000000000423a80 : add al, ch ; retf 0x25c0
0x0000000000422896 : add al, ch ; retf 0x25dd
0x0000000000420580 : add al, ch ; retf 0x25f5
0x0000000000445a30 : add al, ch ; retf 0x2792
0x00000000006caf80 : add al, ch ; retf 0x36
0x0000000000648282 : add al, ch ; retf 0x378
0x0000000000658aa0 : add al, ch ; retf 0x4f2
0x00000000006235e4 : add al, ch ; retf 0x5d5
0x000000000061fa80 : add al, ch ; retf 0x600
0x000000000061d858 : add al, ch ; retf 0x632
0x00000000006395d0 : add al, ch ; retf 0x6e7
0x0000000000609082 : add al, ch ; retf 0x76a
0x0000000000601c62 : add al, ch ; retf 0x7f8
0x00000000005e3896 : add al, ch ; retf 0x9cd
0x00000000005dda62 : add al, ch ; retf 0xa3a
0x00000000005d5d82 : add al, ch ; retf 0xa9d
0x00000000005d4a2a : add al, ch ; retf 0xac8
0x000000000060d300 : add al, ch ; retf 0xb12
0x00000000005bb562 : add al, ch ; retf 0xc5f
0x00000000005bb462 : add al, ch ; retf 0xc60
0x00000000005bea10 : add al, ch ; retf 0xd11
0x00000000005b09a0 : add al, ch ; retf 0xda3
0x00000000005d22d4 : add al, ch ; retf 0xe
0x0000000000597562 : add al, ch ; retf 0xe9f
0x0000000000582282 : add al, ch ; retf 0xfd8
0x00000000005f30e5 : add al, ch ; retf 8
0x00000000006b63fa : add al, ch ; rol byte ptr [rcx - 0x76b80000], 1 ; ret
0x00000000005d2b6e : add al, ch ; rol byte ptr [rip - 0x76b80000], 1 ; ret
0x000000000041738f : add al, ch ; rol dword ptr [rdi - 0x76b7ffda], 1 ; ret
0x000000000046359f : add al, ch ; rol ebp, 0x21 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058f990 : add al, ch ; ror byte ptr [rdi + rcx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e180a : add al, ch ; ror ch, 0xd ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000005e282a : add al, ch ; ror dword ptr ss:[rcx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005701c2 : add al, ch ; sahf ; add al, 0x11 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006acac2 : add al, ch ; sahf ; cmp edi, ebp ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a092c : add al, ch ; sahf ; fsub qword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000005938ae : add al, ch ; sahf ; ret 0xe
0x000000000064c69c : add al, ch ; sahf ; retf 3
0x000000000068ba2c : add al, ch ; sahf ; sub eax, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005d17d9 : add al, ch ; sal ecx, 0xe ; add cl, cl ; ret
0x00000000005a4e8a : add al, ch ; salc ; mov bh, 0xd ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005c5e14 : add al, ch ; salc ; or al, 0 ; call qword ptr [rip + 0x43cac0]
0x00000000006cb3f4 : add al, ch ; salc ; xor edi, edi ; dec dword ptr [rax - 0x77] ; ret 0xc7
0x0000000000642bf9 : add al, ch ; sar dword ptr [rcx - 0x76b7fff9], 1 ; ret
0x000000000067c79f : add al, ch ; sar dword ptr [rsi], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e1ee0 : add al, ch ; sbb ah, 9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000056a5b0 : add al, ch ; sbb al, byte ptr [rax + 0x15] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000542130 : add al, ch ; sbb al, byte ptr [rdi - 0x76b7ffea] ; ret 0xc748
0x00000000005978b2 : add al, ch ; sbb byte ptr [rbp + 0x12], ch ; add byte ptr [rax - 0x77], cl ; ret
0x000000000065a1a6 : add al, ch ; sbb byte ptr [rcx + 2], ch ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006593a6 : add al, ch ; sbb byte ptr [rdi + 2], dh ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000629e46 : add al, ch ; sbb ch, byte ptr [rax + 5] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000068b1b0 : add al, ch ; sbb dh, byte ptr [rbx + rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042cfb0 : add al, ch ; sbb dh, byte ptr [rdi] ; sub dword ptr [rax], eax ; leave ; ret
0x000000000040f5b0 : add al, ch ; sbb dl, byte ptr [rcx] ; sub eax, dword ptr [rax] ; leave ; ret
0x0000000000414647 : add al, ch ; sbb dword ptr [rbp - 0x76b7ffda], esi ; ret
0x00000000006ac647 : add al, ch ; sbb dword ptr [rdi], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000694fb1 : add al, ch ; sbb dword ptr [rsi - 0x76b7fffe], edx ; ret 0xc7
0x0000000000539a0f : add al, ch ; sbb eax, 0x8900147b ; ret
0x00000000004948af : add al, ch ; sbb ebx, dword ptr [rbp - 0x76b7ffde] ; ret 0x8948
0x0000000000673b6f : add al, ch ; sbb edx, dword ptr [rsi - 1] ; dec dword ptr [rax - 0x77] ; ret
0x00000000005dd094 : add al, ch ; scasb al, byte ptr [rdi] ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041c242 : add al, ch ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000061e61c : add al, ch ; scasb al, byte ptr [rdi] ; and byte ptr [rdx], cl ; add cl, cl ; ret
0x000000000052681c : add al, ch ; scasb al, byte ptr [rdi] ; jge 0x526842 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004d911c : add al, ch ; scasb al, byte ptr [rdi] ; jne 0x4d9146 ; add cl, cl ; ret
0x00000000005f848c : add al, ch ; scasb al, byte ptr [rdi] ; ret
0x00000000004f389e : add al, ch ; scasb al, byte ptr [rdi] ; ret 0x18
0x000000000051e11b : add al, ch ; scasd eax, dword ptr [rdi] ; add al, 0x1a ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005f6f1b : add al, ch ; scasd eax, dword ptr [rdi] ; jbe 0x5f6f34 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a301b : add al, ch ; scasd eax, dword ptr [rdi] ; mov ch, 0x11 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000061bd1b : add al, ch ; scasd eax, dword ptr [rdi] ; sub byte ptr [rdx], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000472811 : add al, ch ; shl qword ptr [r8], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000441c0a : add al, ch ; shr dl, 0x27 ; add cl, cl ; ret
0x0000000000453cf7 : add al, ch ; shr dword ptr [rax - 0x76b7ffda], cl ; ret 0x8948
0x000000000046d29f : add al, ch ; shr dword ptr [rax], 0x21 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000450f9f : add al, ch ; shr ebx, 0x22 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e374f : add al, ch ; std ; ret
0x00000000005f384f : add al, ch ; std ; ret 8
0x000000000049d0cf : add al, ch ; sti ; adc al, 0x22 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000066dc8f : add al, ch ; sti ; mov ah, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x0000000000496236 : add al, ch ; stosb byte ptr [rdi], al ; add eax, 0x89480000 ; ret
0x0000000000675e50 : add al, ch ; stosb byte ptr [rdi], al ; fstpnce st(0), st(0) ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004330a0 : add al, ch ; stosb byte ptr [rdi], al ; retf 0x24
0x000000000040c620 : add al, ch ; stosb byte ptr [rdi], al ; sub eax, dword ptr [rax] ; leave ; ret
0x000000000046d01f : add al, ch ; stosd dword ptr [rdi], eax ; adc eax, 0x89480025 ; ret 0x8948
0x000000000043f6b5 : add al, ch ; stosd dword ptr [rdi], eax ; add al, 0x24 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004862ef : add al, ch ; stosd dword ptr [rdi], eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; and eax, dword ptr [rax] ; leave ; ret
0x000000000046331f : add al, ch ; stosd dword ptr [rdi], eax ; mov dl, 0x25 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004042b5 : add al, ch ; stosd dword ptr [rdi], eax ; ret
0x00000000005860a0 : add al, ch ; sub ah, byte ptr [rsi - 0x76b7ffed] ; ret
0x000000000042c39e : add al, ch ; sub al, 0x43 ; sub dword ptr [rax], eax ; leave ; ret
0x000000000058b834 : add al, ch ; sub al, 0x4e ; str word ptr [rax - 0x77] ; ret
0x00000000006cb9a4 : add al, ch ; sub al, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc748
0x00000000004505a2 : add al, ch ; sub al, ah ; add byte ptr es:[rax - 0x77], cl ; ret 0x8948
0x0000000000492aa0 : add al, ch ; sub bl, ah ; and al, byte ptr [rax] ; leave ; ret
0x00000000006046a0 : add al, ch ; sub bl, byte ptr [rdi - 0x76b7fff5] ; ret
0x0000000000544da2 : add al, ch ; sub byte ptr [rax - 0x76b7ffe9], bl ; ret
0x0000000000443e38 : add al, ch ; sub byte ptr [rbp - 0x76b7ffdd], bh ; ret
0x00000000004aba4a : add al, ch ; sub byte ptr [rbx], 0x21 ; add byte ptr [rax - 0x77], cl ; ret 0x2c7
0x00000000005973a2 : add al, ch ; sub byte ptr [rdx + 0x12], dh ; add byte ptr [rax - 0x77], cl ; ret
0x000000000051dc18 : add al, ch ; sub dl, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041dcd8 : add al, ch ; sub dword ptr [rdx], ebp ; add cl, cl ; ret
0x000000000061fb6d : add al, ch ; sub eax, 0xc9000a0e ; ret
0x000000000041ba35 : add al, ch ; sub eax, dword ptr [rcx + 0x26] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041389f : add al, ch ; sub ebp, dword ptr [rbp - 0x76b7ffd6] ; ret 0x8948
0x000000000054bc35 : add al, ch ; sub ecx, dword ptr [rdx + 0x13] ; add al, ch ; retf -0x1472
0x000000000058bc7f : add al, ch ; sub qword ptr [r11], rdx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007d322f : add al, ch ; syscall
0x00000000005a3a56 : add al, ch ; test al, 0xd ; add cl, ch ; ret 0xfffe
0x000000000062995c : add al, ch ; test bl, 0xdd ; dec dword ptr [rax - 0x77] ; ret
0x000000000042c646 : add al, ch ; test byte ptr [rax + 0x29], al ; add cl, cl ; ret
0x00000000006b6546 : add al, ch ; test byte ptr [rax - 0x76b80000], al ; ret
0x00000000004bb1dc : add al, ch ; test byte ptr [rcx + 0x1c], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005ce545 : add al, ch ; test dword ptr [rax], eax ; str word ptr [rax - 0x77] ; ret 0x8948
0x000000000058c4db : add al, ch ; test dword ptr [rcx + 0xf], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006a79a5 : add al, ch ; test dword ptr [rdi + 0x3948ffd5], edi ; ret
0x00000000004f3b45 : add al, ch ; test dword ptr [rdi - 0x3f40ffe7], edi ; retf
0x000000000049e8c5 : add al, ch ; test dword ptr [rdi - 0x76b7ffe0], edi ; ret
0x00000000004d79f1 : add al, ch ; test eax, 0xc9001e8f ; ret
0x000000000057732f : add al, ch ; wait ; jb 0x577350 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046692f : add al, ch ; wait ; jl 0x466961 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000057752f : add al, ch ; wait ; jo 0x577550 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e90c5 : add al, ch ; wait ; push 9 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004ff7e4 : add al, ch ; xchg byte ptr [rbp - 0x76b7ffe8], dh ; ret
0x00000000004fa444 : add al, ch ; xchg byte ptr [rcx + 0x1c], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042d244 : add al, ch ; xchg byte ptr [rcx + rbp], dh ; add cl, cl ; ret
0x000000000045f605 : add al, ch ; xchg eax, ebp ; adc esp, dword ptr [rsi] ; add cl, cl ; ret
0x00000000004092c5 : add al, ch ; xchg eax, ebp ; jmp qword ptr [rsi]
0x00000000004042cb : add al, ch ; xchg eax, ebp ; ret
0x0000000000515297 : add al, ch ; xchg eax, ebp ; ret 0x16
0x00000000005fc5f5 : add al, ch ; xchg eax, ebp ; retf 0xa
0x000000000061b135 : add al, ch ; xchg eax, ebp ; xor al, 0xa ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000006417ad : add al, ch ; xchg eax, ebx ; call 0xffffffffc3ed60bd
0x0000000000671bf7 : add al, ch ; xchg eax, ebx ; jne 0x671c03 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000546a37 : add al, ch ; xchg eax, ebx ; jnp 0x546a5b ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000530537 : add al, ch ; xchg eax, ebx ; loopne 0x53055c ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000642729 : add al, ch ; xchg eax, ebx ; mov cl, 0xe7 ; dec dword ptr [rax - 0x77] ; ret
0x000000000063fcad : add al, ch ; xchg eax, ebx ; pop rsi ; call 0xffffffffc3ed45bd
0x00000000004a2fb7 : add al, ch ; xchg eax, ebx ; retf
0x000000000049d4b7 : add al, ch ; xchg eax, ebx ; shl dword ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000496137 : add al, ch ; xchg eax, ebx ; test byte ptr [rdx], ah ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000063f183 : add al, ch ; xchg eax, ecx ; insb byte ptr [rdi], dx ; call 0xffffffffc3ed3a93
0x00000000006033d9 : add al, ch ; xchg eax, ecx ; jns 0x6033ee ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000592939 : add al, ch ; xchg eax, ecx ; mov esp, 0x89480012 ; ret
0x00000000004f3739 : add al, ch ; xchg eax, ecx ; ret
0x00000000004fead9 : add al, ch ; xchg eax, ecx ; ret 0x18
0x0000000000563bcf : add al, ch ; xchg eax, ecx ; retf 0x11
0x000000000048402d : add al, ch ; xchg eax, ecx ; retf 0x1f
0x00000000005b5e53 : add al, ch ; xchg eax, edi ; or eax, 0x8115ff00 ; retf 0x44
0x0000000000483f4f : add al, ch ; xchg eax, edi ; retf
0x000000000047d5b3 : add al, ch ; xchg eax, edi ; shl byte ptr [rdx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044d7ce : add al, ch ; xchg eax, edx ; and esp, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000601fd8 : add al, ch ; xchg eax, edx ; lea ecx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004542ce : add al, ch ; xchg eax, edx ; ret
0x0000000000482934 : add al, ch ; xchg eax, esi ; frstor dword ptr [rbx] ; add cl, cl ; ret
0x00000000005df1ca : add al, ch ; xchg eax, esi ; or dword ptr [rdx], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000554604 : add al, ch ; xchg eax, esi ; ret
0x0000000000514996 : add al, ch ; xchg eax, esi ; retf
0x00000000005db134 : add al, ch ; xchg eax, esi ; xor al, 0xe ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000006cb434 : add al, ch ; xchg eax, esi ; xor edi, edi ; dec dword ptr [rax - 0x77] ; ret 0xc7
0x000000000040f7cc : add al, ch ; xchg eax, esp ; add esp, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000049e646 : add al, ch ; xchg eax, esp ; ret 0x20
0x00000000005edecc : add al, ch ; xchg eax, esp ; sbb al, 9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000063612a : add al, ch ; xchg eax, esp ; test eax, 0x89480004 ; ret
0x000000000048d436 : add al, ch ; xchg eax, esp ; xor ah, byte ptr [rbx] ; add cl, cl ; ret
0x00000000005de5c3 : add al, ch ; xlatb ; and ecx, dword ptr [rsi] ; add cl, cl ; ret
0x0000000000640869 : add al, ch ; xlatb ; push rdx ; call 0xffffffffc3ed5179
0x0000000000404289 : add al, ch ; xlatb ; ret
0x00000000004e19f3 : add al, ch ; xlatb ; retf
0x000000000042e096 : add al, ch ; xor al, 0x26 ; sub dword ptr [rax], eax ; leave ; ret
0x0000000000486196 : add al, ch ; xor al, 0xa5 ; and eax, dword ptr [rax] ; leave ; ret
0x00000000006cb364 : add al, ch ; xor bh, bh ; dec dword ptr [rax - 0x77] ; ret 0xc7
0x000000000052b389 : add al, ch ; xor bl, byte ptr [r9] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006a6930 : add al, ch ; xor byte ptr [rbp - 0x76b70003], bl ; ret
0x00000000004d226c : add al, ch ; xor byte ptr [rcx], bl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000495d98 : add al, ch ; xor cl, byte ptr [rax - 0x76b7ffde] ; ret 0x8948
0x00000000005aa31b : add al, ch ; xor dword ptr [rax + 0xd], ebx ; add cl, ch ; ret 0xfffe
0x0000000000423499 : add al, ch ; xor dword ptr [rcx - 0x76b7ffd7], esi ; ret 0x8948
0x0000000000658f2f : add al, ch ; xor dword ptr [rdi + 2], esi ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005ec3dd : add al, ch ; xor dword ptr [rdi], 9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000068a899 : add al, ch ; xor dword ptr [rip - 0x76b7fffd], edi ; ret
0x000000000058b466 : add al, ch ; xor dword ptr fs:[rbx], edx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006029f7 : add al, ch ; xor eax, 0x890007eb ; ret
0x00000000005b7f65 : add al, ch ; xor eax, 0x89000dab ; ret
0x00000000005d1817 : add al, ch ; xor ecx, 0xe ; add cl, cl ; ret
0x00000000006b3297 : add al, ch ; xor esi, dword ptr [rbx - 0x76b80000] ; ret 0xc7
0x000000000079b1b7 : add al, cl ; adc ah, bh ; jmp qword ptr [rcx]
0x000000000078f807 : add al, cl ; add ah, dl ; jmp qword ptr [rdx]
0x0000000000738840 : add al, cl ; add al, byte ptr [rax] ; out 0x68, al ; salc ; jmp qword ptr [rax]
0x000000000078f667 : add al, cl ; add dl, ah ; jmp qword ptr [rbx]
0x000000000077b8f7 : add al, cl ; and al, 0xdd ; call rcx
0x00000000007b0f17 : add al, cl ; and esi, ebp ; jmp qword ptr [rcx]
0x0000000000772ea7 : add al, cl ; cmp al, 0xdb ; call qword ptr [rbx]
0x00000000007afe47 : add al, cl ; imul ch ; call qword ptr [rax]
0x00000000007ac4d7 : add al, cl ; in eax, dx ; call qword ptr [rbx]
0x000000000073589b : add al, cl ; iretd ; jmp rax
0x00000000007b6f87 : add al, cl ; mov al, 0xef ; call qword ptr [rcx]
0x0000000000753597 : add al, cl ; mov cl, 0xce ; call rsp
0x00000000007b7187 : add al, cl ; mov dl, 0xef ; call qword ptr [rbx]
0x00000000007758e7 : add al, cl ; or ebx, esp ; call qword ptr [rsi]
0x0000000000769d87 : add al, cl ; out 0xd8, al ; call rbx
0x00000000007bb6d7 : add al, cl ; out 0xf0, al ; jmp qword ptr [rdx]
0x00000000007b2c77 : add al, cl ; out dx, al ; jmp rsp
0x00000000007b4e37 : add al, cl ; pop rcx ; out dx, eax ; call qword ptr [rdi]
0x00000000007be797 : add al, cl ; pop rsi ; int1 ; call rsp
0x0000000000784d47 : add al, cl ; rcr bh, 1 ; jmp qword ptr [rdi]
0x0000000000402587 : add al, cl ; ret
0x000000000070c287 : add al, cl ; ret 0x70
0x00000000007382e3 : add al, cl ; ret 0xffd4
0x000000000070cb97 : add al, cl ; retf
0x0000000000736623 : add al, cl ; retf -0x2f
0x00000000007f403f : add al, cl ; retf 0x1f01
0x00000000006dcb0f : add al, cl ; retf 0x6d
0x00000000006d9697 : add al, cl ; retf 0x9f
0x000000000076de07 : add al, cl ; sbb ebx, edx ; jmp qword ptr [rcx]
0x0000000000762bd7 : add al, cl ; test al, 0xd4 ; jmp qword ptr [rbx]
0x000000000077cec7 : add al, cl ; xchg ch, bl ; call qword ptr [rbx]
0x000000000073ab23 : add al, dh ; adc al, 0xdd ; jmp rax
0x00000000007414e3 : add al, dh ; adc al, 0xe7 ; jmp qword ptr [rax]
0x0000000000761ebf : add al, dh ; adc dl, ah ; call rcx
0x00000000007ebd00 : add al, dh ; add dword ptr [rbx - 0x7e], ecx ; adc eax, dword ptr [rax] ; retf
0x0000000000689b8f : add al, dh ; add dword ptr [rdi + 4], 1 ; ret
0x0000000000507d5f : add al, dh ; add dword ptr [rdi], 1 ; ret
0x0000000000749d93 : add al, dh ; clc ; call rax
0x0000000000772eef : add al, dh ; cmp al, 0xdb ; jmp qword ptr [rax]
0x00000000007824ff : add al, dh ; fcomp st(6) ; call qword ptr [rbx]
0x00000000007477b3 : add al, dh ; fdivrp st(4) ; call rax
0x0000000000742e4b : add al, dh ; fucomp st(2) ; call rax
0x000000000068e09a : add al, dh ; imul eax, dword ptr [rax], 0x8c48348 ; ret
0x000000000073532b : add al, dh ; imul ecx, edi, -1 ; push rax ; retf 1
0x00000000007af7ff : add al, dh ; in al, dx ; in eax, dx ; jmp qword ptr [rax]
0x0000000000749a53 : add al, dh ; in eax, -9 ; call qword ptr [rax]
0x00000000007ac3e7 : add al, dh ; in eax, dx ; call qword ptr [rbx]
0x0000000000749533 : add al, dh ; ja 0x749532 ; call rax
0x0000000000773bdf : add al, dh ; jae 0x773bc2 ; jmp qword ptr [rdx]
0x000000000074540b : add al, dh ; jno 0x745402 ; jmp qword ptr [rax]
0x0000000000740573 : add al, dh ; jnp 0x740560 ; jmp qword ptr [rax]
0x0000000000749563 : add al, dh ; jnp 0x749562 ; call rax
0x000000000079fd4f : add al, dh ; jo 0x79fd3f ; call qword ptr [rbx]
0x000000000074abdb : add al, dh ; jp 0x74abdc ; call rax
0x0000000000749e53 : add al, dh ; lahf ; clc ; call qword ptr [rax]
0x0000000000741fbb : add al, dh ; loop 0x741faa ; jmp rax
0x000000000074a3cb : add al, dh ; loop 0x74a3cb ; jmp rax
0x0000000000787e2f : add al, dh ; loopne 0x787e38 ; retf
0x00000000007bb59f : add al, dh ; loopne 0x7bb597 ; call qword ptr [rdx]
0x00000000007406db : add al, dh ; mov bl, 0xe5 ; call rax
0x000000000078dc0f : add al, dh ; mov cl, 0xe1 ; jmp qword ptr [rax]
0x000000000073c903 : add al, dh ; mov dl, 0xdf ; call qword ptr [rax]
0x0000000000797c1f : add al, dh ; mov dl, 0xe5 ; jmp rdx
0x00000000007ae8af : add al, dh ; mov dl, 0xed ; jmp qword ptr [rcx]
0x00000000007b68ff : add al, dh ; mov edi, gs ; call rsi
0x0000000000746173 : add al, dh ; movsb byte ptr [rdi], byte ptr [rsi] ; call rax
0x0000000000747e03 : add al, dh ; movsxd rsi, ebp ; jmp qword ptr [rax]
0x000000000077a47f : add al, dh ; neg ah ; call rdx
0x000000000074be17 : add al, dh ; or cl, ah ; call rsp
0x0000000000748cf3 : add al, dh ; or dh, bh ; call qword ptr [rax]
0x000000000078fb6f : add al, dh ; or dl, ah ; jmp qword ptr [rbx]
0x000000000074b59b : add al, dh ; or dl, bh ; jmp qword ptr [rax]
0x000000000073febb : add al, dh ; or ebp, esp ; jmp qword ptr [rax]
0x000000000078fc8f : add al, dh ; or edx, esp ; jmp qword ptr [rbx]
0x000000000073e353 : add al, dh ; out 0xe1, al ; jmp qword ptr [rax]
0x00000000007b4b1f : add al, dh ; out dx, eax ; call rax
0x0000000000747d43 : add al, dh ; pop rsp ; cmc ; call rax
0x00000000007b8b9f : add al, dh ; push 0xf0 ; call qword ptr [rcx]
0x000000000073bae3 : add al, dh ; push rbp ; fdivp st(7) ; nop ; ret 3
0x0000000000745313 : add al, dh ; push rbx ; out dx, eax ; ljmp ptr [rax] ; retf
0x0000000000743a7b : add al, dh ; push rcx ; in al, dx ; call qword ptr [rax]
0x00000000004025ff : add al, dh ; ret
0x00000000006f7907 : add al, dh ; ret 0x51
0x00000000004022ff : add al, dh ; ret 0x9f
0x00000000007aa4cf : add al, dh ; retf -0x14
0x00000000007482f3 : add al, dh ; retf -0xb
0x0000000000746273 : add al, dh ; retf -0xe
0x0000000000724e0f : add al, dh ; retf 0x66
0x000000000074156b : add al, dh ; sbb ah, bh ; call qword ptr [rax]
0x000000000073e51b : add al, dh ; sbb ah, dl ; jmp qword ptr [rax]
0x00000000007424b3 : add al, dh ; sbb al, 0xe9 ; call qword ptr [rax]
0x000000000073ee5b : add al, dh ; sbb bl, ah ; lcall ptr [rax] ; retf 4
0x000000000073d8db : add al, dh ; sbb ecx, esp ; jmp rax
0x000000000074a65b : add al, dh ; sbb edi, ecx ; jmp rax
0x0000000000734a4b : add al, dh ; sbb esi, ecx ; call qword ptr [rax]
0x0000000000749f1b : add al, dh ; stosb byte ptr [rdi], al ; clc ; call qword ptr [rax]
0x0000000000745c6b : add al, dh ; stosb byte ptr [rdi], al ; int1 ; call rax
0x000000000074b23b : add al, dh ; stosb byte ptr [rdi], al ; stc ; jmp qword ptr [rax]
0x0000000000747fdb : add al, dh ; test al, 0xf5 ; call rax
0x000000000073b1b3 : add al, dh ; test ch, bl ; call qword ptr [rax]
0x0000000000745f53 : add al, dh ; test edx, esi ; jmp qword ptr [rax]
0x000000000073be03 : add al, dh ; test esi, ebx ; jmp rax
0x00000000007410b3 : add al, dh ; test esi, esp ; call rax
0x00000000007471e3 : add al, dh ; xchg ah, dh ; jmp qword ptr [rax]
0x00000000007b662f : add al, dh ; xchg bh, ch ; call qword ptr [rbx]
0x0000000000743cfb : add al, dh ; xchg eax, ebp ; in al, dx ; jmp qword ptr [rax]
0x000000000073acbb : add al, dh ; xor ch, bl ; jmp rax
0x0000000000672f77 : add al, dl ; adc dword ptr [rdi], esp ; ret
0x000000000073d7d3 : add al, dl ; adc ecx, esp ; call qword ptr [rax]
0x0000000000771def : add al, dl ; add bl, bl ; call qword ptr [rbx]
0x000000000074860b : add al, dl ; add esi, esi ; jmp qword ptr [rax]
0x0000000000746d53 : add al, dl ; and ah, dh ; jmp qword ptr [rax]
0x00000000007401db : add al, dl ; and ebp, esp ; call rax
0x00000000006784ea : add al, dl ; call 0xffffffffc369657a
0x0000000000745223 : add al, dl ; cmp al, 0xef ; jmp qword ptr [rax]
0x000000000073db1b : add al, dl ; cmp ecx, esp ; jmp qword ptr [rax]
0x00000000007451db : add al, dl ; cmp edi, ebp ; dec eax ; ret
0x0000000000746543 : add al, dl ; cmp esi, ebx ; call rax
0x000000000075d87f : add al, dl ; fcom st(0), st(1) ; jmp rdi
0x000000000078a6ef : add al, dl ; fsub st(0) ; jmp qword ptr [rax]
0x000000000073c053 : add al, dl ; in eax, -0x22 ; call rax
0x00000000007ac4a7 : add al, dl ; in eax, dx ; call qword ptr [rbx]
0x000000000073cfd3 : add al, dl ; jp 0x73cfbb ; call rax
0x00000000007412d3 : add al, dl ; loopne 0x7412c1 ; jmp qword ptr [rax]
0x000000000073f2eb : add al, dl ; mov ah, bl ; call qword ptr [rax]
0x00000000007b6f9f : add al, dl ; mov al, 0xef ; call qword ptr [rcx]
0x000000000073eaf3 : add al, dl ; mov bl, 0xe2 ; jmp rax
0x000000000073c78b : add al, dl ; mov bl, bh ; call qword ptr [rax]
0x000000000073b1e3 : add al, dl ; mov ebp, ebx ; jmp qword ptr [rax]
0x00000000007441eb : add al, dl ; mov ebp, gs ; jmp qword ptr [rax]
0x000000000073c14b : add al, dl ; neg dh ; jmp rax
0x0000000000746cb3 : add al, dl ; or dh, ah ; jmp qword ptr [rax]
0x00000000007b434f : add al, dl ; out dx, eax ; jmp qword ptr [rdi]
0x00000000007b4d3f : add al, dl ; pop rax ; out dx, eax ; call rax
0x0000000000747c7b : add al, dl ; push rbp ; cmc ; jmp qword ptr [rax]
0x0000000000747c33 : add al, dl ; push rcx ; cmc ; call qword ptr [rax]
0x0000000000745303 : add al, dl ; push rdx ; out dx, eax ; inc eax ; retf 6
0x0000000000745d5b : add al, dl ; push rsp ; jmp rax
0x000000000074af9b : add al, dl ; pushfq ; stc ; call qword ptr [rax]
0x000000000040259f : add al, dl ; ret
0x00000000006fdd3f : add al, dl ; ret 0x54
0x000000000040229f : add al, dl ; ret 0x9f
0x00000000007aa0ff : add al, dl ; ret 0xffec
0x00000000007badaf : add al, dl ; ret 0xfff0
0x000000000074a163 : add al, dl ; ret 0xfff8
0x000000000070666f : add al, dl ; retf
0x00000000007482e3 : add al, dl ; retf -0xb
0x0000000000748df3 : add al, dl ; sbb edi, esi ; call rax
0x0000000000749f0b : add al, dl ; stosb byte ptr [rdi], al ; clc ; jmp rax
0x000000000074a70b : add al, dl ; sub al, 0xf9 ; jmp qword ptr [rax]
0x00000000007a837f : add al, dl ; sub ch, ah ; call qword ptr [rdx]
0x00000000007e7b52 : add al, dl ; syscall
0x0000000000735d33 : add al, dl ; test al, 0xd0 ; call qword ptr [rax]
0x000000000073b1a3 : add al, dl ; test ch, bl ; jmp rax
0x00000000007469c3 : add al, dl ; test ebx, esi ; call rax
0x00000000007b65ff : add al, dl ; xchg bh, ch ; call qword ptr [rdi]
0x0000000000740343 : add al, dl ; xor ah, ch ; jmp qword ptr [rax]
0x000000000079ec37 : add al, dl ; xor al, 0xe8 ; call qword ptr [rax]
0x00000000005b4206 : add al, r13b ; and eax, 0x89000cd3 ; ret
0x00000000005b986c : add al, r13b ; mov edi, 0x89000c7c ; ret
0x00000000005b546c : add al, r13b ; mov edi, 0x89000cc0 ; ret
0x0000000000514d69 : add al, r13b ; ret 0x16c7
0x00000000005bb561 : add al, r13b ; retf 0xc5f
0x00000000005bb461 : add al, r13b ; retf 0xc60
0x0000000000515296 : add al, r13b ; xchg eax, ebp ; ret 0x16
0x0000000000514995 : add al, r13b ; xchg eax, esi ; retf
0x000000000062a03b : add ax, 0x6600 ; nop ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000740cc1 : add ax, 0x8000 ; xor al, 0xe6 ; call rax
0x000000000073596c : add ax, dx ; call rax
0x000000000079acf4 : add ax, word ptr [rax] ; add byte ptr [rsp], al ; retf
0x0000000000781dbd : add ax, word ptr [rax] ; rcl cl, 0xde ; jmp rcx
0x00000000005a1fc9 : add bh, ah ; jo 0x5a1fd4 ; mov rdi, rbp ; call rcx
0x00000000005a2185 : add bh, ah ; jo 0x5a2190 ; mov rdi, r12 ; call rax
0x000000000053ca86 : add bh, al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006a8fbf : add bh, al ; add dword ptr [rdx + r10*2 + 0x55], r10d ; ret
0x00000000006c6e3c : add bh, al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000006c6c98 : add bh, al ; pop r12 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000050fabe : add bh, al ; ret
0x00000000006bd4d5 : add bh, al ; ret 4
0x00000000006c8def : add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x00000000005ba284 : add bh, al ; test dword ptr [rsp + rbp*8 - 1], ebx ; call qword ptr [rax]
0x00000000005b4a62 : add bh, bh ; adc eax, 0x44de77 ; call 0x68153b
0x00000000005b4a47 : add bh, bh ; adc eax, 0x44de92 ; call 0x68153b
0x0000000000564a54 : add bh, bh ; adc eax, 0x49de85 ; call 0x68153b
0x0000000000564a38 : add bh, bh ; adc eax, 0x49dea1 ; call 0x68153b
0x0000000000534b26 : add bh, bh ; adc eax, 0x4cddb3 ; call 0x68153b
0x000000000051531b : add bh, bh ; adc eax, 0x4ed5be ; call 0x68153b
0x00000000005152ff : add bh, bh ; adc eax, 0x4ed5da ; call 0x68153b
0x00000000005152ad : add bh, bh ; adc eax, 0x4ed62c ; call 0x68153b
0x0000000000515291 : add bh, bh ; adc eax, 0x4ed648 ; call 0x68153b
0x00000000007c8842 : add bh, bh ; add dword ptr [rbx], esi ; add byte ptr [rax], al ; ret 0x502
0x00000000007dda6f : add bh, bh ; add eax, dword ptr [rbx] ; call qword ptr [rdi]
0x00000000007e320b : add bh, bh ; add ebp, esp ; add al, 1 ; retf 0x203
0x00000000007c13b3 : add bh, bh ; add ebx, esp ; add dword ptr [rcx], eax ; ret
0x00000000007f030b : add bh, bh ; add edx, esp ; add dword ptr [rcx], eax ; ret 0x2c01
0x00000000007fb9df : add bh, bh ; add esi, eax ; add eax, dword ptr [rcx] ; retf
0x00000000007ed287 : add bh, bh ; add esp, eax ; add dword ptr [rcx], eax ; ret 0x1601
0x00000000007d57a7 : add bh, bh ; add esp, eax ; add dword ptr [rcx], eax ; retf 0x901
0x00000000006064a0 : add bh, bh ; add rsp, 8 ; ret
0x00000000006a191f : add bh, bh ; cmp rax, rsi ; jne 0x6a1917 ; ret
0x00000000006a1a1f : add bh, bh ; cmp rax, rsi ; jne 0x6a1a17 ; ret
0x00000000006a1a5f : add bh, bh ; cmp rax, rsi ; jne 0x6a1a57 ; ret
0x000000000053ed7c : add bh, bh ; dec dword ptr [rax + 0x21] ; clc ; or rax, rdx ; ret
0x00000000005eb837 : add bh, bh ; dec ecx ; ret
0x00000000007d4ddb : add bh, bh ; inc dword ptr [rcx] ; xor eax, dword ptr [rcx] ; ret 2
0x0000000000496fc4 : add bh, bh ; loopne 0x497029 ; ret
0x00000000005f96cc : add bh, bh ; loopne 0x5f9692 ; retf
0x000000000063b39a : add bh, bh ; loopne 0x63b360 ; ret
0x000000000048d5f5 : add bh, bh ; ror byte ptr [rax - 0x73], 1 ; adc byte ptr [r8 - 0x77], cl ; ret 0x894c
0x000000000049638a : add bh, bh ; ror byte ptr [rax - 0x73], 1 ; or byte ptr [r8 - 0x77], cl ; ret 0x894c
0x00000000004830e3 : add bh, bh ; ror byte ptr [rax - 0x73], 1 ; or byte ptr [r8 - 0x77], cl ; ret 0x8d48
0x00000000004fa30a : add bh, bh ; ror byte ptr [rax - 0x77], 1 ; ret
0x000000000040e4f6 : add bh, bh ; ror cl, 1 ; ret
0x00000000007e76ed : add bh, bh ; xor eax, 0x36af05 ; retf
0x00000000007eba9a : add bh, bl ; sbb byte ptr [rsi], al ; ret
0x00000000004f6a4b : add bh, byte ptr [rcx] ; ret
0x0000000000510dec : add bh, byte ptr [rcx] ; retf
0x00000000005ca1eb : add bh, byte ptr [rcx] ; retf -0x71f1
0x00000000005f86ee : add bh, byte ptr [rcx] ; retf -0x73f1
0x0000000000607eec : add bh, byte ptr [rcx] ; retf -0x7884
0x00000000007abac8 : add bh, byte ptr [rdx] ; in eax, dx ; jmp qword ptr [rdi]
0x00000000007cd7ec : add bh, ch ; syscall
0x00000000007ea3c9 : add bh, cl ; add dword ptr [rdx], ebx ; xchg eax, ecx ; sbb dword ptr [rax], eax ; ret
0x000000000074a5bd : add bh, cl ; call qword ptr [rax]
0x000000000074a234 : add bh, cl ; clc ; call rax
0x000000000074a5ad : add bh, cl ; jmp rax
0x00000000007f4067 : add bh, cl ; retf
0x00000000007dc572 : add bh, cl ; sldt word ptr [rax] ; add dh, dl ; syscall
0x00000000007e6856 : add bh, cl ; syscall
0x000000000053ed66 : add bh, dh ; shl byte ptr [rcx], cl ; ret 0xb70f
0x00000000007e8462 : add bh, dh ; syscall
0x000000000043db72 : add bh, dh ; test byte ptr [rcx - 0x6f37762f], 0xc9 ; ret
0x00000000007f5d46 : add bh, dl ; add al, 5 ; int1 ; sbb al, byte ptr [rax] ; ret
0x000000000074a2ec : add bh, dl ; clc ; jmp rax
0x000000000074b535 : add bh, dl ; jmp qword ptr [rax]
0x000000000062b1c7 : add bh, dl ; jno 0x62b1d3 ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000007eb986 : add bh, dl ; syscall
0x000000000074825c : add bl, 0xf5 ; dec dword ptr [rax - 0x6ffff83a] ; ret
0x000000000073ed6d : add bl, ah ; call qword ptr [rax]
0x00000000007e685c : add bl, ah ; syscall
0x00000000007351d0 : add bl, al ; add dword ptr [rax], eax ; jo 0x7351ea ; iretd ; jmp qword ptr [rax]
0x0000000000575b1c : add bl, al ; call 0x571dd4
0x000000000073f4f4 : add bl, al ; jrcxz 0x73f500 ; clc ; jmp 0xffffffffc393f50b
0x00000000006a471b : add bl, al ; leave ; sar edi, 1 ; jne 0x6a4719 ; fstp st(1) ; ret
0x000000000054299e : add bl, al ; mov eax, edi ; xor eax, 1 ; ret
0x000000000055b177 : add bl, al ; mov rdi, rbx ; call 0x557437
0x000000000057015b : add bl, al ; mov rdx, r12 ; jne 0x5701af ; call rdx
0x0000000000571bf7 : add bl, al ; mov rdx, r12 ; jne 0x571c47 ; call rdx
0x000000000068e13c : add bl, al ; nop ; mov eax, 1 ; ret
0x000000000053ddcd : add bl, al ; nop ; ret
0x00000000005f866c : add bl, al ; nop ; xor eax, eax ; ret
0x00000000006c692b : add bl, al ; nop dword ptr [rax] ; mov dword ptr [rdi], esi ; ret
0x00000000006819fb : add bl, al ; nop dword ptr [rax] ; ret
0x000000000058189a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000007d05ab : add bl, al ; or byte ptr [rdi], al ; add byte ptr [rax], al ; retf 0x1d08
0x00000000007d0d5e : add bl, al ; syscall
0x00000000006a857e : add bl, al ; xor eax, eax ; ret
0x00000000007f55fd : add bl, bh ; or eax, 0xd6000034 ; syscall
0x00000000007f560e : add bl, bh ; syscall
0x0000000000738c20 : add bl, bl ; add al, byte ptr [rax] ; pop rsp ; fcomp st(0), st(6) ; jmp qword ptr [rax]
0x00000000007e84cd : add bl, bl ; and al, 0x89 ; add cl, ah ; xor eax, dword ptr [rdi] ; retf
0x000000000073a305 : add bl, bl ; call qword ptr [rax]
0x0000000000771d49 : add bl, bl ; call qword ptr [rbx]
0x00000000007294f8 : add bl, bl ; push 0 ; add byte ptr [rax], dl ; ret
0x00000000007ee675 : add bl, bl ; sldt word ptr [rax] ; add ah, bh ; syscall
0x00000000007cb532 : add bl, bl ; syscall
0x000000000057a640 : add bl, bpl ; loope 0x57a633 ; retf -9
0x00000000004825e7 : add bl, byte ptr [rax] ; call rax
0x000000000043269e : add bl, byte ptr [rbp] ; call rax
0x00000000007aa158 : add bl, byte ptr [rbx + 0xa] ; ret
0x00000000007b3d65 : add bl, byte ptr [rcx + 0xa] ; ret
0x00000000007e8903 : add bl, byte ptr [rcx + rax - 0x3ffff92c] ; add eax, dword ptr [rdx] ; ret 6
0x0000000000544445 : add bl, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007f833b : add bl, byte ptr [rcx] ; int1 ; add al, byte ptr [rax] ; retf 0x2702
0x00000000007f4fd7 : add bl, byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x0000000000772b1d : add bl, byte ptr [rdx + 0xa] ; ret
0x000000000051e2ce : add bl, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041c8ca : add bl, byte ptr [rip - 0x76b7ffd6] ; ret 0x8948
0x0000000000767350 : add bl, byte ptr [rsi - 0x2a] ; call rsp
0x000000000068232d : add bl, ch ; add al, 0xd9 ; retf
0x00000000007db9a8 : add bl, ch ; add al, byte ptr [rbx] ; ret
0x0000000000451d3f : add bl, ch ; add eax, 0x1b8 ; add cl, cl ; ret
0x00000000004139a6 : add bl, ch ; add eax, 0xb8 ; add cl, cl ; ret
0x0000000000408db0 : add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000488cf1 : add bl, ch ; add ecx, dword ptr [rbx - 0x366f03bb] ; ret
0x00000000004e13f9 : add bl, ch ; cmp eax, 0x10bf ; add al, ch ; retf 0x1dd1
0x000000000057e735 : add bl, ch ; fimul dword ptr [rax - 0x77] ; ret
0x00000000005c1244 : add bl, ch ; fimul word ptr [rax - 0x77] ; ret
0x00000000006077b3 : add bl, ch ; fisttp dword ptr [rax - 0x77] ; ret
0x00000000004064f3 : add bl, ch ; fisttp dword ptr [rax - 1] ; retf -0x76b8
0x000000000064f67d : add bl, ch ; fisttp qword ptr [rax - 0x77] ; ret
0x000000000063e7a6 : add bl, ch ; fisttp word ptr [rax - 0x77] ; ret
0x0000000000464533 : add bl, ch ; fmul dword ptr [rax - 0x77] ; ret
0x0000000000602686 : add bl, ch ; fmul qword ptr [rax - 0x77] ; ret
0x000000000057a641 : add bl, ch ; loope 0x57a632 ; retf -9
0x00000000005734ca : add bl, ch ; mov byte ptr [rax - 0x77], cl ; ret
0x00000000006ad46c : add bl, ch ; mov cl, 0x90 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000526441 : add bl, ch ; mov cl, byte ptr [rax - 0x77] ; ret
0x000000000060448e : add bl, ch ; mov dl, 0xe9 ; ret
0x00000000004f8808 : add bl, ch ; mov dword ptr [rax - 0x77], ecx ; ret
0x0000000000679784 : add bl, ch ; mov ecx, 0x89489aeb ; ret
0x0000000000554744 : add bl, ch ; mov ecx, 0x8948b7eb ; ret
0x0000000000509a3f : add bl, ch ; mov ecx, dword ptr [rax - 0x77] ; ret
0x0000000000559637 : add bl, ch ; mov edx, 0x8948b8eb ; ret
0x0000000000408569 : add bl, ch ; mov word ptr [rax - 0x77], cs ; ret
0x000000000040ce5b : add bl, ch ; ret
0x0000000000604053 : add bl, ch ; ret 0x2e66
0x000000000063cc11 : add bl, ch ; ret 0x4be
0x000000000055edad : add bl, ch ; ret 0x8348
0x00000000004082b8 : add bl, ch ; ret 0x8948
0x0000000000671a5b : add bl, ch ; ret 0x8949
0x000000000047a053 : add bl, ch ; ret 0x894d
0x00000000005ae7bc : add bl, ch ; ret 0xc0eb
0x00000000006581c4 : add bl, ch ; ret 0xd0e9
0x00000000006340fc : add bl, ch ; ret 0xece8
0x000000000043d885 : add bl, ch ; retf
0x0000000000507a76 : add bl, ch ; retf -0x3715
0x00000000005c6a1b : add bl, ch ; retf -0x5215
0x000000000061e996 : add bl, ch ; retf -0x74b4
0x000000000053c14d : add bl, ch ; retf -0x74b8
0x000000000047cbf4 : add bl, ch ; retf -0x76b3
0x000000000040ce6a : add bl, ch ; retf -0x76b4
0x000000000050882f : add bl, ch ; retf -0x76b8
0x00000000004f98c0 : add bl, ch ; retf -0x7cb8
0x000000000050a9fa : add bl, ch ; retf -0xb15
0x000000000052f37d : add bl, ch ; retf 0x1be
0x000000000050aebe : add bl, ch ; retf 0x41f0
0x0000000000531976 : add bl, ch ; retf 0x6690
0x000000000053a671 : add bl, ch ; ror byte ptr [rax - 0x77], 1 ; ret
0x00000000005ae4b1 : add bl, ch ; ror byte ptr [rax - 0x7d], 0xfa ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000064e43f : add bl, ch ; ror dword ptr [rax - 0x77], cl ; ret
0x0000000000737c84 : add bl, ch ; sar edi, cl ; test al, 0x8e ; add al, byte ptr [rax] ; ret 0xd3eb
0x00000000007d0d6a : add bl, ch ; syscall
0x0000000000509a02 : add bl, ch ; test al, 0x48 ; mov ebx, eax ; jmp 0x5099d4
0x0000000000523f13 : add bl, ch ; test al, 0x48 ; mov ebx, eax ; jmp 0x523ee5
0x00000000005693d3 : add bl, ch ; test al, 0x48 ; mov ebx, eax ; jmp 0x5693a5
0x0000000000628a62 : add bl, ch ; test al, 0x48 ; mov ebx, eax ; jmp 0x628a34
0x0000000000550783 : add bl, ch ; test byte ptr [rax - 0x77], cl ; ret
0x00000000005596bb : add bl, ch ; test byte ptr [rsi - 0x70], ah ; ret
0x000000000051f8ce : add bl, ch ; test dword ptr [rax - 0x77], ecx ; ret
0x00000000005479a4 : add bl, ch ; xchg byte ptr [rax - 0x77], cl ; ret
0x0000000000403fd9 : add bl, ch ; xchg dword ptr [rax - 0x77], ecx ; ret
0x00000000007e5c11 : add bl, cl ; add al, 5 ; ret
0x00000000007f3f2d : add bl, cl ; ret 0x501
0x000000000068453f : add bl, cl ; retf -0x2eb8
0x00000000007d9540 : add bl, cl ; syscall
0x0000000000739128 : add bl, dh ; add al, byte ptr [rax] ; out dx, al ; retf -0x29
0x00000000007d5b94 : add bl, dh ; add ch, byte ptr [rbx] ; ret 3
0x000000000073b70d : add bl, dh ; call qword ptr [rax]
0x0000000000721f62 : add bl, dh ; jg 0x721eed ; ret 0x26f2
0x00000000006a476f : add bl, dh ; mulps xmm0, xmm0 ; mulss xmm0, xmm0 ; ret
0x00000000006cd8af : add bl, dh ; ret
0x0000000000593c10 : add bl, r13b ; mov dword ptr [rax - 0x77], ecx ; ret
0x000000000053a670 : add bl, r13b ; ror byte ptr [rax - 0x77], 1 ; ret
0x00000000006ce31e : add bl, sil ; ret
0x0000000000547bdb : add byte ptr [r10], al ; add byte ptr [rax], al ; add al, ch ; retf 0x176c
0x0000000000520683 : add byte ptr [r10], bl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000069f62c : add byte ptr [r13 - 0x10], sil ; mov eax, 1 ; ret
0x000000000041b2c5 : add byte ptr [r15 + 0xa02ec0], dil ; call 0x6a7db9
0x00000000005ae9f2 : add byte ptr [r8 - 0x73], r9b ; push rbx ; dec dword ptr [rax + 0x39] ; ret
0x000000000054d5d7 : add byte ptr [r8 - 0x75], cl ; cmp ebp, eax ; jmp qword ptr [rbx]
0x00000000005663db : add byte ptr [r8 - 0x77], cl ; fucompi st(0) ; retf
0x0000000000549f8d : add byte ptr [r8 - 0x77], cl ; ret
0x000000000040e1b7 : add byte ptr [r8 - 0x77], cl ; ret 0xbe
0x00000000005a8a73 : add byte ptr [r8 - 0x77], r9b ; fucompi st(0) ; ret
0x00000000005a2c6c : add byte ptr [r8 - 0x77], r9b ; fucompi st(0) ; retf 0x131a
0x000000000052ee6c : add byte ptr [r8 - 0x77], r9b ; fucompi st(0) ; retf 0x1a58
0x0000000000504f6c : add byte ptr [r8 - 0x77], r9b ; fucompi st(0) ; retf 0x1cf7
0x0000000000503a6c : add byte ptr [r8 - 0x77], r9b ; fucompi st(0) ; retf 0x1d0c
0x000000000050a67a : add byte ptr [r8 - 0x77], r9b ; or r8b, r13b ; retf
0x000000000065de63 : add byte ptr [r8 - 0x77], r9b ; ret
0x0000000000441c01 : add byte ptr [r8 - 0x77], r9b ; ret 0xbe
0x0000000000678913 : add byte ptr [r8 - 0x77], r9b ; ret 0xc7
0x000000000069fef5 : add byte ptr [r8 - 0x77], r9b ; ret 0xc748
0x0000000000541f0b : add byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; ret 5
0x0000000000545131 : add byte ptr [r8 - 0x7d], cl ; ret
0x00000000005075f7 : add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000512eac : add byte ptr [r8 - 0x7f], r9b ; ret
0x000000000074f925 : add byte ptr [r8], al ; add al, byte ptr [rax - 0x33] ; call rcx
0x00000000006d94a2 : add byte ptr [r8], al ; add byte ptr [rax], al ; add ah, bh ; ret
0x00000000006d79ea : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x00000000005bfc84 : add byte ptr [r8], al ; jne 0x5bfc95 ; ret
0x0000000000462917 : add byte ptr [r8], al ; leave ; ret
0x00000000007d46b7 : add byte ptr [r8], al ; ret
0x00000000007d4ebb : add byte ptr [r8], al ; retf 0x503
0x0000000000547f2f : add byte ptr [r8], al ; setne al ; ret
0x000000000054d236 : add byte ptr [r8], cl ; add byte ptr [rax], al ; add al, ch ; jmp qword ptr [rdi]
0x00000000006fc4c9 : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x6f
0x00000000006ed3aa : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rdx], cl ; ret
0x00000000006b24be : add byte ptr [r8], r8b ; add byte ptr [rax], al ; ret
0x00000000007eb28b : add byte ptr [r8], r8b ; ret
0x000000000074fe35 : add byte ptr [r8], r8b ; retf -0x32b6
0x0000000000582336 : add byte ptr [r8], r9b ; add byte ptr [rax], al ; add al, ch ; call rsi
0x00000000005a1936 : add byte ptr [r8], r9b ; add byte ptr [rax], al ; add al, ch ; jmp rax
0x00000000005477c5 : add byte ptr [r9 + 0x415d5be8], cl ; pop rsp ; ret
0x00000000005709a2 : add byte ptr [r9 + 0x63], cl ; fisttp qword ptr [rax - 0x7d] ; ret
0x0000000000507c5b : add byte ptr [r9 + r9*4 - 1], r9b ; call 0x6d4747
0x000000000058c27a : add byte ptr [r9 - 0x75], r8b ; adc byte ptr [r9], r15b ; retf
0x0000000000693d22 : add byte ptr [r9 - 0x75], r8b ; push rbp ; add al, 0x31 ; idiv byte ptr [rcx] ; retf 0x57c
0x00000000006b1239 : add byte ptr [r9 - 0x77], r9b ; out 0x39, al ; ret
0x0000000000723e10 : add byte ptr [r9], cl ; add byte ptr [rbx + 1], cl ; or dword ptr [rax], eax ; retf
0x00000000005ae19a : add byte ptr [r9], r14b ; ror byte ptr [rax - 0x77], 0x15 ; ret
0x00000000005a1476 : add byte ptr [r9], r15b ; ret
0x000000000068b23e : add byte ptr [r9], r15b ; ret 0x447d
0x00000000006b12f8 : add byte ptr [r9], r15b ; ret 0x5a7c
0x0000000000650cea : add byte ptr [r9], r15b ; retf
0x0000000000525e7c : add byte ptr [r9], r8b ; call qword ptr [rip + 0x4dca5b]
0x000000000051814f : add byte ptr [rax + 0x100], bh ; ret
0x00000000005053af : add byte ptr [rax + 0x10200], bh ; ret
0x00000000005053ae : add byte ptr [rax + 0x10200], dil ; ret
0x00000000005adfee : add byte ptr [rax + 0x10478b48], dl ; ret
0x00000000004da3de : add byte ptr [rax + 0x1058b48], dl ; test dword ptr [rdx], edx ; call rax
0x00000000006a7d9e : add byte ptr [rax + 0x10778948], dl ; ret
0x00000000006a8b1f : add byte ptr [rax + 0x10], bh ; ret
0x000000000073bb03 : add byte ptr [rax + 0x10ffde56], dh ; ret
0x00000000007e4bb2 : add byte ptr [rax + 0x11], ah ; retf
0x000000000074b61b : add byte ptr [rax + 0x11], dl ; cli ; call rax
0x00000000007b09ff : add byte ptr [rax + 0x13], dl ; out dx, al ; call qword ptr [rdx]
0x00000000005e5ecb : add byte ptr [rax + 0x14058b48], dl ; retf 0x41
0x0000000000506bcf : add byte ptr [rax + 0x140], bh ; ret
0x000000000053ee2e : add byte ptr [rax + 0x140], dil ; ret
0x0000000000506c3f : add byte ptr [rax + 0x180], bh ; ret
0x00000000006a7d8e : add byte ptr [rax + 0x18478d48], dl ; ret
0x0000000000523b9e : add byte ptr [rax + 0x1847b60f], dl ; ret
0x00000000007ea458 : add byte ptr [rax + 0x18a2340f], ah ; add dh, dh ; syscall
0x000000000073ee9b : add byte ptr [rax + 0x18ffe335], dl ; retf
0x00000000007451b3 : add byte ptr [rax + 0x18ffef37], dh ; ret
0x0000000000758ab7 : add byte ptr [rax + 0x19], dh ; sar bh, 1 ; ret
0x00000000007444a3 : add byte ptr [rax + 0x19], dl ; out dx, al ; jmp qword ptr [rax]
0x000000000054a19f : add byte ptr [rax + 0x1b00], bh ; ret
0x00000000007990a7 : add byte ptr [rax + 0x1b], bl ; out 0xff, al ; ret 0
0x00000000007e5c74 : add byte ptr [rax + 0x1c01], ah ; retf 0xc01
0x000000000051813f : add byte ptr [rax + 0x1c0], bh ; ret
0x00000000006b2267 : add byte ptr [rax + 0x200000], bh ; ret
0x0000000000504dff : add byte ptr [rax + 0x200], bh ; ret
0x0000000000504dfe : add byte ptr [rax + 0x200], dil ; ret
0x00000000006ac13e : add byte ptr [rax + 0x20478b48], dl ; ret
0x00000000007420fb : add byte ptr [rax + 0x20ffe822], al ; retf 5
0x0000000000742133 : add byte ptr [rax + 0x20ffe825], dl ; retf
0x000000000074502b : add byte ptr [rax + 0x21], al ; out dx, eax ; jmp qword ptr [rax]
0x00000000007f675b : add byte ptr [rax + 0x228f070f], bh ; add cl, bl ; syscall
0x00000000007479d3 : add byte ptr [rax + 0x24], dh ; cmc ; call rax
0x00000000007b38ef : add byte ptr [rax + 0x25], dh ; out dx, eax ; call qword ptr [rcx]
0x000000000074b673 : add byte ptr [rax + 0x25], dl ; cli ; call rax
0x00000000006c8a84 : add byte ptr [rax + 0x26], bh ; cmovne eax, edx ; ret
0x0000000000754687 : add byte ptr [rax + 0x26], bh ; iretd ; call rsp
0x000000000074b683 : add byte ptr [rax + 0x26], dh ; cli ; call qword ptr [rax]
0x0000000000746db3 : add byte ptr [rax + 0x27], dh ; hlt ; call rax
0x00000000006bfd3f : add byte ptr [rax + 0x280], bh ; ret
0x00000000006a7d4e : add byte ptr [rax + 0x28478b48], dl ; ret
0x00000000005b840f : add byte ptr [rax + 0x28c0], bh ; ret
0x00000000004400b3 : add byte ptr [rax + 0x28c48348], dl ; pop rbx ; pop rbp ; ret
0x000000000073bacb : add byte ptr [rax + 0x28ffde55], al ; ret 3
0x000000000074b6bb : add byte ptr [rax + 0x29], al ; cli ; call qword ptr [rax]
0x00000000007bdd67 : add byte ptr [rax + 0x29], bl ; int1 ; jmp qword ptr [rbx]
0x0000000000562030 : add byte ptr [rax + 0x29], cl ; fimul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000607049 : add byte ptr [rax + 0x29], cl ; fmul dword ptr [rax + 1] ; ret 0x2948
0x00000000004152fc : add byte ptr [rax + 0x29], cl ; ret
0x00000000006868b3 : add byte ptr [rax + 0x29], cl ; ret 0x6348
0x000000000065cd47 : add byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000488695 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000488677 : add byte ptr [rax + 0x29], cl ; ret 0x8949
0x00000000006b60dc : add byte ptr [rax + 0x29], cl ; ret 0x8b48
0x00000000006b36cf : add byte ptr [rax + 0x29], cl ; ret 0x8b49
0x000000000051a681 : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00000000006b5d20 : add byte ptr [rax + 0x29], cl ; ret 0xf48
0x000000000051a839 : add byte ptr [rax + 0x29], cl ; retf
0x00000000006d1195 : add byte ptr [rax + 0x29], cl ; retf -0x48f1
0x000000000060ec4a : add byte ptr [rax + 0x29], cl ; retf -0x76b8
0x0000000000582a3f : add byte ptr [rax + 0x29], cl ; retf -0x7cb8
0x000000000055ba10 : add byte ptr [rax + 0x29], cl ; retf -0x7eb8
0x0000000000662118 : add byte ptr [rax + 0x29], cl ; retf -0x9cf
0x00000000006d1200 : add byte ptr [rax + 0x29], cl ; retf 0xf41
0x00000000006368ce : add byte ptr [rax + 0x29], cl ; ror dword ptr [rax - 0x39], 4 ; retf 0
0x000000000055616c : add byte ptr [rax + 0x29], cl ; ror dword ptr [rax - 0x75], 0x1c ; retf
0x00000000006b2af4 : add byte ptr [rax + 0x2a0ff300], al ; ret 0x9ba
0x00000000007b3cb7 : add byte ptr [rax + 0x2b], cl ; out dx, eax ; call qword ptr [rbx]
0x00000000006a5e7f : add byte ptr [rax + 0x2c0], bh ; ret
0x000000000074a753 : add byte ptr [rax + 0x2d], dh ; stc ; call qword ptr [rax]
0x000000000074a743 : add byte ptr [rax + 0x2d], dl ; stc ; jmp rax
0x000000000074514b : add byte ptr [rax + 0x2e], al ; out dx, eax ; jmp qword ptr [rax]
0x00000000007be19f : add byte ptr [rax + 0x2f], ah ; int1 ; jmp qword ptr [rbx]
0x00000000006a7d5e : add byte ptr [rax + 0x3047b60f], dl ; ret
0x00000000007db44e : add byte ptr [rax + 0x30], bl ; retf
0x000000000073eea3 : add byte ptr [rax + 0x30ffe335], dh ; retf
0x0000000000741fc3 : add byte ptr [rax + 0x30ffe7e4], ah ; ret
0x00000000006cc4ff : add byte ptr [rax + 0x31], bh ; ret
0x0000000000745173 : add byte ptr [rax + 0x33], al ; out dx, eax ; lcall ptr [rax] ; ret 6
0x000000000074517b : add byte ptr [rax + 0x33], dl ; out dx, eax ; push qword ptr [rax] ; ret 6
0x000000000074a823 : add byte ptr [rax + 0x33], dl ; stc ; call rax
0x000000000050d96f : add byte ptr [rax + 0x340], bh ; ret
0x0000000000749d7b : add byte ptr [rax + 0x34], al ; clc ; jmp rax
0x0000000000504faf : add byte ptr [rax + 0x380], bh ; ret
0x0000000000504fae : add byte ptr [rax + 0x380], dil ; ret
0x0000000000745b83 : add byte ptr [rax + 0x38], dh ; int1 ; jmp qword ptr [rax]
0x00000000004418ce : add byte ptr [rax + 0x38c48348], dl ; pop rbx ; pop rbp ; ret
0x0000000000742103 : add byte ptr [rax + 0x38ffe822], dh ; retf 5
0x000000000066b5fb : add byte ptr [rax + 0x39], cl ; dec byte ptr [rdi] ; xchg eax, ebp ; ret
0x000000000048cf3c : add byte ptr [rax + 0x39], cl ; enter 0xf48, 0x47 ; ret 0x8348
0x000000000048cfbc : add byte ptr [rax + 0x39], cl ; enter 0xf48, 0x47 ; ret 0x8d48
0x000000000052b1cf : add byte ptr [rax + 0x39], cl ; jle 0x52b1fc ; setl al ; ret
0x000000000052b1ce : add byte ptr [rax + 0x39], cl ; jle 0x52b1fd ; setl al ; ret
0x0000000000505924 : add byte ptr [rax + 0x39], cl ; ret
0x0000000000541e51 : add byte ptr [rax + 0x39], cl ; ret 0x10bf
0x000000000067849f : add byte ptr [rax + 0x39], cl ; ret 0x1374
0x00000000004e2418 : add byte ptr [rax + 0x39], cl ; ret 0x1775
0x000000000069f5cf : add byte ptr [rax + 0x39], cl ; ret 0x1b74
0x000000000044626e : add byte ptr [rax + 0x39], cl ; ret 0x2075
0x000000000043ff7f : add byte ptr [rax + 0x39], cl ; ret 0x2475
0x00000000004bb22d : add byte ptr [rax + 0x39], cl ; ret 0x2675
0x00000000004944b7 : add byte ptr [rax + 0x39], cl ; ret 0x3875
0x0000000000522c4f : add byte ptr [rax + 0x39], cl ; ret 0x3b74
0x00000000004e05cf : add byte ptr [rax + 0x39], cl ; ret 0x3f75
0x000000000043fd98 : add byte ptr [rax + 0x39], cl ; ret 0x4675
0x000000000043fbcb : add byte ptr [rax + 0x39], cl ; ret 0x4975
0x00000000004402fd : add byte ptr [rax + 0x39], cl ; ret 0x5175
0x0000000000494c18 : add byte ptr [rax + 0x39], cl ; ret 0x5375
0x0000000000443bb8 : add byte ptr [rax + 0x39], cl ; ret 0x5875
0x000000000044aa81 : add byte ptr [rax + 0x39], cl ; ret 0x6775
0x000000000046427b : add byte ptr [rax + 0x39], cl ; ret 0x6875
0x000000000049e31f : add byte ptr [rax + 0x39], cl ; ret 0x7475
0x000000000065f5a5 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000045b6c7 : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000006bf6d7 : add byte ptr [rax + 0x39], cl ; ret 0x880f
0x0000000000504947 : add byte ptr [rax + 0x39], cl ; ret 0x8c0f
0x000000000053be0d : add byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x00000000004642e0 : add byte ptr [rax + 0x39], cl ; ret 0x940f
0x00000000006902ff : add byte ptr [rax + 0x39], cl ; ret 0x9974
0x000000000059fef7 : add byte ptr [rax + 0x39], cl ; ret 0xd475
0x000000000053b6fb : add byte ptr [rax + 0x39], cl ; ret 0xe7f
0x00000000005338e2 : add byte ptr [rax + 0x39], cl ; ret 0xe875
0x00000000006d0857 : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000505656 : add byte ptr [rax + 0x39], cl ; retf
0x00000000006c6a63 : add byte ptr [rax + 0x39], cl ; retf -0x388b
0x000000000066210f : add byte ptr [rax + 0x39], cl ; retf -0x71f1
0x00000000005b7f97 : add byte ptr [rax + 0x39], cl ; retf 0x5374
0x000000000060842d : add byte ptr [rax + 0x39], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x3948
0x00000000007451e3 : add byte ptr [rax + 0x3a], al ; out dx, eax ; push rax ; ret
0x00000000007abbcf : add byte ptr [rax + 0x3b], bh ; in eax, dx ; call qword ptr [rcx]
0x000000000052b1df : add byte ptr [rax + 0x3b], cl ; jle 0x52b20c ; setl al ; ret
0x0000000000746503 : add byte ptr [rax + 0x3b], dl ; call qword ptr [rax]
0x00000000006bd3ce : add byte ptr [rax + 0x3cf7478d], dl ; add al, 0xf ; xchg eax, esi ; ret 0x8040
0x00000000006a89ee : add byte ptr [rax + 0x3e048d48], dl ; ret
0x00000000005da4a1 : add byte ptr [rax + 0x3e058b48], dl ; test byte ptr [rdx], al ; call rax
0x00000000006b223d : add byte ptr [rax + 0x4000], bh ; cmovge eax, edi ; ret
0x00000000006b228f : add byte ptr [rax + 0x4000], bh ; ret
0x000000000068fe1f : add byte ptr [rax + 0x400], bh ; ret
0x000000000060c67a : add byte ptr [rax + 0x401f0f], dl ; mov rax, qword ptr [rdi] ; ret
0x000000000052194a : add byte ptr [rax + 0x401f0f], dl ; ret
0x000000000067fbea : add byte ptr [rax + 0x40478b48], dl ; ret
0x0000000000747b73 : add byte ptr [rax + 0x40], ah ; cmc ; call qword ptr [rax]
0x0000000000538bff : add byte ptr [rax + 0x40], bh ; ret
0x0000000000538bfe : add byte ptr [rax + 0x40], dil ; ret
0x0000000000746f0b : add byte ptr [rax + 0x42], al ; hlt ; call rax
0x0000000000747bab : add byte ptr [rax + 0x43], dl ; cmc ; jmp qword ptr [rax]
0x00000000007d8bf7 : add byte ptr [rax + 0x4406], al ; retf 0x506
0x0000000000745263 : add byte ptr [rax + 0x44], dl ; out dx, eax ; call qword ptr [rax]
0x0000000000744643 : add byte ptr [rax + 0x47], bh ; out dx, al ; jmp qword ptr [rax]
0x0000000000690495 : add byte ptr [rax + 0x47c67a47], cl ; jnp 0x6904a5 ; ret
0x0000000000685fb9 : add byte ptr [rax + 0x480d7501], ch ; mov edx, ebx ; call rax
0x0000000000513302 : add byte ptr [rax + 0x48287501], ch ; add esp, 8 ; jmp rax
0x0000000000746f43 : add byte ptr [rax + 0x48], al ; hlt ; jmp rax
0x000000000074a963 : add byte ptr [rax + 0x48], dh ; stc ; call rax
0x0000000000621845 : add byte ptr [rax + 0x48c48348], dl ; pop rbx ; pop rbp ; ret
0x00000000005502ae : add byte ptr [rax + 0x48f88948], dl ; mov edx, esi ; ret
0x000000000073ed1b : add byte ptr [rax + 0x48ffe2f7], ah ; ret 4
0x00000000006cde7e : add byte ptr [rax + 0x49058b48], dl ; xor r8, qword ptr [rax] ; ret
0x0000000000747c03 : add byte ptr [rax + 0x49], al ; cmc ; call rax
0x00000000007ac867 : add byte ptr [rax + 0x4b], dl ; in eax, dx ; call qword ptr [rax]
0x000000000074a9ab : add byte ptr [rax + 0x4c], dl ; stc ; jmp qword ptr [rax]
0x000000000074703b : add byte ptr [rax + 0x4d], ah ; hlt ; call qword ptr [rax]
0x0000000000745cc3 : add byte ptr [rax + 0x4d], dl ; call qword ptr [rax]
0x00000000007352c3 : add byte ptr [rax + 0x4e], al ; iretd ; call qword ptr [rax]
0x00000000007fa093 : add byte ptr [rax + 0x4f940551], dh ; ret
0x00000000007d4946 : add byte ptr [rax + 0x50f], dl ; popfq ; syscall
0x000000000073bad3 : add byte ptr [rax + 0x50ffde55], dh ; ret 3
0x000000000073ee63 : add byte ptr [rax + 0x50ffe31d], dl ; retf 4
0x0000000000799c77 : add byte ptr [rax + 0x51], bl ; out 0xff, al ; ret 0
0x000000000074530b : add byte ptr [rax + 0x53], ah ; out dx, eax ; inc dword ptr [rax] ; retf
0x00000000007470b3 : add byte ptr [rax + 0x53], al ; hlt ; call qword ptr [rax]
0x00000000006c672f : add byte ptr [rax + 0x540], bh ; ret
0x00000000007ace27 : add byte ptr [rax + 0x54], bh ; in eax, dx ; jmp rax
0x00000000007ace0f : add byte ptr [rax + 0x54], dh ; in eax, dx ; call qword ptr [rcx]
0x0000000000745d63 : add byte ptr [rax + 0x55], ah ; jmp qword ptr [rax]
0x00000000007466e3 : add byte ptr [rax + 0x55], dl ; call qword ptr [rax]
0x00000000004791d6 : add byte ptr [rax + 0x58c48348], dl ; pop rbx ; pop rbp ; ret
0x0000000000748373 : add byte ptr [rax + 0x58fff5d3], dl ; retf
0x00000000007b4f2f : add byte ptr [rax + 0x5a], dl ; out dx, eax ; call qword ptr [rdi]
0x0000000000491984 : add byte ptr [rax + 0x5b058b48], dl ; xorps xmm0, xmmword ptr [rax] ; call rax
0x00000000007b53bf : add byte ptr [rax + 0x5b], ah ; out dx, eax ; jmp qword ptr [rcx]
0x00000000007b538f : add byte ptr [rax + 0x5b], al ; out dx, eax ; jmp qword ptr [rcx]
0x00000000007b53d7 : add byte ptr [rax + 0x5b], bh ; out dx, eax ; jmp qword ptr [rcx]
0x00000000007b53a7 : add byte ptr [rax + 0x5b], bl ; out dx, eax ; jmp qword ptr [rax]
0x0000000000403da1 : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000005fcb3f : add byte ptr [rax + 0x5c0], bh ; ret
0x00000000006b2ef5 : add byte ptr [rax + 0x5c415d5b], al ; ret
0x0000000000746743 : add byte ptr [rax + 0x5c], ah ; call rax
0x0000000000455aab : add byte ptr [rax + 0x5d006dec], al ; ret
0x0000000000406682 : add byte ptr [rax + 0x5d15ffc3], cl ; ret 0x5f
0x00000000006a95aa : add byte ptr [rax + 0x5d5b101c], cl ; pop r12 ; ret
0x0000000000479c7f : add byte ptr [rax + 0x60058b48], dl ; mov word ptr [rax], ds ; call rax
0x000000000073eeb3 : add byte ptr [rax + 0x60ffe336], al ; retf
0x0000000000745353 : add byte ptr [rax + 0x61], dh ; out dx, eax ; jmp qword ptr [rax]
0x00000000005f3658 : add byte ptr [rax + 0x6348137c], al ; retf
0x000000000051f4f9 : add byte ptr [rax + 0x63], cl ; adc byte ptr [r9], r15b ; ret
0x00000000005a0f46 : add byte ptr [rax + 0x63], cl ; adc byte ptr [r9], r15b ; retf
0x0000000000524179 : add byte ptr [rax + 0x63], cl ; adc byte ptr [rax + 0x63], cl ; add al, 0x39 ; ret 0x217f
0x0000000000525b05 : add byte ptr [rax + 0x63], cl ; adc byte ptr [rax + 0x63], cl ; add al, 0x39 ; ret 0x5f7e
0x000000000050aaf4 : add byte ptr [rax + 0x63], cl ; adc byte ptr [rax + 0x63], cl ; add al, 0x39 ; ret 0x607e
0x000000000051997e : add byte ptr [rax + 0x63], cl ; adc byte ptr [rax + 0x63], cl ; add al, 0x39 ; ret 0x667e
0x000000000055e152 : add byte ptr [rax + 0x63], cl ; adc byte ptr [rax + 0x63], cl ; add al, 0x39 ; ret 0x8e0f
0x00000000006719f2 : add byte ptr [rax + 0x63], cl ; adc byte ptr [rax + 0x63], cl ; add al, 0x39 ; retf 0x717f
0x000000000052fce3 : add byte ptr [rax + 0x63], cl ; add eax, edi ; ret
0x000000000052fcee : add byte ptr [rax + 0x63], cl ; add ecx, dword ptr [rax - 0x73] ; ret
0x0000000000518801 : add byte ptr [rax + 0x63], cl ; dec byte ptr [rax + 0x63] ; ret
0x00000000006c7b6c : add byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 0x29] ; retf 0x148
0x0000000000559b3c : add byte ptr [rax + 0x63], cl ; fmul dword ptr [rax + 0x63] ; retf -0x40bf
0x0000000000559c0c : add byte ptr [rax + 0x63], cl ; fmul dword ptr [rax + 0x63] ; retf -0x41bf
0x0000000000599bcb : add byte ptr [rax + 0x63], cl ; fmul dword ptr [rax + 0x63] ; retf -0x7cb8
0x00000000006d2c47 : add byte ptr [rax + 0x63], cl ; or al, 0x88 ; add rax, rcx ; jmp rax
0x00000000006d3631 : add byte ptr [rax + 0x63], cl ; or al, 0x8a ; add rdx, rcx ; jmp rdx
0x000000000058bcc5 : add byte ptr [rax + 0x63], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a9b34 : add byte ptr [rax + 0x63], cl ; ret
0x000000000056eee7 : add byte ptr [rax + 0x63], cl ; ret 0x141
0x000000000054a4a9 : add byte ptr [rax + 0x63], cl ; ret 0x2948
0x00000000005c4fd5 : add byte ptr [rax + 0x63], cl ; ret 0x3145
0x00000000006af72b : add byte ptr [rax + 0x63], cl ; ret 0x44c6
0x0000000000664d1f : add byte ptr [rax + 0x63], cl ; ret 0x6348
0x000000000066df3d : add byte ptr [rax + 0x63], cl ; ret 0x6349
0x00000000006b2e47 : add byte ptr [rax + 0x63], cl ; ret 0x634c
0x000000000055b8e1 : add byte ptr [rax + 0x63], cl ; ret 0x634d
0x00000000006b2eaf : add byte ptr [rax + 0x63], cl ; ret 0x8d49
0x00000000006af742 : add byte ptr [rax + 0x63], cl ; ret 0xb60f
0x00000000006be38f : add byte ptr [rax + 0x63], cl ; ret 0xc283
0x000000000067b517 : add byte ptr [rax + 0x63], cl ; ret 0xf41
0x000000000057f626 : add byte ptr [rax + 0x63], cl ; retf
0x000000000055b9ef : add byte ptr [rax + 0x63], cl ; retf -0x76b8
0x000000000055c184 : add byte ptr [rax + 0x63], cl ; retf 0x13eb
0x00000000004f4ab7 : add byte ptr [rax + 0x63], cl ; retf 0x294c
0x00000000004fd0e1 : add byte ptr [rax + 0x63], cl ; retf 0x6348
0x0000000000686def : add byte ptr [rax + 0x63], cl ; rol dword ptr [rbx - 0x7cb7fe3a], cl ; ret 0x4801
0x0000000000565f6a : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 0x63], 1 ; ret
0x00000000005cad57 : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000067f76e : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x480f
0x00000000004cdf30 : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x485f
0x00000000004cee91 : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4c5f
0x000000000050d65f : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0xe901
0x00000000005664cb : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000063503b : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x480f
0x0000000000582def : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000061d469 : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4847
0x000000000058334f : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000004f5906 : add byte ptr [rax + 0x63], cl ; ror byte ptr [rcx + 0x63], 1 ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000579716 : add byte ptr [rax + 0x63], cl ; ror byte ptr [rcx + 0x63], 1 ; ret 0x8348
0x00000000006568db : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax + 0x29], cl ; ret 0x14c
0x000000000059526f : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000067cd9f : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], 1 ; ret 0xe901
0x000000000064bed1 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000005bf8ae : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x480f
0x0000000000601cf7 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000747dfb : add byte ptr [rax + 0x63], dl ; cmc ; call rax
0x0000000000745e1b : add byte ptr [rax + 0x63], dl ; jmp qword ptr [rax]
0x000000000051f4f8 : add byte ptr [rax + 0x63], r9b ; adc byte ptr [r9], r15b ; ret
0x00000000005a0f45 : add byte ptr [rax + 0x63], r9b ; adc byte ptr [r9], r15b ; retf
0x00000000007387f3 : add byte ptr [rax + 0x64], ah ; salc ; call rax
0x000000000074aa8b : add byte ptr [rax + 0x65], al ; stc ; call qword ptr [rax]
0x0000000000745e43 : add byte ptr [rax + 0x66], ah ; jmp rax
0x000000000076d9af : add byte ptr [rax + 0x67], bl ; leave ; call qword ptr [rdx]
0x000000000040f7f0 : add byte ptr [rax + 0x68c48348], dl ; pop rbx ; pop rbp ; ret
0x0000000000748343 : add byte ptr [rax + 0x68fff5cc], dh ; retf 7
0x000000000074ab03 : add byte ptr [rax + 0x6d], dh ; stc ; jmp rax
0x00000000006ce0d5 : add byte ptr [rax + 0x6e], bh ; jg 0x6ce0e9 ; ret
0x0000000000745e93 : add byte ptr [rax + 0x6e], dl ; jmp rax
0x000000000073873b : add byte ptr [rax + 0x70ffd634], dh ; ret
0x00000000006642bf : add byte ptr [rax + 0x721500], bh ; ret
0x00000000006642be : add byte ptr [rax + 0x721500], dil ; ret
0x000000000073bc63 : add byte ptr [rax + 0x72], ah ; fdivp st(7) ; retf
0x000000000074542b : add byte ptr [rax + 0x73], dh ; out dx, eax ; call rax
0x00000000006931ef : add byte ptr [rax + 0x7400397b], al ; retf 0x4383
0x000000000074ab5b : add byte ptr [rax + 0x78], ah ; stc ; jmp qword ptr [rax]
0x000000000073eebb : add byte ptr [rax + 0x78ffe336], ah ; retf
0x0000000000745193 : add byte ptr [rax + 0x78ffef33], al ; ret 6
0x000000000074aba3 : add byte ptr [rax + 0x7a], ah ; stc ; jmp qword ptr [rax]
0x00000000007d035b : add byte ptr [rax + 0x7b4200f], dh ; add al, bl ; syscall
0x000000000074b727 : add byte ptr [rax + 0x7b], bl ; retf
0x0000000000735403 : add byte ptr [rax + 0x7c], bh ; iretd ; jmp qword ptr [rax]
0x000000000074ac53 : add byte ptr [rax + 0x7f], al ; stc ; jmp rax
0x000000000053f09f : add byte ptr [rax + 0x7fffffff], bh ; ret
0x00000000005039ef : add byte ptr [rax + 0x80], bh ; ret
0x000000000050459e : add byte ptr [rax + 0x80], dil ; ret
0x00000000005047cf : add byte ptr [rax + 0x8280], bh ; ret
0x000000000052b20e : add byte ptr [rax + 0x8478b48], dl ; ret
0x00000000006747ce : add byte ptr [rax + 0x847b60f], dl ; ret
0x0000000000748133 : add byte ptr [rax + 0x8fff5b5], ah ; ret 7
0x00000000007e4b78 : add byte ptr [rax + 0x902], dl ; loope 0x7e4b8a ; ret 0xa301
0x000000000062cb2f : add byte ptr [rax + 0x9700], bh ; ret
0x00000000006925df : add byte ptr [rax + 0xa02440], bh ; ret
0x000000000069261f : add byte ptr [rax + 0xa02448], bh ; ret
0x00000000006925ff : add byte ptr [rax + 0xa02450], bh ; ret
0x00000000006bea4f : add byte ptr [rax + 0xa0ccc0], bh ; ret
0x00000000006bea1f : add byte ptr [rax + 0xa0cce8], bh ; ret
0x00000000006cd89f : add byte ptr [rax + 0xa0d344], bh ; ret
0x000000000065e24f : add byte ptr [rax + 0xa9], bh ; ret
0x00000000006914f6 : add byte ptr [rax + 0xa], bh ; pop rbx ; ret
0x00000000007f053a : add byte ptr [rax + 0xb02], ah ; ret
0x00000000007f4801 : add byte ptr [rax + 0xb], ch ; retf
0x00000000007bcf0f : add byte ptr [rax + 0xb], dh ; int1 ; jmp qword ptr [rdx]
0x0000000000506c4f : add byte ptr [rax + 0xc0], bh ; ret
0x0000000000562f2f : add byte ptr [rax + 0xcc0], bh ; ret
0x00000000007e3d9e : add byte ptr [rax + 0xd01], dh ; ret 0xe01
0x0000000000746cf3 : add byte ptr [rax + 0xd], al ; hlt ; jmp qword ptr [rax]
0x00000000007bd2f7 : add byte ptr [rax + 0xd], bl ; int1 ; call qword ptr [rax]
0x00000000007351d3 : add byte ptr [rax + 0xd], dh ; iretd ; jmp qword ptr [rax]
0x0000000000743ec3 : add byte ptr [rax + 0xe], ah ; in eax, dx ; call qword ptr [rax]
0x00000000007ad070 : add byte ptr [rax + 0xe], cl ; xor byte ptr [rdx], al ; retf 0xe0a
0x00000000007dfc42 : add byte ptr [rax + 0xece250f], bh ; add bh, ch ; syscall
0x00000000006674bc : add byte ptr [rax + 0xf96948], al ; retf 0x3b9a
0x00000000006881ef : add byte ptr [rax + 0xf], al ; mov dh, 0xf6 ; movzx eax, byte ptr [rdi + rsi] ; ret
0x00000000007b30ef : add byte ptr [rax + 0xf], al ; out dx, eax ; jmp qword ptr [rcx]
0x000000000060bae8 : add byte ptr [rax + 0xf], al ; xchg eax, esp ; vpminsw xmm12, xmm14, xmmword ptr [rcx] ; ret 0xd589
0x000000000040aa02 : add byte ptr [rax + 0xf], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000508e47 : add byte ptr [rax + 0xf], cl ; ret
0x0000000000519139 : add byte ptr [rax + 0xf], cl ; ret 0x1b2
0x0000000000666c43 : add byte ptr [rax + 0xf], cl ; ret 0x3941
0x000000000064abbd : add byte ptr [rax + 0xf], cl ; ret 0x3949
0x0000000000666c30 : add byte ptr [rax + 0xf], cl ; ret 0x7eba
0x000000000050ee25 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000006ca03c : add byte ptr [rax + 0xf], cl ; ret 0xb60f
0x00000000004adf78 : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x3d48
0x00000000006a131c : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; retf
0x0000000000517b76 : add byte ptr [rax + 0xf], r9b ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x00000000006a1e28 : add byte ptr [rax + 0xfc73948], al ; xchg eax, esp ; ret 0x8548
0x00000000007c0e9c : add byte ptr [rax + 0xfd4050f], ch ; add ah, al ; syscall
0x00000000007e8a5c : add byte ptr [rax + 0xfdc050f], dh ; add ah, cl ; syscall
0x000000000073ee93 : add byte ptr [rax + 0xffe335], al ; retf
0x0000000000517ecf : add byte ptr [rax + 1], bh ; ret
0x00000000005fc88e : add byte ptr [rax + 1], cl ; fmul dword ptr [rax + 0x39] ; ret
0x00000000007b2ff7 : add byte ptr [rax + 1], cl ; out dx, eax ; jmp qword ptr [rdi]
0x0000000000534835 : add byte ptr [rax + 1], cl ; ret
0x00000000006cad36 : add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000065f9f4 : add byte ptr [rax + 1], cl ; ret 0x894c
0x00000000005dc88e : add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000006c4793 : add byte ptr [rax + 1], cl ; retf
0x00000000006b268f : add byte ptr [rax + 1], cl ; retf -0x76b4
0x00000000004e3e7c : add byte ptr [rax + 1], cl ; retf -0x7cb8
0x0000000000522ad6 : add byte ptr [rax + 1], dil ; ret
0x000000000075d79b : add byte ptr [rax + 1], dl ; add byte ptr [rdi + rdx*8 - 0x2f], dh ; jmp rax
0x000000000074a5ab : add byte ptr [rax + 2], ah ; stc ; jmp rax
0x000000000068e137 : add byte ptr [rax + 2], bh ; ret
0x00000000006b2956 : add byte ptr [rax + 2], dh ; add byte ptr [rax], al ; mov qword ptr [rdx], rdx ; ret
0x000000000074b533 : add byte ptr [rax + 2], dl ; cli ; jmp qword ptr [rax]
0x00000000007d7aef : add byte ptr [rax + 3], dl ; retf 3
0x000000000078af5f : add byte ptr [rax + 4], al ; loope 0x78af68 ; ret
0x0000000000795763 : add byte ptr [rax + 4], bl ; add byte ptr [rbp + rdx - 0x1b], bh ; jmp qword ptr [rbx]
0x00000000007d62c8 : add byte ptr [rax + 4], dl ; retf
0x00000000007eb350 : add byte ptr [rax + 5], al ; ret
0x00000000007bc92f : add byte ptr [rax + 5], dh ; int1 ; call qword ptr [rax]
0x000000000074a9a8 : add byte ptr [rax + 8], bh ; add byte ptr [rax + 0x4c], dl ; stc ; jmp qword ptr [rax]
0x00000000007bcbb7 : add byte ptr [rax + 8], ch ; int1 ; call qword ptr [rbx]
0x0000000000672ac6 : add byte ptr [rax + 9], cl ; ret 0x840f
0x00000000006e4a33 : add byte ptr [rax + rax + 0xc300c0], bh ; retf
0x000000000078f73b : add byte ptr [rax + rax*2], dh ; add al, 0 ; add spl, dl ; jmp qword ptr [rdx]
0x000000000074f75b : add byte ptr [rax + rax*2], dl ; add byte ptr [rax], al ; in al, dx ; cmp ecx, ebp ; call rsp
0x000000000073a3e3 : add byte ptr [rax + rax*4 - 0x25], ch ; call rax
0x0000000000797783 : add byte ptr [rax + rax*8], bh ; add al, 0 ; mov ch, byte ptr [rbx - 0x1b] ; call rsp
0x000000000079623f : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; cmp al, 0xab ; add al, 0 ; retf -0x1acc
0x00000000007663ef : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; in al, dx ; lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; ret 0xd5d0
0x0000000000767a6f : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x000000000075487f : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; jl 0x754820 ; add byte ptr [rax], al ; retf -0x30d2
0x00000000007682a7 : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000007a7a57 : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; push rsp ; ret
0x000000000075b92f : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; sub al, 2 ; add dword ptr [rax], eax ; retf -0x2eda
0x0000000000777a97 : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x000000000077823f : add byte ptr [rax + rax], al ; add ah, bh ; retf 2
0x00000000006ca039 : add byte ptr [rax + rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xb60f
0x000000000078b7c5 : add byte ptr [rax + rax], al ; pop rax ; adc al, 0xe1 ; call qword ptr [rdx]
0x0000000000777a57 : add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; push rsp ; ret
0x000000000075cc07 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; add al, 0x15 ; add dword ptr [rax], eax ; retf -0x2e9e
0x000000000075e407 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; add al, 0x2d ; add dword ptr [rax], eax ; retf -0x2df2
0x000000000075dd47 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; add dword ptr es:[rax], eax ; ret 0xd1f5
0x0000000000763e27 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; and al, 0x87 ; add dword ptr [rax], eax ; ret 0xd52e
0x000000000074b6f3 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; and dl, bl ; retf
0x000000000079c6ff : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; cld ; syscall
0x0000000000767af7 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; hlt ; ret
0x000000000075cbe7 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, 0x14 ; add dword ptr [rax], eax ; retf -0x2e9e
0x0000000000757aef : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, dx ; ret
0x00000000007679ef : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, dx ; ret 1
0x00000000007677ef : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, dx ; rol byte ptr [rcx], 0 ; retf -0x2901
0x00000000007b826f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x0000000000753d77 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; je 0x753d0d ; add byte ptr [rax], al ; retf -0x311e
0x0000000000757aaf : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x00000000007679af : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 1
0x00000000007a79a7 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 5
0x00000000007582a7 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000007981a7 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 4
0x000000000075795f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; pop rsp ; ret 0
0x000000000076795f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; pop rsp ; ret 1
0x0000000000768257 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; push rsp ; retf
0x0000000000767a4f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; ret
0x0000000000758247 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; retf
0x00000000007a8167 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; retf 5
0x000000000074fe2f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub al, 0x47 ; add byte ptr [rax], al ; retf -0x32b6
0x000000000076532f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub al, 0x9c ; add dword ptr [rax], eax ; retf -0x2aa0
0x0000000000750597 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; xchg eax, esp ; add byte ptr [rax], r8b ; retf -0x325c
0x0000000000797997 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; xchg eax, esp ; ret 4
0x000000000075a937 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; xor al, 0xf2 ; add byte ptr [rax], al ; ret 0xd0b7
0x0000000000798157 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; adc al, 0xca ; add al, 0 ; ret 0xe5d8
0x0000000000750e47 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; add al, 0x57 ; add byte ptr [rax], al ; ret 0xcdc7
0x0000000000763e47 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; add al, 0x87 ; add dword ptr [rax], eax ; ret 0xd52e
0x0000000000797a3f : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; cld ; ret 4
0x0000000000764b7f : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; cmp al, 0x94 ; add dword ptr [rax], eax ; retf -0x2abb
0x00000000007682f7 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; hlt ; retf
0x0000000000752f27 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; in al, 0x77 ; add byte ptr [rax], al ; ret 0xce87
0x0000000000797b2f : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; in al, dx ; ret
0x00000000007b79ef : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; in al, dx ; ret 6
0x0000000000794a2f : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; in al, dx ; xchg eax, edx ; add al, 0 ; ret 0xe4b8
0x000000000075f1b7 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; je 0x75f201 ; add dword ptr [rax], eax ; ret 0xd2d7
0x00000000007650e7 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cdq ; add dword ptr [rax], eax ; retf -0x2ab0
0x000000000076534f : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; or al, 0x9c ; add dword ptr [rax], eax ; retf -0x2aa0
0x0000000000797a9f : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; pop rsp ; ret
0x000000000075819f : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; pop rsp ; retf 0
0x0000000000761397 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; push rsp ; pop rsp ; add dword ptr [rax], eax ; retf -0x2c08
0x0000000000768157 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; push rsp ; retf 1
0x00000000007579a7 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; ret 0
0x00000000007681a7 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; retf 1
0x0000000000753c5f : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; sbb al, 0x85 ; add byte ptr [rax], al ; ret 0xcedd
0x000000000076656f : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; sub al, 0xae ; add dword ptr [rax], eax ; retf -0x2a25
0x0000000000767b6f : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; sub al, 0xc4 ; add dword ptr [rax], eax ; retf -0x28f1
0x000000000079c6a7 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; syscall
0x00000000007579d7 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x0000000000750c77 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; xor al, 0x55 ; add byte ptr [rax], al ; retf -0x3243
0x00000000007b7ae7 : add byte ptr [rax + rax], cl ; add ah, ah ; ret
0x0000000000787a37 : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; hlt ; ret 3
0x0000000000777aef : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; in al, dx ; ret
0x0000000000787adf : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; pushfq ; ret
0x0000000000787aa7 : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; ret
0x000000000078798f : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; ret 3
0x0000000000778287 : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; retf
0x000000000078830f : add byte ptr [rax + rax], dl ; add ah, cl ; retf
0x000000000077ff3f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cmp al, 0x48 ; add eax, dword ptr [rax] ; ret 0xc84e
0x00000000007a79f7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; hlt ; ret 5
0x00000000007a7aef : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; ret
0x00000000007b81ef : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; retf 6
0x000000000077796f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 2
0x00000000007b82af : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; retf
0x00000000007a795f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; ret 5
0x0000000000777957 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; ret 2
0x00000000007a7a9f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; ret
0x000000000077799f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; ret 2
0x000000000078cd37 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xor al, 0x16 ; add al, 0 ; retf -0x3879
0x000000000074b79b : add byte ptr [rax + rax], dl ; add byte ptr [rdx - 0x2c], dl ; retf
0x0000000000795f9b : add byte ptr [rax + rbp*4 + 4], dl ; add byte ptr [rdx], dh ; sub esp, ebp ; call rcx
0x0000000000789f93 : add byte ptr [rax + rbp*8 + 3], cl ; add al, bl ; retf
0x0000000000789f7b : add byte ptr [rax + rbp*8 + 3], dh ; add al, ah ; retf
0x0000000000735f33 : add byte ptr [rax + rbp*8 - 0x30], cl ; call rax
0x000000000074222c : add byte ptr [rax + rbp*8], bh ; call qword ptr [rax]
0x000000000074b82f : add byte ptr [rax + rbp*8], ch ; retf
0x00000000007acf7b : add byte ptr [rax + rbx + 6], dh ; add al, ah ; pop rsi ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000750f43 : add byte ptr [rax + rbx*2], bh ; add byte ptr [rax], al ; cwde ; retf -0x33
0x00000000007a0f33 : add byte ptr [rax + rbx*2], ch ; add eax, 0xe8a48800 ; jmp qword ptr [rax]
0x0000000000780f3b : add byte ptr [rax + rbx*2], dh ; add eax, dword ptr [rax] ; mov esi, ds ; jmp qword ptr [rdx]
0x0000000000784f5b : add byte ptr [rax + rbx*4], dl ; add eax, dword ptr [rax] ; push rax ; rcr edi, cl ; call rax
0x00000000007a8fa3 : add byte ptr [rax + rbx*8 + 0x68980005], bl ; in al, dx ; call qword ptr [rcx]
0x0000000000798f53 : add byte ptr [rax + rbx*8 + 4], cl ; add byte ptr [rax], bh ; adc dh, ah ; jmp rbx
0x00000000007b8f7b : add byte ptr [rax + rbx*8 + 6], dh ; add byte ptr [rax], dh ; je 0x7b8f7b ; call qword ptr [rax]
0x00000000007e9d07 : add byte ptr [rax + rcx + 0x30a9e05], ah ; retf -0x62f8
0x000000000066b245 : add byte ptr [rax + rcx + 0x48], dh ; add esp, 8 ; ret
0x000000000075f58f : add byte ptr [rax + rcx - 0x2d], al ; call qword ptr [rbx]
0x000000000077ff8b : add byte ptr [rax + rcx*2 + 0x3d200003], al ; fdivp st(7) ; retf 0
0x0000000000737e1b : add byte ptr [rax + rcx*2 - 0x2c], dl ; call qword ptr [rax]
0x00000000007aff93 : add byte ptr [rax + rcx*2 - 0x5a7fffa], cl ; in eax, dx ; jmp qword ptr [rax]
0x000000000077ff43 : add byte ptr [rax + rcx*2], bh ; add eax, dword ptr [rax] ; ret 0xc84e
0x0000000000606ca4 : add byte ptr [rax + rcx*4 + 0x63], al ; adc al, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000783f83 : add byte ptr [rax + rcx*4], bh ; add eax, dword ptr [rax] ; clc ; jle 0x783f72 ; call qword ptr [rax]
0x0000000000749d90 : add byte ptr [rax + rcx], 0xf0 ; clc ; call rax
0x0000000000783c07 : add byte ptr [rax + rcx], al ; ret
0x000000000074bfc3 : add byte ptr [rax + rcx], bh ; add dl, ch ; adc cl, ah ; call rsp
0x000000000074a378 : add byte ptr [rax + rcx], bl ; xor bl, bl ; clc ; jmp qword ptr [rax]
0x00000000007f24f6 : add byte ptr [rax + rdi + 0x34c805], ch ; retf
0x00000000006ea18f : add byte ptr [rax + rdi + 0x4a], al ; add byte ptr [rax], al ; retf 0x4a38
0x00000000007aefe3 : add byte ptr [rax + rdi - 0x25f7fffa], bl ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000783c5f : add byte ptr [rax + rdi*2], al ; ret
0x0000000000769d8f : add byte ptr [rax + rdi*2], al ; retf
0x00000000007b6f83 : add byte ptr [rax + rdi*4 + 6], bh ; add al, cl ; mov al, 0xef ; call qword ptr [rcx]
0x00000000007b6f9b : add byte ptr [rax + rdi*4 - 0x4f2ffffa], dl ; out dx, eax ; call qword ptr [rcx]
0x00000000007a6f1b : add byte ptr [rax + rdi*4], dl ; add eax, 0xebdc4000 ; call qword ptr [rsi]
0x00000000007aafab : add byte ptr [rax + rdi*8 - 0x1d6ffffb], ah ; in al, dx ; jmp qword ptr [rax]
0x000000000074efbb : add byte ptr [rax + rdi], dh ; add byte ptr [rsi], ch ; sbb ecx, ebp ; call rsp
0x00000000007b079b : add byte ptr [rax + rdx*2 + 0x10800006], dl ; out dx, al ; call qword ptr [rax]
0x0000000000769d2f : add byte ptr [rax + rdx*2], al ; retf
0x000000000073805b : add byte ptr [rax + rdx*4 - 0x2c], ch ; jmp qword ptr [rax]
0x000000000073897b : add byte ptr [rax + rdx*4], al ; salc ; call qword ptr [rax]
0x0000000000788713 : add byte ptr [rax + rdx*8], cl ; add eax, dword ptr [rax] ; sbb byte ptr [rax - 0x20], dh ; jmp qword ptr [rax]
0x000000000075875b : add byte ptr [rax + rdx*8], dl ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; or edx, eax ; call rsp
0x00000000007be793 : add byte ptr [rax + rsi + 0x5ec80007], cl ; int1 ; call rsp
0x00000000007ae77b : add byte ptr [rax + rsi + 6], dh ; add byte ptr [rax], al ; mov dl, 0xed ; jmp qword ptr [rdi]
0x000000000076277b : add byte ptr [rax + rsi*2 + 1], dh ; add byte ptr [rax], bh ; jp 0x76275f ; call qword ptr [rdx]
0x0000000000577add : add byte ptr [rax + rsi*2], al ; mov rdi, r12 ; call rax
0x000000000056f874 : add byte ptr [rax + rsi*2], al ; mov rdi, r13 ; call rax
0x00000000007b67ab : add byte ptr [rax + rsi*4 - 0x75dffffa], ah ; out dx, eax ; call qword ptr [rbx]
0x000000000075676b : add byte ptr [rax + rsi*4], ah ; add byte ptr [rax], al ; cwde ; mov al, 0xcf ; call rsp
0x0000000000769c8f : add byte ptr [rax + rsi*4], al ; retf 0x7c
0x000000000078671b : add byte ptr [rax + rsi*4], dl ; add eax, dword ptr [rax] ; sal ch, 0xdf ; call qword ptr [rbx]
0x000000000075a743 : add byte ptr [rax + rsi*8], bh ; add byte ptr [rax], al ; mov cl, 0xd0 ; call qword ptr [rdx]
0x00000000007afabf : add byte ptr [rax - 0x10], dl ; in eax, dx ; jmp qword ptr [rbx]
0x00000000007458d3 : add byte ptr [rax - 0x11], al ; out dx, eax ; call qword ptr [rax]
0x00000000007b2a5f : add byte ptr [rax - 0x12], ah ; out dx, al ; jmp qword ptr [rcx]
0x00000000007b28ff : add byte ptr [rax - 0x12], al ; out dx, al ; jmp qword ptr [rsi]
0x00000000007b2937 : add byte ptr [rax - 0x12], bh ; out dx, al ; jmp qword ptr [rcx]
0x00000000007b2a3f : add byte ptr [rax - 0x12], dl ; out dx, al ; jmp qword ptr [rcx]
0x00000000007440e4 : add byte ptr [rax - 0x13], bh ; call rax
0x0000000000748513 : add byte ptr [rax - 0x14], dl ; cmc ; call qword ptr [rax]
0x00000000007c69e6 : add byte ptr [rax - 0x16fe67f9], bl ; sbb al, byte ptr [rax] ; retf 0x508
0x00000000007481ab : add byte ptr [rax - 0x17000a46], dh ; ret
0x00000000007357ab : add byte ptr [rax - 0x17], bl ; iretd ; call rax
0x00000000007af437 : add byte ptr [rax - 0x18], cl ; in eax, dx ; jmp qword ptr [rcx]
0x000000000074b84f : add byte ptr [rax - 0x18], dh ; retf
0x000000000074848b : add byte ptr [rax - 0x1a], al ; cmc ; jmp qword ptr [rax]
0x00000000007af367 : add byte ptr [rax - 0x1b], bh ; in eax, dx ; call qword ptr [rsi]
0x00000000007ab057 : add byte ptr [rax - 0x1c], cl ; in al, dx ; jmp rbx
0x00000000005e4efd : add byte ptr [rax - 0x1dfa74b8], dl ; fld dword ptr [rcx] ; call rax
0x00000000007b251f : add byte ptr [rax - 0x1e], dh ; out dx, al ; jmp qword ptr [rcx]
0x000000000074b4e3 : add byte ptr [rax - 0x1e], dh ; stc ; jmp qword ptr [rax]
0x0000000000746b8b : add byte ptr [rax - 0x1f], dh ; jmp qword ptr [rax]
0x000000000074781b : add byte ptr [rax - 0x20], al ; hlt ; call qword ptr [rax]
0x000000000073ce84 : add byte ptr [rax - 0x20], bl ; call rax
0x0000000000430700 : add byte ptr [rax - 0x20fa74b8], dl ; and dword ptr [rbp], ebx ; call rax
0x000000000074777b : add byte ptr [rax - 0x22], ah ; hlt ; jmp qword ptr [rax]
0x000000000074a3ab : add byte ptr [rax - 0x24], dl ; clc ; jmp rax
0x000000000075acd7 : add byte ptr [rax - 0x25], ch ; sar bh, 1 ; ret
0x00000000007faabb : add byte ptr [rax - 0x25fafe5d], bh ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; ret 0x1a3
0x00000000007aa89f : add byte ptr [rax - 0x26], ah ; in al, dx ; jmp qword ptr [rcx]
0x00000000007aa86f : add byte ptr [rax - 0x26], dl ; in al, dx ; call qword ptr [rdi]
0x000000000078a41f : add byte ptr [rax - 0x2c], al ; loopne 0x78a428 ; retf
0x00000000007481a3 : add byte ptr [rax - 0x2f000a46], dl ; ret
0x0000000000735343 : add byte ptr [rax - 0x2f003092], bl ; retf 1
0x00000000007aeea7 : add byte ptr [rax - 0x2f], bh ; in eax, dx ; jmp rbx
0x000000000078e49f : add byte ptr [rax - 0x2f], dh ; loope 0x78e4a8 ; ret
0x00000000007e7cff : add byte ptr [rax - 0x2ffe72fd], dh ; add al, 3 ; ret
0x0000000000758bcf : add byte ptr [rax - 0x30], bl ; jmp qword ptr [rax]
0x000000000078a2f7 : add byte ptr [rax - 0x30], bl ; loopne 0x78a300 ; retf
0x0000000000746b3b : add byte ptr [rax - 0x33], ah ; jmp qword ptr [rax]
0x000000000074b3f3 : add byte ptr [rax - 0x33], dl ; stc ; jmp rax
0x000000000074e3af : add byte ptr [rax - 0x34], cl ; call rsp
0x000000000074832b : add byte ptr [rax - 0x35], ah ; cmc ; inc dword ptr [rax] ; retf 7
0x000000000074831b : add byte ptr [rax - 0x35], al ; cmc ; call rax
0x0000000000748333 : add byte ptr [rax - 0x35], dh ; cmc ; lcall ptr [rax] ; retf 7
0x000000000074626b : add byte ptr [rax - 0x36], al ; jmp rax
0x00000000007aed67 : add byte ptr [rax - 0x38], bh ; in eax, dx ; jmp rbx
0x0000000000760a4f : add byte ptr [rax - 0x38], bl ; sar edi, cl ; ret
0x00000000005b951c : add byte ptr [rax - 0x39], cl ; add al, 0x24 ; call qword ptr [rdi]
0x000000000065e0dc : add byte ptr [rax - 0x39], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000005a8c32 : add byte ptr [rax - 0x39], cl ; cmp byte ptr [r8 - 1], r14b ; jo 0x5a8c44 ; ret
0x00000000004340ee : add byte ptr [rax - 0x39], cl ; cwde ; push rax ; ret
0x00000000006740b1 : add byte ptr [rax - 0x39], cl ; or r12b, r15b ; pop rsp ; jb 0x6740c3 ; ret
0x00000000005051e7 : add byte ptr [rax - 0x39], cl ; push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004f76ff : add byte ptr [rax - 0x39], cl ; ret
0x00000000005a55a2 : add byte ptr [rax - 0x39], cl ; sbb byte ptr [r8], r10b ; cli ; jo 0x5a55b4 ; ret
0x0000000000434122 : add byte ptr [rax - 0x39], cl ; test al, 0x58 ; ret
0x0000000000437b4e : add byte ptr [rax - 0x39], cl ; test dword ptr [rax + 0x48fffff5], ebx ; ret
0x0000000000437ae2 : add byte ptr [rax - 0x39], cl ; test dword ptr [rax + 0x50fffff5], ecx ; ret
0x00000000004384b2 : add byte ptr [rax - 0x39], cl ; test dword ptr [rax + 0x68fffff6], edi ; ret
0x0000000000436799 : add byte ptr [rax - 0x39], cl ; test dword ptr [rax + 0x68fffff7], edi ; ret
0x0000000000434dd7 : add byte ptr [rax - 0x39], cl ; test dword ptr [rax + 0x68fffffb], edi ; ret
0x00000000004346a0 : add byte ptr [rax - 0x39], cl ; test dword ptr [rax + 0x78fffffa], edx ; ret
0x00000000004347be : add byte ptr [rax - 0x39], cl ; test dword ptr [rax + 0x7efffffa], esp ; ret
0x000000000043480a : add byte ptr [rax - 0x39], cl ; test dword ptr [rax - 0x53000006], edi ; ret
0x00000000004347c9 : add byte ptr [rax - 0x39], cl ; test dword ptr [rax - 0x5b000006], ebp ; ret
0x00000000004346ab : add byte ptr [rax - 0x39], cl ; test dword ptr [rax - 0x63000006], ebx ; ret
0x00000000004d05e1 : add byte ptr [rax - 0x39], cl ; test dword ptr [rax], ebp ; idiv edi ; call qword ptr [rax]
0x00000000004d0411 : add byte ptr [rax - 0x39], cl ; test eax, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000436ab6 : add byte ptr [rax - 0x39], cl ; test eax, ebp ; idiv edi ; call qword ptr [rax - 0x3d]
0x00000000004d0479 : add byte ptr [rax - 0x39], cl ; test eax, ebx ; idiv bh ; call qword ptr [rax]
0x00000000004d0ff2 : add byte ptr [rax - 0x39], cl ; test eax, esp ; idiv edi ; call rax
0x00000000004c8b0d : add byte ptr [rax - 0x3b7cb770], dl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000074b3cb : add byte ptr [rax - 0x3b], dl ; stc ; jmp rax
0x0000000000756c7f : add byte ptr [rax - 0x3c], bl ; iretd ; call qword ptr [rax]
0x0000000000746b0b : add byte ptr [rax - 0x3d], ah ; jmp rax
0x0000000000748353 : add byte ptr [rax - 0x3f000a33], ah ; retf 7
0x0000000000748233 : add byte ptr [rax - 0x3f], al ; cmc ; jmp rax
0x00000000004048b3 : add byte ptr [rax - 0x3fceff91], bl ; call 0x681302
0x0000000000738b13 : add byte ptr [rax - 0x41], bl ; salc ; jmp rax
0x00000000007b7877 : add byte ptr [rax - 0x41], ch ; out dx, eax ; jmp qword ptr [rdi]
0x0000000000747393 : add byte ptr [rax - 0x41], dl ; hlt ; call rax
0x000000000053dfef : add byte ptr [rax - 0x45], al ; dec dword ptr [rax + 1] ; ret 0x394d
0x0000000000747338 : add byte ptr [rax - 0x45d5fff9], al ; hlt ; jmp qword ptr [rax]
0x000000000074b35b : add byte ptr [rax - 0x46], al ; stc ; call rax
0x00000000006772c7 : add byte ptr [rax - 0x46], cl ; add byte ptr [rax], al ; lahf ; push rbx ; retf 0x7cee
0x0000000000743e3b : add byte ptr [rax - 0x46], dl ; in al, dx ; jmp qword ptr [rax]
0x000000000074819b : add byte ptr [rax - 0x47000a46], al ; ret
0x0000000000748173 : add byte ptr [rax - 0x48], ah ; cmc ; push rax ; ret 7
0x00000000006776ef : add byte ptr [rax - 0x48], cl ; add byte ptr [rdx - 0x151b8410], bh ; ret 0x4841
0x000000000074817b : add byte ptr [rax - 0x48], dh ; cmc ; dec dword ptr [rax] ; ret
0x000000000074816b : add byte ptr [rax - 0x49], dh ; cmc ; dec eax ; ret 7
0x0000000000745333 : add byte ptr [rax - 0x4f0010a8], ah ; retf
0x00000000007388cb : add byte ptr [rax - 0x4f00298a], bh ; retf 2
0x0000000000743de3 : add byte ptr [rax - 0x4f], dh ; in al, dx ; call qword ptr [rax]
0x0000000000749ffb : add byte ptr [rax - 0x50], dl ; clc ; jmp qword ptr [rax]
0x0000000000749f8b : add byte ptr [rax - 0x51], al ; clc ; call rax
0x0000000000781c17 : add byte ptr [rax - 0x51], cl ; fdivp st(7) ; ret
0x000000000074729b : add byte ptr [rax - 0x52], al ; hlt ; jmp qword ptr [rax]
0x00000000007b194f : add byte ptr [rax - 0x52], al ; out dx, al ; call qword ptr [rdx]
0x0000000000749f43 : add byte ptr [rax - 0x53], ah ; clc ; call rax
0x0000000000746acb : add byte ptr [rax - 0x53], al ; call rax
0x000000000074624b : add byte ptr [rax - 0x54], dh ; jmp qword ptr [rax]
0x00000000007b6d5f : add byte ptr [rax - 0x54], dh ; out dx, eax ; call qword ptr [rdi]
0x00000000004da435 : add byte ptr [rax - 0x55fa74b8], dl ; test byte ptr [rdx], dl ; call rax
0x00000000007451d3 : add byte ptr [rax - 0x570010c7], al ; ret
0x00000000007451a3 : add byte ptr [rax - 0x570010cd], ah ; ret 6
0x000000000051354e : add byte ptr [rax - 0x58000000], 1 ; jne 0x513562 ; jmp rax
0x0000000000747fa3 : add byte ptr [rax - 0x58], dh ; cmc ; jmp qword ptr [rax]
0x00000000007f3f1d : add byte ptr [rax - 0x58fafe3e], al ; ret 1
0x00000000007461d3 : add byte ptr [rax - 0x59], ah ; call qword ptr [rax]
0x00000000007461c3 : add byte ptr [rax - 0x59], al ; jmp rax
0x0000000000747f43 : add byte ptr [rax - 0x5b], dh ; cmc ; call rax
0x000000000074725b : add byte ptr [rax - 0x5c], dl ; hlt ; call qword ptr [rax]
0x00000000007f36f4 : add byte ptr [rax - 0x5cf2fe76], ah ; pushfq ; add dword ptr [rax], eax ; ret 0x18a
0x00000000007f4659 : add byte ptr [rax - 0x5cfafe0d], dh ; pushfq ; add dword ptr [rax], eax ; ret 0x1f3
0x0000000000748383 : add byte ptr [rax - 0x5f000a28], dh ; retf
0x0000000000742143 : add byte ptr [rax - 0x5f0017d9], dl ; retf
0x00000000007ae10f : add byte ptr [rax - 0x5f], ah ; in eax, dx ; jmp qword ptr [rax]
0x0000000000747f1b : add byte ptr [rax - 0x60], ah ; cmc ; call qword ptr [rax]
0x0000000000743d83 : add byte ptr [rax - 0x60], al ; in al, dx ; call rax
0x000000000078d527 : add byte ptr [rax - 0x60], bl ; loope 0x78d530 ; retf 0
0x0000000000749e43 : add byte ptr [rax - 0x61], ah ; clc ; call rax
0x000000000074afeb : add byte ptr [rax - 0x62], dh ; stc ; jmp qword ptr [rax]
0x000000000074532b : add byte ptr [rax - 0x670010a8], al ; retf
0x000000000074af4b : add byte ptr [rax - 0x67], ah ; stc ; jmp rax
0x0000000000746123 : add byte ptr [rax - 0x68], dh ; jmp rax
0x00000000004aed49 : add byte ptr [rax - 0x69fa74b8], dl ; cmp edx, dword ptr [rbp] ; call rax
0x0000000000746a43 : add byte ptr [rax - 0x6b], dh ; call qword ptr [rax]
0x00000000006b46bf : add byte ptr [rax - 0x6bf0a306], al ; ret 0xb60f
0x00000000006cd30d : add byte ptr [rax - 0x6bf10000], ah ; ror byte ptr [rdi], 0x94 ; ret 0x5388
0x00000000006ccf08 : add byte ptr [rax - 0x6bf10000], al ; ret 0xd089
0x000000000079796f : add byte ptr [rax - 0x6d], bl ; in eax, -1 ; retf 1
0x0000000000744adb : add byte ptr [rax - 0x6e], bl ; out dx, al ; jmp qword ptr [rax]
0x000000000074519b : add byte ptr [rax - 0x6f0010cd], dl ; ret 6
0x00000000007460b3 : add byte ptr [rax - 0x6f], dl ; call qword ptr [rax]
0x000000000073eedb : add byte ptr [rax - 0x7001cc9], dl ; retf
0x000000000073ed63 : add byte ptr [rax - 0x7001d00], al ; ret
0x000000000074ae53 : add byte ptr [rax - 0x71], dh ; stc ; jmp qword ptr [rax]
0x0000000000667485 : add byte ptr [rax - 0x73], cl ; add al, 0x31 ; add rsp, 8 ; ret
0x00000000006a07ef : add byte ptr [rax - 0x73], cl ; add al, 0x37 ; ret
0x000000000067e010 : add byte ptr [rax - 0x73], cl ; jge 0x67dfac ; call 0x67aa77
0x0000000000520023 : add byte ptr [rax - 0x73], cl ; jl 0x520054 ; adc al, ch ; xchg eax, edx ; ret 0xffff
0x00000000005251e3 : add byte ptr [rax - 0x73], cl ; jl 0x525213 ; or al, ch ; ret 0xffed
0x0000000000545d03 : add byte ptr [rax - 0x73], cl ; jl 0x545d33 ; or al, ch ; ret 0xfffb
0x000000000056a6a3 : add byte ptr [rax - 0x73], cl ; jl 0x56a6d3 ; or al, ch ; ret 0xffed
0x00000000006ac97a : add byte ptr [rax - 0x73], cl ; jl 0x6ac9ab ; and byte ptr [rax - 0x7d], cl ; ret
0x00000000006d2a47 : add byte ptr [rax - 0x73], cl ; jl 0x6d2a78 ; cmp byte ptr [rax - 0x7d], cl ; ret
0x000000000062c0ad : add byte ptr [rax - 0x73], cl ; jnp 0x62c0c9 ; call 0x628b77
0x0000000000667972 : add byte ptr [rax - 0x73], cl ; jnp 0x6679b6 ; call 0x403b97
0x0000000000630fae : add byte ptr [rax - 0x73], cl ; lodsb al, byte ptr [rsi] ; ret
0x000000000069e669 : add byte ptr [rax - 0x73], cl ; pop rax ; or byte ptr [rax - 0x77], cl ; ret 0xc7
0x00000000005121fc : add byte ptr [rax - 0x73], cl ; pop rbp ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000053b1b7 : add byte ptr [rax - 0x73], cl ; push rax ; add dword ptr [rax + 0x29], ecx ; retf -0x3815
0x000000000053d26f : add byte ptr [rax - 0x73], cl ; push rax ; add dword ptr [rax + 0x29], ecx ; retf -0x4915
0x000000000053dd8f : add byte ptr [rax - 0x73], cl ; push rax ; add dword ptr [rax + 0x29], ecx ; retf -0x6a15
0x000000000053bebf : add byte ptr [rax - 0x73], cl ; push rax ; add dword ptr [rax + 0x29], ecx ; retf -0x7d15
0x00000000005ae9f3 : add byte ptr [rax - 0x73], cl ; push rbx ; dec dword ptr [rax + 0x39] ; ret
0x000000000068e42f : add byte ptr [rax - 0x73], cl ; push rcx ; add dword ptr [rax + 0x29], ecx ; ret 0xa0eb
0x000000000068e81f : add byte ptr [rax - 0x73], cl ; push rcx ; add dword ptr [rax + 0x29], ecx ; ret 0xaaeb
0x00000000005ff3e2 : add byte ptr [rax - 0x73], cl ; push rdi ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000006c817f : add byte ptr [rax - 0x73], cl ; push rsi ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000005121a4 : add byte ptr [rax - 0x73], cl ; push rsp ; and al, 0x10 ; mov rdi, r12 ; call rax
0x0000000000571ee8 : add byte ptr [rax - 0x73], cl ; push rsp ; insd dword ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000062e72e : add byte ptr [rax - 0x73], cl ; pushfq ; ret
0x0000000000413553 : add byte ptr [rax - 0x73], cl ; ror byte ptr [r9 - 0x77], 1 ; ret 0x4ae8
0x00000000004972bd : add byte ptr [rax - 0x73], cl ; ror byte ptr [r9 - 0x77], 1 ; ret 0x8ba
0x0000000000620957 : add byte ptr [rax - 0x73], cl ; ror byte ptr [r9 - 0x77], 1 ; ret 0xae8
0x0000000000623a29 : add byte ptr [rax - 0x73], cl ; ror byte ptr [r9 - 0x77], 1 ; ret 0xdee8
0x0000000000743c9b : add byte ptr [rax - 0x73], dh ; in al, dx ; jmp qword ptr [rax]
0x0000000000461d54 : add byte ptr [rax - 0x74fa74b8], dl ; or ebx, dword ptr [rdx] ; call rax
0x0000000000602978 : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax + 0x63], cl ; ret
0x000000000052b77a : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x75], cl ; push rdx ; xor dh, dh ; ret 0xf01
0x00000000006d3ba7 : add byte ptr [rax - 0x75], cl ; adc ecx, dword ptr [rax + 0x63] ; ret 0xbc80
0x000000000040a970 : add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000005487bb : add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret
0x0000000000537bc7 : add byte ptr [rax - 0x75], cl ; add dword ptr [rax + 0x39], ecx ; ret 0xa7c
0x00000000006ce01f : add byte ptr [rax - 0x75], cl ; add eax, 0x334c99 ; ret
0x00000000006cde8f : add byte ptr [rax - 0x75], cl ; add eax, 0x334e31 ; ret
0x00000000006cde9f : add byte ptr [rax - 0x75], cl ; add eax, 0x334e39 ; ret
0x00000000006c065a : add byte ptr [rax - 0x75], cl ; add eax, 0x34225e ; pop rbx ; jmp rax
0x00000000006becff : add byte ptr [rax - 0x75], cl ; add eax, 0x343bd9 ; jmp rax
0x00000000006bec1f : add byte ptr [rax - 0x75], cl ; add eax, 0x343c61 ; jmp rax
0x00000000006bec0f : add byte ptr [rax - 0x75], cl ; add eax, 0x343c81 ; jmp rax
0x00000000006bebcf : add byte ptr [rax - 0x75], cl ; add eax, 0x343cb9 ; jmp rax
0x00000000006bebbf : add byte ptr [rax - 0x75], cl ; add eax, 0x343cd9 ; jmp rax
0x00000000006bea3f : add byte ptr [rax - 0x75], cl ; add eax, 0x34e299 ; ret
0x00000000006bea2f : add byte ptr [rax - 0x75], cl ; add eax, 0x34e2a1 ; ret
0x00000000006b2426 : add byte ptr [rax - 0x75], cl ; add eax, 0x3504b2 ; jmp rax
0x00000000006a7e2d : add byte ptr [rax - 0x75], cl ; add eax, 0x35aa8b ; pop rbx ; jmp rax
0x000000000069260f : add byte ptr [rax - 0x75], cl ; add eax, 0x36fe31 ; ret
0x00000000006925ef : add byte ptr [rax - 0x75], cl ; add eax, 0x36fe59 ; ret
0x00000000006925cf : add byte ptr [rax - 0x75], cl ; add eax, 0x36fe69 ; ret
0x000000000069059f : add byte ptr [rax - 0x75], cl ; add eax, 0x379361 ; ret
0x000000000069057f : add byte ptr [rax - 0x75], cl ; add eax, 0x379389 ; ret
0x000000000066992f : add byte ptr [rax - 0x75], cl ; add eax, 0x3963c1 ; ret
0x000000000065901b : add byte ptr [rax - 0x75], cl ; add eax, 0x3a98bd ; jmp rax
0x00000000006257a1 : add byte ptr [rax - 0x75], cl ; add eax, 0x3dd13f ; call rax
0x0000000000625618 : add byte ptr [rax - 0x75], cl ; add eax, 0x3dd2c8 ; call rax
0x0000000000625487 : add byte ptr [rax - 0x75], cl ; add eax, 0x3dd451 ; call rax
0x0000000000625403 : add byte ptr [rax - 0x75], cl ; add eax, 0x3dd4dd ; call rax
0x000000000062420c : add byte ptr [rax - 0x75], cl ; add eax, 0x3de6cc ; call rax
0x0000000000624171 : add byte ptr [rax - 0x75], cl ; add eax, 0x3de76f ; call rax
0x0000000000623be6 : add byte ptr [rax - 0x75], cl ; add eax, 0x3dec82 ; call rax
0x00000000006225d7 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e0301 ; call rax
0x00000000006225bb : add byte ptr [rax - 0x75], cl ; add eax, 0x3e0325 ; call rax
0x0000000000622063 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e0875 ; call rax
0x0000000000621efd : add byte ptr [rax - 0x75], cl ; add eax, 0x3e09db ; call rax
0x0000000000621885 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e1053 ; call rax
0x00000000006216c5 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e1213 ; call rax
0x00000000006211c7 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e1711 ; call rax
0x0000000000620a9d : add byte ptr [rax - 0x75], cl ; add eax, 0x3e1e3b ; call rax
0x00000000006208a5 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e2033 ; call rax
0x000000000062069d : add byte ptr [rax - 0x75], cl ; add eax, 0x3e223b ; call rax
0x00000000006204e9 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e23ef ; call rax
0x0000000000620383 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e2555 ; call rax
0x0000000000620195 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e2743 ; call rax
0x00000000006200c9 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e280f ; call rax
0x0000000000620089 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e2857 ; call rax
0x000000000061ff2c : add byte ptr [rax - 0x75], cl ; add eax, 0x3e29ac ; call rax
0x000000000061fee5 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e29fb ; call rax
0x000000000061fbad : add byte ptr [rax - 0x75], cl ; add eax, 0x3e2d2b ; call rax
0x000000000061f8d9 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e3007 ; call rax
0x000000000061f7f6 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e30e2 ; call rax
0x000000000061f7ab : add byte ptr [rax - 0x75], cl ; add eax, 0x3e3135 ; call rax
0x000000000061f524 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e33b4 ; call rax
0x000000000061f43d : add byte ptr [rax - 0x75], cl ; add eax, 0x3e34a3 ; call rax
0x000000000061f1e0 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e3700 ; call rax
0x000000000061ed7f : add byte ptr [rax - 0x75], cl ; add eax, 0x3e3b61 ; call rax
0x000000000061e852 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e408e ; call rax
0x000000000061e4a3 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e4435 ; call rax
0x000000000061e385 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e4553 ; call rax
0x000000000061e161 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e4777 ; call rax
0x000000000061d653 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e5285 ; call rax
0x000000000061c82d : add byte ptr [rax - 0x75], cl ; add eax, 0x3e60b3 ; call rax
0x000000000061c3c9 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e6517 ; call rax
0x000000000061bbe5 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e6cfb ; call rax
0x000000000061b00f : add byte ptr [rax - 0x75], cl ; add eax, 0x3e78d1 ; call rax
0x000000000061a613 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e82cd ; call rax
0x000000000061a425 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e84bb ; call rax
0x0000000000619e8e : add byte ptr [rax - 0x75], cl ; add eax, 0x3e8a4a ; call rax
0x0000000000619e6d : add byte ptr [rax - 0x75], cl ; add eax, 0x3e8a73 ; call rax
0x0000000000619bb4 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e8d24 ; call rax
0x0000000000619b93 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e8d4d ; call rax
0x00000000006192d1 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e960f ; call rax
0x000000000061910f : add byte ptr [rax - 0x75], cl ; add eax, 0x3e97d1 ; call rax
0x00000000006189c2 : add byte ptr [rax - 0x75], cl ; add eax, 0x3e9f16 ; call rax
0x000000000061890b : add byte ptr [rax - 0x75], cl ; add eax, 0x3e9fd5 ; call rax
0x0000000000618326 : add byte ptr [rax - 0x75], cl ; add eax, 0x3ea5b2 ; call rax
0x000000000061826f : add byte ptr [rax - 0x75], cl ; add eax, 0x3ea671 ; call rax
0x0000000000617d6b : add byte ptr [rax - 0x75], cl ; add eax, 0x3eab75 ; call rax
0x0000000000617881 : add byte ptr [rax - 0x75], cl ; add eax, 0x3eb05f ; call rax
0x00000000006173f7 : add byte ptr [rax - 0x75], cl ; add eax, 0x3eb4e9 ; call rax
0x0000000000616db3 : add byte ptr [rax - 0x75], cl ; add eax, 0x3ebb2d ; call rax
0x0000000000616929 : add byte ptr [rax - 0x75], cl ; add eax, 0x3ebfb7 ; call rax
0x000000000061599f : add byte ptr [rax - 0x75], cl ; add eax, 0x3ecf41 ; call rax
0x000000000061570e : add byte ptr [rax - 0x75], cl ; add eax, 0x3ed1ca ; call rax
0x00000000006156ed : add byte ptr [rax - 0x75], cl ; add eax, 0x3ed1f3 ; call rax
0x0000000000615434 : add byte ptr [rax - 0x75], cl ; add eax, 0x3ed4a4 ; call rax
0x0000000000615413 : add byte ptr [rax - 0x75], cl ; add eax, 0x3ed4cd ; call rax
0x0000000000614689 : add byte ptr [rax - 0x75], cl ; add eax, 0x3ee257 ; call rax
0x000000000061441d : add byte ptr [rax - 0x75], cl ; add eax, 0x3ee4c3 ; call rax
0x00000000006141e1 : add byte ptr [rax - 0x75], cl ; add eax, 0x3ee6ff ; call rax
0x0000000000613c43 : add byte ptr [rax - 0x75], cl ; add eax, 0x3eec9d ; call rax
0x00000000005f7a0a : add byte ptr [rax - 0x75], cl ; add eax, 0x40aed6 ; call rax
0x00000000005f7927 : add byte ptr [rax - 0x75], cl ; add eax, 0x40afb9 ; call rax
0x00000000005f784f : add byte ptr [rax - 0x75], cl ; add eax, 0x40b091 ; call rax
0x00000000005f776c : add byte ptr [rax - 0x75], cl ; add eax, 0x40b174 ; call rax
0x00000000005f75a7 : add byte ptr [rax - 0x75], cl ; add eax, 0x40b331 ; call rax
0x00000000005f7584 : add byte ptr [rax - 0x75], cl ; add eax, 0x40b35c ; call rax
0x00000000005f7335 : add byte ptr [rax - 0x75], cl ; add eax, 0x40b5a3 ; call rax
0x00000000005f7275 : add byte ptr [rax - 0x75], cl ; add eax, 0x40b66b ; call rax
0x00000000005f71bb : add byte ptr [rax - 0x75], cl ; add eax, 0x40b71d ; call rax
0x00000000005f7175 : add byte ptr [rax - 0x75], cl ; add eax, 0x40b76b ; call rax
0x00000000005f6cde : add byte ptr [rax - 0x75], cl ; add eax, 0x40bbfa ; call rax
0x00000000005f6c9e : add byte ptr [rax - 0x75], cl ; add eax, 0x40bc42 ; call rax
0x00000000005f6bf9 : add byte ptr [rax - 0x75], cl ; add eax, 0x40bcdf ; call rax
0x00000000005f6bb9 : add byte ptr [rax - 0x75], cl ; add eax, 0x40bd27 ; call rax
0x00000000005f69b4 : add byte ptr [rax - 0x75], cl ; add eax, 0x40bf24 ; call rax
0x00000000005f6965 : add byte ptr [rax - 0x75], cl ; add eax, 0x40bf7b ; call rax
0x00000000005f68ad : add byte ptr [rax - 0x75], cl ; add eax, 0x40c02b ; call rax
0x00000000005f686d : add byte ptr [rax - 0x75], cl ; add eax, 0x40c073 ; call rax
0x00000000005f65a5 : add byte ptr [rax - 0x75], cl ; add eax, 0x40c333 ; call rax
0x00000000005f6562 : add byte ptr [rax - 0x75], cl ; add eax, 0x40c37e ; call rax
0x00000000005f61fa : add byte ptr [rax - 0x75], cl ; add eax, 0x40c6de ; call rax
0x00000000005f619b : add byte ptr [rax - 0x75], cl ; add eax, 0x40c745 ; call rax
0x00000000005f54e5 : add byte ptr [rax - 0x75], cl ; add eax, 0x40d3f3 ; call rax
0x00000000005f53fd : add byte ptr [rax - 0x75], cl ; add eax, 0x40d4e3 ; call rax
0x00000000005f5342 : add byte ptr [rax - 0x75], cl ; add eax, 0x40d596 ; call rax
0x00000000005f52ff : add byte ptr [rax - 0x75], cl ; add eax, 0x40d5e1 ; call rax
0x00000000005f50ac : add byte ptr [rax - 0x75], cl ; add eax, 0x40d82c ; call rax
0x00000000005f5057 : add byte ptr [rax - 0x75], cl ; add eax, 0x40d889 ; call rax
0x00000000005f4647 : add byte ptr [rax - 0x75], cl ; add eax, 0x40e291 ; call rax
0x00000000005f4604 : add byte ptr [rax - 0x75], cl ; add eax, 0x40e2dc ; call rax
0x00000000005f450a : add byte ptr [rax - 0x75], cl ; add eax, 0x40e3ce ; call rax
0x00000000005f44c7 : add byte ptr [rax - 0x75], cl ; add eax, 0x40e419 ; call rax
0x00000000005f4142 : add byte ptr [rax - 0x75], cl ; add eax, 0x40e796 ; call rax
0x00000000005f410f : add byte ptr [rax - 0x75], cl ; add eax, 0x40e7d1 ; call rax
0x00000000005f400b : add byte ptr [rax - 0x75], cl ; add eax, 0x40e8d5 ; call rax
0x00000000005f3d7f : add byte ptr [rax - 0x75], cl ; add eax, 0x40eb61 ; call rax
0x00000000005f3b9d : add byte ptr [rax - 0x75], cl ; add eax, 0x40ed3b ; call rax
0x00000000005f3b4b : add byte ptr [rax - 0x75], cl ; add eax, 0x40ed95 ; call rax
0x00000000005f392c : add byte ptr [rax - 0x75], cl ; add eax, 0x40efac ; call rax
0x00000000005f38cd : add byte ptr [rax - 0x75], cl ; add eax, 0x40f013 ; call rax
0x00000000005f37c8 : add byte ptr [rax - 0x75], cl ; add eax, 0x40f110 ; call rax
0x00000000005f377d : add byte ptr [rax - 0x75], cl ; add eax, 0x40f163 ; call rax
0x00000000005f3489 : add byte ptr [rax - 0x75], cl ; add eax, 0x40f44f ; call rax
0x00000000005f33ef : add byte ptr [rax - 0x75], cl ; add eax, 0x40f4f1 ; call rax
0x00000000005f307a : add byte ptr [rax - 0x75], cl ; add eax, 0x40f85e ; call rax
0x00000000005f3017 : add byte ptr [rax - 0x75], cl ; add eax, 0x40f8c9 ; call rax
0x00000000005f2f33 : add byte ptr [rax - 0x75], cl ; add eax, 0x40f9ad ; call rax
0x00000000005f249c : add byte ptr [rax - 0x75], cl ; add eax, 0x41043c ; call rax
0x00000000005f244f : add byte ptr [rax - 0x75], cl ; add eax, 0x410491 ; call rax
0x00000000005f2192 : add byte ptr [rax - 0x75], cl ; add eax, 0x410746 ; call rax
0x00000000005f2145 : add byte ptr [rax - 0x75], cl ; add eax, 0x41079b ; call rax
0x00000000005f1ecb : add byte ptr [rax - 0x75], cl ; add eax, 0x410a0d ; call rax
0x00000000005f1e59 : add byte ptr [rax - 0x75], cl ; add eax, 0x410a87 ; call rax
0x00000000005f1d31 : add byte ptr [rax - 0x75], cl ; add eax, 0x410ba7 ; call rax
0x00000000005f1cf1 : add byte ptr [rax - 0x75], cl ; add eax, 0x410bef ; call rax
0x00000000005f1c38 : add byte ptr [rax - 0x75], cl ; add eax, 0x410ca0 ; call rax
0x00000000005f1bf5 : add byte ptr [rax - 0x75], cl ; add eax, 0x410ceb ; call rax
0x00000000005f197d : add byte ptr [rax - 0x75], cl ; add eax, 0x410f5b ; call rax
0x00000000005f193d : add byte ptr [rax - 0x75], cl ; add eax, 0x410fa3 ; call rax
0x00000000005f17b4 : add byte ptr [rax - 0x75], cl ; add eax, 0x411124 ; call rax
0x00000000005f1774 : add byte ptr [rax - 0x75], cl ; add eax, 0x41116c ; call rax
0x00000000005f1548 : add byte ptr [rax - 0x75], cl ; add eax, 0x411390 ; call rax
0x00000000005f152b : add byte ptr [rax - 0x75], cl ; add eax, 0x4113b5 ; call rax
0x00000000005f10b4 : add byte ptr [rax - 0x75], cl ; add eax, 0x411824 ; call rax
0x00000000005f0ff7 : add byte ptr [rax - 0x75], cl ; add eax, 0x4118e9 ; call rax
0x00000000005f0d88 : add byte ptr [rax - 0x75], cl ; add eax, 0x411b50 ; call rax
0x00000000005f0ced : add byte ptr [rax - 0x75], cl ; add eax, 0x411bf3 ; call rax
0x00000000005ef9b5 : add byte ptr [rax - 0x75], cl ; add eax, 0x412f23 ; call rax
0x00000000005ef8dd : add byte ptr [rax - 0x75], cl ; add eax, 0x413003 ; call rax
0x00000000005ef695 : add byte ptr [rax - 0x75], cl ; add eax, 0x413243 ; call rax
0x00000000005ef649 : add byte ptr [rax - 0x75], cl ; add eax, 0x413297 ; call rax
0x00000000005ef0b9 : add byte ptr [rax - 0x75], cl ; add eax, 0x41381f ; call rax
0x00000000005eefe1 : add byte ptr [rax - 0x75], cl ; add eax, 0x4138ff ; call rax
0x00000000005eeda2 : add byte ptr [rax - 0x75], cl ; add eax, 0x413b36 ; call rax
0x00000000005eed55 : add byte ptr [rax - 0x75], cl ; add eax, 0x413b8b ; call rax
0x00000000005ee5f8 : add byte ptr [rax - 0x75], cl ; add eax, 0x4142e0 ; call rax
0x00000000005ee51f : add byte ptr [rax - 0x75], cl ; add eax, 0x4143c1 ; call rax
0x00000000005edcbb : add byte ptr [rax - 0x75], cl ; add eax, 0x414c25 ; call rax
0x00000000005ec44b : add byte ptr [rax - 0x75], cl ; add eax, 0x416495 ; call rax
0x00000000005ebfe7 : add byte ptr [rax - 0x75], cl ; add eax, 0x4168f9 ; call rax
0x00000000005eb86f : add byte ptr [rax - 0x75], cl ; add eax, 0x417071 ; call rax
0x00000000005eb0c9 : add byte ptr [rax - 0x75], cl ; add eax, 0x417817 ; call rax
0x00000000005e9133 : add byte ptr [rax - 0x75], cl ; add eax, 0x4197ad ; call rax
0x00000000005e8ccf : add byte ptr [rax - 0x75], cl ; add eax, 0x419c11 ; call rax
0x00000000005e8557 : add byte ptr [rax - 0x75], cl ; add eax, 0x41a389 ; call rax
0x00000000005e7db1 : add byte ptr [rax - 0x75], cl ; add eax, 0x41ab2f ; call rax
0x00000000005e6a1b : add byte ptr [rax - 0x75], cl ; add eax, 0x41bec5 ; call rax
0x00000000005e6947 : add byte ptr [rax - 0x75], cl ; add eax, 0x41bf99 ; call rax
0x00000000005e65a9 : add byte ptr [rax - 0x75], cl ; add eax, 0x41c337 ; call rax
0x00000000005e5ce8 : add byte ptr [rax - 0x75], cl ; add eax, 0x41cbf8 ; call rax
0x00000000005e59d9 : add byte ptr [rax - 0x75], cl ; add eax, 0x41ceff ; call rax
0x00000000005e59b3 : add byte ptr [rax - 0x75], cl ; add eax, 0x41cf2d ; call rax
0x00000000005e56e1 : add byte ptr [rax - 0x75], cl ; add eax, 0x41d1ff ; call rax
0x00000000005e54a3 : add byte ptr [rax - 0x75], cl ; add eax, 0x41d43d ; call rax
0x00000000005e51c7 : add byte ptr [rax - 0x75], cl ; add eax, 0x41d719 ; call rax
0x00000000005e4d74 : add byte ptr [rax - 0x75], cl ; add eax, 0x41db6c ; call rax
0x00000000005e4b2f : add byte ptr [rax - 0x75], cl ; add eax, 0x41dda9 ; call rax
0x00000000005e4b09 : add byte ptr [rax - 0x75], cl ; add eax, 0x41ddd7 ; call rax
0x00000000005e468e : add byte ptr [rax - 0x75], cl ; add eax, 0x41e252 ; call rax
0x00000000005e43ed : add byte ptr [rax - 0x75], cl ; add eax, 0x41e4f3 ; call rax
0x00000000005e4144 : add byte ptr [rax - 0x75], cl ; add eax, 0x41e79c ; call rax
0x00000000005e3dfa : add byte ptr [rax - 0x75], cl ; add eax, 0x41eae6 ; call rax
0x00000000005e3b54 : add byte ptr [rax - 0x75], cl ; add eax, 0x41ed8c ; call rax
0x00000000005e331a : add byte ptr [rax - 0x75], cl ; add eax, 0x41f5be ; call rax
0x00000000005e32f9 : add byte ptr [rax - 0x75], cl ; add eax, 0x41f5e7 ; call rax
0x00000000005e305a : add byte ptr [rax - 0x75], cl ; add eax, 0x41f87e ; call rax
0x00000000005e3039 : add byte ptr [rax - 0x75], cl ; add eax, 0x41f8a7 ; call rax
0x00000000005e2eb5 : add byte ptr [rax - 0x75], cl ; add eax, 0x41fa23 ; call rax
0x00000000005e2e91 : add byte ptr [rax - 0x75], cl ; add eax, 0x41fa4f ; call rax
0x00000000005e2dd9 : add byte ptr [rax - 0x75], cl ; add eax, 0x41faff ; call rax
0x00000000005e2db3 : add byte ptr [rax - 0x75], cl ; add eax, 0x41fb2d ; call rax
0x00000000005e2cfb : add byte ptr [rax - 0x75], cl ; add eax, 0x41fbdd ; call rax
0x00000000005e2cd5 : add byte ptr [rax - 0x75], cl ; add eax, 0x41fc0b ; call rax
0x00000000005e2c1d : add byte ptr [rax - 0x75], cl ; add eax, 0x41fcbb ; call rax
0x00000000005e2bf7 : add byte ptr [rax - 0x75], cl ; add eax, 0x41fce9 ; call rax
0x00000000005e2714 : add byte ptr [rax - 0x75], cl ; add eax, 0x4201cc ; call rax
0x00000000005e26ee : add byte ptr [rax - 0x75], cl ; add eax, 0x4201ea ; call rax
0x00000000005e26ae : add byte ptr [rax - 0x75], cl ; add eax, 0x420232 ; call rax
0x00000000005e25c2 : add byte ptr [rax - 0x75], cl ; add eax, 0x420316 ; call rax
0x00000000005e2582 : add byte ptr [rax - 0x75], cl ; add eax, 0x42035e ; call rax
0x00000000005e24c3 : add byte ptr [rax - 0x75], cl ; add eax, 0x420415 ; call rax
0x00000000005e2483 : add byte ptr [rax - 0x75], cl ; add eax, 0x42045d ; call rax
0x00000000005e23cc : add byte ptr [rax - 0x75], cl ; add eax, 0x42050c ; call rax
0x00000000005e238c : add byte ptr [rax - 0x75], cl ; add eax, 0x420554 ; call rax
0x00000000005e20f3 : add byte ptr [rax - 0x75], cl ; add eax, 0x4207e5 ; call rax
0x00000000005e20b9 : add byte ptr [rax - 0x75], cl ; add eax, 0x420827 ; call rax
0x00000000005e1dea : add byte ptr [rax - 0x75], cl ; add eax, 0x420af6 ; call rax
0x00000000005e1b9d : add byte ptr [rax - 0x75], cl ; add eax, 0x420d3b ; call rax
0x00000000005e1b77 : add byte ptr [rax - 0x75], cl ; add eax, 0x420d69 ; call rax
0x00000000005e18b3 : add byte ptr [rax - 0x75], cl ; add eax, 0x42102d ; call rax
0x00000000005e16f1 : add byte ptr [rax - 0x75], cl ; add eax, 0x4211ef ; call rax
0x00000000005e0f7a : add byte ptr [rax - 0x75], cl ; add eax, 0x42195e ; call rax
0x00000000005e0ec3 : add byte ptr [rax - 0x75], cl ; add eax, 0x421a1d ; call rax
0x00000000005e08da : add byte ptr [rax - 0x75], cl ; add eax, 0x421ffe ; call rax
0x00000000005e0823 : add byte ptr [rax - 0x75], cl ; add eax, 0x4220bd ; call rax
0x00000000005e0249 : add byte ptr [rax - 0x75], cl ; add eax, 0x422697 ; call rax
0x00000000005dfdc9 : add byte ptr [rax - 0x75], cl ; add eax, 0x422b17 ; call rax
0x00000000005dfcd8 : add byte ptr [rax - 0x75], cl ; add eax, 0x422c08 ; call rax
0x00000000005df280 : add byte ptr [rax - 0x75], cl ; add eax, 0x423658 ; call rax
0x00000000005df257 : add byte ptr [rax - 0x75], cl ; add eax, 0x423689 ; call rax
0x00000000005df00a : add byte ptr [rax - 0x75], cl ; add eax, 0x4238ce ; call rax
0x00000000005defe1 : add byte ptr [rax - 0x75], cl ; add eax, 0x4238ff ; call rax
0x00000000005de4f9 : add byte ptr [rax - 0x75], cl ; add eax, 0x4243df ; call rax
0x00000000005de4c9 : add byte ptr [rax - 0x75], cl ; add eax, 0x424417 ; call rax
0x00000000005de411 : add byte ptr [rax - 0x75], cl ; add eax, 0x4244c7 ; call rax
0x00000000005de3df : add byte ptr [rax - 0x75], cl ; add eax, 0x424501 ; call rax
0x00000000005de2b3 : add byte ptr [rax - 0x75], cl ; add eax, 0x424625 ; call rax
0x00000000005de281 : add byte ptr [rax - 0x75], cl ; add eax, 0x42465f ; call rax
0x00000000005de1c9 : add byte ptr [rax - 0x75], cl ; add eax, 0x42470f ; call rax
0x00000000005de197 : add byte ptr [rax - 0x75], cl ; add eax, 0x424749 ; call rax
0x00000000005ddef4 : add byte ptr [rax - 0x75], cl ; add eax, 0x4249ec ; call rax
0x00000000005dda6f : add byte ptr [rax - 0x75], cl ; add eax, 0x424e71 ; call rax
0x00000000005dd881 : add byte ptr [rax - 0x75], cl ; add eax, 0x425057 ; call rax
0x00000000005dd7e6 : add byte ptr [rax - 0x75], cl ; add eax, 0x4250fa ; call rax
0x00000000005dd527 : add byte ptr [rax - 0x75], cl ; add eax, 0x4253b1 ; call rax
0x00000000005dd48c : add byte ptr [rax - 0x75], cl ; add eax, 0x425454 ; call rax
0x00000000005dcf86 : add byte ptr [rax - 0x75], cl ; add eax, 0x425952 ; call rax
0x00000000005dceeb : add byte ptr [rax - 0x75], cl ; add eax, 0x4259f5 ; call rax
0x00000000005dcb04 : add byte ptr [rax - 0x75], cl ; add eax, 0x425dd4 ; call rax
0x00000000005dca6c : add byte ptr [rax - 0x75], cl ; add eax, 0x425e74 ; call rax
0x00000000005dc013 : add byte ptr [rax - 0x75], cl ; add eax, 0x4268cd ; call rax
0x00000000005dbcff : add byte ptr [rax - 0x75], cl ; add eax, 0x426be1 ; call rax
0x00000000005dbb86 : add byte ptr [rax - 0x75], cl ; add eax, 0x426d5a ; call rax
0x00000000005db22f : add byte ptr [rax - 0x75], cl ; add eax, 0x4276a9 ; call rax
0x00000000005db213 : add byte ptr [rax - 0x75], cl ; add eax, 0x4276cd ; call rax
0x00000000005dafc6 : add byte ptr [rax - 0x75], cl ; add eax, 0x427912 ; call rax
0x00000000005dafa5 : add byte ptr [rax - 0x75], cl ; add eax, 0x42793b ; call rax
0x00000000005dad06 : add byte ptr [rax - 0x75], cl ; add eax, 0x427bd2 ; call rax
0x00000000005dace5 : add byte ptr [rax - 0x75], cl ; add eax, 0x427bfb ; call rax
0x00000000005da2b7 : add byte ptr [rax - 0x75], cl ; add eax, 0x428629 ; call rax
0x00000000005da0ab : add byte ptr [rax - 0x75], cl ; add eax, 0x42882d ; call rax
0x00000000005da08f : add byte ptr [rax - 0x75], cl ; add eax, 0x428851 ; call rax
0x00000000005d9e7d : add byte ptr [rax - 0x75], cl ; add eax, 0x428a5b ; call rax
0x00000000005d9e61 : add byte ptr [rax - 0x75], cl ; add eax, 0x428a7f ; call rax
0x00000000005d9c4f : add byte ptr [rax - 0x75], cl ; add eax, 0x428c89 ; call rax
0x00000000005d9c33 : add byte ptr [rax - 0x75], cl ; add eax, 0x428cad ; call rax
0x00000000005d9a19 : add byte ptr [rax - 0x75], cl ; add eax, 0x428ebf ; call rax
0x00000000005d99fd : add byte ptr [rax - 0x75], cl ; add eax, 0x428ee3 ; call rax
0x00000000005d9423 : add byte ptr [rax - 0x75], cl ; add eax, 0x4294bd ; call rax
0x00000000005d934f : add byte ptr [rax - 0x75], cl ; add eax, 0x429591 ; call rax
0x00000000005d8fdd : add byte ptr [rax - 0x75], cl ; add eax, 0x429903 ; call rax
0x00000000005d87b5 : add byte ptr [rax - 0x75], cl ; add eax, 0x42a12b ; call rax
0x00000000005d84db : add byte ptr [rax - 0x75], cl ; add eax, 0x42a3fd ; call rax
0x00000000005d84b5 : add byte ptr [rax - 0x75], cl ; add eax, 0x42a42b ; call rax
0x00000000005d81e3 : add byte ptr [rax - 0x75], cl ; add eax, 0x42a6fd ; call rax
0x00000000005d7fb1 : add byte ptr [rax - 0x75], cl ; add eax, 0x42a92f ; call rax
0x00000000005d7ce3 : add byte ptr [rax - 0x75], cl ; add eax, 0x42abfd ; call rax
0x00000000005d7911 : add byte ptr [rax - 0x75], cl ; add eax, 0x42afcf ; call rax
0x00000000005d76d9 : add byte ptr [rax - 0x75], cl ; add eax, 0x42b1ff ; call rax
0x00000000005d76b3 : add byte ptr [rax - 0x75], cl ; add eax, 0x42b22d ; call rax
0x00000000005d7244 : add byte ptr [rax - 0x75], cl ; add eax, 0x42b69c ; call rax
0x00000000005d6fae : add byte ptr [rax - 0x75], cl ; add eax, 0x42b932 ; call rax
0x00000000005d6d1b : add byte ptr [rax - 0x75], cl ; add eax, 0x42bbc5 ; call rax
0x00000000005d6a0c : add byte ptr [rax - 0x75], cl ; add eax, 0x42bed4 ; call rax
0x00000000005d6796 : add byte ptr [rax - 0x75], cl ; add eax, 0x42c14a ; call rax
0x00000000005d5fd0 : add byte ptr [rax - 0x75], cl ; add eax, 0x42c908 ; call rax
0x00000000005d5faf : add byte ptr [rax - 0x75], cl ; add eax, 0x42c931 ; call rax
0x00000000005d5d1c : add byte ptr [rax - 0x75], cl ; add eax, 0x42cbbc ; call rax
0x00000000005d5cfb : add byte ptr [rax - 0x75], cl ; add eax, 0x42cbe5 ; call rax
0x00000000005d5b77 : add byte ptr [rax - 0x75], cl ; add eax, 0x42cd61 ; call rax
0x00000000005d5b53 : add byte ptr [rax - 0x75], cl ; add eax, 0x42cd8d ; call rax
0x00000000005d5a9b : add byte ptr [rax - 0x75], cl ; add eax, 0x42ce3d ; call rax
0x00000000005d5a75 : add byte ptr [rax - 0x75], cl ; add eax, 0x42ce6b ; call rax
0x00000000005d59bd : add byte ptr [rax - 0x75], cl ; add eax, 0x42cf1b ; call rax
0x00000000005d5997 : add byte ptr [rax - 0x75], cl ; add eax, 0x42cf49 ; call rax
0x00000000005d58df : add byte ptr [rax - 0x75], cl ; add eax, 0x42cff9 ; call rax
0x00000000005d58b9 : add byte ptr [rax - 0x75], cl ; add eax, 0x42d027 ; call rax
0x00000000005d52fa : add byte ptr [rax - 0x75], cl ; add eax, 0x42d5e6 ; call rax
0x00000000005d52d4 : add byte ptr [rax - 0x75], cl ; add eax, 0x42d604 ; call rax
0x00000000005d5294 : add byte ptr [rax - 0x75], cl ; add eax, 0x42d64c ; call rax
0x00000000005d51a8 : add byte ptr [rax - 0x75], cl ; add eax, 0x42d730 ; call rax
0x00000000005d5168 : add byte ptr [rax - 0x75], cl ; add eax, 0x42d778 ; call rax
0x00000000005d50a9 : add byte ptr [rax - 0x75], cl ; add eax, 0x42d82f ; call rax
0x00000000005d5069 : add byte ptr [rax - 0x75], cl ; add eax, 0x42d877 ; call rax
0x00000000005d4fb2 : add byte ptr [rax - 0x75], cl ; add eax, 0x42d926 ; call rax
0x00000000005d4f72 : add byte ptr [rax - 0x75], cl ; add eax, 0x42d96e ; call rax
0x00000000005d4cd9 : add byte ptr [rax - 0x75], cl ; add eax, 0x42dbff ; call rax
0x00000000005d4c9f : add byte ptr [rax - 0x75], cl ; add eax, 0x42dc41 ; call rax
0x00000000005d49e7 : add byte ptr [rax - 0x75], cl ; add eax, 0x42def9 ; call rax
0x00000000005d4825 : add byte ptr [rax - 0x75], cl ; add eax, 0x42e0bb ; call rax
0x00000000005d40d4 : add byte ptr [rax - 0x75], cl ; add eax, 0x42e804 ; call rax
0x00000000005d401d : add byte ptr [rax - 0x75], cl ; add eax, 0x42e8c3 ; call rax
0x00000000005d3a34 : add byte ptr [rax - 0x75], cl ; add eax, 0x42eea4 ; call rax
0x00000000005d397d : add byte ptr [rax - 0x75], cl ; add eax, 0x42ef63 ; call rax
0x00000000005d33a3 : add byte ptr [rax - 0x75], cl ; add eax, 0x42f53d ; call rax
0x00000000005d2f2e : add byte ptr [rax - 0x75], cl ; add eax, 0x42f9b2 ; call rax
0x00000000005d2e48 : add byte ptr [rax - 0x75], cl ; add eax, 0x42fa98 ; call rax
0x00000000005d243b : add byte ptr [rax - 0x75], cl ; add eax, 0x43049d ; call rax
0x00000000005d2415 : add byte ptr [rax - 0x75], cl ; add eax, 0x4304cb ; call rax
0x00000000005d21cf : add byte ptr [rax - 0x75], cl ; add eax, 0x430709 ; call rax
0x00000000005d21a9 : add byte ptr [rax - 0x75], cl ; add eax, 0x430737 ; call rax
0x00000000005d170f : add byte ptr [rax - 0x75], cl ; add eax, 0x4311c9 ; call rax
0x00000000005d16df : add byte ptr [rax - 0x75], cl ; add eax, 0x431201 ; call rax
0x00000000005d1627 : add byte ptr [rax - 0x75], cl ; add eax, 0x4312b1 ; call rax
0x00000000005d15f5 : add byte ptr [rax - 0x75], cl ; add eax, 0x4312eb ; call rax
0x00000000005d14c9 : add byte ptr [rax - 0x75], cl ; add eax, 0x43140f ; call rax
0x00000000005d1497 : add byte ptr [rax - 0x75], cl ; add eax, 0x431449 ; call rax
0x00000000005d13df : add byte ptr [rax - 0x75], cl ; add eax, 0x4314f9 ; call rax
0x00000000005d13ad : add byte ptr [rax - 0x75], cl ; add eax, 0x431533 ; call rax
0x00000000005d1115 : add byte ptr [rax - 0x75], cl ; add eax, 0x4317cb ; call rax
0x00000000005d0c9b : add byte ptr [rax - 0x75], cl ; add eax, 0x431c45 ; call rax
0x00000000005d0ad6 : add byte ptr [rax - 0x75], cl ; add eax, 0x431e02 ; call rax
0x00000000005d0a3b : add byte ptr [rax - 0x75], cl ; add eax, 0x431ea5 ; call rax
0x00000000005d07a9 : add byte ptr [rax - 0x75], cl ; add eax, 0x43212f ; call rax
0x00000000005d070e : add byte ptr [rax - 0x75], cl ; add eax, 0x4321d2 ; call rax
0x00000000005d024a : add byte ptr [rax - 0x75], cl ; add eax, 0x43268e ; call rax
0x00000000005d01af : add byte ptr [rax - 0x75], cl ; add eax, 0x432731 ; call rax
0x00000000005cfe1e : add byte ptr [rax - 0x75], cl ; add eax, 0x432aba ; call rax
0x00000000005cfd86 : add byte ptr [rax - 0x75], cl ; add eax, 0x432b5a ; call rax
0x00000000005cf3a7 : add byte ptr [rax - 0x75], cl ; add eax, 0x433539 ; call rax
0x00000000005cf0a1 : add byte ptr [rax - 0x75], cl ; add eax, 0x43383f ; call rax
0x00000000005cef32 : add byte ptr [rax - 0x75], cl ; add eax, 0x4339ae ; call rax
0x00000000005ce641 : add byte ptr [rax - 0x75], cl ; add eax, 0x434297 ; call rax
0x00000000005ce625 : add byte ptr [rax - 0x75], cl ; add eax, 0x4342bb ; call rax
0x00000000005ce3e4 : add byte ptr [rax - 0x75], cl ; add eax, 0x4344f4 ; call rax
0x00000000005ce3c3 : add byte ptr [rax - 0x75], cl ; add eax, 0x43451d ; call rax
0x00000000005ce130 : add byte ptr [rax - 0x75], cl ; add eax, 0x4347a8 ; call rax
0x00000000005ce10f : add byte ptr [rax - 0x75], cl ; add eax, 0x4347d1 ; call rax
0x00000000005cd761 : add byte ptr [rax - 0x75], cl ; add eax, 0x43517f ; call rax
0x00000000005cd555 : add byte ptr [rax - 0x75], cl ; add eax, 0x435383 ; call rax
0x00000000005cd539 : add byte ptr [rax - 0x75], cl ; add eax, 0x4353a7 ; call rax
0x00000000005cd327 : add byte ptr [rax - 0x75], cl ; add eax, 0x4355b1 ; call rax
0x00000000005cd30b : add byte ptr [rax - 0x75], cl ; add eax, 0x4355d5 ; call rax
0x00000000005cd0f9 : add byte ptr [rax - 0x75], cl ; add eax, 0x4357df ; call rax
0x00000000005cd0dd : add byte ptr [rax - 0x75], cl ; add eax, 0x435803 ; call rax
0x00000000005ccec3 : add byte ptr [rax - 0x75], cl ; add eax, 0x435a15 ; call rax
0x00000000005ccea7 : add byte ptr [rax - 0x75], cl ; add eax, 0x435a39 ; call rax
0x00000000005b078b : add byte ptr [rax - 0x75], cl ; add eax, 0x45214d ; jmp rax
0x00000000005481bb : add byte ptr [rax - 0x75], cl ; add eax, 0x4ba71d ; jmp rax
0x0000000000547c14 : add byte ptr [rax - 0x75], cl ; add eax, 0x4bacc4 ; jmp rax
0x000000000050d94c : add byte ptr [rax - 0x75], cl ; add eax, 0x4f4f8c ; jmp rax
0x00000000004f4145 : add byte ptr [rax - 0x75], cl ; add eax, 0x50e79b ; call rax
0x00000000004f40e5 : add byte ptr [rax - 0x75], cl ; add eax, 0x50e7fb ; call rax
0x00000000004f4085 : add byte ptr [rax - 0x75], cl ; add eax, 0x50e85b ; call rax
0x00000000004f4025 : add byte ptr [rax - 0x75], cl ; add eax, 0x50e8bb ; call rax
0x00000000004f3f00 : add byte ptr [rax - 0x75], cl ; add eax, 0x50e9e0 ; call rax
0x00000000004f3dd7 : add byte ptr [rax - 0x75], cl ; add eax, 0x50eb09 ; call rax
0x00000000004f3c0d : add byte ptr [rax - 0x75], cl ; add eax, 0x50ecd3 ; call rax
0x00000000004f3abc : add byte ptr [rax - 0x75], cl ; add eax, 0x50ee24 ; call rax
0x00000000004f3a6a : add byte ptr [rax - 0x75], cl ; add eax, 0x50ee76 ; call rax
0x00000000004f37bb : add byte ptr [rax - 0x75], cl ; add eax, 0x50f125 ; call rax
0x00000000004f3649 : add byte ptr [rax - 0x75], cl ; add eax, 0x50f297 ; call rax
0x00000000004f34c9 : add byte ptr [rax - 0x75], cl ; add eax, 0x50f417 ; call rax
0x00000000004f346b : add byte ptr [rax - 0x75], cl ; add eax, 0x50f475 ; call rax
0x00000000004f341c : add byte ptr [rax - 0x75], cl ; add eax, 0x50f4c4 ; call rax
0x00000000004f32ce : add byte ptr [rax - 0x75], cl ; add eax, 0x50f612 ; call rax
0x00000000004f31a8 : add byte ptr [rax - 0x75], cl ; add eax, 0x50f738 ; call rax
0x00000000004f3131 : add byte ptr [rax - 0x75], cl ; add eax, 0x50f7af ; call rax
0x00000000004f310f : add byte ptr [rax - 0x75], cl ; add eax, 0x50f7c9 ; call rax
0x00000000004f30cc : add byte ptr [rax - 0x75], cl ; add eax, 0x50f814 ; call rax
0x00000000004f2fec : add byte ptr [rax - 0x75], cl ; add eax, 0x50f8ec ; call rax
0x00000000004f2fa3 : add byte ptr [rax - 0x75], cl ; add eax, 0x50f93d ; call rax
0x00000000004f2ee3 : add byte ptr [rax - 0x75], cl ; add eax, 0x50f9f5 ; call rax
0x00000000004f2e9a : add byte ptr [rax - 0x75], cl ; add eax, 0x50fa46 ; call rax
0x00000000004f28a8 : add byte ptr [rax - 0x75], cl ; add eax, 0x510030 ; call rax
0x00000000004f2746 : add byte ptr [rax - 0x75], cl ; add eax, 0x51019a ; call rax
0x00000000004f259d : add byte ptr [rax - 0x75], cl ; add eax, 0x510343 ; call rax
0x00000000004f2337 : add byte ptr [rax - 0x75], cl ; add eax, 0x5105a1 ; call rax
0x00000000004f22ea : add byte ptr [rax - 0x75], cl ; add eax, 0x5105f6 ; call rax
0x00000000004f18c1 : add byte ptr [rax - 0x75], cl ; add eax, 0x51101f ; call rax
0x00000000004f1556 : add byte ptr [rax - 0x75], cl ; add eax, 0x511382 ; call rax
0x00000000004f1539 : add byte ptr [rax - 0x75], cl ; add eax, 0x5113a7 ; call rax
0x00000000004f138b : add byte ptr [rax - 0x75], cl ; add eax, 0x511555 ; call rax
0x00000000004f12b7 : add byte ptr [rax - 0x75], cl ; add eax, 0x511629 ; call rax
0x00000000004f0b99 : add byte ptr [rax - 0x75], cl ; add eax, 0x511d3f ; call rax
0x00000000004f0b59 : add byte ptr [rax - 0x75], cl ; add eax, 0x511d87 ; call rax
0x00000000004f0aa0 : add byte ptr [rax - 0x75], cl ; add eax, 0x511e38 ; call rax
0x00000000004f0a5d : add byte ptr [rax - 0x75], cl ; add eax, 0x511e83 ; call rax
0x00000000004f0839 : add byte ptr [rax - 0x75], cl ; add eax, 0x51209f ; call rax
0x00000000004f07f9 : add byte ptr [rax - 0x75], cl ; add eax, 0x5120e7 ; call rax
0x00000000004f0762 : add byte ptr [rax - 0x75], cl ; add eax, 0x512176 ; call rax
0x00000000004f0722 : add byte ptr [rax - 0x75], cl ; add eax, 0x5121be ; call rax
0x00000000004f051b : add byte ptr [rax - 0x75], cl ; add eax, 0x5123bd ; call rax
0x00000000004f04db : add byte ptr [rax - 0x75], cl ; add eax, 0x512405 ; call rax
0x00000000004f03a8 : add byte ptr [rax - 0x75], cl ; add eax, 0x512530 ; call rax
0x00000000004f0367 : add byte ptr [rax - 0x75], cl ; add eax, 0x512579 ; call rax
0x00000000004efe09 : add byte ptr [rax - 0x75], cl ; add eax, 0x512ad7 ; call rax
0x00000000004ef605 : add byte ptr [rax - 0x75], cl ; add eax, 0x5132db ; call rax
0x00000000004ef430 : add byte ptr [rax - 0x75], cl ; add eax, 0x5134b0 ; call rax
0x00000000004ec7e9 : add byte ptr [rax - 0x75], cl ; add eax, 0x5160f7 ; call rax
0x00000000004ec6db : add byte ptr [rax - 0x75], cl ; add eax, 0x516205 ; call rax
0x00000000004ec615 : add byte ptr [rax - 0x75], cl ; add eax, 0x5162c3 ; call rax
0x00000000004ec5ad : add byte ptr [rax - 0x75], cl ; add eax, 0x516333 ; call rax
0x00000000004ec4e5 : add byte ptr [rax - 0x75], cl ; add eax, 0x5163f3 ; call rax
0x00000000004ec47d : add byte ptr [rax - 0x75], cl ; add eax, 0x516463 ; call rax
0x00000000004ec29f : add byte ptr [rax - 0x75], cl ; add eax, 0x516641 ; call rax
0x00000000004ec122 : add byte ptr [rax - 0x75], cl ; add eax, 0x5167b6 ; call rax
0x00000000004ec103 : add byte ptr [rax - 0x75], cl ; add eax, 0x5167dd ; call rax
0x00000000004ec04a : add byte ptr [rax - 0x75], cl ; add eax, 0x51688e ; call rax
0x00000000004ec00d : add byte ptr [rax - 0x75], cl ; add eax, 0x5168d3 ; call rax
0x00000000004ebe77 : add byte ptr [rax - 0x75], cl ; add eax, 0x516a69 ; call rax
0x00000000004ebc61 : add byte ptr [rax - 0x75], cl ; add eax, 0x516c7f ; call rax
0x00000000004ebb99 : add byte ptr [rax - 0x75], cl ; add eax, 0x516d3f ; call rax
0x00000000004ebb31 : add byte ptr [rax - 0x75], cl ; add eax, 0x516daf ; call rax
0x00000000004eba1d : add byte ptr [rax - 0x75], cl ; add eax, 0x516ec3 ; call rax
0x00000000004e9694 : add byte ptr [rax - 0x75], cl ; add eax, 0x519244 ; call rax
0x00000000004e9647 : add byte ptr [rax - 0x75], cl ; add eax, 0x519299 ; call rax
0x00000000004e91ce : add byte ptr [rax - 0x75], cl ; add eax, 0x51970a ; call rax
0x00000000004e9181 : add byte ptr [rax - 0x75], cl ; add eax, 0x51975f ; call rax
0x00000000004e8cfe : add byte ptr [rax - 0x75], cl ; add eax, 0x519bda ; call rax
0x00000000004e8cbb : add byte ptr [rax - 0x75], cl ; add eax, 0x519c25 ; call rax
0x00000000004e8449 : add byte ptr [rax - 0x75], cl ; add eax, 0x51a497 ; call rax
0x00000000004e7ec8 : add byte ptr [rax - 0x75], cl ; add eax, 0x51aa10 ; call rax
0x00000000004e7e73 : add byte ptr [rax - 0x75], cl ; add eax, 0x51aa6d ; call rax
0x00000000004e7bfd : add byte ptr [rax - 0x75], cl ; add eax, 0x51acdb ; call rax
0x00000000004e7bba : add byte ptr [rax - 0x75], cl ; add eax, 0x51ad26 ; call rax
0x00000000004e73f6 : add byte ptr [rax - 0x75], cl ; add eax, 0x51b4e2 ; call rax
0x00000000004e73d9 : add byte ptr [rax - 0x75], cl ; add eax, 0x51b507 ; call rax
0x00000000004e72ff : add byte ptr [rax - 0x75], cl ; add eax, 0x51b5e1 ; call rax
0x00000000004e69c7 : add byte ptr [rax - 0x75], cl ; add eax, 0x51bf19 ; call rax
0x00000000004e6302 : add byte ptr [rax - 0x75], cl ; add eax, 0x51c5d6 ; call rax
0x00000000004e6287 : add byte ptr [rax - 0x75], cl ; add eax, 0x51c659 ; call rax
0x00000000004e4711 : add byte ptr [rax - 0x75], cl ; add eax, 0x51e1c7 ; call rax
0x00000000004e46c4 : add byte ptr [rax - 0x75], cl ; add eax, 0x51e21c ; call rax
0x00000000004e388a : add byte ptr [rax - 0x75], cl ; add eax, 0x51f04e ; call rax
0x00000000004e3835 : add byte ptr [rax - 0x75], cl ; add eax, 0x51f0ab ; call rax
0x00000000004e3490 : add byte ptr [rax - 0x75], cl ; add eax, 0x51f448 ; call rax
0x00000000004e344d : add byte ptr [rax - 0x75], cl ; add eax, 0x51f493 ; call rax
0x00000000004e32cd : add byte ptr [rax - 0x75], cl ; add eax, 0x51f613 ; call rax
0x00000000004e2e4f : add byte ptr [rax - 0x75], cl ; add eax, 0x51fa91 ; call rax
0x00000000004e2c87 : add byte ptr [rax - 0x75], cl ; add eax, 0x51fc59 ; call rax
0x00000000004e2a17 : add byte ptr [rax - 0x75], cl ; add eax, 0x51fec1 ; call rax
0x00000000004e2986 : add byte ptr [rax - 0x75], cl ; add eax, 0x51ff5a ; call rax
0x00000000004e1543 : add byte ptr [rax - 0x75], cl ; add eax, 0x52139d ; call rax
0x00000000004e1013 : add byte ptr [rax - 0x75], cl ; add eax, 0x5218c5 ; call rax
0x00000000004e0fc6 : add byte ptr [rax - 0x75], cl ; add eax, 0x52191a ; call rax
0x00000000004ddffc : add byte ptr [rax - 0x75], cl ; add eax, 0x5248dc ; call rax
0x00000000004ddfa7 : add byte ptr [rax - 0x75], cl ; add eax, 0x524939 ; call rax
0x00000000004dd98a : add byte ptr [rax - 0x75], cl ; add eax, 0x524f4e ; call rax
0x00000000004dd935 : add byte ptr [rax - 0x75], cl ; add eax, 0x524fab ; call rax
0x00000000004dd388 : add byte ptr [rax - 0x75], cl ; add eax, 0x525550 ; call rax
0x00000000004dd332 : add byte ptr [rax - 0x75], cl ; add eax, 0x5255ae ; call rax
0x00000000004dcdbe : add byte ptr [rax - 0x75], cl ; add eax, 0x525b1a ; call rax
0x00000000004dcd68 : add byte ptr [rax - 0x75], cl ; add eax, 0x525b78 ; call rax
0x00000000004dbe01 : add byte ptr [rax - 0x75], cl ; add eax, 0x526ad7 ; call rax
0x00000000004dbdac : add byte ptr [rax - 0x75], cl ; add eax, 0x526b34 ; call rax
0x00000000004daede : add byte ptr [rax - 0x75], cl ; add eax, 0x5279fa ; call rax
0x00000000004dae93 : add byte ptr [rax - 0x75], cl ; add eax, 0x527a4d ; call rax
0x00000000004dabc3 : add byte ptr [rax - 0x75], cl ; add eax, 0x527d15 ; call rax
0x00000000004dab47 : add byte ptr [rax - 0x75], cl ; add eax, 0x527d99 ; call rax
0x00000000004d9a90 : add byte ptr [rax - 0x75], cl ; add eax, 0x528e50 ; call rax
0x00000000004d9793 : add byte ptr [rax - 0x75], cl ; add eax, 0x529145 ; call rax
0x00000000004d975b : add byte ptr [rax - 0x75], cl ; add eax, 0x529185 ; call rax
0x00000000004d955f : add byte ptr [rax - 0x75], cl ; add eax, 0x529381 ; call rax
0x00000000004d938f : add byte ptr [rax - 0x75], cl ; add eax, 0x529549 ; call rax
0x00000000004d9357 : add byte ptr [rax - 0x75], cl ; add eax, 0x529589 ; call rax
0x00000000004d903e : add byte ptr [rax - 0x75], cl ; add eax, 0x52989a ; call rax
0x00000000004d8ffb : add byte ptr [rax - 0x75], cl ; add eax, 0x5298e5 ; call rax
0x00000000004d8ea2 : add byte ptr [rax - 0x75], cl ; add eax, 0x529a36 ; call rax
0x00000000004d8e5f : add byte ptr [rax - 0x75], cl ; add eax, 0x529a81 ; call rax
0x00000000004d8da7 : add byte ptr [rax - 0x75], cl ; add eax, 0x529b31 ; call rax
0x00000000004d8d61 : add byte ptr [rax - 0x75], cl ; add eax, 0x529b7f ; call rax
0x00000000004d8ca9 : add byte ptr [rax - 0x75], cl ; add eax, 0x529c2f ; call rax
0x00000000004d8c63 : add byte ptr [rax - 0x75], cl ; add eax, 0x529c7d ; call rax
0x00000000004d8bab : add byte ptr [rax - 0x75], cl ; add eax, 0x529d2d ; call rax
0x00000000004d8b65 : add byte ptr [rax - 0x75], cl ; add eax, 0x529d7b ; call rax
0x00000000004d8aad : add byte ptr [rax - 0x75], cl ; add eax, 0x529e2b ; call rax
0x00000000004d8a67 : add byte ptr [rax - 0x75], cl ; add eax, 0x529e79 ; call rax
0x00000000004d7c84 : add byte ptr [rax - 0x75], cl ; add eax, 0x52ac54 ; call rax
0x00000000004d7c17 : add byte ptr [rax - 0x75], cl ; add eax, 0x52acc9 ; call rax
0x00000000004d7b0c : add byte ptr [rax - 0x75], cl ; add eax, 0x52adcc ; call rax
0x00000000004d7abd : add byte ptr [rax - 0x75], cl ; add eax, 0x52ae23 ; call rax
0x00000000004d6f2a : add byte ptr [rax - 0x75], cl ; add eax, 0x52b9ae ; call rax
0x00000000004d6df1 : add byte ptr [rax - 0x75], cl ; add eax, 0x52baef ; call rax
0x00000000004d6d2a : add byte ptr [rax - 0x75], cl ; add eax, 0x52bbae ; call rax
0x00000000004d6cd1 : add byte ptr [rax - 0x75], cl ; add eax, 0x52bc0f ; call rax
0x00000000004d6c17 : add byte ptr [rax - 0x75], cl ; add eax, 0x52bcc1 ; call rax
0x00000000004d6bd1 : add byte ptr [rax - 0x75], cl ; add eax, 0x52bd0f ; call rax
0x00000000004d65ed : add byte ptr [rax - 0x75], cl ; add eax, 0x52c2eb ; call rax
0x00000000004d65aa : add byte ptr [rax - 0x75], cl ; add eax, 0x52c336 ; call rax
0x00000000004d645d : add byte ptr [rax - 0x75], cl ; add eax, 0x52c47b ; call rax
0x00000000004d641a : add byte ptr [rax - 0x75], cl ; add eax, 0x52c4c6 ; call rax
0x00000000004d6043 : add byte ptr [rax - 0x75], cl ; add eax, 0x52c895 ; call rax
0x00000000004d5f6b : add byte ptr [rax - 0x75], cl ; add eax, 0x52c975 ; call rax
0x00000000004d5736 : add byte ptr [rax - 0x75], cl ; add eax, 0x52d1a2 ; call rax
0x00000000004d56ef : add byte ptr [rax - 0x75], cl ; add eax, 0x52d1f1 ; call rax
0x00000000004d552d : add byte ptr [rax - 0x75], cl ; add eax, 0x52d3ab ; call rax
0x00000000004d54cb : add byte ptr [rax - 0x75], cl ; add eax, 0x52d415 ; call rax
0x00000000004d3e5d : add byte ptr [rax - 0x75], cl ; add eax, 0x52ea7b ; call rax
0x00000000004d3e1a : add byte ptr [rax - 0x75], cl ; add eax, 0x52eac6 ; call rax
0x00000000004d3d30 : add byte ptr [rax - 0x75], cl ; add eax, 0x52eba8 ; call rax
0x00000000004d3ced : add byte ptr [rax - 0x75], cl ; add eax, 0x52ebf3 ; call rax
0x00000000004d3c08 : add byte ptr [rax - 0x75], cl ; add eax, 0x52ecd0 ; call rax
0x00000000004d3bc5 : add byte ptr [rax - 0x75], cl ; add eax, 0x52ed1b ; call rax
0x00000000004d3adb : add byte ptr [rax - 0x75], cl ; add eax, 0x52edfd ; call rax
0x00000000004d3a98 : add byte ptr [rax - 0x75], cl ; add eax, 0x52ee48 ; call rax
0x00000000004d39a9 : add byte ptr [rax - 0x75], cl ; add eax, 0x52ef2f ; call rax
0x00000000004d3966 : add byte ptr [rax - 0x75], cl ; add eax, 0x52ef7a ; call rax
0x00000000004d3126 : add byte ptr [rax - 0x75], cl ; add eax, 0x52f7ba ; call rax
0x00000000004d2456 : add byte ptr [rax - 0x75], cl ; add eax, 0x530482 ; call rax
0x00000000004d2413 : add byte ptr [rax - 0x75], cl ; add eax, 0x5304cd ; call rax
0x00000000004d2121 : add byte ptr [rax - 0x75], cl ; add eax, 0x5307b7 ; call rax
0x00000000004d20de : add byte ptr [rax - 0x75], cl ; add eax, 0x530802 ; call rax
0x00000000004d1d08 : add byte ptr [rax - 0x75], cl ; add eax, 0x530bd8 ; call rax
0x00000000004d11a6 : add byte ptr [rax - 0x75], cl ; add eax, 0x53173a ; call rax
0x00000000004d0e30 : add byte ptr [rax - 0x75], cl ; add eax, 0x531ab0 ; call rax
0x00000000004d0a1c : add byte ptr [rax - 0x75], cl ; add eax, 0x531ec4 ; call rax
0x00000000004cd9fb : add byte ptr [rax - 0x75], cl ; add eax, 0x534edd ; call rax
0x00000000004cd9b4 : add byte ptr [rax - 0x75], cl ; add eax, 0x534f2c ; call rax
0x00000000004cd439 : add byte ptr [rax - 0x75], cl ; add eax, 0x53549f ; call rax
0x00000000004cd409 : add byte ptr [rax - 0x75], cl ; add eax, 0x5354d7 ; call rax
0x00000000004cd289 : add byte ptr [rax - 0x75], cl ; add eax, 0x535657 ; call rax
0x00000000004cd191 : add byte ptr [rax - 0x75], cl ; add eax, 0x535747 ; call rax
0x00000000004cd175 : add byte ptr [rax - 0x75], cl ; add eax, 0x53576b ; call rax
0x00000000004cd00e : add byte ptr [rax - 0x75], cl ; add eax, 0x5358ca ; call rax
0x00000000004ccfaf : add byte ptr [rax - 0x75], cl ; add eax, 0x535931 ; call rax
0x00000000004cce96 : add byte ptr [rax - 0x75], cl ; add eax, 0x535a42 ; call rax
0x00000000004cce48 : add byte ptr [rax - 0x75], cl ; add eax, 0x535a98 ; call rax
0x00000000004cc770 : add byte ptr [rax - 0x75], cl ; add eax, 0x536168 ; call rax
0x00000000004cc71b : add byte ptr [rax - 0x75], cl ; add eax, 0x5361c5 ; call rax
0x00000000004cc285 : add byte ptr [rax - 0x75], cl ; add eax, 0x536653 ; call rax
0x00000000004cc245 : add byte ptr [rax - 0x75], cl ; add eax, 0x53669b ; call rax
0x00000000004cc168 : add byte ptr [rax - 0x75], cl ; add eax, 0x536770 ; call rax
0x00000000004cc125 : add byte ptr [rax - 0x75], cl ; add eax, 0x5367bb ; call rax
0x00000000004cbc53 : add byte ptr [rax - 0x75], cl ; add eax, 0x536c85 ; call rax
0x00000000004cbc10 : add byte ptr [rax - 0x75], cl ; add eax, 0x536cd0 ; call rax
0x00000000004cb77c : add byte ptr [rax - 0x75], cl ; add eax, 0x53715c ; call rax
0x00000000004cb739 : add byte ptr [rax - 0x75], cl ; add eax, 0x5371a7 ; call rax
0x00000000004ca7d7 : add byte ptr [rax - 0x75], cl ; add eax, 0x538101 ; call rax
0x00000000004ca794 : add byte ptr [rax - 0x75], cl ; add eax, 0x53814c ; call rax
0x00000000004ca05d : add byte ptr [rax - 0x75], cl ; add eax, 0x538883 ; call rax
0x00000000004c99ab : add byte ptr [rax - 0x75], cl ; add eax, 0x538f35 ; call rax
0x00000000004c98d7 : add byte ptr [rax - 0x75], cl ; add eax, 0x539009 ; call rax
0x00000000004c96f2 : add byte ptr [rax - 0x75], cl ; add eax, 0x5391ee ; call rax
0x00000000004c9626 : add byte ptr [rax - 0x75], cl ; add eax, 0x5392ba ; call rax
0x00000000004c937f : add byte ptr [rax - 0x75], cl ; add eax, 0x539561 ; call rax
0x00000000004c91eb : add byte ptr [rax - 0x75], cl ; add eax, 0x5396ed ; call rax
0x00000000004c91ab : add byte ptr [rax - 0x75], cl ; add eax, 0x539735 ; call rax
0x00000000004c90f2 : add byte ptr [rax - 0x75], cl ; add eax, 0x5397e6 ; call rax
0x00000000004c90af : add byte ptr [rax - 0x75], cl ; add eax, 0x539831 ; call rax
0x00000000004c8fe9 : add byte ptr [rax - 0x75], cl ; add eax, 0x5398ef ; call rax
0x00000000004c8f93 : add byte ptr [rax - 0x75], cl ; add eax, 0x53994d ; call rax
0x00000000004c8ed8 : add byte ptr [rax - 0x75], cl ; add eax, 0x539a00 ; call rax
0x00000000004c8ebb : add byte ptr [rax - 0x75], cl ; add eax, 0x539a25 ; call rax
0x00000000004c8cf4 : add byte ptr [rax - 0x75], cl ; add eax, 0x539be4 ; call rax
0x00000000004c8cac : add byte ptr [rax - 0x75], cl ; add eax, 0x539c34 ; call rax
0x00000000004c86b9 : add byte ptr [rax - 0x75], cl ; add eax, 0x53a227 ; call rax
0x00000000004c8664 : add byte ptr [rax - 0x75], cl ; add eax, 0x53a274 ; call rax
0x00000000004c8621 : add byte ptr [rax - 0x75], cl ; add eax, 0x53a2bf ; call rax
0x00000000004c850e : add byte ptr [rax - 0x75], cl ; add eax, 0x53a3d2 ; call rax
0x00000000004c8419 : add byte ptr [rax - 0x75], cl ; add eax, 0x53a4bf ; call rax
0x00000000004c83d2 : add byte ptr [rax - 0x75], cl ; add eax, 0x53a50e ; call rax
0x00000000004c7f77 : add byte ptr [rax - 0x75], cl ; add eax, 0x53a969 ; call rax
0x00000000004c7922 : add byte ptr [rax - 0x75], cl ; add eax, 0x53afbe ; call rax
0x00000000004c782d : add byte ptr [rax - 0x75], cl ; add eax, 0x53b0ab ; call rax
0x00000000004c7811 : add byte ptr [rax - 0x75], cl ; add eax, 0x53b0cf ; call rax
0x00000000004c6a93 : add byte ptr [rax - 0x75], cl ; add eax, 0x53be45 ; call rax
0x00000000004c6a77 : add byte ptr [rax - 0x75], cl ; add eax, 0x53be69 ; call rax
0x00000000004c5fe2 : add byte ptr [rax - 0x75], cl ; add eax, 0x53c8f6 ; call rax
0x00000000004c5f7b : add byte ptr [rax - 0x75], cl ; add eax, 0x53c965 ; call rax
0x00000000004c59d8 : add byte ptr [rax - 0x75], cl ; add eax, 0x53cf00 ; call rax
0x00000000004c5955 : add byte ptr [rax - 0x75], cl ; add eax, 0x53cf8b ; call rax
0x00000000004c589b : add byte ptr [rax - 0x75], cl ; add eax, 0x53d03d ; call rax
0x00000000004c585b : add byte ptr [rax - 0x75], cl ; add eax, 0x53d085 ; call rax
0x00000000004c56b5 : add byte ptr [rax - 0x75], cl ; add eax, 0x53d223 ; call rax
0x00000000004c5674 : add byte ptr [rax - 0x75], cl ; add eax, 0x53d26c ; call rax
0x00000000004c551d : add byte ptr [rax - 0x75], cl ; add eax, 0x53d3bb ; call rax
0x00000000004c54dd : add byte ptr [rax - 0x75], cl ; add eax, 0x53d403 ; call rax
0x00000000004c5302 : add byte ptr [rax - 0x75], cl ; add eax, 0x53d5d6 ; call rax
0x00000000004c52c2 : add byte ptr [rax - 0x75], cl ; add eax, 0x53d61e ; call rax
0x00000000004c511b : add byte ptr [rax - 0x75], cl ; add eax, 0x53d7bd ; call rax
0x00000000004c50db : add byte ptr [rax - 0x75], cl ; add eax, 0x53d805 ; call rax
0x00000000004c4f28 : add byte ptr [rax - 0x75], cl ; add eax, 0x53d9b0 ; call rax
0x00000000004c4ee8 : add byte ptr [rax - 0x75], cl ; add eax, 0x53d9f8 ; call rax
0x00000000004c4d73 : add byte ptr [rax - 0x75], cl ; add eax, 0x53db65 ; call rax
0x00000000004c4d33 : add byte ptr [rax - 0x75], cl ; add eax, 0x53dbad ; call rax
0x00000000004c4b8c : add byte ptr [rax - 0x75], cl ; add eax, 0x53dd4c ; call rax
0x00000000004c4b4b : add byte ptr [rax - 0x75], cl ; add eax, 0x53dd95 ; call rax
0x00000000004c49e5 : add byte ptr [rax - 0x75], cl ; add eax, 0x53def3 ; call rax
0x00000000004c49a5 : add byte ptr [rax - 0x75], cl ; add eax, 0x53df3b ; call rax
0x00000000004c44e7 : add byte ptr [rax - 0x75], cl ; add eax, 0x53e3f1 ; call rax
0x00000000004c44a7 : add byte ptr [rax - 0x75], cl ; add eax, 0x53e439 ; call rax
0x00000000004c41a5 : add byte ptr [rax - 0x75], cl ; add eax, 0x53e733 ; call rax
0x00000000004c4165 : add byte ptr [rax - 0x75], cl ; add eax, 0x53e77b ; call rax
0x00000000004c3b3c : add byte ptr [rax - 0x75], cl ; add eax, 0x53ed9c ; call rax
0x00000000004c3afc : add byte ptr [rax - 0x75], cl ; add eax, 0x53ede4 ; call rax
0x00000000004c3683 : add byte ptr [rax - 0x75], cl ; add eax, 0x53f255 ; call rax
0x00000000004c3667 : add byte ptr [rax - 0x75], cl ; add eax, 0x53f279 ; call rax
0x00000000004c3425 : add byte ptr [rax - 0x75], cl ; add eax, 0x53f4b3 ; call rax
0x00000000004c33e5 : add byte ptr [rax - 0x75], cl ; add eax, 0x53f4fb ; call rax
0x00000000004c332c : add byte ptr [rax - 0x75], cl ; add eax, 0x53f5ac ; call rax
0x00000000004c330f : add byte ptr [rax - 0x75], cl ; add eax, 0x53f5d1 ; call rax
0x00000000004c3131 : add byte ptr [rax - 0x75], cl ; add eax, 0x53f7a7 ; call rax
0x00000000004c30ec : add byte ptr [rax - 0x75], cl ; add eax, 0x53f7f4 ; call rax
0x00000000004c2b4c : add byte ptr [rax - 0x75], cl ; add eax, 0x53fd8c ; call rax
0x00000000004c2acb : add byte ptr [rax - 0x75], cl ; add eax, 0x53fe15 ; call rax
0x00000000004c27cd : add byte ptr [rax - 0x75], cl ; add eax, 0x54010b ; call rax
0x00000000004c278a : add byte ptr [rax - 0x75], cl ; add eax, 0x540156 ; call rax
0x00000000004c2467 : add byte ptr [rax - 0x75], cl ; add eax, 0x540471 ; call rax
0x00000000004c244b : add byte ptr [rax - 0x75], cl ; add eax, 0x540495 ; call rax
0x00000000004c2259 : add byte ptr [rax - 0x75], cl ; add eax, 0x54067f ; call rax
0x00000000004c223d : add byte ptr [rax - 0x75], cl ; add eax, 0x5406a3 ; call rax
0x00000000004c198b : add byte ptr [rax - 0x75], cl ; add eax, 0x540f4d ; call rax
0x00000000004c196f : add byte ptr [rax - 0x75], cl ; add eax, 0x540f71 ; call rax
0x00000000004c186f : add byte ptr [rax - 0x75], cl ; add eax, 0x541071 ; call rax
0x00000000004c17b6 : add byte ptr [rax - 0x75], cl ; add eax, 0x541122 ; call rax
0x00000000004c1799 : add byte ptr [rax - 0x75], cl ; add eax, 0x541147 ; call rax
0x00000000004c166e : add byte ptr [rax - 0x75], cl ; add eax, 0x54126a ; call rax
0x00000000004c15ef : add byte ptr [rax - 0x75], cl ; add eax, 0x5412f1 ; call rax
0x00000000004c10c6 : add byte ptr [rax - 0x75], cl ; add eax, 0x541812 ; call rax
0x00000000004c1078 : add byte ptr [rax - 0x75], cl ; add eax, 0x541868 ; call rax
0x00000000004c0b3c : add byte ptr [rax - 0x75], cl ; add eax, 0x541d9c ; call rax
0x00000000004c0ad6 : add byte ptr [rax - 0x75], cl ; add eax, 0x541e0a ; call rax
0x00000000004c044d : add byte ptr [rax - 0x75], cl ; add eax, 0x54248b ; call rax
0x00000000004c0431 : add byte ptr [rax - 0x75], cl ; add eax, 0x5424af ; call rax
0x00000000004c0331 : add byte ptr [rax - 0x75], cl ; add eax, 0x5425af ; call rax
0x00000000004c0278 : add byte ptr [rax - 0x75], cl ; add eax, 0x542660 ; call rax
0x00000000004c025b : add byte ptr [rax - 0x75], cl ; add eax, 0x542685 ; call rax
0x00000000004c0130 : add byte ptr [rax - 0x75], cl ; add eax, 0x5427a8 ; call rax
0x00000000004c00b1 : add byte ptr [rax - 0x75], cl ; add eax, 0x54282f ; call rax
0x00000000004bfab9 : add byte ptr [rax - 0x75], cl ; add eax, 0x542e1f ; call rax
0x00000000004bfa6b : add byte ptr [rax - 0x75], cl ; add eax, 0x542e75 ; call rax
0x00000000004bf606 : add byte ptr [rax - 0x75], cl ; add eax, 0x5432d2 ; call rax
0x00000000004bf5a0 : add byte ptr [rax - 0x75], cl ; add eax, 0x543340 ; call rax
0x00000000004bf140 : add byte ptr [rax - 0x75], cl ; add eax, 0x543798 ; call rax
0x00000000004bf0f9 : add byte ptr [rax - 0x75], cl ; add eax, 0x5437e7 ; call rax
0x00000000004beed2 : add byte ptr [rax - 0x75], cl ; add eax, 0x543a06 ; call rax
0x00000000004bee8f : add byte ptr [rax - 0x75], cl ; add eax, 0x543a51 ; call rax
0x00000000004bedd7 : add byte ptr [rax - 0x75], cl ; add eax, 0x543b01 ; call rax
0x00000000004bedbb : add byte ptr [rax - 0x75], cl ; add eax, 0x543b25 ; call rax
0x00000000004becbb : add byte ptr [rax - 0x75], cl ; add eax, 0x543c25 ; call rax
0x00000000004bec02 : add byte ptr [rax - 0x75], cl ; add eax, 0x543cd6 ; call rax
0x00000000004bebe5 : add byte ptr [rax - 0x75], cl ; add eax, 0x543cfb ; call rax
0x00000000004beaba : add byte ptr [rax - 0x75], cl ; add eax, 0x543e1e ; call rax
0x00000000004bea3b : add byte ptr [rax - 0x75], cl ; add eax, 0x543ea5 ; call rax
0x00000000004be444 : add byte ptr [rax - 0x75], cl ; add eax, 0x544494 ; call rax
0x00000000004be3f6 : add byte ptr [rax - 0x75], cl ; add eax, 0x5444ea ; call rax
0x00000000004bdf2e : add byte ptr [rax - 0x75], cl ; add eax, 0x5449aa ; call rax
0x00000000004bdec8 : add byte ptr [rax - 0x75], cl ; add eax, 0x544a18 ; call rax
0x00000000004bda68 : add byte ptr [rax - 0x75], cl ; add eax, 0x544e70 ; call rax
0x00000000004bda21 : add byte ptr [rax - 0x75], cl ; add eax, 0x544ebf ; call rax
0x00000000004bd82c : add byte ptr [rax - 0x75], cl ; add eax, 0x5450ac ; call rax
0x00000000004bd7e9 : add byte ptr [rax - 0x75], cl ; add eax, 0x5450f7 ; call rax
0x00000000004b9175 : add byte ptr [rax - 0x75], cl ; add eax, 0x54976b ; call rax
0x00000000004b8d11 : add byte ptr [rax - 0x75], cl ; add eax, 0x549bcf ; call rax
0x00000000004b8549 : add byte ptr [rax - 0x75], cl ; add eax, 0x54a397 ; call rax
0x00000000004b79a3 : add byte ptr [rax - 0x75], cl ; add eax, 0x54af3d ; call rax
0x00000000004b6f0f : add byte ptr [rax - 0x75], cl ; add eax, 0x54b9d1 ; call rax
0x00000000004b6aab : add byte ptr [rax - 0x75], cl ; add eax, 0x54be35 ; call rax
0x00000000004b62e3 : add byte ptr [rax - 0x75], cl ; add eax, 0x54c5fd ; call rax
0x00000000004b573d : add byte ptr [rax - 0x75], cl ; add eax, 0x54d1a3 ; call rax
0x00000000004b330d : add byte ptr [rax - 0x75], cl ; add eax, 0x54f5cb ; call rax
0x00000000004b32f1 : add byte ptr [rax - 0x75], cl ; add eax, 0x54f5ef ; call rax
0x00000000004b26a7 : add byte ptr [rax - 0x75], cl ; add eax, 0x550239 ; call rax
0x00000000004b255e : add byte ptr [rax - 0x75], cl ; add eax, 0x55037a ; call rax
0x00000000004b2541 : add byte ptr [rax - 0x75], cl ; add eax, 0x55039f ; call rax
0x00000000004b236c : add byte ptr [rax - 0x75], cl ; add eax, 0x55056c ; call rax
0x00000000004b2322 : add byte ptr [rax - 0x75], cl ; add eax, 0x5505be ; call rax
0x00000000004b1ca5 : add byte ptr [rax - 0x75], cl ; add eax, 0x550c3b ; call rax
0x00000000004b1b81 : add byte ptr [rax - 0x75], cl ; add eax, 0x550d5f ; call rax
0x00000000004b1aa7 : add byte ptr [rax - 0x75], cl ; add eax, 0x550e39 ; call rax
0x00000000004b12af : add byte ptr [rax - 0x75], cl ; add eax, 0x551631 ; call rax
0x00000000004b0486 : add byte ptr [rax - 0x75], cl ; add eax, 0x552452 ; call rax
0x00000000004b0433 : add byte ptr [rax - 0x75], cl ; add eax, 0x5524ad ; call rax
0x00000000004b029d : add byte ptr [rax - 0x75], cl ; add eax, 0x55263b ; call rax
0x00000000004b01d5 : add byte ptr [rax - 0x75], cl ; add eax, 0x55270b ; call rax
0x00000000004b00e9 : add byte ptr [rax - 0x75], cl ; add eax, 0x5527ef ; call rax
0x00000000004b0093 : add byte ptr [rax - 0x75], cl ; add eax, 0x55284d ; call rax
0x00000000004af727 : add byte ptr [rax - 0x75], cl ; add eax, 0x5531b1 ; call rax
0x00000000004af6b2 : add byte ptr [rax - 0x75], cl ; add eax, 0x55322e ; call rax
0x00000000004af05b : add byte ptr [rax - 0x75], cl ; add eax, 0x55387d ; call rax
0x00000000004af018 : add byte ptr [rax - 0x75], cl ; add eax, 0x5538c8 ; call rax
0x00000000004aecf7 : add byte ptr [rax - 0x75], cl ; add eax, 0x553be9 ; call rax
0x00000000004ae927 : add byte ptr [rax - 0x75], cl ; add eax, 0x553fb1 ; call rax
0x00000000004ae8f9 : add byte ptr [rax - 0x75], cl ; add eax, 0x553fe7 ; call rax
0x00000000004ae747 : add byte ptr [rax - 0x75], cl ; add eax, 0x554191 ; call rax
0x00000000004ae707 : add byte ptr [rax - 0x75], cl ; add eax, 0x5541d9 ; call rax
0x00000000004ae62a : add byte ptr [rax - 0x75], cl ; add eax, 0x5542ae ; call rax
0x00000000004ae5e7 : add byte ptr [rax - 0x75], cl ; add eax, 0x5542f9 ; call rax
0x00000000004adb22 : add byte ptr [rax - 0x75], cl ; add eax, 0x554dbe ; call rax
0x00000000004ada97 : add byte ptr [rax - 0x75], cl ; add eax, 0x554e41 ; call rax
0x00000000004ada54 : add byte ptr [rax - 0x75], cl ; add eax, 0x554e8c ; call rax
0x00000000004ad782 : add byte ptr [rax - 0x75], cl ; add eax, 0x555156 ; call rax
0x00000000004ad73f : add byte ptr [rax - 0x75], cl ; add eax, 0x5551a1 ; call rax
0x00000000004ad40a : add byte ptr [rax - 0x75], cl ; add eax, 0x5554ce ; call rax
0x00000000004ad3ed : add byte ptr [rax - 0x75], cl ; add eax, 0x5554f3 ; call rax
0x00000000004a8a02 : add byte ptr [rax - 0x75], cl ; add eax, 0x559ede ; call rax
0x00000000004a33ad : add byte ptr [rax - 0x75], cl ; add eax, 0x55f533 ; call rax
0x00000000004a2f49 : add byte ptr [rax - 0x75], cl ; add eax, 0x55f997 ; call rax
0x00000000004a2781 : add byte ptr [rax - 0x75], cl ; add eax, 0x56015f ; call rax
0x00000000004a1bdb : add byte ptr [rax - 0x75], cl ; add eax, 0x560d05 ; call rax
0x00000000004a1105 : add byte ptr [rax - 0x75], cl ; add eax, 0x5617db ; call rax
0x00000000004a0a00 : add byte ptr [rax - 0x75], cl ; add eax, 0x561ed8 ; call rax
0x00000000004a09df : add byte ptr [rax - 0x75], cl ; add eax, 0x561f01 ; call rax
0x00000000004a06f4 : add byte ptr [rax - 0x75], cl ; add eax, 0x5621e4 ; call rax
0x00000000004a06d3 : add byte ptr [rax - 0x75], cl ; add eax, 0x56220d ; call rax
0x000000000049fdc7 : add byte ptr [rax - 0x75], cl ; add eax, 0x562b19 ; call rax
0x000000000049fc05 : add byte ptr [rax - 0x75], cl ; add eax, 0x562cdb ; call rax
0x000000000049f6e6 : add byte ptr [rax - 0x75], cl ; add eax, 0x5631f2 ; call rax
0x000000000049f62f : add byte ptr [rax - 0x75], cl ; add eax, 0x5632b1 ; call rax
0x000000000049f1a9 : add byte ptr [rax - 0x75], cl ; add eax, 0x563737 ; call rax
0x000000000049d213 : add byte ptr [rax - 0x75], cl ; add eax, 0x5656c5 ; call rax
0x000000000049d1f7 : add byte ptr [rax - 0x75], cl ; add eax, 0x5656e9 ; call rax
0x000000000049cf0a : add byte ptr [rax - 0x75], cl ; add eax, 0x5659ce ; call rax
0x000000000049cee9 : add byte ptr [rax - 0x75], cl ; add eax, 0x5659f7 ; call rax
0x000000000049cbfe : add byte ptr [rax - 0x75], cl ; add eax, 0x565cda ; call rax
0x000000000049cbdd : add byte ptr [rax - 0x75], cl ; add eax, 0x565d03 ; call rax
0x000000000049c19f : add byte ptr [rax - 0x75], cl ; add eax, 0x566741 ; call rax
0x000000000049bfc7 : add byte ptr [rax - 0x75], cl ; add eax, 0x566919 ; call rax
0x000000000049bbd9 : add byte ptr [rax - 0x75], cl ; add eax, 0x566d07 ; call rax
0x000000000049a84d : add byte ptr [rax - 0x75], cl ; add eax, 0x568093 ; call rax
0x000000000049a12d : add byte ptr [rax - 0x75], cl ; add eax, 0x5687b3 ; call rax
0x00000000004993d6 : add byte ptr [rax - 0x75], cl ; add eax, 0x569502 ; call rax
0x0000000000499391 : add byte ptr [rax - 0x75], cl ; add eax, 0x56954f ; call rax
0x0000000000499288 : add byte ptr [rax - 0x75], cl ; add eax, 0x569650 ; call rax
0x0000000000499245 : add byte ptr [rax - 0x75], cl ; add eax, 0x56969b ; call rax
0x0000000000498eff : add byte ptr [rax - 0x75], cl ; add eax, 0x5699d9 ; call rax
0x0000000000498eb7 : add byte ptr [rax - 0x75], cl ; add eax, 0x569a29 ; call rax
0x0000000000498c83 : add byte ptr [rax - 0x75], cl ; add eax, 0x569c55 ; call rax
0x0000000000498c40 : add byte ptr [rax - 0x75], cl ; add eax, 0x569ca0 ; call rax
0x000000000049689e : add byte ptr [rax - 0x75], cl ; add eax, 0x56c03a ; call rax
0x0000000000496859 : add byte ptr [rax - 0x75], cl ; add eax, 0x56c087 ; call rax
0x0000000000496472 : add byte ptr [rax - 0x75], cl ; add eax, 0x56c466 ; call rax
0x000000000049642e : add byte ptr [rax - 0x75], cl ; add eax, 0x56c4b2 ; call rax
0x0000000000493463 : add byte ptr [rax - 0x75], cl ; add eax, 0x56f47d ; call rax
0x0000000000492c4e : add byte ptr [rax - 0x75], cl ; add eax, 0x56fc8a ; call rax
0x0000000000492c15 : add byte ptr [rax - 0x75], cl ; add eax, 0x56fccb ; call rax
0x0000000000492b0b : add byte ptr [rax - 0x75], cl ; add eax, 0x56fdcd ; call rax
0x0000000000492acb : add byte ptr [rax - 0x75], cl ; add eax, 0x56fe15 ; call rax
0x00000000004929c2 : add byte ptr [rax - 0x75], cl ; add eax, 0x56ff16 ; call rax
0x000000000049297f : add byte ptr [rax - 0x75], cl ; add eax, 0x56ff61 ; call rax
0x0000000000492852 : add byte ptr [rax - 0x75], cl ; add eax, 0x570086 ; call rax
0x000000000049280f : add byte ptr [rax - 0x75], cl ; add eax, 0x5700d1 ; call rax
0x00000000004923a8 : add byte ptr [rax - 0x75], cl ; add eax, 0x570530 ; call rax
0x0000000000492365 : add byte ptr [rax - 0x75], cl ; add eax, 0x57057b ; call rax
0x0000000000492055 : add byte ptr [rax - 0x75], cl ; add eax, 0x570883 ; call rax
0x0000000000492012 : add byte ptr [rax - 0x75], cl ; add eax, 0x5708ce ; call rax
0x0000000000491b88 : add byte ptr [rax - 0x75], cl ; add eax, 0x570d50 ; call rax
0x0000000000491b45 : add byte ptr [rax - 0x75], cl ; add eax, 0x570d9b ; call rax
0x00000000004917a8 : add byte ptr [rax - 0x75], cl ; add eax, 0x571130 ; call rax
0x0000000000491767 : add byte ptr [rax - 0x75], cl ; add eax, 0x571179 ; call rax
0x00000000004915b2 : add byte ptr [rax - 0x75], cl ; add eax, 0x571326 ; call rax
0x000000000049155d : add byte ptr [rax - 0x75], cl ; add eax, 0x571383 ; call rax
0x00000000004912bd : add byte ptr [rax - 0x75], cl ; add eax, 0x57161b ; call rax
0x000000000049127a : add byte ptr [rax - 0x75], cl ; add eax, 0x571666 ; call rax
0x0000000000490f9a : add byte ptr [rax - 0x75], cl ; add eax, 0x57193e ; call rax
0x0000000000490f57 : add byte ptr [rax - 0x75], cl ; add eax, 0x571989 ; call rax
0x0000000000490d4d : add byte ptr [rax - 0x75], cl ; add eax, 0x571b8b ; call rax
0x0000000000490cf9 : add byte ptr [rax - 0x75], cl ; add eax, 0x571be7 ; call rax
0x000000000049093b : add byte ptr [rax - 0x75], cl ; add eax, 0x571fa5 ; call rax
0x0000000000490552 : add byte ptr [rax - 0x75], cl ; add eax, 0x57238e ; call rax
0x000000000048fe45 : add byte ptr [rax - 0x75], cl ; add eax, 0x572a93 ; call rax
0x000000000048fdf9 : add byte ptr [rax - 0x75], cl ; add eax, 0x572ae7 ; call rax
0x000000000048fce1 : add byte ptr [rax - 0x75], cl ; add eax, 0x572bf7 ; call rax
0x000000000048fc8f : add byte ptr [rax - 0x75], cl ; add eax, 0x572c51 ; call rax
0x000000000048ee84 : add byte ptr [rax - 0x75], cl ; add eax, 0x573a54 ; call rax
0x000000000048ee37 : add byte ptr [rax - 0x75], cl ; add eax, 0x573aa9 ; call rax
0x000000000048dc19 : add byte ptr [rax - 0x75], cl ; add eax, 0x574cc7 ; call rax
0x000000000048dafc : add byte ptr [rax - 0x75], cl ; add eax, 0x574ddc ; call rax
0x000000000048dadf : add byte ptr [rax - 0x75], cl ; add eax, 0x574e01 ; call rax
0x000000000048d9c9 : add byte ptr [rax - 0x75], cl ; add eax, 0x574f0f ; call rax
0x000000000048d96f : add byte ptr [rax - 0x75], cl ; add eax, 0x574f71 ; call rax
0x000000000048d6e4 : add byte ptr [rax - 0x75], cl ; add eax, 0x5751f4 ; call rax
0x000000000048d69c : add byte ptr [rax - 0x75], cl ; add eax, 0x575244 ; call rax
0x000000000048cda6 : add byte ptr [rax - 0x75], cl ; add eax, 0x575b32 ; call rax
0x000000000048cd85 : add byte ptr [rax - 0x75], cl ; add eax, 0x575b5b ; call rax
0x000000000048cc56 : add byte ptr [rax - 0x75], cl ; add eax, 0x575c82 ; call rax
0x000000000048cba7 : add byte ptr [rax - 0x75], cl ; add eax, 0x575d39 ; call rax
0x000000000048caed : add byte ptr [rax - 0x75], cl ; add eax, 0x575deb ; call rax
0x000000000048caa7 : add byte ptr [rax - 0x75], cl ; add eax, 0x575e39 ; call rax
0x000000000048c9ca : add byte ptr [rax - 0x75], cl ; add eax, 0x575f0e ; call rax
0x000000000048c9a5 : add byte ptr [rax - 0x75], cl ; add eax, 0x575f3b ; call rax
0x000000000048c225 : add byte ptr [rax - 0x75], cl ; add eax, 0x5766b3 ; call rax
0x000000000048c1cb : add byte ptr [rax - 0x75], cl ; add eax, 0x576715 ; call rax
0x000000000048c104 : add byte ptr [rax - 0x75], cl ; add eax, 0x5767d4 ; call rax
0x000000000048c0a9 : add byte ptr [rax - 0x75], cl ; add eax, 0x576837 ; call rax
0x000000000048bf7c : add byte ptr [rax - 0x75], cl ; add eax, 0x57695c ; call rax
0x000000000048bf2b : add byte ptr [rax - 0x75], cl ; add eax, 0x5769b5 ; call rax
0x000000000048bdfe : add byte ptr [rax - 0x75], cl ; add eax, 0x576ada ; call rax
0x000000000048bdab : add byte ptr [rax - 0x75], cl ; add eax, 0x576b35 ; call rax
0x000000000048bcf1 : add byte ptr [rax - 0x75], cl ; add eax, 0x576be7 ; call rax
0x000000000048bcc9 : add byte ptr [rax - 0x75], cl ; add eax, 0x576c17 ; call rax
0x000000000048bb39 : add byte ptr [rax - 0x75], cl ; add eax, 0x576d9f ; call rax
0x000000000048baa7 : add byte ptr [rax - 0x75], cl ; add eax, 0x576e39 ; call rax
0x000000000048b915 : add byte ptr [rax - 0x75], cl ; add eax, 0x576fc3 ; call rax
0x000000000048b883 : add byte ptr [rax - 0x75], cl ; add eax, 0x57705d ; call rax
0x000000000048b757 : add byte ptr [rax - 0x75], cl ; add eax, 0x577181 ; call rax
0x000000000048b6fb : add byte ptr [rax - 0x75], cl ; add eax, 0x5771e5 ; call rax
0x000000000048b641 : add byte ptr [rax - 0x75], cl ; add eax, 0x577297 ; call rax
0x000000000048b619 : add byte ptr [rax - 0x75], cl ; add eax, 0x5772c7 ; call rax
0x000000000048b561 : add byte ptr [rax - 0x75], cl ; add eax, 0x577377 ; call rax
0x000000000048b539 : add byte ptr [rax - 0x75], cl ; add eax, 0x5773a7 ; call rax
0x000000000048851a : add byte ptr [rax - 0x75], cl ; add eax, 0x57a3be ; call rax
0x00000000004884d2 : add byte ptr [rax - 0x75], cl ; add eax, 0x57a40e ; call rax
0x0000000000488244 : add byte ptr [rax - 0x75], cl ; add eax, 0x57a694 ; call rax
0x00000000004881fc : add byte ptr [rax - 0x75], cl ; add eax, 0x57a6e4 ; call rax
0x0000000000487bd2 : add byte ptr [rax - 0x75], cl ; add eax, 0x57ad06 ; call rax
0x0000000000487b87 : add byte ptr [rax - 0x75], cl ; add eax, 0x57ad59 ; call rax
0x0000000000487499 : add byte ptr [rax - 0x75], cl ; add eax, 0x57b43f ; call rax
0x0000000000487435 : add byte ptr [rax - 0x75], cl ; add eax, 0x57b4ab ; call rax
0x00000000004870c1 : add byte ptr [rax - 0x75], cl ; add eax, 0x57b817 ; call rax
0x000000000048707e : add byte ptr [rax - 0x75], cl ; add eax, 0x57b862 ; call rax
0x00000000004860b9 : add byte ptr [rax - 0x75], cl ; add eax, 0x57c81f ; call rax
0x0000000000486079 : add byte ptr [rax - 0x75], cl ; add eax, 0x57c867 ; call rax
0x0000000000485be1 : add byte ptr [rax - 0x75], cl ; add eax, 0x57ccf7 ; call rax
0x0000000000485b9f : add byte ptr [rax - 0x75], cl ; add eax, 0x57cd41 ; call rax
0x00000000004850e0 : add byte ptr [rax - 0x75], cl ; add eax, 0x57d7f8 ; call rax
0x00000000004850ab : add byte ptr [rax - 0x75], cl ; add eax, 0x57d835 ; call rax
0x0000000000484b4e : add byte ptr [rax - 0x75], cl ; add eax, 0x57dd92 ; call rax
0x0000000000484980 : add byte ptr [rax - 0x75], cl ; add eax, 0x57df60 ; call rax
0x0000000000484668 : add byte ptr [rax - 0x75], cl ; add eax, 0x57e278 ; call rax
0x000000000048449a : add byte ptr [rax - 0x75], cl ; add eax, 0x57e446 ; call rax
0x00000000004841e5 : add byte ptr [rax - 0x75], cl ; add eax, 0x57e6fb ; call rax
0x000000000048357d : add byte ptr [rax - 0x75], cl ; add eax, 0x57f35b ; call rax
0x0000000000483535 : add byte ptr [rax - 0x75], cl ; add eax, 0x57f3ab ; call rax
0x00000000004830dc : add byte ptr [rax - 0x75], cl ; add eax, 0x57f804 ; call rax
0x0000000000483015 : add byte ptr [rax - 0x75], cl ; add eax, 0x57f8c3 ; call rax
0x0000000000482fcd : add byte ptr [rax - 0x75], cl ; add eax, 0x57f913 ; call rax
0x00000000004829af : add byte ptr [rax - 0x75], cl ; add eax, 0x57ff29 ; call rax
0x0000000000482961 : add byte ptr [rax - 0x75], cl ; add eax, 0x57ff7f ; call rax
0x0000000000482857 : add byte ptr [rax - 0x75], cl ; add eax, 0x580081 ; call rax
0x0000000000482817 : add byte ptr [rax - 0x75], cl ; add eax, 0x5800c9 ; call rax
0x0000000000482624 : add byte ptr [rax - 0x75], cl ; add eax, 0x5802b4 ; call rax
0x00000000004825e2 : add byte ptr [rax - 0x75], cl ; add eax, 0x5802fe ; call rax
0x0000000000482238 : add byte ptr [rax - 0x75], cl ; add eax, 0x5806a0 ; call rax
0x0000000000482203 : add byte ptr [rax - 0x75], cl ; add eax, 0x5806dd ; call rax
0x00000000004817dd : add byte ptr [rax - 0x75], cl ; add eax, 0x5810fb ; call rax
0x000000000048179a : add byte ptr [rax - 0x75], cl ; add eax, 0x581146 ; call rax
0x0000000000481576 : add byte ptr [rax - 0x75], cl ; add eax, 0x581362 ; call rax
0x0000000000481521 : add byte ptr [rax - 0x75], cl ; add eax, 0x5813bf ; call rax
0x0000000000480f3c : add byte ptr [rax - 0x75], cl ; add eax, 0x5819a4 ; call rax
0x000000000047fee4 : add byte ptr [rax - 0x75], cl ; add eax, 0x5829f4 ; call rax
0x000000000047fe9b : add byte ptr [rax - 0x75], cl ; add eax, 0x582a45 ; call rax
0x000000000047f4ad : add byte ptr [rax - 0x75], cl ; add eax, 0x583433 ; call rax
0x000000000047eae5 : add byte ptr [rax - 0x75], cl ; add eax, 0x583dfb ; call rax
0x000000000047e335 : add byte ptr [rax - 0x75], cl ; add eax, 0x5845ab ; call rax
0x000000000047dc03 : add byte ptr [rax - 0x75], cl ; add eax, 0x584cd5 ; call rax
0x000000000047dbdb : add byte ptr [rax - 0x75], cl ; add eax, 0x584d05 ; call rax
0x000000000047d89d : add byte ptr [rax - 0x75], cl ; add eax, 0x58503b ; call rax
0x000000000047d875 : add byte ptr [rax - 0x75], cl ; add eax, 0x58506b ; call rax
0x000000000047d1c9 : add byte ptr [rax - 0x75], cl ; add eax, 0x58570f ; call rax
0x000000000047d107 : add byte ptr [rax - 0x75], cl ; add eax, 0x5857d9 ; call rax
0x000000000047cc41 : add byte ptr [rax - 0x75], cl ; add eax, 0x585c9f ; call rax
0x000000000047b2ac : add byte ptr [rax - 0x75], cl ; add eax, 0x58762c ; call rax
0x000000000047b289 : add byte ptr [rax - 0x75], cl ; add eax, 0x587657 ; call rax
0x000000000047af5f : add byte ptr [rax - 0x75], cl ; add eax, 0x587979 ; call rax
0x000000000047af37 : add byte ptr [rax - 0x75], cl ; add eax, 0x5879a9 ; call rax
0x000000000047abf9 : add byte ptr [rax - 0x75], cl ; add eax, 0x587cdf ; call rax
0x000000000047abd1 : add byte ptr [rax - 0x75], cl ; add eax, 0x587d0f ; call rax
0x000000000047a0a3 : add byte ptr [rax - 0x75], cl ; add eax, 0x58883d ; call rax
0x0000000000479e99 : add byte ptr [rax - 0x75], cl ; add eax, 0x588a47 ; call rax
0x0000000000479a5d : add byte ptr [rax - 0x75], cl ; add eax, 0x588e83 ; call rax
0x000000000047888d : add byte ptr [rax - 0x75], cl ; add eax, 0x58a053 ; call rax
0x00000000004740de : add byte ptr [rax - 0x75], cl ; add eax, 0x58e7fa ; call rax
0x0000000000474043 : add byte ptr [rax - 0x75], cl ; add eax, 0x58e89d ; call rax
0x000000000047347d : add byte ptr [rax - 0x75], cl ; add eax, 0x58f45b ; call rax
0x0000000000473461 : add byte ptr [rax - 0x75], cl ; add eax, 0x58f47f ; call rax
0x0000000000472ce3 : add byte ptr [rax - 0x75], cl ; add eax, 0x58fbfd ; call rax
0x000000000047287f : add byte ptr [rax - 0x75], cl ; add eax, 0x590061 ; call rax
0x00000000004720b7 : add byte ptr [rax - 0x75], cl ; add eax, 0x590829 ; call rax
0x0000000000471511 : add byte ptr [rax - 0x75], cl ; add eax, 0x5913cf ; call rax
0x0000000000470b35 : add byte ptr [rax - 0x75], cl ; add eax, 0x591dab ; call rax
0x000000000047046a : add byte ptr [rax - 0x75], cl ; add eax, 0x59246e ; call rax
0x0000000000470449 : add byte ptr [rax - 0x75], cl ; add eax, 0x592497 ; call rax
0x000000000047015e : add byte ptr [rax - 0x75], cl ; add eax, 0x59277a ; call rax
0x000000000047013d : add byte ptr [rax - 0x75], cl ; add eax, 0x5927a3 ; call rax
0x000000000046f9b5 : add byte ptr [rax - 0x75], cl ; add eax, 0x592f2b ; call rax
0x000000000046f7f3 : add byte ptr [rax - 0x75], cl ; add eax, 0x5930ed ; call rax
0x000000000046f2d4 : add byte ptr [rax - 0x75], cl ; add eax, 0x593604 ; call rax
0x000000000046f21d : add byte ptr [rax - 0x75], cl ; add eax, 0x5936c3 ; call rax
0x000000000046ed97 : add byte ptr [rax - 0x75], cl ; add eax, 0x593b49 ; call rax
0x000000000046ce91 : add byte ptr [rax - 0x75], cl ; add eax, 0x595a47 ; call rax
0x000000000046ce75 : add byte ptr [rax - 0x75], cl ; add eax, 0x595a6b ; call rax
0x000000000046cb88 : add byte ptr [rax - 0x75], cl ; add eax, 0x595d50 ; call rax
0x000000000046cb67 : add byte ptr [rax - 0x75], cl ; add eax, 0x595d79 ; call rax
0x000000000046c87c : add byte ptr [rax - 0x75], cl ; add eax, 0x59605c ; call rax
0x000000000046c85b : add byte ptr [rax - 0x75], cl ; add eax, 0x596085 ; call rax
0x000000000046be23 : add byte ptr [rax - 0x75], cl ; add eax, 0x596abd ; call rax
0x000000000046bc4b : add byte ptr [rax - 0x75], cl ; add eax, 0x596c95 ; call rax
0x000000000046b85d : add byte ptr [rax - 0x75], cl ; add eax, 0x597083 ; call rax
0x000000000046a4d1 : add byte ptr [rax - 0x75], cl ; add eax, 0x59840f ; call rax
0x0000000000468c90 : add byte ptr [rax - 0x75], cl ; add eax, 0x599c48 ; call rax
0x0000000000468c48 : add byte ptr [rax - 0x75], cl ; add eax, 0x599c98 ; call rax
0x0000000000468a8f : add byte ptr [rax - 0x75], cl ; add eax, 0x599e49 ; call rax
0x0000000000468a29 : add byte ptr [rax - 0x75], cl ; add eax, 0x599eb7 ; call rax
0x0000000000467ed3 : add byte ptr [rax - 0x75], cl ; add eax, 0x59aa0d ; call rax
0x0000000000467807 : add byte ptr [rax - 0x75], cl ; add eax, 0x59b0d1 ; call rax
0x00000000004677c0 : add byte ptr [rax - 0x75], cl ; add eax, 0x59b120 ; call rax
0x00000000004675df : add byte ptr [rax - 0x75], cl ; add eax, 0x59b2f9 ; call rax
0x0000000000467579 : add byte ptr [rax - 0x75], cl ; add eax, 0x59b367 ; call rax
0x0000000000466e35 : add byte ptr [rax - 0x75], cl ; add eax, 0x59baab ; call rax
0x000000000046676a : add byte ptr [rax - 0x75], cl ; add eax, 0x59c16e ; call rax
0x0000000000466749 : add byte ptr [rax - 0x75], cl ; add eax, 0x59c197 ; call rax
0x000000000046645e : add byte ptr [rax - 0x75], cl ; add eax, 0x59c47a ; call rax
0x000000000046643d : add byte ptr [rax - 0x75], cl ; add eax, 0x59c4a3 ; call rax
0x0000000000465cb5 : add byte ptr [rax - 0x75], cl ; add eax, 0x59cc2b ; call rax
0x0000000000465af3 : add byte ptr [rax - 0x75], cl ; add eax, 0x59cded ; call rax
0x00000000004655d4 : add byte ptr [rax - 0x75], cl ; add eax, 0x59d304 ; call rax
0x000000000046551d : add byte ptr [rax - 0x75], cl ; add eax, 0x59d3c3 ; call rax
0x0000000000465097 : add byte ptr [rax - 0x75], cl ; add eax, 0x59d849 ; call rax
0x0000000000463191 : add byte ptr [rax - 0x75], cl ; add eax, 0x59f747 ; call rax
0x0000000000463175 : add byte ptr [rax - 0x75], cl ; add eax, 0x59f76b ; call rax
0x0000000000462e88 : add byte ptr [rax - 0x75], cl ; add eax, 0x59fa50 ; call rax
0x0000000000462e67 : add byte ptr [rax - 0x75], cl ; add eax, 0x59fa79 ; call rax
0x0000000000462b7c : add byte ptr [rax - 0x75], cl ; add eax, 0x59fd5c ; call rax
0x0000000000462b5b : add byte ptr [rax - 0x75], cl ; add eax, 0x59fd85 ; call rax
0x0000000000462123 : add byte ptr [rax - 0x75], cl ; add eax, 0x5a07bd ; call rax
0x0000000000461f4b : add byte ptr [rax - 0x75], cl ; add eax, 0x5a0995 ; call rax
0x0000000000461b5d : add byte ptr [rax - 0x75], cl ; add eax, 0x5a0d83 ; call rax
0x00000000004607d1 : add byte ptr [rax - 0x75], cl ; add eax, 0x5a210f ; call rax
0x000000000045f9c3 : add byte ptr [rax - 0x75], cl ; add eax, 0x5a2f1d ; call rax
0x000000000045f811 : add byte ptr [rax - 0x75], cl ; add eax, 0x5a30cf ; call rax
0x000000000045f414 : add byte ptr [rax - 0x75], cl ; add eax, 0x5a34cc ; call rax
0x000000000045ef2e : add byte ptr [rax - 0x75], cl ; add eax, 0x5a39aa ; call rax
0x000000000045ef0d : add byte ptr [rax - 0x75], cl ; add eax, 0x5a39d3 ; call rax
0x000000000045ec22 : add byte ptr [rax - 0x75], cl ; add eax, 0x5a3cb6 ; call rax
0x000000000045ec01 : add byte ptr [rax - 0x75], cl ; add eax, 0x5a3cdf ; call rax
0x000000000045eaf9 : add byte ptr [rax - 0x75], cl ; add eax, 0x5a3ddf ; call rax
0x000000000045eacb : add byte ptr [rax - 0x75], cl ; add eax, 0x5a3e15 ; call rax
0x000000000045ea13 : add byte ptr [rax - 0x75], cl ; add eax, 0x5a3ec5 ; call rax
0x000000000045e9ef : add byte ptr [rax - 0x75], cl ; add eax, 0x5a3ef1 ; call rax
0x000000000045e6d0 : add byte ptr [rax - 0x75], cl ; add eax, 0x5a4208 ; call rax
0x000000000045e68c : add byte ptr [rax - 0x75], cl ; add eax, 0x5a4254 ; call rax
0x000000000045e465 : add byte ptr [rax - 0x75], cl ; add eax, 0x5a4473 ; call rax
0x000000000045e42b : add byte ptr [rax - 0x75], cl ; add eax, 0x5a44b5 ; call rax
0x000000000045e1ab : add byte ptr [rax - 0x75], cl ; add eax, 0x5a472d ; call rax
0x000000000045e185 : add byte ptr [rax - 0x75], cl ; add eax, 0x5a475b ; call rax
0x000000000045de9f : add byte ptr [rax - 0x75], cl ; add eax, 0x5a4a39 ; call rax
0x000000000045de52 : add byte ptr [rax - 0x75], cl ; add eax, 0x5a4a8e ; call rax
0x000000000045d79b : add byte ptr [rax - 0x75], cl ; add eax, 0x5a5145 ; call rax
0x000000000045d5d9 : add byte ptr [rax - 0x75], cl ; add eax, 0x5a5307 ; call rax
0x000000000045d0ba : add byte ptr [rax - 0x75], cl ; add eax, 0x5a581e ; call rax
0x000000000045d003 : add byte ptr [rax - 0x75], cl ; add eax, 0x5a58dd ; call rax
0x000000000045cb7d : add byte ptr [rax - 0x75], cl ; add eax, 0x5a5d63 ; call rax
0x000000000045c7aa : add byte ptr [rax - 0x75], cl ; add eax, 0x5a6136 ; call rax
0x000000000045c08d : add byte ptr [rax - 0x75], cl ; add eax, 0x5a6853 ; call rax
0x000000000045b9f0 : add byte ptr [rax - 0x75], cl ; add eax, 0x5a6ef0 ; call rax
0x000000000045b8db : add byte ptr [rax - 0x75], cl ; add eax, 0x5a7005 ; call rax
0x000000000045a81a : add byte ptr [rax - 0x75], cl ; add eax, 0x5a80c6 ; call rax
0x000000000045a393 : add byte ptr [rax - 0x75], cl ; add eax, 0x5a8545 ; call rax
0x000000000045a377 : add byte ptr [rax - 0x75], cl ; add eax, 0x5a8569 ; call rax
0x000000000045a08a : add byte ptr [rax - 0x75], cl ; add eax, 0x5a884e ; call rax
0x000000000045a069 : add byte ptr [rax - 0x75], cl ; add eax, 0x5a8877 ; call rax
0x0000000000459d7e : add byte ptr [rax - 0x75], cl ; add eax, 0x5a8b5a ; call rax
0x0000000000459d5d : add byte ptr [rax - 0x75], cl ; add eax, 0x5a8b83 ; call rax
0x0000000000459329 : add byte ptr [rax - 0x75], cl ; add eax, 0x5a95b7 ; call rax
0x0000000000459151 : add byte ptr [rax - 0x75], cl ; add eax, 0x5a978f ; call rax
0x0000000000458d63 : add byte ptr [rax - 0x75], cl ; add eax, 0x5a9b7d ; call rax
0x00000000004579d7 : add byte ptr [rax - 0x75], cl ; add eax, 0x5aaf09 ; call rax
0x0000000000456cce : add byte ptr [rax - 0x75], cl ; add eax, 0x5abc0a ; call rax
0x0000000000456b67 : add byte ptr [rax - 0x75], cl ; add eax, 0x5abd79 ; call rax
0x00000000004550bf : add byte ptr [rax - 0x75], cl ; add eax, 0x5ad819 ; call rax
0x00000000004550a3 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ad83d ; call rax
0x00000000004547f9 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ae0e7 ; call rax
0x0000000000454395 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ae54b ; call rax
0x0000000000453bcd : add byte ptr [rax - 0x75], cl ; add eax, 0x5aed13 ; call rax
0x0000000000453027 : add byte ptr [rax - 0x75], cl ; add eax, 0x5af8b9 ; call rax
0x0000000000451847 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b1091 ; call rax
0x000000000045182b : add byte ptr [rax - 0x75], cl ; add eax, 0x5b10b5 ; call rax
0x000000000045100d : add byte ptr [rax - 0x75], cl ; add eax, 0x5b18d3 ; call rax
0x0000000000450827 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b20b9 ; call rax
0x000000000044fc81 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b2c5f ; call rax
0x000000000044f107 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b37d9 ; call rax
0x000000000044ef41 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b399f ; call rax
0x000000000044eb16 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b3dca ; call rax
0x000000000044e616 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b42c2 ; call rax
0x000000000044e5f5 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b42eb ; call rax
0x000000000044e30a : add byte ptr [rax - 0x75], cl ; add eax, 0x5b45ce ; call rax
0x000000000044e2e9 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b45f7 ; call rax
0x000000000044e1e1 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b46f7 ; call rax
0x000000000044e1b3 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b472d ; call rax
0x000000000044e0fb : add byte ptr [rax - 0x75], cl ; add eax, 0x5b47dd ; call rax
0x000000000044e0d7 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b4809 ; call rax
0x000000000044e01f : add byte ptr [rax - 0x75], cl ; add eax, 0x5b48b9 ; call rax
0x000000000044dff9 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b48e7 ; call rax
0x000000000044dc95 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b4c4b ; call rax
0x000000000044dc4e : add byte ptr [rax - 0x75], cl ; add eax, 0x5b4c8a ; call rax
0x000000000044dc0e : add byte ptr [rax - 0x75], cl ; add eax, 0x5b4cd2 ; call rax
0x000000000044db49 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b4d8f ; call rax
0x000000000044db09 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b4dd7 ; call rax
0x000000000044d895 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b5043 ; call rax
0x000000000044d85b : add byte ptr [rax - 0x75], cl ; add eax, 0x5b5085 ; call rax
0x000000000044d5c9 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b530f ; call rax
0x000000000044d5a3 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b533d ; call rax
0x000000000044d2bd : add byte ptr [rax - 0x75], cl ; add eax, 0x5b561b ; call rax
0x000000000044d270 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b5670 ; call rax
0x000000000044cb85 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b5d5b ; call rax
0x000000000044c9c3 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b5f1d ; call rax
0x000000000044c4a4 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b6434 ; call rax
0x000000000044c3ed : add byte ptr [rax - 0x75], cl ; add eax, 0x5b64f3 ; call rax
0x000000000044bf67 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b6979 ; call rax
0x000000000044bb7f : add byte ptr [rax - 0x75], cl ; add eax, 0x5b6d61 ; call rax
0x000000000044b433 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b74ad ; call rax
0x000000000044ad6b : add byte ptr [rax - 0x75], cl ; add eax, 0x5b7b75 ; call rax
0x000000000044ac45 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b7c9b ; call rax
0x0000000000449b83 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b8d5d ; call rax
0x00000000004496df : add byte ptr [rax - 0x75], cl ; add eax, 0x5b91f9 ; call rax
0x00000000004496c3 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b921d ; call rax
0x00000000004493d6 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b9502 ; call rax
0x00000000004493b5 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b952b ; call rax
0x00000000004490ca : add byte ptr [rax - 0x75], cl ; add eax, 0x5b980e ; call rax
0x00000000004490a9 : add byte ptr [rax - 0x75], cl ; add eax, 0x5b9837 ; call rax
0x0000000000448675 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ba26b ; call rax
0x000000000044849d : add byte ptr [rax - 0x75], cl ; add eax, 0x5ba443 ; call rax
0x00000000004480af : add byte ptr [rax - 0x75], cl ; add eax, 0x5ba831 ; call rax
0x0000000000446d23 : add byte ptr [rax - 0x75], cl ; add eax, 0x5bbbbd ; call rax
0x000000000044666b : add byte ptr [rax - 0x75], cl ; add eax, 0x5bc275 ; call rax
0x0000000000446453 : add byte ptr [rax - 0x75], cl ; add eax, 0x5bc48d ; call rax
0x0000000000445f29 : add byte ptr [rax - 0x75], cl ; add eax, 0x5bc9b7 ; call rax
0x0000000000444cd7 : add byte ptr [rax - 0x75], cl ; add eax, 0x5bdc09 ; call rax
0x0000000000444c03 : add byte ptr [rax - 0x75], cl ; add eax, 0x5bdcdd ; call rax
0x0000000000443e95 : add byte ptr [rax - 0x75], cl ; add eax, 0x5bea4b ; call rax
0x0000000000443533 : add byte ptr [rax - 0x75], cl ; add eax, 0x5bf3ad ; call rax
0x000000000044258f : add byte ptr [rax - 0x75], cl ; add eax, 0x5c0351 ; call rax
0x00000000004423cd : add byte ptr [rax - 0x75], cl ; add eax, 0x5c0513 ; call rax
0x0000000000441f8a : add byte ptr [rax - 0x75], cl ; add eax, 0x5c094e ; call rax
0x0000000000441ed3 : add byte ptr [rax - 0x75], cl ; add eax, 0x5c0a0d ; call rax
0x0000000000441a4d : add byte ptr [rax - 0x75], cl ; add eax, 0x5c0e93 ; call rax
0x0000000000441703 : add byte ptr [rax - 0x75], cl ; add eax, 0x5c11dd ; call rax
0x000000000043f72d : add byte ptr [rax - 0x75], cl ; add eax, 0x5c31ab ; call rax
0x000000000043f711 : add byte ptr [rax - 0x75], cl ; add eax, 0x5c31cf ; call rax
0x000000000043e79f : add byte ptr [rax - 0x75], cl ; add eax, 0x5c4139 ; call rax
0x000000000043e783 : add byte ptr [rax - 0x75], cl ; add eax, 0x5c415d ; call rax
0x000000000043e434 : add byte ptr [rax - 0x75], cl ; add eax, 0x5c44a4 ; call rax
0x000000000043e413 : add byte ptr [rax - 0x75], cl ; add eax, 0x5c44cd ; call rax
0x000000000043db9f : add byte ptr [rax - 0x75], cl ; add eax, 0x5c4d41 ; call rax
0x000000000043d6a3 : add byte ptr [rax - 0x75], cl ; add eax, 0x5c523d ; call rax
0x000000000043d4cb : add byte ptr [rax - 0x75], cl ; add eax, 0x5c5415 ; call rax
0x000000000043d0dd : add byte ptr [rax - 0x75], cl ; add eax, 0x5c5803 ; call rax
0x000000000043cced : add byte ptr [rax - 0x75], cl ; add eax, 0x5c5bf3 ; call rax
0x000000000043b641 : add byte ptr [rax - 0x75], cl ; add eax, 0x5c729f ; call rax
0x000000000043a98f : add byte ptr [rax - 0x75], cl ; add eax, 0x5c7f49 ; call rax
0x000000000043a846 : add byte ptr [rax - 0x75], cl ; add eax, 0x5c809a ; call rax
0x000000000043a302 : add byte ptr [rax - 0x75], cl ; add eax, 0x5c85d6 ; call rax
0x000000000043a269 : add byte ptr [rax - 0x75], cl ; add eax, 0x5c8677 ; call rax
0x000000000043a02c : add byte ptr [rax - 0x75], cl ; add eax, 0x5c88ac ; call rax
0x0000000000439fe4 : add byte ptr [rax - 0x75], cl ; add eax, 0x5c88fc ; call rax
0x0000000000439d76 : add byte ptr [rax - 0x75], cl ; add eax, 0x5c8b6a ; call rax
0x0000000000439c74 : add byte ptr [rax - 0x75], cl ; add eax, 0x5c8c6c ; call rax
0x0000000000439a95 : add byte ptr [rax - 0x75], cl ; add eax, 0x5c8e43 ; call rax
0x0000000000439a25 : add byte ptr [rax - 0x75], cl ; add eax, 0x5c8ebb ; call rax
0x0000000000439827 : add byte ptr [rax - 0x75], cl ; add eax, 0x5c90b9 ; call rax
0x000000000043961c : add byte ptr [rax - 0x75], cl ; add eax, 0x5c92bc ; call rax
0x0000000000439583 : add byte ptr [rax - 0x75], cl ; add eax, 0x5c935d ; call rax
0x00000000004392b0 : add byte ptr [rax - 0x75], cl ; add eax, 0x5c9628 ; call rax
0x000000000043926d : add byte ptr [rax - 0x75], cl ; add eax, 0x5c9673 ; call rax
0x00000000004391b5 : add byte ptr [rax - 0x75], cl ; add eax, 0x5c9723 ; call rax
0x000000000043916f : add byte ptr [rax - 0x75], cl ; add eax, 0x5c9771 ; call rax
0x000000000043906b : add byte ptr [rax - 0x75], cl ; add eax, 0x5c9875 ; call rax
0x0000000000438f5d : add byte ptr [rax - 0x75], cl ; add eax, 0x5c997b ; call rax
0x0000000000438eff : add byte ptr [rax - 0x75], cl ; add eax, 0x5c99e1 ; call rax
0x0000000000438e37 : add byte ptr [rax - 0x75], cl ; add eax, 0x5c9aa1 ; call rax
0x0000000000438d99 : add byte ptr [rax - 0x75], cl ; add eax, 0x5c9b47 ; call rax
0x0000000000438242 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ca696 ; call rax
0x00000000004381ff : add byte ptr [rax - 0x75], cl ; add eax, 0x5ca6e1 ; call rax
0x0000000000437fc3 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ca915 ; call rax
0x0000000000437f80 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ca960 ; call rax
0x0000000000437d46 : add byte ptr [rax - 0x75], cl ; add eax, 0x5cab92 ; call rax
0x0000000000437cfe : add byte ptr [rax - 0x75], cl ; add eax, 0x5cabe2 ; call rax
0x00000000004376a3 : add byte ptr [rax - 0x75], cl ; add eax, 0x5cb235 ; call rax
0x000000000043765b : add byte ptr [rax - 0x75], cl ; add eax, 0x5cb285 ; call rax
0x00000000004373a4 : add byte ptr [rax - 0x75], cl ; add eax, 0x5cb53c ; call rax
0x000000000043729d : add byte ptr [rax - 0x75], cl ; add eax, 0x5cb63b ; call rax
0x0000000000437265 : add byte ptr [rax - 0x75], cl ; add eax, 0x5cb67b ; call rax
0x0000000000437155 : add byte ptr [rax - 0x75], cl ; add eax, 0x5cb783 ; call rax
0x00000000004370f7 : add byte ptr [rax - 0x75], cl ; add eax, 0x5cb7e9 ; call rax
0x000000000043702f : add byte ptr [rax - 0x75], cl ; add eax, 0x5cb8a9 ; call rax
0x0000000000436f91 : add byte ptr [rax - 0x75], cl ; add eax, 0x5cb94f ; call rax
0x0000000000436684 : add byte ptr [rax - 0x75], cl ; add eax, 0x5cc254 ; call rax
0x000000000043663c : add byte ptr [rax - 0x75], cl ; add eax, 0x5cc2a4 ; call rax
0x000000000043639b : add byte ptr [rax - 0x75], cl ; add eax, 0x5cc545 ; call rax
0x0000000000436293 : add byte ptr [rax - 0x75], cl ; add eax, 0x5cc645 ; call rax
0x000000000043625b : add byte ptr [rax - 0x75], cl ; add eax, 0x5cc685 ; call rax
0x00000000004361a1 : add byte ptr [rax - 0x75], cl ; add eax, 0x5cc737 ; call rax
0x0000000000436161 : add byte ptr [rax - 0x75], cl ; add eax, 0x5cc77f ; call rax
0x00000000004360a8 : add byte ptr [rax - 0x75], cl ; add eax, 0x5cc830 ; call rax
0x0000000000436065 : add byte ptr [rax - 0x75], cl ; add eax, 0x5cc87b ; call rax
0x00000000004359c8 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ccf10 ; call rax
0x0000000000435985 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ccf5b ; call rax
0x00000000004357dd : add byte ptr [rax - 0x75], cl ; add eax, 0x5cd0fb ; call rax
0x000000000043579a : add byte ptr [rax - 0x75], cl ; add eax, 0x5cd146 ; call rax
0x00000000004355ee : add byte ptr [rax - 0x75], cl ; add eax, 0x5cd2f2 ; call rax
0x00000000004354e8 : add byte ptr [rax - 0x75], cl ; add eax, 0x5cd3f0 ; call rax
0x00000000004354b3 : add byte ptr [rax - 0x75], cl ; add eax, 0x5cd42d ; call rax
0x00000000004353a3 : add byte ptr [rax - 0x75], cl ; add eax, 0x5cd535 ; call rax
0x0000000000435345 : add byte ptr [rax - 0x75], cl ; add eax, 0x5cd59b ; call rax
0x000000000043527d : add byte ptr [rax - 0x75], cl ; add eax, 0x5cd65b ; call rax
0x00000000004351df : add byte ptr [rax - 0x75], cl ; add eax, 0x5cd701 ; call rax
0x000000000043466b : add byte ptr [rax - 0x75], cl ; add eax, 0x5ce26d ; call rax
0x0000000000434623 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ce2bd ; call rax
0x0000000000434323 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ce5b5 ; call rax
0x00000000004342eb : add byte ptr [rax - 0x75], cl ; add eax, 0x5ce5f5 ; call rax
0x00000000004335ab : add byte ptr [rax - 0x75], cl ; add eax, 0x5cf335 ; call rax
0x0000000000433147 : add byte ptr [rax - 0x75], cl ; add eax, 0x5cf799 ; call rax
0x000000000043298f : add byte ptr [rax - 0x75], cl ; add eax, 0x5cff51 ; call rax
0x000000000043220b : add byte ptr [rax - 0x75], cl ; add eax, 0x5d06d5 ; call rax
0x0000000000430b71 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d1d6f ; call rax
0x00000000004303c5 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d251b ; call rax
0x000000000042f87d : add byte ptr [rax - 0x75], cl ; add eax, 0x5d3063 ; call rax
0x000000000042f5a7 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d3339 ; call rax
0x000000000042efd4 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d3904 ; call rax
0x000000000042efb3 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d392d ; call rax
0x000000000042ee2f : add byte ptr [rax - 0x75], cl ; add eax, 0x5d3aa9 ; call rax
0x000000000042ee0b : add byte ptr [rax - 0x75], cl ; add eax, 0x5d3ad5 ; call rax
0x000000000042ed53 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d3b85 ; call rax
0x000000000042ed2d : add byte ptr [rax - 0x75], cl ; add eax, 0x5d3bb3 ; call rax
0x000000000042eb1c : add byte ptr [rax - 0x75], cl ; add eax, 0x5d3dbc ; call rax
0x000000000042eadb : add byte ptr [rax - 0x75], cl ; add eax, 0x5d3e05 ; call rax
0x000000000042ea2e : add byte ptr [rax - 0x75], cl ; add eax, 0x5d3eaa ; call rax
0x000000000042e9e9 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d3ef7 ; call rax
0x000000000042e815 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d40c3 ; call rax
0x000000000042e7f1 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d40ef ; call rax
0x000000000042e739 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d419f ; call rax
0x000000000042e713 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d41cd ; call rax
0x000000000042e502 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d43d6 ; call rax
0x000000000042e4c1 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d441f ; call rax
0x000000000042e414 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d44c4 ; call rax
0x000000000042e3cf : add byte ptr [rax - 0x75], cl ; add eax, 0x5d4511 ; call rax
0x000000000042de5d : add byte ptr [rax - 0x75], cl ; add eax, 0x5d4a83 ; call rax
0x000000000042dc9b : add byte ptr [rax - 0x75], cl ; add eax, 0x5d4c45 ; call rax
0x000000000042d6f6 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d51e2 ; call rax
0x000000000042d63f : add byte ptr [rax - 0x75], cl ; add eax, 0x5d52a1 ; call rax
0x000000000042d0c6 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d5812 ; call rax
0x000000000042d00f : add byte ptr [rax - 0x75], cl ; add eax, 0x5d58d1 ; call rax
0x000000000042ca6d : add byte ptr [rax - 0x75], cl ; add eax, 0x5d5e73 ; call rax
0x000000000042c20f : add byte ptr [rax - 0x75], cl ; add eax, 0x5d66d1 ; call rax
0x000000000042bdbb : add byte ptr [rax - 0x75], cl ; add eax, 0x5d6b25 ; call rax
0x000000000042b795 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d714b ; call rax
0x000000000042b506 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d73d2 ; call rax
0x000000000042b4e5 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d73fb ; call rax
0x000000000042acd9 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d7c07 ; call rax
0x000000000042a4da : add byte ptr [rax - 0x75], cl ; add eax, 0x5d8406 ; call rax
0x000000000042a3d8 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d8508 ; call rax
0x000000000042a1f9 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d86df ; call rax
0x000000000042a189 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d8757 ; call rax
0x0000000000429f8b : add byte ptr [rax - 0x75], cl ; add eax, 0x5d8955 ; call rax
0x0000000000429d60 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d8b78 ; call rax
0x0000000000429cc7 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d8c19 ; call rax
0x00000000004299be : add byte ptr [rax - 0x75], cl ; add eax, 0x5d8f1a ; call rax
0x000000000042997d : add byte ptr [rax - 0x75], cl ; add eax, 0x5d8f63 ; call rax
0x00000000004298b6 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d9022 ; call rax
0x0000000000429835 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d90ab ; call rax
0x0000000000429002 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d98d6 ; call rax
0x0000000000428fba : add byte ptr [rax - 0x75], cl ; add eax, 0x5d9926 ; call rax
0x0000000000428ca4 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d9c3c ; call rax
0x0000000000428b9b : add byte ptr [rax - 0x75], cl ; add eax, 0x5d9d3d ; call rax
0x0000000000428b63 : add byte ptr [rax - 0x75], cl ; add eax, 0x5d9d7d ; call rax
0x000000000042884a : add byte ptr [rax - 0x75], cl ; add eax, 0x5da08e ; call rax
0x000000000042882d : add byte ptr [rax - 0x75], cl ; add eax, 0x5da0b3 ; call rax
0x00000000004286fb : add byte ptr [rax - 0x75], cl ; add eax, 0x5da1dd ; call rax
0x000000000042869d : add byte ptr [rax - 0x75], cl ; add eax, 0x5da243 ; call rax
0x00000000004285d5 : add byte ptr [rax - 0x75], cl ; add eax, 0x5da303 ; call rax
0x0000000000428537 : add byte ptr [rax - 0x75], cl ; add eax, 0x5da3a9 ; call rax
0x00000000004276d2 : add byte ptr [rax - 0x75], cl ; add eax, 0x5db206 ; call rax
0x000000000042768a : add byte ptr [rax - 0x75], cl ; add eax, 0x5db256 ; call rax
0x0000000000427371 : add byte ptr [rax - 0x75], cl ; add eax, 0x5db567 ; call rax
0x0000000000427339 : add byte ptr [rax - 0x75], cl ; add eax, 0x5db5a7 ; call rax
0x000000000042727e : add byte ptr [rax - 0x75], cl ; add eax, 0x5db65a ; call rax
0x000000000042723b : add byte ptr [rax - 0x75], cl ; add eax, 0x5db6a5 ; call rax
0x0000000000427137 : add byte ptr [rax - 0x75], cl ; add eax, 0x5db7a9 ; call rax
0x0000000000427071 : add byte ptr [rax - 0x75], cl ; add eax, 0x5db867 ; call rax
0x0000000000426fd3 : add byte ptr [rax - 0x75], cl ; add eax, 0x5db90d ; call rax
0x0000000000426ee7 : add byte ptr [rax - 0x75], cl ; add eax, 0x5db9f1 ; call rax
0x0000000000426e89 : add byte ptr [rax - 0x75], cl ; add eax, 0x5dba57 ; call rax
0x0000000000426dc1 : add byte ptr [rax - 0x75], cl ; add eax, 0x5dbb17 ; call rax
0x0000000000426d23 : add byte ptr [rax - 0x75], cl ; add eax, 0x5dbbbd ; call rax
0x0000000000426761 : add byte ptr [rax - 0x75], cl ; add eax, 0x5dc177 ; call rax
0x000000000042671e : add byte ptr [rax - 0x75], cl ; add eax, 0x5dc1c2 ; call rax
0x00000000004264f3 : add byte ptr [rax - 0x75], cl ; add eax, 0x5dc3e5 ; call rax
0x00000000004264ab : add byte ptr [rax - 0x75], cl ; add eax, 0x5dc435 ; call rax
0x0000000000425d70 : add byte ptr [rax - 0x75], cl ; add eax, 0x5dcb68 ; call rax
0x0000000000425d28 : add byte ptr [rax - 0x75], cl ; add eax, 0x5dcbb8 ; call rax
0x00000000004259b4 : add byte ptr [rax - 0x75], cl ; add eax, 0x5dcf2c ; call rax
0x00000000004258c1 : add byte ptr [rax - 0x75], cl ; add eax, 0x5dd017 ; call rax
0x0000000000425889 : add byte ptr [rax - 0x75], cl ; add eax, 0x5dd057 ; call rax
0x00000000004257cf : add byte ptr [rax - 0x75], cl ; add eax, 0x5dd109 ; call rax
0x000000000042578f : add byte ptr [rax - 0x75], cl ; add eax, 0x5dd151 ; call rax
0x00000000004256d6 : add byte ptr [rax - 0x75], cl ; add eax, 0x5dd202 ; call rax
0x0000000000425693 : add byte ptr [rax - 0x75], cl ; add eax, 0x5dd24d ; call rax
0x00000000004255da : add byte ptr [rax - 0x75], cl ; add eax, 0x5dd2fe ; call rax
0x0000000000425597 : add byte ptr [rax - 0x75], cl ; add eax, 0x5dd349 ; call rax
0x000000000042504c : add byte ptr [rax - 0x75], cl ; add eax, 0x5dd88c ; call rax
0x0000000000425009 : add byte ptr [rax - 0x75], cl ; add eax, 0x5dd8d7 ; call rax
0x0000000000424edf : add byte ptr [rax - 0x75], cl ; add eax, 0x5dd9f9 ; call rax
0x0000000000424e9c : add byte ptr [rax - 0x75], cl ; add eax, 0x5dda44 ; call rax
0x0000000000424d74 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ddb64 ; call rax
0x0000000000424d31 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ddbaf ; call rax
0x0000000000424ae8 : add byte ptr [rax - 0x75], cl ; add eax, 0x5dddf0 ; call rax
0x0000000000424ab3 : add byte ptr [rax - 0x75], cl ; add eax, 0x5dde2d ; call rax
0x0000000000423f8b : add byte ptr [rax - 0x75], cl ; add eax, 0x5de955 ; call rax
0x0000000000423b27 : add byte ptr [rax - 0x75], cl ; add eax, 0x5dedb9 ; call rax
0x000000000042336f : add byte ptr [rax - 0x75], cl ; add eax, 0x5df571 ; call rax
0x0000000000422beb : add byte ptr [rax - 0x75], cl ; add eax, 0x5dfcf5 ; call rax
0x0000000000422103 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e07dd ; call rax
0x0000000000421933 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e0fad ; call rax
0x0000000000420deb : add byte ptr [rax - 0x75], cl ; add eax, 0x5e1af5 ; call rax
0x0000000000420b11 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e1dcf ; call rax
0x0000000000420536 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e23a2 ; call rax
0x0000000000420515 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e23cb ; call rax
0x0000000000420391 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e2547 ; call rax
0x000000000042036d : add byte ptr [rax - 0x75], cl ; add eax, 0x5e2573 ; call rax
0x00000000004202b5 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e2623 ; call rax
0x000000000042028f : add byte ptr [rax - 0x75], cl ; add eax, 0x5e2651 ; call rax
0x00000000004201d7 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e2701 ; call rax
0x00000000004201b1 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e272f ; call rax
0x000000000041fee7 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e29f1 ; call rax
0x000000000041fea7 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e2a39 ; call rax
0x000000000041fdee : add byte ptr [rax - 0x75], cl ; add eax, 0x5e2aea ; call rax
0x000000000041fdae : add byte ptr [rax - 0x75], cl ; add eax, 0x5e2b32 ; call rax
0x000000000041fcf5 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e2be3 ; call rax
0x000000000041fcb8 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e2c28 ; call rax
0x000000000041fae3 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e2df5 ; call rax
0x000000000041fabf : add byte ptr [rax - 0x75], cl ; add eax, 0x5e2e21 ; call rax
0x000000000041fa07 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e2ed1 ; call rax
0x000000000041f9e1 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e2eff ; call rax
0x000000000041f929 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e2faf ; call rax
0x000000000041f903 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e2fdd ; call rax
0x000000000041f639 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e329f ; call rax
0x000000000041f5f9 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e32e7 ; call rax
0x000000000041f540 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e3398 ; call rax
0x000000000041f500 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e33e0 ; call rax
0x000000000041f447 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e3491 ; call rax
0x000000000041f40a : add byte ptr [rax - 0x75], cl ; add eax, 0x5e34d6 ; call rax
0x000000000041ee97 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e3a49 ; call rax
0x000000000041ecd5 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e3c0b ; call rax
0x000000000041e728 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e41b0 ; call rax
0x000000000041e671 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e426f ; call rax
0x000000000041e0f8 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e47e0 ; call rax
0x000000000041e041 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e489f ; call rax
0x000000000041da9f : add byte ptr [rax - 0x75], cl ; add eax, 0x5e4e41 ; call rax
0x000000000041d231 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e56af ; call rax
0x000000000041cdd1 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e5b0f ; call rax
0x000000000041c7a3 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e613d ; call rax
0x000000000041c514 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e63c4 ; call rax
0x000000000041c4f3 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e63ed ; call rax
0x000000000041bcd1 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e6c0f ; call rax
0x000000000041b2e4 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e75fc ; call rax
0x000000000041b1e2 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e76fe ; call rax
0x000000000041b003 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e78d5 ; call rax
0x000000000041af93 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e794d ; call rax
0x000000000041ad95 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e7b4b ; call rax
0x000000000041ab8a : add byte ptr [rax - 0x75], cl ; add eax, 0x5e7d4e ; call rax
0x000000000041aaf1 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e7def ; call rax
0x000000000041a81e : add byte ptr [rax - 0x75], cl ; add eax, 0x5e80ba ; call rax
0x000000000041a7db : add byte ptr [rax - 0x75], cl ; add eax, 0x5e8105 ; call rax
0x000000000041a723 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e81b5 ; call rax
0x000000000041a6dd : add byte ptr [rax - 0x75], cl ; add eax, 0x5e8203 ; call rax
0x000000000041a5d9 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e8307 ; call rax
0x000000000041a4cb : add byte ptr [rax - 0x75], cl ; add eax, 0x5e840d ; call rax
0x000000000041a46d : add byte ptr [rax - 0x75], cl ; add eax, 0x5e8473 ; call rax
0x000000000041a3a5 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e8533 ; call rax
0x000000000041a307 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e85d9 ; call rax
0x00000000004197b0 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e9128 ; call rax
0x000000000041976d : add byte ptr [rax - 0x75], cl ; add eax, 0x5e9173 ; call rax
0x0000000000419531 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e93a7 ; call rax
0x00000000004194ee : add byte ptr [rax - 0x75], cl ; add eax, 0x5e93f2 ; call rax
0x00000000004192b4 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e9624 ; call rax
0x000000000041926c : add byte ptr [rax - 0x75], cl ; add eax, 0x5e9674 ; call rax
0x0000000000418c11 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e9cc7 ; call rax
0x0000000000418bc9 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e9d17 ; call rax
0x0000000000418912 : add byte ptr [rax - 0x75], cl ; add eax, 0x5e9fce ; call rax
0x000000000041880b : add byte ptr [rax - 0x75], cl ; add eax, 0x5ea0cd ; call rax
0x00000000004187d3 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ea10d ; call rax
0x00000000004186c3 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ea215 ; call rax
0x0000000000418665 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ea27b ; call rax
0x000000000041859d : add byte ptr [rax - 0x75], cl ; add eax, 0x5ea33b ; call rax
0x00000000004184ff : add byte ptr [rax - 0x75], cl ; add eax, 0x5ea3e1 ; call rax
0x0000000000417bf2 : add byte ptr [rax - 0x75], cl ; add eax, 0x5eace6 ; call rax
0x0000000000417baa : add byte ptr [rax - 0x75], cl ; add eax, 0x5ead36 ; call rax
0x0000000000417909 : add byte ptr [rax - 0x75], cl ; add eax, 0x5eafd7 ; call rax
0x0000000000417801 : add byte ptr [rax - 0x75], cl ; add eax, 0x5eb0d7 ; call rax
0x00000000004177c9 : add byte ptr [rax - 0x75], cl ; add eax, 0x5eb117 ; call rax
0x000000000041770f : add byte ptr [rax - 0x75], cl ; add eax, 0x5eb1c9 ; call rax
0x00000000004176cf : add byte ptr [rax - 0x75], cl ; add eax, 0x5eb211 ; call rax
0x0000000000417616 : add byte ptr [rax - 0x75], cl ; add eax, 0x5eb2c2 ; call rax
0x00000000004175d3 : add byte ptr [rax - 0x75], cl ; add eax, 0x5eb30d ; call rax
0x0000000000417047 : add byte ptr [rax - 0x75], cl ; add eax, 0x5eb891 ; call rax
0x0000000000417004 : add byte ptr [rax - 0x75], cl ; add eax, 0x5eb8dc ; call rax
0x0000000000416d4b : add byte ptr [rax - 0x75], cl ; add eax, 0x5ebb8d ; call rax
0x0000000000416d08 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ebbd8 ; call rax
0x0000000000416b5c : add byte ptr [rax - 0x75], cl ; add eax, 0x5ebd84 ; call rax
0x0000000000416a56 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ebe82 ; call rax
0x0000000000416a21 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ebebf ; call rax
0x0000000000416911 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ebfc7 ; call rax
0x00000000004168b3 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ec02d ; call rax
0x00000000004167eb : add byte ptr [rax - 0x75], cl ; add eax, 0x5ec0ed ; call rax
0x000000000041674d : add byte ptr [rax - 0x75], cl ; add eax, 0x5ec193 ; call rax
0x0000000000415bd9 : add byte ptr [rax - 0x75], cl ; add eax, 0x5eccff ; call rax
0x0000000000415b91 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ecd4f ; call rax
0x0000000000415891 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ed047 ; call rax
0x0000000000415859 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ed087 ; call rax
0x0000000000414b19 : add byte ptr [rax - 0x75], cl ; add eax, 0x5eddc7 ; call rax
0x00000000004146b5 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ee22b ; call rax
0x0000000000413efd : add byte ptr [rax - 0x75], cl ; add eax, 0x5ee9e3 ; call rax
0x0000000000413779 : add byte ptr [rax - 0x75], cl ; add eax, 0x5ef167 ; call rax
0x000000000041208b : add byte ptr [rax - 0x75], cl ; add eax, 0x5f0855 ; call rax
0x00000000004118df : add byte ptr [rax - 0x75], cl ; add eax, 0x5f1001 ; call rax
0x0000000000410d97 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f1b49 ; call rax
0x0000000000410ac1 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f1e1f ; call rax
0x00000000004104ee : add byte ptr [rax - 0x75], cl ; add eax, 0x5f23ea ; call rax
0x00000000004104cd : add byte ptr [rax - 0x75], cl ; add eax, 0x5f2413 ; call rax
0x0000000000410349 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f258f ; call rax
0x0000000000410325 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f25bb ; call rax
0x000000000041026d : add byte ptr [rax - 0x75], cl ; add eax, 0x5f266b ; call rax
0x0000000000410247 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f2699 ; call rax
0x0000000000410036 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f28a2 ; call rax
0x000000000040fff5 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f28eb ; call rax
0x000000000040ff48 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f2990 ; call rax
0x000000000040ff03 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f29dd ; call rax
0x000000000040fd2f : add byte ptr [rax - 0x75], cl ; add eax, 0x5f2ba9 ; call rax
0x000000000040fd0b : add byte ptr [rax - 0x75], cl ; add eax, 0x5f2bd5 ; call rax
0x000000000040fc53 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f2c85 ; call rax
0x000000000040fc2d : add byte ptr [rax - 0x75], cl ; add eax, 0x5f2cb3 ; call rax
0x000000000040fa1c : add byte ptr [rax - 0x75], cl ; add eax, 0x5f2ebc ; call rax
0x000000000040f9db : add byte ptr [rax - 0x75], cl ; add eax, 0x5f2f05 ; call rax
0x000000000040f92e : add byte ptr [rax - 0x75], cl ; add eax, 0x5f2faa ; call rax
0x000000000040f8e9 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f2ff7 ; call rax
0x000000000040f377 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f3569 ; call rax
0x000000000040f1b5 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f372b ; call rax
0x000000000040ec10 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f3cc8 ; call rax
0x000000000040eb59 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f3d87 ; call rax
0x000000000040e5e0 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f42f8 ; call rax
0x000000000040e529 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f43b7 ; call rax
0x000000000040df87 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f4959 ; call rax
0x000000000040d729 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f51b7 ; call rax
0x000000000040d2d5 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f560b ; call rax
0x000000000040ccaf : add byte ptr [rax - 0x75], cl ; add eax, 0x5f5c31 ; call rax
0x000000000040ca20 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f5eb8 ; call rax
0x000000000040c9ff : add byte ptr [rax - 0x75], cl ; add eax, 0x5f5ee1 ; call rax
0x000000000040c1f3 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f66ed ; call rax
0x000000000040b576 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f7362 ; call rax
0x000000000040b52a : add byte ptr [rax - 0x75], cl ; add eax, 0x5f73b6 ; call rax
0x000000000040b35e : add byte ptr [rax - 0x75], cl ; add eax, 0x5f757a ; call rax
0x000000000040b319 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f75c7 ; call rax
0x000000000040b275 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f7663 ; call rax
0x000000000040b252 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f768e ; call rax
0x000000000040b029 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f78b7 ; call rax
0x000000000040aba6 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f7d32 ; call rax
0x000000000040ab0d : add byte ptr [rax - 0x75], cl ; add eax, 0x5f7dd3 ; call rax
0x0000000000408b5d : add byte ptr [rax - 0x75], cl ; add eax, 0x5f9d7b ; call rax
0x0000000000408b39 : add byte ptr [rax - 0x75], cl ; add eax, 0x5f9da7 ; call rax
0x00000000006927ee : add byte ptr [rax - 0x75], cl ; add eax, esi ; jns 0x6927ff ; pop rbx ; ret
0x0000000000498f3f : add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rcx - 0x77] ; ret 0x65e8
0x0000000000498f9c : add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rcx - 0x77] ; ret 0x8e8
0x000000000068f05f : add byte ptr [rax - 0x75], cl ; clc ; mov rax, qword ptr [rax + 0x18] ; ret
0x000000000068f07f : add byte ptr [rax - 0x75], cl ; clc ; ret
0x000000000054d5d8 : add byte ptr [rax - 0x75], cl ; cmp ebp, eax ; jmp qword ptr [rbx]
0x000000000041351b : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 + 0x29] ; ret 0x8948
0x0000000000478fba : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r9 - 0x77] ; retf -0x76b8
0x00000000005382de : add byte ptr [rax - 0x75], cl ; je 0x53830f ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000059d464 : add byte ptr [rax - 0x75], cl ; je 0x59d495 ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000005fd74d : add byte ptr [rax - 0x75], cl ; je 0x5fd77e ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000511359 : add byte ptr [rax - 0x75], cl ; jge 0x51131b ; call rax
0x0000000000582bdc : add byte ptr [rax - 0x75], cl ; jl 0x582c0d ; or byte ptr [rax - 0x77], cl ; ret
0x00000000006675b9 : add byte ptr [rax - 0x75], cl ; jl 0x6675ea ; or byte ptr [rax - 0x77], cl ; ret
0x00000000006913b7 : add byte ptr [rax - 0x75], cl ; jnp 0x6913cb ; call 0x6cde67
0x000000000067575f : add byte ptr [rax - 0x75], cl ; js 0x6757b5 ; mov eax, dword ptr [rax] ; ret
0x000000000067575e : add byte ptr [rax - 0x75], cl ; js 0x6757b6 ; mov eax, dword ptr [rax] ; ret
0x0000000000429b09 : add byte ptr [rax - 0x75], cl ; mov byte ptr [r8 + 0x29], r9b ; ret 0x8948
0x000000000053e098 : add byte ptr [rax - 0x75], cl ; mov byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00000000005baac7 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xffffec50 ; call rax
0x00000000005537fe : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffba8 ; call rax
0x0000000000553523 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffc38 ; call rax
0x000000000052c91c : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffc70 ; call rax
0x00000000005c880c : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffcc8 ; call rax
0x00000000006554b1 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffd88 ; call rax
0x000000000063bb13 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffe58 ; call rax
0x00000000005c9992 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffed8 ; call rax
0x0000000000653132 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xffffff40 ; call rax
0x00000000006498ba : add byte ptr [rax - 0x75], cl ; mov ebp, 0xffffff58 ; call rax
0x000000000064a55a : add byte ptr [rax - 0x75], cl ; mov ebp, 0xffffff60 ; call rax
0x0000000000533848 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xffffff78 ; call rax
0x00000000005d974c : add byte ptr [rax - 0x75], cl ; mov r8b, 0x8b ; add al, 0x89 ; ret 0x8b48
0x000000000040bbe0 : add byte ptr [rax - 0x75], cl ; mov r8d, 0xe8c78948 ; ret
0x000000000066a05c : add byte ptr [rax - 0x75], cl ; mov r8d, 0xe8c78948 ; retf
0x00000000006a7f7b : add byte ptr [rax - 0x75], cl ; or byte ptr [rax + 0x39], cl ; ret
0x00000000006ab95f : add byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x77] ; ret 0x65e8
0x00000000004e6945 : add byte ptr [rax - 0x75], cl ; or ecx, dword ptr [rbx - 0x76b61bab] ; retf -0x2977
0x0000000000506c5f : add byte ptr [rax - 0x75], cl ; or r8b, r14b ; add dword ptr [rax], 1 ; ret
0x0000000000506c6f : add byte ptr [rax - 0x75], cl ; or r8b, r14b ; sub dword ptr [rax], 1 ; ret
0x000000000068e348 : add byte ptr [rax - 0x75], cl ; pop r8 ; pop rbx ; ret
0x0000000000583f42 : add byte ptr [rax - 0x75], cl ; pop rbp ; clc ; leave ; ret
0x000000000051998e : add byte ptr [rax - 0x75], cl ; push rbp ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000066aa6a : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x00000000004ae80c : add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4928
0x000000000053b30b : add byte ptr [rax - 0x75], cl ; push rbp ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000519a5e : add byte ptr [rax - 0x75], cl ; push rbp ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000050215a : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x4848
0x0000000000414f89 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 + 0x29], 1 ; ret 0x8948
0x00000000005306a0 : add byte ptr [rax - 0x75], cl ; xor al, 0x24 ; mov rdi, rbx ; call rax
0x0000000000744a53 : add byte ptr [rax - 0x75], dh ; out dx, al ; call rax
0x0000000000749dcb : add byte ptr [rax - 0x76], ah ; clc ; call qword ptr [rax]
0x00000000006b295a : add byte ptr [rax - 0x77], cl ; adc al, bl ; nop ; ret
0x00000000006a832c : add byte ptr [rax - 0x77], cl ; add eax, 0x35a334 ; ret
0x000000000069e535 : add byte ptr [rax - 0x77], cl ; add eax, 0x36b7eb ; pop rbx ; ret
0x000000000069c77c : add byte ptr [rax - 0x77], cl ; add eax, 0x36d45c ; pop rbx ; ret
0x000000000068ebfc : add byte ptr [rax - 0x77], cl ; add eax, 0x3737cc ; ret
0x0000000000688265 : add byte ptr [rax - 0x77], cl ; add eax, 0x38142b ; ret
0x000000000066b7b2 : add byte ptr [rax - 0x77], cl ; add eax, 0x396616 ; ret
0x0000000000625139 : add byte ptr [rax - 0x77], cl ; add eax, 0x3e3637 ; leave ; ret
0x00000000005f858b : add byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x77] ; out dx, eax ; call 0x674839
0x000000000044010f : add byte ptr [rax - 0x77], cl ; clc ; leave ; ret
0x00000000006c6d0f : add byte ptr [rax - 0x77], cl ; clc ; mov al, sil ; ret
0x000000000068eb3f : add byte ptr [rax - 0x77], cl ; clc ; mov rdx, rsi ; ret
0x00000000006642b2 : add byte ptr [rax - 0x77], cl ; clc ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000065c89f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000006a187f : add byte ptr [rax - 0x77], cl ; clc ; shr rax, 0x20 ; ret
0x00000000006bea6f : add byte ptr [rax - 0x77], cl ; cmp eax, 0x34e269 ; ret
0x00000000006bea5f : add byte ptr [rax - 0x77], cl ; cmp eax, 0x34e271 ; ret
0x000000000053da8f : add byte ptr [rax - 0x77], cl ; cmp eax, 0x4c03f9 ; ret
0x000000000064b05e : add byte ptr [rax - 0x77], cl ; fbstp dword ptr [rcx] ; rol dh, 0x45 ; ret 0xe801
0x00000000006437e4 : add byte ptr [rax - 0x77], cl ; fbstp dword ptr [rcx] ; shr al, 0x63 ; ret
0x00000000005438dd : add byte ptr [rax - 0x77], cl ; fbstp dword ptr [rcx] ; shr al, 0x6a ; ret 0x13
0x0000000000593083 : add byte ptr [rax - 0x77], cl ; fbstp dword ptr [rcx] ; shr al, 0xc4 ; retf 0xe
0x0000000000631d62 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000006874f1 : add byte ptr [rax - 0x77], cl ; fdiv dword ptr [rbp + 0x46] ; call rax
0x00000000005056f7 : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; retf -0x7cb8
0x0000000000517ae3 : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x7f] ; ret 0x107
0x0000000000517bf7 : add byte ptr [rax - 0x77], cl ; fistp qword ptr [rsi + 1] ; call rax
0x000000000055357c : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x77] ; ret
0x000000000067caf7 : add byte ptr [rax - 0x77], cl ; fmul qword ptr [rax - 0x77] ; ret
0x000000000064e3b1 : add byte ptr [rax - 0x77], cl ; fsubr st(1) ; retf
0x00000000006580f4 : add byte ptr [rax - 0x77], cl ; fsubr st(3) ; mov dword ptr [rax - 0x77], ecx ; ret
0x0000000000518446 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; int1 ; ret 0x1b
0x00000000006b2438 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; jmp qword ptr [rdx]
0x000000000050b1d8 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; jmp rsi
0x000000000052846e : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; leave ; ret 0x1a
0x0000000000587c8b : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; lodsb al, byte ptr [rsi] ; retf 0x14
0x00000000005984a7 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; nop ; ret 0x13
0x0000000000594427 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; push rax ; retf
0x000000000041f1d0 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x0000000000593575 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0x1411
0x0000000000539c75 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0x19aa
0x0000000000535975 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0x19ed
0x0000000000407c75 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0x2cca
0x000000000051d96c : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x00000000006579bd : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf -0x15f9
0x000000000067177d : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf -0x26dc
0x00000000005c102d : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf -0x38
0x000000000063115d : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf -0x825
0x00000000005bfc6d : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf 0x114a
0x00000000005a2c6d : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf 0x131a
0x0000000000597f6d : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf 0x13c7
0x0000000000572f6d : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf 0x1617
0x000000000057056d : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf 0x1641
0x000000000054736d : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf 0x18d3
0x000000000052ee6d : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf 0x1a58
0x0000000000504f6d : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf 0x1cf7
0x0000000000503a6d : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf 0x1d0c
0x0000000000685f6d : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf 0x4e7
0x00000000005fd26d : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf 0xd74
0x0000000000407c3c : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; sti ; retf 0x2c
0x000000000056848c : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; stosd dword ptr [rdi], eax ; ret 0x16
0x0000000000512d5f : add byte ptr [rax - 0x77], cl ; fucompi st(3) ; retf 0x6690
0x00000000006075cf : add byte ptr [rax - 0x77], cl ; in eax, -0x15 ; fisttp dword ptr [rax - 0x77] ; ret
0x000000000040b092 : add byte ptr [rax - 0x77], cl ; iretd ; call rax
0x000000000040aafa : add byte ptr [rax - 0x77], cl ; iretd ; call rdx
0x00000000004cb33c : add byte ptr [rax - 0x77], cl ; iretd ; mov rsi, rax ; call 0x6875d9
0x000000000050b5cf : add byte ptr [rax - 0x77], cl ; ja 0x50b5f1 ; ret
0x000000000050bd5a : add byte ptr [rax - 0x77], cl ; ja 0x50bd6c ; ret
0x000000000050bdea : add byte ptr [rax - 0x77], cl ; ja 0x50bdfc ; ret
0x000000000050f72f : add byte ptr [rax - 0x77], cl ; ja 0x50f749 ; ret
0x000000000052608f : add byte ptr [rax - 0x77], cl ; ja 0x5260a1 ; ret
0x00000000005260af : add byte ptr [rax - 0x77], cl ; ja 0x5260c9 ; ret
0x000000000052b67f : add byte ptr [rax - 0x77], cl ; ja 0x52b691 ; ret
0x000000000052b69f : add byte ptr [rax - 0x77], cl ; ja 0x52b6b9 ; ret
0x000000000052db8a : add byte ptr [rax - 0x77], cl ; ja 0x52db9c ; ret
0x000000000052dc1a : add byte ptr [rax - 0x77], cl ; ja 0x52dc2c ; ret
0x000000000052edfa : add byte ptr [rax - 0x77], cl ; ja 0x52ee0c ; ret
0x000000000052ee8a : add byte ptr [rax - 0x77], cl ; ja 0x52ee9c ; ret
0x000000000053003a : add byte ptr [rax - 0x77], cl ; ja 0x53004c ; ret
0x00000000005300ca : add byte ptr [rax - 0x77], cl ; ja 0x5300dc ; ret
0x000000000054531f : add byte ptr [rax - 0x77], cl ; ja 0x545331 ; ret
0x000000000054533f : add byte ptr [rax - 0x77], cl ; ja 0x545359 ; ret
0x000000000054649a : add byte ptr [rax - 0x77], cl ; ja 0x5464ac ; ret
0x000000000054652a : add byte ptr [rax - 0x77], cl ; ja 0x54653c ; ret
0x000000000054f8da : add byte ptr [rax - 0x77], cl ; ja 0x54f8ec ; ret
0x000000000054f96a : add byte ptr [rax - 0x77], cl ; ja 0x54f97c ; ret
0x000000000055830f : add byte ptr [rax - 0x77], cl ; ja 0x558339 ; ret
0x0000000000558a4a : add byte ptr [rax - 0x77], cl ; ja 0x558a5c ; ret
0x0000000000558ada : add byte ptr [rax - 0x77], cl ; ja 0x558aec ; ret
0x000000000056b59f : add byte ptr [rax - 0x77], cl ; ja 0x56b5b1 ; ret
0x000000000056b5bf : add byte ptr [rax - 0x77], cl ; ja 0x56b5d9 ; ret
0x000000000056b7ba : add byte ptr [rax - 0x77], cl ; ja 0x56b7cc ; ret
0x000000000056b84a : add byte ptr [rax - 0x77], cl ; ja 0x56b85c ; ret
0x0000000000572efa : add byte ptr [rax - 0x77], cl ; ja 0x572f0c ; ret
0x0000000000572f8a : add byte ptr [rax - 0x77], cl ; ja 0x572f9c ; ret
0x0000000000595ebf : add byte ptr [rax - 0x77], cl ; ja 0x595ed1 ; ret
0x0000000000595edf : add byte ptr [rax - 0x77], cl ; ja 0x595ef9 ; ret
0x00000000005960aa : add byte ptr [rax - 0x77], cl ; ja 0x5960bc ; ret
0x000000000059613a : add byte ptr [rax - 0x77], cl ; ja 0x59614c ; ret
0x0000000000596f0a : add byte ptr [rax - 0x77], cl ; ja 0x596f1c ; ret
0x0000000000596f9a : add byte ptr [rax - 0x77], cl ; ja 0x596fac ; ret
0x0000000000597e6a : add byte ptr [rax - 0x77], cl ; ja 0x597e7c ; ret
0x0000000000597efa : add byte ptr [rax - 0x77], cl ; ja 0x597f0c ; ret
0x00000000005a2cea : add byte ptr [rax - 0x77], cl ; ja 0x5a2cfc ; ret
0x00000000005a2d7a : add byte ptr [rax - 0x77], cl ; ja 0x5a2d8c ; ret
0x00000000005a8caa : add byte ptr [rax - 0x77], cl ; ja 0x5a8cbc ; ret
0x00000000005a8d3a : add byte ptr [rax - 0x77], cl ; ja 0x5a8d4c ; ret
0x00000000005ae00f : add byte ptr [rax - 0x77], cl ; ja 0x5ae021 ; ret
0x00000000005ae02f : add byte ptr [rax - 0x77], cl ; ja 0x5ae049 ; ret
0x00000000005f8c9a : add byte ptr [rax - 0x77], cl ; ja 0x5f8cac ; ret
0x000000000062aa4f : add byte ptr [rax - 0x77], cl ; ja 0x62aa71 ; ret
0x000000000062b1ca : add byte ptr [rax - 0x77], cl ; ja 0x62b1dc ; ret
0x000000000062b25a : add byte ptr [rax - 0x77], cl ; ja 0x62b26c ; ret
0x00000000006a7e0f : add byte ptr [rax - 0x77], cl ; ja 0x6a7e41 ; ret
0x00000000006a89df : add byte ptr [rax - 0x77], cl ; ja 0x6a89f9 ; ret
0x00000000006a89de : add byte ptr [rax - 0x77], cl ; ja 0x6a89fa ; ret
0x00000000006c03ba : add byte ptr [rax - 0x77], cl ; ja 0x6c03cc ; ret
0x0000000000537444 : add byte ptr [rax - 0x77], cl ; loop 0x537450 ; ror byte ptr [rax - 0x77], 1 ; ret 0x8948
0x00000000005489a3 : add byte ptr [rax - 0x77], cl ; loop 0x5489f7 ; mov edi, ebx ; call rax
0x00000000005139f8 : add byte ptr [rax - 0x77], cl ; mov rsi, r12 ; call rax
0x000000000045fcf3 : add byte ptr [rax - 0x77], cl ; mov rsi, r8 ; call rax
0x00000000006a8431 : add byte ptr [rax - 0x77], cl ; or eax, 0x35a22f ; ret
0x000000000068ed11 : add byte ptr [rax - 0x77], cl ; or eax, 0x3736b7 ; ret
0x000000000050a67b : add byte ptr [rax - 0x77], cl ; or r8b, r13b ; retf
0x0000000000574394 : add byte ptr [rax - 0x77], cl ; out -0x18, eax ; ret
0x0000000000672b1f : add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x6bf556
0x0000000000578520 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x6d4746
0x000000000050b275 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000053b6a3 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rcx
0x000000000059305c : add byte ptr [rax - 0x77], cl ; out dx, eax ; xor eax, eax ; call 0x67fb5a
0x00000000006a89c8 : add byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004056e6 : add byte ptr [rax - 0x77], cl ; ret
0x000000000060d13d : add byte ptr [rax - 0x77], cl ; ret 0x10be
0x00000000004c6632 : add byte ptr [rax - 0x77], cl ; ret 0x15e8
0x000000000063fa8e : add byte ptr [rax - 0x77], cl ; ret 0x18be
0x00000000006234bb : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00000000005fc4bc : add byte ptr [rax - 0x77], cl ; ret 0x1be8
0x000000000040ae93 : add byte ptr [rax - 0x77], cl ; ret 0x22e8
0x000000000055eaf9 : add byte ptr [rax - 0x77], cl ; ret 0x2348
0x00000000004e33da : add byte ptr [rax - 0x77], cl ; ret 0x23e8
0x000000000064140f : add byte ptr [rax - 0x77], cl ; ret 0x28be
0x000000000063468a : add byte ptr [rax - 0x77], cl ; ret 0x28bf
0x0000000000505616 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000005054e2 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000566774 : add byte ptr [rax - 0x77], cl ; ret 0x2be
0x00000000004a3b81 : add byte ptr [rax - 0x77], cl ; ret 0x2c7
0x0000000000640199 : add byte ptr [rax - 0x77], cl ; ret 0x30be
0x0000000000640783 : add byte ptr [rax - 0x77], cl ; ret 0x38be
0x000000000066055e : add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000565d92 : add byte ptr [rax - 0x77], cl ; ret 0x3be
0x00000000004ced08 : add byte ptr [rax - 0x77], cl ; ret 0x3fe8
0x0000000000640861 : add byte ptr [rax - 0x77], cl ; ret 0x40be
0x000000000062d4da : add byte ptr [rax - 0x77], cl ; ret 0x48be
0x000000000062224c : add byte ptr [rax - 0x77], cl ; ret 0x4be
0x000000000062d5cd : add byte ptr [rax - 0x77], cl ; ret 0x50bf
0x000000000055e634 : add byte ptr [rax - 0x77], cl ; ret 0x53e8
0x0000000000623861 : add byte ptr [rax - 0x77], cl ; ret 0x5be
0x000000000055c6c0 : add byte ptr [rax - 0x77], cl ; ret 0x67e9
0x00000000006416e0 : add byte ptr [rax - 0x77], cl ; ret 0x68be
0x000000000040ae4c : add byte ptr [rax - 0x77], cl ; ret 0x69e8
0x0000000000623a1c : add byte ptr [rax - 0x77], cl ; ret 0x6be
0x000000000063fd7a : add byte ptr [rax - 0x77], cl ; ret 0x74be
0x00000000005f18af : add byte ptr [rax - 0x77], cl ; ret 0x78e8
0x000000000040ad3c : add byte ptr [rax - 0x77], cl ; ret 0x79e8
0x000000000063f68e : add byte ptr [rax - 0x77], cl ; ret 0x7cbe
0x00000000004a3b91 : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000063eed4 : add byte ptr [rax - 0x77], cl ; ret 0x84be
0x0000000000424c68 : add byte ptr [rax - 0x77], cl ; ret 0x858b
0x00000000005f4430 : add byte ptr [rax - 0x77], cl ; ret 0x87e8
0x000000000040a973 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004529e5 : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000043b9e0 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000552d69 : add byte ptr [rax - 0x77], cl ; ret 0x8966
0x0000000000413706 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000060d0d9 : add byte ptr [rax - 0x77], cl ; ret 0x8be
0x000000000047587a : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000675fcb : add byte ptr [rax - 0x77], cl ; ret 0x948
0x000000000063fca5 : add byte ptr [rax - 0x77], cl ; ret 0x94be
0x000000000063f028 : add byte ptr [rax - 0x77], cl ; ret 0x9cbe
0x000000000040b48b : add byte ptr [rax - 0x77], cl ; ret 0x9ce8
0x00000000005f0f87 : add byte ptr [rax - 0x77], cl ; ret 0xa0e8
0x000000000040ac0f : add byte ptr [rax - 0x77], cl ; ret 0xa6e8
0x000000000040ae02 : add byte ptr [rax - 0x77], cl ; ret 0xb3e8
0x00000000006b83e6 : add byte ptr [rax - 0x77], cl ; ret 0xb60f
0x000000000040e1b8 : add byte ptr [rax - 0x77], cl ; ret 0xbe
0x00000000006b5213 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000047fd87 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000684f5f : add byte ptr [rax - 0x77], cl ; ret 0xc189
0x00000000004f5686 : add byte ptr [rax - 0x77], cl ; ret 0xc7
0x0000000000542135 : add byte ptr [rax - 0x77], cl ; ret 0xc748
0x00000000006bd8d3 : add byte ptr [rax - 0x77], cl ; ret 0xc783
0x000000000063ebf8 : add byte ptr [rax - 0x77], cl ; ret 0xc8be
0x000000000063ee11 : add byte ptr [rax - 0x77], cl ; ret 0xd0be
0x000000000063f4af : add byte ptr [rax - 0x77], cl ; ret 0xd8be
0x0000000000623d2a : add byte ptr [rax - 0x77], cl ; ret 0xdde8
0x00000000006409e3 : add byte ptr [rax - 0x77], cl ; ret 0xe0be
0x00000000005f0f47 : add byte ptr [rax - 0x77], cl ; ret 0xe0e8
0x000000000063f0cb : add byte ptr [rax - 0x77], cl ; ret 0xe8be
0x000000000060d011 : add byte ptr [rax - 0x77], cl ; ret 0xf8be
0x0000000000601391 : add byte ptr [rax - 0x77], cl ; retf
0x00000000006618b6 : add byte ptr [rax - 0x77], cl ; retf -0x3d7d
0x0000000000664f68 : add byte ptr [rax - 0x77], cl ; retf -0x72b8
0x0000000000541398 : add byte ptr [rax - 0x77], cl ; retf -0x74b8
0x0000000000517b5e : add byte ptr [rax - 0x77], cl ; retf -0x76b3
0x000000000068c4b7 : add byte ptr [rax - 0x77], cl ; retf -0x76b4
0x00000000004a9e51 : add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000052a47f : add byte ptr [rax - 0x77], cl ; retf -0x7ab8
0x00000000006cc03f : add byte ptr [rax - 0x77], cl ; retf -0x7cb8
0x00000000006488da : add byte ptr [rax - 0x77], cl ; retf 0x2948
0x00000000006b412d : add byte ptr [rax - 0x77], cl ; retf 0x2b48
0x00000000006bf63d : add byte ptr [rax - 0x77], cl ; retf 0x6348
0x00000000005a3b57 : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000006af957 : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4c01
0x000000000063466d : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x39], 1 ; add al, 0x24 ; call qword ptr [rdi]
0x00000000006347c5 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x5fe8
0x0000000000634db0 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x74e8
0x0000000000415c75 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x8948
0x00000000004804fd : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x8b49
0x0000000000480667 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x8d48
0x000000000057999f : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x99e9
0x0000000000498286 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x9ee8
0x00000000005f0d56 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0xe283
0x0000000000634625 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0xffe8
0x00000000004a05b3 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; retf -0x76b8
0x00000000006c699f : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000004ecbe5 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rcx + rcx*4 - 0x36], 1 ; call rax
0x000000000051ed23 : add byte ptr [rax - 0x77], cl ; sbb r8b, bpl ; ret
0x000000000057794d : add byte ptr [rax - 0x77], cl ; sbb r8b, bpl ; ret 0xffff
0x0000000000577153 : add byte ptr [rax - 0x77], cl ; sbb r8b, bpl ; retf -1
0x000000000051aa3a : add byte ptr [rax - 0x77], cl ; std ; mov rdi, rax ; call rdx
0x00000000006d606d : add byte ptr [rax - 0x77], cl ; sub bl, r14b ; ret
0x000000000040b105 : add byte ptr [rax - 0x77], cl ; xlatb ; call rax
0x000000000062b04f : add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x00000000006d2660 : add byte ptr [rax - 0x77], cl ; xor ecx, ebp ; retf -8
0x0000000000521073 : add byte ptr [rax - 0x77], r9b ; fucompi st(0) ; ret
0x0000000000535974 : add byte ptr [rax - 0x77], r9b ; fucompi st(0) ; ret 0x19ed
0x0000000000597f6c : add byte ptr [rax - 0x77], r9b ; fucompi st(0) ; retf 0x13c7
0x0000000000517b5d : add byte ptr [rax - 0x77], r9b ; retf -0x76b3
0x000000000057e49f : add byte ptr [rax - 0x78], al ; cmp eax, 0x4802b9 ; ret
0x000000000050341f : add byte ptr [rax - 0x78], al ; ja 0x503439 ; ret
0x000000000050378f : add byte ptr [rax - 0x78], al ; ja 0x5037aa ; ret
0x000000000052607f : add byte ptr [rax - 0x78], al ; ja 0x5260a1 ; ret
0x000000000052b66f : add byte ptr [rax - 0x78], al ; ja 0x52b691 ; ret
0x000000000054530f : add byte ptr [rax - 0x78], al ; ja 0x545331 ; ret
0x000000000056b58f : add byte ptr [rax - 0x78], al ; ja 0x56b5b1 ; ret
0x000000000058446f : add byte ptr [rax - 0x78], al ; ja 0x584481 ; ret
0x0000000000595eaf : add byte ptr [rax - 0x78], al ; ja 0x595ed1 ; ret
0x00000000005adfff : add byte ptr [rax - 0x78], al ; ja 0x5ae021 ; ret
0x0000000000678618 : add byte ptr [rax - 0x78], al ; xor al, 0xf ; jne 0x678607 ; ret
0x00000000006787f8 : add byte ptr [rax - 0x78], al ; xor al, 0xf ; jne 0x6787e7 ; ret
0x00000000006789d8 : add byte ptr [rax - 0x78], al ; xor al, 0xf ; jne 0x6789c7 ; ret
0x00000000007b666f : add byte ptr [rax - 0x79], dl ; out dx, eax ; call qword ptr [rbx]
0x000000000040655a : add byte ptr [rax - 0x7aea003d], cl ; ret
0x0000000000640d09 : add byte ptr [rax - 0x7af0fb06], al ; ret 0x56
0x00000000006a330f : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 0xb] ; ret
0x000000000054db1f : add byte ptr [rax - 0x7b], cl ; div byte ptr [rsp + rax + 0x48] ; mov eax, dword ptr [rsi] ; ret
0x0000000000531159 : add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax + 0xf] ; ret
0x000000000067475f : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; cli ; ret 0
0x000000000066dd8f : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; retf 0x12c
0x0000000000407621 : add byte ptr [rax - 0x7b], cl ; push qword ptr [rdi + rbp*8 - 0x18] ; ret 0xc1e
0x00000000005eea71 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000005eea88 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000005f91c0 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax - 0x77], cl ; ret
0x0000000000541f0c : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 5
0x0000000000670cfa : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rax*2 + 0x48], 0x39 ; ret
0x000000000068ee69 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x3f], 0x5b ; ret
0x000000000057233a : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x00000000004071d2 : add byte ptr [rax - 0x7c], al ; fnsave dword ptr [rbx + rbp - 0x42] ; retf
0x0000000000668fcf : add byte ptr [rax - 0x7c], al ; push qword ptr [rbp + 0xb] ; ret
0x0000000000687d0f : add byte ptr [rax - 0x7cb7e8ec], cl ; ret 0x4801
0x00000000006d272d : add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x000000000060235f : add byte ptr [rax - 0x7d], cl ; cli ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000060f453 : add byte ptr [rax - 0x7d], cl ; cli ; adc dword ptr [rax - 0x77], ecx ; ret
0x00000000004f8be2 : add byte ptr [rax - 0x7d], cl ; cli ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000005001d1 : add byte ptr [rax - 0x7d], cl ; cli ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000004f8f74 : add byte ptr [rax - 0x7d], cl ; cli ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000063b12d : add byte ptr [rax - 0x7d], cl ; cli ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000553fc6 : add byte ptr [rax - 0x7d], cl ; cli ; or cl, byte ptr [rax - 0x77] ; ret
0x00000000005fd92b : add byte ptr [rax - 0x7d], cl ; cli ; or dword ptr [rax - 0x77], ecx ; ret
0x0000000000553de8 : add byte ptr [rax - 0x7d], cl ; cli ; or ecx, dword ptr [rax - 0x77] ; ret
0x0000000000645659 : add byte ptr [rax - 0x7d], cl ; cli ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000005b1696 : add byte ptr [rax - 0x7d], cl ; cli ; sbb cl, byte ptr [rax - 0x77] ; ret
0x0000000000645d20 : add byte ptr [rax - 0x7d], cl ; cli ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000056fa0f : add byte ptr [rax - 0x7d], cl ; in al, dx ; or al, ch ; xchg eax, edi ; call qword ptr [rcx]
0x00000000006bfb00 : add byte ptr [rax - 0x7d], cl ; js 0x6bfb15 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000512b6f : add byte ptr [rax - 0x7d], cl ; loopne 0x512b39 ; ret
0x0000000000512c7c : add byte ptr [rax - 0x7d], cl ; loopne 0x512c82 ; mov eax, dword ptr [rdi + rax + 0x28] ; ret
0x0000000000539ddf : add byte ptr [rax - 0x7d], cl ; loopne 0x539da9 ; ret
0x00000000006b245d : add byte ptr [rax - 0x7d], cl ; loopne 0x6b2427 ; ret
0x00000000004f9ef2 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000058b8cf : add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000006b0229 : add byte ptr [rax - 0x7d], cl ; ret 0x4001
0x00000000006b0203 : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000064eb5d : add byte ptr [rax - 0x7d], cl ; ret 0x410f
0x000000000053f2d1 : add byte ptr [rax - 0x7d], cl ; ret 0x4501
0x0000000000477e6b : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000051cb06 : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004fc664 : add byte ptr [rax - 0x7d], cl ; ret 0x480f
0x00000000006682f2 : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000068fd29 : add byte ptr [rax - 0x7d], cl ; ret 0x4812
0x000000000052660e : add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x000000000064a14f : add byte ptr [rax - 0x7d], cl ; ret 0x481f
0x0000000000671efe : add byte ptr [rax - 0x7d], cl ; ret 0x4860
0x000000000051c93f : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000006720f0 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000053537a : add byte ptr [rax - 0x7d], cl ; ret 0x4c14
0x00000000006627ef : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000006cdd07 : add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000068ee4f : add byte ptr [rax - 0x7d], cl ; ret 0x8401
0x0000000000650277 : add byte ptr [rax - 0x7d], cl ; ret 0xbe0f
0x0000000000575522 : add byte ptr [rax - 0x7d], cl ; ret 0xe808
0x0000000000687d37 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000068f0f7 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret
0x000000000068edc7 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x8001
0x00000000005cdc34 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rdi + 0x48], 0x89 ; ret 0x8348
0x00000000005e98f9 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rdi + 0x49], 0x89 ; ret
0x00000000005ecc73 : add byte ptr [rax - 0x7d], cl ; sar byte ptr [rdi + 0x49], 0x89 ; ret
0x000000000051d9aa : add byte ptr [rax - 0x7d], r9b ; ret
0x000000000074aceb : add byte ptr [rax - 0x7e], ah ; stc ; jmp rax
0x0000000000746983 : add byte ptr [rax - 0x7e], al ; call qword ptr [rax]
0x0000000000743c63 : add byte ptr [rax - 0x7e], dl ; in al, dx ; jmp qword ptr [rax]
0x00000000007b62f7 : add byte ptr [rax - 0x7f], ch ; out dx, eax ; call qword ptr [rbx]
0x0000000000512ead : add byte ptr [rax - 0x7f], cl ; ret
0x000000000051a460 : add byte ptr [rax - 0x7f], cl ; ret 0x107
0x000000000051a166 : add byte ptr [rax - 0x7f], cl ; ret 0x2a1
0x0000000000744133 : add byte ptr [rax - 0x7f], dh ; in eax, dx ; call qword ptr [rax]
0x000000000053a045 : add byte ptr [rax - 0x7f], r9b ; ret
0x000000000051a165 : add byte ptr [rax - 0x7f], r9b ; ret 0x2a1
0x00000000006c6b2f : add byte ptr [rax - 0x80], al ; dec dword ptr [rbx] ; setne al ; ret
0x00000000006c6b1f : add byte ptr [rax - 0x80], al ; dec dword ptr [rdx] ; setne al ; ret
0x00000000005ae2df : add byte ptr [rax - 0x80], al ; inc dword ptr [rbx] ; setne al ; ret
0x00000000006aa9cf : add byte ptr [rax - 0x80], al ; inc dword ptr [rcx] ; seta al ; ret
0x00000000005218cf : add byte ptr [rax - 0x80], al ; inc dword ptr [rcx] ; setne al ; ret
0x00000000005ae32f : add byte ptr [rax - 0x80], al ; inc dword ptr [rdi] ; setne al ; ret
0x00000000005ae2ef : add byte ptr [rax - 0x80], al ; inc dword ptr [rdx] ; setne al ; ret
0x00000000005ae31f : add byte ptr [rax - 0x80], al ; inc dword ptr [rsi] ; setne al ; ret
0x00000000007478cb : add byte ptr [rax - 0xa], al ; hlt ; call qword ptr [rax]
0x00000000007afd27 : add byte ptr [rax - 0xd], bh ; in eax, dx ; jmp qword ptr [rcx]
0x00000000004065ee : add byte ptr [rax - 0xeea003d], cl ; ret 0x5f
0x00000000006596ef : add byte ptr [rax - 1], bh ; ret
0x000000000065e507 : add byte ptr [rax - 2], bh ; ret
0x0000000000744edb : add byte ptr [rax - 2], dl ; out dx, al ; call rax
0x0000000000660977 : add byte ptr [rax - 3], bh ; ret
0x00000000007b0177 : add byte ptr [rax - 3], bl ; in eax, dx ; call qword ptr [rcx]
0x00000000007b006f : add byte ptr [rax - 5], al ; in eax, dx ; jmp qword ptr [rbx]
0x000000000065e6df : add byte ptr [rax - 6], bh ; ret
0x00000000007aff97 : add byte ptr [rax - 6], bl ; in eax, dx ; jmp qword ptr [rax]
0x000000000065e6de : add byte ptr [rax - 6], dil ; ret
0x0000000000744eb3 : add byte ptr [rax - 9], bl ; out dx, al ; call qword ptr [rax]
0x0000000000757c13 : add byte ptr [rax*8 - 0x1fec0000], cl ; iretd ; call qword ptr [rcx]
0x0000000000757c33 : add byte ptr [rax*8 - 0x1ffa0000], ch ; iretd ; call qword ptr [rcx]
0x00000000006c4d6c : add byte ptr [rax], 0 ; add al, bl ; retf -0x3e22
0x00000000005bbdb2 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000051be33 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000006bdacb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov byte ptr [rdi + 3], 1 ; ret
0x00000000006c704b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; ret
0x000000000068f543 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, esi ; ret
0x000000000053b5b3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000509c93 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x0000000000503e8b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000440024 : add byte ptr [rax], 0 ; add byte ptr [rcx], bh ; ret 0x117c
0x0000000000662ed6 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; retf -0x7d17
0x000000000057626f : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xb60f
0x000000000050ff67 : add byte ptr [rax], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000078f620 : add byte ptr [rax], 0xe2 ; jmp qword ptr [rbx]
0x0000000000748d8b : add byte ptr [rax], ah ; adc esi, edi ; jmp qword ptr [rax]
0x00000000007557ab : add byte ptr [rax], ah ; add al, ah ; mov edi, ecx ; jmp rsi
0x00000000006ac24b : add byte ptr [rax], ah ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000007a78cf : add byte ptr [rax], ah ; add ch, ah ; call qword ptr [rdx]
0x000000000074a6cb : add byte ptr [rax], ah ; and bh, cl ; call rax
0x000000000074506b : add byte ptr [rax], ah ; and ch, bh ; jmp qword ptr [rax]
0x000000000074a69b : add byte ptr [rax], ah ; and cl, bh ; jmp qword ptr [rax]
0x000000000073e563 : add byte ptr [rax], ah ; and esp, edx ; jmp rax
0x0000000000740d43 : add byte ptr [rax], ah ; cmp esp, esi ; jmp rax
0x0000000000744243 : add byte ptr [rax], ah ; cmpsb byte ptr [rsi], byte ptr [rdi] ; in eax, dx ; call rax
0x000000000075785f : add byte ptr [rax], ah ; fmul st(7) ; call rsp
0x000000000076cb5f : add byte ptr [rax], ah ; fstp st(1) ; call qword ptr [rcx]
0x000000000078a61f : add byte ptr [rax], ah ; fsub st(0) ; jmp qword ptr [rax]
0x0000000000743e7b : add byte ptr [rax], ah ; fsub st(4), st(0) ; call rax
0x0000000000742deb : add byte ptr [rax], ah ; fsubr st(2) ; call qword ptr [rax]
0x0000000000746fab : add byte ptr [rax], ah ; hlt ; jmp qword ptr [rax]
0x000000000073b573 : add byte ptr [rax], ah ; in al, -0x23 ; jmp qword ptr [rax]
0x0000000000744083 : add byte ptr [rax], ah ; in eax, dx ; call rax
0x0000000000757bd7 : add byte ptr [rax], ah ; iretd ; jmp qword ptr [rax]
0x0000000000743c03 : add byte ptr [rax], ah ; jbe 0x743bf7 ; call rax
0x00000000007889ef : add byte ptr [rax], ah ; jg 0x7889d7 ; jmp qword ptr [rcx]
0x000000000079e2ef : add byte ptr [rax], ah ; jmp rdi
0x00000000006d148b : add byte ptr [rax], ah ; jne 0x6d1474 ; ret
0x00000000007493d3 : add byte ptr [rax], ah ; jno 0x7493d2 ; jmp rax
0x000000000073b043 : add byte ptr [rax], ah ; jo 0x73b028 ; jmp qword ptr [rax]
0x0000000000748013 : add byte ptr [rax], ah ; lodsb al, byte ptr [rsi] ; cmc ; call qword ptr [rax]
0x00000000007bb5cf : add byte ptr [rax], ah ; loope 0x7bb5c7 ; jmp rbx
0x0000000000741d5b : add byte ptr [rax], ah ; mov bh, 0xe7 ; jmp rax
0x00000000007b67af : add byte ptr [rax], ah ; mov ch, bh ; call qword ptr [rbx]
0x00000000007b704f : add byte ptr [rax], ah ; mov dl, 0xef ; call qword ptr [rdi]
0x0000000000736363 : add byte ptr [rax], ah ; mov ecx, edx ; jmp rax
0x0000000000742313 : add byte ptr [rax], ah ; movsxd rbp, eax ; call qword ptr [rax]
0x000000000073ee23 : add byte ptr [rax], ah ; or ah, bl ; jmp qword ptr [rax]
0x000000000073ee13 : add byte ptr [rax], ah ; or bl, ah ; call rax
0x000000000078fa7f : add byte ptr [rax], ah ; or dl, ah ; jmp qword ptr [rbx]
0x000000000074637b : add byte ptr [rax], ah ; or esi, ebx ; call rax
0x000000000074528b : add byte ptr [rax], ah ; out dx, eax ; call qword ptr [rax]
0x00000000007b4a4f : add byte ptr [rax], ah ; out dx, eax ; jmp qword ptr [rbx]
0x0000000000747cb3 : add byte ptr [rax], ah ; pop rax ; cmc ; jmp qword ptr [rax]
0x00000000007466d3 : add byte ptr [rax], ah ; push rbp ; jmp rax
0x000000000073bb13 : add byte ptr [rax], ah ; push rdi ; fdivp st(7) ; push rax ; ret
0x000000000040238f : add byte ptr [rax], ah ; ret
0x000000000070c0d7 : add byte ptr [rax], ah ; ret 0x58
0x000000000070c1cf : add byte ptr [rax], ah ; ret 0x70
0x000000000073eb63 : add byte ptr [rax], ah ; ret 0xffe2
0x000000000079a2df : add byte ptr [rax], ah ; ret 0xffe6
0x000000000074992b : add byte ptr [rax], ah ; ret 0xfff7
0x000000000074a123 : add byte ptr [rax], ah ; ret 0xfff8
0x00000000006d9717 : add byte ptr [rax], ah ; retf
0x0000000000741f4b : add byte ptr [rax], ah ; retf -0x19
0x0000000000774fef : add byte ptr [rax], ah ; retf -0x25
0x000000000074a1e3 : add byte ptr [rax], ah ; retf -8
0x00000000006f779f : add byte ptr [rax], ah ; retf 0x51
0x00000000006c9671 : add byte ptr [rax], ah ; sbb byte ptr [rbx], dh ; mov dword ptr [rax + 8], ebx ; pop rbx ; ret
0x000000000073aba3 : add byte ptr [rax], ah ; sbb ebp, ebx ; call rax
0x0000000000740bdb : add byte ptr [rax], ah ; sub dh, ah ; call qword ptr [rax]
0x00000000007b3c6f : add byte ptr [rax], ah ; sub ebp, edi ; jmp qword ptr [rcx]
0x0000000000748f7b : add byte ptr [rax], ah ; xor bh, dh ; call qword ptr [rax]
0x000000000074a793 : add byte ptr [rax], ah ; xor cl, bh ; call rax
0x000000000074516b : add byte ptr [rax], ah ; xor ebp, edi ; inc dword ptr [rax] ; ret 6
0x000000000077615f : add byte ptr [rax], ah ; xor esp, ebx ; jmp qword ptr [rax]
0x00000000007a79f6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; hlt ; ret 5
0x00000000007a7aee : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x00000000007b81ee : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; retf 6
0x000000000077796e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 2
0x00000000007a795e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 5
0x0000000000777956 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; ret 2
0x00000000007a7a9e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; ret
0x000000000077799e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; ret 2
0x000000000079ed5a : add byte ptr [rax], al ; adc al, 0x36 ; add eax, 0xe8383800 ; call rsp
0x000000000078f61a : add byte ptr [rax], al ; adc al, 0x3f ; add al, 0 ; add byte ptr [rax], 0xe2 ; jmp qword ptr [rbx]
0x000000000074f75a : add byte ptr [rax], al ; adc al, 0x40 ; add byte ptr [rax], al ; in al, dx ; cmp ecx, ebp ; call rsp
0x00000000007a0e1a : add byte ptr [rax], al ; adc al, 0x57 ; add eax, 0xe8a3a000 ; call qword ptr [rax]
0x00000000007a191a : add byte ptr [rax], al ; adc al, 0x62 ; add eax, 0xe8b58000 ; jmp qword ptr [rbx]
0x00000000007a231a : add byte ptr [rax], al ; adc al, 0x6c ; add eax, 0xe8f58000 ; call qword ptr [rax]
0x00000000007a265a : add byte ptr [rax], al ; adc al, 0x6f ; add eax, 0xe8fe1000 ; call rsi
0x00000000007a401a : add byte ptr [rax], al ; adc al, 0x89 ; add eax, 0xe9a0a000 ; call qword ptr [rdi]
0x000000000075455a : add byte ptr [rax], al ; adc al, 0x8e ; add byte ptr [rax], al ; call 0xffffffffd575148e
0x000000000075495a : add byte ptr [rax], al ; adc al, 0x92 ; add byte ptr [rax], al ; sbb bh, byte ptr [rbx] ; iretd ; call rsp
0x00000000007a4d1a : add byte ptr [rax], al ; adc al, 0x96 ; add eax, 0xeb3b5000 ; call qword ptr [rbx]
0x0000000000784f5a : add byte ptr [rax], al ; adc al, 0x98 ; add eax, dword ptr [rax] ; push rax ; rcr edi, cl ; call rax
0x000000000078671a : add byte ptr [rax], al ; adc al, 0xb0 ; add eax, dword ptr [rax] ; sal ch, 0xdf ; call qword ptr [rbx]
0x00000000007a6f1a : add byte ptr [rax], al ; adc al, 0xb8 ; add eax, 0xebdc4000 ; call qword ptr [rsi]
0x000000000075785a : add byte ptr [rax], al ; adc al, 0xc1 ; add byte ptr [rax], al ; and al, bl ; iretd ; call rsp
0x000000000079815a : add byte ptr [rax], al ; adc al, 0xca ; add al, 0 ; ret 0xe5d8
0x00000000007a811a : add byte ptr [rax], al ; adc al, 0xca ; add eax, 0xec1c6200 ; call qword ptr [rbx]
0x0000000000733dcb : add byte ptr [rax], al ; adc al, 0xcd ; call rax
0x000000000075875a : add byte ptr [rax], al ; adc al, 0xd0 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; or edx, eax ; call rsp
0x0000000000757c16 : add byte ptr [rax], al ; adc al, 0xe0 ; iretd ; call qword ptr [rcx]
0x00000000007d95d9 : add byte ptr [rax], al ; adc bl, byte ptr [rdi] ; ret
0x000000000074d4a6 : add byte ptr [rax], al ; adc byte ptr [rax - 0x34], dh ; call rcx
0x00000000007cbaff : add byte ptr [rax], al ; adc byte ptr [rdx - 0xe], 0xe ; ret 0x69
0x000000000078b6bf : add byte ptr [rax], al ; adc esp, ecx ; call qword ptr [rbx]
0x0000000000792be9 : add byte ptr [rax], al ; add ah, ah ; je 0x792bfb ; add byte ptr [rsi], ch ; retf -0x1d
0x0000000000777b29 : add byte ptr [rax], al ; add ah, ah ; ret
0x00000000007582e9 : add byte ptr [rax], al ; add ah, ah ; retf
0x0000000000768229 : add byte ptr [rax], al ; add ah, ah ; retf 1
0x000000000074b7c9 : add byte ptr [rax], al ; add ah, al ; add byte ptr [rax], al ; add byte ptr [rdx - 0x2a], dl ; retf
0x000000000076c1c9 : add byte ptr [rax], al ; add ah, al ; or al, byte ptr [rdx] ; add byte ptr [rax], dl ; ret 0xffd9
0x0000000000761609 : add byte ptr [rax], al ; add ah, al ; pop rsi ; add dword ptr [rax], eax ; retf -0x2bfd
0x0000000000757a09 : add byte ptr [rax], al ; add ah, al ; ret 0
0x00000000007a79c9 : add byte ptr [rax], al ; add ah, al ; ret 5
0x00000000007582c9 : add byte ptr [rax], al ; add ah, al ; retf
0x0000000000778209 : add byte ptr [rax], al ; add ah, al ; retf 2
0x0000000000750f01 : add byte ptr [rax], al ; add ah, bh ; push rdi ; add byte ptr [rax], al ; retf -0x33
0x00000000006d94a5 : add byte ptr [rax], al ; add ah, bh ; ret
0x0000000000797a41 : add byte ptr [rax], al ; add ah, bh ; ret 4
0x0000000000778241 : add byte ptr [rax], al ; add ah, bh ; retf 2
0x000000000079c701 : add byte ptr [rax], al ; add ah, bh ; syscall
0x0000000000771321 : add byte ptr [rax], al ; add ah, bl ; pop rbx ; add al, byte ptr [rax] ; cwde ; ret
0x00000000007b82e1 : add byte ptr [rax], al ; add ah, bl ; retf
0x0000000000788221 : add byte ptr [rax], al ; add ah, bl ; retf 3
0x00000000007a81e1 : add byte ptr [rax], al ; add ah, bl ; retf 5
0x000000000077e7e1 : add byte ptr [rax], al ; add ah, bl ; xor byte ptr [rbx], al ; add al, bl ; retf
0x0000000000779331 : add byte ptr [rax], al ; add ah, ch ; fild dword ptr [rdx] ; add al, bh ; ret 0xffdc
0x00000000007663f1 : add byte ptr [rax], al ; add ah, ch ; lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; ret 0xd5d0
0x00000000007c1438 : add byte ptr [rax], al ; add ah, ch ; or eax, 0x169f34 ; ret 0x50e
0x0000000000750ff1 : add byte ptr [rax], al ; add ah, ch ; pop rax ; add byte ptr [rax], al ; xchg eax, edx ; retf
0x0000000000757af1 : add byte ptr [rax], al ; add ah, ch ; ret
0x00000000007679f1 : add byte ptr [rax], al ; add ah, ch ; ret 1
0x00000000007b79f1 : add byte ptr [rax], al ; add ah, ch ; ret 6
0x00000000007b81f1 : add byte ptr [rax], al ; add ah, ch ; retf 6
0x00000000007677f1 : add byte ptr [rax], al ; add ah, ch ; rol byte ptr [rcx], 0 ; retf -0x2901
0x0000000000794a31 : add byte ptr [rax], al ; add ah, ch ; xchg eax, edx ; add al, 0 ; ret 0xe4b8
0x0000000000757ad1 : add byte ptr [rax], al ; add ah, cl ; ret
0x00000000007679d1 : add byte ptr [rax], al ; add ah, cl ; ret 1
0x00000000007682d1 : add byte ptr [rax], al ; add ah, cl ; retf
0x000000000075ab39 : add byte ptr [rax], al ; add ah, dh ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000756af9 : add byte ptr [rax], al ; add ah, dh ; mov bl, 0 ; add byte ptr [rsi], bl ; ret 0xffcf
0x000000000076c339 : add byte ptr [rax], al ; add ah, dh ; or eax, dword ptr [rdx] ; add al, al ; ret
0x0000000000767af9 : add byte ptr [rax], al ; add ah, dh ; ret
0x0000000000787a39 : add byte ptr [rax], al ; add ah, dh ; ret 3
0x00000000007979f9 : add byte ptr [rax], al ; add ah, dh ; ret 4
0x00000000007a79f9 : add byte ptr [rax], al ; add ah, dh ; ret 5
0x00000000007682f9 : add byte ptr [rax], al ; add ah, dh ; retf
0x000000000074ba19 : add byte ptr [rax], al ; add ah, dl ; add al, byte ptr [rax] ; add ah, dl ; stc ; retf
0x0000000000756b19 : add byte ptr [rax], al ; add ah, dl ; mov bl, 0 ; add byte ptr [rax], ch ; ret 0xffcf
0x00000000007608d9 : add byte ptr [rax], al ; add ah, dl ; push rcx ; add dword ptr [rax], eax ; pop rsp ; ret 0xffd3
0x0000000000767ad9 : add byte ptr [rax], al ; add ah, dl ; ret
0x00000000007979d9 : add byte ptr [rax], al ; add ah, dl ; ret 4
0x00000000007681d9 : add byte ptr [rax], al ; add ah, dl ; retf 1
0x00000000007b81d9 : add byte ptr [rax], al ; add ah, dl ; retf 6
0x00000000007577d9 : add byte ptr [rax], al ; add ah, dl ; rol byte ptr [rax], 0 ; ret 0xcfd7
0x000000000079c6d9 : add byte ptr [rax], al ; add ah, dl ; syscall
0x000000000078f752 : add byte ptr [rax], al ; add al, 0 ; pop rax ; add ah, dl ; jmp qword ptr [rdi]
0x000000000075cc0a : add byte ptr [rax], al ; add al, 0x15 ; add dword ptr [rax], eax ; retf -0x2e9e
0x0000000000769c0e : add byte ptr [rax], al ; add al, 0x1c ; retf 0x7c
0x000000000075e40a : add byte ptr [rax], al ; add al, 0x2d ; add dword ptr [rax], eax ; retf -0x2df2
0x000000000079f30a : add byte ptr [rax], al ; add al, 0x3c ; add eax, 0xe85e1200 ; jmp qword ptr [rcx]
0x000000000079fa0a : add byte ptr [rax], al ; add al, 0x43 ; add eax, 0xe8677000 ; call qword ptr [rbx]
0x0000000000769d2e : add byte ptr [rax], al ; add al, 0x50 ; retf
0x000000000079080a : add byte ptr [rax], al ; add al, 0x51 ; add al, 0 ; add byte ptr [rcx - 0x1e], ah ; jmp qword ptr [rbx]
0x0000000000750e4a : add byte ptr [rax], al ; add al, 0x57 ; add byte ptr [rax], al ; ret 0xcdc7
0x0000000000769c5e : add byte ptr [rax], al ; add al, 0x60 ; retf 0x7c
0x0000000000769406 : add byte ptr [rax], al ; add al, 0x64 ; ret
0x000000000079acf6 : add byte ptr [rax], al ; add al, 0x64 ; retf
0x0000000000792c0a : add byte ptr [rax], al ; add al, 0x75 ; add al, 0 ; retf -0x1d
0x0000000000783c5e : add byte ptr [rax], al ; add al, 0x78 ; ret
0x0000000000769d8e : add byte ptr [rax], al ; add al, 0x78 ; retf
0x0000000000783d3e : add byte ptr [rax], al ; add al, 0x84 ; ret
0x0000000000763e4a : add byte ptr [rax], al ; add al, 0x87 ; add dword ptr [rax], eax ; ret 0xd52e
0x00000000007559de : add byte ptr [rax], al ; add al, 0x97 ; iretd ; call rsp
0x000000000075599e : add byte ptr [rax], al ; add al, 0x97 ; iretd ; jmp qword ptr [rsi]
0x0000000000783bce : add byte ptr [rax], al ; add al, 0xa0 ; ret 0x7d
0x0000000000783d6e : add byte ptr [rax], al ; add al, 0xa4 ; ret
0x00000000007693d6 : add byte ptr [rax], al ; add al, 0xa4 ; ret 0x7c
0x000000000076644a : add byte ptr [rax], al ; add al, 0xad ; add dword ptr [rax], eax ; hlt ; rcl ebp, 1 ; call rsp
0x0000000000769c8e : add byte ptr [rax], al ; add al, 0xb0 ; retf 0x7c
0x000000000079694a : add byte ptr [rax], al ; add al, 0xb2 ; add al, 0 ; sub cl, byte ptr [rax - 0x1b] ; call qword ptr [rax]
0x0000000000756c4a : add byte ptr [rax], al ; add al, 0xb5 ; add byte ptr [rax], al ; mov ah, 0xc3 ; iretd ; call rsp
0x000000000076734a : add byte ptr [rax], al ; add al, 0xbc ; add dword ptr [rax], eax ; add bl, byte ptr [rsi - 0x2a] ; call rsp
0x0000000000783db6 : add byte ptr [rax], al ; add al, 0xc4 ; ret
0x0000000000777e0a : add byte ptr [rax], al ; add al, 0xc7 ; add al, byte ptr [rax] ; retf
0x00000000007695ce : add byte ptr [rax], al ; add al, 0xd4 ; ret
0x0000000000757c76 : add byte ptr [rax], al ; add al, 0xe0 ; iretd ; call qword ptr [rbx]
0x000000000079ae2f : add byte ptr [rax], al ; add al, 0xe7 ; jmp qword ptr [rcx]
0x000000000079a30a : add byte ptr [rax], al ; add al, 0xec ; add al, 0 ; nop ; ret 0xffe6
0x0000000000783de6 : add byte ptr [rax], al ; add al, 0xec ; ret
0x0000000000769cf6 : add byte ptr [rax], al ; add al, 0xec ; retf 0x7c
0x000000000076b80a : add byte ptr [rax], al ; add al, 1 ; add al, byte ptr [rax] ; nop ; mov dl, 0xd9 ; call qword ptr [rcx]
0x000000000074b80a : add byte ptr [rax], al ; add al, 1 ; add byte ptr [rax], al ; mov bl, bl ; retf
0x000000000074ba4a : add byte ptr [rax], al ; add al, 3 ; add byte ptr [rax], al ; dec ebx ; call rax
0x000000000079bd4a : add byte ptr [rax], al ; add al, 6 ; add eax, 0xe786aa00 ; call rsp
0x0000000000783c06 : add byte ptr [rax], al ; add al, 8 ; ret
0x00000000004025cd : add byte ptr [rax], al ; add al, ah ; ret
0x00000000004022cd : add byte ptr [rax], al ; add al, ah ; ret 0x9f
0x00000000007065ed : add byte ptr [rax], al ; add al, ah ; retf
0x000000000070ca8d : add byte ptr [rax], al ; add al, ah ; retf 0x70
0x00000000006d95fd : add byte ptr [rax], al ; add al, ah ; retf 0x9f
0x000000000040256d : add byte ptr [rax], al ; add al, al ; ret
0x00000000006f76a5 : add byte ptr [rax], al ; add al, al ; ret 0x51
0x00000000006fde0d : add byte ptr [rax], al ; add al, al ; ret 0x54
0x00000000006dccb5 : add byte ptr [rax], al ; add al, al ; retf
0x0000000000724e25 : add byte ptr [rax], al ; add al, al ; retf 0x66
0x0000000000402615 : add byte ptr [rax], al ; add al, bh ; ret
0x0000000000402315 : add byte ptr [rax], al ; add al, bh ; ret 0x9f
0x000000000072c9f5 : add byte ptr [rax], al ; add al, bh ; retf
0x00000000004025b5 : add byte ptr [rax], al ; add al, bl ; ret
0x00000000004022b5 : add byte ptr [rax], al ; add al, bl ; ret 0x9f
0x00000000006a54d5 : add byte ptr [rax], al ; add al, bl ; retf -0x3d7d
0x00000000006c4d6d : add byte ptr [rax], al ; add al, bl ; retf -0x3e22
0x000000000074f926 : add byte ptr [rax], al ; add al, byte ptr [rax - 0x33] ; call rcx
0x000000000049f364 : add byte ptr [rax], al ; add al, ch ; adc esp, dword ptr fs:[rdx] ; add cl, cl ; ret
0x000000000040e4c8 : add byte ptr [rax], al ; add al, ch ; add byte ptr [rdx], ah ; sub eax, dword ptr [rax] ; leave ; ret
0x000000000055cff3 : add byte ptr [rax], al ; add al, ch ; add eax, 0x89001291 ; ret
0x000000000042cca4 : add byte ptr [rax], al ; add al, ch ; and al, 0x3a ; sub dword ptr [rax], eax ; leave ; ret
0x000000000047d0a5 : add byte ptr [rax], al ; add al, ch ; and esi, dword ptr [rsi] ; and al, 0 ; leave ; ret
0x0000000000640e1b : add byte ptr [rax], al ; add al, ch ; call qword ptr [rax]
0x00000000005e41f3 : add byte ptr [rax], al ; add al, ch ; call rax
0x000000000049d5d9 : add byte ptr [rax], al ; add al, ch ; call rdx
0x0000000000582339 : add byte ptr [rax], al ; add al, ch ; call rsi
0x00000000005d265f : add byte ptr [rax], al ; add al, ch ; call rsp
0x000000000043232f : add byte ptr [rax], al ; add al, ch ; cdq ; ret 0x28
0x00000000005230b1 : add byte ptr [rax], al ; add al, ch ; cdq ; retf 0x15
0x000000000049f5ce : add byte ptr [rax], al ; add al, ch ; cli ; adc byte ptr [rdx], ah ; add cl, cl ; ret
0x00000000004c46c2 : add byte ptr [rax], al ; add al, ch ; cli ; ret
0x0000000000433755 : add byte ptr [rax], al ; add al, ch ; cmc ; ret
0x000000000050c209 : add byte ptr [rax], al ; add al, ch ; cmp dword ptr [r15], edx ; add bl, ch ; ret 0x8948
0x00000000005f3f16 : add byte ptr [rax], al ; add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; retf
0x00000000005e30a2 : add byte ptr [rax], al ; add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; retf 9
0x0000000000440b74 : add byte ptr [rax], al ; add al, ch ; cwde ; jmp qword ptr [rbx]
0x0000000000483f24 : add byte ptr [rax], al ; add al, ch ; cwde ; retf
0x00000000004def14 : add byte ptr [rax], al ; add al, ch ; cwde ; sbb al, 0x1a ; add byte ptr [rcx], bh ; ret 0x127c
0x00000000004ca02d : add byte ptr [rax], al ; add al, ch ; fild qword ptr [rdx + 0x1b] ; add cl, cl ; ret
0x00000000004146fe : add byte ptr [rax], al ; add al, ch ; hlt ; retf
0x00000000004aed8c : add byte ptr [rax], al ; add al, ch ; insb byte ptr [rdi], dx ; jmp qword ptr [rax]
0x0000000000577a7d : add byte ptr [rax], al ; add al, ch ; int 0x80
0x000000000057fd5a : add byte ptr [rax], al ; add al, ch ; jmp 0xffffffffcc40fd6c
0x000000000054d239 : add byte ptr [rax], al ; add al, ch ; jmp qword ptr [rdi]
0x00000000005a1939 : add byte ptr [rax], al ; add al, ch ; jmp rax
0x0000000000543b29 : add byte ptr [rax], al ; add al, ch ; lahf ; retf
0x0000000000425045 : add byte ptr [rax], al ; add al, ch ; lodsd eax, dword ptr [rsi] ; ret 0x25
0x000000000044309b : add byte ptr [rax], al ; add al, ch ; lodsd eax, dword ptr [rsi] ; retf 0x23
0x000000000047ce15 : add byte ptr [rax], al ; add al, ch ; mov bl, 0x38 ; and al, 0 ; leave ; ret
0x000000000041e610 : add byte ptr [rax], al ; add al, ch ; mov eax, 0xc9002a20 ; ret
0x000000000061820e : add byte ptr [rax], al ; add al, ch ; mov edx, 0xc9000a84 ; ret
0x000000000049e534 : add byte ptr [rax], al ; add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000045cd38 : add byte ptr [rax], al ; add al, ch ; nop ; cmp dword ptr [rsi], esp ; add cl, cl ; ret
0x0000000000484054 : add byte ptr [rax], al ; add al, ch ; nop ; retf 0x1f
0x00000000004f28ea : add byte ptr [rax], al ; add al, ch ; out dx, al ; ret 0x1c
0x00000000005d30dc : add byte ptr [rax], al ; add al, ch ; outsb dx, byte ptr [rsi] ; retf 0xa
0x00000000004f38f0 : add byte ptr [rax], al ; add al, ch ; pop rax ; ret 0x18
0x000000000053910b : add byte ptr [rax], al ; add al, ch ; pop rbp ; ret
0x00000000005c2fef : add byte ptr [rax], al ; add al, ch ; pop rbx ; retf
0x0000000000571a6f : add byte ptr [rax], al ; add al, ch ; pop rcx ; retf
0x00000000004330eb : add byte ptr [rax], al ; add al, ch ; pop rdi ; retf 0x24
0x000000000045dcec : add byte ptr [rax], al ; add al, ch ; pop rsp ; retf
0x0000000000490bb8 : add byte ptr [rax], al ; add al, ch ; push -0x17ffe101 ; retf
0x00000000004237f8 : add byte ptr [rax], al ; add al, ch ; push rax ; ret
0x00000000005d50a2 : add byte ptr [rax], al ; add al, ch ; push rax ; ret 0xa
0x00000000005c2378 : add byte ptr [rax], al ; add al, ch ; push rax ; ret 0xf
0x00000000004d3f67 : add byte ptr [rax], al ; add al, ch ; push rbp ; retf
0x0000000000517215 : add byte ptr [rax], al ; add al, ch ; push rbx ; retf -0x12
0x00000000005982f9 : add byte ptr [rax], al ; add al, ch ; push rcx ; js 0x598317 ; add bl, ch ; ret 0x8948
0x00000000004137f9 : add byte ptr [rax], al ; add al, ch ; push rcx ; ret
0x000000000050c6f9 : add byte ptr [rax], al ; add al, ch ; push rcx ; xor al, 0x17 ; add bl, ch ; ret 0x8948
0x00000000004e38f3 : add byte ptr [rax], al ; add al, ch ; push rdi ; ret 0x19
0x0000000000441e72 : add byte ptr [rax], al ; add al, ch ; push rsi ; call 0xffffffffc40d1eac
0x000000000041e274 : add byte ptr [rax], al ; add al, ch ; push rsp ; and al, 0x2a ; add cl, cl ; ret
0x00000000004d3f90 : add byte ptr [rax], al ; add al, ch ; push rsp ; retf
0x00000000004e4820 : add byte ptr [rax], al ; add al, ch ; pushfq ; ret 0x19
0x000000000040eaf8 : add byte ptr [rax], al ; add al, ch ; rcr byte ptr [rbx], 1 ; sub eax, dword ptr [rax] ; leave ; ret
0x00000000004025e5 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000056bd88 : add byte ptr [rax], al ; add al, ch ; ret 0x113d
0x000000000057eb26 : add byte ptr [rax], al ; add al, ch ; ret 0x129e
0x000000000054fc88 : add byte ptr [rax], al ; add al, ch ; ret 0x12fe
0x000000000053be68 : add byte ptr [rax], al ; add al, ch ; ret 0x1456
0x0000000000511988 : add byte ptr [rax], al ; add al, ch ; ret 0x16e1
0x00000000004f390c : add byte ptr [rax], al ; add al, ch ; ret 0x18
0x00000000004f2330 : add byte ptr [rax], al ; add al, ch ; ret 0x18ef
0x00000000004fb2a6 : add byte ptr [rax], al ; add al, ch ; ret 0x18fa
0x00000000004ef7fa : add byte ptr [rax], al ; add al, ch ; ret 0x1912
0x00000000004e47ea : add byte ptr [rax], al ; add al, ch ; ret 0x19c3
0x00000000004d9086 : add byte ptr [rax], al ; add al, ch ; ret 0x1a6a
0x00000000004d6786 : add byte ptr [rax], al ; add al, ch ; ret 0x1a93
0x000000000050f806 : add byte ptr [rax], al ; add al, ch ; ret 0x1aed
0x00000000004c493e : add byte ptr [rax], al ; add al, ch ; ret 0x1b
0x00000000004ccafa : add byte ptr [rax], al ; add al, ch ; ret 0x1b3f
0x00000000004cb2ea : add byte ptr [rax], al ; add al, ch ; ret 0x1b58
0x00000000004c7dfa : add byte ptr [rax], al ; add al, ch ; ret 0x1b8c
0x00000000004c73fa : add byte ptr [rax], al ; add al, ch ; ret 0x1b96
0x00000000004f2971 : add byte ptr [rax], al ; add al, ch ; ret 0x1c
0x00000000004be1fa : add byte ptr [rax], al ; add al, ch ; ret 0x1c28
0x00000000004b95fa : add byte ptr [rax], al ; add al, ch ; ret 0x1c74
0x00000000004aa222 : add byte ptr [rax], al ; add al, ch ; ret 0x1d68
0x00000000004a41ea : add byte ptr [rax], al ; add al, ch ; ret 0x1dc9
0x0000000000492b30 : add byte ptr [rax], al ; add al, ch ; ret 0x1ee7
0x000000000049105e : add byte ptr [rax], al ; add al, ch ; ret 0x1efa
0x000000000048488e : add byte ptr [rax], al ; add al, ch ; ret 0x1f
0x0000000000480c22 : add byte ptr [rax], al ; add al, ch ; ret 0x1ffe
0x0000000000467bfa : add byte ptr [rax], al ; add al, ch ; ret 0x218e
0x000000000045e39c : add byte ptr [rax], al ; add al, ch ; ret 0x2217
0x000000000044d486 : add byte ptr [rax], al ; add al, ch ; ret 0x2326
0x000000000043cd88 : add byte ptr [rax], al ; add al, ch ; ret 0x242d
0x000000000042a886 : add byte ptr [rax], al ; add al, ch ; ret 0x2552
0x000000000041a688 : add byte ptr [rax], al ; add al, ch ; ret 0x2654
0x0000000000441586 : add byte ptr [rax], al ; add al, ch ; ret 0x2692
0x0000000000414386 : add byte ptr [rax], al ; add al, ch ; ret 0x26b7
0x000000000061d3c2 : add byte ptr [rax], al ; add al, ch ; ret 0x637
0x00000000006098e6 : add byte ptr [rax], al ; add al, ch ; ret 0x806
0x00000000005f1188 : add byte ptr [rax], al ; add al, ch ; ret 0x8e9
0x00000000005ebe88 : add byte ptr [rax], al ; add al, ch ; ret 0x93c
0x00000000005ec030 : add byte ptr [rax], al ; add al, ch ; ret 0x952
0x00000000005e4786 : add byte ptr [rax], al ; add al, ch ; ret 0x9b3
0x00000000004022e5 : add byte ptr [rax], al ; add al, ch ; ret 0x9f
0x00000000005d3088 : add byte ptr [rax], al ; add al, ch ; ret 0xaca
0x00000000005b3888 : add byte ptr [rax], al ; add al, ch ; ret 0xcc2
0x000000000066d776 : add byte ptr [rax], al ; add al, ch ; ret 0xd963
0x00000000005d1136 : add byte ptr [rax], al ; add al, ch ; ret 0xedb
0x00000000006cacf6 : add byte ptr [rax], al ; add al, ch ; ret 0xfd51
0x000000000059a2b6 : add byte ptr [rax], al ; add al, ch ; ret 0xfebb
0x000000000068a588 : add byte ptr [rax], al ; add al, ch ; ret 0xff55
0x00000000005f50a5 : add byte ptr [rax], al ; add al, ch ; ret 8
0x000000000040f927 : add byte ptr [rax], al ; add al, ch ; retf
0x0000000000639d50 : add byte ptr [rax], al ; add al, ch ; retf -0x1e7f
0x000000000063ac50 : add byte ptr [rax], al ; add al, ch ; retf -0x1e8e
0x000000000051759e : add byte ptr [rax], al ; add al, ch ; retf -0x49
0x000000000059b67e : add byte ptr [rax], al ; add al, ch ; retf -0x7f
0x000000000057bb2e : add byte ptr [rax], al ; add al, ch ; retf -0x9b
0x00000000006c65ae : add byte ptr [rax], al ; add al, ch ; retf -0xa
0x00000000005976fe : add byte ptr [rax], al ; add al, ch ; retf 0x126e
0x0000000000544480 : add byte ptr [rax], al ; add al, ch ; retf 0x13b6
0x0000000000544a60 : add byte ptr [rax], al ; add al, ch ; retf 0x13ca
0x0000000000540680 : add byte ptr [rax], al ; add al, ch ; retf 0x13f4
0x0000000000547bde : add byte ptr [rax], al ; add al, ch ; retf 0x176c
0x00000000004fa8de : add byte ptr [rax], al ; add al, ch ; retf 0x18f6
0x00000000004e3dba : add byte ptr [rax], al ; add al, ch ; retf 0x19cd
0x00000000004dc97e : add byte ptr [rax], al ; add al, ch ; retf 0x1a41
0x00000000004d811a : add byte ptr [rax], al ; add al, ch ; retf 0x1a89
0x00000000004cd91a : add byte ptr [rax], al ; add al, ch ; retf 0x1b31
0x00000000004c3ef2 : add byte ptr [rax], al ; add al, ch ; retf 0x1bcb
0x00000000004bf8ba : add byte ptr [rax], al ; add al, ch ; retf 0x1c12
0x00000000004bed28 : add byte ptr [rax], al ; add al, ch ; retf 0x1c25
0x00000000004b65e0 : add byte ptr [rax], al ; add al, ch ; retf 0x1c95
0x00000000004e1b82 : add byte ptr [rax], al ; add al, ch ; retf 0x1d
0x00000000004af7e2 : add byte ptr [rax], al ; add al, ch ; retf 0x1d13
0x00000000004e342e : add byte ptr [rax], al ; add al, ch ; retf 0x1db8
0x00000000004a307e : add byte ptr [rax], al ; add al, ch ; retf 0x1dca
0x00000000004e13fe : add byte ptr [rax], al ; add al, ch ; retf 0x1dd1
0x000000000049901a : add byte ptr [rax], al ; add al, ch ; retf 0x1e7a
0x0000000000498c1a : add byte ptr [rax], al ; add al, ch ; retf 0x1e7e
0x0000000000491ce2 : add byte ptr [rax], al ; add al, ch ; retf 0x1eee
0x0000000000489c1a : add byte ptr [rax], al ; add al, ch ; retf 0x1f6e
0x0000000000487ee2 : add byte ptr [rax], al ; add al, ch ; retf 0x1f8c
0x000000000048571a : add byte ptr [rax], al ; add al, ch ; retf 0x1fb3
0x0000000000482a80 : add byte ptr [rax], al ; add al, ch ; retf 0x1fd0
0x000000000047fdba : add byte ptr [rax], al ; add al, ch ; retf 0x200d
0x000000000047dc28 : add byte ptr [rax], al ; add al, ch ; retf 0x2036
0x00000000004041ce : add byte ptr [rax], al ; add al, ch ; retf 0x204e
0x0000000000467df2 : add byte ptr [rax], al ; add al, ch ; retf 0x218c
0x000000000045467e : add byte ptr [rax], al ; add al, ch ; retf 0x22b4
0x0000000000454bf2 : add byte ptr [rax], al ; add al, ch ; retf 0x22be
0x000000000043a8f2 : add byte ptr [rax], al ; add al, ch ; retf 0x2461
0x0000000000423a7e : add byte ptr [rax], al ; add al, ch ; retf 0x25c0
0x000000000042057e : add byte ptr [rax], al ; add al, ch ; retf 0x25f5
0x0000000000445a2e : add byte ptr [rax], al ; add al, ch ; retf 0x2792
0x00000000006caf7e : add byte ptr [rax], al ; add al, ch ; retf 0x36
0x0000000000648280 : add byte ptr [rax], al ; add al, ch ; retf 0x378
0x00000000006235e2 : add byte ptr [rax], al ; add al, ch ; retf 0x5d5
0x000000000061fa7e : add byte ptr [rax], al ; add al, ch ; retf 0x600
0x000000000061d856 : add byte ptr [rax], al ; add al, ch ; retf 0x632
0x0000000000609080 : add byte ptr [rax], al ; add al, ch ; retf 0x76a
0x00000000005d5d80 : add byte ptr [rax], al ; add al, ch ; retf 0xa9d
0x00000000005d4a28 : add byte ptr [rax], al ; add al, ch ; retf 0xac8
0x000000000060d2fe : add byte ptr [rax], al ; add al, ch ; retf 0xb12
0x00000000005d22d2 : add byte ptr [rax], al ; add al, ch ; retf 0xe
0x0000000000582280 : add byte ptr [rax], al ; add al, ch ; retf 0xfd8
0x00000000005f30e3 : add byte ptr [rax], al ; add al, ch ; retf 8
0x00000000005938ac : add byte ptr [rax], al ; add al, ch ; sahf ; ret 0xe
0x000000000042cfae : add byte ptr [rax], al ; add al, ch ; sbb dh, byte ptr [rdi] ; sub dword ptr [rax], eax ; leave ; ret
0x00000000005f848a : add byte ptr [rax], al ; add al, ch ; scasb al, byte ptr [rdi] ; ret
0x00000000004f389c : add byte ptr [rax], al ; add al, ch ; scasb al, byte ptr [rdi] ; ret 0x18
0x0000000000441c08 : add byte ptr [rax], al ; add al, ch ; shr dl, 0x27 ; add cl, cl ; ret
0x00000000005e374d : add byte ptr [rax], al ; add al, ch ; std ; ret
0x00000000005f384d : add byte ptr [rax], al ; add al, ch ; std ; ret 8
0x000000000043309e : add byte ptr [rax], al ; add al, ch ; stosb byte ptr [rdi], al ; retf 0x24
0x000000000041dcd6 : add byte ptr [rax], al ; add al, ch ; sub dword ptr [rdx], ebp ; add cl, cl ; ret
0x00000000005a3a54 : add byte ptr [rax], al ; add al, ch ; test al, 0xd ; add cl, ch ; ret 0xfffe
0x000000000042d242 : add byte ptr [rax], al ; add al, ch ; xchg byte ptr [rcx + rbp], dh ; add cl, cl ; ret
0x00000000004a2fb5 : add byte ptr [rax], al ; add al, ch ; xchg eax, ebx ; retf
0x00000000004fead7 : add byte ptr [rax], al ; add al, ch ; xchg eax, ecx ; ret 0x18
0x000000000048402b : add byte ptr [rax], al ; add al, ch ; xchg eax, ecx ; retf 0x1f
0x0000000000483f4d : add byte ptr [rax], al ; add al, ch ; xchg eax, edi ; retf
0x000000000049e644 : add byte ptr [rax], al ; add al, ch ; xchg eax, esp ; ret 0x20
0x00000000004e19f1 : add byte ptr [rax], al ; add al, ch ; xlatb ; retf
0x00000000005aa319 : add byte ptr [rax], al ; add al, ch ; xor dword ptr [rax + 0xd], ebx ; add cl, ch ; ret 0xfffe
0x0000000000402585 : add byte ptr [rax], al ; add al, cl ; ret
0x000000000070c2b5 : add byte ptr [rax], al ; add al, cl ; ret 0x70
0x000000000070cb95 : add byte ptr [rax], al ; add al, cl ; retf
0x00000000006dcb0d : add byte ptr [rax], al ; add al, cl ; retf 0x6d
0x00000000006d9695 : add byte ptr [rax], al ; add al, cl ; retf 0x9f
0x0000000000507d5d : add byte ptr [rax], al ; add al, dh ; add dword ptr [rdi], 1 ; ret
0x00000000004025fd : add byte ptr [rax], al ; add al, dh ; ret
0x00000000006f7905 : add byte ptr [rax], al ; add al, dh ; ret 0x51
0x00000000004022fd : add byte ptr [rax], al ; add al, dh ; ret 0x9f
0x0000000000724e0d : add byte ptr [rax], al ; add al, dh ; retf 0x66
0x000000000040259d : add byte ptr [rax], al ; add al, dl ; ret
0x00000000006fdd3d : add byte ptr [rax], al ; add al, dl ; ret 0x54
0x000000000040229d : add byte ptr [rax], al ; add al, dl ; ret 0x9f
0x000000000070666d : add byte ptr [rax], al ; add al, dl ; retf
0x000000000050fabc : add byte ptr [rax], al ; add bh, al ; ret
0x00000000006bd4d3 : add byte ptr [rax], al ; add bh, al ; ret 4
0x00000000006c8ded : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x00000000005ba282 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rsp + rbp*8 - 1], ebx ; call qword ptr [rax]
0x00000000007cd7ea : add byte ptr [rax], al ; add bh, ch ; syscall
0x00000000007e8460 : add byte ptr [rax], al ; add bh, dh ; syscall
0x000000000054299c : add byte ptr [rax], al ; add bl, al ; mov eax, edi ; xor eax, 1 ; ret
0x000000000055b175 : add byte ptr [rax], al ; add bl, al ; mov rdi, rbx ; call 0x557439
0x000000000053ddcb : add byte ptr [rax], al ; add bl, al ; nop ; ret
0x00000000005f866a : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x00000000006c6929 : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax] ; mov dword ptr [rdi], esi ; ret
0x0000000000582771 : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000464531 : add byte ptr [rax], al ; add bl, ch ; fmul dword ptr [rax - 0x77] ; ret
0x0000000000602684 : add byte ptr [rax], al ; add bl, ch ; fmul qword ptr [rax - 0x77] ; ret
0x000000000059912d : add byte ptr [rax], al ; add bl, ch ; mov byte ptr [rax - 0x77], cl ; ret
0x00000000004f8806 : add byte ptr [rax], al ; add bl, ch ; mov dword ptr [rax - 0x77], ecx ; ret
0x000000000040ce59 : add byte ptr [rax], al ; add bl, ch ; ret
0x000000000047a051 : add byte ptr [rax], al ; add bl, ch ; ret 0x894d
0x00000000006581c2 : add byte ptr [rax], al ; add bl, ch ; ret 0xd0e9
0x000000000043d883 : add byte ptr [rax], al ; add bl, ch ; retf
0x000000000061e994 : add byte ptr [rax], al ; add bl, ch ; retf -0x74b4
0x000000000047cbf2 : add byte ptr [rax], al ; add bl, ch ; retf -0x76b3
0x000000000040ce68 : add byte ptr [rax], al ; add bl, ch ; retf -0x76b4
0x00000000004f98be : add byte ptr [rax], al ; add bl, ch ; retf -0x7cb8
0x000000000050a9f8 : add byte ptr [rax], al ; add bl, ch ; retf -0xb15
0x000000000052f37b : add byte ptr [rax], al ; add bl, ch ; retf 0x1be
0x000000000050aebc : add byte ptr [rax], al ; add bl, ch ; retf 0x41f0
0x00000000006cd8ad : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000051814d : add byte ptr [rax], al ; add byte ptr [rax + 0x100], bh ; ret
0x00000000006a7d9c : add byte ptr [rax], al ; add byte ptr [rax + 0x10778948], dl ; ret
0x0000000000506bcd : add byte ptr [rax], al ; add byte ptr [rax + 0x140], bh ; ret
0x0000000000506c3d : add byte ptr [rax], al ; add byte ptr [rax + 0x180], bh ; ret
0x00000000006a7d8c : add byte ptr [rax], al ; add byte ptr [rax + 0x18478d48], dl ; ret
0x000000000054a19d : add byte ptr [rax], al ; add byte ptr [rax + 0x1b00], bh ; ret
0x000000000051813d : add byte ptr [rax], al ; add byte ptr [rax + 0x1c0], bh ; ret
0x00000000006ac13c : add byte ptr [rax], al ; add byte ptr [rax + 0x20478b48], dl ; ret
0x00000000006bfd3d : add byte ptr [rax], al ; add byte ptr [rax + 0x280], bh ; ret
0x00000000006a7d4c : add byte ptr [rax], al ; add byte ptr [rax + 0x28478b48], dl ; ret
0x00000000005b840d : add byte ptr [rax], al ; add byte ptr [rax + 0x28c0], bh ; ret
0x000000000056202e : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; fimul dword ptr [rax + 1] ; ret 0x8b48
0x0000000000607047 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; fmul dword ptr [rax + 1] ; ret 0x2948
0x00000000006868b1 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x6348
0x000000000065cd45 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000488693 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000488675 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8949
0x000000000051a837 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf
0x00000000006d1193 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf -0x48f1
0x000000000060ec48 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf -0x76b8
0x0000000000662116 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf -0x9cf
0x00000000006d11fe : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0xf41
0x00000000006a7d5c : add byte ptr [rax], al ; add byte ptr [rax + 0x3047b60f], dl ; ret
0x00000000006cc4fd : add byte ptr [rax], al ; add byte ptr [rax + 0x31], bh ; ret
0x000000000050d96d : add byte ptr [rax], al ; add byte ptr [rax + 0x340], bh ; ret
0x000000000068e00d : add byte ptr [rax], al ; add byte ptr [rax + 0x380], bh ; ret
0x000000000048cf3a : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; enter 0xf48, 0x47 ; ret 0x8348
0x000000000048cfba : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; enter 0xf48, 0x47 ; ret 0x8d48
0x000000000067849d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x1374
0x000000000069f5cd : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x1b74
0x000000000044626c : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x2075
0x000000000043ff7d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x2475
0x00000000004944b5 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x3875
0x00000000004e05cd : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x3f75
0x000000000043fd96 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x4675
0x000000000043fbc9 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x4975
0x00000000004402fb : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x5175
0x0000000000494c16 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x5375
0x0000000000443bb6 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x5875
0x000000000044aa7f : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x6775
0x0000000000464279 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x6875
0x000000000049e31d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x7475
0x000000000045b6c5 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000504a14 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8c0f
0x000000000053be0b : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x000000000053b6f9 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xe7f
0x00000000005338e0 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xe875
0x00000000006d0855 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000069f73d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf
0x00000000006c6a61 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf -0x388b
0x000000000066210d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf -0x71f1
0x00000000006a89ec : add byte ptr [rax], al ; add byte ptr [rax + 0x3e048d48], dl ; ret
0x00000000006b228d : add byte ptr [rax], al ; add byte ptr [rax + 0x4000], bh ; ret
0x00000000006b229d : add byte ptr [rax], al ; add byte ptr [rax + 0x40], bh ; ret
0x00000000005fcb3d : add byte ptr [rax], al ; add byte ptr [rax + 0x5c0], bh ; ret
0x00000000006b2ef3 : add byte ptr [rax], al ; add byte ptr [rax + 0x5c415d5b], al ; ret
0x00000000005f3656 : add byte ptr [rax], al ; add byte ptr [rax + 0x6348137c], al ; retf
0x000000000052fce1 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add eax, edi ; ret
0x000000000052fcec : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add ecx, dword ptr [rax - 0x73] ; ret
0x00000000006c7b6a : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 0x29] ; retf 0x148
0x0000000000559b3a : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; fmul dword ptr [rax + 0x63] ; retf -0x40bf
0x0000000000599bc9 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; fmul dword ptr [rax + 0x63] ; retf -0x7cb8
0x00000000004a9b32 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000054a4a7 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x2948
0x00000000006af729 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x44c6
0x000000000066fe93 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x6349
0x000000000055b8df : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x634d
0x00000000006af740 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0xb60f
0x00000000006871cd : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x000000000055b9ed : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf -0x76b8
0x000000000060405d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x294c
0x00000000004fd0df : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x6348
0x00000000005cad55 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000050d65d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0xe901
0x00000000005664c9 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000635039 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x480f
0x0000000000582ded : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000067cd9d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], 1 ; ret 0xe901
0x00000000006890fd : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000005bf8ac : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x480f
0x000000000074b725 : add byte ptr [rax], al ; add byte ptr [rax + 0x7b], bl ; retf
0x000000000053f09d : add byte ptr [rax], al ; add byte ptr [rax + 0x7fffffff], bh ; ret
0x00000000005039ed : add byte ptr [rax], al ; add byte ptr [rax + 0x80], bh ; ret
0x00000000005047cd : add byte ptr [rax], al ; add byte ptr [rax + 0x8280], bh ; ret
0x00000000006aad7c : add byte ptr [rax], al ; add byte ptr [rax + 0x8478b48], dl ; ret
0x00000000006747cc : add byte ptr [rax], al ; add byte ptr [rax + 0x847b60f], dl ; ret
0x000000000062cb2d : add byte ptr [rax], al ; add byte ptr [rax + 0x9700], bh ; ret
0x00000000006925dd : add byte ptr [rax], al ; add byte ptr [rax + 0xa02440], bh ; ret
0x000000000069261d : add byte ptr [rax], al ; add byte ptr [rax + 0xa02448], bh ; ret
0x00000000006925fd : add byte ptr [rax], al ; add byte ptr [rax + 0xa02450], bh ; ret
0x00000000006bea4d : add byte ptr [rax], al ; add byte ptr [rax + 0xa0ccc0], bh ; ret
0x000000000065e24d : add byte ptr [rax], al ; add byte ptr [rax + 0xa9], bh ; ret
0x0000000000506c4d : add byte ptr [rax], al ; add byte ptr [rax + 0xc0], bh ; ret
0x0000000000562f2d : add byte ptr [rax], al ; add byte ptr [rax + 0xcc0], bh ; ret
0x00000000007ad06e : add byte ptr [rax], al ; add byte ptr [rax + 0xe], cl ; xor byte ptr [rdx], al ; retf 0xe0a
0x0000000000508e45 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000519137 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x1b2
0x000000000064abbb : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x3949
0x000000000050ee23 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004adf76 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x3d48
0x00000000006a1e26 : add byte ptr [rax], al ; add byte ptr [rax + 0xfc73948], al ; xchg eax, esp ; ret 0x8548
0x0000000000517ecd : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000005fc88c : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; fmul dword ptr [rax + 0x39] ; ret
0x0000000000549964 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000005dc88c : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000006c4791 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf
0x00000000006b268d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf -0x76b4
0x00000000007682a5 : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000007a7a55 : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; push rsp ; ret
0x0000000000777a95 : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x0000000000777a55 : add byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; push rsp ; ret
0x000000000074b6f1 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; and dl, bl ; retf
0x000000000079c6fd : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; cld ; syscall
0x0000000000757aed : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, dx ; ret
0x0000000000757aad : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x00000000007a79a5 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 5
0x00000000007582a5 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000007981a5 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 4
0x000000000075795d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; pop rsp ; ret 0
0x000000000076795d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; pop rsp ; ret 1
0x0000000000767a4d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; ret
0x0000000000758245 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; retf
0x00000000007a8165 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; retf 5
0x0000000000797a3d : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; cld ; ret 4
0x00000000007682f5 : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; hlt ; retf
0x0000000000797b2d : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; in al, dx ; ret
0x00000000007b79ed : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; in al, dx ; ret 6
0x000000000075819d : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; pop rsp ; retf 0
0x0000000000768155 : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; push rsp ; retf 1
0x00000000007579a5 : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; ret 0
0x00000000007681a5 : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; retf 1
0x00000000007b7ae5 : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add ah, ah ; ret
0x000000000078798d : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; ret 3
0x0000000000778285 : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; retf
0x00000000007a79f5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; hlt ; ret 5
0x00000000007a7aed : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; ret
0x00000000007b81ed : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; retf 6
0x000000000077796d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 2
0x00000000007a795d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; ret 5
0x0000000000777955 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; ret 2
0x00000000007a7a9d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; ret
0x000000000077799d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; ret 2
0x000000000074b799 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rdx - 0x2c], dl ; retf
0x0000000000789f91 : add byte ptr [rax], al ; add byte ptr [rax + rbp*8 + 3], cl ; add al, bl ; retf
0x0000000000789f79 : add byte ptr [rax], al ; add byte ptr [rax + rbp*8 + 3], dh ; add al, ah ; retf
0x0000000000750f41 : add byte ptr [rax], al ; add byte ptr [rax + rbx*2], bh ; add byte ptr [rax], al ; cwde ; retf -0x33
0x000000000077ff41 : add byte ptr [rax], al ; add byte ptr [rax + rcx*2], bh ; add eax, dword ptr [rax] ; ret 0xc84e
0x0000000000783c5d : add byte ptr [rax], al ; add byte ptr [rax + rdi*2], al ; ret
0x0000000000769d2d : add byte ptr [rax], al ; add byte ptr [rax + rdx*2], al ; retf
0x00000000005b951a : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; add al, 0x24 ; call qword ptr [rdi]
0x0000000000667970 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jnp 0x6679b8 ; call 0x403b99
0x00000000005121fa : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; pop rbp ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000053d26d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; push rax ; add dword ptr [rax + 0x29], ecx ; retf -0x4915
0x000000000053dd8d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; push rax ; add dword ptr [rax + 0x29], ecx ; retf -0x6a15
0x000000000068e81d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; push rcx ; add dword ptr [rax + 0x29], ecx ; ret 0xaaeb
0x00000000005ff3e0 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; push rdi ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000006c817d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; push rsi ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000413551 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; ror byte ptr [r9 - 0x77], 1 ; ret 0x4ae8
0x00000000004972bb : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; ror byte ptr [r9 - 0x77], 1 ; ret 0x8ba
0x0000000000620955 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; ror byte ptr [r9 - 0x77], 1 ; ret 0xae8
0x00000000005487b9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret
0x0000000000537bc5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add dword ptr [rax + 0x39], ecx ; ret 0xa7c
0x0000000000498f9a : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rcx - 0x77] ; ret 0x8e8
0x000000000068f07d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; ret
0x0000000000413519 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 + 0x29] ; ret 0x8948
0x0000000000478fb8 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r9 - 0x77] ; retf -0x76b8
0x0000000000511357 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x51131d ; call rax
0x0000000000429b07 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; mov byte ptr [r8 + 0x29], r9b ; ret 0x8948
0x0000000000502355 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x4848
0x0000000000414f87 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 + 0x29], 1 ; ret 0x8948
0x000000000065c89d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000517ae1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x7f] ; ret 0x107
0x000000000055db62 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x00000000006579bb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf -0x15f9
0x00000000005c102b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf -0x38
0x000000000063115b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf -0x825
0x000000000040b090 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; iretd ; call rax
0x000000000040aaf8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; iretd ; call rdx
0x000000000050b5cd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x50b5f3 ; ret
0x000000000050f72d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x50f74b ; ret
0x000000000052608d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x5260a3 ; ret
0x00000000005260ad : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x5260cb ; ret
0x000000000052b67d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x52b693 ; ret
0x000000000052b69d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x52b6bb ; ret
0x000000000054531d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x545333 ; ret
0x000000000054533d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x54535b ; ret
0x000000000055830d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x55833b ; ret
0x000000000056b59d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x56b5b3 ; ret
0x000000000056b5bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x56b5db ; ret
0x0000000000595ebd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x595ed3 ; ret
0x0000000000595edd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x595efb ; ret
0x00000000005ae00d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x5ae023 ; ret
0x00000000005ae02d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x5ae04b ; ret
0x000000000062aa4d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x62aa73 ; ret
0x00000000006a7e0d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x6a7e43 ; ret
0x00000000005489a1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; loop 0x5489f9 ; mov edi, ebx ; call rax
0x00000000005139f6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; mov rsi, r12 ; call rax
0x000000000045fcf1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; mov rsi, r8 ; call rax
0x0000000000511b87 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000040c759 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c6630 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x15e8
0x00000000006234b9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00000000005fc4ba : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be8
0x000000000040ae91 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x22e8
0x000000000055eaf7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2348
0x00000000004e33d8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x23e8
0x0000000000634688 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x28bf
0x000000000061e0d0 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2be
0x00000000006d5962 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x00000000006221d0 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x3be
0x00000000004ced06 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x3fe8
0x000000000062224a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x4be
0x000000000062d5cb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x50bf
0x0000000000623cb2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x53e8
0x000000000062385f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x5be
0x0000000000623a1a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x6be
0x00000000005f18ad : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x78e8
0x000000000040ad3a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x79e8
0x00000000004a3b8f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000005f442e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x87e8
0x000000000044aca4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000482dc4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000005dc90f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000487d6d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000040b489 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x9ce8
0x00000000005f0f85 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xa0e8
0x000000000040ac0d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xa6e8
0x000000000040ae00 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb3e8
0x00000000006b5211 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000684f5d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc189
0x0000000000623d28 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdde8
0x00000000005f0f45 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe0e8
0x000000000060138f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000541396 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x74b8
0x0000000000576099 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000067424d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000498284 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x9ee8
0x00000000005f0d54 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0xe283
0x00000000006c699d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000004ecbe3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rcx + rcx*4 - 0x36], 1 ; call rax
0x000000000040b103 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xlatb ; call rax
0x000000000062b04d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x00000000006d265e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor ecx, ebp ; retf -8
0x000000000050378d : add byte ptr [rax], al ; add byte ptr [rax - 0x78], al ; ja 0x5037ac ; ret
0x000000000052607d : add byte ptr [rax], al ; add byte ptr [rax - 0x78], al ; ja 0x5260a3 ; ret
0x000000000052b66d : add byte ptr [rax], al ; add byte ptr [rax - 0x78], al ; ja 0x52b693 ; ret
0x000000000054530d : add byte ptr [rax], al ; add byte ptr [rax - 0x78], al ; ja 0x545333 ; ret
0x000000000056b58d : add byte ptr [rax], al ; add byte ptr [rax - 0x78], al ; ja 0x56b5b3 ; ret
0x000000000058446d : add byte ptr [rax], al ; add byte ptr [rax - 0x78], al ; ja 0x584483 ; ret
0x0000000000595ead : add byte ptr [rax], al ; add byte ptr [rax - 0x78], al ; ja 0x595ed3 ; ret
0x00000000005adffd : add byte ptr [rax], al ; add byte ptr [rax - 0x78], al ; ja 0x5ae023 ; ret
0x0000000000531157 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax + 0xf] ; ret
0x000000000040761f : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rdi + rbp*8 - 0x18] ; ret 0xc1e
0x00000000005eea6f : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000005eea86 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000056fa0d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; in al, dx ; or al, ch ; xchg eax, edi ; call qword ptr [rcx]
0x000000000050a179 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000058b8cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x000000000064eb5b : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x410f
0x000000000053f2cf : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4501
0x0000000000477fad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000051cb04 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004fc662 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x480f
0x00000000006682f0 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000671efc : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4860
0x0000000000535378 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c14
0x00000000006627ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000068ee4d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8401
0x0000000000650275 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xbe0f
0x0000000000687d35 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000537c2c : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000051a45e : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x107
0x000000000062e278 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x2a1
0x000000000065e53d : add byte ptr [rax], al ; add byte ptr [rax - 2], bh ; ret
0x0000000000660975 : add byte ptr [rax], al ; add byte ptr [rax - 3], bh ; ret
0x000000000040238d : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x000000000070c0d5 : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x58
0x000000000070c1cd : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x70
0x00000000006d9715 : add byte ptr [rax], al ; add byte ptr [rax], ah ; retf
0x00000000006f779d : add byte ptr [rax], al ; add byte ptr [rax], ah ; retf 0x51
0x00000000007b81ec : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; retf 6
0x000000000077796c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 2
0x00000000007a795c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 5
0x0000000000777954 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; ret 2
0x00000000007a7a9c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; ret
0x000000000077799c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; ret 2
0x00000000006d94a3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, bh ; ret
0x00000000004025cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret
0x00000000004022cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret 0x9f
0x00000000007065eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; retf
0x000000000070ca8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; retf 0x70
0x00000000006d95fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; retf 0x9f
0x000000000040256b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret
0x00000000006f76a3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret 0x51
0x00000000006fde0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret 0x54
0x00000000006dccb3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; retf
0x0000000000724e23 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; retf 0x66
0x0000000000402613 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret
0x0000000000402313 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret 0x9f
0x000000000072c9f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; retf
0x00000000004025b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bl ; ret
0x00000000004022b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bl ; ret 0x9f
0x00000000004025e3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000004022e3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x9f
0x0000000000534b0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x0000000000402583 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret
0x000000000070c2b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret 0x70
0x000000000070cb93 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; retf
0x00000000006dcb0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; retf 0x6d
0x00000000006d9693 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; retf 0x9f
0x0000000000507d5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; add dword ptr [rdi], 1 ; ret
0x00000000004025fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret
0x00000000006f7903 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 0x51
0x00000000004022fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 0x9f
0x0000000000724e0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; retf 0x66
0x000000000040259b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret
0x00000000006fdd3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret 0x54
0x000000000040229b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret 0x9f
0x000000000070666b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; retf
0x00000000006cd8ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000067849b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x1374
0x000000000069f92b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf
0x000000000055b9eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf -0x76b8
0x000000000060405b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x294c
0x000000000068f07b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; ret
0x000000000065c89b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000050b5cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x50b5f5 ; ret
0x000000000050f72b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x50f74d ; ret
0x000000000052608b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x5260a5 ; ret
0x00000000005260ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x5260cd ; ret
0x000000000052b67b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x52b695 ; ret
0x000000000052b69b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x52b6bd ; ret
0x000000000054531b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x545335 ; ret
0x000000000054533b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x54535d ; ret
0x000000000055830b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x55833d ; ret
0x000000000056b59b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x56b5b5 ; ret
0x000000000056b5bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x56b5dd ; ret
0x0000000000595ebb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x595ed5 ; ret
0x0000000000595edb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x595efd ; ret
0x00000000005ae00b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x5ae025 ; ret
0x00000000005ae02b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x5ae04d ; ret
0x000000000062aa4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x62aa75 ; ret
0x00000000006a7e0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x6a7e45 ; ret
0x00000000005313db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000598fbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000005431eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000670f6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000006b520f : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000684f5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc189
0x000000000050378b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x78], al ; ja 0x5037ae ; ret
0x000000000052607b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x78], al ; ja 0x5260a5 ; ret
0x000000000052b66b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x78], al ; ja 0x52b695 ; ret
0x000000000054530b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x78], al ; ja 0x545335 ; ret
0x000000000056b58b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x78], al ; ja 0x56b5b5 ; ret
0x000000000058446b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x78], al ; ja 0x584485 ; ret
0x0000000000595eab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x78], al ; ja 0x595ed5 ; ret
0x00000000005adffb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x78], al ; ja 0x5ae025 ; ret
0x000000000050a177 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000058b8cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x000000000051ce6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000006627eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000068ee4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8401
0x000000000040238b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x000000000070c0d3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x58
0x000000000070c1cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x70
0x00000000006d9713 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; retf
0x00000000006f779b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; retf 0x51
0x00000000004025c9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret
0x00000000004022c9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret 0x9f
0x000000000070ca89 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; retf 0x70
0x0000000000402569 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret
0x00000000006dccb1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; retf
0x0000000000402611 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret
0x0000000000402311 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret 0x9f
0x00000000004025b1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bl ; ret
0x00000000004022b1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bl ; ret 0x9f
0x00000000004025e1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000004022e1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x9f
0x0000000000402581 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret
0x00000000004025f9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret
0x00000000004022f9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 0x9f
0x0000000000402599 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret
0x0000000000402299 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret 0x9f
0x0000000000402389 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x000000000070c1c9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x70
0x0000000000402610 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret
0x0000000000402310 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret 0x9f
0x00000000004024f0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret
0x00000000004024d8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000402430 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000402418 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret
0x0000000000717b80 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; retf
0x0000000000402329 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000072c190 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x72
0x0000000000732649 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xbeb
0x0000000000400c50 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00000000006dca80 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000724e00 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x66
0x00000000006dcb30 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x6d
0x0000000000400a40 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000004023d1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret
0x0000000000402371 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret
0x00000000004023a1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x0000000000402341 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x00000000004023b9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x0000000000402359 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x00000000005123cc : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8948
0x0000000000603083 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000004fdda3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x689fb8
0x0000000000402612 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret
0x0000000000402312 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret 0x9f
0x00000000004024f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret
0x00000000004024da : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000402432 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x00000000006b2cee : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000040241a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret
0x0000000000717b82 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; retf
0x000000000040232b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000006fc4ca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x6f
0x000000000072c192 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x72
0x000000000073264b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xbeb
0x0000000000400c52 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00000000006dc972 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000070f683 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x59
0x0000000000724e02 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x66
0x00000000006dcb32 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x6d
0x0000000000400a42 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000004023d3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret
0x0000000000402373 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret
0x0000000000724e2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; retf 0x66
0x00000000004023a3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x00000000006dc97b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; retf
0x0000000000402343 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x00000000006d971b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; retf
0x000000000070c9d3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; retf 0x70
0x00000000004023bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x00000000006f633b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x52
0x00000000006fa2b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x53
0x0000000000717d2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; retf
0x000000000040235b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x000000000070f12b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret 0x59
0x000000000071e5eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; retf
0x00000000005fac6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], al ; ret 0xb07e
0x0000000000672807 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000724e33 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; retf 0x66
0x00000000005123ce : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8948
0x00000000004f498b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x0000000000678edb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xb8
0x00000000006d058b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xc283
0x00000000006c258b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xff31
0x0000000000506b2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; sal byte ptr [rcx], 0xd2 ; ret
0x000000000054238b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr cl, cl ; retf -5
0x0000000000668b5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 5 ; retf
0x000000000053d7db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 7 ; ret
0x00000000006dea2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], bl ; retf 0x4c
0x00000000006ed3ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], cl ; ret
0x00000000006db2fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], dh ; retf 0x42
0x00000000006a51bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; retf 0xa77
0x00000000006c7059 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi] ; ret
0x0000000000667689 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, edi ; ret
0x000000000066c079 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x0000000000712fc3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], al ; retf 0x5c
0x00000000006db3fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], bl ; retf
0x0000000000714333 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], ch ; ret 0x5d
0x000000000068287b : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, bl ; retf
0x000000000068452b : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, bl ; retf 0x1a8
0x0000000000536d1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; retf
0x00000000006844db : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, bl ; ret
0x000000000071433b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, ch ; ret 0x5d
0x0000000000724e93 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, bl ; retf
0x0000000000724ec3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; retf
0x000000000066285c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 0xb ; ret
0x000000000054827e : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000066922c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000006a5624 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000051be34 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000007682a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000007a7a54 : add byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; push rsp ; ret
0x0000000000777a94 : add byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x00000000004238b9 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x67fb56
0x00000000004238d5 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x67fb58
0x0000000000433943 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x67fb6c
0x00000000004847db : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x680aca
0x0000000000484804 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x680af2
0x00000000004348b8 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x680b92
0x00000000004e4922 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x680bba
0x0000000000425044 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x681300
0x00000000004fdda5 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x689fb6
0x000000000046e5ed : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x6aa8e6
0x00000000006425b7 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x6be896
0x00000000004f28e9 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x6bebe6
0x00000000004e48ab : add byte ptr [rax], al ; add byte ptr [rax], al ; call r8
0x000000000052bfdb : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000402614 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret
0x0000000000402314 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret 0x9f
0x000000000072c9f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; retf
0x00000000006d94a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; cld ; ret
0x0000000000508e44 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rbx ; pop rbx ; ret
0x0000000000777a54 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; push rsp ; ret
0x00000000006c69d5 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x6c69a9 ; ret
0x00000000006c6a60 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp rdx, rcx ; jne 0x6c6a39 ; ret
0x00000000006db34c : add byte ptr [rax], al ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000000004024f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret
0x0000000000714674 : add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret 0x5d
0x00000000006d909c : add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; retf 0x9f
0x00000000006a545c : add byte ptr [rax], al ; add byte ptr [rax], al ; fstp st(1) ; ret
0x00000000006de834 : add byte ptr [rax], al ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x000000000050be98 : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x50be8e ; ret
0x000000000050fbdb : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x50fbd6 ; ret
0x000000000052f9db : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x52f9d6 ; ret
0x000000000052fa0b : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x52fa06 ; ret
0x000000000052fbfb : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x52fbf6 ; ret
0x0000000000532168 : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x53214e ; ret
0x00000000005503ad : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x55039e ; ret
0x0000000000558b88 : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x558b7e ; ret
0x0000000000597aeb : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x597ae6 ; ret
0x0000000000597b1b : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x597b16 ; ret
0x000000000062b308 : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x62b2fe ; ret
0x00000000006300cb : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x6300c6 ; ret
0x000000000063068b : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x630686 ; ret
0x000000000066bfeb : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x66bfe6 ; ret
0x000000000068e96b : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x68e966 ; ret
0x000000000068e9be : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x68e9ae ; ret
0x000000000068e9f0 : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x68e9e6 ; ret
0x000000000068ea5b : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x68ea56 ; ret
0x000000000068ea9b : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x68ea96 ; ret
0x000000000068eafc : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x68eaf6 ; ret
0x000000000068eafb : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x68eaf7 ; ret
0x000000000068eb2c : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x68eb26 ; ret
0x000000000068eb9b : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x68eb96 ; ret
0x00000000006a416b : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x6a4166 ; ret
0x00000000006a41a9 : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x6a419e ; ret
0x00000000006a829b : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x6a8296 ; ret
0x0000000000563dce : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rax + 8] ; pop rbx ; ret
0x00000000006a08ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000544e0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rsi + 0x20] ; ret
0x000000000040bffb : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x0000000000507d5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lock add dword ptr [rdi], 1 ; ret
0x000000000050bed0 : add byte ptr [rax], al ; add byte ptr [rax], al ; mfence ; ret
0x000000000056f2e7 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rbx + 0x28], 1 ; pop rbx ; ret
0x000000000050378c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi + 0x11], sil ; ret
0x000000000052607c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi + 0x18], sil ; ret
0x00000000006a81dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi + 0x30], 0 ; ret
0x00000000006bdacc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi + 3], 1 ; ret
0x000000000058446c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi + 8], sil ; ret
0x00000000005fd1f6 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 0x20], eax ; ret
0x0000000000667a3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 0x64], esi ; ret
0x0000000000595f4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + 4], edx ; ret
0x0000000000596bfc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], esi ; ret
0x000000000051814c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x100 ; ret
0x0000000000506bcc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x140 ; ret
0x0000000000506c3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x180 ; ret
0x000000000054a19c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x1b00 ; ret
0x000000000051813c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x1c0 ; ret
0x00000000006bfd3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x280 ; ret
0x00000000005b840c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x28c0 ; ret
0x00000000006cc4fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x31 ; ret
0x000000000050d96c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x340 ; ret
0x000000000068e00c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x380 ; ret
0x00000000006b229c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x40 ; ret
0x00000000006b228c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x4000 ; ret
0x00000000005fcb3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5c0 ; ret
0x000000000053f09c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7fffffff ; ret
0x00000000005039ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x80 ; ret
0x00000000005047cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x8280 ; ret
0x000000000062cb2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x9700 ; ret
0x00000000006925dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xa02440 ; ret
0x000000000069261c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xa02448 ; ret
0x00000000006925fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xa02450 ; ret
0x00000000006bea4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xa0ccc0 ; ret
0x000000000065e24c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xa9 ; ret
0x0000000000506c4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xc0 ; ret
0x0000000000562f2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xcc0 ; ret
0x000000000065e53c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfffffffe ; ret
0x0000000000517ecc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000517f1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; ret
0x000000000053f07c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x18] ; ret
0x0000000000554b5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; ret
0x0000000000517dfc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000058449c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x38] ; ret
0x000000000058448c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x58] ; ret
0x00000000006be2cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0xc] ; ret
0x00000000005f97ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; ret
0x000000000065e0ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 8] ; ret
0x00000000006aad4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; ret
0x00000000006c953c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edi ; or ah, 0x40 ; ret
0x00000000005429ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000006a17fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, esi ; add rax, rdi ; ret
0x00000000006c6fcc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, esi ; or eax, edi ; ret
0x0000000000503aac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, esi ; ret
0x000000000068d88c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, dword ptr [rbp + 8] ; call 0x689ad9
0x0000000000509b3a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rbx ; ret
0x000000000050fb9a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x10], rax ; ret
0x000000000050f72c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x10], rsi ; ret
0x000000000050b5cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000055830c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rsi ; ret
0x00000000006a7e0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x28], rsi ; ret
0x000000000052608c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000006b28ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + rsi + 0x37], rdx ; ret
0x00000000006b28dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + rsi + 0x3f], rdx ; ret
0x000000000052609c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00000000004e76b7 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov r8, rbx ; call r11
0x000000000061d548 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000052606c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x10] ; ret
0x0000000000512c4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000065e20c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x28] ; ret
0x000000000053d7bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000053d7cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x70] ; ret
0x000000000053d7ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000006b28fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + rsi + 0x37] ; ret
0x00000000006b28cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + rsi + 0x3f] ; ret
0x000000000068f07c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi - 8] ; ret
0x0000000000525c5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; ret
0x000000000050aa9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000052596c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0x30] ; ret
0x00000000006ab901 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000065c89c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000054db5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000454f7b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rax ; call 0x6819f9
0x0000000000414fc1 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rax ; call 0x681a39
0x00000000005d95c5 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rdx ; call rax
0x000000000062b04c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, rsi ; xor eax, eax ; ret
0x00000000006ea08c : add byte ptr [rax], al ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0x49
0x00000000004f74dc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 0x10] ; ret
0x00000000004f74ec : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 0x11] ; ret
0x00000000005047ec : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 0x18] ; ret
0x000000000058447c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 8] ; ret
0x000000000053d7dc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdi] ; ret
0x00000000006be46a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea eax, dword ptr [rdi + 4] ; ret
0x00000000006a7d8b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000006a89eb : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea rax, qword ptr [rsi + rdi] ; ret
0x000000000040cc84 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; leave ; ret
0x00000000006a08aa : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov byte ptr [rsi], dil ; ret
0x00000000006ce62a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi + 0x14] ; ret
0x00000000006c705a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi] ; ret
0x000000000066768a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, edi ; ret
0x00000000006a7d9b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov qword ptr [rdi + 0x10], rsi ; ret
0x00000000006ac13b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000006a7d4b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi + 0x28] ; ret
0x00000000006aad7b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000006674eb : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov rax, rdi ; ret
0x00000000006a7d5b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; movzx eax, byte ptr [rdi + 0x30] ; ret
0x00000000006747cb : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; movzx eax, byte ptr [rdi + 8] ; ret
0x0000000000617b48 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; nop ; leave ; ret
0x000000000043b616 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; nop ; pop rbp ; ret
0x000000000048c97b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x00000000004024dc : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000007066ec : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; retf
0x000000000072f514 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; retf 0x6b
0x00000000006d8f1c : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; retf 0x9f
0x00000000006be9db : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; xor eax, eax ; ret
0x00000000006675e7 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x00000000006c7069 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x00000000006739a9 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, edi ; ret
0x0000000000667699 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x00000000006699d9 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000071433c : add byte ptr [rax], al ; add byte ptr [rax], al ; out dx, al ; ret 0x5d
0x0000000000402434 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000408a7c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000672808 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000050c99e : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000006e23fc : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rdx ; retf 0x45
0x000000000040241c : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret
0x0000000000717b84 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; retf
0x00000000006d8e1c : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; retf 0x9f
0x00000000006ea054 : add byte ptr [rax], al ; add byte ptr [rax], al ; pushfq ; retf
0x000000000040232d : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000006d74ec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4136
0x00000000006d95ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x420b
0x00000000006dda94 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x452f
0x00000000006dec0c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x455a
0x00000000006deef4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4561
0x00000000006e5f5c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4715
0x00000000006e9cdc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4a24
0x00000000006e1fec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4b60
0x00000000006dea64 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4bd8
0x00000000006ecacc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4c75
0x00000000006deb0c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4c78
0x00000000006f0b3c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x50
0x000000000071334c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5ce0
0x0000000000714334 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5d
0x000000000072f3e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x6bb1
0x00000000006fc4cc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x6f
0x000000000072c194 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x72
0x000000000073264d : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xbeb
0x0000000000400c54 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00000000006d979c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000006d75c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x40bf
0x00000000006d796c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x413e
0x00000000006d9654 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4247
0x00000000006dd2f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x43e4
0x00000000006dd2cc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x442d
0x00000000006dd3e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4468
0x00000000006dca6c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x44fb
0x00000000006ea194 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4a38
0x00000000006eac0c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4aa3
0x00000000006e457c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4b97
0x00000000006dea1c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4c37
0x00000000006ed584 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4eb0
0x000000000070f685 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x59
0x0000000000712fcc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x5c
0x000000000071344c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x5ceb
0x00000000007141ec : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x5e3a
0x000000000071925c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x6154
0x0000000000724e04 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x66
0x0000000000724ec4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x66cb
0x00000000006dcb34 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x6d
0x000000000079c6fc : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cld ; syscall
0x00000000007a79a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 5
0x000000000076795c : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 1
0x00000000007a8164 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; retf 5
0x000000000071432c : add byte ptr [rax], al ; add byte ptr [rax], al ; stosb byte ptr [rdi], al ; ret
0x0000000000797b2c : add byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x0000000000768154 : add byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; push rsp ; retf 1
0x0000000000400a44 : add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000517e7c : add byte ptr [rax], al ; add byte ptr [rax], al ; test eax, eax ; cmovs eax, edx ; ret
0x000000000059f1ec : add byte ptr [rax], al ; add byte ptr [rax], al ; test esi, esi ; jne 0x59f200 ; ret
0x000000000078798c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; ret 3
0x0000000000778284 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; retf
0x000000000066044f : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000503e8c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000506b2c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; xor edx, edx ; ret
0x000000000054e10c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edx, edx ; xor eax, eax ; ret
0x00000000004023d5 : add byte ptr [rax], al ; add byte ptr [rax], bh ; ret
0x0000000000402375 : add byte ptr [rax], al ; add byte ptr [rax], bl ; ret
0x0000000000724e2d : add byte ptr [rax], al ; add byte ptr [rax], bl ; retf 0x66
0x00000000004023a5 : add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x00000000006dc97d : add byte ptr [rax], al ; add byte ptr [rax], ch ; retf
0x0000000000402345 : add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x00000000006d971d : add byte ptr [rax], al ; add byte ptr [rax], cl ; retf
0x000000000070c9d5 : add byte ptr [rax], al ; add byte ptr [rax], cl ; retf 0x70
0x00000000004023bd : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x00000000006f633d : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x52
0x00000000006fa2b5 : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x53
0x0000000000717c85 : add byte ptr [rax], al ; add byte ptr [rax], dh ; retf
0x000000000040235d : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x000000000070f12d : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret 0x59
0x000000000071e545 : add byte ptr [rax], al ; add byte ptr [rax], dl ; retf
0x00000000007b7ae6 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, ah ; ret
0x00000000006c59eb : add byte ptr [rax], al ; add byte ptr [rbp + 0x36], dh ; mov eax, edx ; pop rbx ; ret
0x00000000005fac6d : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], al ; ret 0xb07e
0x000000000069f397 : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], al ; retf 0x2374
0x00000000006886b5 : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; ret
0x00000000006cbcf5 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000530f48 : add byte ptr [rax], al ; add byte ptr [rbp + 0x490f48db], al ; ret
0x00000000006b0787 : add byte ptr [rax], al ; add byte ptr [rbp + 0x63], cl ; dec dword ptr [rax + 0x29] ; ret 0x14c
0x00000000004f579f : add byte ptr [rax], al ; add byte ptr [rbp + 0x63], cl ; ret
0x00000000005017dd : add byte ptr [rax], al ; add byte ptr [rbp + 0x63], cl ; retf 0x6349
0x0000000000502905 : add byte ptr [rax], al ; add byte ptr [rbp + 0x63], cl ; ror byte ptr [rdx - 0x7f], 0x7c ; ret 0xa048
0x000000000066b42f : add byte ptr [rax], al ; add byte ptr [rbp + 0xc], dh ; add rsp, 8 ; ret
0x000000000066b84d : add byte ptr [rax], al ; add byte ptr [rbp + 6], dh ; ret
0x0000000000676534 : add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; ret
0x000000000057da54 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x68], cl ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000792c71 : add byte ptr [rax], al ; add byte ptr [rbp + rsi*2 + 4], ch ; add byte ptr [rax], cl ; retf
0x0000000000792c51 : add byte ptr [rax], al ; add byte ptr [rbp + rsi*2 + 4], cl ; add al, ch ; retf -0x1d
0x00000000007bacc1 : add byte ptr [rax], al ; add byte ptr [rbp + rsi*8 + 6], bh ; add byte ptr [rax], cl ; ret 0xfff0
0x000000000050fbdc : add byte ptr [rax], al ; add byte ptr [rbp - 0x11], dh ; ret
0x000000000068eafd : add byte ptr [rax], al ; add byte ptr [rbp - 0x12], dh ; ret
0x000000000050be99 : add byte ptr [rax], al ; add byte ptr [rbp - 0x16], dh ; ret
0x00000000006a41aa : add byte ptr [rax], al ; add byte ptr [rbp - 0x17], dh ; ret
0x00000000005503ae : add byte ptr [rax], al ; add byte ptr [rbp - 0x1b], dh ; ret
0x000000000068e9bf : add byte ptr [rax], al ; add byte ptr [rbp - 0x1c], dh ; ret
0x00000000006c6974 : add byte ptr [rax], al ; add byte ptr [rbp - 0x21], dh ; ret
0x0000000000532169 : add byte ptr [rax], al ; add byte ptr [rbp - 0x26], dh ; ret
0x00000000006c5a56 : add byte ptr [rax], al ; add byte ptr [rbp - 0x35], dh ; mov eax, edx ; pop rbx ; ret
0x0000000000517e7d : add byte ptr [rax], al ; add byte ptr [rbp - 0x3db7f040], al ; ret
0x0000000000686dad : add byte ptr [rax], al ; add byte ptr [rbp - 0x73], al ; push rsi ; add dword ptr [rcx + 0x63], ecx ; ret 0x67e9
0x00000000006c582d : add byte ptr [rax], al ; add byte ptr [rbp - 0x76bafebf], cl ; retf
0x000000000060b783 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7c], al ; dec dword ptr [rdi] ; ret
0x00000000006614a0 : add byte ptr [rax], al ; add byte ptr [rbp - 0x9f38b2e], al ; ret 0xc602
0x00000000006ce0f8 : add byte ptr [rax], al ; add byte ptr [rbp - 0xcf68a2e], al ; ret
0x000000000068bd4d : add byte ptr [rax], al ; add byte ptr [rbx + 0x294801e8], al ; retf -0x67b8
0x000000000068d1bd : add byte ptr [rax], al ; add byte ptr [rbx + 0x294c01e8], al ; ret 0x9848
0x000000000068c4eb : add byte ptr [rax], al ; add byte ptr [rbx + 0x294c01e8], al ; retf -0x67b8
0x000000000068d88d : add byte ptr [rax], al ; add byte ptr [rbx + 0x38e8087d], cl ; ret 0xffff
0x000000000066331c : add byte ptr [rax], al ; add byte ptr [rbx + 0x39442853], cl ; ret 0xd089
0x000000000040e473 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000621614 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop rbp ; ret
0x000000000066103e : add byte ptr [rax], al ; add byte ptr [rbx + 0x430f4c6f], cl ; retf 0x548b
0x0000000000661f19 : add byte ptr [rax], al ; add byte ptr [rbx + 0x460f02fa], al ; ret 0x7c83
0x0000000000661a85 : add byte ptr [rax], al ; add byte ptr [rbx + 0x460f02fa], al ; ret 0xfd83
0x00000000006affba : add byte ptr [rax], al ; add byte ptr [rbx + 0x480f02c0], al ; ret
0x0000000000582f11 : add byte ptr [rax], al ; add byte ptr [rbx + 0x490f01c3], al ; ret
0x000000000067b449 : add byte ptr [rax], al ; add byte ptr [rbx + 0x490f02c3], al ; ret
0x000000000055fc28 : add byte ptr [rax], al ; add byte ptr [rbx + 0x490f07c3], al ; ret
0x00000000005cb207 : add byte ptr [rax], al ; add byte ptr [rbx + 0x490f10c2], al ; ret 0x9589
0x000000000067d824 : add byte ptr [rax], al ; add byte ptr [rbx + 0x490f12c3], al ; ret
0x000000000064b1a7 : add byte ptr [rax], al ; add byte ptr [rbx + 0x490f14c3], al ; ret
0x0000000000650f92 : add byte ptr [rax], al ; add byte ptr [rbx + 0x490f15c3], al ; ret
0x0000000000679f44 : add byte ptr [rax], al ; add byte ptr [rbx + 0x490f16c3], al ; ret
0x000000000053981e : add byte ptr [rax], al ; add byte ptr [rbx + 0x490f17c3], al ; ret
0x000000000067cbd6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x490f18c3], al ; ret
0x00000000006b74e2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x490f1ac3], al ; ret
0x000000000067af2f : add byte ptr [rax], al ; add byte ptr [rbx + 0x490f1bc3], al ; ret
0x0000000000679ec6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x490f1ec3], al ; ret
0x000000000067ced7 : add byte ptr [rax], al ; add byte ptr [rbx + 0x490f20c3], al ; ret
0x000000000057fa30 : add byte ptr [rax], al ; add byte ptr [rbx + 0x490f21c3], al ; ret
0x000000000064b0dd : add byte ptr [rax], al ; add byte ptr [rbx + 0x490f27c3], al ; ret
0x000000000067cdc4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x490f28c3], al ; ret
0x00000000006906e2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5b016043], al ; ret
0x00000000005d440a : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d90fc45], cl ; ret
0x00000000005498c2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000004f8e86 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000445372 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000005907a9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x634801c2], al ; retf 0x3489
0x00000000006ae71d : add byte ptr [rax], al ; add byte ptr [rbx + 0x634801eb], al ; ret
0x00000000004adcc1 : add byte ptr [rax], al ; add byte ptr [rbx + 0xf48cc55], cl ; scasd eax, dword ptr [rdi] ; ret 0x3d48
0x0000000000796241 : add byte ptr [rax], al ; add byte ptr [rbx + rbp*4], bh ; add al, 0 ; retf -0x1acc
0x000000000079a229 : add byte ptr [rax], al ; add byte ptr [rbx + rbp*8], ah ; add al, 0 ; ret 0xffe6
0x0000000000779281 : add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 + 2], bh ; add byte ptr [rax], cl ; ret 0xffdc
0x0000000000779299 : add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 + 2], dl ; add byte ptr [rax], al ; ret 0xffdc
0x000000000068ddc2 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x67], cl ; or al, ch ; ret 0xffb9
0x0000000000792a69 : add byte ptr [rax], al ; add byte ptr [rbx + rsi*2 + 4], ah ; add dh, dl ; ret 0xffe3
0x00000000005412ca : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; nop ; ret
0x00000000004add47 : add byte ptr [rax], al ; add byte ptr [rbx - 0x50f033bb], cl ; ret 0x8589
0x000000000067b140 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0fb06], al ; retf 0
0x00000000004e24e8 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0fe08], al ; retf
0x0000000000480a5d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0fe08], al ; retf 0
0x000000000048a824 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x0000000000510e21 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x3901
0x000000000067852d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7fbf8019], al ; jmp qword ptr [rax]
0x0000000000544e6d : add byte ptr [rax], al ; add byte ptr [rbx], bh ; jle 0x544e98 ; setl al ; ret
0x0000000000724e35 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; retf 0x66
0x000000000069631f : add byte ptr [rax], al ; add byte ptr [rcx + 0x1eaf7c8], cl ; retf -0x63f
0x00000000006b2e1d : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret
0x00000000006c3ff8 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ret
0x0000000000607fbd : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; fmul dword ptr [rdi] ; pushfq ; ret 0xdb85
0x0000000000688588 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x0000000000688ce5 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x3374
0x00000000006c953d : add byte ptr [rax], al ; add byte ptr [rcx + 0x40cc80f8], cl ; ret
0x00000000006a677d : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x0000000000595f4d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4578937], cl ; ret
0x000000000066539c : add byte ptr [rax], al ; add byte ptr [rcx + 0x5bab75f1], cl ; ret
0x0000000000539070 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ror byte ptr [rcx + 0x39], 1 ; ret 0x8841
0x0000000000569180 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ror dword ptr [rax - 0x7d], 1 ; ret 0xe901
0x0000000000539025 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret
0x000000000067f0ff : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret 0x9848
0x0000000000661cbf : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x2944
0x00000000006c46a7 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; fimul word ptr [rax + 1] ; retf
0x0000000000694982 : add byte ptr [rax], al ; add byte ptr [rcx + 1], al ; retf 0x3944
0x000000000074b8a1 : add byte ptr [rax], al ; add byte ptr [rcx + rax - 0x14660000], bl ; retf
0x0000000000767811 : add byte ptr [rax], al ; add byte ptr [rcx + rax*8], cl ; add dword ptr [rax], eax ; cli ; call rsi
0x000000000074b829 : add byte ptr [rax], al ; add byte ptr [rcx + rax], ah ; add byte ptr [rax], al ; sub al, 0xe8 ; retf
0x000000000074b849 : add byte ptr [rax], al ; add byte ptr [rcx + rax], al ; add byte ptr [rax - 0x18], dh ; retf
0x000000000074b809 : add byte ptr [rax], al ; add byte ptr [rcx + rax], al ; add byte ptr [rax], al ; mov bl, bl ; retf
0x0000000000561102 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x65], al ; mov ah, 0xe8 ; ret 0x1283
0x00000000006c719f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x403c78
0x000000000052bad4 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000005101e5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rdx
0x0000000000516b55 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x512d78
0x00000000005111f5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000063d6fe : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rcx
0x000000000055464b : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rdx
0x000000000054a479 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1a], al ; call rax
0x000000000054ec5c : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1a], al ; mov rdi, r15 ; call rax
0x00000000004a143a : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x21], cl ; mov rsi, r9 ; call rax
0x000000000065dba0 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x32], al ; mov rdi, rax ; call rdx
0x000000000052ca29 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000551570 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rdx
0x000000000051120f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, rbx ; call rax
0x0000000000511b32 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x00000000006516e4 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rdx
0x00000000006c69d6 : add byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x6c69a8 ; ret
0x0000000000757081 : add byte ptr [rax], al ; add byte ptr [rcx + rdi*4], bh ; add byte ptr [rsi], bh ; retf -0x31
0x00000000004d32ec : add byte ptr [rax], al ; add byte ptr [rcx - 0x17387632], cl ; retf
0x00000000004b8c27 : add byte ptr [rax], al ; add byte ptr [rcx - 0x174737b3], cl ; ret 0x6e
0x000000000069e2b9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x17e7dbbc], cl ; retf
0x0000000000511109 : add byte ptr [rax], al ; add byte ptr [rcx - 0x1876b322], cl ; call rax
0x00000000006786f6 : add byte ptr [rax], al ; add byte ptr [rcx - 0x39b0f008], cl ; ret
0x00000000004b69c1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x574737b3], cl ; ret 0x6e
0x00000000005ca74d : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], al ; push rsi ; dec dword ptr [rax + 0x63] ; ret
0x000000000064fd42 : add byte ptr [rax], al ; add byte ptr [rcx - 0x73f0fb88], cl ; retf 1
0x000000000043305d : add byte ptr [rax], al ; add byte ptr [rcx - 0x74737b3], cl ; ret 0x6d
0x0000000000537471 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; adc byte ptr [rax - 0x7d], r9b ; ret 0x4801
0x000000000052ba2c : add byte ptr [rax], al ; add byte ptr [rcx - 0x76b322], cl ; call rax
0x00000000006d13c0 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; jp 0x6d13f2 ; ret
0x00000000006b2e8f : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; or byte ptr [rcx + 0x39], al ; retf
0x00000000004d5639 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x72e8
0x00000000004e0ea7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8948
0x00000000004d5c0b : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0xbf
0x0000000000610008 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf
0x00000000004e2969 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf -0x76b8
0x000000000068563d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7c04762f], cl ; ret 0x8301
0x000000000064d8b0 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000069499a : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d01
0x000000000068fa5d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xeb02
0x00000000006a17fd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7feb710], cl ; ret
0x00000000006fc241 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add al, 0 ; add al, cl ; ret
0x00000000006dcb21 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add al, 0 ; add al, cl ; retf 0x6d
0x000000000070c281 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add al, byte ptr [rax] ; add al, cl ; ret 0x70
0x000000000070c981 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add al, byte ptr [rax] ; add byte ptr [rax], cl ; retf 0x70
0x00000000004fead3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add al, ch ; xchg eax, ecx ; ret 0x18
0x0000000000722d01 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x376a
0x0000000000493fea : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xc085
0x00000000006c538f : add byte ptr [rax], al ; add byte ptr [rcx], al ; retf
0x00000000004a426c : add byte ptr [rax], al ; add byte ptr [rcx], al ; retf -0x3f7b
0x00000000004f498d : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x0000000000440025 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x117c
0x0000000000560615 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x127c
0x00000000004a5712 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x187c
0x0000000000440004 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x1d7d
0x00000000005a2690 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x1f7c
0x000000000055e051 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x217f
0x000000000050b026 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x227f
0x0000000000557e04 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x257f
0x000000000059c372 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x577e
0x000000000059c13f : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x5a7e
0x000000000043c2ab : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x840f
0x000000000043c41e : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000005253d4 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8e0f
0x000000000051a827 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; retf
0x00000000006a3bad : add byte ptr [rax], al ; add byte ptr [rcx], bh ; retf -0x49f1
0x000000000059c562 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; retf -0x70f1
0x0000000000501bf7 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; retf -0x73f1
0x000000000067f481 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; retf 0x57c
0x00000000006a1b4d : add byte ptr [rax], al ; add byte ptr [rcx], bh ; retf 0x6c74
0x000000000050929a : add byte ptr [rax], al ; add byte ptr [rcx], bh ; retf 0xa7c
0x00000000006940ba : add byte ptr [rax], al ; add byte ptr [rcx], ch ; enter -0x38d7, -0x77 ; clc ; ret
0x00000000005068a1 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; fmul dword ptr [rax + 0x63] ; retf
0x00000000004f6a51 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x000000000067cce1 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x634c
0x0000000000678edd : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xb8
0x0000000000562945 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xbf
0x00000000006d058d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xc283
0x000000000067b135 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xfa83
0x00000000006c258d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xff31
0x00000000005c9d20 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; retf
0x0000000000717c81 : add byte ptr [rax], al ; add byte ptr [rcx], cl ; add byte ptr [rax], al ; add byte ptr [rax], dh ; retf
0x000000000071e541 : add byte ptr [rax], al ; add byte ptr [rcx], cl ; add byte ptr [rax], al ; add byte ptr [rax], dl ; retf
0x000000000068f01d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000069c643 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bh, 5 ; retf 0x36d5
0x0000000000506b2d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; sal byte ptr [rcx], 0xd2 ; ret
0x000000000056a92f : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0x17 ; call qword ptr [rbx]
0x0000000000543807 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0x3f ; ret
0x000000000053dcb8 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0x8e ; retf
0x000000000054dc57 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0xef ; retf
0x000000000054238d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr cl, cl ; retf -5
0x00000000006b24e7 : add byte ptr [rax], al ; add byte ptr [rdi + 0x44], bh ; ret
0x00000000006d4007 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x00000000006d4033 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x00000000006ce0d8 : add byte ptr [rax], al ; add byte ptr [rdi + 3], bh ; ret
0x000000000074fe31 : add byte ptr [rax], al ; add byte ptr [rdi + rax*2], ch ; add byte ptr [rax], al ; retf -0x32b6
0x0000000000763e29 : add byte ptr [rax], al ; add byte ptr [rdi + rax*4], ah ; add dword ptr [rax], eax ; ret 0xd52e
0x0000000000763e49 : add byte ptr [rax], al ; add byte ptr [rdi + rax*4], al ; add dword ptr [rax], eax ; ret 0xd52e
0x0000000000777e69 : add byte ptr [rax], al ; add byte ptr [rdi + rax*8 + 2], ah ; add byte ptr [rax], dl ; retf
0x0000000000777e09 : add byte ptr [rax], al ; add byte ptr [rdi + rax*8], al ; add al, byte ptr [rax] ; retf
0x0000000000777e21 : add byte ptr [rax], al ; add byte ptr [rdi + rax*8], bl ; add al, byte ptr [rax] ; retf
0x0000000000693aee : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x4d], al ; ret 0x6349
0x0000000000750e49 : add byte ptr [rax], al ; add byte ptr [rdi + rdx*2], al ; add byte ptr [rax], al ; ret 0xcdc7
0x000000000063695e : add byte ptr [rax], al ; add byte ptr [rdi - 0x18], dh ; retf 0x4ab
0x0000000000604fe2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0x3941
0x00000000006652bd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x4e ; add cl, byte ptr [rax + 0x63] ; ret 0xba41
0x000000000064ada7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x55 ; ret 0xfa80
0x0000000000668b5d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 5 ; retf
0x000000000053d7dd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 7 ; ret
0x000000000050e795 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00000000006b3a12 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x1b9
0x000000000051ca9f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3941
0x00000000006613f1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x394c
0x0000000000503cc5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x5d5b
0x000000000067fa2d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x6348
0x00000000006c8a87 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x66c3
0x000000000067fa19 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x83c6
0x000000000068073e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8d42
0x00000000006ad5fc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x9848
0x000000000051b985 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc539
0x00000000006a4c8b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xf183
0x0000000000662ed7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; retf -0x7d17
0x000000000067f975 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sahf ; ret 0x8441
0x00000000006c52b5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; fld qword ptr [rcx] ; retf
0x00000000006821a8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; wait ; ret 0x450f
0x0000000000576270 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xb60f
0x00000000006802b0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc085
0x000000000074b9e9 : add byte ptr [rax], al ; add byte ptr [rdx + rax - 0x6fa0000], ah ; retf
0x000000000074b9a1 : add byte ptr [rax], al ; add byte ptr [rdx + rax - 0x7960000], bl ; retf
0x000000000074b9c1 : add byte ptr [rax], al ; add byte ptr [rdx + rax], bh ; add byte ptr [rdx - 8], bh ; retf
0x000000000075b931 : add byte ptr [rax], al ; add byte ptr [rdx + rax], ch ; add dword ptr [rax], eax ; retf -0x2eda
0x00000000007aa169 : add byte ptr [rax], al ; add byte ptr [rdx + rbp*8 + 5], ah ; add al, al ; ret
0x00000000006d42b5 : add byte ptr [rax], al ; add byte ptr [rdx + rbx*8 + 0x48], dh ; add esp, 8 ; ret
0x0000000000798159 : add byte ptr [rax], al ; add byte ptr [rdx + rcx*8], dl ; add al, 0 ; ret 0xe5d8
0x0000000000757151 : add byte ptr [rax], al ; add byte ptr [rdx + rdi*4], cl ; add byte ptr [rax], al ; retf
0x000000000075a939 : add byte ptr [rax], al ; add byte ptr [rdx + rsi*8], dh ; add byte ptr [rax], al ; ret 0xd0b7
0x000000000074b7cd : add byte ptr [rax], al ; add byte ptr [rdx - 0x2a], dl ; retf
0x000000000074b79d : add byte ptr [rax], al ; add byte ptr [rdx - 0x2c], dl ; retf
0x00000000006dea2d : add byte ptr [rax], al ; add byte ptr [rdx], bl ; retf 0x4c
0x00000000006ed3ad : add byte ptr [rax], al ; add byte ptr [rdx], cl ; ret
0x00000000006db2fd : add byte ptr [rax], al ; add byte ptr [rdx], dh ; retf 0x42
0x00000000006a5114 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; ret 0x9b0f
0x000000000068219f : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; retf
0x00000000006820ca : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; retf -0x64f1
0x00000000006a51bd : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; retf 0xa77
0x0000000000513837 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rax
0x0000000000766571 : add byte ptr [rax], al ; add byte ptr [rsi + rbp*4], ch ; add dword ptr [rax], eax ; retf -0x2a25
0x00000000007aa559 : add byte ptr [rax], al ; add byte ptr [rsi + rbp*8 + 5], dl ; add al, al ; retf
0x00000000007bec7e : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], bh ; add dword ptr [rdx], 0x69 ; ret
0x0000000000773d9e : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], dl ; add dword ptr [rdx], 0x5a ; ret
0x0000000000772b3e : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], dl ; add dword ptr [rdx], 0x5b ; ret
0x000000000078cd39 : add byte ptr [rax], al ; add byte ptr [rsi + rdx], dh ; add al, 0 ; retf -0x3879
0x00000000007aeda1 : add byte ptr [rax], al ; add byte ptr [rsi + rsi + 6], bl ; add byte ptr [rax], ch ; retf -0x13
0x00000000007bad61 : add byte ptr [rax], al ; add byte ptr [rsi + rsi*8 + 6], bl ; add al, ch ; ret 0xfff0
0x00000000007bad79 : add byte ptr [rax], al ; add byte ptr [rsi + rsi*8 + 6], dh ; add al, ah ; ret 0xfff0
0x0000000000678591 : add byte ptr [rax], al ; add byte ptr [rsi - 0x16], bh ; xor eax, eax ; ret
0x000000000074fb86 : add byte ptr [rax], al ; add byte ptr [rsi - 0x33], al ; call rdx
0x00000000006be46b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; lea eax, dword ptr [rdi + 4] ; ret
0x00000000006a08ab : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov byte ptr [rsi], dil ; ret
0x00000000006ce62b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi + 0x14] ; ret
0x00000000006c705b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi] ; ret
0x000000000066768b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, edi ; ret
0x00000000006aad6b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000006674fb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov rax, rdi ; ret
0x000000000066c07b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x0000000000712fc5 : add byte ptr [rax], al ; add byte ptr [rsi], al ; retf 0x5c
0x00000000006db3fd : add byte ptr [rax], al ; add byte ptr [rsi], bl ; retf
0x0000000000714335 : add byte ptr [rax], al ; add byte ptr [rsi], ch ; ret 0x5d
0x00000000006065bb : add byte ptr [rax], al ; add byte ptr [rsp + rax*2 - 0x7d], dh ; ret
0x0000000000783d3d : add byte ptr [rax], al ; add byte ptr [rsp + rax*4], al ; ret
0x0000000000783db5 : add byte ptr [rax], al ; add byte ptr [rsp + rax*8], al ; ret
0x0000000000767b71 : add byte ptr [rax], al ; add byte ptr [rsp + rax*8], ch ; add dword ptr [rax], eax ; retf -0x28f1
0x000000000079a349 : add byte ptr [rax], al ; add byte ptr [rsp + rbp*8 + 4], al ; add al, ah ; ret 0xffe6
0x000000000079a309 : add byte ptr [rax], al ; add byte ptr [rsp + rbp*8], al ; add al, 0 ; nop ; ret 0xffe6
0x0000000000765331 : add byte ptr [rax], al ; add byte ptr [rsp + rbx*4], ch ; add dword ptr [rax], eax ; retf -0x2aa0
0x0000000000765351 : add byte ptr [rax], al ; add byte ptr [rsp + rbx*4], cl ; add dword ptr [rax], eax ; retf -0x2aa0
0x000000000079cb79 : add byte ptr [rax], al ; add byte ptr [rsp + rdx + 5], dh ; add byte ptr [rsi], bl ; ret
0x0000000000764b81 : add byte ptr [rax], al ; add byte ptr [rsp + rdx*4], bh ; add dword ptr [rax], eax ; retf -0x2abb
0x0000000000783d6d : add byte ptr [rax], al ; add byte ptr [rsp], al ; ret
0x000000000068287d : add byte ptr [rax], al ; add cl, bl ; retf
0x000000000068452d : add byte ptr [rax], al ; add cl, bl ; retf 0x1a8
0x00000000005be297 : add byte ptr [rax], al ; add cl, byte ptr [rdi] ; lahf ; ret 0x8348
0x000000000074ec0e : add byte ptr [rax], al ; add cl, ch ; call rsp
0x000000000069b3c9 : add byte ptr [rax], al ; add cl, ch ; outsb dx, byte ptr [rsi] ; retf
0x000000000044c827 : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004e94c1 : add byte ptr [rax], al ; add cl, ch ; ret 0x20
0x0000000000653a32 : add byte ptr [rax], al ; add cl, ch ; ret 0xfff6
0x0000000000666f92 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffb
0x00000000004e37ea : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x00000000004cb49e : add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x000000000041244e : add byte ptr [rax], al ; add cl, ch ; ret 1
0x00000000004c5358 : add byte ptr [rax], al ; add cl, ch ; retf
0x00000000006455e4 : add byte ptr [rax], al ; add cl, ch ; retf -0x5b
0x000000000057e180 : add byte ptr [rax], al ; add cl, ch ; retf -2
0x000000000044d518 : add byte ptr [rax], al ; add cl, ch ; retf -3
0x000000000040bfaa : add byte ptr [rax], al ; add cl, cl ; ret
0x00000000007f6f6f : add byte ptr [rax], al ; add cl, cl ; syscall
0x00000000006bdacd : add byte ptr [rax], al ; add dh, al ; add r8d, dword ptr [r9] ; ret
0x000000000069254c : add byte ptr [rax], al ; add dh, al ; jnp 0x69255b ; pop rbx ; ret
0x000000000064a8e0 : add byte ptr [rax], al ; add dh, al ; ret 0xf00
0x00000000004a5f04 : add byte ptr [rax], al ; add dh, al ; retf
0x000000000056f2e8 : add byte ptr [rax], al ; add dh, al ; sub byte ptr [r9], al ; pop rbx ; ret
0x00000000006a81dd : add byte ptr [rax], al ; add dh, al ; xor byte ptr [r8], r8b ; ret
0x00000000006844dd : add byte ptr [rax], al ; add dh, bl ; ret
0x000000000071433d : add byte ptr [rax], al ; add dh, ch ; ret 0x5d
0x00000000005189d6 : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000661497 : add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0x00000000007dc575 : add byte ptr [rax], al ; add dh, dl ; syscall
0x000000000078f54f : add byte ptr [rax], al ; add dl, ah ; jmp qword ptr [rbx]
0x000000000073597b : add byte ptr [rax], al ; add dl, al ; call qword ptr [rax]
0x0000000000724e95 : add byte ptr [rax], al ; add dl, bl ; retf
0x0000000000724ec5 : add byte ptr [rax], al ; add dl, cl ; retf
0x00000000007dc56a : add byte ptr [rax], al ; add dl, cl ; syscall
0x00000000006fc242 : add byte ptr [rax], al ; add dword ptr [rax + rax], eax ; add al, cl ; ret
0x00000000006dcb22 : add byte ptr [rax], al ; add dword ptr [rax + rax], eax ; add al, cl ; retf 0x6d
0x000000000067552f : add byte ptr [rax], al ; add dword ptr [rax - 0x77], ecx ; retf -0x6918
0x00000000007066e8 : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; retf
0x00000000006d74e8 : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4136
0x00000000006d7968 : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x413e
0x00000000006dca68 : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x44fb
0x00000000004fead4 : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x68ad78
0x000000000074b84a : add byte ptr [rax], al ; add dword ptr [rax], r8d ; add byte ptr [rax - 0x18], dh ; retf
0x0000000000675b25 : add byte ptr [rax], al ; add dword ptr [rbp - 0x42], esi ; retf
0x0000000000672598 : add byte ptr [rax], al ; add dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00000000006906e3 : add byte ptr [rax], al ; add dword ptr [rbx + 0x60], 1 ; pop rbx ; ret
0x000000000066b5b2 : add byte ptr [rax], al ; add dword ptr [rcx + rcx + 0x48], esi ; add esp, 8 ; ret
0x000000000066b812 : add byte ptr [rax], al ; add dword ptr [rcx + rcx + 0x5b], esi ; ret
0x000000000066b33e : add byte ptr [rax], al ; add dword ptr [rdi + 0xc90], 1 ; ret
0x0000000000671bd4 : add byte ptr [rax], al ; add dword ptr [rdi + rax + 0x5b], esi ; ret
0x000000000066b475 : add byte ptr [rax], al ; add dword ptr [rsi + rax + 0x5b], esi ; ret
0x000000000075f58a : add byte ptr [rax], al ; add dword ptr ds:[rax], eax ; or bl, r10b ; call qword ptr [rbx]
0x000000000075dd4a : add byte ptr [rax], al ; add dword ptr es:[rax], eax ; ret 0xd1f5
0x000000000075ed92 : add byte ptr [rax], al ; add dword ptr ss:[rax], eax ; test byte ptr [rbp - 0x2e], dh ; jmp qword ptr [rsi]
0x00000000007bf9ab : add byte ptr [rax], al ; add eax, 0x185036a ; ret
0x00000000007bf04b : add byte ptr [rax], al ; add eax, 0x53e016d ; retf 0x301
0x000000000079f752 : add byte ptr [rax], al ; add eax, 0xe865f800 ; call qword ptr [rbx]
0x000000000079fd4a : add byte ptr [rax], al ; add eax, 0xe870f000 ; call qword ptr [rbx]
0x00000000007aaa6a : add byte ptr [rax], al ; add eax, 0xecdad000 ; call qword ptr [rdx]
0x00000000005e933c : add byte ptr [rax], al ; add ebx, 1 ; jmp 0x5e930c
0x00000000005bf438 : add byte ptr [rax], al ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x8441
0x00000000006d128b : add byte ptr [rax], al ; add edi, 0x30 ; mov byte ptr [r10 + 0xc], dil ; ret
0x000000000078f84f : add byte ptr [rax], al ; add esp, edx ; jmp qword ptr [rdx]
0x000000000066285e : add byte ptr [rax], al ; add rax, 0xb ; ret
0x00000000006944f0 : add byte ptr [rax], al ; add rax, rdx ; add rsp, 0x18 ; ret
0x00000000006b20d1 : add byte ptr [rax], al ; add rax, rdx ; add rsp, 0x38 ; ret
0x00000000006c969c : add byte ptr [rax], al ; add rax, rsi ; ret
0x000000000067fa7b : add byte ptr [rax], al ; add rdi, 0xe8 ; call rax
0x00000000006b2f40 : add byte ptr [rax], al ; add rdi, 8 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000548280 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000548440 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000065e12f : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000040c891 : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000006a5626 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000000005917af : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000067f128 : add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000000006a5ca6 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbx ; ret
0x00000000006a2b8a : add byte ptr [rax], al ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000006a5aa6 : add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x00000000006909a1 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbx ; ret
0x00000000006ce245 : add byte ptr [rax], al ; add rsp, 0xc8 ; ret
0x000000000066800c : add byte ptr [rax], al ; add rsp, 0xdc8 ; ret
0x0000000000509c88 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000403273 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000751816 : add byte ptr [rax], al ; add si, cx ; jmp qword ptr [rax]
0x0000000000767a6e : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x00000000007682a6 : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000007a7a56 : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; push rsp ; ret
0x0000000000777a96 : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x000000000074cc6a : add byte ptr [rax], al ; and al, 0x15 ; add byte ptr [rax], al ; rcr byte ptr [rcx - 0x34], 1 ; call qword ptr [rsi]
0x000000000079da6a : add byte ptr [rax], al ; and al, 0x23 ; add eax, 0xe7e75c00 ; call rcx
0x000000000075f42a : add byte ptr [rax], al ; and al, 0x3d ; add dword ptr [rax], eax ; not rdx ; jmp qword ptr [rbx]
0x000000000076136a : add byte ptr [rax], al ; and al, 0x5c ; add dword ptr [rax], eax ; not ebx ; call rbx
0x0000000000773c2a : add byte ptr [rax], al ; and al, 0x85 ; add al, byte ptr [rax] ; push rax ; je 0x773c17 ; jmp qword ptr [rdx]
0x0000000000763e2a : add byte ptr [rax], al ; and al, 0x87 ; add dword ptr [rax], eax ; ret 0xd52e
0x0000000000774d2a : add byte ptr [rax], al ; and al, 0x96 ; add al, byte ptr [rax] ; nop ; mov bl, 0xdb ; call qword ptr [rax]
0x000000000077546a : add byte ptr [rax], al ; and al, 0x9d ; add al, byte ptr [rax] ; loop 0x775457 ; call rdi
0x0000000000785a2a : add byte ptr [rax], al ; and al, 0xa3 ; add eax, dword ptr [rax] ; shr ch, 0xdf ; call qword ptr [rbx]
0x000000000078632a : add byte ptr [rax], al ; and al, 0xac ; add eax, dword ptr [rax] ; xor cl, 0xdf ; jmp qword ptr [rcx]
0x00000000007a642a : add byte ptr [rax], al ; and al, 0xad ; add eax, 0xeb7e3000 ; call qword ptr [rdx]
0x000000000075676a : add byte ptr [rax], al ; and al, 0xb0 ; add byte ptr [rax], al ; cwde ; mov al, 0xcf ; call rsp
0x0000000000766b6a : add byte ptr [rax], al ; and al, 0xb4 ; add dword ptr [rax], eax ; jle 0x766b87 ; salc ; call rsp
0x0000000000756c2a : add byte ptr [rax], al ; and al, 0xb5 ; add byte ptr [rax], al ; xchg eax, edx ; ret
0x00000000007a742a : add byte ptr [rax], al ; and al, 0xbd ; add eax, 0xebfdc000 ; jmp qword ptr [rcx]
0x000000000076802a : add byte ptr [rax], al ; and al, 0xc9 ; add dword ptr [rax], eax ; adc dh, byte ptr [rbp - 0x29] ; jmp qword ptr [rbx]
0x00000000007a822a : add byte ptr [rax], al ; and al, 0xcb ; add eax, 0xec28fc00 ; jmp qword ptr [rcx]
0x000000000077952a : add byte ptr [rax], al ; and al, 0xde ; add al, byte ptr [rax] ; ror al, 0xdc ; jmp qword ptr [rdx]
0x0000000000757bd6 : add byte ptr [rax], al ; and al, 0xe0 ; iretd ; jmp qword ptr [rax]
0x00000000007a9b2a : add byte ptr [rax], al ; and al, 0xe4 ; add eax, 0xecab3000 ; call qword ptr [rax]
0x0000000000799e2a : add byte ptr [rax], al ; and al, 0xe7 ; add al, 0 ; xor byte ptr [rax - 0x1a], bl ; call qword ptr [rdx]
0x000000000079a22a : add byte ptr [rax], al ; and al, 0xeb ; add al, 0 ; ret 0xffe6
0x000000000079ab2a : add byte ptr [rax], al ; and al, 0xf4 ; add al, 0 ; xor cl, 0xe6 ; jmp qword ptr [rcx]
0x000000000079ae2a : add byte ptr [rax], al ; and al, 0xf7 ; add al, 0 ; add byte ptr [rdi], al ; jmp qword ptr [rcx]
0x00000000007aae2a : add byte ptr [rax], al ; and al, 0xf7 ; add eax, 0xece03000 ; jmp qword ptr [rdi]
0x000000000074b82a : add byte ptr [rax], al ; and al, 1 ; add byte ptr [rax], al ; sub al, 0xe8 ; retf
0x000000000075785e : add byte ptr [rax], al ; and al, bl ; iretd ; call rsp
0x00000000006b2269 : add byte ptr [rax], al ; and byte ptr [rax], al ; ret
0x00000000006ce15d : add byte ptr [rax], al ; and byte ptr [rax], dl ; add byte ptr [rax], al ; ret
0x000000000075553e : add byte ptr [rax], al ; and dh, byte ptr [rsi - 0x31] ; call rsp
0x000000000074b6f6 : add byte ptr [rax], al ; and dl, bl ; retf
0x00000000007f5013 : add byte ptr [rax], al ; and dword ptr [rsi], ebx ; retf 0x101
0x000000000074024b : add byte ptr [rax], al ; and esp, ebp ; jmp qword ptr [rax]
0x0000000000512b6e : add byte ptr [rax], al ; and rax, 0xffffffffffffffc0 ; ret
0x0000000000517216 : add byte ptr [rax], al ; call 0x403c74
0x0000000000640888 : add byte ptr [rax], al ; call 0x4ccb70
0x00000000006472a9 : add byte ptr [rax], al ; call 0x563d84
0x00000000005c0c43 : add byte ptr [rax], al ; call 0x5bd714
0x000000000064bd4d : add byte ptr [rax], al ; call 0x6487d4
0x00000000004238bb : add byte ptr [rax], al ; call 0x67fb54
0x00000000004238d7 : add byte ptr [rax], al ; call 0x67fb56
0x0000000000433945 : add byte ptr [rax], al ; call 0x67fb6a
0x00000000004847dd : add byte ptr [rax], al ; call 0x680ac8
0x0000000000484806 : add byte ptr [rax], al ; call 0x680af0
0x00000000004348ba : add byte ptr [rax], al ; call 0x680b90
0x00000000004e4924 : add byte ptr [rax], al ; call 0x680bb8
0x0000000000425046 : add byte ptr [rax], al ; call 0x6812fe
0x00000000005d5285 : add byte ptr [rax], al ; call 0x681536
0x000000000064c69b : add byte ptr [rax], al ; call 0x689144
0x00000000004fdda7 : add byte ptr [rax], al ; call 0x689fb4
0x00000000004fead8 : add byte ptr [rax], al ; call 0x68ad74
0x00000000006cb2ad : add byte ptr [rax], al ; call 0x6a7d74
0x000000000046e5ef : add byte ptr [rax], al ; call 0x6aa8e4
0x0000000000432330 : add byte ptr [rax], al ; call 0x6be5d4
0x00000000006425b9 : add byte ptr [rax], al ; call 0x6be894
0x00000000004f28eb : add byte ptr [rax], al ; call 0x6bebe4
0x0000000000432a8e : add byte ptr [rax], al ; call 0x6bed04
0x0000000000567d10 : add byte ptr [rax], al ; call 0x6d4744
0x0000000000789f92 : add byte ptr [rax], al ; call 0xffffffffcc509fa4
0x0000000000758a36 : add byte ptr [rax], al ; call 0xffffffffd4755a58
0x000000000075455e : add byte ptr [rax], al ; call 0xffffffffd575148a
0x0000000000759e16 : add byte ptr [rax], al ; call 0xffffffffd5756ea4
0x00000000007f5df0 : add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000007dac06 : add byte ptr [rax], al ; call qword ptr [rcx]
0x00000000007d4e61 : add byte ptr [rax], al ; call qword ptr [rdx]
0x00000000006d400d : add byte ptr [rax], al ; call r14
0x00000000004e48ad : add byte ptr [rax], al ; call r8
0x0000000000404a62 : add byte ptr [rax], al ; call rax
0x000000000054a2c0 : add byte ptr [rax], al ; call rcx
0x00000000005189e4 : add byte ptr [rax], al ; call rdx
0x000000000075b32e : add byte ptr [rax], al ; clc ; or cl, dl ; call rsp
0x000000000074591b : add byte ptr [rax], al ; clc ; out dx, eax ; call rax
0x0000000000402616 : add byte ptr [rax], al ; clc ; ret
0x0000000000402316 : add byte ptr [rax], al ; clc ; ret 0x9f
0x000000000072c9f6 : add byte ptr [rax], al ; clc ; retf
0x000000000079b34a : add byte ptr [rax], al ; cld ; add al, 0 ; sbb al, 0xe7 ; jmp qword ptr [rcx]
0x00000000007ea9fd : add byte ptr [rax], al ; cld ; add dword ptr [rdx], ecx ; ret
0x000000000075de02 : add byte ptr [rax], al ; cld ; add dword ptr es:[rax], eax ; push rsp ; not ecx ; jmp qword ptr [rbx]
0x000000000076a402 : add byte ptr [rax], al ; cld ; in al, dx ; add dword ptr [rax], eax ; push rsp ; pushfq ; leave ; call qword ptr [rdx]
0x00000000007aa902 : add byte ptr [rax], al ; cld ; int1 ; add eax, 0xecdae800 ; call qword ptr [rdx]
0x00000000007b3102 : add byte ptr [rax], al ; cld ; jns 0x7b3116 ; add byte ptr [rdx + 0xf], cl ; out dx, eax ; jmp qword ptr [rax]
0x00000000007a6f02 : add byte ptr [rax], al ; cld ; mov bh, 5 ; add byte ptr [rax], bh ; fsub st(3), st(0) ; call qword ptr [rsi]
0x0000000000794442 : add byte ptr [rax], al ; cld ; mov word ptr [rax + rax], es ; xchg eax, esp ; js 0x794438 ; call rsp
0x00000000007a4802 : add byte ptr [rax], al ; cld ; nop ; add eax, 0xc6334a00 ; call qword ptr [rdx]
0x00000000007ac502 : add byte ptr [rax], al ; cld ; or eax, 0x46c00006 ; in eax, dx ; call qword ptr [rbx]
0x0000000000750f02 : add byte ptr [rax], al ; cld ; push rdi ; add byte ptr [rax], al ; retf -0x33
0x00000000007a0e02 : add byte ptr [rax], al ; cld ; push rsi ; add eax, 0xe8a39800 ; jmp qword ptr [rax]
0x0000000000755402 : add byte ptr [rax], al ; cld ; pushfq ; add byte ptr [rax], al ; pop rdx ; jae 0x7553e3 ; call qword ptr [rdx]
0x00000000006d94a6 : add byte ptr [rax], al ; cld ; ret
0x0000000000797a42 : add byte ptr [rax], al ; cld ; ret 4
0x0000000000778242 : add byte ptr [rax], al ; cld ; retf 2
0x0000000000788a02 : add byte ptr [rax], al ; cld ; rol byte ptr [rbx], cl ; add byte ptr [rax], bh ; jg 0x7889f4 ; call qword ptr [rbx]
0x000000000079d002 : add byte ptr [rax], al ; cld ; sbb byte ptr [rip - 0x182a9400], al ; call qword ptr [rbx]
0x00000000007ad502 : add byte ptr [rax], al ; cld ; sbb eax, 0x8af80006 ; in eax, dx ; call qword ptr [rdi]
0x000000000079c702 : add byte ptr [rax], al ; cld ; syscall
0x0000000000757a96 : add byte ptr [rax], al ; cli ; fxch st(0), st(7) ; jmp qword ptr [rax]
0x0000000000747bdb : add byte ptr [rax], al ; cmc ; jmp qword ptr [rax]
0x0000000000503aa0 : add byte ptr [rax], al ; cmove eax, edi ; ret
0x00000000006b2241 : add byte ptr [rax], al ; cmovge eax, edi ; ret
0x000000000051917d : add byte ptr [rax], al ; cmovle rax, rcx ; mov edx, edx ; pop rbx ; ret
0x000000000051aed8 : add byte ptr [rax], al ; cmovle rax, rcx ; mov edx, edx ; ret
0x000000000051aeb3 : add byte ptr [rax], al ; cmovle rax, rdx ; mov dl, 1 ; ret
0x0000000000503cc6 : add byte ptr [rax], al ; cmovne eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006c8a88 : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x0000000000508e46 : add byte ptr [rax], al ; cmovne rax, rbx ; pop rbx ; ret
0x000000000073f8fb : add byte ptr [rax], al ; cmp ah, ah ; call qword ptr [rax]
0x0000000000777a56 : add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; push rsp ; ret
0x000000000079e982 : add byte ptr [rax], al ; cmp al, 0x32 ; add eax, 0xe8223600 ; call qword ptr [rdi]
0x000000000074f242 : add byte ptr [rax], al ; cmp al, 0x3b ; add byte ptr [rax], al ; xor al, 0xcd ; jmp qword ptr [rbx]
0x000000000079f442 : add byte ptr [rax], al ; cmp al, 0x3d ; add eax, 0xe865d800 ; call qword ptr [rax]
0x000000000074fb82 : add byte ptr [rax], al ; cmp al, 0x44 ; add byte ptr [rax], al ; add byte ptr [rsi - 0x33], al ; call rdx
0x000000000077ff42 : add byte ptr [rax], al ; cmp al, 0x48 ; add eax, dword ptr [rax] ; ret 0xc84e
0x0000000000780042 : add byte ptr [rax], al ; cmp al, 0x49 ; add eax, dword ptr [rax] ; xor byte ptr [rsi - 0x38], cl ; call qword ptr [rdx]
0x0000000000790642 : add byte ptr [rax], al ; cmp al, 0x4f ; add al, 0 ; call 0x2478e8b1
0x0000000000750f42 : add byte ptr [rax], al ; cmp al, 0x58 ; add byte ptr [rax], al ; cwde ; retf -0x33
0x0000000000771d42 : add byte ptr [rax], al ; cmp al, 0x66 ; add al, byte ptr [rax] ; clc ; add bl, bl ; call qword ptr [rbx]
0x0000000000763682 : add byte ptr [rax], al ; cmp al, 0x7f ; add dword ptr [rax], eax ; xchg eax, edx ; and ch, dl ; call rsp
0x0000000000783f82 : add byte ptr [rax], al ; cmp al, 0x88 ; add eax, dword ptr [rax] ; clc ; jle 0x783f73 ; call qword ptr [rax]
0x0000000000754682 : add byte ptr [rax], al ; cmp al, 0x8f ; add byte ptr [rax], al ; js 0x7546b9 ; iretd ; call rsp
0x0000000000764b82 : add byte ptr [rax], al ; cmp al, 0x94 ; add dword ptr [rax], eax ; retf -0x2abb
0x0000000000755442 : add byte ptr [rax], al ; cmp al, 0x9d ; add byte ptr [rax], al ; pop rdx ; jae 0x755423 ; call qword ptr [rbx]
0x0000000000796242 : add byte ptr [rax], al ; cmp al, 0xab ; add al, 0 ; retf -0x1acc
0x00000000007a7442 : add byte ptr [rax], al ; cmp al, 0xbd ; add eax, 0xebfdd800 ; jmp qword ptr [rsi]
0x0000000000756a46 : add byte ptr [rax], al ; cmp al, 0xbd ; iretd ; jmp qword ptr [rax]
0x0000000000797782 : add byte ptr [rax], al ; cmp al, 0xc0 ; add al, 0 ; mov ch, byte ptr [rbx - 0x1b] ; call rsp
0x00000000007a7942 : add byte ptr [rax], al ; cmp al, 0xc2 ; add eax, 0xec03b800 ; call qword ptr [rsi]
0x0000000000798542 : add byte ptr [rax], al ; cmp al, 0xce ; add al, 0 ; pop rax ; mul ebp ; call qword ptr [rdx]
0x0000000000768842 : add byte ptr [rax], al ; cmp al, 0xd1 ; add dword ptr [rax], eax ; and dh, bh ; xlatb ; jmp rdx
0x00000000007f8cbe : add byte ptr [rax], al ; cmp al, 0xd6 ; add ecx, edx ; add eax, dword ptr [rax] ; ret 0x502
0x0000000000789282 : add byte ptr [rax], al ; cmp al, 0xdb ; add eax, dword ptr [rax] ; call 0xffffffffe2787336
0x000000000074222b : add byte ptr [rax], al ; cmp al, 0xe8 ; call qword ptr [rax]
0x000000000075a742 : add byte ptr [rax], al ; cmp al, 0xf0 ; add byte ptr [rax], al ; mov cl, 0xd0 ; call qword ptr [rdx]
0x000000000078ac82 : add byte ptr [rax], al ; cmp al, 0xf5 ; add eax, dword ptr [rax] ; call 0x13788d7c
0x000000000075c082 : add byte ptr [rax], al ; cmp al, 9 ; add dword ptr [rax], eax ; mov cl, byte ptr [rdx - 0x2f] ; call rsp
0x000000000075c042 : add byte ptr [rax], al ; cmp al, 9 ; add dword ptr [rax], eax ; mov cl, byte ptr [rdx - 0x2f] ; jmp qword ptr [rsi]
0x00000000007451cb : add byte ptr [rax], al ; cmp bh, ch ; jmp qword ptr [rax - 0x3d]
0x0000000000606e9f : add byte ptr [rax], al ; cmp byte ptr [rbp - 0x63], 0xbe ; ret
0x00000000005f3657 : add byte ptr [rax], al ; cmp byte ptr [rbx + rdx + 0x48], 0x63 ; retf
0x00000000004f74be : add byte ptr [rax], al ; cmp byte ptr [rdi + 0x10], 7 ; sete al ; ret
0x00000000005fed0e : add byte ptr [rax], al ; cmp byte ptr [rdi + 0x78], 0 ; sete al ; ret
0x000000000068f06e : add byte ptr [rax], al ; cmp byte ptr [rdi - 0x1c], 1 ; sete al ; ret
0x00000000007c4819 : add byte ptr [rax], al ; cmp byte ptr [rdi], dh ; retf
0x00000000006cba9e : add byte ptr [rax], al ; cmp di, si ; sete al ; ret
0x000000000067851e : add byte ptr [rax], al ; cmp dil, 0x5f ; sete al ; ret
0x00000000006c6b1e : add byte ptr [rax], al ; cmp dil, 0xa ; setne al ; ret
0x00000000006c6b2e : add byte ptr [rax], al ; cmp dil, 0xb ; setne al ; ret
0x00000000006aa9ce : add byte ptr [rax], al ; cmp dil, 1 ; seta al ; ret
0x00000000005218ce : add byte ptr [rax], al ; cmp dil, 1 ; setne al ; ret
0x00000000005ae2ee : add byte ptr [rax], al ; cmp dil, 2 ; setne al ; ret
0x00000000005ae2de : add byte ptr [rax], al ; cmp dil, 3 ; setne al ; ret
0x00000000005ae2fe : add byte ptr [rax], al ; cmp dil, 4 ; setne al ; ret
0x00000000005ae30e : add byte ptr [rax], al ; cmp dil, 5 ; setne al ; ret
0x00000000005ae31e : add byte ptr [rax], al ; cmp dil, 6 ; setne al ; ret
0x00000000005ae32e : add byte ptr [rax], al ; cmp dil, 7 ; setne al ; ret
0x00000000006bc57e : add byte ptr [rax], al ; cmp dil, sil ; sete al ; ret
0x00000000007f0bc9 : add byte ptr [rax], al ; cmp dword ptr [rax], 0x28 ; cld ; cmp al, byte ptr [rax] ; ret
0x00000000006c7dde : add byte ptr [rax], al ; cmp dword ptr [rdi], -1 ; je 0x6c7df7 ; ret
0x00000000006c7bde : add byte ptr [rax], al ; cmp dword ptr [rdi], -1 ; sete al ; ret
0x00000000007dbe11 : add byte ptr [rax], al ; cmp dword ptr [rsi], eax ; mov bh, 0xd ; add byte ptr [rdi + 5], al ; retf 0x309
0x00000000007e77e3 : add byte ptr [rax], al ; cmp dword ptr [rsi], edx ; ret
0x00000000007af26a : add byte ptr [rax], al ; cmp eax, dword ptr fs:[rsi] ; add byte ptr [rax], dh ; in al, -0x13 ; call rax
0x0000000000544e6e : add byte ptr [rax], al ; cmp edi, dword ptr [rsi + 0x1c] ; setl al ; ret
0x000000000057198e : add byte ptr [rax], al ; cmp esi, 1 ; setne al ; ret
0x000000000053ed3e : add byte ptr [rax], al ; cmp esi, dword ptr [rdi + 0x10] ; jg 0x53ed4d ; ret
0x00000000005018ce : add byte ptr [rax], al ; cmp qword ptr [rdi + 0x38], 0 ; je 0x5018e9 ; ret
0x000000000054e8ce : add byte ptr [rax], al ; cmp r9, rdi ; sete al ; ret
0x000000000052b1de : add byte ptr [rax], al ; cmp rdi, qword ptr [rsi + 0x20] ; setl al ; ret
0x000000000067712e : add byte ptr [rax], al ; cmp rdi, rsi ; setg al ; ret
0x000000000067713e : add byte ptr [rax], al ; cmp rdi, rsi ; setge al ; ret
0x00000000006addfe : add byte ptr [rax], al ; cmp rdi, rsi ; setl al ; ret
0x000000000067711e : add byte ptr [rax], al ; cmp rdi, rsi ; setle al ; ret
0x00000000006c69d7 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x6c69a7 ; ret
0x00000000006c6a62 : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0x6c6a37 ; ret
0x00000000007c804e : add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x179405 ; retf 0x505
0x000000000074b916 : add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; in eax, dx ; retf
0x000000000075875e : add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; or edx, eax ; call rsp
0x00000000006db34e : add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000074b17b : add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call rax
0x000000000075619e : add byte ptr [rax], al ; cmpsb byte ptr fs:[rsi], byte ptr [rdi] ; iretd ; call rsp
0x00000000007f97e2 : add byte ptr [rax], al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dl, byte ptr [rdx] ; ret
0x00000000007e9ece : add byte ptr [rax], al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; and byte ptr [rax + rbp*4], dl ; and dword ptr [rax], eax ; retf 0x520
0x000000000075a516 : add byte ptr [rax], al ; cmpsw word ptr [rsi], word ptr [rdi] ; sar bh, 1 ; ret 1
0x00000000007dee25 : add byte ptr [rax], al ; cwde ; add al, 5 ; retf 4
0x000000000075676e : add byte ptr [rax], al ; cwde ; mov al, 0xcf ; call rsp
0x00000000004024f6 : add byte ptr [rax], al ; cwde ; ret
0x0000000000714676 : add byte ptr [rax], al ; cwde ; ret 0x5d
0x00000000007570e6 : add byte ptr [rax], al ; cwde ; retf -0x31
0x0000000000750f46 : add byte ptr [rax], al ; cwde ; retf -0x33
0x00000000006d909e : add byte ptr [rax], al ; cwde ; retf 0x9f
0x00000000007f104e : add byte ptr [rax], al ; dec byte ptr [rsi] ; add eax, 0x88070ed8 ; syscall
0x00000000006b99ec : add byte ptr [rax], al ; dec dword ptr [rax + 9] ; ret
0x00000000006b8460 : add byte ptr [rax], al ; dec dword ptr [rax + 9] ; ret 0xb70f
0x000000000074ba4e : add byte ptr [rax], al ; dec ebx ; call rax
0x0000000000753be2 : add byte ptr [rax], al ; fadd qword ptr [rax + rax - 0x3123e800] ; call rdi
0x00000000006a5e56 : add byte ptr [rax], al ; fchs ; add rsp, 0x28 ; ret
0x0000000000757b36 : add byte ptr [rax], al ; fcmovu st(0), st(7) ; iretd ; call qword ptr [rbx]
0x0000000000761722 : add byte ptr [rax], al ; fcomp qword ptr [rdi + 1] ; add byte ptr [rbp + rax - 0x2c], ah ; call qword ptr [rax]
0x00000000007591e2 : add byte ptr [rax], al ; fcomp st(0), st(2) ; add byte ptr [rax], al ; rol byte ptr [rcx - 0x30], 1 ; call qword ptr [rbx]
0x0000000000757af6 : add byte ptr [rax], al ; fcomp st(0), st(7) ; iretd ; call qword ptr [rcx]
0x0000000000792ae2 : add byte ptr [rax], al ; fdiv qword ptr [rbx + 4] ; add byte ptr [rbp + rax*8 - 0x1d], dh ; jmp qword ptr [rdx]
0x0000000000786be2 : add byte ptr [rax], al ; fdiv qword ptr [rbx + rax - 0x20020800] ; jmp qword ptr [rdi]
0x00000000007629e2 : add byte ptr [rax], al ; fdiv qword ptr [rdx + 1] ; add byte ptr [rcx + rbx*4 - 0x2c], bl ; jmp rax
0x00000000007b6be2 : add byte ptr [rax], al ; fdiv qword ptr [rsi + rax - 0x105a0800] ; jmp rdx
0x00000000007ab222 : add byte ptr [rax], al ; fdiv st(2), st(0) ; add eax, 0xecf71800 ; jmp qword ptr [rdi]
0x0000000000757122 : add byte ptr [rax], al ; fdivr qword ptr [rcx - 0x357e0000] ; iretd ; call rsp
0x000000000074ba96 : add byte ptr [rax], al ; fdivr st(7) ; retf
0x000000000079aee2 : add byte ptr [rax], al ; fdivr st(7), st(0) ; add al, 0 ; clc ; add al, 0xe7 ; jmp qword ptr [rcx]
0x00000000007502e2 : add byte ptr [rax], al ; fmul qword ptr [rbx] ; add byte ptr [rdx], dh ; mov ch, cl ; jmp qword ptr [rbx]
0x00000000007ac3e2 : add byte ptr [rax], al ; fmul qword ptr [rsi + rax] ; add al, dh ; in eax, dx ; call qword ptr [rbx]
0x00000000006a4846 : add byte ptr [rax], al ; fstp st(0) ; fld1 ; ret
0x00000000006a5b96 : add byte ptr [rax], al ; fstp st(1) ; add rsp, 0x28 ; ret
0x00000000006a545e : add byte ptr [rax], al ; fstp st(1) ; ret
0x00000000006a5543 : add byte ptr [rax], al ; fstp xword ptr [rax] ; mov dword ptr [rax + 0x10], edx ; ret
0x0000000000755ae2 : add byte ptr [rax], al ; fsub qword ptr [rbx - 0x632c0000] ; iretd ; jmp qword ptr [rbx]
0x000000000075de22 : add byte ptr [rax], al ; fsub qword ptr [rsi] ; add dword ptr [rax], eax ; pop rax ; not ecx ; call rdx
0x000000000079e022 : add byte ptr [rax], al ; fsubr qword ptr [rax] ; add eax, 0xe7f34400 ; call rax
0x000000000074c676 : add byte ptr [rax], al ; fsubr qword ptr [rsp + rcx*8] ; call rsp
0x0000000000757e4e : add byte ptr [rax], al ; fsubrp st(2) ; iretd ; jmp qword ptr [rax]
0x000000000078fbfa : add byte ptr [rax], al ; hlt ; add al, 0 ; push rax ; or edx, esp ; jmp qword ptr [rdx]
0x000000000075ab3a : add byte ptr [rax], al ; hlt ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000075f33a : add byte ptr [rax], al ; hlt ; cmp eax, dword ptr [rcx] ; add byte ptr [rdx], cl ; out 0xd2, al ; jmp qword ptr [rcx]
0x000000000075903a : add byte ptr [rax], al ; hlt ; fadd dword ptr [rax] ; add byte ptr [rdx], bl ; cmp edx, eax ; call rsp
0x00000000007b28fa : add byte ptr [rax], al ; hlt ; jno 0x7b290e ; add byte ptr [rax - 0x12], al ; out dx, al ; jmp qword ptr [rsi]
0x0000000000756afa : add byte ptr [rax], al ; hlt ; mov bl, 0 ; add byte ptr [rsi], bl ; ret 0xffcf
0x00000000007b6cfa : add byte ptr [rax], al ; hlt ; mov ch, 6 ; add byte ptr [rax], dl ; stosd dword ptr [rdi], eax ; out dx, eax ; call qword ptr [rcx]
0x00000000007b68fa : add byte ptr [rax], al ; hlt ; mov cl, 6 ; add al, dh ; mov edi, gs ; call rsi
0x00000000007670fa : add byte ptr [rax], al ; hlt ; mov ecx, 0x521a0001 ; salc ; jmp qword ptr [rbx]
0x00000000007b773a : add byte ptr [rax], al ; hlt ; mov edi, 0xbcf00006 ; out dx, eax ; call rax
0x00000000007a5bfa : add byte ptr [rax], al ; hlt ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0xeb6b8000 ; jmp qword ptr [rax]
0x00000000007ac3fa : add byte ptr [rax], al ; hlt ; or al, 6 ; add ah, ch ; in eax, dx ; call qword ptr [rbx]
0x000000000076c33a : add byte ptr [rax], al ; hlt ; or eax, dword ptr [rdx] ; add al, al ; ret
0x000000000075553a : add byte ptr [rax], al ; hlt ; popfq ; add byte ptr [rax], al ; and dh, byte ptr [rsi - 0x31] ; call rsp
0x0000000000767afa : add byte ptr [rax], al ; hlt ; ret
0x0000000000787a3a : add byte ptr [rax], al ; hlt ; ret 3
0x00000000007979fa : add byte ptr [rax], al ; hlt ; ret 4
0x00000000007a79fa : add byte ptr [rax], al ; hlt ; ret 5
0x00000000007682fa : add byte ptr [rax], al ; hlt ; retf
0x00000000007ad2fa : add byte ptr [rax], al ; hlt ; sbb eax, dword ptr [rsi] ; add al, al ; je 0x7ad2f9 ; call rsi
0x00000000007baf3a : add byte ptr [rax], al ; hlt ; test dword ptr [rsi], 0xf0c85000 ; call rsi
0x00000000007a237f : add byte ptr [rax], al ; imul al ; call rdi
0x000000000076a3ea : add byte ptr [rax], al ; in al, -0x14 ; add dword ptr [rax], eax ; pop rdx ; pushfq ; leave ; call qword ptr [rdx]
0x00000000007889ea : add byte ptr [rax], al ; in al, -0x2e ; add eax, dword ptr [rax] ; and byte ptr [rdi - 0x20], bh ; jmp qword ptr [rcx]
0x0000000000757416 : add byte ptr [rax], al ; in al, -0x2f ; iretd ; call rcx
0x000000000076772a : add byte ptr [rax], al ; in al, -0x41 ; add dword ptr [rax], eax ; jl 0x767730 ; salc ; jmp qword ptr [rax]
0x000000000079542a : add byte ptr [rax], al ; in al, -0x64 ; add al, 0 ; push rax ; add ch, ah ; call rsp
0x000000000079512a : add byte ptr [rax], al ; in al, -0x67 ; add al, 0 ; rcr bh, 0xe4 ; jmp rsi
0x00000000007848ea : add byte ptr [rax], al ; in al, -0x6f ; add eax, dword ptr [rax] ; or ch, 0xdf ; jmp qword ptr [rax]
0x00000000007a47ea : add byte ptr [rax], al ; in al, -0x70 ; add eax, 0xc6335000 ; call qword ptr [rdx]
0x000000000075b32a : add byte ptr [rax], al ; in al, -5 ; add byte ptr [rax], al ; clc ; or cl, dl ; call rsp
0x000000000079caea : add byte ptr [rax], al ; in al, 0x13 ; add eax, 0xe7c26200 ; call qword ptr [rdx]
0x000000000075cbea : add byte ptr [rax], al ; in al, 0x14 ; add dword ptr [rax], eax ; retf -0x2e9e
0x000000000075f6ea : add byte ptr [rax], al ; in al, 0x3f ; add dword ptr [rax], eax ; xchg eax, esp ; adc edx, ebx ; jmp qword ptr [rbx]
0x000000000079fdea : add byte ptr [rax], al ; in al, 0x46 ; add eax, 0xe8748000 ; jmp qword ptr [rbx]
0x00000000007a082a : add byte ptr [rax], al ; in al, 0x50 ; add eax, 0xe894e000 ; call qword ptr [rcx]
0x00000000007a0eea : add byte ptr [rax], al ; in al, 0x57 ; add eax, 0xe8a46000 ; jmp qword ptr [rax]
0x00000000007a18ea : add byte ptr [rax], al ; in al, 0x61 ; add eax, 0xc649b800 ; call qword ptr [rdx]
0x00000000007a1cea : add byte ptr [rax], al ; in al, 0x65 ; add eax, 0xe8cdb000 ; jmp rsi
0x0000000000781eea : add byte ptr [rax], al ; in al, 0x67 ; add eax, dword ptr [rax] ; rcl bh, 0xde ; jmp qword ptr [rbx]
0x00000000007622ea : add byte ptr [rax], al ; in al, 0x6b ; add dword ptr [rax], eax ; shl byte ptr [rsi], 0xd4 ; jmp qword ptr [rbx]
0x0000000000792bea : add byte ptr [rax], al ; in al, 0x74 ; add al, 0 ; retf -0x1d
0x0000000000752f2a : add byte ptr [rax], al ; in al, 0x77 ; add byte ptr [rax], al ; ret 0xce87
0x00000000007e5c26 : add byte ptr [rax], al ; in al, 5 ; lea eax, dword ptr [rcx] ; ret
0x00000000007904f2 : add byte ptr [rax], al ; in al, dx ; add al, 0 ; mov byte ptr [rax - 0x1e], bl ; jmp qword ptr [rdx]
0x00000000007838f2 : add byte ptr [rax], al ; in al, dx ; add dword ptr [rbx], 0xdf2d7800 ; jmp qword ptr [rdi]
0x000000000079f9f2 : add byte ptr [rax], al ; in al, dx ; add eax, 0xe8676800 ; call qword ptr [rbx]
0x00000000007aa9f2 : add byte ptr [rax], al ; in al, dx ; add eax, 0xecdae800 ; call qword ptr [rcx]
0x00000000007a8bdf : add byte ptr [rax], al ; in al, dx ; call qword ptr [rdx]
0x000000000079f1f2 : add byte ptr [rax], al ; in al, dx ; cmp al, byte ptr [rip - 0x17af2600] ; jmp qword ptr [rbx]
0x000000000074f75e : add byte ptr [rax], al ; in al, dx ; cmp ecx, ebp ; call rsp
0x0000000000779332 : add byte ptr [rax], al ; in al, dx ; fild dword ptr [rdx] ; add al, bh ; ret 0xffdc
0x0000000000789732 : add byte ptr [rax], al ; in al, dx ; fild word ptr [rbx] ; add byte ptr [rax], ch ; mov ah, 0xe0 ; jmp rcx
0x00000000007990f2 : add byte ptr [rax], al ; in al, dx ; fld dword ptr [rax + rax] ; or byte ptr [rsi], bl ; jmp rax
0x0000000000752132 : add byte ptr [rax], al ; in al, dx ; imul eax, dword ptr [rax], 0xce167000 ; call rdx
0x00000000007b2ff2 : add byte ptr [rax], al ; in al, dx ; js 0x7b3006 ; add byte ptr [rax + 1], cl ; out dx, eax ; jmp qword ptr [rdi]
0x00000000007663f2 : add byte ptr [rax], al ; in al, dx ; lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; ret 0xd5d0
0x0000000000767f32 : add byte ptr [rax], al ; in al, dx ; mov dword ptr [rcx], 0xd72f3600 ; call qword ptr [rdx]
0x00000000007c1439 : add byte ptr [rax], al ; in al, dx ; or eax, 0x169f34 ; ret 0x50e
0x0000000000750ff2 : add byte ptr [rax], al ; in al, dx ; pop rax ; add byte ptr [rax], al ; xchg eax, edx ; retf
0x00000000007907f2 : add byte ptr [rax], al ; in al, dx ; push rax ; add al, 0 ; call 0x2378ea66
0x0000000000757af2 : add byte ptr [rax], al ; in al, dx ; ret
0x00000000007679f2 : add byte ptr [rax], al ; in al, dx ; ret 1
0x00000000007b79f2 : add byte ptr [rax], al ; in al, dx ; ret 6
0x00000000007b81f2 : add byte ptr [rax], al ; in al, dx ; retf 6
0x00000000007677f2 : add byte ptr [rax], al ; in al, dx ; rol byte ptr [rcx], 0 ; retf -0x2901
0x00000000007bd2f2 : add byte ptr [rax], al ; in al, dx ; sbb eax, dword ptr [rdi] ; add byte ptr [rax + 0xd], bl ; int1 ; call qword ptr [rax]
0x0000000000794a32 : add byte ptr [rax], al ; in al, dx ; xchg eax, edx ; add al, 0 ; ret 0xe4b8
0x00000000007e320a : add byte ptr [rax], al ; inc dword ptr [rbx] ; in al, dx ; add al, 1 ; retf 0x203
0x0000000000790372 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add al, 0 ; mov byte ptr [rdx - 0x1e], dl ; jmp qword ptr [rdi]
0x000000000076fe72 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add r8b, byte ptr [r8] ; mov dl, 0x43 ; leave ; call qword ptr [rdx]
0x00000000007a5072 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cdq ; add eax, 0xeb405800 ; jmp qword ptr [rdi]
0x000000000079f072 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp dword ptr [rip - 0x17b78800], eax ; jmp qword ptr [rbx]
0x0000000000777f72 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; enter 2, 0x46 ; retf -0x38
0x00000000007820b2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; imul eax, dword ptr [rbx], 0xded78800 ; call qword ptr [rdi]
0x00000000007636b2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jg 0x7636c1 ; add byte ptr [rsi], dh ; and ebp, edx ; call qword ptr [rax]
0x0000000000792c72 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jne 0x792c82 ; add byte ptr [rax], cl ; retf
0x00000000007b2c72 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jne 0x7b2c86 ; add al, cl ; out dx, al ; jmp rsp
0x0000000000794572 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov es, word ptr [rax + rax] ; xor bh, byte ptr [rsi - 0x1c] ; call qword ptr [rax]
0x00000000007ac472 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; or eax, 0x46d80006 ; in eax, dx ; call qword ptr [rbx]
0x0000000000767a72 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x0000000000777972 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 2
0x00000000006de836 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x000000000079d272 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sbb eax, dword ptr [rip - 0x1825f600] ; jmp qword ptr [rdi]
0x000000000079e072 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sub dword ptr [rip - 0x180b2600], eax ; call qword ptr [rsi]
0x00000000007aa86a : add byte ptr [rax], al ; int1 ; add eax, 0xecda5000 ; call qword ptr [rdi]
0x0000000000757c77 : add byte ptr [rax], al ; iretd ; call qword ptr [rbx]
0x000000000074a233 : add byte ptr [rax], al ; iretd ; clc ; call rax
0x000000000074d5ce : add byte ptr [rax], al ; jae 0x74d5a4 ; call rcx
0x0000000000792a6a : add byte ptr [rax], al ; jae 0x792a7a ; add dh, dl ; ret 0xffe3
0x00000000007a29aa : add byte ptr [rax], al ; jb 0x7a29bd ; add byte ptr [rax], dl ; or ch, cl ; call qword ptr [rsi]
0x0000000000525986 : add byte ptr [rax], al ; je 0x525994 ; ret
0x000000000052b166 : add byte ptr [rax], al ; je 0x52b174 ; ret
0x0000000000544e26 : add byte ptr [rax], al ; je 0x544e34 ; ret
0x0000000000547f16 : add byte ptr [rax], al ; je 0x547f29 ; mov eax, 1 ; ret
0x000000000056ae96 : add byte ptr [rax], al ; je 0x56aea4 ; ret
0x0000000000571986 : add byte ptr [rax], al ; je 0x571994 ; ret
0x000000000058f6c6 : add byte ptr [rax], al ; je 0x58f6d4 ; ret
0x00000000005957c6 : add byte ptr [rax], al ; je 0x5957d4 ; ret
0x00000000005ad826 : add byte ptr [rax], al ; je 0x5ad834 ; ret
0x000000000062ef3b : add byte ptr [rax], al ; je 0x62ef50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000066b244 : add byte ptr [rax], al ; je 0x66b258 ; add rsp, 8 ; ret
0x000000000066b7d0 : add byte ptr [rax], al ; je 0x66b7dc ; ret
0x000000000066de62 : add byte ptr [rax], al ; je 0x66de78 ; add rsp, 0x18 ; ret
0x0000000000672723 : add byte ptr [rax], al ; je 0x672738 ; add rsp, 0x28 ; ret
0x00000000006757ed : add byte ptr [rax], al ; je 0x675808 ; add rsp, 0x18 ; ret
0x0000000000675cc5 : add byte ptr [rax], al ; je 0x675cd4 ; ret
0x0000000000676215 : add byte ptr [rax], al ; je 0x676224 ; ret
0x0000000000676b76 : add byte ptr [rax], al ; je 0x676b84 ; ret
0x00000000006bed15 : add byte ptr [rax], al ; je 0x6bed24 ; ret
0x00000000006ced56 : add byte ptr [rax], al ; je 0x6ced64 ; ret
0x00000000006d42b6 : add byte ptr [rax], al ; je 0x6d429c ; add rsp, 8 ; ret
0x000000000073bc73 : add byte ptr [rax], al ; je 0x73bc59 ; call rax
0x00000000007494bb : add byte ptr [rax], al ; je 0x7494ba ; call rax
0x000000000074efba : add byte ptr [rax], al ; je 0x74efff ; add byte ptr [rax], al ; sbb ecx, ebp ; call rsp
0x0000000000753d7a : add byte ptr [rax], al ; je 0x753d0a ; add byte ptr [rax], al ; retf -0x311e
0x00000000007549ba : add byte ptr [rax], al ; je 0x754959 ; add byte ptr [rax], al ; xchg eax, edx ; cmp al, 0xcf ; call rsp
0x000000000075d4ba : add byte ptr [rax], al ; je 0x75d4e2 ; add dword ptr [rax], eax ; xchg eax, edx ; retf -0x2f
0x000000000075f1ba : add byte ptr [rax], al ; je 0x75f1fe ; add dword ptr [rax], eax ; ret 0xd2d7
0x000000000076277a : add byte ptr [rax], al ; je 0x7627f7 ; add dword ptr [rax], eax ; cmp byte ptr [rdx - 0x2c], bh ; call qword ptr [rdx]
0x000000000076c57a : add byte ptr [rax], al ; je 0x76c593 ; add al, byte ptr [rax] ; nop ; retf -0x27
0x0000000000770c7a : add byte ptr [rax], al ; je 0x770cdc ; add al, byte ptr [rax] ; mov cl, 0xda ; jmp qword ptr [rdi]
0x0000000000781dba : add byte ptr [rax], al ; je 0x781e2d ; add eax, dword ptr [rax] ; rcl cl, 0xde ; jmp rcx
0x0000000000791a7a : add byte ptr [rax], al ; je 0x791aea ; add al, 0 ; shl byte ptr [rax], 0xe3 ; jmp qword ptr [rax]
0x0000000000797c7a : add byte ptr [rax], al ; je 0x797c4c ; add al, 0 ; pushfq ; mov ah, 0xe5 ; jmp qword ptr [rbx]
0x000000000079b77a : add byte ptr [rax], al ; je 0x79b787 ; add eax, 0xe751d000 ; jmp qword ptr [rcx]
0x00000000007a687a : add byte ptr [rax], al ; je 0x7a6838 ; add eax, 0xeba95000 ; call rax
0x00000000007a837a : add byte ptr [rax], al ; je 0x7a8353 ; add eax, 0xec2ad000 ; call qword ptr [rdx]
0x00000000007aa97a : add byte ptr [rax], al ; je 0x7aa979 ; add eax, 0xecdad000 ; call qword ptr [rdx]
0x00000000005058ec : add byte ptr [rax], al ; jg 0x5058fe ; xor eax, eax ; ret
0x00000000006b24e8 : add byte ptr [rax], al ; jg 0x6b2534 ; ret
0x00000000006b3b2d : add byte ptr [rax], al ; jg 0x6b3b36 ; ret
0x00000000006ce0d9 : add byte ptr [rax], al ; jg 0x6ce0e5 ; ret
0x00000000007b61cf : add byte ptr [rax], al ; jg 0x7b61c6 ; call qword ptr [rbx]
0x000000000067663d : add byte ptr [rax], al ; jl 0x676658 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000007334b2 : add byte ptr [rax], al ; jl 0x7334a9 ; stc ; jmp qword ptr [rdi + 0x16fff9eb]
0x000000000073f1a3 : add byte ptr [rax], al ; jl 0x73f18e ; call qword ptr [rax]
0x000000000074b8c2 : add byte ptr [rax], al ; jl 0x74b8cf ; add byte ptr [rax], al ; sahf ; jmp 0x74b89e
0x000000000074b9c2 : add byte ptr [rax], al ; jl 0x74b9d0 ; add byte ptr [rax], al ; jp 0x74b9ca ; retf
0x000000000074cfc2 : add byte ptr [rax], al ; jl 0x74cfe7 ; add byte ptr [rax], al ; mov fs, word ptr [rdi - 0x34] ; call rsp
0x00000000007542c2 : add byte ptr [rax], al ; jl 0x75425a ; add byte ptr [rax], al ; sbb byte ptr [rcx], cl ; iretd ; call rsp
0x0000000000754882 : add byte ptr [rax], al ; jl 0x75481d ; add byte ptr [rax], al ; retf -0x30d2
0x0000000000755482 : add byte ptr [rax], al ; jl 0x75542c ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; jae 0x755463 ; call qword ptr [rcx]
0x0000000000755cc2 : add byte ptr [rax], al ; jl 0x755c74 ; add byte ptr [rax], al ; xchg eax, esi ; lahf ; iretd ; call rsp
0x0000000000757082 : add byte ptr [rax], al ; jl 0x757046 ; add byte ptr [rax], al ; retf -0x31
0x000000000075a782 : add byte ptr [rax], al ; jl 0x75a77f ; add byte ptr [rax], al ; mov cl, 0xd0 ; call qword ptr [rbx]
0x0000000000767482 : add byte ptr [rax], al ; jl 0x76744c ; add dword ptr [rax], eax ; pop rsi ; jo 0x76746a ; call rax
0x0000000000785082 : add byte ptr [rax], al ; jl 0x785028 ; add eax, dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; inc edi ; call qword ptr [rdx]
0x0000000000789b82 : add byte ptr [rax], al ; jl 0x789b71 ; add eax, dword ptr [rax] ; pop rax ; ret
0x000000000079e882 : add byte ptr [rax], al ; jl 0x79e8c0 ; add eax, 0xe81ece00 ; call qword ptr [rdi]
0x00000000007a13c2 : add byte ptr [rax], al ; jl 0x7a142b ; add eax, 0xe8ae9800 ; call rsi
0x00000000007a42c2 : add byte ptr [rax], al ; jl 0x7a425a ; add eax, 0xea304800 ; jmp rsi
0x00000000007a7a82 : add byte ptr [rax], al ; jl 0x7a7a52 ; add eax, 0xec10a800 ; jmp qword ptr [rsi]
0x0000000000678592 : add byte ptr [rax], al ; jle 0x678586 ; xor eax, eax ; ret
0x000000000073d013 : add byte ptr [rax], al ; jle 0x73cffb ; jmp qword ptr [rax]
0x0000000000753592 : add byte ptr [rax], al ; jle 0x7535a0 ; add al, cl ; mov cl, 0xce ; call rsp
0x000000000040ce5a : add byte ptr [rax], al ; jmp 0x40ce24
0x000000000040d56a : add byte ptr [rax], al ; jmp 0x40d534
0x0000000000410d56 : add byte ptr [rax], al ; jmp 0x410d20
0x000000000041390d : add byte ptr [rax], al ; jmp 0x4138d7
0x00000000004140ad : add byte ptr [rax], al ; jmp 0x414077
0x000000000041c94e : add byte ptr [rax], al ; jmp 0x41c918
0x000000000041d069 : add byte ptr [rax], al ; jmp 0x41d033
0x0000000000420da9 : add byte ptr [rax], al ; jmp 0x420d73
0x0000000000422d7f : add byte ptr [rax], al ; jmp 0x422d49
0x000000000042351f : add byte ptr [rax], al ; jmp 0x4234e9
0x000000000042b940 : add byte ptr [rax], al ; jmp 0x42b90a
0x000000000042c050 : add byte ptr [rax], al ; jmp 0x42c01a
0x000000000042f83c : add byte ptr [rax], al ; jmp 0x42f806
0x000000000043239f : add byte ptr [rax], al ; jmp 0x432369
0x0000000000432b3f : add byte ptr [rax], al ; jmp 0x432b09
0x000000000043d884 : add byte ptr [rax], al ; jmp 0x43d856
0x0000000000448856 : add byte ptr [rax], al ; jmp 0x448828
0x000000000044fe15 : add byte ptr [rax], al ; jmp 0x44fddf
0x00000000004509df : add byte ptr [rax], al ; jmp 0x4509a9
0x00000000004519d7 : add byte ptr [rax], al ; jmp 0x4519a1
0x00000000004531bb : add byte ptr [rax], al ; jmp 0x453185
0x0000000000453d85 : add byte ptr [rax], al ; jmp 0x453d4f
0x000000000045524f : add byte ptr [rax], al ; jmp 0x455219
0x000000000045950a : add byte ptr [rax], al ; jmp 0x4594dc
0x0000000000462304 : add byte ptr [rax], al ; jmp 0x4622d6
0x000000000046c004 : add byte ptr [rax], al ; jmp 0x46bfd6
0x00000000004716a5 : add byte ptr [rax], al ; jmp 0x47166f
0x000000000047226f : add byte ptr [rax], al ; jmp 0x472239
0x0000000000478a45 : add byte ptr [rax], al ; jmp 0x478a0f
0x000000000048d35b : add byte ptr [rax], al ; jmp 0x48d32d
0x000000000049c380 : add byte ptr [rax], al ; jmp 0x49c352
0x00000000004a1d6f : add byte ptr [rax], al ; jmp 0x4a1d39
0x00000000004a2939 : add byte ptr [rax], al ; jmp 0x4a2903
0x00000000004b58d1 : add byte ptr [rax], al ; jmp 0x4b589b
0x00000000004b649b : add byte ptr [rax], al ; jmp 0x4b6465
0x00000000004b7b37 : add byte ptr [rax], al ; jmp 0x4b7b01
0x00000000004b8701 : add byte ptr [rax], al ; jmp 0x4b86cb
0x00000000004c23fb : add byte ptr [rax], al ; jmp 0x4c23c5
0x00000000004c3617 : add byte ptr [rax], al ; jmp 0x4c35e1
0x00000000005cd08d : add byte ptr [rax], al ; jmp 0x5cd057
0x00000000005cd2bb : add byte ptr [rax], al ; jmp 0x5cd285
0x00000000005cd4e9 : add byte ptr [rax], al ; jmp 0x5cd4b3
0x00000000005cd70e : add byte ptr [rax], al ; jmp 0x5cd6d8
0x00000000005cf366 : add byte ptr [rax], al ; jmp 0x5cf330
0x00000000005cf587 : add byte ptr [rax], al ; jmp 0x5cf551
0x00000000005d4bd7 : add byte ptr [rax], al ; jmp 0x5d4ba1
0x00000000005d4be6 : add byte ptr [rax], al ; jmp 0x5d4bb8
0x00000000005d7f70 : add byte ptr [rax], al ; jmp 0x5d7f3a
0x00000000005d8192 : add byte ptr [rax], al ; jmp 0x5d815c
0x00000000005d9be3 : add byte ptr [rax], al ; jmp 0x5d9bad
0x00000000005d9e11 : add byte ptr [rax], al ; jmp 0x5d9ddb
0x00000000005da03f : add byte ptr [rax], al ; jmp 0x5da009
0x00000000005da264 : add byte ptr [rax], al ; jmp 0x5da22e
0x00000000005dbfd1 : add byte ptr [rax], al ; jmp 0x5dbf9b
0x00000000005dc200 : add byte ptr [rax], al ; jmp 0x5dc1ca
0x00000000005e1ab0 : add byte ptr [rax], al ; jmp 0x5e1a7a
0x00000000005e1abf : add byte ptr [rax], al ; jmp 0x5e1a91
0x00000000005e5461 : add byte ptr [rax], al ; jmp 0x5e542b
0x00000000005e5691 : add byte ptr [rax], al ; jmp 0x5e565b
0x00000000005e7f45 : add byte ptr [rax], al ; jmp 0x5e7f0f
0x00000000005e86ff : add byte ptr [rax], al ; jmp 0x5e86c9
0x00000000005eb25d : add byte ptr [rax], al ; jmp 0x5eb227
0x00000000005eba17 : add byte ptr [rax], al ; jmp 0x5eb9e1
0x00000000006143cc : add byte ptr [rax], al ; jmp 0x614396
0x0000000000614874 : add byte ptr [rax], al ; jmp 0x61483e
0x0000000000615b60 : add byte ptr [rax], al ; jmp 0x615b2a
0x000000000061b1a3 : add byte ptr [rax], al ; jmp 0x61b16d
0x000000000061bdb1 : add byte ptr [rax], al ; jmp 0x61bd7b
0x000000000069a1db : add byte ptr [rax], al ; jmp 0x696c47
0x000000000069ac54 : add byte ptr [rax], al ; jmp 0x697756
0x00000000005011c2 : add byte ptr [rax], al ; jmp rax
0x000000000073ed4b : add byte ptr [rax], al ; jmp rdx
0x000000000050be9a : add byte ptr [rax], al ; jne 0x50be8c ; ret
0x000000000050fbdd : add byte ptr [rax], al ; jne 0x50fbd4 ; ret
0x000000000052f9dd : add byte ptr [rax], al ; jne 0x52f9d4 ; ret
0x000000000052fa0d : add byte ptr [rax], al ; jne 0x52fa04 ; ret
0x000000000052fbfd : add byte ptr [rax], al ; jne 0x52fbf4 ; ret
0x000000000053216a : add byte ptr [rax], al ; jne 0x53214c ; ret
0x00000000005503af : add byte ptr [rax], al ; jne 0x55039c ; ret
0x0000000000554533 : add byte ptr [rax], al ; jne 0x554596 ; mov rdi, rbp ; call rax
0x0000000000558b8a : add byte ptr [rax], al ; jne 0x558b7c ; ret
0x0000000000597aed : add byte ptr [rax], al ; jne 0x597ae4 ; ret
0x0000000000597b1d : add byte ptr [rax], al ; jne 0x597b14 ; ret
0x00000000005bfc85 : add byte ptr [rax], al ; jne 0x5bfc94 ; ret
0x000000000062b30a : add byte ptr [rax], al ; jne 0x62b2fc ; ret
0x00000000006300cd : add byte ptr [rax], al ; jne 0x6300c4 ; ret
0x000000000063068d : add byte ptr [rax], al ; jne 0x630684 ; ret
0x000000000066418d : add byte ptr [rax], al ; jne 0x66415d ; ret
0x0000000000669715 : add byte ptr [rax], al ; jne 0x669724 ; ret
0x000000000066b430 : add byte ptr [rax], al ; jne 0x66b448 ; add rsp, 8 ; ret
0x000000000066b84e : add byte ptr [rax], al ; jne 0x66b85c ; ret
0x000000000066b86e : add byte ptr [rax], al ; jne 0x66b87c ; ret
0x000000000066bfed : add byte ptr [rax], al ; jne 0x66bfe4 ; ret
0x0000000000676535 : add byte ptr [rax], al ; jne 0x676544 ; ret
0x000000000068e96d : add byte ptr [rax], al ; jne 0x68e964 ; ret
0x000000000068e9c0 : add byte ptr [rax], al ; jne 0x68e9ac ; ret
0x000000000068e9f2 : add byte ptr [rax], al ; jne 0x68e9e4 ; ret
0x000000000068ea5d : add byte ptr [rax], al ; jne 0x68ea54 ; ret
0x000000000068ea9d : add byte ptr [rax], al ; jne 0x68ea94 ; ret
0x000000000068eafe : add byte ptr [rax], al ; jne 0x68eaf4 ; ret
0x000000000068eb2e : add byte ptr [rax], al ; jne 0x68eb24 ; ret
0x000000000068eb9d : add byte ptr [rax], al ; jne 0x68eb94 ; ret
0x00000000006a416d : add byte ptr [rax], al ; jne 0x6a4164 ; ret
0x00000000006a41ab : add byte ptr [rax], al ; jne 0x6a419c ; ret
0x00000000006a829d : add byte ptr [rax], al ; jne 0x6a8294 ; ret
0x00000000006c59ec : add byte ptr [rax], al ; jne 0x6c5a2d ; mov eax, edx ; pop rbx ; ret
0x00000000006c6975 : add byte ptr [rax], al ; jne 0x6c695c ; ret
0x000000000073c64b : add byte ptr [rax], al ; jne 0x73c632 ; jmp qword ptr [rax]
0x0000000000792c52 : add byte ptr [rax], al ; jne 0x792c62 ; add al, ch ; retf -0x1d
0x00000000007e5be4 : add byte ptr [rax], al ; jno 0x7e5c1c ; ret
0x0000000000558a47 : add byte ptr [rax], al ; jo 0x558a53 ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000006b2955 : add byte ptr [rax], al ; jo 0x6b2964 ; add byte ptr [rax], al ; mov qword ptr [rdx], rdx ; ret
0x000000000074b84e : add byte ptr [rax], al ; jo 0x74b83e ; retf
0x0000000000758ab6 : add byte ptr [rax], al ; jo 0x758ad9 ; sar bh, 1 ; ret
0x000000000074b9c6 : add byte ptr [rax], al ; jp 0x74b9c6 ; retf
0x00000000007440e3 : add byte ptr [rax], al ; js 0x7440d8 ; call rax
0x0000000000754686 : add byte ptr [rax], al ; js 0x7546b5 ; iretd ; call rsp
0x00000000007f7f0e : add byte ptr [rax], al ; lahf ; add eax, dword ptr [rsi] ; ret
0x00000000006772bb : add byte ptr [rax], al ; lahf ; push rbx ; retf 0x7cee
0x00000000007a7c52 : add byte ptr [rax], al ; lds r8, ptr [rip - 0x13ecd800] ; jmp qword ptr [rax]
0x00000000007c431b : add byte ptr [rax], al ; lea eax, dword ptr [rcx] ; retf
0x000000000067fa90 : add byte ptr [rax], al ; lea edx, dword ptr [rax + rax*8] ; lea eax, dword ptr [rax + rdx*2 + 0x42] ; ret
0x0000000000526ba6 : add byte ptr [rax], al ; lea edx, dword ptr [rsi + 1] ; mov rax, rdi ; ret
0x000000000055162e : add byte ptr [rax], al ; lea r13, qword ptr [rbx + 8] ; call rax
0x0000000000563dd0 : add byte ptr [rax], al ; lea rax, qword ptr [rax + 8] ; pop rbx ; ret
0x000000000062cb7e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0x12d8] ; ret
0x00000000006048fe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0x80] ; ret
0x00000000006a07ee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + rsi] ; ret
0x00000000006a08ee : add byte ptr [rax], al ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000544e0e : add byte ptr [rax], al ; lea rax, qword ptr [rsi + 0x20] ; ret
0x0000000000667971 : add byte ptr [rax], al ; lea rdi, qword ptr [rbx + 0x38] ; call 0x403b98
0x00000000004f78c7 : add byte ptr [rax], al ; lea rdx, qword ptr [rbp - 0x40] ; call rax
0x0000000000592f3c : add byte ptr [rax], al ; lea rsi, qword ptr [rsp + 0x70] ; call rax
0x000000000040bfab : add byte ptr [rax], al ; leave ; ret
0x00000000007f6f70 : add byte ptr [rax], al ; leave ; syscall
0x0000000000689b8e : add byte ptr [rax], al ; lock add dword ptr [rdi + 4], 1 ; ret
0x0000000000507d5e : add byte ptr [rax], al ; lock add dword ptr [rdi], 1 ; ret
0x00000000007bcbb2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; adc al, 7 ; add byte ptr [rax + 8], ch ; int1 ; call qword ptr [rbx]
0x00000000007acaf2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; adc eax, dword ptr [rsi] ; add byte ptr [rax], ch ; in eax, dx ; jmp qword ptr [rdx]
0x000000000078fab2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add al, 0 ; pop rax ; or dl, ah ; jmp qword ptr [rbx]
0x00000000007cb1ce : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add al, 5 ; fild dword ptr [rax + rax] ; retf 0x3e04
0x0000000000756392 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; sub al, 0xab ; iretd ; jmp qword ptr [rsi]
0x000000000077b8f2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add dword ptr [rbx], eax ; add al, cl ; and al, 0xdd ; call rcx
0x000000000079efb2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmp byte ptr [rip - 0x17bdc000], al ; call qword ptr [rsi]
0x00000000007a5db2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xeb6bb800 ; jmp qword ptr [rdi]
0x00000000007672f2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov ebx, 0x5c920001 ; salc ; jmp qword ptr [rsi]
0x00000000007a5bb2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0xeb6b6800 ; call qword ptr [rax]
0x00000000007626b2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; xchg eax, esi ; jb 0x762698 ; call rdi
0x0000000000750fb2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; pop rax ; add byte ptr [rax], al ; push rsi ; retf
0x0000000000790ab2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; push rbx ; add al, 0 ; call 0x2478ed31
0x0000000000757ab2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x00000000007679b2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 1
0x00000000007b82b2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; retf
0x000000000077adb2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; test byte ptr [rdx], 0 ; pop rax ; add ch, bl ; jmp qword ptr [rax]
0x00000000007b3cb2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; test dword ptr [rsi], eax ; add byte ptr [rax + 0x2b], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000793ef2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xchg dword ptr [rax + rax], eax ; sbb byte ptr [rbp - 0x1c], bl ; call rsp
0x0000000000753ef2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xchg dword ptr [rax], eax ; add byte ptr [rsi - 0x32], dh ; call rsp
0x00000000007a4cb2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xchg eax, ebp ; add eax, 0xeb3b3800 ; jmp qword ptr [rcx]
0x00000000007dd5c8 : add byte ptr [rax], al ; lodsd eax, dword ptr [rsi] ; or cl, byte ptr [rsi] ; or byte ptr [rax], al ; ret
0x00000000007e4b7c : add byte ptr [rax], al ; loope 0x7e4b86 ; ret 0xa301
0x000000000074e3ae : add byte ptr [rax], al ; loopne 0x74e384 ; call rsp
0x00000000007513b7 : add byte ptr [rax], al ; loopne 0x75138c ; call rsp
0x00000000007557ae : add byte ptr [rax], al ; loopne 0x755740 ; iretd ; jmp rsi
0x0000000000757d16 : add byte ptr [rax], al ; loopne 0x757cef ; call qword ptr [rdi]
0x00000000007ebf9a : add byte ptr [rax], al ; loopne 0x7ebfa7 ; adc al, 0xff ; or byte ptr [rax], al ; ret
0x000000000050bed2 : add byte ptr [rax], al ; mfence ; ret
0x000000000077f8ba : add byte ptr [rax], al ; mov ah, 0x41 ; add eax, dword ptr [rax] ; nop ; xor al, 0xde ; call qword ptr [rcx]
0x00000000007900ba : add byte ptr [rax], al ; mov ah, 0x49 ; add al, 0 ; adc byte ptr [rcx - 0x1e], cl ; jmp qword ptr [rbx]
0x00000000007a0dba : add byte ptr [rax], al ; mov ah, 0x56 ; add eax, 0xe8a38000 ; jmp qword ptr [rax]
0x00000000007716fa : add byte ptr [rax], al ; mov ah, 0x5f ; add al, byte ptr [rax] ; rcr ch, 0xda ; call rsi
0x00000000007a18ba : add byte ptr [rax], al ; mov ah, 0x61 ; add eax, 0xc649c400 ; call qword ptr [rdx]
0x0000000000751ffa : add byte ptr [rax], al ; mov ah, 0x68 ; add byte ptr [rax], al ; scasb al, byte ptr [rdi] ; adc ecx, esi ; call rcx
0x00000000007a3eba : add byte ptr [rax], al ; mov ah, 0x87 ; add eax, 0xc63b6c00 ; call qword ptr [rdx]
0x00000000007a47ba : add byte ptr [rax], al ; mov ah, 0x90 ; add eax, 0xc6335800 ; call qword ptr [rdx]
0x00000000007a4afa : add byte ptr [rax], al ; mov ah, 0x93 ; add eax, 0xeabe7000 ; jmp rax
0x00000000007a51ba : add byte ptr [rax], al ; mov ah, 0x9a ; add eax, 0xeb454000 ; jmp qword ptr [rax]
0x00000000007a67ba : add byte ptr [rax], al ; mov ah, 0xb0 ; add eax, 0xeba1a000 ; jmp qword ptr [rsi]
0x00000000007578fa : add byte ptr [rax], al ; mov ah, 0xc1 ; add byte ptr [rax], al ; or dl, bl ; iretd ; jmp qword ptr [rbx]
0x0000000000756c4e : add byte ptr [rax], al ; mov ah, 0xc3 ; iretd ; call rsp
0x00000000007586fa : add byte ptr [rax], al ; mov ah, 0xcf ; add byte ptr [rax], al ; or dl, al ; call rsp
0x0000000000768ffa : add byte ptr [rax], al ; mov ah, 0xd8 ; add dword ptr [rax], eax ; xchg eax, esp ; jb 0x768fe4 ; jmp qword ptr [rbx]
0x0000000000769bba : add byte ptr [rax], al ; mov ah, 0xe4 ; add dword ptr [rax], eax ; xor al, 0xa3 ; leave ; call qword ptr [rdx]
0x00000000007cb90e : add byte ptr [rax], al ; mov ah, 0xf ; xor cl, ch ; adc al, byte ptr [rax] ; cld ; syscall
0x00000000007dac67 : add byte ptr [rax], al ; mov ah, 1 ; adc edi, ecx ; add dword ptr [rax], eax ; retf 0x501
0x000000000079b8ba : add byte ptr [rax], al ; mov ah, 1 ; add eax, 0xe75e3200 ; jmp qword ptr [rcx]
0x00000000007d73fc : add byte ptr [rax], al ; mov al, 3 ; adc esi, esp ; add eax, dword ptr [rcx] ; retf
0x00000000007d45e3 : add byte ptr [rax], al ; mov bh, 0xf ; add eax, 0xc1000fd2 ; syscall
0x0000000000770d6f : add byte ptr [rax], al ; mov bl, 0xda ; call qword ptr [rcx]
0x00000000007caca3 : add byte ptr [rax], al ; mov bl, 0xe ; push rsi ; clc ; add al, bl ; syscall
0x000000000073d2ab : add byte ptr [rax], al ; mov bl, 0xe0 ; call rax
0x00000000007c71cc : add byte ptr [rax], al ; mov bl, 1 ; add cl, bl ; add eax, dword ptr [rax] ; retf
0x00000000007579ae : add byte ptr [rax], al ; mov bl, bl ; iretd ; jmp rdi
0x000000000074b80e : add byte ptr [rax], al ; mov bl, bl ; retf
0x000000000075951e : add byte ptr [rax], al ; mov byte ptr [rbp - 0x30], dl ; jmp rsi
0x000000000056f2e9 : add byte ptr [rax], al ; mov byte ptr [rbx + 0x28], 1 ; pop rbx ; ret
0x000000000069254d : add byte ptr [rax], al ; mov byte ptr [rbx + 0x7b], 0 ; pop rbx ; ret
0x00000000006cdf1e : add byte ptr [rax], al ; mov byte ptr [rbx], 0 ; jmp 0x6cdeee
0x00000000007d0eb4 : add byte ptr [rax], al ; mov byte ptr [rcx], 5 ; retf
0x000000000050341e : add byte ptr [rax], al ; mov byte ptr [rdi + 0x10], sil ; ret
0x000000000050378e : add byte ptr [rax], al ; mov byte ptr [rdi + 0x11], sil ; ret
0x000000000052607e : add byte ptr [rax], al ; mov byte ptr [rdi + 0x18], sil ; ret
0x000000000060fc0e : add byte ptr [rax], al ; mov byte ptr [rdi + 0x1d0], sil ; ret
0x00000000006a81de : add byte ptr [rax], al ; mov byte ptr [rdi + 0x30], 0 ; ret
0x00000000005cc925 : add byte ptr [rax], al ; mov byte ptr [rdi + 0x440], 1 ; ret
0x00000000005b841e : add byte ptr [rax], al ; mov byte ptr [rdi + 0x441], sil ; ret
0x00000000005b842e : add byte ptr [rax], al ; mov byte ptr [rdi + 0x442], sil ; ret
0x0000000000501e4e : add byte ptr [rax], al ; mov byte ptr [rdi + 0xa8], sil ; ret
0x000000000050279e : add byte ptr [rax], al ; mov byte ptr [rdi + 0xa9], sil ; ret
0x00000000006bdace : add byte ptr [rax], al ; mov byte ptr [rdi + 3], 1 ; ret
0x000000000058446e : add byte ptr [rax], al ; mov byte ptr [rdi + 8], sil ; ret
0x00000000007e9db8 : add byte ptr [rax], al ; mov byte ptr [rdi], 0x63 ; lodsb al, byte ptr [rsi] ; or eax, dword ptr [rax] ; ret 0x508
0x000000000057b8fe : add byte ptr [rax], al ; mov byte ptr [rdi], sil ; ret
0x00000000006a8450 : add byte ptr [rax], al ; mov byte ptr [rip + 0x35a20d], 0 ; ret
0x00000000006a8348 : add byte ptr [rax], al ; mov byte ptr [rip + 0x35a315], 0 ; ret
0x000000000068ed30 : add byte ptr [rax], al ; mov byte ptr [rip + 0x373691], 0 ; ret
0x000000000068ec18 : add byte ptr [rax], al ; mov byte ptr [rip + 0x3737a9], 0 ; ret
0x000000000057e49e : add byte ptr [rax], al ; mov byte ptr [rip + 0x4802b9], dil ; ret
0x00000000007543ce : add byte ptr [rax], al ; mov byte ptr [rsi], cl ; iretd ; jmp qword ptr [rax]
0x00000000007cfa63 : add byte ptr [rax], al ; mov ch, 1 ; or al, 0xfd ; add dword ptr [rax], eax ; retf
0x000000000075a786 : add byte ptr [rax], al ; mov cl, 0xd0 ; call qword ptr [rbx]
0x000000000075a746 : add byte ptr [rax], al ; mov cl, 0xd0 ; call qword ptr [rdx]
0x00000000007e9cf4 : add byte ptr [rax], al ; mov cl, 4 ; retf -0x78ff
0x000000000075a16e : add byte ptr [rax], al ; mov dh, 0x90 ; sar bh, 1 ; ret
0x000000000073c983 : add byte ptr [rax], al ; mov dh, 0xdf ; call rax
0x00000000007cf4bb : add byte ptr [rax], al ; mov dh, 1 ; adc dl, dl ; add dword ptr [rax], eax ; retf
0x0000000000755226 : add byte ptr [rax], al ; mov dl, 0x6b ; iretd ; call qword ptr [rdi]
0x00000000007ae77f : add byte ptr [rax], al ; mov dl, 0xed ; jmp qword ptr [rdi]
0x00000000006d13c1 : add byte ptr [rax], al ; mov dword ptr [r10 + 0x24], edi ; ret
0x00000000006a55d3 : add byte ptr [rax], al ; mov dword ptr [rax + 0x10], edx ; fstp xword ptr [rax] ; ret
0x0000000000757e4a : add byte ptr [rax], al ; mov dword ptr [rax], 0xcfe2de00 ; jmp qword ptr [rax]
0x00000000006c70fb : add byte ptr [rax], al ; mov dword ptr [rbx], 0xffffffff ; pop rbx ; ret
0x000000000053c7d2 : add byte ptr [rax], al ; mov dword ptr [rdi + 0x10], 0 ; ret
0x00000000006c6923 : add byte ptr [rax], al ; mov dword ptr [rdi + 0x14], 0 ; ret
0x00000000006c6c4c : add byte ptr [rax], al ; mov dword ptr [rdi + 0x18], 0 ; ret
0x000000000054e659 : add byte ptr [rax], al ; mov dword ptr [rdi + 0x18], eax ; sub dword ptr [rdx + 0x18], 1 ; ret
0x00000000005fd1f8 : add byte ptr [rax], al ; mov dword ptr [rdi + 0x20], eax ; ret
0x00000000006aaad6 : add byte ptr [rax], al ; mov dword ptr [rdi + 0x48], 0xffffffff ; ret
0x00000000006c6c97 : add byte ptr [rax], al ; mov dword ptr [rdi + 0x5c], 0 ; ret
0x0000000000667a3e : add byte ptr [rax], al ; mov dword ptr [rdi + 0x64], esi ; ret
0x00000000006c6e3b : add byte ptr [rax], al ; mov dword ptr [rdi + 0x6c], 0 ; ret
0x00000000006cbb5e : add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; ret
0x0000000000595f4e : add byte ptr [rax], al ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + 4], edx ; ret
0x0000000000596bfe : add byte ptr [rax], al ; mov dword ptr [rdi], esi ; ret
0x00000000007c4fe7 : add byte ptr [rax], al ; mov dword ptr [rdx], 0x3bb74 ; retf 0x1403
0x0000000000662631 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000000006a8fbe : add byte ptr [rax], al ; mov dword ptr [rsi + 1], 0x45555254 ; ret
0x000000000051814e : add byte ptr [rax], al ; mov eax, 0x100 ; ret
0x0000000000506bce : add byte ptr [rax], al ; mov eax, 0x140 ; ret
0x0000000000506c3e : add byte ptr [rax], al ; mov eax, 0x180 ; ret
0x000000000054a19e : add byte ptr [rax], al ; mov eax, 0x1b00 ; ret
0x000000000051813e : add byte ptr [rax], al ; mov eax, 0x1c0 ; ret
0x00000000006b2266 : add byte ptr [rax], al ; mov eax, 0x200000 ; ret
0x00000000006bfd3e : add byte ptr [rax], al ; mov eax, 0x280 ; ret
0x00000000005b840e : add byte ptr [rax], al ; mov eax, 0x28c0 ; ret
0x00000000006a5e7e : add byte ptr [rax], al ; mov eax, 0x2c0 ; ret
0x00000000006cc4fe : add byte ptr [rax], al ; mov eax, 0x31 ; ret
0x000000000050d96e : add byte ptr [rax], al ; mov eax, 0x340 ; ret
0x000000000068e00e : add byte ptr [rax], al ; mov eax, 0x380 ; ret
0x000000000068190e : add byte ptr [rax], al ; mov eax, 0x40 ; ret
0x000000000068fe1e : add byte ptr [rax], al ; mov eax, 0x400 ; ret
0x00000000006b228e : add byte ptr [rax], al ; mov eax, 0x4000 ; ret
0x00000000005fcb3e : add byte ptr [rax], al ; mov eax, 0x5c0 ; ret
0x000000000053f09e : add byte ptr [rax], al ; mov eax, 0x7fffffff ; ret
0x00000000005039ee : add byte ptr [rax], al ; mov eax, 0x80 ; ret
0x00000000005047ce : add byte ptr [rax], al ; mov eax, 0x8280 ; ret
0x000000000062cb2e : add byte ptr [rax], al ; mov eax, 0x9700 ; ret
0x00000000006925de : add byte ptr [rax], al ; mov eax, 0xa02440 ; ret
0x000000000069261e : add byte ptr [rax], al ; mov eax, 0xa02448 ; ret
0x00000000006925fe : add byte ptr [rax], al ; mov eax, 0xa02450 ; ret
0x00000000006bea4e : add byte ptr [rax], al ; mov eax, 0xa0ccc0 ; ret
0x00000000006bea1e : add byte ptr [rax], al ; mov eax, 0xa0cce8 ; ret
0x000000000065e24e : add byte ptr [rax], al ; mov eax, 0xa9 ; ret
0x00000000007b6f6a : add byte ptr [rax], al ; mov eax, 0xb0b00006 ; out dx, eax ; jmp qword ptr [rdi]
0x0000000000506c4e : add byte ptr [rax], al ; mov eax, 0xc0 ; ret
0x0000000000562f2e : add byte ptr [rax], al ; mov eax, 0xcc0 ; ret
0x0000000000660976 : add byte ptr [rax], al ; mov eax, 0xfffffffd ; ret
0x000000000065e506 : add byte ptr [rax], al ; mov eax, 0xfffffffe ; ret
0x0000000000659c6e : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000517ece : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000068e136 : add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000005d440b : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; nop ; pop rbp ; ret
0x00000000006ce975 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; leave ; ret
0x0000000000517f1e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; ret
0x000000000053f07e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x18] ; ret
0x000000000054bf1e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x18] ; test eax, eax ; jne 0x54bf39 ; ret
0x000000000054c07e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x18] ; test eax, eax ; jne 0x54c099 ; ret
0x000000000054fa2e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x18] ; test eax, eax ; jne 0x54fa49 ; ret
0x000000000060b25e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x1cc] ; ret
0x0000000000506b8e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; ret
0x0000000000517dfe : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000005ff4ce : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x30] ; test eax, eax ; jle 0x5ff4e1 ; ret
0x000000000058449e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x38] ; ret
0x000000000058448e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x58] ; ret
0x000000000066784e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x64] ; ret
0x000000000067414e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x84] ; ret
0x00000000006be2ce : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0xc] ; ret
0x00000000005f97ee : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; ret
0x000000000065e0ee : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 8] ; ret
0x00000000006aad4e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; ret
0x0000000000507d7e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x507d8f ; ret
0x0000000000521ffe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x52200f ; ret
0x000000000052207e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x52208f ; ret
0x00000000005220fe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x52210f ; ret
0x0000000000542ace : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x542adf ; ret
0x000000000054dabe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x54dacf ; ret
0x000000000055600e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x55601f ; ret
0x0000000000566fee : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x566fff ; ret
0x00000000005718fe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x57190f ; ret
0x000000000058ed6e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x58ed7f ; ret
0x000000000058edee : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x58edff ; ret
0x000000000058ee6e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x58ee7f ; ret
0x00000000005a2b3e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x5a2b4f ; ret
0x00000000005a8abe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x5a8acf ; ret
0x0000000000626dfe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x626e0f ; ret
0x00000000006d63ae : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x6d63c9 ; ret
0x00000000006cdc5e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x33f6fa] ; ret
0x00000000006905ce : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x372652] ; ret
0x00000000005482be : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x4b5d9a] ; ret
0x00000000007a05ef : add byte ptr [rax], al ; mov eax, ebp ; jmp rsi
0x00000000006a677e : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006cb4bd : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x00000000006786f7 : add byte ptr [rax], al ; mov eax, edi ; cmovg eax, esi ; ret
0x00000000006c953e : add byte ptr [rax], al ; mov eax, edi ; or ah, 0x40 ; ret
0x000000000053882e : add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000006c954e : add byte ptr [rax], al ; mov eax, edi ; rol ax, 8 ; ret
0x00000000006cca01 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000006c59cc : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000006a17fe : add byte ptr [rax], al ; mov eax, esi ; add rax, rdi ; ret
0x00000000006c6fce : add byte ptr [rax], al ; mov eax, esi ; or eax, edi ; ret
0x0000000000503aae : add byte ptr [rax], al ; mov eax, esi ; ret
0x00000000006772fe : add byte ptr [rax], al ; mov eax, r8d ; sub eax, edi ; ret
0x0000000000757a92 : add byte ptr [rax], al ; mov ebx, es ; add byte ptr [rax], al ; cli ; fxch st(0), st(7) ; jmp qword ptr [rax]
0x000000000073f29b : add byte ptr [rax], al ; mov ebx, esp ; call qword ptr [rax]
0x00000000007b704a : add byte ptr [rax], al ; mov ecx, 0xb2200006 ; out dx, eax ; call qword ptr [rdi]
0x00000000007d6b5e : add byte ptr [rax], al ; mov ecx, dword ptr [rdi] ; add eax, 0xa1051289 ; syscall
0x00000000006609ce : add byte ptr [rax], al ; mov ecx, dword ptr [rdx + 0x54] ; add rax, rcx ; ret
0x000000000066539d : add byte ptr [rax], al ; mov ecx, esi ; jne 0x665356 ; pop rbx ; ret
0x00000000007aa092 : add byte ptr [rax], al ; mov ecx, gs ; add eax, 0xecc20800 ; call qword ptr [rcx]
0x00000000004f28e6 : add byte ptr [rax], al ; mov edi, 0 ; call 0x6bebe9
0x00000000004c237f : add byte ptr [rax], al ; mov edi, 0x18 ; call 0x6be5d9
0x00000000005a4846 : add byte ptr [rax], al ; mov edi, 0x70d6e8 ; call 0x680acd
0x0000000000634043 : add byte ptr [rax], al ; mov edi, 0x71dd68 ; call 0x680acd
0x000000000052c683 : add byte ptr [rax], al ; mov edi, 0xa03e00 ; call rax
0x000000000062571b : add byte ptr [rax], al ; mov edi, 0xa087e0 ; call 0x6819f9
0x00000000007b766a : add byte ptr [rax], al ; mov edi, 0xbba00006 ; out dx, eax ; jmp rsi
0x00000000007cb52b : add byte ptr [rax], al ; mov edi, 0xfeb050f ; add bl, bl ; syscall
0x00000000006d4008 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x00000000006d4034 : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000068d88e : add byte ptr [rax], al ; mov edi, dword ptr [rbp + 8] ; call 0x689ad7
0x00000000005055a8 : add byte ptr [rax], al ; mov edx, 0x6ef020 ; call rax
0x0000000000573c24 : add byte ptr [rax], al ; mov edx, 0xa048c0 ; call 0x6c06d9
0x00000000007b714a : add byte ptr [rax], al ; mov edx, 0xb2800006 ; out dx, eax ; jmp qword ptr [rcx]
0x0000000000519f0e : add byte ptr [rax], al ; mov edx, 1 ; xor eax, eax ; ret
0x0000000000674d52 : add byte ptr [rax], al ; mov edx, ebp ; call rax
0x0000000000675173 : add byte ptr [rax], al ; mov edx, r12d ; call rax
0x00000000005c6f6b : add byte ptr [rax], al ; mov esi, 0x7128d4 ; call 0x403a09
0x00000000004f800e : add byte ptr [rax], al ; mov esi, 1 ; call rax
0x000000000065e648 : add byte ptr [rax], al ; mov esi, 1 ; call rcx
0x00000000005548fa : add byte ptr [rax], al ; mov esi, 2 ; call rax
0x00000000007b99df : add byte ptr [rax], al ; mov esi, eax ; call rax
0x000000000066d0f1 : add byte ptr [rax], al ; mov esi, ebp ; call rax
0x0000000000518869 : add byte ptr [rax], al ; mov esi, ebx ; call rax
0x000000000051110a : add byte ptr [rax], al ; mov esi, ebx ; mov rdi, r12 ; call rax
0x000000000052ba2d : add byte ptr [rax], al ; mov esi, ebx ; mov rdi, r15 ; call rax
0x000000000052cc05 : add byte ptr [rax], al ; mov esi, r12d ; call rax
0x000000000054ec5d : add byte ptr [rax], al ; mov esi, r12d ; mov rdi, r15 ; call rax
0x00000000006336b7 : add byte ptr [rax], al ; mov esi, r15d ; mov rdi, r12 ; call rax
0x000000000065dba1 : add byte ptr [rax], al ; mov esi, r9d ; mov rdi, rax ; call rdx
0x0000000000775002 : add byte ptr [rax], al ; mov esp, 0x18000298 ; retf -0x25
0x00000000007abac2 : add byte ptr [rax], al ; mov esp, 0x2000603 ; cmp ch, ch ; jmp qword ptr [rdi]
0x0000000000758fc2 : add byte ptr [rax], al ; mov esp, 0x280000d8 ; cmp dl, al ; call qword ptr [rdi]
0x0000000000786ec2 : add byte ptr [rax], al ; mov esp, 0x280003b7 ; add ah, al ; jmp qword ptr [rdi]
0x000000000078f6c2 : add byte ptr [rax], al ; mov esp, 0x2800043f ; add edx, esp ; jmp qword ptr [rbx]
0x000000000079a9c2 : add byte ptr [rax], al ; mov esp, 0x2e0004f2 ; mov bl, 0xc6 ; call qword ptr [rdx]
0x0000000000775ec2 : add byte ptr [rax], al ; mov esp, 0x380002a7 ; sub esp, ebx ; jmp qword ptr [rax]
0x0000000000774cc2 : add byte ptr [rax], al ; mov esp, 0x48000295 ; mov bl, 0xdb ; jmp qword ptr [rax]
0x000000000078cec2 : add byte ptr [rax], al ; mov esp, 0x48000417 ; mov fs, ecx ; call qword ptr [rax]
0x0000000000797802 : add byte ptr [rax], al ; mov esp, 0x4c0004c0 ; jno 0x7977f9 ; jmp rax
0x000000000078b7c2 : add byte ptr [rax], al ; mov esp, 0x58000400 ; adc al, 0xe1 ; call qword ptr [rdx]
0x00000000007bb4c2 : add byte ptr [rax], al ; mov esp, 0x580006fd ; loopne 0x7bb4c4 ; call qword ptr [rdi]
0x0000000000767cc2 : add byte ptr [rax], al ; mov esp, 0x5c0001c5 ; adc al, 0xd7 ; jmp qword ptr [rbx]
0x000000000075a7c2 : add byte ptr [rax], al ; mov esp, 0x5e0000f0 ; mov cl, 0xd0 ; call qword ptr [rcx]
0x00000000007570c2 : add byte ptr [rax], al ; mov esp, 0x6e0000b9 ; retf -0x31
0x000000000075f002 : add byte ptr [rax], al ; mov esp, 0x7a000138 ; retf -0x2e
0x000000000079cbc2 : add byte ptr [rax], al ; mov esp, 0x80000514 ; ret
0x0000000000769c02 : add byte ptr [rax], al ; mov esp, 0x880001e4 ; loopne 0x769bec ; call rsi
0x000000000078b2c2 : add byte ptr [rax], al ; mov esp, 0x880003fb ; or al, 0xe1 ; jmp qword ptr [rbx]
0x000000000079b2c2 : add byte ptr [rax], al ; mov esp, 0xa80004fb ; adc al, 0xe7 ; jmp qword ptr [rcx]
0x000000000079eac2 : add byte ptr [rax], al ; mov esp, 0xb6000533 ; sub al, 0xe8 ; call rax
0x00000000007abec2 : add byte ptr [rax], al ; mov esp, 0xc4000607 ; in eax, dx ; jmp qword ptr [rsi]
0x000000000077cec2 : add byte ptr [rax], al ; mov esp, 0xc8000317 ; xchg ch, bl ; call qword ptr [rbx]
0x000000000079bbc2 : add byte ptr [rax], al ; mov esp, 0xd4000504 ; ja 0x79bbbb ; jmp rdx
0x0000000000773bc2 : add byte ptr [rax], al ; mov esp, 0xd8000284 ; jae 0x773baf ; jmp qword ptr [rdx]
0x0000000000785102 : add byte ptr [rax], al ; mov esp, 0xd8000399 ; fcmovnu st(0), st(7) ; jmp rcx
0x000000000074d702 : add byte ptr [rax], al ; mov esp, 0xe00001f ; jbe 0x74d6e0 ; call rdx
0x00000000007662c2 : add byte ptr [rax], al ; mov esp, 0xe80001ab ; retf
0x0000000000784802 : add byte ptr [rax], al ; mov esp, 0xe8000390 ; ret
0x0000000000766102 : add byte ptr [rax], al ; mov esp, 0xf40001a9 ; ret
0x00000000007aa5c2 : add byte ptr [rax], al ; mov esp, 0xf80005ee ; retf
0x00000000007a8b92 : add byte ptr [rax], al ; mov esp, ss ; add eax, 0xec492800 ; call qword ptr [rcx]
0x000000000074cfc6 : add byte ptr [rax], al ; mov fs, word ptr [rdi - 0x34] ; call rsp
0x000000000066ce2b : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; mov qword ptr [rax + 8], rcx ; ret
0x00000000004eee1b : add byte ptr [rax], al ; mov qword ptr [rbp - 0x10], rax ; leave ; ret
0x000000000044010e : add byte ptr [rax], al ; mov qword ptr [rbp - 8], rax ; leave ; ret
0x0000000000509b3c : add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rbx ; ret
0x000000000050fb9c : add byte ptr [rax], al ; mov qword ptr [rdi + 0x10], rax ; ret
0x000000000050f72e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x10], rsi ; ret
0x000000000062cb3e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x12d8], rsi ; ret
0x000000000050b5ce : add byte ptr [rax], al ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000055830e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rsi ; ret
0x00000000006a7e0e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x28], rsi ; ret
0x000000000054a1ce : add byte ptr [rax], al ; mov qword ptr [rdi + 0x358], rsi ; ret
0x00000000006d435e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000066c895 : add byte ptr [rax], al ; mov qword ptr [rdi + 0xc50], rdx ; ret
0x00000000005417b9 : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x000000000052608e : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000006b28ee : add byte ptr [rax], al ; mov qword ptr [rdi + rsi + 0x37], rdx ; ret
0x00000000006b28de : add byte ptr [rax], al ; mov qword ptr [rdi + rsi + 0x3f], rdx ; ret
0x000000000055036e : add byte ptr [rax], al ; mov qword ptr [rdi], 0 ; ret
0x000000000065e1ce : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; mov dword ptr [rdi + 8], edx ; ret
0x000000000052609e : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000066b7a2 : add byte ptr [rax], al ; mov qword ptr [rdx + 0x458], rax ; ret
0x0000000000777e52 : add byte ptr [rax], al ; mov qword ptr [rdx], -0x23842800 ; jmp qword ptr [rdx]
0x00000000006b2959 : add byte ptr [rax], al ; mov qword ptr [rdx], rdx ; ret
0x00000000006bea6e : add byte ptr [rax], al ; mov qword ptr [rip + 0x34e269], rdi ; ret
0x00000000006bea5e : add byte ptr [rax], al ; mov qword ptr [rip + 0x34e271], rdi ; ret
0x000000000066b7b1 : add byte ptr [rax], al ; mov qword ptr [rip + 0x396616], rax ; ret
0x000000000053da8e : add byte ptr [rax], al ; mov qword ptr [rip + 0x4c03f9], rdi ; ret
0x00000000004e76b9 : add byte ptr [rax], al ; mov r8, rbx ; call r11
0x00000000006609be : add byte ptr [rax], al ; mov rax, -0x10000 ; ret
0x000000000050462e : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000061d54a : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000052606e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x10] ; ret
0x0000000000668aae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x138] ; ret
0x000000000060c43e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x1b0] ; ret
0x000000000060c44e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x1b8] ; ret
0x0000000000512c4e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000065e20e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x28] ; ret
0x000000000053d7be : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000053d7ce : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x70] ; ret
0x00000000006d432e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x98] ; ret
0x00000000006d436e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x00000000006d43ce : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x00000000006d43be : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x00000000006d437e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000068900e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; mov eax, dword ptr [rax + 8] ; ret
0x000000000053d7ee : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000006b28fe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + rsi + 0x37] ; ret
0x00000000006b28ce : add byte ptr [rax], al ; mov rax, qword ptr [rdi + rsi + 0x3f] ; ret
0x000000000068f07e : add byte ptr [rax], al ; mov rax, qword ptr [rdi - 8] ; ret
0x0000000000525c5e : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; ret
0x00000000006ce01e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x334c99] ; ret
0x00000000006cde8e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x334e31] ; ret
0x00000000006cde9e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x334e39] ; ret
0x00000000006becfe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x343bd9] ; jmp rax
0x00000000006bec1e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x343c61] ; jmp rax
0x00000000006bec0e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x343c81] ; jmp rax
0x00000000006bebce : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x343cb9] ; jmp rax
0x00000000006bebbe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x343cd9] ; jmp rax
0x00000000006bea3e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x34e299] ; ret
0x00000000006bea2e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x34e2a1] ; ret
0x00000000006b2425 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3504b2] ; jmp rax
0x000000000069260e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x36fe31] ; ret
0x00000000006925ee : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x36fe59] ; ret
0x000000000066992e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3963c1] ; ret
0x000000000065901a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a98bd] ; jmp rax
0x0000000000625402 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3dd4dd] ; call rax
0x0000000000624170 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3de76f] ; call rax
0x00000000006225ba : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3e0325] ; call rax
0x0000000000620088 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3e2857] ; call rax
0x000000000061fee4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3e29fb] ; call rax
0x000000000061f43c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3e34a3] ; call rax
0x000000000061f1df : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3e3700] ; call rax
0x000000000061ed7e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3e3b61] ; call rax
0x000000000061e851 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3e408e] ; call rax
0x000000000061c82c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3e60b3] ; call rax
0x000000000061c3c8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3e6517] ; call rax
0x000000000061bbe4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3e6cfb] ; call rax
0x000000000061b00e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3e78d1] ; call rax
0x000000000061a612 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3e82cd] ; call rax
0x000000000061a424 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3e84bb] ; call rax
0x0000000000619e8d : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3e8a4a] ; call rax
0x0000000000619e6c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3e8a73] ; call rax
0x0000000000619bb3 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3e8d24] ; call rax
0x0000000000619b92 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3e8d4d] ; call rax
0x00000000006192d0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3e960f] ; call rax
0x000000000061910e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3e97d1] ; call rax
0x00000000006189c1 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3e9f16] ; call rax
0x000000000061890a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3e9fd5] ; call rax
0x0000000000618325 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3ea5b2] ; call rax
0x000000000061826e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3ea671] ; call rax
0x0000000000617d6a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3eab75] ; call rax
0x0000000000617880 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3eb05f] ; call rax
0x00000000006173f6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3eb4e9] ; call rax
0x0000000000616db2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3ebb2d] ; call rax
0x0000000000616928 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3ebfb7] ; call rax
0x000000000061599e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3ecf41] ; call rax
0x000000000061570d : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3ed1ca] ; call rax
0x00000000006156ec : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3ed1f3] ; call rax
0x0000000000615433 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3ed4a4] ; call rax
0x0000000000615412 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3ed4cd] ; call rax
0x0000000000614688 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3ee257] ; call rax
0x000000000061441c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3ee4c3] ; call rax
0x00000000006141e0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3ee6ff] ; call rax
0x0000000000613c42 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3eec9d] ; call rax
0x00000000005f75a6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40b331] ; call rax
0x00000000005f7583 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40b35c] ; call rax
0x00000000005f7274 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40b66b] ; call rax
0x00000000005f7174 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40b76b] ; call rax
0x00000000005f6c9d : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40bc42] ; call rax
0x00000000005f6bb8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40bd27] ; call rax
0x00000000005f6964 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40bf7b] ; call rax
0x00000000005f686c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40c073] ; call rax
0x00000000005f6561 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40c37e] ; call rax
0x00000000005f619a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40c745] ; call rax
0x00000000005f53fc : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40d4e3] ; call rax
0x00000000005f52fe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40d5e1] ; call rax
0x00000000005f4603 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40e2dc] ; call rax
0x00000000005f44c6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40e419] ; call rax
0x00000000005f410e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40e7d1] ; call rax
0x00000000005f400a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40e8d5] ; call rax
0x00000000005f3d7e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40eb61] ; call rax
0x00000000005f38cc : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40f013] ; call rax
0x00000000005f377c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40f163] ; call rax
0x00000000005f33ee : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40f4f1] ; call rax
0x00000000005f3016 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40f8c9] ; call rax
0x00000000005f2f32 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40f9ad] ; call rax
0x00000000005f244e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x410491] ; call rax
0x00000000005f2144 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41079b] ; call rax
0x00000000005f1e58 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x410a87] ; call rax
0x00000000005f1cf0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x410bef] ; call rax
0x00000000005f1bf4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x410ceb] ; call rax
0x00000000005f193c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x410fa3] ; call rax
0x00000000005f1773 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41116c] ; call rax
0x00000000005f152a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4113b5] ; call rax
0x00000000005f0ff6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4118e9] ; call rax
0x00000000005f0cec : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x411bf3] ; call rax
0x00000000005ef8dc : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x413003] ; call rax
0x00000000005ef648 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x413297] ; call rax
0x00000000005eefe0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4138ff] ; call rax
0x00000000005eed54 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x413b8b] ; call rax
0x00000000005ee51e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4143c1] ; call rax
0x00000000005edcba : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x414c25] ; call rax
0x00000000005ec44a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x416495] ; call rax
0x00000000005ebfe6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4168f9] ; call rax
0x00000000005eb86e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x417071] ; call rax
0x00000000005eb0c8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x417817] ; call rax
0x00000000005e9132 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4197ad] ; call rax
0x00000000005e8cce : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x419c11] ; call rax
0x00000000005e8556 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41a389] ; call rax
0x00000000005e7db0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41ab2f] ; call rax
0x00000000005e6a1a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41bec5] ; call rax
0x00000000005e6946 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41bf99] ; call rax
0x00000000005e65a8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41c337] ; call rax
0x00000000005e5ce7 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41cbf8] ; call rax
0x00000000005e59d8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41ceff] ; call rax
0x00000000005e59b2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41cf2d] ; call rax
0x00000000005e56e0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41d1ff] ; call rax
0x00000000005e54a2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41d43d] ; call rax
0x00000000005e51c6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41d719] ; call rax
0x00000000005e4d73 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41db6c] ; call rax
0x00000000005e4b2e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41dda9] ; call rax
0x00000000005e4b08 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41ddd7] ; call rax
0x00000000005e468d : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41e252] ; call rax
0x00000000005e43ec : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41e4f3] ; call rax
0x00000000005e4143 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41e79c] ; call rax
0x00000000005e3df9 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41eae6] ; call rax
0x00000000005e3b53 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41ed8c] ; call rax
0x00000000005e3319 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41f5be] ; call rax
0x00000000005e32f8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41f5e7] ; call rax
0x00000000005e3059 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41f87e] ; call rax
0x00000000005e3038 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41f8a7] ; call rax
0x00000000005e2e90 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41fa4f] ; call rax
0x00000000005e2db2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41fb2d] ; call rax
0x00000000005e2cd4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41fc0b] ; call rax
0x00000000005e2bf6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41fce9] ; call rax
0x00000000005e2713 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4201cc] ; call rax
0x00000000005e26ad : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x420232] ; call rax
0x00000000005e2581 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42035e] ; call rax
0x00000000005e2482 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42045d] ; call rax
0x00000000005e238b : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x420554] ; call rax
0x00000000005e20b8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x420827] ; call rax
0x00000000005e1de9 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x420af6] ; call rax
0x00000000005e1b9c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x420d3b] ; call rax
0x00000000005e1b76 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x420d69] ; call rax
0x00000000005e18b2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42102d] ; call rax
0x00000000005e16f0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4211ef] ; call rax
0x00000000005e0f79 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42195e] ; call rax
0x00000000005e0ec2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x421a1d] ; call rax
0x00000000005e08d9 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x421ffe] ; call rax
0x00000000005e0822 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4220bd] ; call rax
0x00000000005e0248 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x422697] ; call rax
0x00000000005dfdc8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x422b17] ; call rax
0x00000000005dfcd7 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x422c08] ; call rax
0x00000000005df27f : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x423658] ; call rax
0x00000000005df256 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x423689] ; call rax
0x00000000005df009 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4238ce] ; call rax
0x00000000005defe0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4238ff] ; call rax
0x00000000005de4f8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4243df] ; call rax
0x00000000005de4c8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x424417] ; call rax
0x00000000005de410 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4244c7] ; call rax
0x00000000005de3de : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x424501] ; call rax
0x00000000005de2b2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x424625] ; call rax
0x00000000005de280 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42465f] ; call rax
0x00000000005de1c8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42470f] ; call rax
0x00000000005de196 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x424749] ; call rax
0x00000000005ddef3 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4249ec] ; call rax
0x00000000005dda6e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x424e71] ; call rax
0x00000000005dd7e5 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4250fa] ; call rax
0x00000000005dd48b : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x425454] ; call rax
0x00000000005dceea : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4259f5] ; call rax
0x00000000005dca6b : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x425e74] ; call rax
0x00000000005dc012 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4268cd] ; call rax
0x00000000005dbcfe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x426be1] ; call rax
0x00000000005dbb85 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x426d5a] ; call rax
0x00000000005db22e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4276a9] ; call rax
0x00000000005db212 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4276cd] ; call rax
0x00000000005dafa4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42793b] ; call rax
0x00000000005dace4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x427bfb] ; call rax
0x00000000005da2b6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x428629] ; call rax
0x00000000005da0aa : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42882d] ; call rax
0x00000000005da08e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x428851] ; call rax
0x00000000005d9e7c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x428a5b] ; call rax
0x00000000005d9e60 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x428a7f] ; call rax
0x00000000005d9c4e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x428c89] ; call rax
0x00000000005d9c32 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x428cad] ; call rax
0x00000000005d9a18 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x428ebf] ; call rax
0x00000000005d99fc : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x428ee3] ; call rax
0x00000000005d9422 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4294bd] ; call rax
0x00000000005d934e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x429591] ; call rax
0x00000000005d8fdc : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x429903] ; call rax
0x00000000005d87b4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42a12b] ; call rax
0x00000000005d84da : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42a3fd] ; call rax
0x00000000005d84b4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42a42b] ; call rax
0x00000000005d81e2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42a6fd] ; call rax
0x00000000005d7fb0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42a92f] ; call rax
0x00000000005d7ce2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42abfd] ; call rax
0x00000000005d7910 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42afcf] ; call rax
0x00000000005d76d8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42b1ff] ; call rax
0x00000000005d76b2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42b22d] ; call rax
0x00000000005d7243 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42b69c] ; call rax
0x00000000005d6fad : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42b932] ; call rax
0x00000000005d6d1a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42bbc5] ; call rax
0x00000000005d6a0b : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42bed4] ; call rax
0x00000000005d6795 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42c14a] ; call rax
0x00000000005d5fae : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42c931] ; call rax
0x00000000005d5cfa : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42cbe5] ; call rax
0x00000000005d5b52 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42cd8d] ; call rax
0x00000000005d5a74 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42ce6b] ; call rax
0x00000000005d5996 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42cf49] ; call rax
0x00000000005d58b8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42d027] ; call rax
0x00000000005d52f9 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42d5e6] ; call rax
0x00000000005d5293 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42d64c] ; call rax
0x00000000005d5167 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42d778] ; call rax
0x00000000005d5068 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42d877] ; call rax
0x00000000005d4f71 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42d96e] ; call rax
0x00000000005d4c9e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42dc41] ; call rax
0x00000000005d49e6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42def9] ; call rax
0x00000000005d4824 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42e0bb] ; call rax
0x00000000005d40d3 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42e804] ; call rax
0x00000000005d401c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42e8c3] ; call rax
0x00000000005d3a33 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42eea4] ; call rax
0x00000000005d397c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42ef63] ; call rax
0x00000000005d33a2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42f53d] ; call rax
0x00000000005d2f2d : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42f9b2] ; call rax
0x00000000005d2e47 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x42fa98] ; call rax
0x00000000005d2414 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4304cb] ; call rax
0x00000000005d21a8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x430737] ; call rax
0x00000000005d16de : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x431201] ; call rax
0x00000000005d15f4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4312eb] ; call rax
0x00000000005d1496 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x431449] ; call rax
0x00000000005d13ac : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x431533] ; call rax
0x00000000005d1114 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4317cb] ; call rax
0x00000000005d0c9a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x431c45] ; call rax
0x00000000005d0a3a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x431ea5] ; call rax
0x00000000005d070d : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4321d2] ; call rax
0x00000000005d01ae : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x432731] ; call rax
0x00000000005cfd85 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x432b5a] ; call rax
0x00000000005cf3a6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x433539] ; call rax
0x00000000005cf0a0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x43383f] ; call rax
0x00000000005cef31 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4339ae] ; call rax
0x00000000005ce640 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x434297] ; call rax
0x00000000005ce624 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4342bb] ; call rax
0x00000000005ce3c2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x43451d] ; call rax
0x00000000005ce10e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4347d1] ; call rax
0x00000000005cd760 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x43517f] ; call rax
0x00000000005cd554 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x435383] ; call rax
0x00000000005cd538 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4353a7] ; call rax
0x00000000005cd326 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4355b1] ; call rax
0x00000000005cd30a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4355d5] ; call rax
0x00000000005cd0f8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4357df] ; call rax
0x00000000005cd0dc : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x435803] ; call rax
0x00000000005ccec2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x435a15] ; call rax
0x00000000005ccea6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x435a39] ; call rax
0x00000000005b078a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x45214d] ; jmp rax
0x00000000005481ba : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4ba71d] ; jmp rax
0x0000000000547c13 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4bacc4] ; jmp rax
0x000000000050d94b : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x4f4f8c] ; jmp rax
0x00000000004f30cb : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x50f814] ; call rax
0x00000000004f2fa2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x50f93d] ; call rax
0x00000000004f2e99 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x50fa46] ; call rax
0x00000000004f2745 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x51019a] ; call rax
0x00000000004f259c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x510343] ; call rax
0x00000000004f22e9 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5105f6] ; call rax
0x00000000004f18c0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x51101f] ; call rax
0x00000000004f1538 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5113a7] ; call rax
0x00000000004f138a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x511555] ; call rax
0x00000000004f12b6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x511629] ; call rax
0x00000000004f0b58 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x511d87] ; call rax
0x00000000004f0a5c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x511e83] ; call rax
0x00000000004f07f8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5120e7] ; call rax
0x00000000004f0721 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5121be] ; call rax
0x00000000004f04da : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x512405] ; call rax
0x00000000004f0366 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x512579] ; call rax
0x00000000004efe08 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x512ad7] ; call rax
0x00000000004ef604 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5132db] ; call rax
0x00000000004ef42f : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5134b0] ; call rax
0x00000000004ec7e8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5160f7] ; call rax
0x00000000004ec6da : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x516205] ; call rax
0x00000000004ec5ac : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x516333] ; call rax
0x00000000004ec47c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x516463] ; call rax
0x00000000004ec29e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x516641] ; call rax
0x00000000004ec102 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5167dd] ; call rax
0x00000000004ec00c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5168d3] ; call rax
0x00000000004ebe76 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x516a69] ; call rax
0x00000000004ebc60 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x516c7f] ; call rax
0x00000000004ebb30 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x516daf] ; call rax
0x00000000004eba1c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x516ec3] ; call rax
0x00000000004e9646 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x519299] ; call rax
0x00000000004e9180 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x51975f] ; call rax
0x00000000004e8cba : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x519c25] ; call rax
0x00000000004e8448 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x51a497] ; call rax
0x00000000004e7e72 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x51aa6d] ; call rax
0x00000000004e7bb9 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x51ad26] ; call rax
0x00000000004e73d8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x51b507] ; call rax
0x00000000004e72fe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x51b5e1] ; call rax
0x00000000004e69c6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x51bf19] ; call rax
0x00000000004e6286 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x51c659] ; call rax
0x00000000004e46c3 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x51e21c] ; call rax
0x00000000004e3834 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x51f0ab] ; call rax
0x00000000004e344c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x51f493] ; call rax
0x00000000004e2e4e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x51fa91] ; call rax
0x00000000004e2c86 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x51fc59] ; call rax
0x00000000004e2985 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x51ff5a] ; call rax
0x00000000004e1542 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x52139d] ; call rax
0x00000000004e0fc5 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x52191a] ; call rax
0x00000000004ddfa6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x524939] ; call rax
0x00000000004dd934 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x524fab] ; call rax
0x00000000004dd331 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5255ae] ; call rax
0x00000000004dcd67 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x525b78] ; call rax
0x00000000004dbdab : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x526b34] ; call rax
0x00000000004dae92 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x527a4d] ; call rax
0x00000000004dab46 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x527d99] ; call rax
0x00000000004d975a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x529185] ; call rax
0x00000000004d955e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x529381] ; call rax
0x00000000004d9356 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x529589] ; call rax
0x00000000004d8ffa : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5298e5] ; call rax
0x00000000004d8e5e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x529a81] ; call rax
0x00000000004d8d60 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x529b7f] ; call rax
0x00000000004d8c62 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x529c7d] ; call rax
0x00000000004d8b64 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x529d7b] ; call rax
0x00000000004d8a66 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x529e79] ; call rax
0x00000000004d7c16 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x52acc9] ; call rax
0x00000000004d7abc : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x52ae23] ; call rax
0x00000000004d6df0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x52baef] ; call rax
0x00000000004d6cd0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x52bc0f] ; call rax
0x00000000004d6bd0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x52bd0f] ; call rax
0x00000000004d65a9 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x52c336] ; call rax
0x00000000004d6419 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x52c4c6] ; call rax
0x00000000004d5f6a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x52c975] ; call rax
0x00000000004d56ee : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x52d1f1] ; call rax
0x00000000004d54ca : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x52d415] ; call rax
0x00000000004d3e19 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x52eac6] ; call rax
0x00000000004d3cec : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x52ebf3] ; call rax
0x00000000004d3bc4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x52ed1b] ; call rax
0x00000000004d3a97 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x52ee48] ; call rax
0x00000000004d3965 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x52ef7a] ; call rax
0x00000000004d3125 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x52f7ba] ; call rax
0x00000000004d2412 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5304cd] ; call rax
0x00000000004d20dd : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x530802] ; call rax
0x00000000004d1d07 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x530bd8] ; call rax
0x00000000004d11a5 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53173a] ; call rax
0x00000000004d0e2f : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x531ab0] ; call rax
0x00000000004d0a1b : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x531ec4] ; call rax
0x00000000004cd9b3 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x534f2c] ; call rax
0x00000000004cd408 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5354d7] ; call rax
0x00000000004cd174 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53576b] ; call rax
0x00000000004ccfae : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x535931] ; call rax
0x00000000004cce47 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x535a98] ; call rax
0x00000000004cc71a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5361c5] ; call rax
0x00000000004cc244 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53669b] ; call rax
0x00000000004cc124 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5367bb] ; call rax
0x00000000004cbc0f : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x536cd0] ; call rax
0x00000000004cb738 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5371a7] ; call rax
0x00000000004ca793 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53814c] ; call rax
0x00000000004ca05c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x538883] ; call rax
0x00000000004c99aa : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x538f35] ; call rax
0x00000000004c98d6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x539009] ; call rax
0x00000000004c96f1 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5391ee] ; call rax
0x00000000004c9625 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5392ba] ; call rax
0x00000000004c937e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x539561] ; call rax
0x00000000004c91aa : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x539735] ; call rax
0x00000000004c90ae : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x539831] ; call rax
0x00000000004c8f92 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53994d] ; call rax
0x00000000004c8eba : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x539a25] ; call rax
0x00000000004c8620 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53a2bf] ; call rax
0x00000000004c83d1 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53a50e] ; call rax
0x00000000004c782c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53b0ab] ; call rax
0x00000000004c7810 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53b0cf] ; call rax
0x00000000004c6a92 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53be45] ; call rax
0x00000000004c6a76 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53be69] ; call rax
0x00000000004c5fe1 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53c8f6] ; call rax
0x00000000004c5f7a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53c965] ; call rax
0x00000000004c5954 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53cf8b] ; call rax
0x00000000004c585a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53d085] ; call rax
0x00000000004c5673 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53d26c] ; call rax
0x00000000004c54dc : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53d403] ; call rax
0x00000000004c52c1 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53d61e] ; call rax
0x00000000004c50da : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53d805] ; call rax
0x00000000004c4ee7 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53d9f8] ; call rax
0x00000000004c4d32 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53dbad] ; call rax
0x00000000004c4b4a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53dd95] ; call rax
0x00000000004c49a4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53df3b] ; call rax
0x00000000004c44a6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53e439] ; call rax
0x00000000004c4164 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53e77b] ; call rax
0x00000000004c3afb : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53ede4] ; call rax
0x00000000004c3682 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53f255] ; call rax
0x00000000004c3666 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53f279] ; call rax
0x00000000004c3424 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53f4b3] ; call rax
0x00000000004c33e4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53f4fb] ; call rax
0x00000000004c332b : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53f5ac] ; call rax
0x00000000004c330e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53f5d1] ; call rax
0x00000000004c2aca : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53fe15] ; call rax
0x00000000004c2789 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x540156] ; call rax
0x00000000004c2466 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x540471] ; call rax
0x00000000004c244a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x540495] ; call rax
0x00000000004c2258 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x54067f] ; call rax
0x00000000004c223c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5406a3] ; call rax
0x00000000004c198a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x540f4d] ; call rax
0x00000000004c196e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x540f71] ; call rax
0x00000000004c186e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x541071] ; call rax
0x00000000004c17b5 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x541122] ; call rax
0x00000000004c1798 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x541147] ; call rax
0x00000000004c15ee : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5412f1] ; call rax
0x00000000004c1077 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x541868] ; call rax
0x00000000004c0ad5 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x541e0a] ; call rax
0x00000000004c044c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x54248b] ; call rax
0x00000000004c0430 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5424af] ; call rax
0x00000000004c0330 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5425af] ; call rax
0x00000000004c0277 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x542660] ; call rax
0x00000000004c025a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x542685] ; call rax
0x00000000004c00b0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x54282f] ; call rax
0x00000000004bfa6a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x542e75] ; call rax
0x00000000004bf59f : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x543340] ; call rax
0x00000000004bf0f8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5437e7] ; call rax
0x00000000004bee8e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x543a51] ; call rax
0x00000000004bedd6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x543b01] ; call rax
0x00000000004bedba : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x543b25] ; call rax
0x00000000004becba : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x543c25] ; call rax
0x00000000004bec01 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x543cd6] ; call rax
0x00000000004bebe4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x543cfb] ; call rax
0x00000000004bea3a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x543ea5] ; call rax
0x00000000004be3f5 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5444ea] ; call rax
0x00000000004bdec7 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x544a18] ; call rax
0x00000000004bda20 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x544ebf] ; call rax
0x00000000004bd7e8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5450f7] ; call rax
0x00000000004b9174 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x54976b] ; call rax
0x00000000004b8d10 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x549bcf] ; call rax
0x00000000004b8548 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x54a397] ; call rax
0x00000000004b79a2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x54af3d] ; call rax
0x00000000004b6f0e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x54b9d1] ; call rax
0x00000000004b6aaa : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x54be35] ; call rax
0x00000000004b62e2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x54c5fd] ; call rax
0x00000000004b573c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x54d1a3] ; call rax
0x00000000004b32f0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x54f5ef] ; call rax
0x00000000004b26a6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x550239] ; call rax
0x00000000004b2540 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x55039f] ; call rax
0x00000000004b2321 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5505be] ; call rax
0x00000000004b1ca4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x550c3b] ; call rax
0x00000000004b1b80 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x550d5f] ; call rax
0x00000000004b1aa6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x550e39] ; call rax
0x00000000004b12ae : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x551631] ; call rax
0x00000000004b0432 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5524ad] ; call rax
0x00000000004b01d4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x55270b] ; call rax
0x00000000004b0092 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x55284d] ; call rax
0x00000000004af6b1 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x55322e] ; call rax
0x00000000004af017 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5538c8] ; call rax
0x00000000004ae8f8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x553fe7] ; call rax
0x00000000004ae706 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5541d9] ; call rax
0x00000000004ae5e6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5542f9] ; call rax
0x00000000004ada53 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x554e8c] ; call rax
0x00000000004ad73e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5551a1] ; call rax
0x00000000004ad3ec : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5554f3] ; call rax
0x00000000004a8a01 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x559ede] ; call rax
0x00000000004a33ac : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x55f533] ; call rax
0x00000000004a2f48 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x55f997] ; call rax
0x00000000004a2780 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x56015f] ; call rax
0x00000000004a1bda : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x560d05] ; call rax
0x00000000004a1104 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5617db] ; call rax
0x00000000004a09ff : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x561ed8] ; call rax
0x00000000004a09de : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x561f01] ; call rax
0x00000000004a06f3 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5621e4] ; call rax
0x00000000004a06d2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x56220d] ; call rax
0x000000000049fdc6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x562b19] ; call rax
0x000000000049fc04 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x562cdb] ; call rax
0x000000000049f6e5 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5631f2] ; call rax
0x000000000049f62e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5632b1] ; call rax
0x000000000049f1a8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x563737] ; call rax
0x000000000049d212 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5656c5] ; call rax
0x000000000049d1f6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5656e9] ; call rax
0x000000000049cf09 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5659ce] ; call rax
0x000000000049cee8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5659f7] ; call rax
0x000000000049cbfd : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x565cda] ; call rax
0x000000000049cbdc : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x565d03] ; call rax
0x000000000049c19e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x566741] ; call rax
0x000000000049bfc6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x566919] ; call rax
0x000000000049bbd8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x566d07] ; call rax
0x000000000049a84c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x568093] ; call rax
0x000000000049a12c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5687b3] ; call rax
0x0000000000499390 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x56954f] ; call rax
0x0000000000499244 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x56969b] ; call rax
0x0000000000498eb6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x569a29] ; call rax
0x0000000000498c3f : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x569ca0] ; call rax
0x0000000000496858 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x56c087] ; call rax
0x000000000049642d : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x56c4b2] ; call rax
0x0000000000493462 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x56f47d] ; call rax
0x0000000000492c14 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x56fccb] ; call rax
0x0000000000492aca : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x56fe15] ; call rax
0x000000000049297e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x56ff61] ; call rax
0x000000000049280e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5700d1] ; call rax
0x0000000000492364 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x57057b] ; call rax
0x0000000000492011 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5708ce] ; call rax
0x0000000000491b44 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x570d9b] ; call rax
0x0000000000491766 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x571179] ; call rax
0x000000000049155c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x571383] ; call rax
0x0000000000491279 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x571666] ; call rax
0x0000000000490f56 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x571989] ; call rax
0x0000000000490cf8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x571be7] ; call rax
0x000000000049093a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x571fa5] ; call rax
0x0000000000490551 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x57238e] ; call rax
0x000000000048fdf8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x572ae7] ; call rax
0x000000000048fc8e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x572c51] ; call rax
0x000000000048ee36 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x573aa9] ; call rax
0x000000000048dade : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x574e01] ; call rax
0x000000000048d96e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x574f71] ; call rax
0x000000000048d69b : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x575244] ; call rax
0x000000000048cd84 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x575b5b] ; call rax
0x000000000048cba6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x575d39] ; call rax
0x000000000048caa6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x575e39] ; call rax
0x000000000048c9a4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x575f3b] ; call rax
0x000000000048c1ca : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x576715] ; call rax
0x000000000048c0a8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x576837] ; call rax
0x000000000048bf2a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5769b5] ; call rax
0x000000000048bdaa : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x576b35] ; call rax
0x000000000048bcc8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x576c17] ; call rax
0x000000000048baa6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x576e39] ; call rax
0x000000000048b882 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x57705d] ; call rax
0x000000000048b6fa : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5771e5] ; call rax
0x000000000048b618 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5772c7] ; call rax
0x000000000048b538 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5773a7] ; call rax
0x00000000004884d1 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x57a40e] ; call rax
0x00000000004881fb : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x57a6e4] ; call rax
0x0000000000487b86 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x57ad59] ; call rax
0x0000000000487434 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x57b4ab] ; call rax
0x000000000048707d : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x57b862] ; call rax
0x0000000000486078 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x57c867] ; call rax
0x0000000000485b9e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x57cd41] ; call rax
0x00000000004850aa : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x57d835] ; call rax
0x0000000000484b4d : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x57dd92] ; call rax
0x000000000048497f : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x57df60] ; call rax
0x0000000000484667 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x57e278] ; call rax
0x0000000000484499 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x57e446] ; call rax
0x00000000004841e4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x57e6fb] ; call rax
0x0000000000483534 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x57f3ab] ; call rax
0x0000000000482fcc : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x57f913] ; call rax
0x0000000000482960 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x57ff7f] ; call rax
0x0000000000482816 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5800c9] ; call rax
0x00000000004825e1 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5802fe] ; call rax
0x0000000000482202 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5806dd] ; call rax
0x0000000000481799 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x581146] ; call rax
0x0000000000481520 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5813bf] ; call rax
0x0000000000480f3b : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5819a4] ; call rax
0x000000000047fe9a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x582a45] ; call rax
0x000000000047f4ac : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x583433] ; call rax
0x000000000047eae4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x583dfb] ; call rax
0x000000000047e334 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5845ab] ; call rax
0x000000000047dc02 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x584cd5] ; call rax
0x000000000047dbda : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x584d05] ; call rax
0x000000000047d89c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x58503b] ; call rax
0x000000000047d874 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x58506b] ; call rax
0x000000000047d1c8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x58570f] ; call rax
0x000000000047d106 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5857d9] ; call rax
0x000000000047cc40 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x585c9f] ; call rax
0x000000000047b2ab : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x58762c] ; call rax
0x000000000047b288 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x587657] ; call rax
0x000000000047af5e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x587979] ; call rax
0x000000000047af36 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5879a9] ; call rax
0x000000000047abf8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x587cdf] ; call rax
0x000000000047abd0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x587d0f] ; call rax
0x000000000047a0a2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x58883d] ; call rax
0x0000000000479e98 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x588a47] ; call rax
0x0000000000479a5c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x588e83] ; call rax
0x000000000047888c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x58a053] ; call rax
0x0000000000474042 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x58e89d] ; call rax
0x0000000000473460 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x58f47f] ; call rax
0x0000000000472ce2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x58fbfd] ; call rax
0x000000000047287e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x590061] ; call rax
0x00000000004720b6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x590829] ; call rax
0x0000000000471510 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5913cf] ; call rax
0x0000000000470b34 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x591dab] ; call rax
0x0000000000470469 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x59246e] ; call rax
0x0000000000470448 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x592497] ; call rax
0x000000000047015d : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x59277a] ; call rax
0x000000000047013c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5927a3] ; call rax
0x000000000046f9b4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x592f2b] ; call rax
0x000000000046f7f2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5930ed] ; call rax
0x000000000046f2d3 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x593604] ; call rax
0x000000000046f21c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5936c3] ; call rax
0x000000000046ed96 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x593b49] ; call rax
0x000000000046ce90 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x595a47] ; call rax
0x000000000046ce74 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x595a6b] ; call rax
0x000000000046cb87 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x595d50] ; call rax
0x000000000046cb66 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x595d79] ; call rax
0x000000000046c87b : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x59605c] ; call rax
0x000000000046c85a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x596085] ; call rax
0x000000000046be22 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x596abd] ; call rax
0x000000000046bc4a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x596c95] ; call rax
0x000000000046b85c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x597083] ; call rax
0x000000000046a4d0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x59840f] ; call rax
0x0000000000468a28 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x599eb7] ; call rax
0x0000000000467ed2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x59aa0d] ; call rax
0x00000000004677bf : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x59b120] ; call rax
0x0000000000467578 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x59b367] ; call rax
0x0000000000466e34 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x59baab] ; call rax
0x0000000000466748 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x59c197] ; call rax
0x000000000046643c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x59c4a3] ; call rax
0x0000000000465cb4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x59cc2b] ; call rax
0x0000000000465af2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x59cded] ; call rax
0x00000000004655d3 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x59d304] ; call rax
0x000000000046551c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x59d3c3] ; call rax
0x0000000000465096 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x59d849] ; call rax
0x0000000000463190 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x59f747] ; call rax
0x0000000000463174 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x59f76b] ; call rax
0x0000000000462e66 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x59fa79] ; call rax
0x0000000000462b5a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x59fd85] ; call rax
0x0000000000462122 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a07bd] ; call rax
0x0000000000461f4a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a0995] ; call rax
0x0000000000461b5c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a0d83] ; call rax
0x00000000004607d0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a210f] ; call rax
0x000000000045f9c2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a2f1d] ; call rax
0x000000000045f810 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a30cf] ; call rax
0x000000000045f413 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a34cc] ; call rax
0x000000000045ef0c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a39d3] ; call rax
0x000000000045ec00 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a3cdf] ; call rax
0x000000000045eaca : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a3e15] ; call rax
0x000000000045e9ee : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a3ef1] ; call rax
0x000000000045e68b : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a4254] ; call rax
0x000000000045e42a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a44b5] ; call rax
0x000000000045e184 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a475b] ; call rax
0x000000000045de51 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a4a8e] ; call rax
0x000000000045d79a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a5145] ; call rax
0x000000000045d5d8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a5307] ; call rax
0x000000000045d0b9 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a581e] ; call rax
0x000000000045d002 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a58dd] ; call rax
0x000000000045cb7c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a5d63] ; call rax
0x000000000045c7a9 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a6136] ; call rax
0x000000000045c08c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a6853] ; call rax
0x000000000045b9ef : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a6ef0] ; call rax
0x000000000045b8da : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a7005] ; call rax
0x000000000045a819 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a80c6] ; call rax
0x000000000045a392 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a8545] ; call rax
0x000000000045a376 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a8569] ; call rax
0x000000000045a068 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a8877] ; call rax
0x0000000000459d5c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a8b83] ; call rax
0x0000000000459328 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a95b7] ; call rax
0x0000000000459150 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a978f] ; call rax
0x0000000000458d62 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5a9b7d] ; call rax
0x00000000004579d6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5aaf09] ; call rax
0x0000000000456b66 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5abd79] ; call rax
0x00000000004550a2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ad83d] ; call rax
0x00000000004547f8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ae0e7] ; call rax
0x0000000000454394 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ae54b] ; call rax
0x0000000000453bcc : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5aed13] ; call rax
0x0000000000453026 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5af8b9] ; call rax
0x000000000045182a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b10b5] ; call rax
0x000000000045100c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b18d3] ; call rax
0x0000000000450826 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b20b9] ; call rax
0x000000000044fc80 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b2c5f] ; call rax
0x000000000044f106 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b37d9] ; call rax
0x000000000044ef40 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b399f] ; call rax
0x000000000044eb15 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b3dca] ; call rax
0x000000000044e615 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b42c2] ; call rax
0x000000000044e5f4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b42eb] ; call rax
0x000000000044e309 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b45ce] ; call rax
0x000000000044e2e8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b45f7] ; call rax
0x000000000044e1e0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b46f7] ; call rax
0x000000000044e1b2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b472d] ; call rax
0x000000000044e0d6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b4809] ; call rax
0x000000000044dff8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b48e7] ; call rax
0x000000000044dc94 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b4c4b] ; call rax
0x000000000044dc0d : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b4cd2] ; call rax
0x000000000044db08 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b4dd7] ; call rax
0x000000000044d85a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b5085] ; call rax
0x000000000044d5c8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b530f] ; call rax
0x000000000044d5a2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b533d] ; call rax
0x000000000044d26f : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b5670] ; call rax
0x000000000044cb84 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b5d5b] ; call rax
0x000000000044c9c2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b5f1d] ; call rax
0x000000000044c4a3 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b6434] ; call rax
0x000000000044c3ec : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b64f3] ; call rax
0x000000000044bf66 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b6979] ; call rax
0x000000000044bb7e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b6d61] ; call rax
0x000000000044b432 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b74ad] ; call rax
0x000000000044ad6a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b7b75] ; call rax
0x000000000044ac44 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b7c9b] ; call rax
0x0000000000449b82 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b8d5d] ; call rax
0x00000000004496de : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b91f9] ; call rax
0x00000000004496c2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b921d] ; call rax
0x00000000004493d5 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b9502] ; call rax
0x00000000004493b4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b952b] ; call rax
0x00000000004490c9 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b980e] ; call rax
0x00000000004490a8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5b9837] ; call rax
0x0000000000448674 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ba26b] ; call rax
0x000000000044849c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ba443] ; call rax
0x00000000004480ae : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ba831] ; call rax
0x0000000000446d22 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5bbbbd] ; call rax
0x000000000044666a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5bc275] ; call rax
0x0000000000446452 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5bc48d] ; call rax
0x0000000000445f28 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5bc9b7] ; call rax
0x0000000000444cd6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5bdc09] ; call rax
0x0000000000444c02 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5bdcdd] ; call rax
0x0000000000443e94 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5bea4b] ; call rax
0x0000000000443532 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5bf3ad] ; call rax
0x000000000044258e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c0351] ; call rax
0x00000000004423cc : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c0513] ; call rax
0x0000000000441f89 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c094e] ; call rax
0x0000000000441ed2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c0a0d] ; call rax
0x0000000000441a4c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c0e93] ; call rax
0x0000000000441702 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c11dd] ; call rax
0x000000000043f72c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c31ab] ; call rax
0x000000000043f710 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c31cf] ; call rax
0x000000000043e79e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c4139] ; call rax
0x000000000043e782 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c415d] ; call rax
0x000000000043e412 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c44cd] ; call rax
0x000000000043db9e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c4d41] ; call rax
0x000000000043d6a2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c523d] ; call rax
0x000000000043d4ca : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c5415] ; call rax
0x000000000043d0dc : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c5803] ; call rax
0x000000000043ccec : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c5bf3] ; call rax
0x000000000043b640 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c729f] ; call rax
0x000000000043a845 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c809a] ; call rax
0x000000000043a268 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c8677] ; call rax
0x0000000000439fe3 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c88fc] ; call rax
0x0000000000439a24 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c8ebb] ; call rax
0x0000000000439826 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c90b9] ; call rax
0x0000000000439582 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c935d] ; call rax
0x000000000043926c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c9673] ; call rax
0x000000000043916e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c9771] ; call rax
0x000000000043906a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c9875] ; call rax
0x0000000000438efe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c99e1] ; call rax
0x0000000000438d98 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c9b47] ; call rax
0x00000000004381fe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ca6e1] ; call rax
0x0000000000437f7f : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ca960] ; call rax
0x0000000000437cfd : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cabe2] ; call rax
0x000000000043765a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cb285] ; call rax
0x00000000004373a3 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cb53c] ; call rax
0x0000000000437264 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cb67b] ; call rax
0x00000000004370f6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cb7e9] ; call rax
0x0000000000436f90 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cb94f] ; call rax
0x000000000043663b : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cc2a4] ; call rax
0x000000000043639a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cc545] ; call rax
0x000000000043625a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cc685] ; call rax
0x0000000000436160 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cc77f] ; call rax
0x0000000000436064 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cc87b] ; call rax
0x0000000000435984 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ccf5b] ; call rax
0x0000000000435799 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cd146] ; call rax
0x00000000004355ed : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cd2f2] ; call rax
0x00000000004354b2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cd42d] ; call rax
0x0000000000435344 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cd59b] ; call rax
0x00000000004351de : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cd701] ; call rax
0x0000000000434622 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ce2bd] ; call rax
0x00000000004342ea : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ce5f5] ; call rax
0x00000000004335aa : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cf335] ; call rax
0x0000000000433146 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cf799] ; call rax
0x000000000043298e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cff51] ; call rax
0x000000000043220a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d06d5] ; call rax
0x0000000000430b70 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d1d6f] ; call rax
0x00000000004303c4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d251b] ; call rax
0x000000000042f87c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d3063] ; call rax
0x000000000042f5a6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d3339] ; call rax
0x000000000042efd3 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d3904] ; call rax
0x000000000042efb2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d392d] ; call rax
0x000000000042ee0a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d3ad5] ; call rax
0x000000000042ed2c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d3bb3] ; call rax
0x000000000042eada : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d3e05] ; call rax
0x000000000042e7f0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d40ef] ; call rax
0x000000000042e712 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d41cd] ; call rax
0x000000000042e4c0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d441f] ; call rax
0x000000000042de5c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d4a83] ; call rax
0x000000000042dc9a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d4c45] ; call rax
0x000000000042d6f5 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d51e2] ; call rax
0x000000000042d63e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d52a1] ; call rax
0x000000000042d0c5 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d5812] ; call rax
0x000000000042d00e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d58d1] ; call rax
0x000000000042ca6c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d5e73] ; call rax
0x000000000042c20e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d66d1] ; call rax
0x000000000042bdba : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d6b25] ; call rax
0x000000000042b794 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d714b] ; call rax
0x000000000042b505 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d73d2] ; call rax
0x000000000042b4e4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d73fb] ; call rax
0x000000000042acd8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d7c07] ; call rax
0x000000000042a188 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d8757] ; call rax
0x0000000000429f8a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d8955] ; call rax
0x0000000000429cc6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d8c19] ; call rax
0x000000000042997c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d8f63] ; call rax
0x0000000000429834 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d90ab] ; call rax
0x0000000000428fb9 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d9926] ; call rax
0x0000000000428ca3 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d9c3c] ; call rax
0x0000000000428b62 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5d9d7d] ; call rax
0x000000000042882c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5da0b3] ; call rax
0x000000000042869c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5da243] ; call rax
0x0000000000428536 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5da3a9] ; call rax
0x0000000000427689 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5db256] ; call rax
0x0000000000427338 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5db5a7] ; call rax
0x000000000042723a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5db6a5] ; call rax
0x0000000000427136 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5db7a9] ; call rax
0x0000000000426fd2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5db90d] ; call rax
0x0000000000426e88 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5dba57] ; call rax
0x0000000000426d22 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5dbbbd] ; call rax
0x000000000042671d : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5dc1c2] ; call rax
0x00000000004264aa : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5dc435] ; call rax
0x0000000000425d27 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5dcbb8] ; call rax
0x00000000004259b3 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5dcf2c] ; call rax
0x0000000000425888 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5dd057] ; call rax
0x000000000042578e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5dd151] ; call rax
0x0000000000425692 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5dd24d] ; call rax
0x0000000000425596 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5dd349] ; call rax
0x0000000000425008 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5dd8d7] ; call rax
0x0000000000424e9b : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5dda44] ; call rax
0x0000000000424d30 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ddbaf] ; call rax
0x0000000000424ab2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5dde2d] ; call rax
0x0000000000423f8a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5de955] ; call rax
0x0000000000423b26 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5dedb9] ; call rax
0x000000000042336e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5df571] ; call rax
0x0000000000422bea : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5dfcf5] ; call rax
0x0000000000422102 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e07dd] ; call rax
0x0000000000421932 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e0fad] ; call rax
0x0000000000420dea : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e1af5] ; call rax
0x0000000000420b10 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e1dcf] ; call rax
0x0000000000420535 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e23a2] ; call rax
0x0000000000420514 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e23cb] ; call rax
0x000000000042036c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e2573] ; call rax
0x000000000042028e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e2651] ; call rax
0x00000000004201b0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e272f] ; call rax
0x000000000041fea6 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e2a39] ; call rax
0x000000000041fdad : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e2b32] ; call rax
0x000000000041fcb7 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e2c28] ; call rax
0x000000000041fabe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e2e21] ; call rax
0x000000000041f9e0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e2eff] ; call rax
0x000000000041f902 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e2fdd] ; call rax
0x000000000041f5f8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e32e7] ; call rax
0x000000000041f4ff : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e33e0] ; call rax
0x000000000041f409 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e34d6] ; call rax
0x000000000041ee96 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e3a49] ; call rax
0x000000000041ecd4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e3c0b] ; call rax
0x000000000041e727 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e41b0] ; call rax
0x000000000041e670 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e426f] ; call rax
0x000000000041e0f7 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e47e0] ; call rax
0x000000000041e040 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e489f] ; call rax
0x000000000041da9e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e4e41] ; call rax
0x000000000041d230 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e56af] ; call rax
0x000000000041cdd0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e5b0f] ; call rax
0x000000000041c7a2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e613d] ; call rax
0x000000000041c513 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e63c4] ; call rax
0x000000000041c4f2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e63ed] ; call rax
0x000000000041bcd0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e6c0f] ; call rax
0x000000000041af92 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e794d] ; call rax
0x000000000041ad94 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e7b4b] ; call rax
0x000000000041aaf0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e7def] ; call rax
0x000000000041a7da : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e8105] ; call rax
0x000000000041a6dc : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e8203] ; call rax
0x000000000041a5d8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e8307] ; call rax
0x000000000041a46c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e8473] ; call rax
0x000000000041a306 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e85d9] ; call rax
0x000000000041976c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e9173] ; call rax
0x00000000004194ed : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e93f2] ; call rax
0x000000000041926b : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e9674] ; call rax
0x0000000000418bc8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e9d17] ; call rax
0x0000000000418911 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e9fce] ; call rax
0x00000000004187d2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ea10d] ; call rax
0x0000000000418664 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ea27b] ; call rax
0x00000000004184fe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ea3e1] ; call rax
0x0000000000417ba9 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ead36] ; call rax
0x0000000000417908 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5eafd7] ; call rax
0x00000000004177c8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5eb117] ; call rax
0x00000000004176ce : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5eb211] ; call rax
0x00000000004175d2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5eb30d] ; call rax
0x0000000000417003 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5eb8dc] ; call rax
0x0000000000416d07 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ebbd8] ; call rax
0x0000000000416b5b : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ebd84] ; call rax
0x0000000000416a20 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ebebf] ; call rax
0x00000000004168b2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ec02d] ; call rax
0x000000000041674c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ec193] ; call rax
0x0000000000415b90 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ecd4f] ; call rax
0x0000000000415858 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ed087] ; call rax
0x0000000000414b18 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5eddc7] ; call rax
0x00000000004146b4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ee22b] ; call rax
0x0000000000413efc : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ee9e3] ; call rax
0x0000000000413778 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ef167] ; call rax
0x000000000041208a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f0855] ; call rax
0x00000000004118de : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f1001] ; call rax
0x0000000000410d96 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f1b49] ; call rax
0x0000000000410ac0 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f1e1f] ; call rax
0x00000000004104ed : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f23ea] ; call rax
0x00000000004104cc : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f2413] ; call rax
0x0000000000410324 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f25bb] ; call rax
0x0000000000410246 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f2699] ; call rax
0x000000000040fff4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f28eb] ; call rax
0x000000000040fd0a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f2bd5] ; call rax
0x000000000040fc2c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f2cb3] ; call rax
0x000000000040f9da : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f2f05] ; call rax
0x000000000040f376 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f3569] ; call rax
0x000000000040f1b4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f372b] ; call rax
0x000000000040ec0f : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f3cc8] ; call rax
0x000000000040eb58 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f3d87] ; call rax
0x000000000040e5df : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f42f8] ; call rax
0x000000000040e528 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f43b7] ; call rax
0x000000000040df86 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f4959] ; call rax
0x000000000040d728 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f51b7] ; call rax
0x000000000040d2d4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f560b] ; call rax
0x000000000040ccae : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f5c31] ; call rax
0x000000000040ca1f : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f5eb8] ; call rax
0x000000000040c9fe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f5ee1] ; call rax
0x000000000040c1f2 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f66ed] ; call rax
0x000000000040b529 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f73b6] ; call rax
0x000000000040b318 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f75c7] ; call rax
0x000000000040b251 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f768e] ; call rax
0x000000000040b028 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f78b7] ; call rax
0x000000000040ab0c : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f7dd3] ; call rax
0x0000000000408b38 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5f9da7] ; call rax
0x000000000050aa9e : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000052596e : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0x30] ; ret
0x00000000006ab903 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x00000000006aac6e : add byte ptr [rax], al ; mov rax, rdi ; mov rdx, rsi ; ret
0x00000000006642b1 : add byte ptr [rax], al ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000065c89e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000006cbc55 : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000068ecb9 : add byte ptr [rax], al ; mov rax, rdx ; ret
0x000000000054db5e : add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000051aa39 : add byte ptr [rax], al ; mov rbp, rdi ; mov rdi, rax ; call rdx
0x00000000006bf47d : add byte ptr [rax], al ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000004e4ac4 : add byte ptr [rax], al ; mov rcx, r8 ; mov r8, r12 ; call r11
0x00000000004ecbe4 : add byte ptr [rax], al ; mov rcx, rdx ; mov rdx, r9 ; call rax
0x000000000065cf3e : add byte ptr [rax], al ; mov rdi, qword ptr [r12 + 8] ; call rax
0x00000000005c9991 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x128] ; call rax
0x00000000005baac6 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x13b0] ; call rax
0x000000000063bb12 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x1a8] ; call rax
0x00000000006554b0 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x278] ; call rax
0x00000000005c880b : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x338] ; call rax
0x000000000052c91b : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x390] ; call rax
0x0000000000553522 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x3c8] ; call rax
0x00000000005537fd : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x458] ; call rax
0x0000000000511358 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x0000000000533847 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x88] ; call rax
0x000000000064a559 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0xa0] ; call rax
0x00000000006498b9 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0xa8] ; call rax
0x0000000000653131 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x00000000005349a0 : add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 0x18] ; call rax
0x00000000005351a5 : add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 0x38] ; call rax
0x00000000004a143b : add byte ptr [rax], al ; mov rdi, r11 ; mov rsi, r9 ; call rax
0x0000000000516b56 : add byte ptr [rax], al ; mov rdi, r12 ; call 0x512d77
0x00000000004fbf35 : add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x000000000063d6ff : add byte ptr [rax], al ; mov rdi, r12 ; call rcx
0x000000000055464c : add byte ptr [rax], al ; mov rdi, r12 ; call rdx
0x00000000006c71a0 : add byte ptr [rax], al ; mov rdi, r13 ; call 0x403c77
0x000000000051020a : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00000000005101e6 : add byte ptr [rax], al ; mov rdi, r13 ; call rdx
0x0000000000511b33 : add byte ptr [rax], al ; mov rdi, r14 ; call rax
0x00000000006516e5 : add byte ptr [rax], al ; mov rdi, r14 ; call rdx
0x000000000052b758 : add byte ptr [rax], al ; mov rdi, r15 ; call rax
0x0000000000551571 : add byte ptr [rax], al ; mov rdi, r15 ; call rdx
0x000000000056ea3a : add byte ptr [rax], al ; mov rdi, r15 ; lea rsi, qword ptr [rbp - 0x40] ; call rax
0x00000000005125e1 : add byte ptr [rax], al ; mov rdi, r9 ; mov qword ptr [rbp - 0x58], r9 ; call rax
0x0000000000416bd0 : add byte ptr [rax], al ; mov rdi, rax ; call 0x412e9f
0x000000000047c746 : add byte ptr [rax], al ; mov rdi, rax ; call 0x4791e7
0x0000000000459d75 : add byte ptr [rax], al ; mov rdi, rax ; call 0x4b67d3
0x000000000048fcc5 : add byte ptr [rax], al ; mov rdi, rax ; call 0x4bbf11
0x0000000000454f7d : add byte ptr [rax], al ; mov rdi, rax ; call 0x6819f7
0x0000000000414fc3 : add byte ptr [rax], al ; mov rdi, rax ; call 0x681a37
0x0000000000528498 : add byte ptr [rax], al ; mov rdi, rax ; call 0x6d4747
0x000000000052b789 : add byte ptr [rax], al ; mov rdi, rax ; call rdx
0x0000000000511aa5 : add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x00000000006a3081 : add byte ptr [rax], al ; mov rdi, rbp ; xor eax, eax ; call 0x67fb5b
0x000000000041e963 : add byte ptr [rax], al ; mov rdi, rbx ; call 0x41b397
0x00000000004fb6ae : add byte ptr [rax], al ; mov rdi, rbx ; call 0x4f8197
0x000000000063baf2 : add byte ptr [rax], al ; mov rdi, rbx ; call 0x5a8587
0x000000000052846d : add byte ptr [rax], al ; mov rdi, rbx ; call 0x6d4747
0x0000000000404404 : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000006109ca : add byte ptr [rax], al ; mov rdi, rbx ; call rcx
0x000000000040ab7a : add byte ptr [rax], al ; mov rdi, rbx ; call rdx
0x000000000040b091 : add byte ptr [rax], al ; mov rdi, rcx ; call rax
0x000000000040aaf9 : add byte ptr [rax], al ; mov rdi, rcx ; call rdx
0x000000000040b104 : add byte ptr [rax], al ; mov rdi, rdx ; call rax
0x0000000000667813 : add byte ptr [rax], al ; mov rdi, rsp ; call 0x403b07
0x0000000000575e84 : add byte ptr [rax], al ; mov rdi, rsp ; call 0x572107
0x00000000006c0745 : add byte ptr [rax], al ; mov rdx, r15 ; mov rdi, r12 ; call rax
0x00000000005139f7 : add byte ptr [rax], al ; mov rdx, rsi ; mov rsi, r12 ; call rax
0x000000000045fcf2 : add byte ptr [rax], al ; mov rdx, rsi ; mov rsi, r8 ; call rax
0x000000000062b04e : add byte ptr [rax], al ; mov rdx, rsi ; xor eax, eax ; ret
0x000000000050556b : add byte ptr [rax], al ; mov rdx, rsp ; call rax
0x00000000005489a2 : add byte ptr [rax], al ; mov rdx, rsp ; mov rdi, rbx ; call rax
0x000000000053069f : add byte ptr [rax], al ; mov rsi, qword ptr [rsp] ; mov rdi, rbx ; call rax
0x00000000005b949f : add byte ptr [rax], al ; mov rsi, r12 ; call rax
0x00000000005530e6 : add byte ptr [rax], al ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000006d493e : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000511210 : add byte ptr [rax], al ; mov rsi, r15 ; mov rdi, rbx ; call rax
0x0000000000510152 : add byte ptr [rax], al ; mov rsi, rbx ; mov rdi, rsp ; call rax
0x000000000075a0ee : add byte ptr [rax], al ; mov ss, eax ; call rbx
0x00000000007aff92 : add byte ptr [rax], al ; mov word ptr [rax + 6], cs ; add byte ptr [rax - 6], bl ; in eax, dx ; jmp qword ptr [rax]
0x00000000007653d2 : add byte ptr [rax], al ; mov word ptr [rcx + rax - 0x2a9d5e00], ds ; call qword ptr [rsi]
0x000000000079e092 : add byte ptr [rax], al ; mov word ptr [rcx], gs ; add eax, 0xe7f4d000 ; call qword ptr [rsi]
0x0000000000665ee0 : add byte ptr [rax], al ; mov word ptr [rdi + 0x1720], ax ; ret
0x000000000078b992 : add byte ptr [rax], al ; mov word ptr [rdx], es ; add al, 0 ; clc ; and ecx, esp ; jmp rdi
0x00000000007c3eb1 : add byte ptr [rax], al ; mov word ptr [rip + 0x5bb2f], es ; retf 0x505
0x00000000007ad392 : add byte ptr [rax], al ; mov word ptr [rsi + rax], ds ; add byte ptr [rax], ch ; jns 0x7ad391 ; jmp qword ptr [rcx]
0x00000000006a4a6b : add byte ptr [rax], al ; movapd xmm0, xmm1 ; ret
0x000000000078f7aa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0 ; nop ; add ah, dl ; jmp qword ptr [rdx]
0x000000000078ffaa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0 ; rol byte ptr [rbp - 0x1e], 1 ; jmp qword ptr [rbx]
0x000000000074b9ea : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rsi], al ; stc ; retf
0x00000000007cf212 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, dword ptr [rsi] ; retf
0x00000000007a05ea : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add rax, -0x17770000 ; jmp rsi
0x000000000076d9aa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; and al, byte ptr [rdx] ; add byte ptr [rax + 0x67], bl ; leave ; call qword ptr [rdx]
0x00000000007650ea : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cdq ; add dword ptr [rax], eax ; retf -0x2ab0
0x00000000007aafaa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; clc ; add eax, 0xece29000 ; jmp qword ptr [rax]
0x000000000075529e : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; insb byte ptr [rdi], dx ; iretd ; call rsp
0x00000000007b34aa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jge 0x7b34be ; add al, ah ; sbb bh, ch ; jmp qword ptr [rcx]
0x00000000007628aa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jno 0x7628b9 ; add byte ptr [rbp + rcx*4 - 0x2c], bl ; jmp qword ptr [rbx]
0x00000000007527aa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jo 0x7527b8 ; add byte ptr [rdx + rcx*2 - 0x32], ch ; jmp qword ptr [rbx]
0x00000000007627aa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jo 0x7627b9 ; add byte ptr [rdx], bl ; jl 0x762790 ; call qword ptr [rdx]
0x00000000007980aa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; leave ; add al, 0 ; rcl bh, 0xe5 ; jmp qword ptr [rbx]
0x00000000007b67aa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; mov al, 6 ; add byte ptr [rax], ah ; mov ch, bh ; call qword ptr [rbx]
0x0000000000757eaa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; mov dword ptr [rax], 0xcfe2c000 ; call qword ptr [rcx]
0x00000000007572ea : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; mov ebx, 0xcea80000 ; iretd ; call rcx
0x00000000007a79aa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 5
0x00000000007582aa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000006ea08e : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0x49
0x00000000007981aa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 4
0x0000000000798aaa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; rol dword ptr [rax + rax], cl ; nop ; add al, 0xe6 ; jmp qword ptr [rax]
0x00000000007ad4aa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb eax, 0x8ae00006 ; in eax, dx ; jmp qword ptr [rax]
0x000000000074e3aa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sub al, 0 ; add byte ptr [rax - 0x34], cl ; call rsp
0x000000000076aeaa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; test dword ptr [rcx], 0xd99a3000 ; call qword ptr [rbx]
0x00000000007ae8aa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; xor dword ptr [rsi], eax ; add al, dh ; mov dl, 0xed ; jmp qword ptr [rcx]
0x00000000007a5c4a : add byte ptr [rax], al ; movsd dword ptr [rdi], dword ptr [rsi] ; add eax, 0xeb6bd000 ; jmp qword ptr [rcx]
0x00000000006d1efc : add byte ptr [rax], al ; movsxd rsi, dword ptr [r15 + r8*4] ; add rsi, r15 ; jmp rsi
0x000000000073ce93 : add byte ptr [rax], al ; movsxd rsp, eax ; jmp qword ptr [rax]
0x00000000006cd997 : add byte ptr [rax], al ; movzx eax, al ; neg eax ; pop rbx ; pop rbp ; ret
0x00000000004f74de : add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 0x10] ; ret
0x00000000004f74ee : add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 0x11] ; ret
0x00000000005047ee : add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 0x18] ; ret
0x000000000060b45e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 0x1c8] ; ret
0x000000000060bc0e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 0x1d0] ; ret
0x000000000060b46e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 0x200] ; ret
0x0000000000609dce : add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 0x201] ; ret
0x0000000000562f3e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 0x90] ; ret
0x00000000004f74ae : add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 0xa8] ; ret
0x00000000004f74ce : add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 0xa9] ; ret
0x000000000058447e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 8] ; ret
0x000000000068f54e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0x1b] ; ret
0x000000000053d7de : add byte ptr [rax], al ; movzx eax, byte ptr [rdi] ; ret
0x000000000073ecd3 : add byte ptr [rax], al ; mul dl ; call rax
0x00000000004400b2 : add byte ptr [rax], al ; nop ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004418cd : add byte ptr [rax], al ; nop ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000621844 : add byte ptr [rax], al ; nop ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000004791d5 : add byte ptr [rax], al ; nop ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000006be46c : add byte ptr [rax], al ; nop ; lea eax, dword ptr [rdi + 4] ; ret
0x00000000006a7d8d : add byte ptr [rax], al ; nop ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000006a89ed : add byte ptr [rax], al ; nop ; lea rax, qword ptr [rsi + rdi] ; ret
0x000000000040cc86 : add byte ptr [rax], al ; nop ; leave ; ret
0x00000000006a08ac : add byte ptr [rax], al ; nop ; mov byte ptr [rsi], dil ; ret
0x00000000006c6d5d : add byte ptr [rax], al ; nop ; mov dword ptr [rdi], 0xffffffff ; ret
0x0000000000536d2d : add byte ptr [rax], al ; nop ; mov eax, 0x40 ; ret
0x00000000004f749c : add byte ptr [rax], al ; nop ; mov eax, 0x580 ; ret
0x000000000065e23d : add byte ptr [rax], al ; nop ; mov eax, 0x720738 ; ret
0x00000000006cc47d : add byte ptr [rax], al ; nop ; mov eax, 0xffffffff ; ret
0x00000000006ce62c : add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi + 0x14] ; ret
0x000000000067455d : add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi + 8] ; ret
0x00000000006c705c : add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi] ; ret
0x000000000066768c : add byte ptr [rax], al ; nop ; mov eax, edi ; ret
0x000000000057e61c : add byte ptr [rax], al ; nop ; mov eax, edi ; xor eax, 1 ; ret
0x00000000006a7d9d : add byte ptr [rax], al ; nop ; mov qword ptr [rdi + 0x10], rsi ; ret
0x00000000006aad6c : add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000006ac13d : add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000006a7d4d : add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi + 0x28] ; ret
0x000000000067fbe9 : add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi + 0x40] ; ret
0x00000000006aad7d : add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000006674ed : add byte ptr [rax], al ; nop ; mov rax, rdi ; ret
0x000000000066babd : add byte ptr [rax], al ; nop ; mov rax, rdi ; xor edx, edx ; ret
0x00000000006a7d5d : add byte ptr [rax], al ; nop ; movzx eax, byte ptr [rdi + 0x30] ; ret
0x00000000006747cd : add byte ptr [rax], al ; nop ; movzx eax, byte ptr [rdi + 8] ; ret
0x0000000000617b4a : add byte ptr [rax], al ; nop ; nop ; leave ; ret
0x000000000043b618 : add byte ptr [rax], al ; nop ; nop ; pop rbp ; ret
0x0000000000412616 : add byte ptr [rax], al ; nop ; pop rbp ; ret
0x00000000006a870c : add byte ptr [rax], al ; nop ; pop rbx ; ret
0x00000000004024de : add byte ptr [rax], al ; nop ; ret
0x0000000000706646 : add byte ptr [rax], al ; nop ; retf
0x000000000072f516 : add byte ptr [rax], al ; nop ; retf 0x6b
0x00000000006d8f1e : add byte ptr [rax], al ; nop ; retf 0x9f
0x00000000006be9dd : add byte ptr [rax], al ; nop ; xor eax, eax ; ret
0x000000000068ea19 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov dword ptr [rdi], esi ; ret
0x0000000000667669 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, edi ; ret
0x00000000006675e9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x00000000006676d9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000006aad5b : add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, dword ptr [rdi + 0x14] ; ret
0x000000000066909a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, dword ptr [rdi + 0x20] ; ret
0x00000000006c706b : add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x00000000006739ab : add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, edi ; ret
0x00000000006be8aa : add byte ptr [rax], al ; nop dword ptr [rax] ; mov qword ptr [rdi], rsi ; ret
0x000000000066767b : add byte ptr [rax], al ; nop dword ptr [rax] ; mov rax, rdi ; ret
0x000000000066769b : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x00000000006699db : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000674818 : add byte ptr [rax], al ; nop word ptr [rax + rax] ; pop rbx ; ret
0x000000000079e112 : add byte ptr [rax], al ; or al, 0x2a ; add eax, 0xe7f50a00 ; call qword ptr [rdi]
0x000000000076e912 : add byte ptr [rax], al ; or al, 0x32 ; add al, byte ptr [rax] ; call 0x1876c36d
0x000000000079f212 : add byte ptr [rax], al ; or al, 0x3b ; add eax, 0xe850de00 ; call qword ptr [rcx]
0x000000000075fe12 : add byte ptr [rax], al ; or al, 0x47 ; add dword ptr [rax], eax ; cmp byte ptr [rcx - 0x2d], dh ; jmp qword ptr [rcx]
0x0000000000782512 : add byte ptr [rax], al ; or al, 0x6e ; add eax, dword ptr [rax] ; clc ; fcomp st(6) ; call qword ptr [rbx]
0x00000000007a2852 : add byte ptr [rax], al ; or al, 0x71 ; add eax, 0xe9044800 ; call rsi
0x0000000000765352 : add byte ptr [rax], al ; or al, 0x9c ; add dword ptr [rax], eax ; retf -0x2aa0
0x00000000007a6b12 : add byte ptr [rax], al ; or al, 0xb4 ; add eax, 0xebbac800 ; jmp qword ptr [rsi]
0x0000000000757152 : add byte ptr [rax], al ; or al, 0xba ; add byte ptr [rax], al ; retf
0x0000000000777612 : add byte ptr [rax], al ; or al, 0xbf ; add al, byte ptr [rax] ; clc ; jbe 0x777600 ; jmp qword ptr [rax]
0x0000000000767812 : add byte ptr [rax], al ; or al, 0xc1 ; add dword ptr [rax], eax ; cli ; call rsi
0x0000000000757c12 : add byte ptr [rax], al ; or al, 0xc5 ; add byte ptr [rax], al ; adc al, 0xe0 ; iretd ; call qword ptr [rcx]
0x0000000000757d12 : add byte ptr [rax], al ; or al, 0xc6 ; add byte ptr [rax], al ; loopne 0x757cf3 ; call qword ptr [rdi]
0x0000000000788712 : add byte ptr [rax], al ; or al, 0xd0 ; add eax, dword ptr [rax] ; sbb byte ptr [rax - 0x20], dh ; jmp qword ptr [rax]
0x000000000073f853 : add byte ptr [rax], al ; or al, 0xe4 ; call rax
0x000000000079ae12 : add byte ptr [rax], al ; or al, 0xf7 ; add al, 0 ; clc ; add esp, edi ; call qword ptr [rbx]
0x00000000007ab052 : add byte ptr [rax], al ; or al, 0xf9 ; add eax, 0xece44800 ; jmp rbx
0x000000000078bb12 : add byte ptr [rax], al ; or al, 4 ; add al, 0 ; sub spl, cl ; call qword ptr [rcx]
0x000000000078339f : add byte ptr [rax], al ; or bh, bl ; jmp qword ptr [rsi]
0x0000000000665f53 : add byte ptr [rax], al ; or bl, dh ; ret
0x000000000066bbdb : add byte ptr [rax], al ; or byte ptr [rcx + 0x72], 0 ; ret
0x00000000007586fe : add byte ptr [rax], al ; or dl, al ; call rsp
0x00000000007578fe : add byte ptr [rax], al ; or dl, bl ; iretd ; jmp qword ptr [rbx]
0x00000000007c64ab : add byte ptr [rax], al ; or dword ptr [rax], 5 ; call qword ptr [rbx]
0x0000000000706642 : add byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; retf
0x00000000006d7542 : add byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x4136
0x0000000000717b42 : add byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rax], al ; retf
0x00000000006d79c2 : add byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0x413e
0x00000000006dcac2 : add byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0x44fb
0x00000000007e1227 : add byte ptr [rax], al ; out dx, al ; add al, 0x16 ; ret 4
0x000000000071433e : add byte ptr [rax], al ; out dx, al ; ret 0x5d
0x00000000007edc80 : add byte ptr [rax], al ; out dx, al ; syscall
0x00000000007cd7eb : add byte ptr [rax], al ; out dx, eax ; syscall
0x0000000000755486 : add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; jae 0x75545f ; call qword ptr [rcx]
0x00000000007ea52b : add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; ret 0x102
0x00000000007570c6 : add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; retf -0x31
0x00000000007a2692 : add byte ptr [rax], al ; outsd dx, dword ptr [rsi] ; add eax, 0xe8feb800 ; call rsi
0x0000000000665ea6 : add byte ptr [rax], al ; pop r13 ; pop r14 ; ret
0x0000000000665d73 : add byte ptr [rax], al ; pop r14 ; ret
0x0000000000402436 : add byte ptr [rax], al ; pop rax ; ret
0x00000000006cbcf6 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000408a7e : add byte ptr [rax], al ; pop rbp ; ret
0x000000000079124a : add byte ptr [rax], al ; pop rbx ; add al, 0 ; ret 0xffe2
0x0000000000747d03 : add byte ptr [rax], al ; pop rbx ; cmc ; call qword ptr [rax]
0x000000000040a262 : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004108ca : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000005498c3 : add byte ptr [rax], al ; pop rbx ; pop rbp ; jmp rax
0x000000000053bc19 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004f8e87 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000445373 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000050c9a0 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000007a16aa : add byte ptr [rax], al ; pop rdi ; add eax, 0xc6471600 ; call rdi
0x00000000007517a6 : add byte ptr [rax], al ; pop rdx ; dec ebp ; jmp qword ptr [rbx]
0x0000000000755406 : add byte ptr [rax], al ; pop rdx ; jae 0x7553df ; call qword ptr [rdx]
0x0000000000755446 : add byte ptr [rax], al ; pop rdx ; jae 0x75541f ; call qword ptr [rbx]
0x00000000006e23fe : add byte ptr [rax], al ; pop rdx ; retf 0x45
0x000000000074a9eb : add byte ptr [rax], al ; pop rdx ; stc ; jmp rax
0x000000000075a7c6 : add byte ptr [rax], al ; pop rsi ; mov cl, 0xd0 ; call qword ptr [rcx]
0x00000000007ac862 : add byte ptr [rax], al ; pop rsp ; adc dword ptr [rsi], eax ; add byte ptr [rax + 0x4b], dl ; in eax, dx ; call qword ptr [rax]
0x000000000075138a : add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], al ; push rsi ; fmulp st(5) ; call rcx
0x0000000000758bce : add byte ptr [rax], al ; pop rsp ; and al, dl ; jmp qword ptr [rax]
0x000000000079d8a2 : add byte ptr [rax], al ; pop rsp ; and dword ptr [rip - 0x181ce600], eax ; call rsp
0x000000000078b162 : add byte ptr [rax], al ; pop rsp ; cli ; add eax, dword ptr [rax] ; or al, 0xe1 ; call qword ptr [rbx]
0x0000000000799262 : add byte ptr [rax], al ; pop rsp ; fild dword ptr [rax + rax] ; clc ; and al, 0xe6 ; call rdi
0x00000000007a9ca2 : add byte ptr [rax], al ; pop rsp ; in eax, 5 ; add byte ptr [rax], ch ; scasd eax, dword ptr [rdi] ; in al, dx ; jmp rsp
0x00000000007944a2 : add byte ptr [rax], al ; pop rsp ; lea eax, dword ptr [rax + rax] ; jnp 0x794498 ; call rsp
0x0000000000778062 : add byte ptr [rax], al ; pop rsp ; leave ; add al, byte ptr [rax] ; mov byte ptr [rbp - 0x24], bh ; call qword ptr [rbx]
0x0000000000751d0e : add byte ptr [rax], al ; pop rsp ; or al, 0xce ; call rsp
0x000000000079c1a2 : add byte ptr [rax], al ; pop rsp ; or al, byte ptr [rip - 0x18682c00] ; call rsp
0x0000000000797aa2 : add byte ptr [rax], al ; pop rsp ; ret
0x0000000000757962 : add byte ptr [rax], al ; pop rsp ; ret 0
0x0000000000767962 : add byte ptr [rax], al ; pop rsp ; ret 1
0x00000000007a7962 : add byte ptr [rax], al ; pop rsp ; ret 5
0x00000000007b7962 : add byte ptr [rax], al ; pop rsp ; ret 6
0x00000000007581a2 : add byte ptr [rax], al ; pop rsp ; retf 0
0x000000000077d162 : add byte ptr [rax], al ; pop rsp ; sbb al, byte ptr [rbx] ; add al, ch ; mov ds, ebp ; call qword ptr [rbx]
0x000000000079d0a2 : add byte ptr [rax], al ; pop rsp ; sbb dword ptr [rip - 0x182ab800], eax ; call rsp
0x00000000007a5262 : add byte ptr [rax], al ; pop rsp ; wait ; add eax, 0xeb46c800 ; jmp qword ptr [rax]
0x000000000076eb62 : add byte ptr [rax], al ; pop rsp ; xor al, 2 ; add byte ptr [rdx], dh ; push rsi ; leave ; call qword ptr [rdx]
0x00000000007d6527 : add byte ptr [rax], al ; popfq ; add ah, byte ptr [rbx] ; retf 0x103
0x000000000079548a : add byte ptr [rax], al ; popfq ; add al, 0 ; add ah, ch ; call rsp
0x00000000007cde74 : add byte ptr [rax], al ; popfq ; syscall
0x000000000073f083 : add byte ptr [rax], al ; push 0xe3 ; call qword ptr [rax]
0x000000000074b9a6 : add byte ptr [rax], al ; push 0xf8 ; retf
0x000000000040241e : add byte ptr [rax], al ; push rax ; ret
0x0000000000717b86 : add byte ptr [rax], al ; push rax ; retf
0x00000000006d8e1e : add byte ptr [rax], al ; push rax ; retf 0x9f
0x000000000074f266 : add byte ptr [rax], al ; push rax ; xor al, 0xcd ; jmp qword ptr [rax]
0x0000000000505dee : add byte ptr [rax], al ; push rbx ; mov rbx, rdi ; call qword ptr [rip + 0x4fca6e]
0x00000000007a0e6a : add byte ptr [rax], al ; push rdi ; add eax, 0xe8a3e000 ; call qword ptr [rax]
0x000000000074b7ce : add byte ptr [rax], al ; push rdx ; salc ; retf
0x000000000075138e : add byte ptr [rax], al ; push rsi ; fmulp st(5) ; call rcx
0x0000000000750fb6 : add byte ptr [rax], al ; push rsi ; retf
0x000000000074b79a : add byte ptr [rax], al ; push rsp ; add byte ptr [rax], al ; add byte ptr [rdx - 0x2c], dl ; retf
0x000000000075d79a : add byte ptr [rax], al ; push rsp ; and byte ptr [rcx], al ; add byte ptr [rdi + rdx*8 - 0x2f], dh ; jmp rax
0x0000000000777f5a : add byte ptr [rax], al ; push rsp ; enter 2, 0x48 ; retf -0x38
0x000000000077929a : add byte ptr [rax], al ; push rsp ; fild dword ptr [rdx] ; add byte ptr [rax], al ; ret 0xffdc
0x00000000007b2a5a : add byte ptr [rax], al ; push rsp ; jae 0x7b2a6e ; add byte ptr [rax - 0x12], ah ; out dx, al ; jmp qword ptr [rcx]
0x000000000076285a : add byte ptr [rax], al ; push rsp ; jno 0x762869 ; add al, bh ; mov ah, dl ; jmp qword ptr [rbx]
0x00000000007b6d5a : add byte ptr [rax], al ; push rsp ; mov dh, 6 ; add byte ptr [rax - 0x54], dh ; out dx, eax ; call qword ptr [rdi]
0x00000000007ac45a : add byte ptr [rax], al ; push rsp ; or eax, 0x46dc0006 ; in eax, dx ; call qword ptr [rbx]
0x00000000007ac25a : add byte ptr [rax], al ; push rsp ; or eax, dword ptr [rsi] ; add byte ptr [rsi + 0x44], ch ; in eax, dx ; call qword ptr [rsi]
0x0000000000780f5a : add byte ptr [rax], al ; push rsp ; pop rax ; add eax, dword ptr [rax] ; push rax ; mov esi, ds ; jmp qword ptr [rdx]
0x000000000076139a : add byte ptr [rax], al ; push rsp ; pop rsp ; add dword ptr [rax], eax ; retf -0x2c08
0x0000000000777a5a : add byte ptr [rax], al ; push rsp ; ret
0x000000000077795a : add byte ptr [rax], al ; push rsp ; ret 2
0x000000000076825a : add byte ptr [rax], al ; push rsp ; retf
0x000000000076815a : add byte ptr [rax], al ; push rsp ; retf 1
0x000000000077815a : add byte ptr [rax], al ; push rsp ; retf 2
0x000000000075619a : add byte ptr [rax], al ; push rsp ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; cmpsb byte ptr fs:[rsi], byte ptr [rdi] ; iretd ; call rsp
0x0000000000795f9a : add byte ptr [rax], al ; push rsp ; test al, 4 ; add byte ptr [rdx], dh ; sub esp, ebp ; call rcx
0x000000000075529a : add byte ptr [rax], al ; push rsp ; wait ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; insb byte ptr [rdi], dx ; iretd ; call rsp
0x00000000007d50f5 : add byte ptr [rax], al ; pushfq ; adc al, 5 ; stosd dword ptr [rdi], eax ; adc al, 0 ; retf
0x000000000074b9a2 : add byte ptr [rax], al ; pushfq ; add al, byte ptr [rax] ; add byte ptr [rdx - 8], ch ; retf
0x000000000079fca2 : add byte ptr [rax], al ; pushfq ; add eax, 0xe8711800 ; call qword ptr [rdi]
0x00000000007b7fa2 : add byte ptr [rax], al ; pushfq ; enter 6, 0x78 ; sbb al, dh ; jmp rdi
0x00000000007a8fa2 : add byte ptr [rax], al ; pushfq ; fadd dword ptr [rip - 0x13976800] ; call qword ptr [rcx]
0x000000000078b6a2 : add byte ptr [rax], al ; pushfq ; inc dword ptr [rbx] ; add al, bh ; adc ah, cl ; call qword ptr [rbx]
0x0000000000772ea2 : add byte ptr [rax], al ; pushfq ; ja 0x772eb2 ; add al, cl ; cmp al, 0xdb ; call qword ptr [rbx]
0x00000000007930a2 : add byte ptr [rax], al ; pushfq ; jns 0x7930b4 ; add al, al ; add ah, ah ; call qword ptr [rdi]
0x00000000007b75a2 : add byte ptr [rax], al ; pushfq ; mov esi, 0xb9a80006 ; out dx, eax ; jmp qword ptr [rsi]
0x00000000007b43a2 : add byte ptr [rax], al ; pushfq ; mov word ptr [rsi], es ; add al, ch ; out dx, eax ; jmp qword ptr [rdi]
0x00000000007a47a2 : add byte ptr [rax], al ; pushfq ; nop ; add eax, 0xc6335e00 ; call qword ptr [rdx]
0x000000000079c0a2 : add byte ptr [rax], al ; pushfq ; or dword ptr [rip - 0x186ccc00], eax ; call qword ptr [rbx]
0x00000000007ac4a2 : add byte ptr [rax], al ; pushfq ; or eax, 0x46d00006 ; in eax, dx ; call qword ptr [rbx]
0x0000000000787ae2 : add byte ptr [rax], al ; pushfq ; ret
0x00000000007779a2 : add byte ptr [rax], al ; pushfq ; ret 2
0x00000000007b79a2 : add byte ptr [rax], al ; pushfq ; ret 6
0x00000000006ea056 : add byte ptr [rax], al ; pushfq ; retf
0x00000000007688e2 : add byte ptr [rax], al ; pushfq ; rol dword ptr [rcx], 1 ; add byte ptr [rsi], bh ; sti ; xlatb ; jmp rax
0x0000000000768aa2 : add byte ptr [rax], al ; pushfq ; rol dword ptr [rcx], cl ; add byte ptr [rdi + rsi - 0x28], ah ; jmp qword ptr [rdi]
0x000000000079e1a2 : add byte ptr [rax], al ; pushfq ; sub al, byte ptr [rip - 0x18028a00] ; jmp qword ptr [rbx]
0x00000000007a3ea2 : add byte ptr [rax], al ; pushfq ; xchg dword ptr [rip - 0x39c48e00], eax ; call qword ptr [rdx]
0x0000000000784aa2 : add byte ptr [rax], al ; pushfq ; xchg eax, ebx ; add eax, dword ptr [rax] ; call 0x14782a83
0x000000000074cc6e : add byte ptr [rax], al ; rcr byte ptr [rcx - 0x34], 1 ; call qword ptr [rsi]
0x000000000040232f : add byte ptr [rax], al ; ret
0x00000000007579aa : add byte ptr [rax], al ; ret 0
0x00000000007ef108 : add byte ptr [rax], al ; ret 0x1901
0x00000000007eed11 : add byte ptr [rax], al ; ret 0x1e01
0x00000000007c3697 : add byte ptr [rax], al ; ret 0x2802
0x00000000007d4ef6 : add byte ptr [rax], al ; ret 0x2a02
0x00000000006d74ee : add byte ptr [rax], al ; ret 0x4136
0x00000000006d95ae : add byte ptr [rax], al ; ret 0x420b
0x00000000006dda96 : add byte ptr [rax], al ; ret 0x452f
0x00000000006dec0e : add byte ptr [rax], al ; ret 0x455a
0x00000000006deef6 : add byte ptr [rax], al ; ret 0x4561
0x00000000006e5f5e : add byte ptr [rax], al ; ret 0x4715
0x00000000006e9cde : add byte ptr [rax], al ; ret 0x4a24
0x00000000006e1fee : add byte ptr [rax], al ; ret 0x4b60
0x00000000006dea66 : add byte ptr [rax], al ; ret 0x4bd8
0x00000000006ecace : add byte ptr [rax], al ; ret 0x4c75
0x00000000006deb0e : add byte ptr [rax], al ; ret 0x4c78
0x00000000006f0b3e : add byte ptr [rax], al ; ret 0x50
0x00000000007deb45 : add byte ptr [rax], al ; ret 0x501
0x00000000007c5314 : add byte ptr [rax], al ; ret 0x502
0x00000000007e0e1b : add byte ptr [rax], al ; ret 0x503
0x00000000007d1c3a : add byte ptr [rax], al ; ret 0x504
0x00000000007d1005 : add byte ptr [rax], al ; ret 0x505
0x00000000007cd179 : add byte ptr [rax], al ; ret 0x507
0x00000000007c018d : add byte ptr [rax], al ; ret 0x508
0x00000000007d4e55 : add byte ptr [rax], al ; ret 0x511
0x00000000007e848a : add byte ptr [rax], al ; ret 0x516
0x00000000007e32f4 : add byte ptr [rax], al ; ret 0x51f
0x00000000007f5f4d : add byte ptr [rax], al ; ret 0x522
0x00000000007c5dcf : add byte ptr [rax], al ; ret 0x548
0x00000000007e6fca : add byte ptr [rax], al ; ret 0x5a06
0x00000000007fbc0b : add byte ptr [rax], al ; ret 0x5a12
0x000000000071334e : add byte ptr [rax], al ; ret 0x5ce0
0x0000000000714336 : add byte ptr [rax], al ; ret 0x5d
0x00000000007bf1a7 : add byte ptr [rax], al ; ret 0x6001
0x00000000007d2474 : add byte ptr [rax], al ; ret 0x607
0x000000000072f3e6 : add byte ptr [rax], al ; ret 0x6bb1
0x00000000006fc4ce : add byte ptr [rax], al ; ret 0x6f
0x000000000072c196 : add byte ptr [rax], al ; ret 0x72
0x0000000000783bcf : add byte ptr [rax], al ; ret 0x7d
0x000000000073264f : add byte ptr [rax], al ; ret 0xbeb
0x000000000074e676 : add byte ptr [rax], al ; ret 0xccec
0x0000000000750e4e : add byte ptr [rax], al ; ret 0xcdc7
0x0000000000751976 : add byte ptr [rax], al ; ret 0xce07
0x0000000000752296 : add byte ptr [rax], al ; ret 0xce19
0x0000000000752f2e : add byte ptr [rax], al ; ret 0xce87
0x0000000000753c66 : add byte ptr [rax], al ; ret 0xcedd
0x0000000000756db6 : add byte ptr [rax], al ; ret 0xcfc6
0x00000000007577de : add byte ptr [rax], al ; ret 0xcfd7
0x000000000075826e : add byte ptr [rax], al ; ret 0xcff1
0x00000000007591c6 : add byte ptr [rax], al ; ret 0xd041
0x000000000075a93e : add byte ptr [rax], al ; ret 0xd0b7
0x00000000007e3da2 : add byte ptr [rax], al ; ret 0xe01
0x000000000077929f : add byte ptr [rax], al ; ret 0xffdc
0x000000000073ca4b : add byte ptr [rax], al ; ret 0xffdf
0x000000000073f4cb : add byte ptr [rax], al ; ret 0xffe3
0x000000000074897b : add byte ptr [rax], al ; ret 0xfff6
0x000000000074a11b : add byte ptr [rax], al ; ret 0xfff8
0x0000000000787992 : add byte ptr [rax], al ; ret 3
0x0000000000400c56 : add byte ptr [rax], al ; ret 5
0x00000000006d979e : add byte ptr [rax], al ; retf
0x000000000073e2ab : add byte ptr [rax], al ; retf -0x1f
0x0000000000754886 : add byte ptr [rax], al ; retf -0x30d2
0x0000000000757086 : add byte ptr [rax], al ; retf -0x31
0x0000000000753d7e : add byte ptr [rax], al ; retf -0x311e
0x000000000075248e : add byte ptr [rax], al ; retf -0x31e5
0x00000000007521ae : add byte ptr [rax], al ; retf -0x31e8
0x0000000000750c7e : add byte ptr [rax], al ; retf -0x3243
0x000000000075059e : add byte ptr [rax], al ; retf -0x325c
0x000000000074fe36 : add byte ptr [rax], al ; retf -0x32b6
0x0000000000750f06 : add byte ptr [rax], al ; retf -0x33
0x00000000007eb7de : add byte ptr [rax], al ; retf -0x76ff
0x00000000007482b3 : add byte ptr [rax], al ; retf -0xb
0x00000000007ccef0 : add byte ptr [rax], al ; retf 0x1603
0x00000000007cc22e : add byte ptr [rax], al ; retf 0x1d08
0x00000000007ce9e0 : add byte ptr [rax], al ; retf 0x1e01
0x00000000007f46fe : add byte ptr [rax], al ; retf 0x1f7
0x00000000007e7cd2 : add byte ptr [rax], al ; retf 0x2f03
0x00000000006d75c6 : add byte ptr [rax], al ; retf 0x40bf
0x00000000006d796e : add byte ptr [rax], al ; retf 0x413e
0x00000000006d9656 : add byte ptr [rax], al ; retf 0x4247
0x00000000006dd2f6 : add byte ptr [rax], al ; retf 0x43e4
0x00000000006dd2ce : add byte ptr [rax], al ; retf 0x442d
0x00000000006dd3e6 : add byte ptr [rax], al ; retf 0x4468
0x00000000006dca6e : add byte ptr [rax], al ; retf 0x44fb
0x00000000006ea196 : add byte ptr [rax], al ; retf 0x4a38
0x00000000006eac0e : add byte ptr [rax], al ; retf 0x4aa3
0x00000000006e457e : add byte ptr [rax], al ; retf 0x4b97
0x00000000006dea1e : add byte ptr [rax], al ; retf 0x4c37
0x00000000006ed586 : add byte ptr [rax], al ; retf 0x4eb0
0x00000000007c84f8 : add byte ptr [rax], al ; retf 0x501
0x00000000007d54fd : add byte ptr [rax], al ; retf 0x502
0x00000000007ceeaa : add byte ptr [rax], al ; retf 0x503
0x00000000007d2817 : add byte ptr [rax], al ; retf 0x504
0x00000000007ce69f : add byte ptr [rax], al ; retf 0x506
0x00000000007cd29a : add byte ptr [rax], al ; retf 0x509
0x00000000007d455f : add byte ptr [rax], al ; retf 0x50a
0x00000000007dc56b : add byte ptr [rax], al ; retf 0x50f
0x00000000007e366d : add byte ptr [rax], al ; retf 0x512
0x00000000007e68d8 : add byte ptr [rax], al ; retf 0x513
0x000000000070f687 : add byte ptr [rax], al ; retf 0x59
0x0000000000712fce : add byte ptr [rax], al ; retf 0x5c
0x000000000071344e : add byte ptr [rax], al ; retf 0x5ceb
0x00000000007141ee : add byte ptr [rax], al ; retf 0x5e3a
0x00000000007d161a : add byte ptr [rax], al ; retf 0x603
0x00000000007d1a08 : add byte ptr [rax], al ; retf 0x605
0x000000000071925e : add byte ptr [rax], al ; retf 0x6154
0x0000000000724e06 : add byte ptr [rax], al ; retf 0x66
0x0000000000724ec6 : add byte ptr [rax], al ; retf 0x66cb
0x00000000006dcb36 : add byte ptr [rax], al ; retf 0x6d
0x0000000000769c5f : add byte ptr [rax], al ; retf 0x7c
0x00000000007e5c78 : add byte ptr [rax], al ; retf 0xc01
0x00000000007681aa : add byte ptr [rax], al ; retf 1
0x00000000007a816a : add byte ptr [rax], al ; retf 5
0x00000000007591e6 : add byte ptr [rax], al ; rol byte ptr [rcx - 0x30], 1 ; call qword ptr [rbx]
0x00000000007591a6 : add byte ptr [rax], al ; rol byte ptr [rcx - 0x30], 1 ; call qword ptr [rdx]
0x00000000007e5bee : add byte ptr [rax], al ; rol byte ptr [rcx], cl ; test dword ptr [rcx], eax ; ret
0x000000000077774a : add byte ptr [rax], al ; rol byte ptr [rdx], 0 ; ja 0x777738 ; call qword ptr [rcx]
0x000000000076886a : add byte ptr [rax], al ; rol dword ptr fs:[rcx], 1 ; add ah, bl ; not edi ; jmp qword ptr [rbx]
0x00000000007dbe82 : add byte ptr [rax], al ; ror dword ptr [rdx], 5 ; pushfq ; or eax, dword ptr [rax] ; retf
0x00000000007d0cd6 : add byte ptr [rax], al ; ror dword ptr [rdx], 5 ; ret
0x000000000074b8c6 : add byte ptr [rax], al ; sahf ; jmp 0x74b89a
0x00000000007d2099 : add byte ptr [rax], al ; sahf ; or byte ptr [rsi], al ; retf
0x0000000000768d52 : add byte ptr [rax], al ; salc ; add dword ptr [rax], eax ; neg byte ptr [rsi - 0x28] ; jmp qword ptr [rbx]
0x00000000007dc576 : add byte ptr [rax], al ; salc ; syscall
0x000000000074b6f2 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and dl, bl ; retf
0x000000000079c6fe : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cld ; syscall
0x0000000000767af6 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; ret
0x0000000000757aee : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x00000000007679ee : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; ret 1
0x00000000007b826e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x0000000000757aae : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x00000000007679ae : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 1
0x00000000007a79a6 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 5
0x00000000007582a6 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000007981a6 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 4
0x000000000075795e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 0
0x000000000076795e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 1
0x0000000000768256 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; retf
0x0000000000767a4e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; ret
0x0000000000758246 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; retf
0x00000000007a8166 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; retf 5
0x0000000000797996 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 4
0x000000000078cc22 : add byte ptr [rax], al ; sbb al, 0x15 ; add al, 0 ; call 0x1478adb9
0x000000000074f262 : add byte ptr [rax], al ; sbb al, 0x3b ; add byte ptr [rax], al ; push rax ; xor al, 0xcd ; jmp qword ptr [rax]
0x000000000079fd62 : add byte ptr [rax], al ; sbb al, 0x46 ; add eax, 0xe870f800 ; jmp rcx
0x0000000000790822 : add byte ptr [rax], al ; sbb al, 0x51 ; add al, 0 ; sbb byte ptr [rcx - 0x1e], ah ; jmp qword ptr [rdx]
0x0000000000753c62 : add byte ptr [rax], al ; sbb al, 0x85 ; add byte ptr [rax], al ; ret 0xcedd
0x0000000000794422 : add byte ptr [rax], al ; sbb al, 0x8d ; add al, 0 ; xchg eax, edx ; js 0x794418 ; jmp qword ptr [rdx]
0x000000000075588e : add byte ptr [rax], al ; sbb al, 0x8e ; iretd ; call rbx
0x0000000000755222 : add byte ptr [rax], al ; sbb al, 0x9b ; add byte ptr [rax], al ; mov dl, 0x6b ; iretd ; call qword ptr [rdi]
0x0000000000777022 : add byte ptr [rax], al ; sbb al, 0xb9 ; add al, byte ptr [rax] ; sbb byte ptr [rdi - 0x24], ah ; call qword ptr [rdx]
0x0000000000777e22 : add byte ptr [rax], al ; sbb al, 0xc7 ; add al, byte ptr [rax] ; retf
0x00000000007a9722 : add byte ptr [rax], al ; sbb al, 0xe0 ; add eax, 0xec9f9800 ; call rbx
0x000000000076b822 : add byte ptr [rax], al ; sbb al, 1 ; add al, byte ptr [rax] ; cwde ; mov dl, 0xd9 ; jmp qword ptr [rbx]
0x000000000075495e : add byte ptr [rax], al ; sbb bh, byte ptr [rbx] ; iretd ; call rsp
0x00000000006b2ef4 : add byte ptr [rax], al ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000007542c6 : add byte ptr [rax], al ; sbb byte ptr [rcx], cl ; iretd ; call rsp
0x000000000079cf8a : add byte ptr [rax], al ; sbb byte ptr [rip - 0x182b8e00], r8b ; call rsp
0x000000000074efbe : add byte ptr [rax], al ; sbb ecx, ebp ; call rsp
0x0000000000751ffe : add byte ptr [rax], al ; scasb al, byte ptr [rdi] ; adc ecx, esi ; call rcx
0x00000000007cfca7 : add byte ptr [rax], al ; scasb al, byte ptr [rdi] ; add al, 6 ; ret 4
0x00000000007c911e : add byte ptr [rax], al ; scasd eax, dword ptr [rdi] ; add eax, 0x5db05 ; retf
0x0000000000666a3e : add byte ptr [rax], al ; sete al ; movzx eax, al ; ret
0x00000000006c6ad8 : add byte ptr [rax], al ; sete al ; ret
0x0000000000678418 : add byte ptr [rax], al ; setle al ; ret
0x0000000000547f30 : add byte ptr [rax], al ; setne al ; ret
0x00000000007e6eb5 : add byte ptr [rax], al ; shl byte ptr [rdi], 2 ; retf 0x35
0x0000000000757eae : add byte ptr [rax], al ; shl dl, 0xcf ; call qword ptr [rcx]
0x00000000007e3968 : add byte ptr [rax], al ; shr dword ptr [rsi], 1 ; xlatb ; sub al, byte ptr [rax] ; retf
0x00000000007dbd79 : add byte ptr [rax], al ; stc ; add al, byte ptr [rsi] ; ret
0x00000000007f06e7 : add byte ptr [rax], al ; stc ; add dl, byte ptr [rsi] ; jmp qword ptr [rax]
0x000000000078b04a : add byte ptr [rax], al ; stc ; add eax, dword ptr [rax] ; or al, 0xe1 ; jmp qword ptr [rbx]
0x00000000007d606e : add byte ptr [rax], al ; stosb byte ptr [rdi], al ; add dword ptr [rdi], ecx ; retf
0x00000000007581a6 : add byte ptr [rax], al ; stosb byte ptr [rdi], al ; out -0x31, eax ; call rcx
0x000000000071432e : add byte ptr [rax], al ; stosb byte ptr [rdi], al ; ret
0x0000000000797a3e : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; cld ; ret 4
0x00000000007682f6 : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; hlt ; retf
0x0000000000797b2e : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x00000000007b79ee : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; in al, dx ; ret 6
0x0000000000797a9e : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x000000000075819e : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; pop rsp ; retf 0
0x0000000000768156 : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; push rsp ; retf 1
0x00000000007579a6 : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000007681a6 : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; retf 1
0x000000000079c6a6 : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; syscall
0x00000000007579d6 : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x000000000079e232 : add byte ptr [rax], al ; sub al, 0x2b ; add eax, 0xe7fe0200 ; jmp rsp
0x00000000007f980f : add byte ptr [rax], al ; sub al, 0x31 ; ret 0x101
0x000000000079ec32 : add byte ptr [rax], al ; sub al, 0x35 ; add eax, 0xe834d000 ; call qword ptr [rax]
0x000000000078f632 : add byte ptr [rax], al ; sub al, 0x3f ; add al, 0 ; cwde ; add dl, ah ; jmp qword ptr [rbx]
0x000000000078f832 : add byte ptr [rax], al ; sub al, 0x41 ; add al, 0 ; call 0x2378da48
0x000000000074fe32 : add byte ptr [rax], al ; sub al, 0x47 ; add byte ptr [rax], al ; retf -0x32b6
0x000000000075fe32 : add byte ptr [rax], al ; sub al, 0x47 ; add dword ptr [rax], eax ; cmp dh, byte ptr [rcx - 0x2d] ; jmp qword ptr [rsi]
0x0000000000790a32 : add byte ptr [rax], al ; sub al, 0x53 ; add al, 0 ; fsubr dword ptr [rax - 0x1e] ; jmp qword ptr [rdx]
0x00000000007a0f32 : add byte ptr [rax], al ; sub al, 0x58 ; add eax, 0xe8a48800 ; jmp qword ptr [rax]
0x00000000007a1932 : add byte ptr [rax], al ; sub al, 0x62 ; add eax, 0xc6499400 ; call qword ptr [rdx]
0x00000000007a2972 : add byte ptr [rax], al ; sub al, 0x72 ; add eax, 0xe9092800 ; call qword ptr [rsi]
0x00000000007a2b72 : add byte ptr [rax], al ; sub al, 0x74 ; add eax, 0xe95cb800 ; call qword ptr [rsi]
0x0000000000792c32 : add byte ptr [rax], al ; sub al, 0x75 ; add al, 0 ; clc ; retf -0x1d
0x00000000007a4032 : add byte ptr [rax], al ; sub al, 0x89 ; add eax, 0xe9a0a800 ; jmp qword ptr [rbx]
0x00000000007a4a72 : add byte ptr [rax], al ; sub al, 0x93 ; add eax, 0xea9b1800 ; call qword ptr [rcx]
0x0000000000775232 : add byte ptr [rax], al ; sub al, 0x9b ; add al, byte ptr [rax] ; call 0x11772e14
0x0000000000765332 : add byte ptr [rax], al ; sub al, 0x9c ; add dword ptr [rax], eax ; retf -0x2aa0
0x0000000000756396 : add byte ptr [rax], al ; sub al, 0xab ; iretd ; jmp qword ptr [rsi]
0x0000000000766572 : add byte ptr [rax], al ; sub al, 0xae ; add dword ptr [rax], eax ; retf -0x2a25
0x0000000000756a72 : add byte ptr [rax], al ; sub al, 0xb3 ; add byte ptr [rax], al ; sub al, 0xbe ; iretd ; jmp qword ptr [rax]
0x0000000000756a76 : add byte ptr [rax], al ; sub al, 0xbe ; iretd ; jmp qword ptr [rax]
0x0000000000757b32 : add byte ptr [rax], al ; sub al, 0xc4 ; add byte ptr [rax], al ; fcmovu st(0), st(7) ; iretd ; call qword ptr [rbx]
0x0000000000767b72 : add byte ptr [rax], al ; sub al, 0xc4 ; add dword ptr [rax], eax ; retf -0x28f1
0x000000000074b82e : add byte ptr [rax], al ; sub al, 0xe8 ; retf
0x000000000074c672 : add byte ptr [rax], al ; sub al, 0xf ; add byte ptr [rax], al ; fsubr qword ptr [rsp + rcx*8] ; call rsp
0x000000000078ab32 : add byte ptr [rax], al ; sub al, 0xf4 ; add eax, dword ptr [rax] ; in al, -0x20 ; jmp qword ptr [rax]
0x000000000075b932 : add byte ptr [rax], al ; sub al, 2 ; add dword ptr [rax], eax ; retf -0x2eda
0x000000000074c4d6 : add byte ptr [rax], al ; sub byte ptr [rcx], 0xcc ; call qword ptr [rdx]
0x000000000074e0aa : add byte ptr [rax], al ; sub dword ptr fs:[rax], eax ; add byte ptr [rsi + rdx*8 - 0x34], ah ; call rax
0x00000000007ccb81 : add byte ptr [rax], al ; sub eax, dword ptr [rax + 0x4d701] ; ret 0x501
0x00000000006940bb : add byte ptr [rax], al ; sub eax, ecx ; sub edi, eax ; mov eax, edi ; ret
0x00000000006609e4 : add byte ptr [rax], al ; sub ecx, dword ptr [rdx + 0x54] ; add rax, rcx ; ret
0x000000000074b6ab : add byte ptr [rax], al ; sub edx, edi ; jmp rax
0x000000000079e052 : add byte ptr [rax], al ; sub qword ptr [rip - 0x180b1c00], r8 ; call qword ptr [rsi]
0x0000000000400a46 : add byte ptr [rax], al ; syscall
0x000000000076a38a : add byte ptr [rax], al ; test ah, ch ; add dword ptr [rax], eax ; and byte ptr [rsi - 0x27], ch ; jmp qword ptr [rax]
0x00000000007572ee : add byte ptr [rax], al ; test al, 0xce ; iretd ; call rcx
0x0000000000746213 : add byte ptr [rax], al ; test al, 0xf2 ; call rax
0x00000000005133a5 : add byte ptr [rax], al ; test al, 1 ; jne 0x5133c9 ; call rax
0x0000000000513421 : add byte ptr [rax], al ; test al, 1 ; jne 0x51342f ; jmp rax
0x0000000000513461 : add byte ptr [rax], al ; test al, 1 ; jne 0x51346f ; jmp rax
0x00000000005134a1 : add byte ptr [rax], al ; test al, 1 ; jne 0x5134af ; jmp rax
0x0000000000513551 : add byte ptr [rax], al ; test al, 1 ; jne 0x51355f ; jmp rax
0x00000000005b8a38 : add byte ptr [rax], al ; test al, 1 ; jne 0x5b8a4b ; call rax
0x00000000007e11ff : add byte ptr [rax], al ; test al, 1 ; outsb dx, byte ptr [rsi] ; ret 4
0x00000000006735c3 : add byte ptr [rax], al ; test al, al ; jne 0x6735d6 ; ret
0x0000000000799f8a : add byte ptr [rax], al ; test al, ch ; add al, 0 ; ja 0x799f82 ; call qword ptr [rbx]
0x0000000000777f8a : add byte ptr [rax], al ; test al, cl ; add al, byte ptr [rax] ; retf -0x38
0x00000000007a7e8a : add byte ptr [rax], al ; test bh, al ; add eax, 0xec188000 ; jmp qword ptr [rdx]
0x000000000079ae8a : add byte ptr [rax], al ; test bh, dh ; add al, 0 ; add al, 0xe7 ; jmp qword ptr [rcx]
0x00000000007792ca : add byte ptr [rax], al ; test bl, bl ; add al, byte ptr [rax] ; ret 0xffdc
0x0000000000750f8a : add byte ptr [rax], al ; test byte ptr [rax], bl ; add dh, ah ; retf -0x33
0x000000000079bf8a : add byte ptr [rax], al ; test byte ptr [rax], cl ; add eax, 0xe7918400 ; jmp rdi
0x000000000078fc8a : add byte ptr [rax], al ; test byte ptr [rbp + 4], al ; add al, dh ; or edx, esp ; jmp qword ptr [rbx]
0x000000000078438a : add byte ptr [rax], al ; test byte ptr [rbx + rax - 0x205fc000], cl ; call qword ptr [rbx]
0x000000000077068a : add byte ptr [rax], al ; test byte ptr [rdi + 2], cl ; add byte ptr [rax], dh ; test al, 0xda ; jmp qword ptr [rcx]
0x00000000007ac48a : add byte ptr [rax], al ; test byte ptr [rip + 0x46d40006], cl ; in eax, dx ; call qword ptr [rbx]
0x00000000007b538a : add byte ptr [rax], al ; test byte ptr [rsi + rax - 0x10a4c000], bl ; jmp qword ptr [rcx]
0x00000000007bad4a : add byte ptr [rax], al ; test byte ptr [rsi], 0 ; nop ; ret 0xfff0
0x000000000074d5ca : add byte ptr [rax], al ; test byte ptr [rsi], bl ; add byte ptr [rax], al ; jae 0x74d5a8 ; call rcx
0x00000000007953ca : add byte ptr [rax], al ; test byte ptr [rsp + rax - 0x1b022c00], bl ; call rsp
0x00000000005218be : add byte ptr [rax], al ; test dil, dil ; setne al ; ret
0x0000000000793c8a : add byte ptr [rax], al ; test dword ptr [rax + rax], r8d ; sub dl, byte ptr [rbx - 0x1c] ; call rsp
0x00000000007b3c6a : add byte ptr [rax], al ; test dword ptr fs:[rsi], eax ; add byte ptr [rax], ah ; sub ebp, edi ; jmp qword ptr [rcx]
0x0000000000517e7e : add byte ptr [rax], al ; test eax, eax ; cmovs eax, edx ; ret
0x00000000005ce5f8 : add byte ptr [rax], al ; test eax, eax ; setne al ; nop ; leave ; ret
0x0000000000518286 : add byte ptr [rax], al ; test edx, edx ; jle 0x518296 ; ret
0x00000000006ce0f9 : add byte ptr [rax], al ; test edx, edx ; jne 0x6ce10f ; ret
0x00000000005861ee : add byte ptr [rax], al ; test esi, esi ; jne 0x5861fe ; ret
0x000000000059f1ee : add byte ptr [rax], al ; test esi, esi ; jne 0x59f1fe ; ret
0x00000000005482e2 : add byte ptr [rax], al ; test rax, rax ; je 0x5482f8 ; pop rbx ; ret
0x0000000000548372 : add byte ptr [rax], al ; test rax, rax ; je 0x548388 ; pop rbx ; ret
0x000000000066b78d : add byte ptr [rax], al ; test rax, rax ; jne 0x66b787 ; ret
0x000000000065881e : add byte ptr [rax], al ; test rdi, rdi ; je 0x65882d ; ret
0x000000000067475e : add byte ptr [rax], al ; test rdi, rdi ; je 0x674773 ; call 0x680a6d
0x00000000006a60ae : add byte ptr [rax], al ; test rdi, rdi ; je 0x6a60bd ; ret
0x000000000054ad2a : add byte ptr [rax], al ; test rdx, rdx ; cmove rax, rcx ; ret
0x0000000000517d57 : add byte ptr [rax], al ; test rdx, rdx ; cmovne rax, rdi ; ret
0x000000000053ade6 : add byte ptr [rax], al ; test rdx, rdx ; sete al ; ret
0x000000000050aaae : add byte ptr [rax], al ; test rsi, rsi ; setne al ; ret
0x00000000007e8bd0 : add byte ptr [rax], al ; wait ; add dword ptr [rdx], eax ; ret
0x00000000007dcb95 : add byte ptr [rax], al ; wait ; syscall
0x000000000074350b : add byte ptr [rax], al ; xchg bl, ch ; jmp rax
0x00000000007e5c05 : add byte ptr [rax], al ; xchg eax, ebp ; add al, 5 ; ret
0x00000000007d5c68 : add byte ptr [rax], al ; xchg eax, ebx ; add eax, 0x105f321 ; ret 0x1805
0x00000000007f57b7 : add byte ptr [rax], al ; xchg eax, ecx ; or eax, 0x21da23 ; ret 0x90d
0x00000000007549be : add byte ptr [rax], al ; xchg eax, edx ; cmp al, 0xcf ; call rsp
0x00000000007cb458 : add byte ptr [rax], al ; xchg eax, edx ; jns 0x7cb467 ; ret 0x79
0x0000000000756c2e : add byte ptr [rax], al ; xchg eax, edx ; ret
0x0000000000750ff6 : add byte ptr [rax], al ; xchg eax, edx ; retf
0x0000000000757106 : add byte ptr [rax], al ; xchg eax, edx ; retf -0x31
0x0000000000755cc6 : add byte ptr [rax], al ; xchg eax, esi ; lahf ; iretd ; call rsp
0x000000000074b946 : add byte ptr [rax], al ; xchg eax, esi ; out dx, eax ; retf
0x000000000079c7da : add byte ptr [rax], al ; xchg eax, esp ; adc byte ptr [rip - 0x184a9800], al ; call rsp
0x000000000075059a : add byte ptr [rax], al ; xchg eax, esp ; add byte ptr [rax], r8b ; retf -0x325c
0x000000000079b79a : add byte ptr [rax], al ; xchg eax, esp ; add byte ptr [rip - 0x18ae2000], al ; call qword ptr [rax]
0x00000000007aaa9a : add byte ptr [rax], al ; xchg eax, esp ; add eax, 0xecdb1000 ; call qword ptr [rdx]
0x000000000079ffda : add byte ptr [rax], al ; xchg eax, esp ; add rax, -0x17885000 ; call rdi
0x00000000007bb59a : add byte ptr [rax], al ; xchg eax, esp ; inc byte ptr [rsi] ; add al, dh ; loopne 0x7bb59c ; call qword ptr [rdx]
0x00000000007aa89a : add byte ptr [rax], al ; xchg eax, esp ; int1 ; add eax, 0xecda6000 ; jmp qword ptr [rcx]
0x000000000078339a : add byte ptr [rax], al ; xchg eax, esp ; jl 0x7833ab ; add byte ptr [rax], al ; or bh, bl ; jmp qword ptr [rsi]
0x00000000007a809a : add byte ptr [rax], al ; xchg eax, esp ; leave ; add eax, 0xec1c2600 ; call qword ptr [rdi]
0x00000000007b6f9a : add byte ptr [rax], al ; xchg eax, esp ; mov eax, 0xb0d00006 ; out dx, eax ; call qword ptr [rcx]
0x00000000007a5b9a : add byte ptr [rax], al ; xchg eax, esp ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0xeb6b7000 ; call qword ptr [rax]
0x0000000000751a26 : add byte ptr [rax], al ; xchg eax, esp ; or dh, cl ; call qword ptr [rax]
0x0000000000790a9a : add byte ptr [rax], al ; xchg eax, esp ; push rbx ; add al, 0 ; shr byte ptr [rbx - 0x1e], 1 ; jmp qword ptr [rdx]
0x0000000000767a9a : add byte ptr [rax], al ; xchg eax, esp ; ret
0x00000000007579da : add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x000000000079799a : add byte ptr [rax], al ; xchg eax, esp ; ret 4
0x000000000075cf9a : add byte ptr [rax], al ; xchg eax, esp ; sbb byte ptr [rcx], al ; add al, ah ; jno 0x75cf7d ; jmp qword ptr [rbx]
0x00000000007be19a : add byte ptr [rax], al ; xchg eax, esp ; sub al, byte ptr [rdi] ; add byte ptr [rax + 0x2f], ah ; int1 ; jmp qword ptr [rbx]
0x0000000000784d9a : add byte ptr [rax], al ; xchg eax, esp ; xchg eax, esi ; add eax, dword ptr [rax] ; push rax ; rcr edi, 1 ; call qword ptr [rbx]
0x0000000000753e92 : add byte ptr [rax], al ; xchg qword ptr [rax], r8 ; add byte ptr [rdx], dl ; in eax, -0x32 ; call rsp
0x00000000007a4d52 : add byte ptr [rax], al ; xchg rax, rsi ; add eax, 0xeb3b5800 ; call qword ptr [rbx]
0x000000000074a2eb : add byte ptr [rax], al ; xlatb ; clc ; jmp rax
0x000000000078798e : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; ret 3
0x0000000000778286 : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; retf
0x000000000074ebaa : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rdx], al ; add ebp, ecx ; call rsp
0x000000000078cd3a : add byte ptr [rax], al ; xor al, 0x16 ; add al, 0 ; retf -0x3879
0x00000000007ca1d8 : add byte ptr [rax], al ; xor al, 0x1f ; retf
0x000000000078db3a : add byte ptr [rax], al ; xor al, 0x24 ; add al, 0 ; mov cl, 0xe1 ; jmp qword ptr [rax]
0x000000000077f63a : add byte ptr [rax], al ; xor al, 0x3f ; add eax, dword ptr [rax] ; and ebx, esi ; call rax
0x000000000078f73a : add byte ptr [rax], al ; xor al, 0x40 ; add al, 0 ; add spl, dl ; jmp qword ptr [rdx]
0x000000000079f83a : add byte ptr [rax], al ; xor al, 0x41 ; add eax, 0xe8671000 ; jmp qword ptr [rdi]
0x000000000079023a : add byte ptr [rax], al ; xor al, 0x4b ; add al, 0 ; xor byte ptr [rax - 0x1e], dl ; jmp qword ptr [rbx]
0x000000000079083a : add byte ptr [rax], al ; xor al, 0x51 ; add al, 0 ; xor byte ptr [rcx - 0x1e], ah ; jmp qword ptr [rbx]
0x0000000000750c7a : add byte ptr [rax], al ; xor al, 0x55 ; add byte ptr [rax], al ; retf -0x3243
0x0000000000780f3a : add byte ptr [rax], al ; xor al, 0x58 ; add eax, dword ptr [rax] ; mov esi, ds ; jmp qword ptr [rdx]
0x00000000007a237a : add byte ptr [rax], al ; xor al, 0x6c ; add eax, 0xe8f60000 ; call rdi
0x000000000077703a : add byte ptr [rax], al ; xor al, 0xb9 ; add al, byte ptr [rax] ; and byte ptr [rdi - 0x24], ah ; call qword ptr [rdx]
0x00000000007a703a : add byte ptr [rax], al ; xor al, 0xb9 ; add eax, 0xebdda000 ; call rsi
0x000000000074f246 : add byte ptr [rax], al ; xor al, 0xcd ; jmp qword ptr [rbx]
0x000000000079c57a : add byte ptr [rax], al ; xor al, 0xe ; add eax, 0xe7a81000 ; call rsp
0x000000000077a53a : add byte ptr [rax], al ; xor al, 0xee ; add al, byte ptr [rax] ; cmp dl, 0xdc ; jmp qword ptr [rcx]
0x00000000007b143f : add byte ptr [rax], al ; xor al, 0xee ; call qword ptr [rdx]
0x000000000075a93a : add byte ptr [rax], al ; xor al, 0xf2 ; add byte ptr [rax], al ; ret 0xd0b7
0x000000000078b13a : add byte ptr [rax], al ; xor al, 0xfa ; add eax, dword ptr [rax] ; or al, 0xe1 ; jmp qword ptr [rdi]
0x00000000007f1e79 : add byte ptr [rax], al ; xor al, 5 ; ret
0x00000000007bf083 : add byte ptr [rax], al ; xor al, byte ptr [rip + 0x53e016d] ; retf 0x301
0x00000000004b370e : add byte ptr [rax], al ; xor byte ptr [rbp + 0x14], 0xbe ; retf
0x000000000074f446 : add byte ptr [rax], al ; xor byte ptr [rdi], 0xcd ; call rsp
0x000000000074cff6 : add byte ptr [rax], al ; xor ch, byte ptr [rax - 0x34] ; call qword ptr [rax]
0x000000000074ea6a : add byte ptr [rax], al ; xor eax, dword ptr fs:[rax] ; add byte ptr [rax], cl ; dec esp ; call qword ptr [rdx]
0x00000000005a1f13 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x00000000006cba8e : add byte ptr [rax], al ; xor eax, eax ; cmp dl, cl ; je 0x6cbaa8 ; ret
0x00000000006c6cce : add byte ptr [rax], al ; xor eax, eax ; cmp sil, dil ; je 0x6c6ce9 ; ret
0x0000000000519f1e : add byte ptr [rax], al ; xor eax, eax ; mov edx, 1 ; ret
0x00000000006621a6 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000660451 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000503e8e : add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000506b2e : add byte ptr [rax], al ; xor eax, eax ; xor edx, edx ; ret
0x00000000006b65ef : add byte ptr [rax], al ; xor ebx, ebx ; call qword ptr [rip + 0x34c2e7]
0x000000000060a716 : add byte ptr [rax], al ; xor ebx, ebx ; jmp 0x60a6e4
0x000000000068f28e : add byte ptr [rax], al ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x00000000004faa7d : add byte ptr [rax], al ; xor ecx, ecx ; call r8
0x00000000005514b5 : add byte ptr [rax], al ; xor edi, edi ; call rax
0x0000000000525c0e : add byte ptr [rax], al ; xor edi, edi ; xor edx, edx ; mov rax, rdi ; ret
0x00000000006a554e : add byte ptr [rax], al ; xor edx, edx ; mov dword ptr [rax + 0x10], edx ; fstp xword ptr [rax] ; ret
0x00000000006a863e : add byte ptr [rax], al ; xor edx, edx ; mov rax, rbx ; pop rbx ; ret
0x0000000000530cfe : add byte ptr [rax], al ; xor edx, edx ; mov rdi, r12 ; call rax
0x00000000005105d4 : add byte ptr [rax], al ; xor edx, edx ; mov rdi, rbx ; call rax
0x0000000000506b76 : add byte ptr [rax], al ; xor edx, edx ; xor eax, eax ; ret
0x00000000006ca8b6 : add byte ptr [rax], al ; xor edx, edx ; xor esi, esi ; mov rax, rsi ; ret
0x00000000006a7566 : add byte ptr [rax], al ; xor esi, esi ; call rax
0x00000000006b6638 : add byte ptr [rax], al ; xor r12d, r12d ; call qword ptr [rip + 0x34c29d]
0x0000000000798f57 : add byte ptr [rax], bh ; adc dh, ah ; jmp rbx
0x00000000007b0527 : add byte ptr [rax], bh ; add ch, dh ; jmp rax
0x00000000004847d9 : add byte ptr [rax], bh ; call 0x680acc
0x0000000000484802 : add byte ptr [rax], bh ; call 0x680af4
0x00000000004348b6 : add byte ptr [rax], bh ; call 0x680b94
0x00000000004e4920 : add byte ptr [rax], bh ; call 0x680bbc
0x0000000000425042 : add byte ptr [rax], bh ; call 0x681302
0x000000000079ed5f : add byte ptr [rax], bh ; cmp al, ch ; call rsp
0x000000000075bd97 : add byte ptr [rax], bh ; cmp dl, cl ; call rsp
0x00000000007a4cb7 : add byte ptr [rax], bh ; cmp ebp, ebx ; jmp qword ptr [rcx]
0x00000000007a6f07 : add byte ptr [rax], bh ; fsub st(3), st(0) ; call qword ptr [rsi]
0x0000000000773c17 : add byte ptr [rax], bh ; je 0x773bfa ; jmp qword ptr [rdx]
0x0000000000788a07 : add byte ptr [rax], bh ; jg 0x7889ef ; call qword ptr [rbx]
0x000000000075fe17 : add byte ptr [rax], bh ; jno 0x75fdf2 ; jmp qword ptr [rcx]
0x000000000076277f : add byte ptr [rax], bh ; jp 0x76275b ; call qword ptr [rdx]
0x00000000007a40b7 : add byte ptr [rax], bh ; movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x7d0bc3
0x00000000007451cc : add byte ptr [rax], bh ; out dx, eax ; jmp qword ptr [rax - 0x3d]
0x00000000007b4a67 : add byte ptr [rax], bh ; out dx, eax ; jmp qword ptr [rdi]
0x00000000004023d7 : add byte ptr [rax], bh ; ret
0x000000000045b730 : add byte ptr [rax], bh ; ret 0x4875
0x00000000004562f1 : add byte ptr [rax], bh ; ret 0x774
0x0000000000451cad : add byte ptr [rax], bh ; ret 0xa74
0x0000000000791267 : add byte ptr [rax], bh ; ret 0xffe2
0x000000000079a2f7 : add byte ptr [rax], bh ; ret 0xffe6
0x00000000007474e3 : add byte ptr [rax], bh ; retf
0x00000000007b0027 : add byte ptr [rax], bh ; sti ; in eax, dx ; call qword ptr [rax]
0x0000000000775ec7 : add byte ptr [rax], bh ; sub esp, ebx ; jmp qword ptr [rax]
0x00000000007b6517 : add byte ptr [rax], bh ; test edi, ebp ; call rcx
0x00000000007956df : add byte ptr [rax], bl ; adc esp, ebp ; call rsp
0x0000000000500b68 : add byte ptr [rax], bl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007a9723 : add byte ptr [rax], bl ; add eax, 0xec9f9800 ; call rbx
0x000000000078f867 : add byte ptr [rax], bl ; add esp, edx ; jmp qword ptr [rdx]
0x000000000048281c : add byte ptr [rax], bl ; call rax
0x000000000077be37 : add byte ptr [rax], bl ; cmp al, 0xdd ; jmp qword ptr [rax]
0x000000000076acb7 : add byte ptr [rax], bl ; cwde ; fcos ; ret 0
0x00000000007bbe27 : add byte ptr [rax], bl ; div eax ; call qword ptr [rbx]
0x0000000000753be7 : add byte ptr [rax], bl ; fmul st(6), st(0) ; call rdi
0x00000000005a3bab : add byte ptr [rax], bl ; fnsave dword ptr [rax] ; jne 0x5a3b97 ; ret
0x0000000000738343 : add byte ptr [rax], bl ; fstp st(4), st(0) ; call rax
0x00000000007442e3 : add byte ptr [rax], bl ; fucomi st(5) ; call rax
0x00000000007ab227 : add byte ptr [rax], bl ; imul esp ; jmp qword ptr [rdi]
0x000000000077c737 : add byte ptr [rax], bl ; jl 0x77c71c ; call qword ptr [rsi]
0x000000000079fca7 : add byte ptr [rax], bl ; jno 0x79fc97 ; call qword ptr [rdi]
0x0000000000788717 : add byte ptr [rax], bl ; jo 0x7886ff ; jmp qword ptr [rax]
0x000000000074dbbf : add byte ptr [rax], bl ; mov cs, esp ; jmp qword ptr [rbx]
0x000000000076f727 : add byte ptr [rax], bl ; mov ds, edx ; jmp qword ptr [rsi]
0x00000000007542c7 : add byte ptr [rax], bl ; or edi, ecx ; call rsp
0x000000000077e5d7 : add byte ptr [rax], bl ; rcr ebp, -1 ; retf 1
0x0000000000402377 : add byte ptr [rax], bl ; ret
0x00000000007382c3 : add byte ptr [rax], bl ; ret 0xffd4
0x000000000079caa7 : add byte ptr [rax], bl ; ret 0xffe7
0x00000000007a1bf7 : add byte ptr [rax], bl ; retf -0x18
0x0000000000794e77 : add byte ptr [rax], bl ; retf -0x1c
0x000000000073a543 : add byte ptr [rax], bl ; retf -0x25
0x0000000000724e2f : add byte ptr [rax], bl ; retf 0x66
0x00000000007b6d17 : add byte ptr [rax], bl ; stosd dword ptr [rdi], eax ; out dx, eax ; call qword ptr [rbx]
0x00000000007b6a37 : add byte ptr [rax], bl ; xchg eax, esp ; out dx, eax ; call qword ptr [rdi]
0x00000000007a7c57 : add byte ptr [rax], ch ; adc ebp, esp ; jmp qword ptr [rax]
0x0000000000786ec7 : add byte ptr [rax], ch ; add ah, al ; jmp qword ptr [rdi]
0x000000000079ae77 : add byte ptr [rax], ch ; add al, 0xe7 ; jmp qword ptr [rbx]
0x00000000007366b0 : add byte ptr [rax], ch ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; rcl ecx, 1 ; jmp qword ptr [rax]
0x000000000078f6c7 : add byte ptr [rax], ch ; add edx, esp ; jmp qword ptr [rbx]
0x0000000000758fc7 : add byte ptr [rax], ch ; cmp dl, al ; call qword ptr [rdi]
0x000000000078a637 : add byte ptr [rax], ch ; fsub st(0) ; call qword ptr [rax]
0x00000000007a8b97 : add byte ptr [rax], ch ; in al, dx ; call qword ptr [rcx]
0x00000000007acaf7 : add byte ptr [rax], ch ; in eax, dx ; jmp qword ptr [rdx]
0x00000000007bed47 : add byte ptr [rax], ch ; jne 0x7bed40 ; jmp qword ptr [rcx]
0x00000000007ad397 : add byte ptr [rax], ch ; jns 0x7ad38c ; jmp qword ptr [rcx]
0x0000000000738c83 : add byte ptr [rax], ch ; jrcxz 0x738c61 ; call rax
0x0000000000789737 : add byte ptr [rax], ch ; mov ah, 0xe0 ; jmp rcx
0x00000000007b7287 : add byte ptr [rax], ch ; mov ah, 0xef ; call rsi
0x0000000000788d77 : add byte ptr [rax], ch ; mov al, ah ; jmp rax
0x000000000079a9df : add byte ptr [rax], ch ; mov bl, 0xc6 ; call qword ptr [rdx]
0x00000000007a2977 : add byte ptr [rax], ch ; or ecx, ebp ; call qword ptr [rsi]
0x00000000007b4747 : add byte ptr [rax], ch ; out dx, eax ; jmp qword ptr [rax]
0x00000000007b5377 : add byte ptr [rax], ch ; pop rbx ; out dx, eax ; jmp qword ptr [rcx]
0x00000000004023a7 : add byte ptr [rax], ch ; ret
0x0000000000756b1f : add byte ptr [rax], ch ; ret 0xffcf
0x00000000006dc97f : add byte ptr [rax], ch ; retf
0x00000000007aeda7 : add byte ptr [rax], ch ; retf -0x13
0x0000000000750f27 : add byte ptr [rax], ch ; retf -0x33
0x00000000007b0d27 : add byte ptr [rax], ch ; sbb ebp, esi ; jmp rdi
0x00000000007a9ca7 : add byte ptr [rax], ch ; scasd eax, dword ptr [rdi] ; in al, dx ; jmp rsp
0x000000000079b217 : add byte ptr [rax], cl ; adc esp, edi ; call qword ptr [rax]
0x0000000000582337 : add byte ptr [rax], cl ; add byte ptr [rax], al ; add al, ch ; call rsi
0x000000000054d237 : add byte ptr [rax], cl ; add byte ptr [rax], al ; add al, ch ; jmp qword ptr [rdi]
0x00000000005a1937 : add byte ptr [rax], cl ; add byte ptr [rax], al ; add al, ch ; jmp rax
0x0000000000723fe5 : add byte ptr [rax], cl ; add byte ptr [rbx], al ; or byte ptr [rax], al ; ret
0x0000000000723bc5 : add byte ptr [rax], cl ; add byte ptr [rdx], al ; or byte ptr [rax], al ; ret 0x800
0x0000000000723c05 : add byte ptr [rax], cl ; add byte ptr [rdx], cl ; or byte ptr [rax], al ; retf 0x800
0x000000000074ea6f : add byte ptr [rax], cl ; dec esp ; call qword ptr [rdx]
0x000000000078a737 : add byte ptr [rax], cl ; fchs ; jmp qword ptr [rax]
0x00000000007578ff : add byte ptr [rax], cl ; fcmove st(0), st(7) ; jmp qword ptr [rbx]
0x0000000000738ddb : add byte ptr [rax], cl ; int1 ; salc ; push qword ptr [rax - 0x1e] ; add al, byte ptr [rax] ; retf -0x290f
0x00000000006d28ce : add byte ptr [rax], cl ; mov byte ptr [rip + 0x33ab19], 8 ; ret
0x000000000077e257 : add byte ptr [rax], cl ; mov dh, 0xdd ; call rdi
0x000000000078fb87 : add byte ptr [rax], cl ; or edx, esp ; jmp qword ptr [rbx]
0x0000000000402347 : add byte ptr [rax], cl ; ret
0x0000000000779287 : add byte ptr [rax], cl ; ret 0xffdc
0x00000000007aa097 : add byte ptr [rax], cl ; ret 0xffec
0x00000000007bacc7 : add byte ptr [rax], cl ; ret 0xfff0
0x00000000006d971f : add byte ptr [rax], cl ; retf
0x000000000070c987 : add byte ptr [rax], cl ; retf 0x70
0x00000000007990f7 : add byte ptr [rax], cl ; sbb al, 0xe6 ; jmp rax
0x0000000000721198 : add byte ptr [rax], cl ; xor dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret
0x0000000000720d98 : add byte ptr [rax], cl ; xor dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0x1000
0x0000000000736b1b : add byte ptr [rax], dh ; adc dl, dl ; jmp rax
0x00000000007a7c6f : add byte ptr [rax], dh ; adc ebp, esp ; jmp qword ptr [rax]
0x00000000007486cb : add byte ptr [rax], dh ; adc esi, esi ; jmp qword ptr [rax]
0x00000000007485fb : add byte ptr [rax], dh ; add dh, dh ; call rax
0x0000000000748e73 : add byte ptr [rax], dh ; and dh, bh ; call rax
0x0000000000748e83 : add byte ptr [rax], dh ; and esi, edi ; jmp qword ptr [rax]
0x0000000000745e4b : add byte ptr [rax], dh ; call qword ptr [eax]
0x0000000000740393 : add byte ptr [rax], dh ; cmp ebp, esp ; call qword ptr [rax]
0x000000000073e69b : add byte ptr [rax], dh ; cmp edx, esp ; jmp qword ptr [rax]
0x00000000007464f3 : add byte ptr [rax], dh ; cmp esi, ebx ; jmp rax
0x000000000074a32b : add byte ptr [rax], dh ; fprem ; jmp rax
0x0000000000746ffb : add byte ptr [rax], dh ; hlt ; call qword ptr [rax]
0x00000000007af26f : add byte ptr [rax], dh ; in al, -0x13 ; call rax
0x00000000007439b3 : add byte ptr [rax], dh ; in al, dx ; call rax
0x00000000007bb68f : add byte ptr [rax], dh ; in eax, -0x10 ; call rbx
0x0000000000745433 : add byte ptr [rax], dh ; je 0x74542a ; jmp qword ptr [rax]
0x0000000000745abb : add byte ptr [rax], dh ; je 0x745ab3 ; call qword ptr [rax]
0x00000000007b8f7f : add byte ptr [rax], dh ; je 0x7b8f77 ; call qword ptr [rax]
0x00000000007a628f : add byte ptr [rax], dh ; jge 0x7a6282 ; call qword ptr [rsi]
0x00000000007a642f : add byte ptr [rax], dh ; jle 0x7a6422 ; call qword ptr [rdx]
0x000000000073ed53 : add byte ptr [rax], dh ; jmp rdx
0x0000000000746903 : add byte ptr [rax], dh ; jp 0x7468fe ; call qword ptr [rax]
0x000000000074e44f : add byte ptr [rax], dh ; jrcxz 0x74e423 ; call rsp
0x000000000078e20f : add byte ptr [rax], dh ; leave ; loope 0x78e218 ; retf
0x0000000000748b73 : add byte ptr [rax], dh ; loope 0x748b71 ; call rax
0x00000000007aae2f : add byte ptr [rax], dh ; loopne 0x7aae23 ; jmp qword ptr [rdi]
0x0000000000774ddf : add byte ptr [rax], dh ; mov ah, 0xdb ; jmp qword ptr [rax]
0x0000000000746ad3 : add byte ptr [rax], dh ; mov ah, 0xf3 ; jmp qword ptr [rax]
0x0000000000745b4b : add byte ptr [rax], dh ; mov al, 0xf0 ; jmp qword ptr [rax]
0x0000000000743e03 : add byte ptr [rax], dh ; mov bl, 0xec ; call rax
0x000000000073d39b : add byte ptr [rax], dh ; mov dh, 0xe0 ; call rax
0x000000000078dc3f : add byte ptr [rax], dh ; mov dl, 0xe1 ; jmp qword ptr [rax]
0x0000000000558a48 : add byte ptr [rax], dh ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000744043 : add byte ptr [rax], dh ; movsxd rbp, ebp ; call qword ptr [rax]
0x00000000007d1369 : add byte ptr [rax], dh ; or al, ch ; add al, byte ptr [rax] ; cmp al, byte ptr [rsi] ; retf 2
0x000000000073a9e3 : add byte ptr [rax], dh ; or bl, ch ; call qword ptr [rax]
0x0000000000748693 : add byte ptr [rax], dh ; or dh, dh ; call qword ptr [rax]
0x0000000000748543 : add byte ptr [rax], dh ; out dx, eax ; cmc ; jmp qword ptr [rax]
0x0000000000747cf3 : add byte ptr [rax], dh ; pop rdx ; cmc ; jmp rax
0x00000000007452e3 : add byte ptr [rax], dh ; push rcx ; out dx, eax ; call qword ptr [rax]
0x0000000000745d93 : add byte ptr [rax], dh ; push rsi ; call rax
0x00000000004023bf : add byte ptr [rax], dh ; ret
0x00000000006f633f : add byte ptr [rax], dh ; ret 0x52
0x00000000006fa2b7 : add byte ptr [rax], dh ; ret 0x53
0x000000000073f4d3 : add byte ptr [rax], dh ; ret 0xffe3
0x0000000000717c87 : add byte ptr [rax], dh ; retf
0x00000000007b7abf : add byte ptr [rax], dh ; retf -0x11
0x000000000074a263 : add byte ptr [rax], dh ; sar al, cl ; call rax
0x000000000074b303 : add byte ptr [rax], dh ; scasd eax, dword ptr [rdi] ; stc ; jmp rax
0x000000000074a933 : add byte ptr [rax], dh ; stc ; call qword ptr [rax]
0x000000000074aa83 : add byte ptr [rax], dh ; stc ; call rax
0x000000000074800b : add byte ptr [rax], dh ; stosd dword ptr [rdi], eax ; cmc ; jmp rax
0x00000000007a9b2f : add byte ptr [rax], dh ; stosd dword ptr [rdi], eax ; in al, dx ; call qword ptr [rax]
0x000000000077068f : add byte ptr [rax], dh ; test al, 0xda ; jmp qword ptr [rcx]
0x0000000000746b5b : add byte ptr [rax], dh ; xlatb ; jmp qword ptr [rax]
0x00000000007415fb : add byte ptr [rax], dh ; xor al, 0xe7 ; jmp rax
0x000000000074a83b : add byte ptr [rax], dh ; xor al, 0xf9 ; jmp qword ptr [rax]
0x0000000000772bff : add byte ptr [rax], dh ; xor bl, bl ; jmp rax
0x00000000007b13cf : add byte ptr [rax], dh ; xor esi, ebp ; jmp rsi
0x000000000077f7ff : add byte ptr [rax], dh ; xor esi, ebx ; jmp rax
0x000000000073cd23 : add byte ptr [rax], dh ; xor esp, eax ; call rax
0x0000000000741493 : add byte ptr [rax], dl ; adc bh, ah ; jmp rax
0x000000000074b62b : add byte ptr [rax], dl ; adc bh, dl ; jmp qword ptr [rax]
0x000000000079b1ff : add byte ptr [rax], dl ; adc esp, edi ; call qword ptr [rax]
0x000000000079ae5f : add byte ptr [rax], dl ; add al, 0xe7 ; jmp qword ptr [rcx]
0x000000000073b70b : add byte ptr [rax], dl ; add bl, dh ; call qword ptr [rax]
0x00000000007a78ff : add byte ptr [rax], dl ; add ch, ah ; jmp rdi
0x000000000078f6af : add byte ptr [rax], dl ; add edx, esp ; jmp qword ptr [rdx]
0x00000000007b00cf : add byte ptr [rax], dl ; cld ; in eax, dx ; jmp rdx
0x000000000074857b : add byte ptr [rax], dl ; cmc ; cmc ; jmp qword ptr [rax]
0x00000000007456a3 : add byte ptr [rax], dl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; out dx, eax ; call qword ptr [rax]
0x00000000007bbe5f : add byte ptr [rax], dl ; div eax ; call qword ptr [rdi]
0x00000000007aaa9f : add byte ptr [rax], dl ; fucomi st(4) ; call qword ptr [rdx]
0x000000000074702b : add byte ptr [rax], dl ; hlt ; jmp rax
0x00000000007439f3 : add byte ptr [rax], dl ; in al, dx ; jmp qword ptr [rax]
0x0000000000757c17 : add byte ptr [rax], dl ; iretd ; call qword ptr [rcx]
0x000000000073bd83 : add byte ptr [rax], dl ; jl 0x73bd69 ; jmp qword ptr [rax]
0x000000000073d723 : add byte ptr [rax], dl ; jmp rax
0x000000000073e99b : add byte ptr [rax], dl ; jo 0x73e985 ; call rax
0x00000000007471ab : add byte ptr [rax], dl ; jo 0x7471a7 ; call rax
0x000000000074d4a7 : add byte ptr [rax], dl ; jo 0x74d47b ; call rcx
0x000000000073c6e3 : add byte ptr [rax], dl ; js 0x73c6ca ; call qword ptr [rax]
0x00000000007472d3 : add byte ptr [rax], dl ; mov ah, 0xf4 ; jmp qword ptr [rax]
0x0000000000749dbb : add byte ptr [rax], dl ; mov bh, al ; jmp rax
0x00000000007b66ef : add byte ptr [rax], dl ; mov bh, ch ; call qword ptr [rbx]
0x00000000007480fb : add byte ptr [rax], dl ; mov bl, 0xf5 ; jmp qword ptr [rax]
0x000000000073c8f3 : add byte ptr [rax], dl ; mov dl, 0xdf ; call rax
0x000000000073f363 : add byte ptr [rax], dl ; mov dl, 0xe3 ; jmp rax
0x000000000074b10b : add byte ptr [rax], dl ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x000000000073d76b : add byte ptr [rax], dl ; or al, 0xe1 ; call qword ptr [rax]
0x00000000007a29af : add byte ptr [rax], dl ; or ch, cl ; call qword ptr [rsi]
0x0000000000742013 : add byte ptr [rax], dl ; or ebp, eax ; jmp qword ptr [rax]
0x000000000073ff4b : add byte ptr [rax], dl ; or esp, ebp ; call rax
0x000000000074400b : add byte ptr [rax], dl ; pop rdx ; in eax, dx ; jmp qword ptr [rax]
0x000000000074aa33 : add byte ptr [rax], dl ; pop rsp ; stc ; call qword ptr [rax]
0x00000000007492e3 : add byte ptr [rax], dl ; push 0xf7 ; jmp rax
0x0000000000747063 : add byte ptr [rax], dl ; push rax ; hlt ; jmp rax
0x00000000007452d3 : add byte ptr [rax], dl ; push rcx ; out dx, eax ; jmp rax
0x000000000040235f : add byte ptr [rax], dl ; ret
0x000000000070f12f : add byte ptr [rax], dl ; ret 0x59
0x000000000076c1cf : add byte ptr [rax], dl ; ret 0xffd9
0x00000000007aa0af : add byte ptr [rax], dl ; ret 0xffec
0x0000000000744293 : add byte ptr [rax], dl ; ret 0xffed
0x00000000007bacaf : add byte ptr [rax], dl ; ret 0xfff0
0x0000000000748983 : add byte ptr [rax], dl ; ret 0xfff6
0x000000000071e547 : add byte ptr [rax], dl ; retf
0x000000000074b453 : add byte ptr [rax], dl ; sar cl, cl ; call qword ptr [rax]
0x000000000074016b : add byte ptr [rax], dl ; sbb esp, ebp ; jmp qword ptr [rax]
0x0000000000747feb : add byte ptr [rax], dl ; stosb byte ptr [rdi], al ; cmc ; jmp qword ptr [rax]
0x00000000007b6cff : add byte ptr [rax], dl ; stosd dword ptr [rdi], eax ; out dx, eax ; call qword ptr [rcx]
0x000000000079c57f : add byte ptr [rax], dl ; test al, 0xe7 ; call rsp
0x000000000074aedb : add byte ptr [rax], dl ; xchg eax, ebp ; stc ; call qword ptr [rax]
0x00000000007460a3 : add byte ptr [rax], dl ; xchg eax, ecx ; jmp rax
0x000000000073accb : add byte ptr [rax], dl ; xor ebp, ebx ; call qword ptr [rax]
0x00000000007b7ae8 : add byte ptr [rax], r8b ; add ah, ah ; ret
0x0000000000778240 : add byte ptr [rax], r8b ; add ah, bh ; retf 2
0x0000000000788220 : add byte ptr [rax], r8b ; add ah, bl ; retf 3
0x000000000076c338 : add byte ptr [rax], r8b ; add ah, dh ; or eax, dword ptr [rdx] ; add al, al ; ret
0x00000000006dcb0a : add byte ptr [rax], r8b ; add byte ptr [rax], al ; add al, cl ; retf 0x6d
0x00000000006dea2a : add byte ptr [rax], r8b ; add byte ptr [rax], al ; add byte ptr [rdx], bl ; retf 0x4c
0x000000000074fb85 : add byte ptr [rax], r8b ; add byte ptr [rsi - 0x33], al ; call rdx
0x00000000006a5ca5 : add byte ptr [rax], r8b ; add rsp, 0x40 ; pop rbx ; ret
0x00000000006a5aa5 : add byte ptr [rax], r8b ; add rsp, 0x48 ; ret
0x00000000005252f5 : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006bc57d : add byte ptr [rax], r8b ; cmp dil, sil ; sete al ; ret
0x00000000006c7ddd : add byte ptr [rax], r8b ; cmp dword ptr [rdi], -1 ; je 0x6c7df8 ; ret
0x00000000006c7bdd : add byte ptr [rax], r8b ; cmp dword ptr [rdi], -1 ; sete al ; ret
0x000000000057198d : add byte ptr [rax], r8b ; cmp esi, 1 ; setne al ; ret
0x000000000053ed3d : add byte ptr [rax], r8b ; cmp esi, dword ptr [rdi + 0x10] ; jg 0x53ed4e ; ret
0x000000000054e8cd : add byte ptr [rax], r8b ; cmp r9, rdi ; sete al ; ret
0x00000000006a5e55 : add byte ptr [rax], r8b ; fchs ; add rsp, 0x28 ; ret
0x00000000006a4845 : add byte ptr [rax], r8b ; fstp st(0) ; fld1 ; ret
0x00000000006a5b95 : add byte ptr [rax], r8b ; fstp st(1) ; add rsp, 0x28 ; ret
0x0000000000526ba5 : add byte ptr [rax], r8b ; lea edx, dword ptr [rsi + 1] ; mov rax, rdi ; ret
0x00000000006a07ed : add byte ptr [rax], r8b ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000049c993 : add byte ptr [rax], r8b ; leave ; ret
0x0000000000689b8d : add byte ptr [rax], r8b ; lock add dword ptr [rdi + 4], 1 ; ret
0x0000000000542aad : add byte ptr [rax], r8b ; lock add dword ptr [rdi], 1 ; ret
0x00000000006cdf1d : add byte ptr [rax], r8b ; mov byte ptr [rbx], 0 ; jmp 0x6cdeef
0x000000000050341d : add byte ptr [rax], r8b ; mov byte ptr [rdi + 0x10], sil ; ret
0x000000000057b8fd : add byte ptr [rax], r8b ; mov byte ptr [rdi], sil ; ret
0x00000000006cbb5d : add byte ptr [rax], r8b ; mov dword ptr [rdi + 4], esi ; ret
0x00000000006b6b1d : add byte ptr [rax], r8b ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + 4], edx ; ret
0x000000000068ea1d : add byte ptr [rax], r8b ; mov dword ptr [rdi], esi ; ret
0x0000000000536f0d : add byte ptr [rax], r8b ; mov eax, 0x100 ; ret
0x000000000065bf1d : add byte ptr [rax], r8b ; mov eax, 0x180 ; ret
0x00000000006bfd2d : add byte ptr [rax], r8b ; mov eax, 0x1c0 ; ret
0x00000000006b2265 : add byte ptr [rax], r8b ; mov eax, 0x200000 ; ret
0x00000000006a5e7d : add byte ptr [rax], r8b ; mov eax, 0x2c0 ; ret
0x000000000068190d : add byte ptr [rax], r8b ; mov eax, 0x40 ; ret
0x000000000068fe1d : add byte ptr [rax], r8b ; mov eax, 0x400 ; ret
0x00000000006c674d : add byte ptr [rax], r8b ; mov eax, 0x80 ; ret
0x00000000006bea1d : add byte ptr [rax], r8b ; mov eax, 0xa0cce8 ; ret
0x000000000053ad4d : add byte ptr [rax], r8b ; mov eax, 0xc0 ; ret
0x000000000065e505 : add byte ptr [rax], r8b ; mov eax, 0xfffffffe ; ret
0x0000000000659c6d : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000006784b5 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000068e135 : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x000000000059bcdd : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x10] ; ret
0x0000000000506b8d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x20] ; ret
0x000000000066784d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x64] ; ret
0x000000000067414d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x84] ; ret
0x0000000000507d7d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x507d90 ; ret
0x0000000000521ffd : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x522010 ; ret
0x000000000052207d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x522090 ; ret
0x00000000005220fd : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x522110 ; ret
0x0000000000542acd : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x542ae0 ; ret
0x000000000054dabd : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x54dad0 ; ret
0x000000000055600d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x556020 ; ret
0x0000000000566fed : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x567000 ; ret
0x00000000005718fd : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x571910 ; ret
0x000000000058ed6d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x58ed80 ; ret
0x000000000058eded : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x58ee00 ; ret
0x000000000058ee6d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x58ee80 ; ret
0x00000000005a2b3d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x5a2b50 ; ret
0x00000000005a8abd : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x5a8ad0 ; ret
0x0000000000626dfd : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x626e10 ; ret
0x00000000006cdc5d : add byte ptr [rax], r8b ; mov eax, dword ptr [rip + 0x33f6fa] ; ret
0x00000000005482bd : add byte ptr [rax], r8b ; mov eax, dword ptr [rip + 0x4b5d9a] ; ret
0x000000000053882d : add byte ptr [rax], r8b ; mov eax, edi ; ret
0x000000000054a1bd : add byte ptr [rax], r8b ; mov eax, esi ; ret
0x00000000006772fd : add byte ptr [rax], r8b ; mov eax, r8d ; sub eax, edi ; ret
0x00000000006b291d : add byte ptr [rax], r8b ; mov qword ptr [rdi], rsi ; ret
0x000000000063eabd : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi + 0x10] ; ret
0x00000000005c313d : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000006ce5fd : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi] ; ret
0x00000000006aac6d : add byte ptr [rax], r8b ; mov rax, rdi ; mov rdx, rsi ; ret
0x000000000066d00d : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x00000000006aacdd : add byte ptr [rax], r8b ; movzx eax, byte ptr [rdi + 0x10] ; ret
0x000000000068f54d : add byte ptr [rax], r8b ; movzx eax, byte ptr [rdi - 0x1b] ; ret
0x000000000051c2e5 : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000505bbd : add byte ptr [rax], r8b ; ret
0x000000000075059d : add byte ptr [rax], r8b ; retf -0x325c
0x00000000007cc22d : add byte ptr [rax], r8b ; retf 0x1d08
0x00000000007d8bfa : add byte ptr [rax], r8b ; retf 0x506
0x00000000007dbe81 : add byte ptr [rax], r8b ; ror dword ptr [rdx], 5 ; pushfq ; or eax, dword ptr [rax] ; retf
0x00000000006c67ed : add byte ptr [rax], r8b ; test dil, dil ; setne al ; ret
0x00000000005861ed : add byte ptr [rax], r8b ; test esi, esi ; jne 0x5861ff ; ret
0x000000000065881d : add byte ptr [rax], r8b ; test rdi, rdi ; je 0x65882e ; ret
0x00000000006a60ad : add byte ptr [rax], r8b ; test rdi, rdi ; je 0x6a60be ; ret
0x000000000053ade5 : add byte ptr [rax], r8b ; test rdx, rdx ; sete al ; ret
0x000000000052598d : add byte ptr [rax], r8b ; test rsi, rsi ; setne al ; ret
0x00000000007e5c04 : add byte ptr [rax], r8b ; xchg eax, ebp ; add al, 5 ; ret
0x00000000005faed5 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x00000000006cba8d : add byte ptr [rax], r8b ; xor eax, eax ; cmp dl, cl ; je 0x6cbaa9 ; ret
0x00000000006621a5 : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000664585 : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x0000000000506add : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000054e135 : add byte ptr [rax], r8b ; xor eax, eax ; xor edx, edx ; ret
0x000000000060a715 : add byte ptr [rax], r8b ; xor ebx, ebx ; jmp 0x60a6e5
0x00000000006a863d : add byte ptr [rax], r8b ; xor edx, edx ; mov rax, rbx ; pop rbx ; ret
0x0000000000506b75 : add byte ptr [rax], r8b ; xor edx, edx ; xor eax, eax ; ret
0x000000000050f8ac : add byte ptr [rbp + 0x11], dh ; test al, 1 ; jne 0x50f8e3 ; xor esi, esi ; jmp rax
0x0000000000561dd4 : add byte ptr [rbp + 0x144034e], cl ; retf -0x97b
0x000000000057e65f : add byte ptr [rbp + 0x16], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000007d455b : add byte ptr [rbp + 0x170a], bl ; retf 0x50a
0x00000000007e6a35 : add byte ptr [rbp + 0x2403], dl ; retf
0x00000000007f14c2 : add byte ptr [rbp + 0x2e02], bl ; retf
0x000000000063b367 : add byte ptr [rbp + 0x31], al ; in al, -0x15 ; ret 0x1f0f
0x00000000006c59ed : add byte ptr [rbp + 0x36], dh ; mov eax, edx ; pop rbx ; ret
0x00000000005fac6f : add byte ptr [rbp + 0x39], al ; ret 0xb07e
0x000000000069f399 : add byte ptr [rbp + 0x39], al ; retf 0x2374
0x000000000050ef30 : add byte ptr [rbp + 0x39], cl ; in eax, 0xf ; popfq ; ret 0x854d
0x00000000006886b7 : add byte ptr [rbp + 0x39], cl ; ret
0x000000000053f22b : add byte ptr [rbp + 0x39], cl ; ret 0x894c
0x00000000006885b7 : add byte ptr [rbp + 0x39], cl ; retf
0x00000000006cbcf7 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000067fa91 : add byte ptr [rbp + 0x448dc014], cl ; push rax ; ret
0x000000000068e0ea : add byte ptr [rbp + 0x480575c0], al ; add esp, 8 ; ret
0x0000000000530f4a : add byte ptr [rbp + 0x490f48db], al ; ret
0x00000000007ded57 : add byte ptr [rbp + 0x504], ch ; ret 0x504
0x00000000007fbc07 : add byte ptr [rbp + 0x512], bh ; ret 0x5a12
0x000000000047e35c : add byte ptr [rbp + 0x58], 0 ; call rax
0x0000000000554534 : add byte ptr [rbp + 0x58], dh ; mov rdi, rbp ; call rax
0x000000000050fd24 : add byte ptr [rbp + 0x5b0774c0], al ; pop rbp ; pop r12 ; ret
0x000000000056257d : add byte ptr [rbp + 0x6348071c], cl ; fisttp dword ptr [rax + 0x69] ; ret
0x00000000006b0789 : add byte ptr [rbp + 0x63], cl ; dec dword ptr [rax + 0x29] ; ret 0x14c
0x00000000004f57a1 : add byte ptr [rbp + 0x63], cl ; ret
0x00000000005017df : add byte ptr [rbp + 0x63], cl ; retf 0x6349
0x0000000000502907 : add byte ptr [rbp + 0x63], cl ; ror byte ptr [rdx - 0x7f], 0x7c ; ret 0xa048
0x000000000056e351 : add byte ptr [rbp + 0x69480150], cl ; rol byte ptr [rax], cl ; retf 0x3b9a
0x00000000005fc96d : add byte ptr [rbp + 0x69480178], cl ; inc dword ptr [rax] ; retf 0x3b9a
0x000000000067495d : add byte ptr [rbp + 0x72], ah ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x4388
0x0000000000675b8b : add byte ptr [rbp + 0x72], ah ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x4788
0x0000000000675b8a : add byte ptr [rbp + 0x72], spl ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x4788
0x000000000074ac30 : add byte ptr [rbp + 0x7dc00008], al ; stc ; jmp qword ptr [rax]
0x0000000000744988 : add byte ptr [rbp + 0x7fb00006], bl ; out dx, al ; jmp qword ptr [rax]
0x00000000007e4b59 : add byte ptr [rbp + 0x902], bl ; retf
0x00000000007e2e69 : add byte ptr [rbp + 0xb], al ; retf
0x000000000057e6ba : add byte ptr [rbp + 0xb], dh ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000066b431 : add byte ptr [rbp + 0xc], dh ; add rsp, 8 ; ret
0x000000000055eb60 : add byte ptr [rbp + 0xd], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000007e9e78 : add byte ptr [rbp + 0xe], dh ; retf
0x000000000052196e : add byte ptr [rbp + 0xf], dh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000007dc567 : add byte ptr [rbp + 0xf], dh ; retf 0x50f
0x00000000007e608a : add byte ptr [rbp + 0xfc7060f], ah ; add al, al ; syscall
0x00000000007d58de : add byte ptr [rbp + 3], cl ; retf
0x0000000000799c73 : add byte ptr [rbp + 4], ch ; add byte ptr [rax + 0x51], bl ; out 0xff, al ; ret 0
0x0000000000536f76 : add byte ptr [rbp + 4], dh ; movzx eax, byte ptr [rdi + 0x1f] ; ret
0x00000000007bf9ac : add byte ptr [rbp + 5], ah ; push 3 ; test dword ptr [rcx], eax ; ret
0x00000000007a9ca3 : add byte ptr [rbp + 5], bl ; add byte ptr [rax], ch ; scasd eax, dword ptr [rdi] ; in al, dx ; jmp rsp
0x00000000007d25ce : add byte ptr [rbp + 5], ch ; ret
0x00000000007d86fe : add byte ptr [rbp + 5], cl ; ret
0x00000000007ecc23 : add byte ptr [rbp + 5], dh ; lodsd eax, dword ptr [rsi] ; or al, 0 ; ret 0x501
0x00000000007e2014 : add byte ptr [rbp + 5], dl ; ret
0x00000000007d25c9 : add byte ptr [rbp + 6], bl ; mov cl, 3 ; add byte ptr [rbp + 5], ch ; ret
0x000000000043cf7b : add byte ptr [rbp + 6], dh ; add dword ptr [rbp - 0x34], 1 ; jmp 0x43cf57
0x000000000043d36b : add byte ptr [rbp + 6], dh ; add dword ptr [rbp - 0x34], 1 ; jmp 0x43d347
0x000000000044833d : add byte ptr [rbp + 6], dh ; add dword ptr [rbp - 0x34], 1 ; jmp 0x448319
0x0000000000458ff1 : add byte ptr [rbp + 6], dh ; add dword ptr [rbp - 0x34], 1 ; jmp 0x458fcd
0x0000000000461deb : add byte ptr [rbp + 6], dh ; add dword ptr [rbp - 0x34], 1 ; jmp 0x461dc7
0x000000000046baeb : add byte ptr [rbp + 6], dh ; add dword ptr [rbp - 0x34], 1 ; jmp 0x46bac7
0x0000000000479d23 : add byte ptr [rbp + 6], dh ; add dword ptr [rbp - 0x34], 1 ; jmp 0x479cff
0x000000000049be67 : add byte ptr [rbp + 6], dh ; add dword ptr [rbp - 0x34], 1 ; jmp 0x49be43
0x000000000066b84f : add byte ptr [rbp + 6], dh ; ret
0x00000000005bfc86 : add byte ptr [rbp + 7], dh ; ret
0x000000000060fb84 : add byte ptr [rbp + 9], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006d1d74 : add byte ptr [rbp + 9], dh ; mov rax, rbx ; pop rbx ; ret
0x00000000006d1d73 : add byte ptr [rbp + 9], sil ; mov rax, rbx ; pop rbx ; ret
0x00000000005280cf : add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x28 ; ret
0x000000000050a772 : add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x38 ; ret
0x00000000007c93a8 : add byte ptr [rbp + rax + 0x5b305], ch ; retf
0x00000000007c3eb2 : add byte ptr [rbp + rax + 0x5bb2f], cl ; retf 0x505
0x0000000000761727 : add byte ptr [rbp + rax - 0x2c], ah ; call qword ptr [rax]
0x00000000007b3cb3 : add byte ptr [rbp + rax*4 + 0x2b480006], ch ; out dx, eax ; call qword ptr [rbx]
0x00000000007b3c6b : add byte ptr [rbp + rax*4 + 6], ah ; add byte ptr [rax], ah ; sub ebp, edi ; jmp qword ptr [rcx]
0x0000000000767cc3 : add byte ptr [rbp + rax*8 + 0x145c0001], bh ; xlatb ; jmp qword ptr [rbx]
0x00000000007a7c6b : add byte ptr [rbp + rax*8 + 5], ah ; add byte ptr [rax], dh ; adc ebp, esp ; jmp qword ptr [rax]
0x00000000007a7c53 : add byte ptr [rbp + rax*8 + 5], cl ; add byte ptr [rax], ch ; adc ebp, esp ; jmp qword ptr [rax]
0x0000000000792ae7 : add byte ptr [rbp + rax*8 - 0x1d], dh ; jmp qword ptr [rdx]
0x0000000000757c73 : add byte ptr [rbp + rax*8], ch ; add byte ptr [rax], al ; iretd ; call qword ptr [rbx]
0x00000000007e5465 : add byte ptr [rbp + rbp + 0x2dc205], bl ; retf 0x62d
0x000000000078e49b : add byte ptr [rbp + rbp + 4], dl ; add byte ptr [rax - 0x2f], dh ; loope 0x78e4ac ; ret
0x000000000078246b : add byte ptr [rbp + rbp*2 + 3], ah ; add al, ah ; fcomp st(6) ; jmp qword ptr [rcx]
0x000000000073862b : add byte ptr [rbp + rbp*8 - 0x2b], cl ; call rax
0x00000000007ad4ab : add byte ptr [rbp + rbx - 0x751ffffa], ah ; in eax, dx ; jmp qword ptr [rax]
0x00000000007554db : add byte ptr [rbp + rbx*4 + 0x74c00000], dl ; iretd ; call rsp
0x000000000079548b : add byte ptr [rbp + rbx*4 + 4], al ; add byte ptr [rsi], ch ; add ah, ch ; call rsp
0x0000000000755483 : add byte ptr [rbp + rbx*4], bh ; add byte ptr [rsi + 0x73], ch ; iretd ; call qword ptr [rcx]
0x000000000074d4a3 : add byte ptr [rbp + rbx], bl ; add byte ptr [rax], dl ; jo 0x74d47f ; call rcx
0x00000000007edc52 : add byte ptr [rbp + rcx + 0x128d05], dh ; retf 0x490d
0x00000000007ac4bb : add byte ptr [rbp + rcx + 0x46cc0006], dh ; in eax, dx ; call qword ptr [rbx]
0x00000000007ac4a3 : add byte ptr [rbp + rcx + 0x46d00006], bl ; in eax, dx ; call qword ptr [rbx]
0x00000000007ac48b : add byte ptr [rbp + rcx + 0x46d40006], al ; in eax, dx ; call qword ptr [rbx]
0x00000000007ac473 : add byte ptr [rbp + rcx + 6], ch ; add al, bl ; in eax, dx ; call qword ptr [rbx]
0x00000000007ac45b : add byte ptr [rbp + rcx + 6], dl ; add ah, bl ; in eax, dx ; call qword ptr [rbx]
0x000000000075e327 : add byte ptr [rbp + rcx - 0x2e], dh ; call qword ptr [rbx]
0x0000000000692265 : add byte ptr [rbp + rcx*4 + 0x4a], al ; add dword ptr [rcx + 0x29], ecx ; retf 0x3846
0x00000000005108f9 : add byte ptr [rbp + rcx*4 + 0x68], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00000000007628af : add byte ptr [rbp + rcx*4 - 0x2c], bl ; jmp qword ptr [rbx]
0x00000000007af493 : add byte ptr [rbp + rdi - 0x16e7fffa], cl ; in eax, dx ; jmp rbx
0x00000000007b34ab : add byte ptr [rbp + rdi*2 + 0x18e00006], ah ; out dx, eax ; jmp qword ptr [rcx]
0x0000000000767483 : add byte ptr [rbp + rdi*4 + 1], bh ; add byte ptr [rsi + 0x70], bl ; salc ; call rax
0x0000000000795767 : add byte ptr [rbp + rdx - 0x1b], bh ; jmp qword ptr [rbx]
0x0000000000754ce3 : add byte ptr [rbp + rdx*4 + 0x49b80000], bl ; iretd ; call rsp
0x0000000000754c93 : add byte ptr [rbp + rdx*4], cl ; add ah, dl ; iretd ; call rbx
0x000000000079d007 : add byte ptr [rbp + rdx*8 - 0x19], ch ; call qword ptr [rbx]
0x0000000000792c73 : add byte ptr [rbp + rsi*2 + 4], ch ; add byte ptr [rax], cl ; retf
0x0000000000792c53 : add byte ptr [rbp + rsi*2 + 4], cl ; add al, ch ; retf -0x1d
0x00000000007a2c8b : add byte ptr [rbp + rsi*2 + 5], al ; add al, ah ; jmp 0x7aef9f
0x00000000007b2c73 : add byte ptr [rbp + rsi*2 + 6], ch ; add al, cl ; out dx, al ; jmp rsp
0x0000000000734373 : add byte ptr [rbp + rsi*2 - 0x33], ah ; call rax
0x0000000000735d9b : add byte ptr [rbp + rsi*4 - 0x30], dl ; call qword ptr [rax]
0x000000000076acb3 : add byte ptr [rbp + rsi*8 + 1], ch ; add byte ptr [rax], bl ; cwde ; fcos ; ret 0
0x00000000007bacc3 : add byte ptr [rbp + rsi*8 + 6], bh ; add byte ptr [rax], cl ; ret 0xfff0
0x000000000076772f : add byte ptr [rbp + rsi*8 - 0x2a], bh ; jmp qword ptr [rax]
0x0000000000737d2b : add byte ptr [rbp + rsi*8 - 0x2d], ch ; call rax
0x000000000069f5dd : add byte ptr [rbp - 0x10], dh ; mov eax, 1 ; ret
0x000000000050fbde : add byte ptr [rbp - 0x11], dh ; ret
0x000000000068eaff : add byte ptr [rbp - 0x12], dh ; ret
0x00000000006a8950 : add byte ptr [rbp - 0x13], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000068ed58 : add byte ptr [rbp - 0x13], dh ; ret
0x00000000005086d1 : add byte ptr [rbp - 0x14], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000050be9b : add byte ptr [rbp - 0x16], dh ; ret
0x00000000006a41ac : add byte ptr [rbp - 0x17], dh ; ret
0x000000000052325d : add byte ptr [rbp - 0x17ba8740], al ; retf
0x00000000005503b0 : add byte ptr [rbp - 0x1b], dh ; ret
0x000000000068e9c1 : add byte ptr [rbp - 0x1c], dh ; ret
0x000000000073c64c : add byte ptr [rbp - 0x21], dh ; jmp qword ptr [rax]
0x00000000006c6976 : add byte ptr [rbp - 0x21], dh ; ret
0x00000000005a3baf : add byte ptr [rbp - 0x22], dh ; ret
0x000000000067f9e5 : add byte ptr [rbp - 0x23], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000005a3b7a : add byte ptr [rbp - 0x25], dh ; ret
0x000000000053216b : add byte ptr [rbp - 0x26], dh ; ret
0x0000000000598fe4 : add byte ptr [rbp - 0x27], dh ; ret
0x00000000007cab22 : add byte ptr [rbp - 0x2cfafe67], ah ; cdq ; add dword ptr [rax], eax ; ret 0x199
0x00000000006c5a58 : add byte ptr [rbp - 0x35], dh ; mov eax, edx ; pop rbx ; ret
0x0000000000744d08 : add byte ptr [rbp - 0x35edfffa], ch ; out dx, al ; jmp qword ptr [rax]
0x000000000066418e : add byte ptr [rbp - 0x39], dh ; ret
0x000000000067b326 : add byte ptr [rbp - 0x3c7cddb5], cl ; and ecx, dword ptr [rdi] ; ret
0x00000000005ce0b8 : add byte ptr [rbp - 0x3db7f040], al ; nop ; nop ; pop rbp ; ret
0x0000000000517e7f : add byte ptr [rbp - 0x3db7f040], al ; ret
0x00000000006cb5ac : add byte ptr [rbp - 0x3f6af025], al ; pop rbx ; ret
0x00000000005ce5f9 : add byte ptr [rbp - 0x3f6af040], al ; nop ; leave ; ret
0x000000000061e548 : add byte ptr [rbp - 0x3f6bf040], al ; nop ; pop rbp ; ret
0x00000000006b6e19 : add byte ptr [rbp - 0x40f0b725], al ; ror byte ptr [rdi], 0x49 ; retf
0x00000000004ad69e : add byte ptr [rbp - 0x41eb8640], al ; retf
0x0000000000679501 : add byte ptr [rbp - 0x4b], dh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000007f32b2 : add byte ptr [rbp - 0x4f61fa9f], bh ; add dword ptr [rax], eax ; ret 0x3361
0x00000000007f3ab9 : add byte ptr [rbp - 0x5cd2fe5b], al ; pushfq ; add dword ptr [rax], eax ; ret
0x00000000007f39f9 : add byte ptr [rbp - 0x5cfafe60], dh ; pushfq ; add dword ptr [rax], eax ; retf
0x0000000000755cf3 : add byte ptr [rbp - 0x5fc60000], ch ; iretd ; call qword ptr [rax]
0x00000000007fa874 : add byte ptr [rbp - 0x69fafe6c], ah ; jbe 0x7fa884 ; retf 0x194
0x00000000006b970b : add byte ptr [rbp - 0x73], al ; jl 0x6b973c ; adc byte ptr [rdi], cl ; ret 0x8d41
0x0000000000686daf : add byte ptr [rbp - 0x73], al ; push rsi ; add dword ptr [rcx + 0x63], ecx ; ret 0x67e9
0x00000000005062d7 : add byte ptr [rbp - 0x76b6eefc], cl ; loopne 0x506270 ; retf
0x0000000000526ba7 : add byte ptr [rbp - 0x76b7feaa], cl ; clc ; ret
0x00000000005085df : add byte ptr [rbp - 0x76b7febe], cl ; ret 0x2948
0x00000000006c582f : add byte ptr [rbp - 0x76bafebf], cl ; retf
0x000000000069d6bf : add byte ptr [rbp - 0x77], al ; ret
0x00000000006669ad : add byte ptr [rbp - 0x77], al ; ret 0x4566
0x0000000000664700 : add byte ptr [rbp - 0x77], cl ; fisttp word ptr [rcx - 0x77] ; ret
0x00000000005f57a3 : add byte ptr [rbp - 0x77], cl ; ret 0x894d
0x0000000000576364 : add byte ptr [rbp - 0x7b], cl ; div byte ptr [rdi + rcx*2 - 0x18] ; ret
0x0000000000559d8f : add byte ptr [rbp - 0x7b], cl ; in al, 0xf ; xchg eax, esp ; ret
0x000000000060b785 : add byte ptr [rbp - 0x7c], al ; dec dword ptr [rdi] ; ret
0x000000000068ebdf : add byte ptr [rbp - 0x7cb7feb2], cl ; ret 0x8008
0x00000000006bcaa3 : add byte ptr [rbp - 0x7cfbfca4], cl ; ret
0x00000000006614a2 : add byte ptr [rbp - 0x9f38b2e], al ; ret 0xc602
0x00000000006a0917 : add byte ptr [rbp - 0xa], dh ; ret
0x00000000006ce0fa : add byte ptr [rbp - 0xcf68a2e], al ; ret
0x000000000068f99a : add byte ptr [rbp - 0xd], dh ; lea eax, dword ptr [rdx - 1] ; ret
0x00000000006cdd13 : add byte ptr [rbp - 0xe], dh ; ret
0x000000000069f594 : add byte ptr [rbp - 0xf], dh ; mov eax, 1 ; ret
0x00000000006a08e4 : add byte ptr [rbp - 0xf], dh ; ret
0x000000000067e88c : add byte ptr [rbp - 0xf], dh ; xor eax, eax ; ret
0x000000000043280c : add byte ptr [rbp], bl ; call rax
0x0000000000406639 : add byte ptr [rbx + 0x15ff01f3], al ; popfq ; ret 0x5f
0x00000000007e68d4 : add byte ptr [rbx + 0x1613], bl ; retf 0x513
0x00000000004dafde : add byte ptr [rbx + 0x18480], cl ; add byte ptr [rcx], bh ; ret 0x227c
0x00000000004daff5 : add byte ptr [rbx + 0x18480], cl ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000004deeef : add byte ptr [rbx + 0x18c89], cl ; add byte ptr [rcx], al ; retf -0x3dc7
0x00000000004e8001 : add byte ptr [rbx + 0x18c92], cl ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000007bda93 : add byte ptr [rbx + 0x1ab80007], cl ; int1 ; call qword ptr [rax]
0x00000000004d7dac : add byte ptr [rbx + 0x1e], ch ; add cl, cl ; ret
0x00000000007caca4 : add byte ptr [rbx + 0x26f8560e], dh ; add al, bl ; syscall
0x000000000065ea45 : add byte ptr [rbx + 0x29102454], cl ; ret 0x8b41
0x000000000060688f : add byte ptr [rbx + 0x294401c0], al ; loopne 0x606828 ; ret 0x8d48
0x0000000000454eac : add byte ptr [rbx + 0x29480023], ch ; ret
0x000000000068bd4f : add byte ptr [rbx + 0x294801e8], al ; retf -0x67b8
0x000000000068d1bf : add byte ptr [rbx + 0x294c01e8], al ; ret 0x9848
0x000000000068c4ed : add byte ptr [rbx + 0x294c01e8], al ; retf -0x67b8
0x00000000007e0e17 : add byte ptr [rbx + 0x3003], al ; ret 0x503
0x00000000006ce08f : add byte ptr [rbx + 0x33f2d92d], al ; add byte ptr [rcx], al ; ret
0x0000000000693337 : add byte ptr [rbx + 0x36f8ea15], cl ; add byte ptr [rcx], bh ; ret 0x840f
0x000000000068d88f : add byte ptr [rbx + 0x38e8087d], cl ; ret 0xffff
0x000000000066331e : add byte ptr [rbx + 0x39442853], cl ; ret 0xd089
0x0000000000667383 : add byte ptr [rbx + 0x3948e232], bl ; retf 0x3c7c
0x000000000040eaa3 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000040a263 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x00000000004108cb : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop rbp ; ret
0x0000000000661040 : add byte ptr [rbx + 0x430f4c6f], cl ; retf 0x548b
0x0000000000661f1b : add byte ptr [rbx + 0x460f02fa], al ; ret 0x7c83
0x0000000000661a87 : add byte ptr [rbx + 0x460f02fa], al ; ret 0xfd83
0x00000000006affbc : add byte ptr [rbx + 0x480f02c0], al ; ret
0x000000000067b8ef : add byte ptr [rbx + 0x480f02c0], al ; ret 0x9848
0x00000000006a63a4 : add byte ptr [rbx + 0x48202444], cl ; add esp, 0x18 ; ret
0x00000000004cf168 : add byte ptr [rbx + 0x488bfc55], cl ; or byte ptr [rcx], bh ; retf -0x72f1
0x00000000006c6f94 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x33b943] ; jmp rax
0x00000000006c6f04 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x33b9d3] ; jmp rax
0x00000000006c6e84 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x33ba53] ; jmp rax
0x00000000006c05e4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x3422f3] ; jmp rax
0x00000000006c04f4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x3423e3] ; jmp rax
0x00000000006c0414 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x3424c3] ; jmp rax
0x00000000006bfc64 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x342c73] ; jmp rax
0x00000000006b25a4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x350333] ; jmp rax
0x00000000006b2394 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x350543] ; jmp rax
0x00000000006a8aa4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x359e13] ; jmp rax
0x00000000006a8224 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x35a6b3] ; jmp rax
0x00000000006a5fb4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x35c923] ; jmp rax
0x00000000006a5f14 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x35c9c3] ; jmp rax
0x00000000006904d4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x372403] ; jmp rax
0x000000000068e1f4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x3746e3] ; jmp rax
0x0000000000685f44 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x37c993] ; jmp rax
0x0000000000681a84 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x380e53] ; jmp rax
0x0000000000681926 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x380fb1] ; jmp rax
0x0000000000674104 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x38e7d3] ; jmp rax
0x000000000065d254 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x3a5683] ; jmp rax
0x0000000000658f16 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x3a99c1] ; jmp rax
0x0000000000630064 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x3d2873] ; jmp rax
0x000000000062e1f4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x3d46e3] ; jmp rax
0x000000000062be54 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x3d6a83] ; jmp rax
0x000000000062b2a4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x3d7633] ; jmp rax
0x000000000062b214 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x3d76c3] ; jmp rax
0x000000000062b104 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x3d77d3] ; jmp rax
0x000000000062b094 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x3d7843] ; jmp rax
0x00000000005fd6b7 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x405220] ; jmp rax
0x00000000005fd244 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x405693] ; jmp rax
0x00000000005fd164 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x405773] ; jmp rax
0x00000000005f8cf4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x409be3] ; jmp rax
0x00000000005be9c4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x443f13] ; jmp rax
0x00000000005a9654 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x459283] ; jmp rax
0x00000000005a8d84 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x459b53] ; jmp rax
0x00000000005a8cf4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x459be3] ; jmp rax
0x00000000005a8bc4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x459d13] ; jmp rax
0x00000000005a8b54 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x459d83] ; jmp rax
0x00000000005a3c74 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x45ec63] ; jmp rax
0x00000000005a2dc4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x45fb13] ; jmp rax
0x00000000005a2d34 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x45fba3] ; jmp rax
0x00000000005a2c44 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x45fc93] ; jmp rax
0x00000000005a2bd4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x45fd03] ; jmp rax
0x0000000000598b04 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x469dd3] ; jmp rax
0x0000000000597f44 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x46a993] ; jmp rax
0x0000000000597eb4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x46aa23] ; jmp rax
0x0000000000597d84 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x46ab53] ; jmp rax
0x0000000000597d14 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x46abc3] ; jmp rax
0x0000000000597be4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x46acf3] ; jmp rax
0x0000000000596fe4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x46b8f3] ; jmp rax
0x0000000000596f54 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x46b983] ; jmp rax
0x0000000000596e64 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x46ba73] ; jmp rax
0x0000000000596df4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x46bae3] ; jmp rax
0x0000000000596cc4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x46bc13] ; jmp rax
0x0000000000596184 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x46c753] ; jmp rax
0x00000000005960f4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x46c7e3] ; jmp rax
0x0000000000596004 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x46c8d3] ; jmp rax
0x0000000000595f94 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x46c943] ; jmp rax
0x0000000000578394 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x48a543] ; jmp rax
0x0000000000572fd4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x48f903] ; jmp rax
0x0000000000572f44 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x48f993] ; jmp rax
0x0000000000572e54 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x48fa83] ; jmp rax
0x0000000000572de4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x48faf3] ; jmp rax
0x000000000056ca14 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x495ec3] ; jmp rax
0x000000000056c454 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x496483] ; jmp rax
0x000000000056b894 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x497043] ; jmp rax
0x000000000056b804 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4970d3] ; jmp rax
0x000000000056b6d4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x497203] ; jmp rax
0x000000000056b664 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x497273] ; jmp rax
0x00000000005593f4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4a94e3] ; jmp rax
0x0000000000558b24 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4a9db3] ; jmp rax
0x0000000000558a94 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4a9e43] ; jmp rax
0x0000000000558974 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4a9f63] ; jmp rax
0x0000000000558904 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4a9fd3] ; jmp rax
0x0000000000550db4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4b1b23] ; jmp rax
0x0000000000550334 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4b25a3] ; jmp rax
0x00000000005501b4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4b2723] ; jmp rax
0x000000000054f9b4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4b2f23] ; jmp rax
0x000000000054f924 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4b2fb3] ; jmp rax
0x000000000054f834 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4b30a3] ; jmp rax
0x000000000054f7c4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4b3113] ; jmp rax
0x0000000000547114 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4bb7c3] ; jmp rax
0x0000000000546574 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4bc363] ; jmp rax
0x00000000005464e4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4bc3f3] ; jmp rax
0x0000000000545454 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4bd483] ; jmp rax
0x00000000005453e4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4bd4f3] ; jmp rax
0x00000000005320e4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4d07f3] ; jmp rax
0x0000000000531f74 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4d0963] ; jmp rax
0x0000000000530114 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4d27c3] ; jmp rax
0x0000000000530084 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4d2853] ; jmp rax
0x000000000052ff64 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4d2973] ; jmp rax
0x000000000052fef4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4d29e3] ; jmp rax
0x000000000052fad4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4d2e03] ; jmp rax
0x000000000052eed4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4d3a03] ; jmp rax
0x000000000052ee44 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4d3a93] ; jmp rax
0x000000000052ed54 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4d3b83] ; jmp rax
0x000000000052ece4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4d3bf3] ; jmp rax
0x000000000052e824 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4d40b3] ; jmp rax
0x000000000052dc64 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4d4c73] ; jmp rax
0x000000000052dbd4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4d4d03] ; jmp rax
0x000000000052daa4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4d4e33] ; jmp rax
0x000000000052da34 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4d4ea3] ; jmp rax
0x0000000000529697 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4d9240] ; jmp rax
0x00000000005295d7 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4d9300] ; jmp rax
0x000000000050c9e4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4f5ef3] ; jmp rax
0x000000000050be34 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4f6aa3] ; jmp rax
0x000000000050bda4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4f6b33] ; jmp rax
0x000000000050bc94 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4f6c43] ; jmp rax
0x000000000050bc24 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4f6cb3] ; jmp rax
0x0000000000505e24 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4fcab3] ; jmp rax
0x0000000000505cb4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4fcc23] ; jmp rax
0x0000000000505234 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4fd6a3] ; jmp rax
0x0000000000504f44 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4fd993] ; jmp rax
0x0000000000504b64 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4fdd73] ; jmp rax
0x00000000005045f4 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4fe2e3] ; jmp rax
0x0000000000503a44 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rip + 0x4fee93] ; jmp rax
0x0000000000505def : add byte ptr [rbx + 0x48], dl ; mov ebx, edi ; call qword ptr [rip + 0x4fca6e]
0x0000000000582f13 : add byte ptr [rbx + 0x490f01c3], al ; ret
0x000000000067b44b : add byte ptr [rbx + 0x490f02c3], al ; ret
0x000000000063b8be : add byte ptr [rbx + 0x490f04c3], al ; ret
0x000000000055fc2a : add byte ptr [rbx + 0x490f07c3], al ; ret
0x00000000005cb209 : add byte ptr [rbx + 0x490f10c2], al ; ret 0x9589
0x000000000067d826 : add byte ptr [rbx + 0x490f12c3], al ; ret
0x000000000064b1a9 : add byte ptr [rbx + 0x490f14c3], al ; ret
0x0000000000650f94 : add byte ptr [rbx + 0x490f15c3], al ; ret
0x0000000000679f46 : add byte ptr [rbx + 0x490f16c3], al ; ret
0x0000000000539820 : add byte ptr [rbx + 0x490f17c3], al ; ret
0x000000000067cbd8 : add byte ptr [rbx + 0x490f18c3], al ; ret
0x00000000006b74e4 : add byte ptr [rbx + 0x490f1ac3], al ; ret
0x000000000067af31 : add byte ptr [rbx + 0x490f1bc3], al ; ret
0x0000000000679ec8 : add byte ptr [rbx + 0x490f1ec3], al ; ret
0x000000000067ced9 : add byte ptr [rbx + 0x490f20c3], al ; ret
0x000000000057fa32 : add byte ptr [rbx + 0x490f21c3], al ; ret
0x000000000064b0df : add byte ptr [rbx + 0x490f27c3], al ; ret
0x000000000067cdc6 : add byte ptr [rbx + 0x490f28c3], al ; ret
0x00000000007eaf42 : add byte ptr [rbx + 0x502], dh ; retf
0x00000000007cd175 : add byte ptr [rbx + 0x507], ch ; ret 0x507
0x00000000007cd296 : add byte ptr [rbx + 0x509], dh ; retf 0x509
0x00000000006cc495 : add byte ptr [rbx + 0x574fff8], al ; ret
0x00000000006906e4 : add byte ptr [rbx + 0x5b016043], al ; ret
0x00000000005d440c : add byte ptr [rbx + 0x5d90fc45], cl ; ret
0x00000000005498c4 : add byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000004f9bd3 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000053bc1a : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000404043 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000685ed8 : add byte ptr [rbx + 0x5d], bl ; pop r14 ; ret
0x0000000000445374 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000007ef915 : add byte ptr [rbx + 0x601], ch ; ret
0x00000000006af88f : add byte ptr [rbx + 0x634801c2], al ; ret 0x44c6
0x00000000006867d3 : add byte ptr [rbx + 0x634801c2], al ; ret 0x6348
0x00000000006869c7 : add byte ptr [rbx + 0x634801c2], al ; ret 0xd231
0x00000000005907ab : add byte ptr [rbx + 0x634801c2], al ; retf 0x3489
0x00000000006b423f : add byte ptr [rbx + 0x634801c3], al ; retf
0x00000000006ae71f : add byte ptr [rbx + 0x634801eb], al ; ret
0x00000000005705e3 : add byte ptr [rbx + 0x634801ed], al ; fisttp qword ptr [rax - 0x7d] ; ret
0x00000000005328b5 : add byte ptr [rbx + 0x634803c3], al ; ret
0x0000000000667c9a : add byte ptr [rbx + 0x63480451], cl ; or dword ptr [rcx], edi ; retf 0x3c7c
0x0000000000669612 : add byte ptr [rbx + 0x63480451], cl ; or dword ptr [rcx], edi ; retf 0xd7d
0x00000000004735b1 : add byte ptr [rbx + 0x6348cc55], cl ; retf -0x74b8
0x00000000006d1efd : add byte ptr [rbx + 0x63], cl ; xor al, 0x87 ; add rsi, r15 ; jmp rsi
0x00000000007b5aab : add byte ptr [rbx + 0x66b00006], ah ; out dx, eax ; call qword ptr [rsi]
0x00000000006d63af : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x0000000000633d73 : add byte ptr [rbx + 0xa1887], cl ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000007d0cd2 : add byte ptr [rbx + 0xa], bl ; ror dword ptr [rdx], 5 ; ret
0x00000000006c7ddf : add byte ptr [rbx + 0xb74ff3f], al ; ret
0x00000000006cf47f : add byte ptr [rbx + 0xb7510e6], al ; xor eax, eax ; ret
0x000000000069429f : add byte ptr [rbx + 0xb9e232], bl ; retf 0x3b9a
0x0000000000561b49 : add byte ptr [rbx + 0xbee232], bl ; retf 0x3b9a
0x0000000000694514 : add byte ptr [rbx + 0xbfe232], bl ; retf 0x3b9a
0x000000000066b32f : add byte ptr [rbx + 0xc9087], al ; add byte ptr [rcx], al ; ret
0x00000000006ca879 : add byte ptr [rbx + 0xc], dh ; mov rdx, rax ; mov rax, rsi ; ret
0x00000000007dd71c : add byte ptr [rbx + 0xd01], ch ; ret
0x00000000007e0e99 : add byte ptr [rbx + 0xd02], dh ; ret
0x00000000007dc70a : add byte ptr [rbx + 0xe2a], ah ; retf
0x00000000007ecaea : add byte ptr [rbx + 0xef2050f], bl ; add dl, al ; syscall
0x00000000004adcc3 : add byte ptr [rbx + 0xf48cc55], cl ; scasd eax, dword ptr [rdi] ; ret 0x3d48
0x00000000007f56b7 : add byte ptr [rbx + 0xf8a170f], bh ; add ebx, edi ; syscall
0x00000000007dcb96 : add byte ptr [rbx + 0xfa0050f], bl ; add dl, al ; syscall
0x00000000007ddbc2 : add byte ptr [rbx + 0xfb8050f], dh ; add cl, cl ; syscall
0x00000000007ed0c7 : add byte ptr [rbx + 0xfd4050f], dh ; add ch, al ; syscall
0x0000000000723e13 : add byte ptr [rbx + 1], cl ; or dword ptr [rax], eax ; retf
0x0000000000789a93 : add byte ptr [rbx + 3], cl ; add al, bl ; shl eax, -1 ; retf
0x000000000073a4b8 : add byte ptr [rbx + 3], dl ; add byte ptr [rdx], al ; mov bl, 0xdb ; jmp qword ptr [rax]
0x0000000000791a7b : add byte ptr [rbx + 4], dh ; add al, al ; and bl, ah ; jmp qword ptr [rax]
0x0000000000795abb : add byte ptr [rbx + 4], dh ; add dh, cl ; and ah, ch ; call rsp
0x0000000000791a5b : add byte ptr [rbx + 4], dl ; add al, al ; and bl, ah ; jmp qword ptr [rax]
0x00000000007f9640 : add byte ptr [rbx + 5], al ; ret 2
0x00000000007d4629 : add byte ptr [rbx + 5], cl ; retf 4
0x00000000007d302b : add byte ptr [rbx + 5], dh ; stosd dword ptr [rdi], eax ; add eax, dword ptr [rax] ; ret
0x000000000074a668 : add byte ptr [rbx + 8], ch ; add al, al ; sbb al, 0xf9 ; jmp qword ptr [rax]
0x000000000074a160 : add byte ptr [rbx + 8], dl ; add al, dl ; ret 0xfff8
0x00000000007d19e2 : add byte ptr [rbx + rax + 0x104b109], dh ; ret
0x00000000007ea4cd : add byte ptr [rbx + rax + 0x306cb05], dl ; ret 0xe03
0x00000000007abac3 : add byte ptr [rbx + rax + 0x3a020006], bh ; in eax, dx ; jmp qword ptr [rdi]
0x00000000007d5830 : add byte ptr [rbx + rax + 0x69307], bh ; ret
0x00000000007ebfd7 : add byte ptr [rbx + rax + 0x69c14], dh ; retf
0x000000000075ba8b : add byte ptr [rbx + rax + 1], al ; add dh, ch ; sar edi, 1 ; ret 1
0x00000000007dc108 : add byte ptr [rbx + rax - 0x41ffffe0], cl ; add eax, dword ptr [rsi] ; retf
0x000000000078fa7b : add byte ptr [rbx + rax*2 + 4], dh ; add byte ptr [rax], ah ; or dl, ah ; jmp qword ptr [rbx]
0x00000000007ac0d7 : add byte ptr [rbx + rax*2 - 0x13], ah ; call qword ptr [rcx]
0x000000000074ca27 : add byte ptr [rbx + rax*2 - 0x34], cl ; call rsp
0x00000000007afabb : add byte ptr [rbx + rax*2 - 0xfaffffa], dh ; in eax, dx ; jmp qword ptr [rbx]
0x000000000079fa0b : add byte ptr [rbx + rax*2], al ; add eax, 0xe8677000 ; call qword ptr [rbx]
0x0000000000757a93 : add byte ptr [rbx + rax*8 - 0x20060000], cl ; iretd ; jmp qword ptr [rax]
0x000000000074ba4b : add byte ptr [rbx + rax], al ; add byte ptr [rax], al ; dec ebx ; call rax
0x00000000007cfd19 : add byte ptr [rbx + rax], bh ; retf
0x000000000076743f : add byte ptr [rbx + rbp*2 - 0x2a], cl ; call qword ptr [rsi]
0x0000000000796243 : add byte ptr [rbx + rbp*4], bh ; add al, 0 ; retf -0x1acc
0x0000000000756397 : add byte ptr [rbx + rbp*4], ch ; iretd ; jmp qword ptr [rsi]
0x0000000000738d5b : add byte ptr [rbx + rbp*8 - 0x2a], dl ; dec dword ptr [rax - 0x20] ; add al, byte ptr [rax] ; retf -0x2915
0x000000000078a2f3 : add byte ptr [rbx + rbp*8 - 0x2fa7fffd], ch ; loopne 0x78a304 ; retf
0x000000000079a22b : add byte ptr [rbx + rbp*8], ah ; add al, 0 ; ret 0xffe6
0x000000000078e20b : add byte ptr [rbx + rbp], al ; add al, 0 ; xor cl, cl ; loope 0x78e21c ; retf
0x000000000078e273 : add byte ptr [rbx + rbp], ch ; add al, 0 ; fmul st(1) ; loope 0x78e284 ; retf 1
0x000000000079e233 : add byte ptr [rbx + rbp], ch ; add eax, 0xe7fe0200 ; jmp rsp
0x00000000007d0817 : add byte ptr [rbx + rbx + 0x231df305], bh ; ret
0x0000000000734a7b : add byte ptr [rbx + rbx - 0x32], bh ; jmp rax
0x0000000000755223 : add byte ptr [rbx + rbx*4], bl ; add byte ptr [rax], al ; mov dl, 0x6b ; iretd ; call qword ptr [rdi]
0x0000000000775233 : add byte ptr [rbx + rbx*4], ch ; add al, byte ptr [rax] ; call 0x11772e13
0x0000000000779283 : add byte ptr [rbx + rbx*8 + 2], bh ; add byte ptr [rax], cl ; ret 0xffdc
0x000000000077929b : add byte ptr [rbx + rbx*8 + 2], dl ; add byte ptr [rax], al ; ret 0xffdc
0x0000000000799263 : add byte ptr [rbx + rbx*8 + 4], bl ; add al, bh ; and al, 0xe6 ; call rdi
0x0000000000789283 : add byte ptr [rbx + rbx*8], bh ; add eax, dword ptr [rax] ; call 0xffffffffe2787335
0x00000000007386cb : add byte ptr [rbx + rbx], ah ; salc ; jmp qword ptr [rax]
0x00000000007f53c3 : add byte ptr [rbx + rcx + 0xc8005], bh ; retf
0x00000000007ac25b : add byte ptr [rbx + rcx + 6], dl ; add byte ptr [rsi + 0x44], ch ; in eax, dx ; call qword ptr [rsi]
0x000000000079023b : add byte ptr [rbx + rcx*2], dh ; add al, 0 ; xor byte ptr [rax - 0x1e], dl ; jmp qword ptr [rbx]
0x000000000068ddc4 : add byte ptr [rbx + rcx*4 + 0x67], cl ; or al, ch ; ret 0xffb9
0x00000000007542f3 : add byte ptr [rbx + rcx*4 + 0x9bc0000], ch ; iretd ; call rsp
0x00000000007542c3 : add byte ptr [rbx + rcx*4], bh ; add byte ptr [rax], bl ; or edi, ecx ; call rsp
0x00000000007a824b : add byte ptr [rbx + rcx*8 + 5], al ; add dh, bh ; sub ah, ch ; jmp qword ptr [rcx]
0x00000000007a822b : add byte ptr [rbx + rcx*8], ah ; add eax, 0xec28fc00 ; jmp qword ptr [rcx]
0x0000000000736e13 : add byte ptr [rbx + rdi + 0x4910ffd2], ah ; add al, byte ptr [rax] ; retf -0x2dc5
0x00000000007af26b : add byte ptr [rbx + rdi + 6], ah ; add byte ptr [rax], dh ; in al, -0x13 ; call rax
0x00000000007a3ebf : add byte ptr [rbx + rdi - 0x3a], ch ; call qword ptr [rdx]
0x00000000007672f3 : add byte ptr [rbx + rdi*4 + 0x5c920001], ch ; salc ; jmp qword ptr [rsi]
0x00000000007572eb : add byte ptr [rbx + rdi*4 - 0x31580000], ah ; iretd ; call rcx
0x000000000074f243 : add byte ptr [rbx + rdi], bh ; add byte ptr [rax], al ; xor al, 0xcd ; jmp qword ptr [rbx]
0x000000000074f263 : add byte ptr [rbx + rdi], bl ; add byte ptr [rax], al ; push rax ; xor al, 0xcd ; jmp qword ptr [rax]
0x000000000079f213 : add byte ptr [rbx + rdi], cl ; add eax, 0xe850de00 ; call qword ptr [rcx]
0x00000000007acaf3 : add byte ptr [rbx + rdx + 0x4e280006], ch ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000733dab : add byte ptr [rbx + rdx - 0x3a8f0033], ch ; add al, 0 ; ret 0xcd13
0x0000000000790a33 : add byte ptr [rbx + rdx*2], ch ; add al, 0 ; fsubr dword ptr [rax - 0x1e] ; jmp qword ptr [rdx]
0x00000000007b4a4b : add byte ptr [rbx + rdx*4 + 6], al ; add byte ptr [rax], ah ; out dx, eax ; jmp qword ptr [rbx]
0x00000000007b4a63 : add byte ptr [rbx + rdx*4 + 6], bl ; add byte ptr [rax], bh ; out dx, eax ; jmp qword ptr [rdi]
0x0000000000739093 : add byte ptr [rbx + rdx*4 - 0x29], bh ; call qword ptr [rax]
0x0000000000754a83 : add byte ptr [rbx + rdx*4], bh ; add dh, al ; iretd ; jmp rcx
0x00000000007a4a73 : add byte ptr [rbx + rdx*4], ch ; add eax, 0xea9b1800 ; call qword ptr [rcx]
0x0000000000758ab3 : add byte ptr [rbx + rdx*8], ch ; add byte ptr [rax + 0x19], dh ; sar bh, 1 ; ret
0x00000000007a478f : add byte ptr [rbx + rsi - 0x3a], ah ; call qword ptr [rdx]
0x0000000000792a6b : add byte ptr [rbx + rsi*2 + 4], ah ; add dh, dl ; ret 0xffe3
0x00000000007b2a5b : add byte ptr [rbx + rsi*2 + 6], dl ; add byte ptr [rax - 0x12], ah ; out dx, al ; jmp qword ptr [rcx]
0x000000000074d5cf : add byte ptr [rbx + rsi*2 - 0x34], cl ; call rcx
0x0000000000756a73 : add byte ptr [rbx + rsi*4], ch ; add byte ptr [rax], al ; sub al, 0xbe ; iretd ; jmp qword ptr [rax]
0x000000000079e027 : add byte ptr [rbx + rsi*8 - 0x19], al ; call rax
0x00000000007aaa9b : add byte ptr [rbx + rsi*8 - 0x24effffb], dl ; in al, dx ; call qword ptr [rdx]
0x000000000074ea6b : add byte ptr [rbx + rsi], ah ; add byte ptr [rax], cl ; dec esp ; call qword ptr [rdx]
0x000000000055e98e : add byte ptr [rbx - 0x17], bl ; imul ebp, eax, -1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000007f4057 : add byte ptr [rbx - 0x18e0fe35], dl ; retf 1
0x000000000078bed0 : add byte ptr [rbx - 0x1f], al ; call qword ptr [rsi]
0x000000000073ce94 : add byte ptr [rbx - 0x20], ah ; jmp qword ptr [rax]
0x0000000000654edf : add byte ptr [rbx - 0x2377b], cl ; inc dword ptr [rcx] ; ret 0xd039
0x00000000007cab62 : add byte ptr [rbx - 0x2dfafe62], ah ; sahf ; add dword ptr [rax], eax ; ret 0x19e
0x000000000069e53c : add byte ptr [rbx - 0x3d], bl ; nop ; mov eax, 1 ; ret
0x00000000005412cc : add byte ptr [rbx - 0x3d], bl ; nop ; ret
0x00000000006591d8 : add byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax + rax] ; ret
0x00000000005ff4cf : add byte ptr [rbx - 0x3f7acfb9], cl ; jle 0x5ff4e0 ; ret
0x0000000000517d6f : add byte ptr [rbx - 0x3f7ad7b9], cl ; sete al ; ret
0x000000000054bf1f : add byte ptr [rbx - 0x3f7ae7b9], cl ; jne 0x54bf38 ; ret
0x000000000054c07f : add byte ptr [rbx - 0x3f7ae7b9], cl ; jne 0x54c098 ; ret
0x000000000054fa2f : add byte ptr [rbx - 0x3f7ae7b9], cl ; jne 0x54fa48 ; ret
0x000000000054a00f : add byte ptr [rbx - 0x3f7ae7b9], cl ; sete al ; ret
0x0000000000585ea2 : add byte ptr [rbx - 0x3f7aebbd], cl ; jne 0x585eb5 ; pop rbx ; ret
0x0000000000517edf : add byte ptr [rbx - 0x3f7aefb9], cl ; setle al ; ret
0x00000000005f7cdf : add byte ptr [rbx - 0x3f7af7b9], cl ; sete al ; ret
0x00000000005f7c5f : add byte ptr [rbx - 0x3f7afbb9], cl ; sete al ; ret
0x00000000004be9d9 : add byte ptr [rbx - 0x3f7c9fbd], cl ; add dword ptr [rcx], edi ; ret 0x2674
0x00000000004c158d : add byte ptr [rbx - 0x3f7ca7bd], cl ; add dword ptr [rcx], edi ; ret 0x2674
0x00000000004c4105 : add byte ptr [rbx - 0x3f7cdbbd], cl ; add dword ptr [rcx], edi ; ret 0x2674
0x000000000068363e : add byte ptr [rbx - 0x3fceff8e], 0xe8 ; retf
0x00000000004add49 : add byte ptr [rbx - 0x50f033bb], cl ; ret 0x8589
0x00000000007f4460 : add byte ptr [rbx - 0x5cfafe1a], ch ; pushfq ; add dword ptr [rax], eax ; ret 0x1e6
0x00000000007f4378 : add byte ptr [rbx - 0x5cfafe20], dh ; pushfq ; add dword ptr [rax], eax ; retf
0x00000000007faed3 : add byte ptr [rbx - 0x5fafe3e], bh ; ret
0x000000000067b4a0 : add byte ptr [rbx - 0x60f0fd05], al ; ret 0x8843
0x000000000069b763 : add byte ptr [rbx - 0x68f0e807], al ; ret 0x8341
0x000000000067ba29 : add byte ptr [rbx - 0x6bf0fc05], al ; ret 0xd084
0x0000000000744ad8 : add byte ptr [rbx - 0x6da7fffa], ah ; out dx, al ; jmp qword ptr [rax]
0x00000000005ff34f : add byte ptr [rbx - 0x74bbfb96], cl ; sub ch, byte ptr [rcx] ; ret
0x00000000005c97ff : add byte ptr [rbx - 0x74bbfbb6], cl ; and ch, byte ptr [rcx] ; ret
0x0000000000615acc : add byte ptr [rbx - 0x76b7fff6], cl ; ret 0x8948
0x00000000006d128c : add byte ptr [rbx - 0x77becf39], al ; jp 0x6d12a8 ; ret
0x000000000069b9bf : add byte ptr [rbx - 0x77ced18], al ; add cl, byte ptr [rdi] ; xchg eax, edi ; ret 0xfb83
0x00000000004041ba : add byte ptr [rbx - 0x77feff83], al ; ret
0x00000000005c552e : add byte ptr [rbx - 0x78f0d208], al ; retf
0x0000000000456c02 : add byte ptr [rbx - 0x78f0f108], al ; ret
0x000000000067b142 : add byte ptr [rbx - 0x7af0fb06], al ; retf 0
0x000000000045e791 : add byte ptr [rbx - 0x7af0fe05], al ; ret
0x0000000000443278 : add byte ptr [rbx - 0x7af0fe05], al ; retf
0x00000000005f175c : add byte ptr [rbx - 0x7af0fe05], al ; retf 2
0x00000000004e24ea : add byte ptr [rbx - 0x7af0fe08], al ; retf
0x0000000000480a5f : add byte ptr [rbx - 0x7af0fe08], al ; retf 0
0x000000000043a734 : add byte ptr [rbx - 0x7bf0fe05], al ; retf
0x00000000005f4d50 : add byte ptr [rbx - 0x7bf0fe05], al ; retf -8
0x000000000048a826 : add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x00000000004f49ac : add byte ptr [rbx - 0x7cb7fe3d], al ; ret 0x3901
0x0000000000510e23 : add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x3901
0x0000000000691f47 : add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x4101
0x000000000067852f : add byte ptr [rbx - 0x7fbf8019], al ; jmp qword ptr [rax]
0x00000000004b2dfa : add byte ptr [rbx - 0x936b], cl ; dec dword ptr [rax + 0x63] ; retf -0x74b8
0x0000000000747d04 : add byte ptr [rbx - 0xb], bl ; call qword ptr [rax]
0x0000000000749024 : add byte ptr [rbx - 9], al ; jmp qword ptr [rax]
0x00000000007b143b : add byte ptr [rbx*2 + 0x34000006], dh ; out dx, al ; call qword ptr [rdx]
0x00000000007b541b : add byte ptr [rbx*4 + 0x5bb00006], dl ; out dx, eax ; jmp qword ptr [rax]
0x00000000007b5433 : add byte ptr [rbx*4 + 0x5bb80006], ch ; out dx, eax ; jmp qword ptr [rcx]
0x0000000000755443 : add byte ptr [rbx*4 + 0x735a0000], bh ; iretd ; call qword ptr [rbx]
0x00000000006bf6d4 : add byte ptr [rbx], 0 ; add byte ptr [rax + 0x39], cl ; ret 0x880f
0x00000000007e2ac7 : add byte ptr [rbx], 0 ; ret
0x000000000079da6b : add byte ptr [rbx], ah ; add eax, 0xe7e75c00 ; call rcx
0x0000000000785a2b : add byte ptr [rbx], ah ; add eax, dword ptr [rax] ; shr ch, 0xdf ; call qword ptr [rbx]
0x000000000069f523 : add byte ptr [rbx], al ; mfence ; add rsp, 8 ; ret
0x00000000006d1165 : add byte ptr [rbx], al ; mfence ; ret
0x0000000000723fe7 : add byte ptr [rbx], al ; or byte ptr [rax], al ; ret
0x000000000053ed3f : add byte ptr [rbx], bh ; ja 0x53ed59 ; jg 0x53ed4c ; ret
0x0000000000544e6f : add byte ptr [rbx], bh ; jle 0x544e96 ; setl al ; ret
0x00000000007ee5cc : add byte ptr [rbx], bh ; lea eax, dword ptr [rdx] ; retf 0x102
0x000000000054a1a1 : add byte ptr [rbx], bl ; add byte ptr [rax], al ; ret
0x00000000006c6f48 : add byte ptr [rbx], bl ; jae 0x6c6f50 ; ret
0x00000000007ccb82 : add byte ptr [rbx], ch ; add byte ptr [rcx], 0xd7 ; add al, 0 ; ret 0x501
0x00000000006609e5 : add byte ptr [rbx], ch ; push rsp ; add rax, rcx ; ret
0x0000000000769bbf : add byte ptr [rbx], dh ; leave ; call qword ptr [rdx]
0x0000000000724e37 : add byte ptr [rbx], dh ; retf 0x66
0x0000000000677df8 : add byte ptr [rbx], dl ; adc al, 0xff ; dec dword ptr [rcx + 1] ; ret 0x8944
0x00000000005b66cb : add byte ptr [rcx + 0x1415ffc3], cl ; ret 0x44
0x00000000007d96bf : add byte ptr [rcx + 0x1582050f], ch ; add ah, al ; syscall
0x00000000007d071d : add byte ptr [rcx + 0x1dda140f], ch ; add al, al ; syscall
0x0000000000696321 : add byte ptr [rcx + 0x1eaf7c8], cl ; retf -0x63f
0x00000000007d1616 : add byte ptr [rcx + 0x2103], ah ; retf 0x603
0x00000000007e332c : add byte ptr [rcx + 0x228005], bh ; retf
0x00000000007c28f7 : add byte ptr [rcx + 0x22], cl ; ret 1
0x00000000006b2e1f : add byte ptr [rcx + 0x29], al ; ret
0x00000000006c3ffa : add byte ptr [rcx + 0x29], cl ; ret
0x000000000065fdbf : add byte ptr [rcx + 0x29c189c2], cl ; ret
0x00000000006265b5 : add byte ptr [rcx + 0x2a15ffc5], cl ; ret
0x00000000007dc005 : add byte ptr [rcx + 0x2c02], bl ; retf 0x502
0x00000000007ec241 : add byte ptr [rcx + 0x2db1480f], al ; add ah, bl ; syscall
0x0000000000525eb0 : add byte ptr [rcx + 0x2f15ffc5], cl ; retf 0x4d
0x00000000007e9cf0 : add byte ptr [rcx + 0x303], bh ; mov cl, 4 ; retf -0x78ff
0x00000000007e5be5 : add byte ptr [rcx + 0x30], dh ; ret
0x00000000007d4ef2 : add byte ptr [rcx + 0x3102], dl ; ret 0x2a02
0x000000000069d5af : add byte ptr [rcx + 0x31d031f0], cl ; clc ; ret
0x0000000000565dac : add byte ptr [rcx + 0x3315ffc3], cl ; retf
0x000000000068831f : add byte ptr [rcx + 0x38], al ; xor eax, 0x83d97400 ; ret
0x00000000006a55d4 : add byte ptr [rcx + 0x38db1050], cl ; ret
0x00000000005265a6 : add byte ptr [rcx + 0x3915ffc5], cl ; ret
0x0000000000607fbf : add byte ptr [rcx + 0x39], al ; fmul dword ptr [rdi] ; pushfq ; ret 0xdb85
0x000000000068858a : add byte ptr [rcx + 0x39], al ; ret 0x8c0f
0x0000000000688ce7 : add byte ptr [rcx + 0x39], cl ; ret 0x3374
0x000000000053f198 : add byte ptr [rcx + 0x39], cl ; ret 0x8c0f
0x000000000053f1cd : add byte ptr [rcx + 0x39], cl ; ret 0xb841
0x000000000054e8cf : add byte ptr [rcx + 0x39], cl ; stc ; sete al ; ret
0x00000000006c953f : add byte ptr [rcx + 0x40cc80f8], cl ; ret
0x00000000005f97a7 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000050f860 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x0000000000595f4f : add byte ptr [rcx + 0x4578937], cl ; ret
0x00000000007ac443 : add byte ptr [rcx + 0x46e00006], bh ; in eax, dx ; call qword ptr [rbx]
0x00000000007ac42b : add byte ptr [rcx + 0x46e40006], ah ; in eax, dx ; call qword ptr [rbx]
0x00000000007ac413 : add byte ptr [rcx + 0x46e80006], cl ; in eax, dx ; call qword ptr [rbx]
0x0000000000656598 : add byte ptr [rcx + 0x4715ffc3], cl ; ret
0x00000000006a180f : add byte ptr [rcx + 0x48f689f8], cl ; imul eax, esi ; ret
0x00000000007cceec : add byte ptr [rcx + 0x503], bh ; retf 0x1603
0x00000000007f7f0a : add byte ptr [rcx + 0x503], dl ; lahf ; add eax, dword ptr [rsi] ; ret
0x00000000007fa0bb : add byte ptr [rcx + 0x50f80552], bh ; retf
0x00000000007e60b8 : add byte ptr [rcx + 0x511], dh ; ret
0x00000000007f5f49 : add byte ptr [rcx + 0x522], ah ; ret 0x522
0x00000000007f09f4 : add byte ptr [rcx + 0x522], bh ; retf
0x00000000007446e8 : add byte ptr [rcx + 0x54a80006], dl ; out dx, al ; jmp qword ptr [rax]
0x0000000000467c5c : add byte ptr [rcx + 0x58b48c1], cl ; ret 0x5956
0x000000000066539e : add byte ptr [rcx + 0x5bab75f1], cl ; ret
0x00000000006116eb : add byte ptr [rcx + 0x5c], 0x41 ; pop rbp ; pop rbp ; ret
0x0000000000665ea7 : add byte ptr [rcx + 0x5d], al ; pop r14 ; ret
0x0000000000665d74 : add byte ptr [rcx + 0x5e], al ; ret
0x00000000005709a3 : add byte ptr [rcx + 0x63], cl ; fisttp qword ptr [rax - 0x7d] ; ret
0x000000000064d12f : add byte ptr [rcx + 0x63], cl ; ret
0x0000000000665571 : add byte ptr [rcx + 0x63], cl ; ret 0x8f8b
0x000000000064e0c5 : add byte ptr [rcx + 0x63], cl ; ret 0xd989
0x000000000057f705 : add byte ptr [rcx + 0x63], cl ; retf
0x0000000000539072 : add byte ptr [rcx + 0x63], cl ; ror byte ptr [rcx + 0x39], 1 ; ret 0x8841
0x0000000000569182 : add byte ptr [rcx + 0x63], cl ; ror dword ptr [rax - 0x7d], 1 ; ret 0xe901
0x00000000007cb9f2 : add byte ptr [rcx + 0x64c0260f], bl ; add dh, cl ; syscall
0x0000000000575e78 : add byte ptr [rcx + 0x6715ffc3], cl ; retf 0x48
0x000000000060c5a4 : add byte ptr [rcx + 0x688d4828], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000054e65a : add byte ptr [rcx + 0x6a831847], cl ; sbb byte ptr [rcx], al ; ret
0x00000000007cb40a : add byte ptr [rcx + 0x71], ch ; ret
0x00000000006784e7 : add byte ptr [rcx + 0x72], ch ; add al, dl ; call 0xffffffffc369657d
0x00000000006783e6 : add byte ptr [rcx + 0x72], ch ; add byte ptr [rsi], ah ; setne al ; ret
0x00000000006784c6 : add byte ptr [rcx + 0x72], ch ; add byte ptr [rsi], al ; setne al ; ret
0x00000000007d4b6f : add byte ptr [rcx + 0x901], bl ; ret
0x000000000069cacf : add byte ptr [rcx + 0x9d0f7d0], cl ; clc ; xor eax, esi ; ret
0x00000000006bbdf7 : add byte ptr [rcx + 0xf], al ; mov bh, 0x7f ; adc cl, byte ptr [rcx - 0x77] ; retf -0x76bb
0x0000000000539027 : add byte ptr [rcx + 0xf], al ; ret
0x000000000067f101 : add byte ptr [rcx + 0xf], al ; ret 0x9848
0x0000000000666cfe : add byte ptr [rcx + 0xf], al ; retf 0x1b8
0x0000000000661cc1 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x2944
0x0000000000661e2b : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xab83
0x00000000006c46a9 : add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; fimul word ptr [rax + 1] ; retf
0x0000000000677e29 : add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0x00000000007e1111 : add byte ptr [rcx + 0xfc1050f], ah ; add bl, cl ; syscall
0x00000000007f8a05 : add byte ptr [rcx + 0xfc1060f], dh ; add dl, ah ; syscall
0x00000000007d0d58 : add byte ptr [rcx + 0xffb050f], bh ; add bl, al ; syscall
0x0000000000694984 : add byte ptr [rcx + 1], al ; retf 0x3944
0x00000000007d62c3 : add byte ptr [rcx + 3], cl ; fld dword ptr [rdx] ; add byte ptr [rax + 4], dl ; retf
0x00000000007d2c57 : add byte ptr [rcx + 4], cl ; retf 2
0x00000000007d392f : add byte ptr [rcx + 5], al ; retf
0x000000000079d8a3 : add byte ptr [rcx + 5], bl ; add byte ptr [rdx], bl ; jrcxz 0x79d89a ; call rsp
0x00000000007cffa0 : add byte ptr [rcx + 6], ah ; ret
0x0000000000743c60 : add byte ptr [rcx + 6], bl ; add byte ptr [rax - 0x7e], dl ; in al, dx ; jmp qword ptr [rax]
0x00000000007e459a : add byte ptr [rcx + rax + 0x1980e], dh ; retf 0x501
0x00000000007dac68 : add byte ptr [rcx + rax + 0x1cf11], dh ; retf 0x501
0x00000000007f1f4e : add byte ptr [rcx + rax + 0x34c806], bh ; ret 0x3001
0x00000000007d5290 : add byte ptr [rcx + rax + 0x3a213], dh ; retf 0x501
0x00000000007e153c : add byte ptr [rcx + rax + 0x3b003], ch ; retf
0x00000000007cf7b3 : add byte ptr [rcx + rax + 0xfd805], cl ; ret 0x501
0x000000000074b8a3 : add byte ptr [rcx + rax - 0x14660000], bl ; retf
0x00000000007d606a : add byte ptr [rcx + rax - 0x55fffff2], bl ; add dword ptr [rdi], ecx ; retf
0x000000000078f84b : add byte ptr [rcx + rax*2 + 4], al ; add byte ptr [rax], al ; add esp, edx ; jmp qword ptr [rdx]
0x000000000078f863 : add byte ptr [rcx + rax*2 + 4], bl ; add byte ptr [rax], bl ; add esp, edx ; jmp qword ptr [rdx]
0x000000000078f833 : add byte ptr [rcx + rax*2], ch ; add al, 0 ; call 0x2378da47
0x000000000079f83b : add byte ptr [rcx + rax*2], dh ; add eax, 0xe8671000 ; jmp qword ptr [rdi]
0x00000000007b7873 : add byte ptr [rcx + rax*8 + 6], ch ; add byte ptr [rax - 0x41], ch ; out dx, eax ; jmp qword ptr [rdi]
0x00000000007578fb : add byte ptr [rcx + rax*8 - 0x25f80000], dh ; iretd ; jmp qword ptr [rbx]
0x0000000000767813 : add byte ptr [rcx + rax*8], cl ; add dword ptr [rax], eax ; cli ; call rsi
0x000000000075785b : add byte ptr [rcx + rax*8], dl ; add byte ptr [rax], al ; and al, bl ; iretd ; call rsp
0x000000000074b82b : add byte ptr [rcx + rax], ah ; add byte ptr [rax], al ; sub al, 0xe8 ; retf
0x000000000076b80b : add byte ptr [rcx + rax], al ; add al, byte ptr [rax] ; nop ; mov dl, 0xd9 ; call qword ptr [rcx]
0x000000000074b84b : add byte ptr [rcx + rax], al ; add byte ptr [rax - 0x18], dh ; retf
0x000000000074b80b : add byte ptr [rcx + rax], al ; add byte ptr [rax], al ; mov bl, bl ; retf
0x000000000076b823 : add byte ptr [rcx + rax], bl ; add al, byte ptr [rax] ; cwde ; mov dl, 0xd9 ; jmp qword ptr [rbx]
0x000000000077207b : add byte ptr [rcx + rbp*2 + 2], dh ; add al, ah ; or bl, bl ; jmp rax
0x0000000000738a4b : add byte ptr [rcx + rbp*4 - 0x2a], ah ; jmp qword ptr [rax]
0x000000000077a09f : add byte ptr [rcx + rbp*4 - 0x38], bl ; call qword ptr [rdx]
0x0000000000761067 : add byte ptr [rcx + rbp*8 - 0x2d], bh ; call qword ptr [rbx]
0x0000000000761027 : add byte ptr [rcx + rbp*8 - 0x2d], bh ; call qword ptr [rdx]
0x00000000007aa093 : add byte ptr [rcx + rbp*8 - 0x3df7fffb], cl ; in al, dx ; call qword ptr [rcx]
0x000000000074e0ab : add byte ptr [rcx + rbp], ah ; add byte ptr [rsi + rdx*8 - 0x34], ah ; call rax
0x0000000000761063 : add byte ptr [rcx + rbx*2 + 1], bl ; add byte ptr [rcx + rbp*8 - 0x2d], bh ; call qword ptr [rbx]
0x00000000007435e3 : add byte ptr [rcx + rbx*4 - 0x15], ch ; call qword ptr [rax]
0x00000000007629e7 : add byte ptr [rcx + rbx*4 - 0x2c], bl ; jmp rax
0x0000000000755063 : add byte ptr [rcx + rbx*4], bl ; add byte ptr [rsi + 0x60], cl ; iretd ; jmp qword ptr [rax]
0x00000000007990a3 : add byte ptr [rcx + rbx*8 + 0x1b580004], bl ; out 0xff, al ; ret 0
0x0000000000688324 : add byte ptr [rcx + rbx*8 - 0x7d], dh ; ret
0x0000000000747703 : add byte ptr [rcx + rbx*8 - 0xc], bl ; call qword ptr [rax]
0x0000000000672724 : add byte ptr [rcx + rcx + 0x48], dh ; add esp, 0x28 ; ret
0x000000000062ef3c : add byte ptr [rcx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000007428f3 : add byte ptr [rcx + rcx - 0x16], dl ; call rax
0x000000000066e7a4 : add byte ptr [rcx + rcx - 0x77], dh ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000007b006b : add byte ptr [rcx + rcx*2 + 6], ah ; add byte ptr [rax - 5], al ; in eax, dx ; jmp qword ptr [rbx]
0x0000000000780043 : add byte ptr [rcx + rcx*2], bh ; add eax, dword ptr [rax] ; xor byte ptr [rsi - 0x38], cl ; call qword ptr [rdx]
0x000000000068fa98 : add byte ptr [rcx + rcx*4 + 0x47], cl ; clc ; add rsp, 8 ; ret
0x0000000000561104 : add byte ptr [rcx + rcx*4 + 0x65], al ; mov ah, 0xe8 ; ret 0x1283
0x000000000057ae50 : add byte ptr [rcx + rcx*4 + 0x73], al ; sbb cl, ch ; ret 0xfffe
0x00000000007a40b3 : add byte ptr [rcx + rcx*4 + 5], ch ; add byte ptr [rax], bh ; movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x7d0bc7
0x00000000006c71a1 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x403c76
0x00000000006344d3 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x6806ea
0x00000000005100ec : add byte ptr [rcx + rcx*4 - 0x11], cl ; call r11
0x000000000051020b : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000005101e7 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rdx
0x000000000052bfd6 : add byte ptr [rcx + rcx*4 - 0x11], cl ; mov ebx, 0 ; call rax
0x0000000000543924 : add byte ptr [rcx + rcx*4 - 0x11], cl ; xor eax, eax ; call 0x67fb5a
0x00000000004fa302 : add byte ptr [rcx + rcx*4 - 0x12], cl ; mov edx, 0x6edea0 ; call rax
0x00000000005530e7 : add byte ptr [rcx + rcx*4 - 0x12], cl ; mov rdi, rbx ; call rax
0x0000000000516b57 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x512d76
0x000000000067d4e6 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x689fb6
0x00000000004fbf36 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000063d700 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rcx
0x000000000055464d : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rdx
0x000000000062cef1 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov ebx, 0 ; call rax
0x000000000054f56f : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov esi, 1 ; call rax
0x00000000006438ab : add byte ptr [rcx + rcx*4 - 0x19], cl ; xor eax, eax ; call 0x67fb5a
0x000000000052cc06 : add byte ptr [rcx + rcx*4 - 0x1a], al ; call rax
0x000000000054ec5e : add byte ptr [rcx + rcx*4 - 0x1a], al ; mov rdi, r15 ; call rax
0x00000000005b94a0 : add byte ptr [rcx + rcx*4 - 0x1a], cl ; call rax
0x00000000005badf9 : add byte ptr [rcx + rcx*4 - 0x1c], cl ; mov r12, rax ; jmp 0x5badcd
0x0000000000675174 : add byte ptr [rcx + rcx*4 - 0x1e], al ; call rax
0x0000000000510585 : add byte ptr [rcx + rcx*4 - 0x1e], al ; mov esi, ebp ; mov rdi, rbx ; call rax
0x00000000004a143c : add byte ptr [rcx + rcx*4 - 0x21], cl ; mov rsi, r9 ; call rax
0x00000000005125e2 : add byte ptr [rcx + rcx*4 - 0x31], cl ; mov qword ptr [rbp - 0x58], r9 ; call rax
0x000000000065dba2 : add byte ptr [rcx + rcx*4 - 0x32], al ; mov rdi, rax ; call rdx
0x00000000004e4ac5 : add byte ptr [rcx + rcx*4 - 0x3f], cl ; mov r8, r12 ; call r11
0x00000000006772ff : add byte ptr [rcx + rcx*4 - 0x40], al ; sub eax, edi ; ret
0x00000000006d493f : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x00000000004f797d : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r15 ; call 0x403c79
0x0000000000507c5c : add byte ptr [rcx + rcx*4 - 1], cl ; call 0x6d4746
0x000000000052b759 : add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000503d61 : add byte ptr [rcx + rcx*4 - 1], cl ; call rcx
0x0000000000551572 : add byte ptr [rcx + rcx*4 - 1], cl ; call rdx
0x000000000056ea3b : add byte ptr [rcx + rcx*4 - 1], cl ; lea rsi, qword ptr [rbp - 0x40] ; call rax
0x000000000054f4de : add byte ptr [rcx + rcx*4 - 1], cl ; mov ebx, 0 ; call rax
0x000000000052c365 : add byte ptr [rcx + rcx*4 - 1], cl ; mov esi, 1 ; call rax
0x00000000006c260d : add byte ptr [rcx + rcx*4 - 1], cl ; movsxd r13, r13d ; call rax
0x00000000006336b8 : add byte ptr [rcx + rcx*4 - 2], al ; mov rdi, r12 ; call rax
0x00000000006b1d87 : add byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r13 ; call 0x6cdfd9
0x0000000000511211 : add byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, rbx ; call rax
0x00000000006c0746 : add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r12 ; call rax
0x00000000006c1c4f : add byte ptr [rcx + rcx*4 - 9], cl ; call r9
0x0000000000511b34 : add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x00000000006c1bc4 : add byte ptr [rcx + rcx*4 - 9], cl ; call rcx
0x00000000006516e6 : add byte ptr [rcx + rcx*4 - 9], cl ; call rdx
0x000000000052c2d5 : add byte ptr [rcx + rcx*4 - 9], cl ; mov ebx, 0 ; call rax
0x00000000007a4033 : add byte ptr [rcx + rcx*4], ch ; add eax, 0xe9a0a800 ; jmp qword ptr [rbx]
0x00000000007a401b : add byte ptr [rcx + rcx*4], dl ; add eax, 0xe9a0a000 ; call qword ptr [rdi]
0x00000000007a809b : add byte ptr [rcx + rcx*8 + 0x1c260005], dl ; in al, dx ; call qword ptr [rdi]
0x000000000076802b : add byte ptr [rcx + rcx*8], ah ; add dword ptr [rax], eax ; adc dh, byte ptr [rbp - 0x29] ; jmp qword ptr [rbx]
0x000000000075c083 : add byte ptr [rcx + rcx], bh ; add dword ptr [rax], eax ; mov cl, byte ptr [rdx - 0x2f] ; call rsp
0x000000000075c043 : add byte ptr [rcx + rcx], bh ; add dword ptr [rax], eax ; mov cl, byte ptr [rdx - 0x2f] ; jmp qword ptr [rsi]
0x000000000078f0a3 : add byte ptr [rcx + rdi + 4], bl ; add al, bh ; cmc ; loope 0x78f0b4 ; retf 1
0x00000000007af09b : add byte ptr [rcx + rdi - 0x235ffffa], dl ; in eax, dx ; jmp qword ptr [rdx]
0x00000000006c69d8 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x6c69a6 ; ret
0x00000000007388f3 : add byte ptr [rcx + rdi*2], dl ; salc ; jmp qword ptr [rax - 0x35]
0x00000000007b704b : add byte ptr [rcx + rdi*4 + 6], al ; add byte ptr [rax], ah ; mov dl, 0xef ; call qword ptr [rdi]
0x0000000000757083 : add byte ptr [rcx + rdi*4], bh ; add byte ptr [rsi], bh ; retf -0x31
0x0000000000777023 : add byte ptr [rcx + rdi*4], bl ; add al, byte ptr [rax] ; sbb byte ptr [rdi - 0x24], ah ; call qword ptr [rdx]
0x000000000077703b : add byte ptr [rcx + rdi*4], dh ; add al, byte ptr [rax] ; and byte ptr [rdi - 0x24], ah ; call qword ptr [rdx]
0x00000000007a703b : add byte ptr [rcx + rdi*4], dh ; add eax, 0xebdda000 ; call rsi
0x00000000007ab053 : add byte ptr [rcx + rdi*8], cl ; add eax, 0xece44800 ; jmp rbx
0x00000000007dd10f : add byte ptr [rcx + rdx + 0x11ec05], bh ; retf
0x00000000007e6898 : add byte ptr [rcx + rdx + 0xdf505], dh ; ret
0x00000000007ac863 : add byte ptr [rcx + rdx + 6], bl ; add byte ptr [rax + 0x4b], dl ; in eax, dx ; call qword ptr [rax]
0x0000000000673a2c : add byte ptr [rcx + rdx - 0x77], dh ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000079080b : add byte ptr [rcx + rdx*2], al ; add al, 0 ; add byte ptr [rcx - 0x1e], ah ; jmp qword ptr [rbx]
0x0000000000790823 : add byte ptr [rcx + rdx*2], bl ; add al, 0 ; sbb byte ptr [rcx - 0x1e], ah ; jmp qword ptr [rdx]
0x000000000079083b : add byte ptr [rcx + rdx*2], dh ; add al, 0 ; xor byte ptr [rcx - 0x1e], ah ; jmp qword ptr [rbx]
0x000000000076886b : add byte ptr [rcx + rdx*8 + 1], ah ; add ah, bl ; not edi ; jmp qword ptr [rbx]
0x00000000007688e3 : add byte ptr [rcx + rdx*8 - 0x4c1ffff], bl ; xlatb ; jmp rax
0x0000000000768843 : add byte ptr [rcx + rdx*8], bh ; add dword ptr [rax], eax ; and dh, bh ; xlatb ; jmp rdx
0x00000000007ae8ab : add byte ptr [rcx + rsi - 0x4d0ffffa], ah ; in eax, dx ; jmp qword ptr [rcx]
0x000000000076285b : add byte ptr [rcx + rsi*2 + 1], dl ; add al, bh ; mov ah, dl ; jmp qword ptr [rbx]
0x00000000007b28ab : add byte ptr [rcx + rsi*2 - 0x165ffffa], ah ; out dx, al ; jmp rdx
0x0000000000797807 : add byte ptr [rcx + rsi*2 - 0x1b], cl ; jmp rax
0x00000000007a2853 : add byte ptr [rcx + rsi*2], cl ; add eax, 0xe9044800 ; call rsi
0x00000000007b6893 : add byte ptr [rcx + rsi*4 - 0x7347fffa], cl ; out dx, eax ; jmp qword ptr [rdx]
0x00000000007aa86b : add byte ptr [rcx + rsi*8 + 5], ah ; add byte ptr [rax - 0x26], dl ; in al, dx ; call qword ptr [rdi]
0x00000000007aa89b : add byte ptr [rcx + rsi*8 - 0x259ffffb], dl ; in al, dx ; jmp qword ptr [rcx]
0x000000000073479b : add byte ptr [rcx + rsi*8 - 0x33], bh ; call rax
0x00000000007f9810 : add byte ptr [rcx + rsi], ch ; ret 0x101
0x000000000068ed55 : add byte ptr [rcx - 0x128aff60], bl ; ret
0x0000000000743b84 : add byte ptr [rcx - 0x14], ah ; call qword ptr [rax]
0x00000000007a8be0 : add byte ptr [rcx - 0x14], cl ; call qword ptr [rdx]
0x00000000004d32ee : add byte ptr [rcx - 0x17387632], cl ; retf
0x00000000004b8c29 : add byte ptr [rcx - 0x174737b3], cl ; ret 0x6e
0x000000000069e2bb : add byte ptr [rcx - 0x17e7dbbc], cl ; retf
0x000000000051110b : add byte ptr [rcx - 0x1876b322], cl ; call rax
0x000000000059f3de : add byte ptr [rcx - 0x1a], ah ; dec dword ptr [rax - 0x77] ; ret
0x0000000000790810 : add byte ptr [rcx - 0x1e], ah ; jmp qword ptr [rbx]
0x000000000073c52c : add byte ptr [rcx - 0x21], dl ; call rax
0x00000000007f4789 : add byte ptr [rcx - 0x24fafe05], bh ; cld ; add dword ptr [rax], eax ; ret
0x0000000000665dff : add byte ptr [rcx - 0x2d], al ; loopne 0x665e0d ; fld dword ptr [rbp + 9] ; ret
0x00000000007367fb : add byte ptr [rcx - 0x2f], dl ; call rax
0x00000000007f404f : add byte ptr [rcx - 0x38fafe35], cl ; retf
0x00000000006786f8 : add byte ptr [rcx - 0x39b0f008], cl ; ret
0x000000000053a4ff : add byte ptr [rcx - 0x3a], al ; sbb al, 0x18 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000527150 : add byte ptr [rcx - 0x3b7cb718], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000631e81 : add byte ptr [rcx - 0x3b7cb718], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000006318f7 : add byte ptr [rcx - 0x3b7cb728], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000434188 : add byte ptr [rcx - 0x41], al ; pop rax ; ret
0x00000000005b6522 : add byte ptr [rcx - 0x42ea003d], cl ; ret
0x00000000007cb322 : add byte ptr [rcx - 0x46fd50c3], dl ; ja 0x7cb332 ; retf
0x0000000000575d2d : add byte ptr [rcx - 0x4dea003d], cl ; retf
0x0000000000678047 : add byte ptr [rcx - 0x4e9492], dh ; dec dword ptr [rcx + 1] ; ret 0xace9
0x00000000004b69c3 : add byte ptr [rcx - 0x574737b3], cl ; ret 0x6e
0x00000000007c226e : add byte ptr [rcx - 0x5dfe6ffa], ah ; adc al, 0 ; ret 0x1807
0x00000000007f45d9 : add byte ptr [rcx - 0x5ffafe10], bh ; int1 ; add dword ptr [rax], eax ; ret
0x00000000007f2e5e : add byte ptr [rcx - 0x635cfad0], ah ; add dword ptr [rax], eax ; ret 0x5d30
0x0000000000596545 : add byte ptr [rcx - 0x65ea003b], cl ; ret
0x0000000000525d47 : add byte ptr [rcx - 0x67ea003b], cl ; retf
0x000000000050fbfa : add byte ptr [rcx - 0x6f3cf789], cl ; ret
0x00000000007558db : add byte ptr [rcx - 0x70100000], dl ; iretd ; call qword ptr [rsi]
0x00000000007443a0 : add byte ptr [rcx - 0x703fffa], al ; in eax, dx ; jmp qword ptr [rax]
0x0000000000601af3 : add byte ptr [rcx - 0x73], al ; add dword ptr [r9], r15d ; ret
0x00000000004e7740 : add byte ptr [rcx - 0x73], al ; add dword ptr [r9], r15d ; ret 0x850f
0x00000000006b53bd : add byte ptr [rcx - 0x73], al ; add dword ptr [rcx], r15d ; ret 0x840f
0x000000000059d75e : add byte ptr [rcx - 0x73], al ; jl 0x59d78f ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000005ca74f : add byte ptr [rcx - 0x73], al ; push rsi ; dec dword ptr [rax + 0x63] ; ret
0x000000000064fd44 : add byte ptr [rcx - 0x73f0fb88], cl ; retf 1
0x000000000043305f : add byte ptr [rcx - 0x74737b3], cl ; ret 0x6d
0x00000000005650fe : add byte ptr [rcx - 0x75], al ; adc byte ptr [r9], r15b ; ret
0x000000000051eecb : add byte ptr [rcx - 0x75], al ; adc byte ptr [r9], r15b ; retf
0x00000000005654b6 : add byte ptr [rcx - 0x75], al ; adc byte ptr [rcx], r15b ; ret
0x00000000006b12f5 : add byte ptr [rcx - 0x75], al ; add byte ptr [r9], r15b ; ret 0x5a7c
0x0000000000650ce7 : add byte ptr [rcx - 0x75], al ; add byte ptr [r9], r15b ; retf
0x0000000000693d23 : add byte ptr [rcx - 0x75], al ; push rbp ; add al, 0x31 ; idiv byte ptr [rcx] ; retf 0x57c
0x000000000064cfde : add byte ptr [rcx - 0x75], al ; xchg dword ptr [rax], ecx ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x8d0f
0x000000000048efb2 : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r9 - 0x77], r9b ; ret
0x0000000000537473 : add byte ptr [rcx - 0x75], cl ; adc byte ptr [rax - 0x7d], r9b ; ret 0x4801
0x000000000060840b : add byte ptr [rcx - 0x75], cl ; push rdi ; or byte ptr [rax - 0x7f], cl ; ret
0x000000000051eeca : add byte ptr [rcx - 0x75], r8b ; adc byte ptr [r9], r15b ; retf
0x000000000052ba2e : add byte ptr [rcx - 0x76b322], cl ; call rax
0x00000000006791f6 : add byte ptr [rcx - 0x76b80000], al ; ret
0x00000000005043ae : add byte ptr [rcx - 0x772dce2f], cl ; retf -0x7cb8
0x000000000069eba3 : add byte ptr [rcx - 0x77], al ; fld dword ptr [rbp - 0x77] ; ret
0x00000000006d13c2 : add byte ptr [rcx - 0x77], al ; jp 0x6d13f0 ; ret
0x00000000006b2e91 : add byte ptr [rcx - 0x77], al ; or byte ptr [rcx + 0x39], al ; retf
0x00000000005a22fb : add byte ptr [rcx - 0x77], al ; pop rbp ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000577c3d : add byte ptr [rcx - 0x77], al ; pop rdi ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000058876f : add byte ptr [rcx - 0x77], al ; pop rsi ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000057f6d0 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000664391 : add byte ptr [rcx - 0x77], al ; ret 0xb60f
0x000000000060cd63 : add byte ptr [rcx - 0x77], al ; retf
0x0000000000664436 : add byte ptr [rcx - 0x77], al ; retf -0x3077
0x000000000066435a : add byte ptr [rcx - 0x77], al ; retf -0x49f1
0x00000000004faa3d : add byte ptr [rcx - 0x77], al ; rol dword ptr [rcx + 0x29], cl ; retf
0x000000000062feaf : add byte ptr [rcx - 0x77], cl ; fsubp st(3) ; mov dh, 0xe9 ; retf -2
0x0000000000644119 : add byte ptr [rcx - 0x77], cl ; fucomp st(1) ; ret 0xffee
0x00000000005bab17 : add byte ptr [rcx - 0x77], cl ; in al, 0x39 ; ret 0x6f7e
0x00000000006b123a : add byte ptr [rcx - 0x77], cl ; out 0x39, al ; ret
0x00000000004de59f : add byte ptr [rcx - 0x77], cl ; ret
0x00000000004d563b : add byte ptr [rcx - 0x77], cl ; ret 0x72e8
0x000000000064ca55 : add byte ptr [rcx - 0x77], cl ; ret 0x850f
0x00000000004e0ea9 : add byte ptr [rcx - 0x77], cl ; ret 0x8948
0x0000000000474ce0 : add byte ptr [rcx - 0x77], cl ; ret 0x8949
0x00000000005c884e : add byte ptr [rcx - 0x77], cl ; ret 0x8b41
0x00000000004d5c0d : add byte ptr [rcx - 0x77], cl ; ret 0xbf
0x000000000064edbc : add byte ptr [rcx - 0x77], cl ; ret 0xe74
0x000000000061000a : add byte ptr [rcx - 0x77], cl ; retf
0x00000000004e296b : add byte ptr [rcx - 0x77], cl ; retf -0x76b8
0x000000000068563f : add byte ptr [rcx - 0x7c04762f], cl ; ret 0x8301
0x000000000063da32 : add byte ptr [rcx - 0x7c147628], cl ; lock add dword ptr [rax], esp ; ret
0x0000000000532912 : add byte ptr [rcx - 0x7c3ed62f], cl ; rol dword ptr [rcx], 0x39 ; retf
0x000000000058a27c : add byte ptr [rcx - 0x7cb7efa3], cl ; ret
0x000000000055fafb : add byte ptr [rcx - 0x7d], al ; cld ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000053901b : add byte ptr [rcx - 0x7d], al ; ret
0x00000000006bcc26 : add byte ptr [rcx - 0x7d], al ; ret 0x3101
0x000000000065db7c : add byte ptr [rcx - 0x7d], al ; ret 0x4101
0x00000000006c8ec7 : add byte ptr [rcx - 0x7d], al ; ret 0x4801
0x000000000066d32f : add byte ptr [rcx - 0x7d], cl ; ret
0x000000000069499c : add byte ptr [rcx - 0x7d], cl ; ret 0x4d01
0x000000000068fa5f : add byte ptr [rcx - 0x7d], cl ; ret 0xeb02
0x00000000007fa7f1 : add byte ptr [rcx - 0x7fafe70], bh ; nop ; add dword ptr [rax], eax ; ret
0x00000000006a17ff : add byte ptr [rcx - 0x7feb710], cl ; ret
0x000000000069ca0f : add byte ptr [rcx - 0x801de08], cl ; shl byte ptr [rcx], 1 ; ret 0xd089
0x0000000000694645 : add byte ptr [rcx - 0x80], al ; cld ; add al, 0xf ; xchg eax, esp ; ret 0xfb83
0x000000000069476f : add byte ptr [rcx - 0x80], al ; cld ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xfb83
0x000000000050edbe : add byte ptr [rcx - 0x80], al ; jl 0x50ede6 ; jmp qword ptr [rsi]
0x00000000006d35a6 : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rax]
0x00000000006d3592 : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rbx]
0x0000000000595ce9 : add byte ptr [rcx - 0x9ea003b], cl ; retf
0x00000000006915cc : add byte ptr [rcx - 0xf], bh ; mov eax, 1 ; ret
0x00000000006784ac : add byte ptr [rcx - 0xf], bh ; xor eax, eax ; ret
0x00000000007cbc96 : add byte ptr [rcx], 0x33 ; add byte ptr [rax], al ; ret
0x00000000007c6d9f : add byte ptr [rcx], 0x3b ; add byte ptr [rax], al ; retf
0x00000000007ccb84 : add byte ptr [rcx], 0xd7 ; add al, 0 ; ret 0x501
0x00000000007faee7 : add byte ptr [rcx], 0xd8 ; add ch, ch ; ret
0x00000000007b3745 : add byte ptr [rcx], 2 ; retf 0xe0a
0x00000000007be3c9 : add byte ptr [rcx], 3 ; ret
0x00000000007716d5 : add byte ptr [rcx], 3 ; retf 0xa01
0x00000000006fc243 : add byte ptr [rcx], al ; add al, 0 ; add al, cl ; ret
0x00000000006dcb23 : add byte ptr [rcx], al ; add al, 0 ; add al, cl ; retf 0x6d
0x000000000073c648 : add byte ptr [rcx], al ; add al, 0 ; add byte ptr [rbp - 0x21], dh ; jmp qword ptr [rax]
0x000000000070c283 : add byte ptr [rcx], al ; add al, byte ptr [rax] ; add al, cl ; ret 0x70
0x000000000070c983 : add byte ptr [rcx], al ; add al, byte ptr [rax] ; add byte ptr [rax], cl ; retf 0x70
0x00000000004fead5 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add al, ch ; xchg eax, ecx ; ret 0x18
0x000000000050eff3 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000717d29 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; retf
0x000000000071e5e9 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; retf
0x00000000006cbcf3 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000518c9a : add byte ptr [rcx], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000006a69ac : add byte ptr [rcx], al ; add byte ptr [rax], al ; call rax
0x000000000066418b : add byte ptr [rcx], al ; add byte ptr [rax], al ; jne 0x66415f ; ret
0x000000000041500b : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000621e0f : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000687c9c : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000518151 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000075588b : add byte ptr [rcx], al ; add byte ptr [rsi + rcx*4], bl ; iretd ; call rbx
0x000000000053b5fb : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000066b14e : add byte ptr [rcx], al ; add rsp, 8 ; ret
0x0000000000525e7d : add byte ptr [rcx], al ; call qword ptr [rip + 0x4dca5b]
0x000000000068797c : add byte ptr [rcx], al ; enter 0x3948, -0x29 ; jne 0x687978 ; ret
0x000000000066b476 : add byte ptr [rcx], al ; je 0x66b485 ; pop rbx ; ret
0x000000000066b5b3 : add byte ptr [rcx], al ; je 0x66b5c8 ; add rsp, 8 ; ret
0x000000000066b7f5 : add byte ptr [rcx], al ; je 0x66b804 ; ret
0x000000000066b813 : add byte ptr [rcx], al ; je 0x66b825 ; pop rbx ; ret
0x0000000000671bd5 : add byte ptr [rcx], al ; je 0x671be5 ; pop rbx ; ret
0x000000000065c855 : add byte ptr [rcx], al ; mfence ; ret
0x0000000000689b16 : add byte ptr [rcx], al ; mov eax, 0xa096e0 ; ret
0x00000000006bed25 : add byte ptr [rcx], al ; mov rax, qword ptr [rip + 0x343b7a] ; jmp rax
0x00000000006bf4cd : add byte ptr [rcx], al ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000040bfc6 : add byte ptr [rcx], al ; pop rbp ; ret
0x0000000000672599 : add byte ptr [rcx], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000536cce : add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000408ae8 : add byte ptr [rcx], al ; ret
0x0000000000722d03 : add byte ptr [rcx], al ; ret 0x376a
0x0000000000493fec : add byte ptr [rcx], al ; ret 0xc085
0x00000000006c5391 : add byte ptr [rcx], al ; retf
0x00000000005fffa2 : add byte ptr [rcx], al ; retf -0x2ec7
0x00000000004deef5 : add byte ptr [rcx], al ; retf -0x3dc7
0x00000000004a426e : add byte ptr [rcx], al ; retf -0x3f7b
0x000000000043e86e : add byte ptr [rcx], bh ; ret
0x0000000000440027 : add byte ptr [rcx], bh ; ret 0x117c
0x00000000004c7da6 : add byte ptr [rcx], bh ; ret 0x117e
0x00000000004684ef : add byte ptr [rcx], bh ; ret 0x127c
0x0000000000494440 : add byte ptr [rcx], bh ; ret 0x137d
0x0000000000425e48 : add byte ptr [rcx], bh ; ret 0x147c
0x000000000043b375 : add byte ptr [rcx], bh ; ret 0x1672
0x0000000000452637 : add byte ptr [rcx], bh ; ret 0x167c
0x00000000004a5714 : add byte ptr [rcx], bh ; ret 0x187c
0x00000000005f2057 : add byte ptr [rcx], bh ; ret 0x1b7d
0x0000000000494462 : add byte ptr [rcx], bh ; ret 0x1c7c
0x00000000004e27fb : add byte ptr [rcx], bh ; ret 0x1d7c
0x000000000043fb22 : add byte ptr [rcx], bh ; ret 0x1d7d
0x000000000043d800 : add byte ptr [rcx], bh ; ret 0x1e72
0x0000000000469226 : add byte ptr [rcx], bh ; ret 0x1e7c
0x000000000045066e : add byte ptr [rcx], bh ; ret 0x1f75
0x00000000005a2692 : add byte ptr [rcx], bh ; ret 0x1f7c
0x000000000043b5f0 : add byte ptr [rcx], bh ; ret 0x2072
0x000000000055e053 : add byte ptr [rcx], bh ; ret 0x217f
0x00000000004dafe4 : add byte ptr [rcx], bh ; ret 0x227c
0x000000000050b028 : add byte ptr [rcx], bh ; ret 0x227f
0x000000000043c2e0 : add byte ptr [rcx], bh ; ret 0x2472
0x00000000005f20b9 : add byte ptr [rcx], bh ; ret 0x247c
0x00000000004467de : add byte ptr [rcx], bh ; ret 0x2572
0x0000000000557e06 : add byte ptr [rcx], bh ; ret 0x257f
0x000000000043c44f : add byte ptr [rcx], bh ; ret 0x2672
0x000000000043fb58 : add byte ptr [rcx], bh ; ret 0x267c
0x0000000000480142 : add byte ptr [rcx], bh ; ret 0x287c
0x0000000000469194 : add byte ptr [rcx], bh ; ret 0x2a7c
0x00000000004d9c16 : add byte ptr [rcx], bh ; ret 0x2c7c
0x00000000004691d5 : add byte ptr [rcx], bh ; ret 0x3a7c
0x0000000000567b3d : add byte ptr [rcx], bh ; ret 0x3e74
0x000000000068b23f : add byte ptr [rcx], bh ; ret 0x447d
0x000000000059c374 : add byte ptr [rcx], bh ; ret 0x577e
0x00000000006b12f9 : add byte ptr [rcx], bh ; ret 0x5a7c
0x000000000059c141 : add byte ptr [rcx], bh ; ret 0x5a7e
0x000000000062303a : add byte ptr [rcx], bh ; ret 0x5f7c
0x0000000000610e8c : add byte ptr [rcx], bh ; ret 0x6348
0x00000000006c32e8 : add byte ptr [rcx], bh ; ret 0x6b7f
0x00000000006c2c18 : add byte ptr [rcx], bh ; ret 0x6d7f
0x0000000000450686 : add byte ptr [rcx], bh ; ret 0x775
0x000000000043c2ad : add byte ptr [rcx], bh ; ret 0x840f
0x000000000058f22a : add byte ptr [rcx], bh ; ret 0x850f
0x0000000000568da3 : add byte ptr [rcx], bh ; ret 0x8875
0x000000000043fb3b : add byte ptr [rcx], bh ; ret 0x8c0f
0x000000000043c420 : add byte ptr [rcx], bh ; ret 0x8d0f
0x0000000000655055 : add byte ptr [rcx], bh ; ret 0x8d4c
0x00000000005253d6 : add byte ptr [rcx], bh ; ret 0x8e0f
0x0000000000633d79 : add byte ptr [rcx], bh ; ret 0x8f0f
0x000000000043fd2b : add byte ptr [rcx], bh ; ret 0x97d
0x00000000005f250e : add byte ptr [rcx], bh ; ret 0xc7d
0x00000000005f273a : add byte ptr [rcx], bh ; ret 0xd7d
0x0000000000692538 : add byte ptr [rcx], bh ; ret 0xe375
0x00000000007ca710 : add byte ptr [rcx], bh ; ret 1
0x000000000050db64 : add byte ptr [rcx], bh ; retf
0x00000000006a1a8f : add byte ptr [rcx], bh ; retf -0x3777
0x00000000006a3baf : add byte ptr [rcx], bh ; retf -0x49f1
0x000000000059c564 : add byte ptr [rcx], bh ; retf -0x70f1
0x00000000004faa4c : add byte ptr [rcx], bh ; retf -0x73f1
0x00000000006a15b7 : add byte ptr [rcx], bh ; retf 0x1477
0x000000000067f483 : add byte ptr [rcx], bh ; retf 0x57c
0x00000000006a1b4f : add byte ptr [rcx], bh ; retf 0x6c74
0x000000000050929c : add byte ptr [rcx], bh ; retf 0xa7c
0x00000000006a1c0f : add byte ptr [rcx], bh ; retf 0xc74
0x000000000069281c : add byte ptr [rcx], bh ; sal byte ptr [rax + rdx + 0x48], 1 ; add esp, 8 ; ret
0x0000000000690871 : add byte ptr [rcx], bh ; sal byte ptr [rbp + rax + 0x48], 1 ; add esp, 8 ; ret
0x000000000052e591 : add byte ptr [rcx], bl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000472884 : add byte ptr [rcx], bl ; call rax
0x00000000006d49f0 : add byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x4e ; or byte ptr [rdi], cl ; ret 0x90c3
0x0000000000740168 : add byte ptr [rcx], ch ; add eax, 0xe51b1000 ; jmp qword ptr [rax]
0x000000000074b6ac : add byte ptr [rcx], ch ; cli ; jmp rax
0x00000000006940bc : add byte ptr [rcx], ch ; enter -0x38d7, -0x77 ; clc ; ret
0x00000000006ad9f7 : add byte ptr [rcx], ch ; fadd dword ptr [rbx + 0x14101c0] ; ret 0x634d
0x00000000005067e4 : add byte ptr [rcx], ch ; fmul dword ptr [rax + 0x63] ; retf
0x00000000004f6a53 : add byte ptr [rcx], ch ; ret
0x000000000068b287 : add byte ptr [rcx], ch ; ret 0x4a8d
0x000000000056062d : add byte ptr [rcx], ch ; ret 0x6348
0x000000000067cce3 : add byte ptr [rcx], ch ; ret 0x634c
0x00000000005cb202 : add byte ptr [rcx], ch ; ret 0xb8
0x0000000000562947 : add byte ptr [rcx], ch ; ret 0xbf
0x00000000006d058f : add byte ptr [rcx], ch ; ret 0xc283
0x0000000000425e57 : add byte ptr [rcx], ch ; ret 0xd089
0x000000000065199e : add byte ptr [rcx], ch ; ret 0xfa83
0x00000000006c258f : add byte ptr [rcx], ch ; ret 0xff31
0x00000000005c9d22 : add byte ptr [rcx], ch ; retf
0x00000000005ff05f : add byte ptr [rcx], ch ; retf -0x42bf
0x0000000000677b57 : add byte ptr [rcx], ch ; rol byte ptr [rcx - 0x75], 1 ; adc dword ptr [rcx - 0x77], eax ; retf -0x7cb7
0x000000000069eb95 : add byte ptr [rcx], ch ; rol dword ptr [rbx + 0x394401c1], 1 ; ret
0x000000000068c1b7 : add byte ptr [rcx], ch ; ror byte ptr [rax + 0x63], 1 ; retf
0x00000000006bb2cf : add byte ptr [rcx], ch ; ror dword ptr [rcx + 0x39444441], cl ; retf
0x0000000000717c83 : add byte ptr [rcx], cl ; add byte ptr [rax], al ; add byte ptr [rax], dh ; retf
0x000000000071e543 : add byte ptr [rcx], cl ; add byte ptr [rax], al ; add byte ptr [rax], dl ; retf
0x0000000000723e11 : add byte ptr [rcx], cl ; add byte ptr [rbx + 1], cl ; or dword ptr [rax], eax ; retf
0x000000000072119c : add byte ptr [rcx], cl ; ret
0x0000000000720d9c : add byte ptr [rcx], cl ; ret 0x1000
0x000000000072121c : add byte ptr [rcx], cl ; retf
0x0000000000720e1c : add byte ptr [rcx], cl ; retf 0x1100
0x0000000000533b1d : add byte ptr [rcx], dh ; fisttp dword ptr [rbp - 0x7b] ; in al, 0x74 ; retf
0x000000000060a717 : add byte ptr [rcx], dh ; fucomi st(3) ; ret
0x0000000000515e3f : add byte ptr [rcx], dh ; in eax, dx ; call qword ptr [rip + 0x4eca98]
0x00000000005541cd : add byte ptr [rcx], dh ; in eax, dx ; jmp 0x554199
0x00000000004faa7e : add byte ptr [rcx], dh ; leave ; call r8
0x0000000000606f99 : add byte ptr [rcx], dh ; leave ; mov rdx, rsp ; mov rdi, r14 ; call rax
0x00000000004fcf75 : add byte ptr [rcx], dh ; leave ; mov rsi, rbx ; mov rdx, r13 ; call rax
0x00000000004ff9ce : add byte ptr [rcx], dh ; leave ; mov rsi, rbx ; mov rdx, r14 ; call rax
0x0000000000503143 : add byte ptr [rcx], dh ; leave ; mov rsi, rbx ; mov rdx, r15 ; call rax
0x0000000000525c0f : add byte ptr [rcx], dh ; push qword ptr [rcx] ; ror byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000545563 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000006b2a2d : add byte ptr [rcx], dh ; ret 0xc031
0x000000000069c645 : add byte ptr [rcx], dh ; rol bh, 5 ; retf 0x36d5
0x00000000006c6ccf : add byte ptr [rcx], dh ; rol byte ptr [rax + 0x38], 0xfe ; je 0x6c6ce8 ; ret
0x000000000052a8a8 : add byte ptr [rcx], dh ; rol byte ptr [rcx - 0x7d], 0xc6 ; add eax, ebp ; pushfq ; call qword ptr [rdi]
0x00000000005179f2 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0x15 ; pushfq ; ret 0x4e
0x00000000005ae19b : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0x15 ; ret
0x00000000005730cb : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0xdf ; call 0x67fb5a
0x000000000051b49f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000006a554f : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x38db1050], cl ; ret
0x0000000000530cff : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000052798e : add byte ptr [rcx], dh ; sal byte ptr [rcx], 0xd2 ; pop rbx ; ret
0x0000000000506b2f : add byte ptr [rcx], dh ; sal byte ptr [rcx], 0xd2 ; ret
0x00000000006ca8b7 : add byte ptr [rcx], dh ; sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xf0 ; ret
0x00000000006cba8f : add byte ptr [rcx], dh ; sar byte ptr [rax], 0xca ; je 0x6cbaa7 ; ret
0x000000000050a0d6 : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret 0x840f
0x00000000004f50df : add byte ptr [rcx], dh ; shr al, 0x13 ; ret 0x18
0x00000000005340d0 : add byte ptr [rcx], dh ; shr al, 0x14 ; retf 0x14
0x00000000005c4170 : add byte ptr [rcx], dh ; shr al, 0x14 ; retf 0xb
0x00000000006450dd : add byte ptr [rcx], dh ; shr al, 0x15 ; ret 3
0x00000000004f486e : add byte ptr [rcx], dh ; shr al, 0x16 ; ret
0x000000000056a931 : add byte ptr [rcx], dh ; shr al, 0x17 ; call qword ptr [rbx]
0x00000000006340a3 : add byte ptr [rcx], dh ; shr al, 0x19 ; retf 4
0x0000000000643fc4 : add byte ptr [rcx], dh ; shr al, 0x20 ; retf
0x00000000005b48bf : add byte ptr [rcx], dh ; shr al, 0x25 ; ret 0xc
0x00000000005a47c7 : add byte ptr [rcx], dh ; shr al, 0x2b ; retf
0x0000000000649abe : add byte ptr [rcx], dh ; shr al, 0x34 ; js 0x649ad1 ; add cl, ch ; retf -2
0x0000000000644fbc : add byte ptr [rcx], dh ; shr al, 0x36 ; ret
0x00000000004f50ba : add byte ptr [rcx], dh ; shr al, 0x38 ; ret 0x18
0x00000000005b47ab : add byte ptr [rcx], dh ; shr al, 0x39 ; ret
0x0000000000634083 : add byte ptr [rcx], dh ; shr al, 0x39 ; retf 4
0x0000000000534fb8 : add byte ptr [rcx], dh ; shr al, 0x3a ; ret
0x00000000004048b6 : add byte ptr [rcx], dh ; shr al, 0x3c ; retf 0x27
0x00000000005b40a7 : add byte ptr [rcx], dh ; shr al, 0x3d ; retf 0xc
0x0000000000543809 : add byte ptr [rcx], dh ; shr al, 0x3f ; ret
0x00000000006440a5 : add byte ptr [rcx], dh ; shr al, 0x3f ; retf 3
0x0000000000604144 : add byte ptr [rcx], dh ; shr al, 0x40 ; retf 7
0x00000000006add06 : add byte ptr [rcx], dh ; shr al, 0x42 ; retf
0x0000000000560b9f : add byte ptr [rcx], dh ; shr al, 0x45 ; call qword ptr [rcx]
0x0000000000500c3b : add byte ptr [rcx], dh ; shr al, 0x49 ; call qword ptr [rdi]
0x00000000005447a9 : add byte ptr [rcx], dh ; shr al, 0x49 ; retf
0x0000000000500c5d : add byte ptr [rcx], dh ; shr al, 0x4f ; call qword ptr [rdi]
0x00000000004f485d : add byte ptr [rcx], dh ; shr al, 0x4f ; ret
0x0000000000644094 : add byte ptr [rcx], dh ; shr al, 0x50 ; retf 3
0x00000000005350a1 : add byte ptr [rcx], dh ; shr al, 0x51 ; ret 0x14
0x0000000000560b8e : add byte ptr [rcx], dh ; shr al, 0x56 ; call qword ptr [rcx]
0x0000000000404066 : add byte ptr [rcx], dh ; shr al, 0x56 ; retf 0x27
0x0000000000404054 : add byte ptr [rcx], dh ; shr al, 0x58 ; retf
0x000000000056a8ee : add byte ptr [rcx], dh ; shr al, 0x5a ; call qword ptr [rbx]
0x0000000000554761 : add byte ptr [rcx], dh ; shr al, 0x5b ; ret
0x0000000000644895 : add byte ptr [rcx], dh ; shr al, 0x5d ; retf 3
0x00000000006847ae : add byte ptr [rcx], dh ; shr al, 0x5e ; ret
0x0000000000515092 : add byte ptr [rcx], dh ; shr al, 0x60 ; ret 0x16
0x0000000000404124 : add byte ptr [rcx], dh ; shr al, 0x60 ; retf 0x27
0x00000000005a4058 : add byte ptr [rcx], dh ; shr al, 0x64 ; retf 0xd
0x000000000053d157 : add byte ptr [rcx], dh ; shr al, 0x65 ; cmp dword ptr [rax + rax], edx ; nop ; ret
0x000000000059478d : add byte ptr [rcx], dh ; shr al, 0x65 ; retf
0x00000000004f4f8a : add byte ptr [rcx], dh ; shr al, 0x68 ; ret
0x00000000005b477b : add byte ptr [rcx], dh ; shr al, 0x69 ; ret
0x0000000000534076 : add byte ptr [rcx], dh ; shr al, 0x6e ; retf 0x14
0x0000000000404f81 : add byte ptr [rcx], dh ; shr al, 0x71 ; ret
0x0000000000643f73 : add byte ptr [rcx], dh ; shr al, 0x71 ; retf
0x00000000006b5080 : add byte ptr [rcx], dh ; shr al, 0x72 ; ret 0xfffc
0x00000000005b507c : add byte ptr [rcx], dh ; shr al, 0x76 ; ret 0xc
0x000000000059477c : add byte ptr [rcx], dh ; shr al, 0x76 ; retf
0x000000000064507a : add byte ptr [rcx], dh ; shr al, 0x78 ; ret 3
0x0000000000644f71 : add byte ptr [rcx], dh ; shr al, 0x81 ; ret
0x0000000000514f6d : add byte ptr [rcx], dh ; shr al, 0x85 ; ret
0x00000000005a3ffb : add byte ptr [rcx], dh ; shr al, 0x89 ; retf
0x0000000000644767 : add byte ptr [rcx], dh ; shr al, 0x8b ; retf
0x0000000000545064 : add byte ptr [rcx], dh ; shr al, 0x8e ; ret 0x13
0x000000000053dcba : add byte ptr [rcx], dh ; shr al, 0x8e ; retf
0x0000000000404763 : add byte ptr [rcx], dh ; shr al, 0x8f ; retf
0x0000000000604863 : add byte ptr [rcx], dh ; shr al, 0x8f ; retf 7
0x0000000000510b2c : add byte ptr [rcx], dh ; shr al, 0x90 ; call qword ptr [rsi]
0x0000000000634028 : add byte ptr [rcx], dh ; shr al, 0x94 ; retf 4
0x0000000000404112 : add byte ptr [rcx], dh ; shr al, 0x9a ; retf 0x27
0x0000000000644856 : add byte ptr [rcx], dh ; shr al, 0x9c ; retf 3
0x00000000005a4818 : add byte ptr [rcx], dh ; shr al, 0xa4 ; ret 0xd
0x000000000056504c : add byte ptr [rcx], dh ; shr al, 0xa6 ; ret 0x11
0x00000000006c4865 : add byte ptr [rcx], dh ; shr al, 0xa7 ; ret 0xfffb
0x0000000000554814 : add byte ptr [rcx], dh ; shr al, 0xa8 ; ret 0x12
0x0000000000644745 : add byte ptr [rcx], dh ; shr al, 0xad ; retf
0x000000000062fbd6 : add byte ptr [rcx], dh ; shr al, 0xae ; syscall
0x00000000006047f9 : add byte ptr [rcx], dh ; shr al, 0xb3 ; ret
0x000000000056473f : add byte ptr [rcx], dh ; shr al, 0xb3 ; retf
0x0000000000547207 : add byte ptr [rcx], dh ; shr al, 0xb5 ; cwde ; adc eax, dword ptr [rax] ; nop ; ret
0x000000000055473d : add byte ptr [rcx], dh ; shr al, 0xb5 ; retf
0x00000000005a406b : add byte ptr [rcx], dh ; shr al, 0xb5 ; retf 0xd
0x0000000000554803 : add byte ptr [rcx], dh ; shr al, 0xb9 ; ret 0x12
0x0000000000500bc9 : add byte ptr [rcx], dh ; shr al, 0xbb ; call qword ptr [rdi]
0x0000000000403efe : add byte ptr [rcx], dh ; shr al, 0xbe ; retf
0x000000000062fbc5 : add byte ptr [rcx], dh ; shr al, 0xbf ; syscall
0x00000000005a485d : add byte ptr [rcx], dh ; shr al, 0xc3 ; ret 0xd
0x000000000064502f : add byte ptr [rcx], dh ; shr al, 0xc3 ; ret 3
0x00000000004047c0 : add byte ptr [rcx], dh ; shr al, 0xc4 ; ret
0x00000000006314e8 : add byte ptr [rcx], dh ; shr al, 0xc4 ; test byte ptr [rax + rax], 0xbe ; retf
0x0000000000644829 : add byte ptr [rcx], dh ; shr al, 0xc9 ; retf 3
0x0000000000535027 : add byte ptr [rcx], dh ; shr al, 0xcb ; ret 0x14
0x00000000005c47e0 : add byte ptr [rcx], dh ; shr al, 0xcc ; ret
0x0000000000560b15 : add byte ptr [rcx], dh ; shr al, 0xcf ; call qword ptr [rcx]
0x000000000062fbb4 : add byte ptr [rcx], dh ; shr al, 0xd0 ; syscall
0x0000000000515021 : add byte ptr [rcx], dh ; shr al, 0xd1 ; ret 0x16
0x0000000000500bda : add byte ptr [rcx], dh ; shr al, 0xd2 ; call qword ptr [rdi]
0x000000000040481f : add byte ptr [rcx], dh ; shr al, 0xd3 ; retf 0x27
0x00000000005b471c : add byte ptr [rcx], dh ; shr al, 0xd6 ; retf
0x0000000000560bd5 : add byte ptr [rcx], dh ; shr al, 0xd7 ; call qword ptr [rcx]
0x00000000006047ac : add byte ptr [rcx], dh ; shr al, 0xd8 ; ret
0x00000000005b480b : add byte ptr [rcx], dh ; shr al, 0xd9 ; ret 0xc
0x000000000056f2a9 : add byte ptr [rcx], dh ; shr al, 0xdb ; sbb byte ptr [rcx], dl ; add al, ch ; ret 0xe95b
0x00000000006047ce : add byte ptr [rcx], dh ; shr al, 0xde ; ret
0x0000000000560b04 : add byte ptr [rcx], dh ; shr al, 0xe0 ; call qword ptr [rcx]
0x000000000062fba3 : add byte ptr [rcx], dh ; shr al, 0xe1 ; syscall
0x00000000005547d8 : add byte ptr [rcx], dh ; shr al, 0xe4 ; ret 0x12
0x000000000053500c : add byte ptr [rcx], dh ; shr al, 0xe6 ; ret 0x14
0x000000000060479b : add byte ptr [rcx], dh ; shr al, 0xe9 ; ret
0x00000000005b3ffa : add byte ptr [rcx], dh ; shr al, 0xea ; retf 0xc
0x0000000000644f07 : add byte ptr [rcx], dh ; shr al, 0xeb ; ret
0x0000000000405005 : add byte ptr [rcx], dh ; shr al, 0xed ; ret 0x27
0x00000000006047bd : add byte ptr [rcx], dh ; shr al, 0xef ; ret
0x000000000054dc59 : add byte ptr [rcx], dh ; shr al, 0xef ; retf
0x0000000000514f01 : add byte ptr [rcx], dh ; shr al, 0xf1 ; ret
0x00000000005b5001 : add byte ptr [rcx], dh ; shr al, 0xf1 ; ret 0xc
0x000000000062fb92 : add byte ptr [rcx], dh ; shr al, 0xf2 ; syscall
0x00000000005c4891 : add byte ptr [rcx], dh ; shr al, 0xf3 ; ret 0xb
0x00000000005a482b : add byte ptr [rcx], dh ; shr al, 0xf5 ; ret 0xd
0x0000000000583f52 : add byte ptr [rcx], dh ; shr al, 0xf6 ; retf
0x0000000000643eec : add byte ptr [rcx], dh ; shr al, 0xf8 ; retf
0x000000000060d7f9 : add byte ptr [rcx], dh ; shr al, 0xf9 ; cmp al, byte ptr [rdi] ; add cl, ch ; retf
0x0000000000553fbf : add byte ptr [rcx], dh ; shr al, 0xfd ; retf 0x12
0x00000000005a4ef4 : add byte ptr [rcx], dh ; shr al, 0xfe ; ret
0x00000000006340b9 : add byte ptr [rcx], dh ; shr al, 3 ; retf 4
0x00000000005b47db : add byte ptr [rcx], dh ; shr al, 9 ; ret
0x000000000064412b : add byte ptr [rcx], dh ; shr al, 9 ; retf 3
0x000000000054238f : add byte ptr [rcx], dh ; shr cl, cl ; retf -5
0x000000000040489a : add byte ptr [rcx], dh ; test byte ptr [rcx + rcx*4 - 0x19], 0xe8 ; retf
0x000000000073fc08 : add byte ptr [rcx], dl ; add eax, 0xe4dff000 ; jmp qword ptr [rax]
0x00000000004f28ad : add byte ptr [rcx], dl ; call rax
0x00000000005179f1 : add byte ptr [rcx], r14b ; ror byte ptr [rax - 0x77], 0x15 ; pushfq ; ret 0x4e
0x0000000000536ccd : add byte ptr [rcx], r8b ; pop rbx ; ret
0x00000000005541cc : add byte ptr [rcx], sil ; in eax, dx ; jmp 0x55419a
0x000000000050ac36 : add byte ptr [rcx], sil ; sal byte ptr [rcx], 0xd2 ; ret
0x00000000007d4951 : add byte ptr [rdi + 0x11de410f], dh ; add ch, bh ; syscall
0x00000000007e8486 : add byte ptr [rdi + 0x16], ah ; ret 0x516
0x00000000004c2380 : add byte ptr [rdi + 0x18], bh ; call 0x6be5d8
0x00000000004c9ecc : add byte ptr [rdi + 0x1f], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000582340 : add byte ptr [rdi + 0x20], bh ; call 0x6be5d8
0x00000000007edc7c : add byte ptr [rdi + 0x250f], ch ; out dx, al ; syscall
0x00000000007c6852 : add byte ptr [rdi + 0x27d305], ah ; ret
0x00000000006b24e9 : add byte ptr [rdi + 0x44], bh ; ret
0x0000000000744678 : add byte ptr [rdi + 0x4e3e0006], cl ; out dx, al ; jmp qword ptr [rax]
0x00000000007ea52c : add byte ptr [rdi + 0x6e], cl ; ret 0x102
0x00000000005a4847 : add byte ptr [rdi + 0x70d6e8], bh ; call 0x680acc
0x0000000000634044 : add byte ptr [rdi + 0x71dd68], bh ; call 0x680acc
0x00000000006772bc : add byte ptr [rdi + 0x7ceeca53], bl ; insd dword ptr [rdi], dx ; ret
0x00000000006772cb : add byte ptr [rdi + 0x7ceeca53], bl ; insd dword ptr [rdi], dx ; xor eax, eax ; ret
0x00000000007d321d : add byte ptr [rdi + 0x9f8050f], ch ; add bl, al ; syscall
0x0000000000674410 : add byte ptr [rdi + 0xa029c0], bh ; call 0x68066e
0x0000000000523b94 : add byte ptr [rdi + 0xa02a40], bh ; call 0x68066e
0x000000000041b2c6 : add byte ptr [rdi + 0xa02ec0], bh ; call 0x6a7db8
0x000000000052c684 : add byte ptr [rdi + 0xa03e00], bh ; call rax
0x000000000062571c : add byte ptr [rdi + 0xa087e0], bh ; call 0x6819f8
0x00000000006cb2c8 : add byte ptr [rdi + 0xa0d280], bh ; call 0x6a7da8
0x00000000006cb2d8 : add byte ptr [rdi + 0xa0d280], bh ; jmp 0x6a7db8
0x00000000007c70d7 : add byte ptr [rdi + 0xbaa04], ch ; add ah, ah ; syscall
0x00000000007dd0d6 : add byte ptr [rdi + 0xfc6050f], dh ; add al, bl ; syscall
0x00000000007d45e4 : add byte ptr [rdi + 0xfd2050f], dh ; add cl, al ; syscall
0x00000000007cb52c : add byte ptr [rdi + 0xfeb050f], bh ; add bl, bl ; syscall
0x00000000006d4009 : add byte ptr [rdi + 1], bh ; call r14
0x00000000006d4035 : add byte ptr [rdi + 1], bh ; call rax
0x00000000006b3b2e : add byte ptr [rdi + 1], bh ; ret
0x0000000000761ebb : add byte ptr [rdi + 1], dh ; add al, dh ; adc dl, ah ; call rcx
0x00000000006ce0da : add byte ptr [rdi + 3], bh ; ret
0x00000000007dbe17 : add byte ptr [rdi + 5], al ; retf 0x309
0x00000000007e611a : add byte ptr [rdi + 6], al ; call qword ptr [rdx]
0x00000000007ade5b : add byte ptr [rdi + 6], dl ; add al, ah ; wait ; in eax, dx ; call qword ptr [rdx]
0x00000000007dc993 : add byte ptr [rdi + 6], dl ; ret
0x00000000007f9511 : add byte ptr [rdi + 7], al ; retf 4
0x00000000005058ed : add byte ptr [rdi + 8], bh ; xor eax, eax ; ret
0x00000000007f1174 : add byte ptr [rdi + rax + 0x324881e], ch ; retf -0x23f9
0x00000000007abea3 : add byte ptr [rdi + rax + 0x3ec20006], bl ; in eax, dx ; jmp qword ptr [rcx]
0x00000000007abec3 : add byte ptr [rdi + rax + 0x3ec40006], bh ; in eax, dx ; jmp qword ptr [rsi]
0x00000000007abe8b : add byte ptr [rdi + rax + 0x3ec60006], al ; in eax, dx ; call qword ptr [rbx]
0x00000000007bbe5b : add byte ptr [rdi + rax + 7], dl ; add byte ptr [rax], dl ; div eax ; call qword ptr [rdi]
0x0000000000737deb : add byte ptr [rdi + rax - 0x6abf002c], dl ; add al, byte ptr [rax] ; retf -0x2bf9
0x0000000000747fa0 : add byte ptr [rdi + rax - 0xa579000], bh ; jmp qword ptr [rax]
0x0000000000747440 : add byte ptr [rdi + rax - 0xb3d1400], al ; jmp qword ptr [rax]
0x00000000006ce14e : add byte ptr [rdi + rax - 0xd], dh ; ret
0x00000000006d964f : add byte ptr [rdi + rax*2 + 0x42], al ; add byte ptr [rax], al ; retf 0x4247
0x000000000076fe8b : add byte ptr [rdi + rax*2 + 0x43ac0002], al ; leave ; call qword ptr [rdx]
0x00000000007afe5b : add byte ptr [rdi + rax*2 + 6], dl ; add al, al ; imul ch ; call qword ptr [rax]
0x0000000000737dfb : add byte ptr [rdi + rax*2 - 0x6a6f002c], ah ; add al, byte ptr [rax] ; ret 0xd447
0x000000000074fe33 : add byte ptr [rdi + rax*2], ch ; add byte ptr [rax], al ; retf -0x32b6
0x000000000075fe33 : add byte ptr [rdi + rax*2], ch ; add dword ptr [rax], eax ; cmp dh, byte ptr [rcx - 0x2d] ; jmp qword ptr [rsi]
0x000000000075fe13 : add byte ptr [rdi + rax*2], cl ; add dword ptr [rax], eax ; cmp byte ptr [rcx - 0x2d], dh ; jmp qword ptr [rcx]
0x0000000000763e2b : add byte ptr [rdi + rax*4], ah ; add dword ptr [rax], eax ; ret 0xd52e
0x0000000000763e4b : add byte ptr [rdi + rax*4], al ; add dword ptr [rax], eax ; ret 0xd52e
0x0000000000753e93 : add byte ptr [rdi + rax*4], cl ; add byte ptr [rdx], dl ; in eax, -0x32 ; call rsp
0x00000000007a7e8b : add byte ptr [rdi + rax*8 + 0x18800005], al ; in al, dx ; jmp qword ptr [rdx]
0x0000000000777e6b : add byte ptr [rdi + rax*8 + 2], ah ; add byte ptr [rax], dl ; retf
0x0000000000777e53 : add byte ptr [rdi + rax*8 + 2], cl ; add al, bl ; jnp 0x777e3f ; jmp qword ptr [rdx]
0x0000000000757e8b : add byte ptr [rdi + rax*8 - 0x1d320000], al ; iretd ; call qword ptr [rcx]
0x0000000000757eab : add byte ptr [rdi + rax*8 - 0x1d400000], ah ; iretd ; call qword ptr [rcx]
0x0000000000777e0b : add byte ptr [rdi + rax*8], al ; add al, byte ptr [rax] ; retf
0x0000000000757e4b : add byte ptr [rdi + rax*8], al ; add dh, bl ; loop 0x757e2a ; jmp qword ptr [rax]
0x0000000000777e23 : add byte ptr [rdi + rax*8], bl ; add al, byte ptr [rax] ; retf
0x00000000005fd027 : add byte ptr [rdi + rbp - 0x7d], dh ; ret 0x4901
0x00000000007a265b : add byte ptr [rdi + rbp*2], dl ; add eax, 0xe8fe1000 ; call rsi
0x00000000007b666b : add byte ptr [rdi + rbp*4 + 6], ah ; add byte ptr [rax - 0x79], dl ; out dx, eax ; call qword ptr [rbx]
0x00000000007b66ab : add byte ptr [rdi + rbp*4 - 0x784ffffa], ah ; out dx, eax ; call qword ptr [rbx]
0x0000000000737cbb : add byte ptr [rdi + rbp*8 - 0x2d], ah ; call rax
0x000000000075dbc7 : add byte ptr [rdi + rbp*8 - 0x2f], al ; call qword ptr [rdx]
0x00000000007e5379 : add byte ptr [rdi + rbx + 0x3323ce05], bh ; ret
0x00000000007956ab : add byte ptr [rdi + rbx*4 + 4], ah ; add byte ptr [rdx + rdx - 0x1b], dh ; call rsp
0x00000000007ca1d9 : add byte ptr [rdi + rbx], dh ; retf
0x00000000007cb90f : add byte ptr [rdi + rcx + 0x12cd32], dh ; cld ; syscall
0x00000000006757ee : add byte ptr [rdi + rcx + 0x48], dh ; add esp, 0x18 ; ret
0x00000000006bef84 : add byte ptr [rdi + rcx + 0x49], al ; ret 0x8941
0x0000000000693af0 : add byte ptr [rdi + rcx + 0x4d], al ; ret 0x6349
0x000000000067663e : add byte ptr [rdi + rcx + 0x5b], bh ; pop rbp ; pop r12 ; ret
0x00000000007cd44d : add byte ptr [rdi + rcx + 0x90fa805], cl ; sahf ; syscall
0x00000000007f56ab : add byte ptr [rdi + rcx + 0xfd705], bl ; stosb byte ptr [rdi], al ; syscall
0x00000000007cdc92 : add byte ptr [rdi + rcx - 0x3ffffcc], bh ; syscall
0x000000000057ee5e : add byte ptr [rdi + rcx - 0x4a], 0x24 ; ret 0x8445
0x0000000000504397 : add byte ptr [rdi + rcx - 0x4a], al ; retf -0x76b4
0x00000000007e5ee7 : add byte ptr [rdi + rcx - 0x62fffffb], cl ; syscall
0x00000000007f80d4 : add byte ptr [rdi + rcx - 0x73fffffb], al ; syscall
0x00000000007342fb : add byte ptr [rdi + rcx*2 - 0x33], ah ; call qword ptr [rax]
0x0000000000790643 : add byte ptr [rdi + rcx*2], bh ; add al, 0 ; call 0x2478e8b0
0x0000000000754683 : add byte ptr [rdi + rcx*4], bh ; add byte ptr [rax], al ; js 0x7546b8 ; iretd ; call rsp
0x000000000074c673 : add byte ptr [rdi + rcx], ch ; add byte ptr [rax], al ; fsubr qword ptr [rsp + rcx*8] ; call rsp
0x000000000078f663 : add byte ptr [rdi + rdi + 4], bl ; add al, cl ; add dl, ah ; jmp qword ptr [rbx]
0x000000000078f67b : add byte ptr [rdi + rdi + 4], dh ; add al, ah ; add dl, ah ; jmp qword ptr [rdx]
0x000000000079eed7 : add byte ptr [rdi + rdi - 0x18], dl ; jmp qword ptr [rbx]
0x00000000007636b3 : add byte ptr [rdi + rdi*2 + 1], ch ; add byte ptr [rsi], dh ; and ebp, edx ; call qword ptr [rax]
0x0000000000763683 : add byte ptr [rdi + rdi*2], bh ; add dword ptr [rax], eax ; xchg eax, edx ; and ch, dl ; call rsp
0x00000000006d75bf : add byte ptr [rdi + rdi*4 + 0x40], al ; add byte ptr [rax], al ; retf 0x40bf
0x0000000000777613 : add byte ptr [rdi + rdi*4], cl ; add al, byte ptr [rax] ; clc ; jbe 0x7775ff ; jmp qword ptr [rax]
0x000000000079767b : add byte ptr [rdi + rdi*4], dh ; add al, 0 ; in ax, -1 ; ret 1
0x000000000075b6e3 : add byte ptr [rdi + rdi*8 + 0x183e0000], bl ; sar edi, 1 ; ret
0x0000000000738edb : add byte ptr [rdi + rdi*8], cl ; salc ; call qword ptr [rax]
0x000000000078f633 : add byte ptr [rdi + rdi], ch ; add al, 0 ; cwde ; add dl, ah ; jmp qword ptr [rbx]
0x000000000077f63b : add byte ptr [rdi + rdi], dh ; add eax, dword ptr [rax] ; and ebx, esi ; call rax
0x000000000078f61b : add byte ptr [rdi + rdi], dl ; add al, 0 ; add byte ptr [rax], 0xe2 ; jmp qword ptr [rbx]
0x00000000007ebe0b : add byte ptr [rdi + rdx + 0x13825a], dl ; call qword ptr [rdi]
0x0000000000744463 : add byte ptr [rdi + rdx - 0x12], bl ; call qword ptr [rax]
0x0000000000760ebb : add byte ptr [rdi + rdx*2 + 1], dh ; add dh, al ; loop 0x760e9e ; call rsp
0x0000000000750e4b : add byte ptr [rdi + rdx*2], al ; add byte ptr [rax], al ; ret 0xcdc7
0x00000000007a0e1b : add byte ptr [rdi + rdx*2], dl ; add eax, 0xe8a3a000 ; call qword ptr [rax]
0x00000000007370e3 : add byte ptr [rdi + rdx*4 - 0x2e], cl ; call rax
0x00000000007559df : add byte ptr [rdi + rdx*4], al ; iretd ; call rsp
0x000000000075599f : add byte ptr [rdi + rdx*4], al ; iretd ; jmp qword ptr [rsi]
0x000000000075d79f : add byte ptr [rdi + rdx*8 - 0x2f], dh ; jmp rax
0x00000000007aeea3 : add byte ptr [rdi + rsi + 6], bl ; add byte ptr [rax - 0x2f], bh ; in eax, dx ; jmp rbx
0x0000000000768aa7 : add byte ptr [rdi + rsi - 0x28], ah ; jmp qword ptr [rdi]
0x00000000007aeef3 : add byte ptr [rdi + rsi - 0x2be7fffa], ch ; in eax, dx ; call qword ptr [rax]
0x000000000079ae73 : add byte ptr [rdi + rsi*8 + 4], ch ; add byte ptr [rax], ch ; add al, 0xe7 ; jmp qword ptr [rbx]
0x000000000079ae5b : add byte ptr [rdi + rsi*8 + 4], dl ; add byte ptr [rax], dl ; add al, 0xe7 ; jmp qword ptr [rcx]
0x000000000075de07 : add byte ptr [rdi + rsi*8 - 0x2f], dl ; jmp qword ptr [rbx]
0x000000000079ae2b : add byte ptr [rdi + rsi*8], ah ; add al, 0 ; add byte ptr [rdi], al ; jmp qword ptr [rcx]
0x00000000007aae2b : add byte ptr [rdi + rsi*8], ah ; add eax, 0xece03000 ; jmp qword ptr [rdi]
0x000000000079ae13 : add byte ptr [rdi + rsi*8], cl ; add al, 0 ; clc ; add esp, edi ; call qword ptr [rbx]
0x00000000007b61d0 : add byte ptr [rdi - 0x11], bh ; call qword ptr [rbx]
0x00000000007af433 : add byte ptr [rdi - 0x17b7fffa], ch ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000636960 : add byte ptr [rdi - 0x18], dh ; retf 0x4ab
0x000000000079da6f : add byte ptr [rdi - 0x19], bl ; call rcx
0x00000000007f33d1 : add byte ptr [rdi - 0x4c22e392], ah ; add dword ptr [rax], eax ; ret
0x0000000000744bc0 : add byte ptr [rdi - 0x5b5dfffa], ah ; out dx, al ; jmp qword ptr [rax]
0x00000000007f9fe8 : add byte ptr [rdi - 0x5f30e3b5], ch ; add dword ptr [rax], eax ; retf
0x00000000007f99fe : add byte ptr [rdi - 0x6167e3fc], ch ; add dword ptr [rax], eax ; retf
0x00000000007fa486 : add byte ptr [rdi - 0x6c38df8b], bl ; add dword ptr [rax], eax ; retf
0x0000000000747bdc : add byte ptr [rdi - 0xb], al ; jmp qword ptr [rax]
0x00000000004549ba : add byte ptr [rdi - 1], bl ; dec ecx ; ret
0x000000000076743b : add byte ptr [rdi*4 + 0x6b4c0001], dh ; salc ; call qword ptr [rsi]
0x000000000074864c : add byte ptr [rdi], 0xf6 ; jmp qword ptr [rax]
0x0000000000799e2b : add byte ptr [rdi], ah ; add al, 0 ; xor byte ptr [rax - 0x1a], bl ; call qword ptr [rdx]
0x000000000044e545 : add byte ptr [rdi], ah ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000610a4b : add byte ptr [rdi], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000745ab9 : add byte ptr [rdi], al ; add byte ptr [rax], dh ; je 0x745ab5 ; call qword ptr [rax]
0x0000000000746354 : add byte ptr [rdi], al ; jmp qword ptr [rax]
0x000000000079ae30 : add byte ptr [rdi], al ; jmp qword ptr [rcx]
0x00000000004f28e7 : add byte ptr [rdi], bh ; call 0x6bebe8
0x00000000007abf18 : add byte ptr [rdi], bh ; in eax, dx ; jmp qword ptr [rax]
0x00000000005ce548 : add byte ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000512879 : add byte ptr [rdi], cl ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000604fe4 : add byte ptr [rdi], cl ; lahf ; ret 0x3941
0x00000000006652bf : add byte ptr [rdi], cl ; mov bh, 0x4e ; add cl, byte ptr [rax + 0x63] ; ret 0xba41
0x00000000006625a0 : add byte ptr [rdi], cl ; mov bh, 0x88 ; ret 0x7213
0x0000000000409f6b : add byte ptr [rdi], cl ; mov bh, 5 ; ret
0x0000000000408eba : add byte ptr [rdi], cl ; mov bh, 5 ; ret 0x5f56
0x0000000000409576 : add byte ptr [rdi], cl ; mov bh, 5 ; ret 0x5f90
0x000000000040994f : add byte ptr [rdi], cl ; mov bh, 5 ; retf
0x000000000066cc7b : add byte ptr [rdi], cl ; mov dh, 0x45 ; or al, ch ; retf
0x00000000006cd03f : add byte ptr [rdi], cl ; mov dh, 0x46 ; add eax, 0x8747f3c ; ret
0x00000000006ccf1f : add byte ptr [rdi], cl ; mov dh, 0x46 ; or bh, byte ptr [rdi + rdi*2] ; je 0x6ccf39 ; ret
0x00000000006cd2cf : add byte ptr [rdi], cl ; mov dh, 0x46 ; or byte ptr [rdi + rdi*2], bh ; je 0x6cd2e9 ; ret
0x000000000051828f : add byte ptr [rdi], cl ; mov dh, 0x47 ; ret
0x00000000006a2ff1 : add byte ptr [rdi], cl ; mov dh, 0x53 ; and al, 0xf ; scasd eax, dword ptr [rdi] ; ret 0x148
0x000000000064ada9 : add byte ptr [rdi], cl ; mov dh, 0x55 ; ret 0xfa80
0x000000000060b46f : add byte ptr [rdi], cl ; mov dh, 0x87 ; add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000000000609dcf : add byte ptr [rdi], cl ; mov dh, 0x87 ; add dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x000000000060b45f : add byte ptr [rdi], cl ; mov dh, 0x87 ; enter 1, 0 ; ret
0x000000000060bc0f : add byte ptr [rdi], cl ; mov dh, 0x87 ; rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; ret
0x00000000004f74af : add byte ptr [rdi], cl ; mov dh, 0x87 ; test al, 0 ; add byte ptr [rax], al ; ret
0x00000000006cd998 : add byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; pop rbx ; pop rbp ; ret
0x00000000006be43e : add byte ptr [rdi], cl ; mov dh, 0xc0 ; or byte ptr [rdi + rax], dl ; ret
0x0000000000668b5f : add byte ptr [rdi], cl ; mov dh, 5 ; retf
0x000000000053d7df : add byte ptr [rdi], cl ; mov dh, 7 ; ret
0x000000000050e797 : add byte ptr [rdi], cl ; ret
0x000000000065be1e : add byte ptr [rdi], cl ; ret 0x15b9
0x00000000006b3a14 : add byte ptr [rdi], cl ; ret 0x1b9
0x000000000051caa1 : add byte ptr [rdi], cl ; ret 0x3941
0x00000000006613f3 : add byte ptr [rdi], cl ; ret 0x394c
0x0000000000503cc7 : add byte ptr [rdi], cl ; ret 0x5d5b
0x000000000067fa2f : add byte ptr [rdi], cl ; ret 0x6348
0x00000000006c8a89 : add byte ptr [rdi], cl ; ret 0x66c3
0x000000000053ded3 : add byte ptr [rdi], cl ; ret 0x6b9
0x000000000067fa1b : add byte ptr [rdi], cl ; ret 0x83c6
0x00000000006b7ec7 : add byte ptr [rdi], cl ; ret 0x8588
0x0000000000680740 : add byte ptr [rdi], cl ; ret 0x8d42
0x00000000006ad5fe : add byte ptr [rdi], cl ; ret 0x9848
0x000000000051b987 : add byte ptr [rdi], cl ; ret 0xc539
0x00000000006a4c8d : add byte ptr [rdi], cl ; ret 0xf183
0x0000000000662ed9 : add byte ptr [rdi], cl ; retf -0x7d17
0x0000000000679bcf : add byte ptr [rdi], cl ; ror byte ptr [rax + 0x63], 1 ; ror byte ptr [rax - 0x7d], cl ; ret 0x480f
0x0000000000680dfa : add byte ptr [rdi], cl ; ror qword ptr [rax + 0x63], 1 ; ror byte ptr [rax - 0x7d], cl ; ret 0x480f
0x000000000067f977 : add byte ptr [rdi], cl ; sahf ; ret 0x8441
0x00000000006c52b7 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; fld qword ptr [rcx] ; retf
0x00000000005f3682 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x00000000006725b1 : add byte ptr [rdi], cl ; test al, dl ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000051a65c : add byte ptr [rdi], cl ; test byte ptr [rip - 0x17fffffe], bl ; retf 0x166e
0x00000000006719a2 : add byte ptr [rdi], cl ; test byte ptr [rip - 0x17ffffff], al ; ret 0x38f
0x00000000004fecba : add byte ptr [rdi], cl ; test dword ptr [rdi], ecx ; add al, 0 ; add al, ch ; retf 0x1bfb
0x00000000006821aa : add byte ptr [rdi], cl ; wait ; ret 0x450f
0x0000000000538a12 : add byte ptr [rdi], cl ; xchg dword ptr [rsi], edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000005fbe88 : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xca09
0x0000000000576272 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xb60f
0x0000000000674960 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x4388
0x0000000000675b8e : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x4788
0x000000000062c12e : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000052cac5 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x854d
0x00000000006802b2 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc085
0x00000000006ccf0b : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd089
0x00000000006cd310 : add byte ptr [rdi], cl ; xchg eax, esp ; ror byte ptr [rdi], 0x94 ; ret 0x5388
0x0000000000692b78 : add byte ptr [rdi], dh ; add byte ptr [rcx], bh ; ret 0x840f
0x0000000000492814 : add byte ptr [rdi], dl ; call rax
0x00000000007efcf6 : add byte ptr [rdx + 0x1299050f], ah ; add bh, cl ; syscall
0x00000000007a811f : add byte ptr [rdx + 0x1c], ah ; in al, dx ; call qword ptr [rbx]
0x00000000004b97ac : add byte ptr [rdx + 0x1d], ah ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000738f43 : add byte ptr [rdx + 0x1e], al ; xlatb ; jmp qword ptr [rax]
0x00000000007388ab : add byte ptr [rdx + 0x20ffd674], al ; retf 2
0x00000000007d2813 : add byte ptr [rdx + 0x2304], cl ; retf 0x504
0x000000000042331c : add byte ptr [rdx + 0x25], bl ; add cl, cl ; ret
0x00000000007c775c : add byte ptr [rdx + 0x305], bl ; ret
0x000000000073519b : add byte ptr [rdx + 0x40ffcf0b], bl ; ret 1
0x0000000000735293 : add byte ptr [rdx + 0x4a], dh ; iretd ; jmp qword ptr [rax]
0x00000000007352bb : add byte ptr [rdx + 0x4d], ch ; iretd ; jmp rax
0x00000000007acc33 : add byte ptr [rdx + 0x4dd80006], ch ; in eax, dx ; jmp qword ptr [rax]
0x00000000007f7e30 : add byte ptr [rdx + 0x501], bh ; ret 0x501
0x00000000007f509b : add byte ptr [rdx + 0x503], ch ; ret 0x503
0x00000000007cde70 : add byte ptr [rdx + 0x50f], al ; popfq ; syscall
0x000000000076d9ab : add byte ptr [rdx + 0x67580002], ah ; leave ; call qword ptr [rdx]
0x00000000005055a9 : add byte ptr [rdx + 0x6ef020], bh ; call rax
0x000000000051a3d0 : add byte ptr [rdx + 0x6f3090], bh ; mov rdi, rbx ; call rax
0x0000000000529bb1 : add byte ptr [rdx + 0x6f54b0], bh ; mov rdi, rbx ; call rax
0x00000000005362b6 : add byte ptr [rdx + 0x6f6254], bh ; mov rdi, rbx ; call rax
0x00000000007348a3 : add byte ptr [rdx + 0x70ffce02], ch ; xchg eax, edi ; add dword ptr [rax], eax ; retf -0x31fe
0x0000000000666c40 : add byte ptr [rdx + 0x72], al ; add byte ptr [rax + 0xf], cl ; ret 0x3941
0x00000000006c29ee : add byte ptr [rdx + 0x730f30], bh ; mov rdi, r15 ; call rax
0x00000000006c237a : add byte ptr [rdx + 0x730f30], bh ; mov rdi, rbp ; call rcx
0x0000000000755447 : add byte ptr [rdx + 0x73], bl ; iretd ; call qword ptr [rbx]
0x0000000000755407 : add byte ptr [rdx + 0x73], bl ; iretd ; call qword ptr [rdx]
0x0000000000573c25 : add byte ptr [rdx + 0xa048c0], bh ; call 0x6c06d8
0x00000000007f88fe : add byte ptr [rdx + 0xd04], dh ; ret
0x00000000007ed99e : add byte ptr [rdx + 0xd05], ch ; ret
0x00000000007c0189 : add byte ptr [rdx + 0xe08], al ; ret 0x508
0x00000000007b3107 : add byte ptr [rdx + 0xf], cl ; out dx, eax ; jmp qword ptr [rax]
0x00000000007f105b : add byte ptr [rdx + 0xfa3310f], dl ; add dl, cl ; syscall
0x00000000007cda97 : add byte ptr [rdx + 0xfbf050f], bh ; add ah, dl ; syscall
0x00000000007d738c : add byte ptr [rdx + 0xfe1050f], ch ; add ch, al ; syscall
0x00000000007cd459 : add byte ptr [rdx + 0xff5050f], bh ; add cl, cl ; syscall
0x0000000000519f0f : add byte ptr [rdx + 1], bh ; xor eax, eax ; ret
0x00000000007df479 : add byte ptr [rdx + 2], ah ; ret 4
0x000000000073db18 : add byte ptr [rdx + 4], ah ; add al, dl ; cmp ecx, esp ; jmp qword ptr [rax]
0x00000000007eed95 : add byte ptr [rdx + 4], ch ; ret 3
0x00000000007cbbb4 : add byte ptr [rdx + 5], dl ; fld qword ptr [rcx] ; add dword ptr [rax + 5], ebp ; ret
0x00000000007b194b : add byte ptr [rdx + 6], al ; add byte ptr [rax - 0x52], al ; out dx, al ; call qword ptr [rdx]
0x00000000007f7795 : add byte ptr [rdx + rax + 0x102d005], dh ; ret
0x00000000007e3ba1 : add byte ptr [rdx + rax + 0x19f05], dh ; retf
0x00000000007ce4ca : add byte ptr [rdx + rax + 0x1c805], bh ; retf
0x00000000007ee6b2 : add byte ptr [rdx + rax + 0x2b305], al ; ret
0x00000000007c7267 : add byte ptr [rdx + rax + 0x30af905], bl ; ret 0xaf02
0x00000000007cbe40 : add byte ptr [rdx + rax + 0x317b016], ch ; retf
0x00000000007df671 : add byte ptr [rdx + rax + 0x48c04], dh ; ret
0x00000000007df7d9 : add byte ptr [rdx + rax + 0x5db04], dh ; ret
0x0000000000440b55 : add byte ptr [rdx + rax - 0x15], dh ; ret 0x8b48
0x000000000074ec0f : add byte ptr [rdx + rax - 0x33], ah ; call rsp
0x000000000074b9eb : add byte ptr [rdx + rax - 0x6fa0000], ah ; retf
0x000000000074b9a3 : add byte ptr [rdx + rax - 0x7960000], bl ; retf
0x00000000007b798b : add byte ptr [rdx + rax*8 - 0x3e6ffffa], al ; out dx, eax ; jmp qword ptr [rdx]
0x000000000079796b : add byte ptr [rdx + rax*8], ah ; add al, 0 ; pop rax ; xchg eax, ebx ; in eax, -1 ; retf 1
0x00000000007a7943 : add byte ptr [rdx + rax*8], bh ; add eax, 0xec03b800 ; call qword ptr [rsi]
0x000000000074b9c3 : add byte ptr [rdx + rax], bh ; add byte ptr [rdx - 8], bh ; retf
0x000000000075b933 : add byte ptr [rdx + rax], ch ; add dword ptr [rax], eax ; retf -0x2eda
0x0000000000737540 : add byte ptr [rdx + rax], ch ; push rax ; sbb dl, bl ; jmp qword ptr [rax]
0x00000000007be19b : add byte ptr [rdx + rbp + 0x2f600007], dl ; int1 ; jmp qword ptr [rbx]
0x000000000078e1d3 : add byte ptr [rdx + rbp - 0x3867fffc], cl ; loope 0x78e1e4 ; retf 1
0x0000000000712fc0 : add byte ptr [rdx + rbp*2], cl ; add byte ptr [rsi], al ; retf 0x5c
0x000000000077615b : add byte ptr [rdx + rbp*4 + 2], dl ; add byte ptr [rax], ah ; xor esp, ebx ; jmp qword ptr [rax]
0x00000000007961b3 : add byte ptr [rdx + rbp*4 + 4], ch ; add byte ptr [rsi], al ; xor ebp, esp ; call qword ptr [rax]
0x000000000075619b : add byte ptr [rdx + rbp*4], dl ; add byte ptr [rsi - 0x31], ah ; call rsp
0x00000000007aa16b : add byte ptr [rdx + rbp*8 + 5], ah ; add al, al ; ret
0x00000000007334b3 : add byte ptr [rdx + rbp*8 - 7], bh ; jmp qword ptr [rdi + 0x16fff9eb]
0x000000000075a16b : add byte ptr [rdx + rbp*8], ah ; add byte ptr [rax], al ; mov dh, 0x90 ; sar bh, 1 ; ret
0x000000000079e113 : add byte ptr [rdx + rbp], cl ; add eax, 0xe7f50a00 ; call qword ptr [rdi]
0x00000000007f21e7 : add byte ptr [rdx + rbx + 0x37bd29], cl ; retf 0x51a
0x0000000000540fe3 : add byte ptr [rdx + rbx + 0x48], dh ; add esp, 8 ; ret
0x000000000077d163 : add byte ptr [rdx + rbx + 3], bl ; add al, ch ; mov ds, ebp ; call qword ptr [rbx]
0x0000000000733eeb : add byte ptr [rdx + rbx - 0x33], bh ; jmp qword ptr [rax]
0x00000000007387bb : add byte ptr [rdx + rbx*2], bl ; salc ; call rax
0x00000000006d42b7 : add byte ptr [rdx + rbx*8 + 0x48], dh ; add esp, 8 ; ret
0x000000000066de63 : add byte ptr [rdx + rcx + 0x48], dh ; add esp, 0x18 ; ret
0x0000000000673b1b : add byte ptr [rdx + rcx + 0x48], dh ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006a60fc : add byte ptr [rdx + rcx + 0x48], dh ; add esp, 8 ; ret
0x00000000007f5d75 : add byte ptr [rdx + rcx + 0x723bf05], dh ; ret
0x00000000007b0173 : add byte ptr [rdx + rcx*2 + 6], ch ; add byte ptr [rax - 3], bl ; in eax, dx ; call qword ptr [rcx]
0x00000000007527af : add byte ptr [rdx + rcx*2 - 0x32], ch ; jmp qword ptr [rbx]
0x000000000076818b : add byte ptr [rdx + rcx*8 - 0x76e5ffff], al ; xlatb ; jmp qword ptr [rbx]
0x000000000079815b : add byte ptr [rdx + rcx*8], dl ; add al, 0 ; ret 0xe5d8
0x00000000007a811b : add byte ptr [rdx + rcx*8], dl ; add eax, 0xec1c6200 ; call qword ptr [rbx]
0x000000000074342b : add byte ptr [rdx + rdi*2 - 0x15], bh ; jmp rax
0x000000000074490b : add byte ptr [rdx + rdi*2], bl ; out dx, al ; call qword ptr [rax]
0x00000000007b7183 : add byte ptr [rdx + rdi*4 + 6], bh ; add al, cl ; mov dl, 0xef ; call qword ptr [rbx]
0x0000000000757153 : add byte ptr [rdx + rdi*4], cl ; add byte ptr [rax], al ; retf
0x000000000078b13b : add byte ptr [rdx + rdi*8], dh ; add eax, dword ptr [rax] ; or al, 0xe1 ; jmp qword ptr [rdi]
0x00000000007e8c89 : add byte ptr [rdx + rdx + 0xb1ac805], bh ; retf -0x6fee
0x00000000007e68bc : add byte ptr [rdx + rdx + 0xdf505], ah ; ret 0x512
0x00000000007956af : add byte ptr [rdx + rdx - 0x1b], dh ; call rsp
0x00000000007b0993 : add byte ptr [rdx + rdx*2 + 0x12b80006], cl ; out dx, al ; call qword ptr [rax]
0x000000000075495b : add byte ptr [rdx + rdx*4], dl ; add byte ptr [rax], al ; sbb bh, byte ptr [rbx] ; iretd ; call rsp
0x0000000000744433 : add byte ptr [rdx + rdx], dl ; out dx, al ; jmp qword ptr [rax]
0x00000000007a29ab : add byte ptr [rdx + rsi*2 + 5], ah ; add byte ptr [rax], dl ; or ch, cl ; call qword ptr [rsi]
0x00000000007a2973 : add byte ptr [rdx + rsi*2], ch ; add eax, 0xe9092800 ; call qword ptr [rsi]
0x000000000074485b : add byte ptr [rdx + rsi*2], dh ; out dx, al ; call qword ptr [rax]
0x000000000079694b : add byte ptr [rdx + rsi*4], al ; add al, 0 ; sub cl, byte ptr [rax - 0x1b] ; call qword ptr [rax]
0x000000000073586b : add byte ptr [rdx + rsi*8], ch ; iretd ; call qword ptr [rax]
0x000000000075a93b : add byte ptr [rdx + rsi*8], dh ; add byte ptr [rax], al ; ret 0xd0b7
0x000000000075a95b : add byte ptr [rdx + rsi*8], dl ; add dl, ah ; mov bh, 0xd0 ; jmp qword ptr [rbx]
0x000000000079e983 : add byte ptr [rdx + rsi], bh ; add eax, 0xe8223600 ; call qword ptr [rdi]
0x000000000076e913 : add byte ptr [rdx + rsi], cl ; add al, byte ptr [rax] ; call 0x1876c36c
0x00000000006776f2 : add byte ptr [rdx - 0x151b8410], bh ; ret 0x4841
0x0000000000742504 : add byte ptr [rdx - 0x17], cl ; call rax
0x000000000073f084 : add byte ptr [rdx - 0x1d], ch ; call qword ptr [rax]
0x0000000000738c4b : add byte ptr [rdx - 0x20], ch ; salc ; call rax
0x00000000007f3f8e : add byte ptr [rdx - 0x24b9fe3b], ah ; ret
0x000000000074b7cf : add byte ptr [rdx - 0x2a], dl ; retf
0x00000000007476b3 : add byte ptr [rdx - 0x2c], bh ; hlt ; jmp rax
0x000000000074b79f : add byte ptr [rdx - 0x2c], dl ; retf
0x0000000000736f43 : add byte ptr [rdx - 0x2e], bh ; jmp rax
0x000000000073871b : add byte ptr [rdx - 0x2f0029cf], al ; ret 2
0x0000000000733b93 : add byte ptr [rdx - 0x2f0032f9], cl ; ret
0x000000000073622b : add byte ptr [rdx - 0x2f], dh ; call qword ptr [rax]
0x00000000007fa624 : add byte ptr [rdx - 0x32fafe7d], bh ; je 0x7fa634 ; retf
0x0000000000733f73 : add byte ptr [rdx - 0x33], al ; jmp qword ptr [rax]
0x0000000000736dc3 : add byte ptr [rdx - 0x37002dc7], dl ; add r8b, byte ptr [r8] ; retf -0x2dc7
0x00000000007351bb : add byte ptr [rdx - 0x3f0030f4], dh ; ret 1
0x00000000004f370e : add byte ptr [rdx - 0x4617ff92], bl ; ret
0x000000000073537b : add byte ptr [rdx - 0x47003090], ah ; retf
0x00000000007f3f3d : add byte ptr [rdx - 0x47fafe3d], cl ; ret
0x00000000007351f3 : add byte ptr [rdx - 0x4f0030f2], ah ; ret
0x0000000000744bb3 : add byte ptr [rdx - 0x5c], bl ; out dx, al ; jmp rax
0x00000000007f3f25 : add byte ptr [rdx - 0x5cd5fe3e], cl ; pushfq ; add dword ptr [rax], eax ; retf
0x000000000076a3ef : add byte ptr [rdx - 0x64], bl ; leave ; call qword ptr [rdx]
0x00000000007559db : add byte ptr [rdx - 0x68fc0000], dl ; iretd ; call rsp
0x000000000075599b : add byte ptr [rdx - 0x68fc0000], dl ; iretd ; jmp qword ptr [rsi]
0x00000000007fa739 : add byte ptr [rdx - 0x69e2fe75], dl ; jbe 0x7fa749 ; retf
0x0000000000744a63 : add byte ptr [rdx - 0x74], ah ; out dx, al ; jmp qword ptr [rax]
0x00000000007388c3 : add byte ptr [rdx - 0x7700298b], ah ; retf 2
0x0000000000739063 : add byte ptr [rdx - 0x7a], al ; xlatb ; call qword ptr [rax]
0x000000000074a9ec : add byte ptr [rdx - 7], bl ; jmp rax
0x000000000074b9c7 : add byte ptr [rdx - 8], bh ; retf
0x000000000074b9a7 : add byte ptr [rdx - 8], ch ; retf
0x00000000007491fc : add byte ptr [rdx - 9], dl ; call rax
0x00000000007b4c13 : add byte ptr [rdx*4 + 0x4ff80006], cl ; out dx, eax ; jmp qword ptr [rsi]
0x0000000000572337 : add byte ptr [rdx], 0 ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x0000000000509bde : add byte ptr [rdx], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000007f886f : add byte ptr [rdx], 0x12 ; ret
0x000000000074a5bc : add byte ptr [rdx], 0xf9 ; call qword ptr [rax]
0x00000000007d5660 : add byte ptr [rdx], 4 ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0x7028400 ; ret 5
0x00000000007f938c : add byte ptr [rdx], 8 ; ret
0x000000000075553f : add byte ptr [rdx], ah ; jbe 0x755516 ; call rsp
0x0000000000739923 : add byte ptr [rdx], ah ; jno 0x739903 ; call qword ptr [rax]
0x000000000079a9f7 : add byte ptr [rdx], ah ; mov bl, 0xc6 ; call qword ptr [rdx]
0x0000000000768847 : add byte ptr [rdx], ah ; not edi ; jmp rdx
0x0000000000737a1b : add byte ptr [rdx], ah ; ret
0x000000000040e4cc : add byte ptr [rdx], ah ; sub eax, dword ptr [rax] ; leave ; ret
0x0000000000793427 : add byte ptr [rdx], al ; adc ah, ah ; jmp qword ptr [rdi]
0x0000000000547bdc : add byte ptr [rdx], al ; add byte ptr [rax], al ; add al, ch ; retf 0x176c
0x0000000000504e01 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x00000000005053b1 : add byte ptr [rdx], al ; add dword ptr [rax], eax ; ret
0x000000000074ebaf : add byte ptr [rdx], al ; add ebp, ecx ; call rsp
0x00000000007abac7 : add byte ptr [rdx], al ; cmp ch, ch ; jmp qword ptr [rdi]
0x0000000000751457 : add byte ptr [rdx], al ; in al, -0x33 ; call rsp
0x00000000007356a3 : add byte ptr [rdx], al ; leave ; iretd ; call rax
0x00000000006d1150 : add byte ptr [rdx], al ; mfence ; ret
0x000000000073a4bb : add byte ptr [rdx], al ; mov bl, 0xdb ; jmp qword ptr [rax]
0x0000000000723bc7 : add byte ptr [rdx], al ; or byte ptr [rax], al ; ret 0x800
0x000000000076734f : add byte ptr [rdx], al ; pop rsi ; salc ; call rsp
0x000000000075aacf : add byte ptr [rdx], al ; ret
0x000000000073545b : add byte ptr [rdx], al ; xchg bh, cl ; call rax
0x000000000073488b : add byte ptr [rdx], bh ; add cl, dh ; call qword ptr [rax]
0x000000000075fe37 : add byte ptr [rdx], bh ; jno 0x75fe12 ; jmp qword ptr [rsi]
0x000000000074272b : add byte ptr [rdx], bh ; mov ah, 0xe9 ; call qword ptr [rax]
0x000000000073662b : add byte ptr [rdx], bh ; retf
0x0000000000520684 : add byte ptr [rdx], bl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000075495f : add byte ptr [rdx], bl ; cmp ecx, edi ; call rsp
0x000000000075903f : add byte ptr [rdx], bl ; cmp edx, eax ; call rsp
0x00000000007627af : add byte ptr [rdx], bl ; jl 0x76278b ; call qword ptr [rdx]
0x000000000079d8a7 : add byte ptr [rdx], bl ; jrcxz 0x79d896 ; call rsp
0x000000000076818f : add byte ptr [rdx], bl ; mov edi, edx ; jmp qword ptr [rbx]
0x00000000007670ff : add byte ptr [rdx], bl ; push rdx ; salc ; jmp qword ptr [rbx]
0x00000000006dea2f : add byte ptr [rdx], bl ; retf 0x4c
0x0000000000744c5b : add byte ptr [rdx], bl ; stosd dword ptr [rdi], eax ; out dx, al ; call rax
0x00000000007934d7 : add byte ptr [rdx], ch ; adc esp, esp ; call rsp
0x00000000007a1933 : add byte ptr [rdx], ch ; add eax, 0xc6499400 ; call qword ptr [rdx]
0x0000000000747673 : add byte ptr [rdx], ch ; sal ah, cl ; call qword ptr [rax]
0x000000000075badf : add byte ptr [rdx], ch ; xor ecx, edx ; call qword ptr [rdi]
0x0000000000738be3 : add byte ptr [rdx], cl ; fcom st(0), st(6) ; jmp qword ptr [rax]
0x00000000007abdcf : add byte ptr [rdx], cl ; in eax, dx ; call qword ptr [rcx]
0x0000000000742c6b : add byte ptr [rdx], cl ; mov edx, ebp ; call rax
0x0000000000723c07 : add byte ptr [rdx], cl ; or byte ptr [rax], al ; retf 0x800
0x000000000075f33f : add byte ptr [rdx], cl ; out 0xd2, al ; jmp qword ptr [rcx]
0x00000000006ed3af : add byte ptr [rdx], cl ; ret
0x00000000007346bb : add byte ptr [rdx], cl ; retf -0x33
0x00000000007bf084 : add byte ptr [rdx], dh ; add eax, 0x53e016d ; retf 0x301
0x0000000000736cb3 : add byte ptr [rdx], dh ; and edx, edx ; call rax
0x0000000000794577 : add byte ptr [rdx], dh ; jle 0x794563 ; call qword ptr [rax]
0x00000000007502e7 : add byte ptr [rdx], dh ; mov ch, cl ; jmp qword ptr [rbx]
0x000000000076eb67 : add byte ptr [rdx], dh ; push rsi ; leave ; call qword ptr [rdx]
0x00000000006db2ff : add byte ptr [rdx], dh ; retf 0x42
0x000000000073878b : add byte ptr [rdx], dh ; salc ; jmp rax
0x0000000000795f9f : add byte ptr [rdx], dh ; sub esp, ebp ; call rcx
0x00000000005b4662 : add byte ptr [rdx], dl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007a191b : add byte ptr [rdx], dl ; add eax, 0xe8b58000 ; jmp qword ptr [rbx]
0x0000000000736a03 : add byte ptr [rdx], dl ; add edx, edx ; jmp rax
0x0000000000736c03 : add byte ptr [rdx], dl ; and dl, dl ; call qword ptr [rax]
0x0000000000744eab : add byte ptr [rdx], dl ; cmc ; out dx, al ; jmp rax
0x0000000000753e97 : add byte ptr [rdx], dl ; in eax, -0x32 ; call rsp
0x000000000076802f : add byte ptr [rdx], dl ; jne 0x76800e ; jmp qword ptr [rbx]
0x000000000075a87f : add byte ptr [rdx], dl ; mov ah, 0xd0 ; call rsp
0x00000000007accef : add byte ptr [rdx], dl ; mov bh, 0xc5 ; call qword ptr [rdx]
0x000000000074744b : add byte ptr [rdx], dl ; ret
0x0000000000744d0b : add byte ptr [rdx], dl ; retf -0x12
0x0000000000734e9b : add byte ptr [rdx], dl ; retf -0x32
0x00000000004046fc : add byte ptr [rip + 0x5d5b5800], bpl ; ret
0x000000000040466d : add byte ptr [rip + 0x5d5b5800], ch ; ret
0x00000000006a5e67 : add byte ptr [rip + 0x7fff], bh ; setne al ; ret
0x000000000079b805 : add byte ptr [rip - 0x18ac6800], al ; jmp rdi
0x000000000079b79d : add byte ptr [rip - 0x18ae2000], al ; call qword ptr [rax]
0x000000000079b77d : add byte ptr [rip - 0x18ae3000], al ; jmp qword ptr [rcx]
0x000000000053f8fd : add byte ptr [rip - 0x3b7cb800], dl ; or byte ptr [rax + 0x29], cl ; ret
0x00000000004d251b : add byte ptr [rip - 0x70410000], cl ; ret 0x6e
0x000000000056b847 : add byte ptr [rip - 0x76b7ff90], bh ; ja 0x56b85f ; ret
0x0000000000675fc8 : add byte ptr [rip - 0x76b80000], al ; ret 0x948
0x00000000006aaac5 : add byte ptr [rsi + 0x18], dh ; cmp sil, 3 ; jbe 0x6aaad9 ; ret
0x00000000007444a0 : add byte ptr [rsi + 0x19500006], al ; out dx, al ; jmp qword ptr [rax]
0x0000000000735323 : add byte ptr [rsi + 0x20ffcf6a], dh ; retf 1
0x00000000007386fb : add byte ptr [rsi + 0x2d], al ; salc ; push qword ptr [rax] ; ret 2
0x0000000000733c03 : add byte ptr [rsi + 0x30ffcd08], dh ; retf 3
0x00000000007daf88 : add byte ptr [rsi + 0x3103], dl ; retf 0x603
0x00000000007d2095 : add byte ptr [rsi + 0x3407], ah ; sahf ; or byte ptr [rsi], al ; retf
0x0000000000739583 : add byte ptr [rsi + 0x3b], dh ; fdivr st(7) ; sub byte ptr [rdi], al ; add eax, dword ptr [rax] ; retf -0x27c5
0x00000000007f2982 : add byte ptr [rsi + 0x3d03], al ; ret
0x00000000007966d7 : add byte ptr [rsi + 0x3e], bh ; in eax, -1 ; retf
0x00000000007351db : add byte ptr [rsi + 0x40ffcf0d], dh ; ret
0x0000000000744603 : add byte ptr [rsi + 0x41], dl ; out dx, al ; jmp rax
0x00000000007ac0ef : add byte ptr [rsi + 0x43], bl ; in eax, dx ; call rcx
0x00000000007ac1df : add byte ptr [rsi + 0x44], bl ; in eax, dx ; call qword ptr [rcx]
0x00000000007ac25f : add byte ptr [rsi + 0x44], ch ; in eax, dx ; call qword ptr [rsi]
0x0000000000744633 : add byte ptr [rsi + 0x44], ch ; out dx, al ; call rax
0x0000000000744640 : add byte ptr [rsi + 0x47780006], cl ; out dx, al ; jmp qword ptr [rax]
0x00000000007df421 : add byte ptr [rsi + 0x502], bh ; ret
0x00000000007cf20e : add byte ptr [rsi + 0x503], dl ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, dword ptr [rsi] ; retf
0x0000000000738703 : add byte ptr [rsi + 0x50ffd62d], dl ; ret 2
0x00000000007e32f0 : add byte ptr [rsi + 0x51f], ah ; ret 0x51f
0x0000000000755067 : add byte ptr [rsi + 0x60], cl ; iretd ; jmp qword ptr [rax]
0x000000000073716b : add byte ptr [rsi + 0x68ffd2a6], bl ; pop rcx ; add al, byte ptr [rax] ; ret 0xd2a6
0x0000000000736283 : add byte ptr [rsi + 0x6e], cl ; sar edi, 1 ; rcl byte ptr [rdx + rax], 0 ; retf -0x2e92
0x0000000000530037 : add byte ptr [rsi + 0x6f], ch ; add byte ptr [rax - 0x77], cl ; ja 0x53004f ; ret
0x000000000056ce86 : add byte ptr [rsi + 0x703358], bh ; call rax
0x000000000056cf72 : add byte ptr [rsi + 0x703368], bh ; call rax
0x000000000056f2db : add byte ptr [rsi + 0x703390], bh ; call rax
0x0000000000405002 : add byte ptr [rsi + 0x70], 0 ; xor eax, eax ; call 0x681302
0x0000000000767487 : add byte ptr [rsi + 0x70], bl ; salc ; call rax
0x000000000073a3a3 : add byte ptr [rsi + 0x70ffdb43], ch ; add r8, qword ptr [r8] ; retf -0x24bc
0x00000000005c6f6c : add byte ptr [rsi + 0x7128d4], bh ; call 0x403a08
0x000000000062d5a6 : add byte ptr [rsi + 0x71df48], bh ; call 0x4d9830
0x0000000000755487 : add byte ptr [rsi + 0x73], ch ; iretd ; call qword ptr [rcx]
0x00000000005ea3ac : add byte ptr [rsi + 0xa], dl ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000735193 : add byte ptr [rsi + 0xb], al ; iretd ; jmp qword ptr [rax]
0x0000000000766b6f : add byte ptr [rsi + 0xc], bh ; salc ; call rsp
0x00000000007ce2c4 : add byte ptr [rsi + 0xcfb050f], ch ; add dh, al ; syscall
0x00000000005a9562 : add byte ptr [rsi + 0xd], ah ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000682837 : add byte ptr [rsi + 0xf], ah ; out dx, eax ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x0000000000683161 : add byte ptr [rsi + 0xf], ah ; out dx, eax ; shl byte ptr [rsi + 0xf], cl ; retf 0x7c7a
0x0000000000683197 : add byte ptr [rsi + 0xf], ah ; out dx, eax ; shl byte ptr [rsi + 0xf], cl ; retf 0xa7a
0x00000000006839f7 : add byte ptr [rsi + 0xf], ah ; push rdi ; retf 0x290f
0x00000000006a4f7f : add byte ptr [rsi + 0xf], ah ; push rsp ; enter 0xf66, 0x2e ; retf
0x0000000000681f83 : add byte ptr [rsi + 0xf], ah ; push rsp ; enter 0xf66, 0x2e ; retf -0x78f1
0x00000000006a4c25 : add byte ptr [rsi + 0xf], ah ; push rsp ; enter 0xf66, 0x2e ; retf -0x79f1
0x00000000006a4957 : add byte ptr [rsi + 0xf], ah ; push rsp ; ret 0xf66
0x00000000006830eb : add byte ptr [rsi + 0xf], ah ; push rsp ; ret 0xff2
0x0000000000682047 : add byte ptr [rsi + 0xf], ah ; push rsp ; retf 0xf66
0x000000000068396f : add byte ptr [rsi + 0xf], ah ; push rsp ; shl byte ptr [rsi + 0xf], 1 ; retf 0x6e77
0x000000000068369f : add byte ptr [rsi + 0xf], ah ; ret
0x00000000006a5116 : add byte ptr [rsi + 0xf], ah ; ret 0x9b0f
0x00000000006821a1 : add byte ptr [rsi + 0xf], ah ; retf
0x00000000006820cc : add byte ptr [rsi + 0xf], ah ; retf -0x64f1
0x0000000000683f33 : add byte ptr [rsi + 0xf], ah ; retf -0x78f1
0x00000000006a49eb : add byte ptr [rsi + 0xf], ah ; retf 0x1372
0x0000000000683f45 : add byte ptr [rsi + 0xf], ah ; retf 0x2c77
0x00000000006a51bf : add byte ptr [rsi + 0xf], ah ; retf 0xa77
0x00000000006a4eab : add byte ptr [rsi + 0xf], ah ; retf 0xa7a
0x00000000006a4e67 : add byte ptr [rsi + 0xf], ah ; sub al, cl ; movapd xmm0, xmm1 ; ret
0x00000000006821eb : add byte ptr [rsi + 0xf], ah ; sub bl, al ; add rsp, 0x18 ; ret
0x0000000000683d17 : add byte ptr [rsi + 0xf], ah ; sub bl, al ; add rsp, 0x48 ; ret
0x00000000006a5093 : add byte ptr [rsi + 0xf], ah ; sub cl, al ; add rsp, 0x18 ; ret
0x0000000000683907 : add byte ptr [rsi + 0xf], ah ; sub cl, al ; add rsp, 0x28 ; ret
0x00000000006a5137 : add byte ptr [rsi + 0xf], ah ; sub cl, al ; jmp 0x6a5107
0x00000000006a4a6c : add byte ptr [rsi + 0xf], ah ; sub cl, al ; ret
0x000000000068373f : add byte ptr [rsi + 0xf], ah ; sub dh, al ; add rsp, 0x28 ; ret
0x00000000007e6850 : add byte ptr [rsi + 0xfd4050f], bh ; add bh, cl ; syscall
0x000000000073a2d3 : add byte ptr [rsi + 0xffdaf1], bl ; add rax, qword ptr [r8] ; ret 0xdaf1
0x00000000004f800f : add byte ptr [rsi + 1], bh ; call rax
0x000000000065e649 : add byte ptr [rsi + 1], bh ; call rcx
0x00000000005111f2 : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rax
0x000000000063d6fb : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rcx
0x000000000064fa7a : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rdx
0x000000000052bad1 : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rax
0x0000000000511b2f : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rax
0x00000000006516e1 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rdx
0x000000000052ca26 : add byte ptr [rsi + 1], bh ; mov rdi, r15 ; call rax
0x000000000055156d : add byte ptr [rsi + 1], bh ; mov rdi, r15 ; call rdx
0x0000000000511b84 : add byte ptr [rsi + 1], bh ; mov rdi, rbp ; call rax
0x0000000000503b09 : add byte ptr [rsi + 1], bh ; mov rdi, rbx ; call rax
0x00000000005531f4 : add byte ptr [rsi + 1], bh ; mov rdi, rcx ; call rax
0x00000000005548fb : add byte ptr [rsi + 2], bh ; call rax
0x000000000063383b : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rax
0x0000000000636715 : add byte ptr [rsi + 2], bh ; mov rdi, rax ; call rdx
0x0000000000510128 : add byte ptr [rsi + 2], bh ; mov rdi, rbx ; call rax
0x00000000007ebbbe : add byte ptr [rsi + 3], bh ; ret
0x0000000000781dbb : add byte ptr [rsi + 3], dh ; add al, al ; rcr esi, 1 ; jmp rcx
0x00000000007d5746 : add byte ptr [rsi + 5], bl ; ret 2
0x00000000007e57bc : add byte ptr [rsi + 5], bl ; retf 0x101
0x0000000000744f13 : add byte ptr [rsi + 6], al ; out dx, eax ; jmp rax
0x00000000007edb65 : add byte ptr [rsi + 6], ch ; ret 2
0x00000000007f8a91 : add byte ptr [rsi + 6], cl ; ret
0x00000000007bdd63 : add byte ptr [rsi + 7], bl ; add byte ptr [rax + 0x29], bl ; int1 ; jmp qword ptr [rbx]
0x00000000007cd243 : add byte ptr [rsi + rax + 0x6c105], bh ; retf 0x506
0x00000000007cfce6 : add byte ptr [rsi + rax + 0x6d505], bh ; retf
0x00000000007bfe00 : add byte ptr [rsi + rax + 0x714c805], ah ; retf 0xe06
0x00000000007d61b7 : add byte ptr [rsi + rax + 0x7a205], dh ; ret
0x000000000075bd93 : add byte ptr [rsi + rax + 1], cl ; add byte ptr [rax], bh ; cmp dl, cl ; call rsp
0x0000000000744948 : add byte ptr [rsi + rax - 0x11835e00], bl ; jmp qword ptr [rax]
0x0000000000547f17 : add byte ptr [rsi + rax - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000073969b : add byte ptr [rsi + rax*2 + 0xbd8ffd8], al ; add eax, dword ptr [rax] ; retf -0x27ba
0x000000000079fd4b : add byte ptr [rsi + rax*2 + 5], al ; add al, dh ; jo 0x79fd43 ; call qword ptr [rbx]
0x00000000007430e3 : add byte ptr [rsi + rax*2 - 0x15], ah ; jmp rax
0x000000000079fd63 : add byte ptr [rsi + rax*2], bl ; add eax, 0xe870f800 ; jmp rcx
0x0000000000757d13 : add byte ptr [rsi + rax*8], cl ; add byte ptr [rax], al ; loopne 0x757cf2 ; call qword ptr [rdi]
0x000000000079bd4b : add byte ptr [rsi + rax], al ; add eax, 0xe786aa00 ; call rsp
0x0000000000742cb0 : add byte ptr [rsi + rax], cl ; add al, bh ; test al, 0xea ; jmp qword ptr [rax]
0x000000000075e5db : add byte ptr [rsi + rbp + 0x12fc0001], dl ; sar bh, cl ; retf
0x0000000000782513 : add byte ptr [rsi + rbp*2], cl ; add eax, dword ptr [rax] ; clc ; fcomp st(6) ; call qword ptr [rbx]
0x0000000000766573 : add byte ptr [rsi + rbp*4], ch ; add dword ptr [rax], eax ; retf -0x2a25
0x00000000007390fb : add byte ptr [rsi + rbp*4], dh ; xlatb ; jmp qword ptr [rax]
0x00000000007aa55b : add byte ptr [rsi + rbp*8 + 5], dl ; add al, al ; retf
0x000000000073863b : add byte ptr [rsi + rbp*8 - 0x2b], ch ; jmp qword ptr [rax]
0x0000000000738373 : add byte ptr [rsi + rbp*8 - 0x2c], cl ; call rax
0x000000000077a53b : add byte ptr [rsi + rbp*8], dh ; add al, byte ptr [rax] ; cmp dl, 0xdc ; jmp qword ptr [rcx]
0x00000000007b1440 : add byte ptr [rsi + rbp*8], dh ; call qword ptr [rdx]
0x00000000007bd593 : add byte ptr [rsi + rbx + 0xfb80007], cl ; int1 ; call qword ptr [rsi]
0x000000000074473b : add byte ptr [rsi + rbx*2 - 0x12], ch ; call rax
0x0000000000738c23 : add byte ptr [rsi + rbx*8 - 0x2a], bl ; jmp qword ptr [rax]
0x000000000077952b : add byte ptr [rsi + rbx*8], ah ; add al, byte ptr [rax] ; ror al, 0xdc ; jmp qword ptr [rdx]
0x00000000007bec80 : add byte ptr [rsi + rcx + 0x10], bh ; add dword ptr [rdx], 0x69 ; ret
0x0000000000773da0 : add byte ptr [rsi + rcx + 0x10], dl ; add dword ptr [rdx], 0x5a ; ret
0x0000000000772b40 : add byte ptr [rsi + rcx + 0x10], dl ; add dword ptr [rdx], 0x5b ; ret
0x0000000000733c8b : add byte ptr [rsi + rcx + 0x4368ffcd], dh ; add al, 0 ; retf -0x32f2
0x0000000000529217 : add byte ptr [rsi + rcx + 0x48], dh ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000007f53f1 : add byte ptr [rsi + rcx + 0xed705], dh ; ret
0x00000000007b0563 : add byte ptr [rsi + rcx*2 + 6], bl ; add al, bl ; add ch, dh ; call qword ptr [rdx]
0x0000000000794573 : add byte ptr [rsi + rcx*4 + 4], ch ; add byte ptr [rdx], dh ; jle 0x794567 ; call qword ptr [rax]
0x000000000075588f : add byte ptr [rsi + rcx*4], bl ; iretd ; call rbx
0x000000000075455b : add byte ptr [rsi + rcx*4], dl ; add byte ptr [rax], al ; call 0xffffffffd575148d
0x00000000007a85b3 : add byte ptr [rsi + rcx*8 + 0x2f180005], ch ; in al, dx ; call qword ptr [rbx]
0x0000000000798543 : add byte ptr [rsi + rcx*8], bh ; add al, 0 ; pop rax ; mul ebp ; call qword ptr [rdx]
0x000000000079c57b : add byte ptr [rsi + rcx], dh ; add eax, 0xe7a81000 ; call rsp
0x000000000075f5fb : add byte ptr [rsi + rdi + 0x95c0001], dh ; sar edi, cl ; syscall
0x000000000075f58b : add byte ptr [rsi + rdi + 1], al ; add byte ptr [rax + rcx - 0x2d], al ; call qword ptr [rbx]
0x000000000078f54b : add byte ptr [rsi + rdi + 4], al ; add byte ptr [rax], al ; add dl, ah ; jmp qword ptr [rbx]
0x0000000000753593 : add byte ptr [rsi + rdi*2], cl ; add al, cl ; mov cl, 0xce ; call rsp
0x00000000007b75a3 : add byte ptr [rsi + rdi*4 - 0x4657fffa], bl ; out dx, eax ; jmp qword ptr [rsi]
0x0000000000756a77 : add byte ptr [rsi + rdi*4], ch ; iretd ; jmp qword ptr [rax]
0x0000000000770d6b : add byte ptr [rsi + rdx*2 + 2], ah ; add byte ptr [rax], al ; mov bl, 0xda ; call qword ptr [rcx]
0x0000000000774d2b : add byte ptr [rsi + rdx*4], ah ; add al, byte ptr [rax] ; nop ; mov bl, 0xdb ; call qword ptr [rax]
0x00000000007a4d1b : add byte ptr [rsi + rdx*4], dl ; add eax, 0xeb3b5000 ; call qword ptr [rbx]
0x0000000000788d73 : add byte ptr [rsi + rdx*8 + 3], ch ; add byte ptr [rax], ch ; mov al, ah ; jmp rax
0x000000000074e0af : add byte ptr [rsi + rdx*8 - 0x34], ah ; call rax
0x00000000007f8cbf : add byte ptr [rsi + rdx*8], bh ; add ecx, edx ; add eax, dword ptr [rax] ; ret 0x502
0x000000000078cd3b : add byte ptr [rsi + rdx], dh ; add al, 0 ; retf -0x3879
0x00000000007aeda3 : add byte ptr [rsi + rsi + 6], bl ; add byte ptr [rax], ch ; retf -0x13
0x00000000007b6d5b : add byte ptr [rsi + rsi*4 + 6], dl ; add byte ptr [rax - 0x54], dh ; out dx, eax ; call qword ptr [rdi]
0x00000000007aad6b : add byte ptr [rsi + rsi*8 + 5], ah ; add al, al ; fucompi st(4) ; jmp qword ptr [rcx]
0x00000000007bad63 : add byte ptr [rsi + rsi*8 + 6], bl ; add al, ch ; ret 0xfff0
0x00000000007bad7b : add byte ptr [rsi + rsi*8 + 6], dh ; add al, ah ; ret 0xfff0
0x000000000079ed5b : add byte ptr [rsi + rsi], dl ; add eax, 0xe8383800 ; call rsp
0x0000000000738dc3 : add byte ptr [rsi - 0x10], ch ; salc ; call qword ptr [rax]
0x0000000000678593 : add byte ptr [rsi - 0x16], bh ; xor eax, eax ; ret
0x00000000007cac78 : add byte ptr [rsi - 0x16fe50fb], al ; and al, 0 ; ret
0x0000000000747433 : add byte ptr [rsi - 0x17000b3e], dh ; add dword ptr [rdi], 0 ; retf -0xb3e
0x0000000000738d03 : add byte ptr [rsi - 0x19], dl ; salc ; jmp rax
0x000000000074436b : add byte ptr [rsi - 0x1c], al ; in eax, dx ; call qword ptr [rax]
0x000000000073d014 : add byte ptr [rsi - 0x20], bh ; jmp qword ptr [rax]
0x0000000000757d17 : add byte ptr [rsi - 0x20], cl ; iretd ; call qword ptr [rdi]
0x00000000007412c8 : add byte ptr [rsi - 0x225ffffb], 0xe6 ; call rax
0x000000000073b84c : add byte ptr [rsi - 0x22], al ; call rax
0x00000000007476c3 : add byte ptr [rsi - 0x2a], bl ; hlt ; jmp qword ptr [rax]
0x0000000000762627 : add byte ptr [rsi - 0x2c], ah ; jmp rax
0x00000000007a1d93 : add byte ptr [rsi - 0x2f07fffb], cl ; call 0x7be8a7
0x0000000000736833 : add byte ptr [rsi - 0x2f], al ; call rax
0x000000000075619f : add byte ptr [rsi - 0x31], ah ; call rsp
0x0000000000753ef7 : add byte ptr [rsi - 0x32], dh ; call rsp
0x000000000074fb88 : add byte ptr [rsi - 0x33], al ; call rdx
0x00000000007f4037 : add byte ptr [rsi - 0x4dfafe36], bh ; retf
0x000000000075a517 : add byte ptr [rsi - 0x59], ah ; sar bh, 1 ; ret 1
0x0000000000738a13 : add byte ptr [rsi - 0x5c], bh ; salc ; jmp qword ptr [rax]
0x000000000055d464 : add byte ptr [rsi - 0x60], al ; add al, ch ; ret
0x000000000055d55c : add byte ptr [rsi - 0x60], al ; add al, ch ; retf
0x000000000055e631 : add byte ptr [rsi - 0x60], al ; add byte ptr [rax - 0x77], cl ; ret 0x53e8
0x000000000055c6bd : add byte ptr [rsi - 0x60], al ; add byte ptr [rax - 0x77], cl ; ret 0x67e9
0x0000000000735583 : add byte ptr [rsi - 0x60], ch ; iretd ; call qword ptr [rax]
0x0000000000744b13 : add byte ptr [rsi - 0x6c], cl ; out dx, al ; call qword ptr [rax]
0x000000000074ae90 : add byte ptr [rsi - 0x6d4ffff8], cl ; stc ; jmp qword ptr [rax]
0x000000000073a1cb : add byte ptr [rsi - 0x6f0025a2], dl ; add eax, dword ptr [r8] ; retf -0x25a2
0x00000000006be46d : add byte ptr [rsi - 0x70], ah ; lea eax, dword ptr [rdi + 4] ; ret
0x00000000006a08ad : add byte ptr [rsi - 0x70], ah ; mov byte ptr [rsi], dil ; ret
0x000000000067456d : add byte ptr [rsi - 0x70], ah ; mov dword ptr [rdi + 0x84], esi ; ret
0x00000000006a7d2d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x1c0 ; ret
0x000000000062cb0d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x40 ; ret
0x00000000004f749d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x580 ; ret
0x00000000006ce62d : add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi + 0x14] ; ret
0x00000000006c705d : add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi] ; ret
0x000000000066768d : add byte ptr [rsi - 0x70], ah ; mov eax, edi ; ret
0x000000000057e61d : add byte ptr [rsi - 0x70], ah ; mov eax, edi ; xor eax, 1 ; ret
0x000000000050abad : add byte ptr [rsi - 0x70], ah ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000525bbd : add byte ptr [rsi - 0x70], ah ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000006be56d : add byte ptr [rsi - 0x70], ah ; mov rax, rdi ; mov rdx, rsi ; ret
0x00000000006674fd : add byte ptr [rsi - 0x70], ah ; mov rax, rdi ; ret
0x00000000006a870d : add byte ptr [rsi - 0x70], ah ; pop rbx ; ret
0x000000000053b5ad : add byte ptr [rsi - 0x70], ah ; ret
0x00000000007fa3c3 : add byte ptr [rsi - 0x7376f994], bh ; add dword ptr [rax], eax ; retf
0x00000000004fc697 : add byte ptr [rsi - 0x77], ah ; adc byte ptr [r9 - 0x7d], al ; call qword ptr [rdx]
0x000000000053e797 : add byte ptr [rsi - 0x77], ah ; add al, 0x48 ; add esp, 8 ; ret
0x00000000006cbb7f : add byte ptr [rsi - 0x77], ah ; ja 0x6cbb8b ; ret
0x00000000006cbb7e : add byte ptr [rsi - 0x77], spl ; ja 0x6cbb8c ; ret
0x00000000007c69f3 : add byte ptr [rsi - 0x79fd2bf7], bl ; sbb al, byte ptr [rax] ; ret 0x30c
0x000000000073905b : add byte ptr [rsi - 0x7b], bl ; xlatb ; jmp rax
0x0000000000738903 : add byte ptr [rsi - 0x7e], ch ; salc ; inc eax ; retf
0x0000000000738dfb : add byte ptr [rsi - 0xd], bh ; salc ; jmp qword ptr [rax]
0x00000000007387fb : add byte ptr [rsi - 0xf00299c], bl ; mov byte ptr [rdx], 0 ; ret 0xd667
0x0000000000738723 : add byte ptr [rsi - 0xf0029cf], ah ; ret 2
0x000000000074ba4f : add byte ptr [rsi - 1], al ; retf
0x0000000000756c7b : add byte ptr [rsi*4 - 0x3ba80000], dh ; iretd ; call qword ptr [rax]
0x0000000000756c4b : add byte ptr [rsi*4 - 0x3c4c0000], al ; iretd ; call rsp
0x00000000007df30e : add byte ptr [rsi], 0 ; enter 0x301, -0x26 ; or byte ptr [rax], al ; retf
0x00000000007eb7b8 : add byte ptr [rsi], 0 ; retf 0x3405
0x00000000007d8bf8 : add byte ptr [rsi], 0x44 ; add byte ptr [rax], al ; retf 0x506
0x00000000007910e5 : add byte ptr [rsi], 2 ; retf 0xe0a
0x00000000007369cb : add byte ptr [rsi], ah ; add dl, dl ; jmp rax
0x0000000000744dd3 : add byte ptr [rsi], ah ; in al, -0x12 ; jmp rax
0x0000000000737783 : add byte ptr [rsi], ah ; jb 0x73775e ; jmp qword ptr [rax]
0x000000000079e2cf : add byte ptr [rsi], ah ; jmp rdi
0x0000000000736fd3 : add byte ptr [rsi], ah ; js 0x736fad ; call rax
0x00000000007381d3 : add byte ptr [rsi], ah ; mov ch, 0xd4 ; jmp qword ptr [rax]
0x000000000076136f : add byte ptr [rsi], ah ; not ebx ; call rbx
0x0000000000757157 : add byte ptr [rsi], ah ; retf
0x00000000007a809f : add byte ptr [rsi], ah ; sbb al, 0xec ; call qword ptr [rdi]
0x00000000006783e9 : add byte ptr [rsi], ah ; setne al ; ret
0x0000000000744423 : add byte ptr [rsi], al ; adc dh, ch ; call rax
0x0000000000673b9a : add byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x0000000000757c37 : add byte ptr [rsi], al ; loopne 0x757c0e ; call qword ptr [rcx]
0x0000000000750337 : add byte ptr [rsi], al ; mov ebp, ecx ; call rdx
0x0000000000744a33 : add byte ptr [rsi], al ; mov esi, ebp ; jmp qword ptr [rax]
0x0000000000742d73 : add byte ptr [rsi], al ; retf -0x16
0x0000000000712fc7 : add byte ptr [rsi], al ; retf 0x5c
0x00000000006784c9 : add byte ptr [rsi], al ; setne al ; ret
0x000000000074b9ef : add byte ptr [rsi], al ; stc ; retf
0x00000000007961b7 : add byte ptr [rsi], al ; xor ebp, esp ; call qword ptr [rax]
0x0000000000771d43 : add byte ptr [rsi], bh ; add al, byte ptr [rax] ; clc ; add bl, bl ; call qword ptr [rbx]
0x000000000074467b : add byte ptr [rsi], bh ; out dx, al ; jmp qword ptr [rax]
0x0000000000738fcb : add byte ptr [rsi], bh ; push rbx ; xlatb ; jmp rax
0x00000000007382eb : add byte ptr [rsi], bh ; ret
0x0000000000757087 : add byte ptr [rsi], bh ; retf -0x31
0x00000000007688e7 : add byte ptr [rsi], bh ; sti ; xlatb ; jmp rax
0x0000000000733cb3 : add byte ptr [rsi], bl ; bswap ebp ; call rax
0x0000000000738e53 : add byte ptr [rsi], bl ; cli ; salc ; jmp rax
0x0000000000737b73 : add byte ptr [rsi], bl ; fstp st(3), st(0) ; jmp qword ptr [rax]
0x000000000079cb7f : add byte ptr [rsi], bl ; ret
0x0000000000756aff : add byte ptr [rsi], bl ; ret 0xffcf
0x00000000006db3ff : add byte ptr [rsi], bl ; retf
0x0000000000744493 : add byte ptr [rsi], bl ; sbb esi, ebp ; jmp rax
0x0000000000744d6b : add byte ptr [rsi], bl ; shr esi, 1 ; jmp rax
0x0000000000752eff : add byte ptr [rsi], bl ; xchg esi, ecx ; call rsp
0x0000000000736b53 : add byte ptr [rsi], ch ; adc al, 0xd2 ; call rax
0x000000000079548f : add byte ptr [rsi], ch ; add ah, ch ; call rsp
0x00000000007bf04c : add byte ptr [rsi], ch ; add eax, 0x53e016d ; retf 0x301
0x000000000079a9c7 : add byte ptr [rsi], ch ; mov bl, 0xc6 ; call qword ptr [rdx]
0x000000000075a0ef : add byte ptr [rsi], ch ; mov ss, eax ; call rbx
0x00000000007586ff : add byte ptr [rsi], ch ; or dl, al ; call rsp
0x0000000000714337 : add byte ptr [rsi], ch ; ret 0x5d
0x0000000000792bef : add byte ptr [rsi], ch ; retf -0x1d
0x00000000007385cb : add byte ptr [rsi], ch ; retf -0x2b
0x00000000007570a7 : add byte ptr [rsi], ch ; retf -0x31
0x000000000074efbf : add byte ptr [rsi], ch ; sbb ecx, ebp ; call rsp
0x00000000005a0a94 : add byte ptr [rsi], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007427bb : add byte ptr [rsi], cl ; fucomi st(1) ; jmp rax
0x000000000074d707 : add byte ptr [rsi], cl ; jbe 0x74d6db ; call rdx
0x0000000000736503 : add byte ptr [rsi], cl ; mov edi, 0x20f0ffd1 ; add al, byte ptr [rax] ; ret 0xd1bf
0x0000000000747663 : add byte ptr [rsi], cl ; sal ah, cl ; jmp rax
0x000000000073872b : add byte ptr [rsi], cl ; xor edx, esi ; jmp qword ptr [rax]
0x0000000000733d4b : add byte ptr [rsi], dh ; adc cl, ch ; jmp rax
0x00000000007369d8 : add byte ptr [rsi], dh ; add al, byte ptr [rax] ; xchg eax, esi ; add dl, dl ; jmp qword ptr [rax]
0x000000000079e987 : add byte ptr [rsi], dh ; and ch, al ; call qword ptr [rdi]
0x00000000007636b7 : add byte ptr [rsi], dh ; and ebp, edx ; call qword ptr [rax]
0x00000000007362c3 : add byte ptr [rsi], dh ; jbe 0x73629c ; jmp rax
0x0000000000750f07 : add byte ptr [rsi], dh ; retf -0x33
0x0000000000739d8b : add byte ptr [rsi], dh ; sbb ebx, ecx ; jmp rax
0x000000000055e521 : add byte ptr [rsi], dl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a285e : add byte ptr [rsi], dl ; call rax
0x0000000000737d3b : add byte ptr [rsi], dl ; not bl ; call qword ptr [rax]
0x0000000000738b33 : add byte ptr [rsi], dl ; ret 0xffd6
0x00000000007e3384 : add byte ptr [rsp + 0x258005], bh ; retf
0x000000000075dbc3 : add byte ptr [rsp + 1], bh ; add byte ptr [rdi + rbp*8 - 0x2f], al ; call qword ptr [rdx]
0x00000000007cb1cf : add byte ptr [rsp + rax + 0x4db05], ch ; retf 0x3e04
0x00000000007ca47a : add byte ptr [rsp + rax + 0x50bfc16], ah ; ret 0xa004
0x00000000006bd353 : add byte ptr [rsp + rax - 0x3f6af0c9], al ; ret
0x000000000078fb6b : add byte ptr [rsp + rax*2 + 4], ah ; add al, dh ; or dl, ah ; jmp qword ptr [rbx]
0x000000000078fb83 : add byte ptr [rsp + rax*2 + 4], bh ; add byte ptr [rax], cl ; or edx, esp ; jmp qword ptr [rbx]
0x000000000078fb53 : add byte ptr [rsp + rax*2 + 4], cl ; add al, bl ; or dl, ah ; jmp qword ptr [rbx]
0x000000000073a113 : add byte ptr [rsp + rax*2 - 0x26], bh ; call rax
0x00000000006065bd : add byte ptr [rsp + rax*2 - 0x7d], dh ; ret
0x000000000074fb83 : add byte ptr [rsp + rax*2], bh ; add byte ptr [rax], al ; add byte ptr [rsi - 0x33], al ; call rdx
0x0000000000783d3f : add byte ptr [rsp + rax*4], al ; ret
0x00000000007a7ba3 : add byte ptr [rsp + rax*8 + 0x10d80005], bl ; in al, dx ; call qword ptr [rbx]
0x0000000000783db7 : add byte ptr [rsp + rax*8], al ; ret
0x0000000000757b33 : add byte ptr [rsp + rax*8], ch ; add byte ptr [rax], al ; fcmovu st(0), st(7) ; iretd ; call qword ptr [rbx]
0x0000000000767b73 : add byte ptr [rsp + rax*8], ch ; add dword ptr [rax], eax ; retf -0x28f1
0x000000000078bb13 : add byte ptr [rsp + rax], cl ; add al, 0 ; sub spl, cl ; call qword ptr [rcx]
0x000000000073a1db : add byte ptr [rsp + rbp*2 - 0x26], dh ; jmp rax
0x00000000007a237b : add byte ptr [rsp + rbp*2], dh ; add eax, 0xe8f60000 ; call rdi
0x00000000007a231b : add byte ptr [rsp + rbp*2], dl ; add eax, 0xe8f58000 ; call qword ptr [rax]
0x000000000078632b : add byte ptr [rsp + rbp*4], ah ; add eax, dword ptr [rax] ; xor cl, 0xdf ; jmp qword ptr [rcx]
0x0000000000756393 : add byte ptr [rsp + rbp*4], cl ; add byte ptr [rbx + rbp*4], ch ; iretd ; jmp qword ptr [rsi]
0x000000000079a34b : add byte ptr [rsp + rbp*8 + 4], al ; add al, ah ; ret 0xffe6
0x000000000076115f : add byte ptr [rsp + rbp*8 - 0x2d], al ; call rsp
0x000000000079a30b : add byte ptr [rsp + rbp*8], al ; add al, 0 ; nop ; ret 0xffe6
0x0000000000783de7 : add byte ptr [rsp + rbp*8], al ; ret
0x0000000000769cf7 : add byte ptr [rsp + rbp*8], al ; retf 0x7c
0x00000000007ad393 : add byte ptr [rsp + rbx + 0x79280006], cl ; in eax, dx ; jmp qword ptr [rcx]
0x00000000007a80df : add byte ptr [rsp + rbx - 0x14], cl ; call qword ptr [rbx]
0x000000000076136b : add byte ptr [rsp + rbx*2], ah ; add dword ptr [rax], eax ; not ebx ; call rbx
0x00000000007b538b : add byte ptr [rsp + rbx*4 + 0x5b400006], al ; out dx, eax ; jmp qword ptr [rcx]
0x00000000007b53a3 : add byte ptr [rsp + rbx*4 + 0x5b580006], bl ; out dx, eax ; jmp qword ptr [rax]
0x00000000007b53bb : add byte ptr [rsp + rbx*4 + 0x5b600006], dh ; out dx, eax ; jmp qword ptr [rcx]
0x00000000007b5373 : add byte ptr [rsp + rbx*4 + 6], ch ; add byte ptr [rax], ch ; pop rbx ; out dx, eax ; jmp qword ptr [rcx]
0x000000000076a407 : add byte ptr [rsp + rbx*4 - 0x37], dl ; call qword ptr [rdx]
0x0000000000765333 : add byte ptr [rsp + rbx*4], ch ; add dword ptr [rax], eax ; retf -0x2aa0
0x0000000000765353 : add byte ptr [rsp + rbx*4], cl ; add dword ptr [rax], eax ; retf -0x2aa0
0x0000000000769c0f : add byte ptr [rsp + rbx], al ; retf 0x7c
0x000000000066b399 : add byte ptr [rsp + rcx + 0x48], bh ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000062ed61 : add byte ptr [rsp + rcx + 0x48], dh ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000067aa81 : add byte ptr [rsp + rcx + 0xf], dh ; mov dh, 0 ; ret
0x0000000000751d0f : add byte ptr [rsp + rcx - 0x32], bl ; call rsp
0x0000000000733c3b : add byte ptr [rsp + rcx - 0x33], ah ; jmp rax
0x00000000007b43a3 : add byte ptr [rsp + rcx*4 + 0x42e80006], bl ; out dx, eax ; jmp qword ptr [rdi]
0x00000000007b434b : add byte ptr [rsp + rcx*4 + 6], al ; add al, dl ; out dx, eax ; jmp qword ptr [rdi]
0x00000000007a837b : add byte ptr [rsp + rcx*8 + 5], dh ; add al, dl ; sub ch, ah ; call qword ptr [rdx]
0x0000000000747523 : add byte ptr [rsp + rcx*8 - 0xc], al ; call rax
0x000000000076734b : add byte ptr [rsp + rdi*4], al ; add dword ptr [rax], eax ; add bl, byte ptr [rsi - 0x2a] ; call rsp
0x000000000073590b : add byte ptr [rsp + rdi*8], bl ; iretd ; jmp qword ptr [rax]
0x000000000079f30b : add byte ptr [rsp + rdi], al ; add eax, 0xe85e1200 ; jmp qword ptr [rcx]
0x00000000007d50f6 : add byte ptr [rsp + rdx + 0x14ab05], bl ; retf
0x00000000006e5f57 : add byte ptr [rsp + rdx + 0x47], ch ; add byte ptr [rax], al ; ret 0x4715
0x00000000007bcbb3 : add byte ptr [rsp + rdx + 0x8680007], ch ; int1 ; call qword ptr [rbx]
0x00000000007d49b5 : add byte ptr [rsp + rdx + 0xd9f05], dh ; retf
0x000000000079cb7b : add byte ptr [rsp + rdx + 5], dh ; add byte ptr [rsi], bl ; ret
0x0000000000767cc7 : add byte ptr [rsp + rdx - 0x29], bl ; jmp qword ptr [rbx]
0x0000000000764b83 : add byte ptr [rsp + rdx*4], bh ; add dword ptr [rax], eax ; retf -0x2abb
0x00000000007a8b93 : add byte ptr [rsp + rdx*8 + 0x49280005], cl ; in al, dx ; call qword ptr [rcx]
0x00000000007b8b9b : add byte ptr [rsp + rdx*8 + 6], dl ; add al, dh ; push 0xf0 ; call qword ptr [rcx]
0x00000000007695cf : add byte ptr [rsp + rdx*8], al ; ret
0x000000000075e63f : add byte ptr [rsp + rdx], dh ; sar bh, cl ; retf
0x000000000076eb63 : add byte ptr [rsp + rsi + 2], bl ; add byte ptr [rdx], dh ; push rsi ; leave ; call qword ptr [rdx]
0x000000000074f247 : add byte ptr [rsp + rsi - 0x33], cl ; jmp qword ptr [rbx]
0x00000000007a2b73 : add byte ptr [rsp + rsi*2], ch ; add eax, 0xe95cb800 ; call qword ptr [rsi]
0x0000000000766b6b : add byte ptr [rsp + rsi*4], ah ; add dword ptr [rax], eax ; jle 0x766b86 ; salc ; call rsp
0x00000000007a6b13 : add byte ptr [rsp + rsi*4], cl ; add eax, 0xebbac800 ; jmp qword ptr [rsi]
0x0000000000776b7b : add byte ptr [rsp + rsi*4], dh ; add al, byte ptr [rax] ; mov al, 0x56 ; fdiv st(7), st(0) ; retf 1
0x000000000079ab2b : add byte ptr [rsp + rsi*8], ah ; add al, 0 ; xor cl, 0xe6 ; jmp qword ptr [rcx]
0x000000000078ab33 : add byte ptr [rsp + rsi*8], ch ; add eax, dword ptr [rax] ; in al, -0x20 ; jmp qword ptr [rax]
0x000000000074ebab : add byte ptr [rsp + rsi], ah ; add byte ptr [rdx], al ; add ebp, ecx ; call rsp
0x0000000000768edf : add byte ptr [rsp - 0x28], al ; jmp qword ptr [rdx]
0x0000000000769bbb : add byte ptr [rsp - 0x5ccbffff], dh ; leave ; call qword ptr [rdx]
0x00000000007adbbb : add byte ptr [rsp - 0x675ffffa], dh ; in eax, dx ; jmp rdi
0x00000000007a9b2b : add byte ptr [rsp], ah ; add eax, 0xecab3000 ; call qword ptr [rax]
0x0000000000769407 : add byte ptr [rsp], al ; ret
0x00000000007693d7 : add byte ptr [rsp], al ; ret 0x7c
0x000000000079acf7 : add byte ptr [rsp], al ; retf
0x000000000073f854 : add byte ptr [rsp], cl ; call rax
0x000000000078db3b : add byte ptr [rsp], dh ; add al, 0 ; mov cl, 0xe1 ; jmp qword ptr [rax]
0x000000000046ef4a : add byte ptr cs:[r8 - 0x77], r9b ; ret 0xbe
0x00000000006cb4bc : add byte ptr cs:[rax], al ; mov eax, ebx ; pop rbx ; ret
0x00000000007ea52a : add byte ptr cs:[rax], al ; outsb dx, byte ptr [rsi] ; ret 0x102
0x00000000007d50f4 : add byte ptr cs:[rax], al ; pushfq ; adc al, 5 ; stosd dword ptr [rdi], eax ; adc al, 0 ; retf
0x00000000007f14c5 : add byte ptr cs:[rax], al ; retf
0x00000000007f06e6 : add byte ptr cs:[rax], al ; stc ; add dl, byte ptr [rsi] ; jmp qword ptr [rax]
0x000000000061d468 : add byte ptr ds:[rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4847
0x00000000006257a0 : add byte ptr ds:[rax - 0x75], cl ; add eax, 0x3dd13f ; call rax
0x0000000000625617 : add byte ptr ds:[rax - 0x75], cl ; add eax, 0x3dd2c8 ; call rax
0x00000000007cb1cd : add byte ptr ds:[rax], al ; lodsb al, byte ptr [rsi] ; add al, 5 ; fild dword ptr [rax + rax] ; retf 0x3e04
0x00000000007d6cb0 : add byte ptr ds:[rax], al ; ret 0x505
0x000000000042476d : add byte ptr es:[rax + 0x29], cl ; ret
0x000000000045e464 : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5a4473 ; call rax
0x0000000000439a94 : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5c8e43 ; call rax
0x000000000042a4d9 : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5d8406 ; call rax
0x000000000042a3d7 : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5d8508 ; call rax
0x0000000000428849 : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5da08e ; call rax
0x000000000042727d : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5db65a ; call rax
0x00000000004257ce : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5dd109 ; call rax
0x00000000004256d5 : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5dd202 ; call rax
0x00000000004255d9 : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5dd2fe ; call rax
0x0000000000420390 : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5e2547 ; call rax
0x00000000004202b4 : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5e2623 ; call rax
0x00000000004201d6 : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5e2701 ; call rax
0x000000000041fee6 : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5e29f1 ; call rax
0x000000000041fded : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5e2aea ; call rax
0x000000000041fcf4 : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5e2be3 ; call rax
0x000000000041fae2 : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5e2df5 ; call rax
0x000000000041fa06 : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5e2ed1 ; call rax
0x000000000041f928 : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5e2faf ; call rax
0x000000000041f638 : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5e329f ; call rax
0x000000000041f53f : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5e3398 ; call rax
0x000000000041f446 : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5e3491 ; call rax
0x000000000041ab89 : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5e7d4e ; call rax
0x000000000041a81d : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5e80ba ; call rax
0x000000000041a722 : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5e81b5 ; call rax
0x00000000004197af : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5e9128 ; call rax
0x0000000000419530 : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5e93a7 ; call rax
0x00000000004192b3 : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5e9624 ; call rax
0x0000000000418c10 : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5e9cc7 ; call rax
0x0000000000417bf1 : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5eace6 ; call rax
0x0000000000417046 : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5eb891 ; call rax
0x0000000000416d4a : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5ebb8d ; call rax
0x0000000000415bd8 : add byte ptr es:[rax - 0x75], cl ; add eax, 0x5eccff ; call rax
0x0000000000410896 : add byte ptr es:[rax - 0x77], cl ; ret
0x000000000044e7df : add byte ptr es:[rax - 0x77], cl ; ret 0x8948
0x0000000000451787 : add byte ptr es:[rax - 0x77], cl ; ret 0x8b48
0x00000000006c8a86 : add byte ptr es:[rax], al ; add byte ptr [rdi], cl ; ret 0x66c3
0x00000000007d785d : add byte ptr es:[rax], al ; ret
0x000000000045e790 : add byte ptr es:[rbx - 0x7af0fe05], al ; ret
0x00000000007c6851 : add byte ptr es:[rdi + 0x27d305], ah ; ret
0x000000000040994e : add byte ptr es:[rdi], cl ; mov bh, 5 ; retf
0x0000000000547bda : add byte ptr fs:[r10], al ; add byte ptr [rax], al ; add al, ch ; retf 0x176c
0x000000000058c278 : add byte ptr fs:[r9 - 0x75], r8b ; adc byte ptr [r9], r15b ; retf
0x00000000007fa092 : add byte ptr gs:[rax + 0x4f940551], dh ; ret
0x00000000007200ea : add byte ptr gs:[rax], al ; add byte ptr [rax], al ; add al, al ; ret
0x0000000000751d0d : add byte ptr gs:[rax], al ; pop rsp ; or al, 0xce ; call rsp
0x00000000007fa0ba : add byte ptr gs:[rcx + 0x50f80552], bh ; retf
0x00000000006a832b : add byte ptr ss:[rax - 0x77], cl ; add eax, 0x35a334 ; ret
0x00000000006a8430 : add byte ptr ss:[rax - 0x77], cl ; or eax, 0x35a22f ; ret
0x00000000007c9d35 : add byte ptr ss:[rax], al ; ret
0x00000000007c5313 : add byte ptr ss:[rax], al ; ret 0x502
0x000000000069333c : add byte ptr ss:[rcx], bh ; ret 0x840f
0x00000000007f4c3e : add ch, ah ; add al, 6 ; ret
0x00000000007a78d1 : add ch, ah ; call qword ptr [rdx]
0x0000000000795431 : add ch, ah ; call rsp
0x00000000007a7901 : add ch, ah ; jmp rdi
0x000000000062e1b8 : add ch, ah ; jno 0x62e1c0 ; ret
0x00000000007d28b7 : add ch, al ; add al, 5 ; retf 4
0x00000000007d5b65 : add ch, al ; add dword ptr [rdx], ecx ; ret 3
0x00000000007d4cb4 : add ch, al ; add dword ptr [rsi], eax ; xchg byte ptr [rax + rax], al ; retf
0x00000000007f5bcc : add ch, al ; cmp al, 5 ; cmp al, 0x17 ; retf 0x283c
0x0000000000541ca7 : add ch, al ; ret
0x00000000007faedb : add ch, al ; ret 0x501
0x00000000007d7392 : add ch, al ; syscall
0x00000000007c9d32 : add ch, bh ; add dh, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000000007b3069 : add ch, bh ; call qword ptr [rdx]
0x00000000007b30b9 : add ch, bh ; call rbx
0x00000000007f57a7 : add ch, bh ; or cl, byte ptr [rcx] ; ret 0x1e
0x00000000007cc58a : add ch, bh ; syscall
0x0000000000735718 : add ch, bl ; add dword ptr [rax], eax ; xchg ah, bl ; iretd ; jmp qword ptr [rax]
0x00000000007fbd03 : add ch, bl ; add esp, dword ptr [rdx] ; ret
0x00000000007dc57d : add ch, bl ; clts ; div byte ptr [rax] ; add bh, ch ; syscall
0x000000000064d994 : add ch, bl ; dec dword ptr [rax - 0x77] ; ret
0x00000000006a5d37 : add ch, bl ; fcomp st(1) ; loopne 0x6a5d8e ; add esp, 0x38 ; ret
0x00000000006a5db7 : add ch, bl ; fcomp st(1) ; loopne 0x6a5e0e ; add esp, 0x38 ; ret
0x00000000005cc713 : add ch, bl ; fisttp dword ptr [rax - 0x77] ; ret
0x000000000077adb9 : add ch, bl ; jmp qword ptr [rax]
0x00000000007faee3 : add ch, bl ; ret 0x8001
0x0000000000440b57 : add ch, bl ; ret 0x8b48
0x00000000007dabd9 : add ch, bl ; syscall
0x00000000006802a2 : add ch, byte ptr [rax] ; ret
0x000000000076c1dd : add ch, byte ptr [rbx + 0xa] ; ret
0x00000000007d5b96 : add ch, byte ptr [rbx] ; ret 3
0x00000000007a6cc6 : add ch, byte ptr [rcx + 0x41180e0a] ; ret
0x0000000000561d81 : add ch, byte ptr [rcx] ; fimul dword ptr [rax + 0x63] ; retf 0x148
0x00000000006a8e53 : add ch, byte ptr [rcx] ; ret 0x48d
0x00000000006cf6f7 : add ch, byte ptr [rcx] ; ret 0x6348
0x00000000006a9020 : add ch, byte ptr [rcx] ; ret 0x8941
0x00000000005fc094 : add ch, byte ptr [rcx] ; retf 0x6348
0x000000000069632d : add ch, byte ptr [rcx] ; retf 0x7a8d
0x00000000007f14c4 : add ch, byte ptr [rsi] ; add byte ptr [rax], al ; retf
0x00000000007f06e5 : add ch, byte ptr [rsi] ; add byte ptr [rax], al ; stc ; add dl, byte ptr [rsi] ; jmp qword ptr [rax]
0x00000000007c5021 : add ch, byte ptr [rsi] ; ret 3
0x00000000007cca56 : add ch, ch ; add al, 0x69 ; ret 4
0x00000000007d0925 : add ch, ch ; and al, 5 ; ret 0x25
0x00000000007faeeb : add ch, ch ; ret
0x00000000007d3229 : add ch, cl ; syscall
0x00000000007b0569 : add ch, dh ; call qword ptr [rdx]
0x00000000007443c5 : add ch, dh ; call rax
0x00000000007b0529 : add ch, dh ; jmp rax
0x00000000007f4077 : add ch, dh ; retf
0x00000000007d3235 : add ch, dh ; syscall
0x00000000007ce0a1 : add ch, dl ; clts ; retf 0x18
0x00000000005eb81c : add ch, dl ; or byte ptr [rax], al ; leave ; ret
0x00000000007f3f35 : add ch, dl ; ret 0x2001
0x00000000007e111d : add ch, dl ; syscall
0x00000000007f571d : add cl, ah ; add dword ptr [rax], ebp ; retf 0x21
0x0000000000501205 : add cl, ah ; outsb dx, byte ptr [rsi] ; add al, ch ; ret 0x18de
0x00000000007c6511 : add cl, ah ; syscall
0x00000000007e84d1 : add cl, ah ; xor eax, dword ptr [rdi] ; retf
0x0000000000617b9c : add cl, al ; call 0xffffffffc42b0bc8
0x0000000000617bee : add cl, al ; call 0xffffffffc42b0c1a
0x00000000007e6402 : add cl, al ; clts ; jrcxz 0x7e641f ; add ah, bl ; syscall
0x00000000007cc4b2 : add cl, al ; or al, byte ptr [rsi] ; xchg eax, ebx ; sbb al, byte ptr [rax] ; retf 0x50a
0x00000000007d45ea : add cl, al ; syscall
0x00000000007f3b41 : add cl, al ; test al, 1 ; add eax, 0x195ac ; retf
0x00000000007dbd7a : add cl, bh ; add al, byte ptr [rsi] ; ret
0x00000000007f06e8 : add cl, bh ; add dl, byte ptr [rsi] ; jmp qword ptr [rax]
0x000000000074a4fd : add cl, bh ; call rax
0x00000000007d96d1 : add cl, bh ; syscall
0x00000000007c71d0 : add cl, bl ; add eax, dword ptr [rax] ; retf
0x00000000006a5e57 : add cl, bl ; loopne 0x6a5eaa ; add esp, 0x28 ; ret
0x00000000006a4857 : add cl, bl ; rcr al, 0xc9 ; fmulp st(1) ; ret
0x00000000006a9856 : add cl, bl ; ret 0xc9d8
0x0000000000681df7 : add cl, bl ; retf
0x00000000006a5b2f : add cl, bl ; retf -0x1521
0x000000000068459b : add cl, bl ; retf -0x1525
0x000000000068452f : add cl, bl ; retf 0x1a8
0x00000000006a9d80 : add cl, bl ; retf 0x1f0f
0x00000000006a5831 : add cl, bl ; retf 0xceb
0x00000000007f6761 : add cl, bl ; syscall
0x00000000006008e3 : add cl, bpl ; retf -7
0x0000000000684d78 : add cl, byte ptr [rax + 0x29] ; ret
0x00000000006a943a : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x00000000005f7f12 : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000007a6ace : add cl, byte ptr [rax + 0x41180e0a] ; ret
0x0000000000561dc2 : add cl, byte ptr [rax + 0x63] ; ret 0x148
0x00000000006652c3 : add cl, byte ptr [rax + 0x63] ; ret 0xba41
0x00000000006b4392 : add cl, byte ptr [rax + 0x63] ; retf
0x00000000006b4c65 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000006b60ea : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x00000000005cfc30 : add cl, byte ptr [rax + 1] ; ret 0x8948
0x00000000005dc883 : add cl, byte ptr [rax + 1] ; ret 0x8d48
0x00000000004c87a5 : add cl, byte ptr [rax + 1] ; retf -0x76b8
0x00000000005025db : add cl, byte ptr [rax - 0x77] ; fimul word ptr [rcx + rcx*4 - 0x11] ; call 0x6be8b9
0x00000000004f6ce6 : add cl, byte ptr [rax - 0x77] ; ret
0x00000000006b3b91 : add cl, byte ptr [rax - 0x77] ; ret 0x6349
0x00000000005ba7e1 : add cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000053a387 : add cl, byte ptr [rax - 0x77] ; vminps ymm9, ymm1, ymmword ptr [rax - 0x77] ; ret
0x00000000005222b3 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x11], 0xc3 ; xor eax, eax ; ret
0x00000000005487be : add cl, byte ptr [rax - 0x7d] ; ret
0x000000000069d674 : add cl, byte ptr [rax - 0x7d] ; ret 0x3304
0x00000000006610c5 : add cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000000006627be : add cl, byte ptr [rax - 0x7d] ; ret 0x4912
0x0000000000684dc2 : add cl, byte ptr [rax - 0x7d] ; ret 0x6901
0x0000000000600848 : add cl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000748f79 : add cl, byte ptr [rax] ; add byte ptr [rax], ah ; xor bh, dh ; call qword ptr [rax]
0x000000000057e4a4 : add cl, byte ptr [rax] ; ret
0x00000000006d126c : add cl, byte ptr [rbp - 0x76bb6dfc] ; retf -0x3fff
0x0000000000600b92 : add cl, byte ptr [rbx + 0x3944c84d] ; loopne 0x600bb2 ; sahf ; ret 0xc085
0x00000000007f053c : add cl, byte ptr [rbx] ; add byte ptr [rax], al ; ret
0x00000000007d7154 : add cl, byte ptr [rbx] ; retf
0x00000000007c0186 : add cl, byte ptr [rcx + rcx + 0xe088200] ; add byte ptr [rax], al ; ret 0x508
0x0000000000636e2b : add cl, byte ptr [rcx - 0x77] ; vunpcklps ymm9, ymm1, ymmword ptr [rax - 0x77] ; ret
0x00000000007e4b7a : add cl, byte ptr [rcx] ; add byte ptr [rax], al ; loope 0x7e4b88 ; ret 0xa301
0x00000000007e4b5b : add cl, byte ptr [rcx] ; add byte ptr [rax], al ; retf
0x0000000000767a94 : add cl, byte ptr [rdi + rax] ; or byte ptr [rax + rax], bl ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x00000000005ce316 : add cl, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000007dfa29 : add cl, byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x00000000005be299 : add cl, byte ptr [rdi] ; lahf ; ret 0x8348
0x0000000000507c49 : add cl, byte ptr [rdi] ; lahf ; ret 0x854d
0x000000000067b4a3 : add cl, byte ptr [rdi] ; lahf ; ret 0x8843
0x0000000000637df4 : add cl, byte ptr [rdi] ; mov word ptr [rax + 0x39000004], fs ; ret
0x000000000067b44e : add cl, byte ptr [rdi] ; ret
0x0000000000661f1e : add cl, byte ptr [rdi] ; ret 0x7c83
0x000000000067b8f2 : add cl, byte ptr [rdi] ; ret 0x9848
0x0000000000661a8a : add cl, byte ptr [rdi] ; ret 0xfd83
0x00000000006ae153 : add cl, byte ptr [rdi] ; ror qword ptr [r8 + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x480f
0x0000000000653b4c : add cl, byte ptr [rdi] ; test bh, ch ; adc eax, 0x3d800000 ; ret 0x3b4f
0x0000000000651c61 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8348
0x000000000069b9c5 : add cl, byte ptr [rdi] ; xchg eax, edi ; ret 0xfb83
0x0000000000694784 : add cl, byte ptr [rdi] ; xchg eax, esi ; ret 0xfb83
0x00000000006cc9f8 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8148
0x00000000005a10e7 : add cl, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e04a1 : add cl, byte ptr [rsi] ; add cl, cl ; ret
0x000000000074ec11 : add cl, ch ; call rsp
0x00000000007cc584 : add cl, ch ; clts ; lodsb al, byte ptr [rsi] ; adc byte ptr [rax], al ; std ; syscall
0x0000000000653a01 : add cl, ch ; cmc ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000057b43e : add cl, ch ; cmp bl, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x0000000000533c3e : add cl, ch ; cmp dh, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x0000000000653673 : add cl, ch ; cmp edx, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x0000000000643eb7 : add cl, ch ; cmp esp, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x00000000006cb1f0 : add cl, ch ; fimul dword ptr [rax - 4] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000581d63 : add cl, ch ; fst qword ptr [eax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000653902 : add cl, ch ; hlt ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000653aab : add cl, ch ; idiv r15b ; dec dword ptr [rax - 0x77] ; ret
0x00000000006539ac : add cl, ch ; idiv rdi ; dec dword ptr [rax - 0x77] ; ret
0x000000000065388b : add cl, ch ; imul edi, eax, -1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000577a3f : add cl, ch ; imul edi, edi, 0x8948ffff ; ret
0x0000000000677314 : add cl, ch ; imul edi, edi, 0xc031ffff ; ret
0x00000000004f8906 : add cl, ch ; imul edi, esi, -1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004fe4f8 : add cl, ch ; imul edi, esi, 0x8948ffff ; ret
0x000000000065398a : add cl, ch ; insb byte ptr [rdi], dx ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000653a89 : add cl, ch ; insd dword ptr [rdi], dx ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000064e45d : add cl, ch ; int1 ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000653957 : add cl, ch ; lahf ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000005bd172 : add cl, ch ; lahf ; out -1, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000050457b : add cl, ch ; mov r13b, 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000069b3cb : add cl, ch ; outsb dx, byte ptr [rsi] ; retf
0x00000000006533e7 : add cl, ch ; paddw mm7, mm7 ; dec dword ptr [rax - 0x77] ; ret
0x000000000065399b : add cl, ch ; pop rbx ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000653a9a : add cl, ch ; pop rsp ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000006448cd : add cl, ch ; pop rsp ; out -1, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000044c829 : add cl, ch ; ret
0x00000000004e94c3 : add cl, ch ; ret 0x20
0x0000000000722f61 : add cl, ch ; ret 0x7f83
0x0000000000653a34 : add cl, ch ; ret 0xfff6
0x0000000000580b7c : add cl, ch ; ret 0xfff7
0x0000000000553bdd : add cl, ch ; ret 0xfffa
0x0000000000666f94 : add cl, ch ; ret 0xfffb
0x0000000000603e06 : add cl, ch ; ret 0xfffc
0x00000000004e37ec : add cl, ch ; ret 0xfffd
0x00000000004cb4a0 : add cl, ch ; ret 0xfffe
0x0000000000412450 : add cl, ch ; ret 1
0x00000000004c535a : add cl, ch ; retf
0x00000000006455e6 : add cl, ch ; retf -0x5b
0x000000000057e182 : add cl, ch ; retf -2
0x000000000044d51a : add cl, ch ; retf -3
0x00000000005b9d1f : add cl, ch ; retf -4
0x00000000006008e4 : add cl, ch ; retf -7
0x0000000000653935 : add cl, ch ; sal edi, -1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000517681 : add cl, ch ; sar ah, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x0000000000653836 : add cl, ch ; sar al, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x000000000056c9a7 : add cl, ch ; sar dh, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x000000000050ec6a : add cl, ch ; sar esi, -1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005047af : add cl, ch ; sbb esi, dword ptr [rbx - 0x76b7ffe8] ; ret
0x000000000065e086 : add cl, ch ; sbb r8b, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005bc216 : add cl, ch ; sti ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000553daa : add cl, ch ; stosb byte ptr [rdi], al ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000004fa1da : add cl, ch ; sub eax, 0xe9ffffff ; ret
0x0000000000610b43 : add cl, ch ; sub eax, 0xebffffff ; ret 0x8948
0x00000000005bcbfb : add cl, ch ; sub esi, -1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000007e6658 : add cl, ch ; syscall
0x000000000059bc26 : add cl, ch ; test byte ptr [rdx + rdx], ch ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005bc276 : add cl, ch ; wait ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000060dcc3 : add cl, ch ; xor edi, 0x8948ffff ; ret
0x000000000063665f : add cl, ch ; xor esi, 0xffffffff ; dec dword ptr [rax - 0x77] ; ret
0x00000000007356a4 : add cl, cl ; iretd ; call rax
0x000000000040a462 : add cl, cl ; ret
0x00000000007cd45f : add cl, cl ; syscall
0x00000000007e872d : add cl, dh ; adc byte ptr [rdx], al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; adc eax, dword ptr [rax] ; call qword ptr [rax]
0x00000000007bf45d : add cl, dh ; add al, 5 ; ret 7
0x00000000007f7f52 : add cl, dh ; add ebp, dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x000000000073488d : add cl, dh ; call qword ptr [rax]
0x00000000007348a5 : add cl, dh ; push qword ptr [rax - 0x69] ; add dword ptr [rax], eax ; retf -0x31fe
0x00000000007f4047 : add cl, dh ; retf 0x501
0x00000000007e3969 : add cl, dl ; xlatb ; sub al, byte ptr [rax] ; retf
0x00000000005b9d1e : add cl, r13b ; retf -4
0x00000000005bcbfa : add cl, r13b ; sub esi, -1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000735908 : add dh, ah ; add dword ptr [rax], eax ; sbb al, 0xfc ; iretd ; jmp qword ptr [rax]
0x000000000076483f : add dh, ah ; cmp al, 0xd5 ; call rsp
0x000000000075bd3f : add dh, ah ; cmp cl, dl ; call qword ptr [rcx]
0x000000000075ecb7 : add dh, ah ; je 0x75ec91 ; jmp qword ptr [rbx]
0x0000000000750d9f : add dh, ah ; ret
0x0000000000750f8f : add dh, ah ; retf -0x33
0x00000000007e5ef7 : add dh, ah ; syscall
0x00000000007961e7 : add dh, ah ; xor ah, ch ; jmp qword ptr [rcx]
0x00000000007d9752 : add dh, al ; adc al, 5 ; retf
0x00000000007f26bf : add dh, al ; add al, 5 ; retf
0x0000000000658a99 : add dh, al ; add eax, 0x3b024f ; add al, ch ; retf 0x4f2
0x00000000006cdf1f : add dh, al ; add eax, dword ptr [rax] ; jmp 0x6cdeed
0x00000000006bdacf : add dh, al ; add r8d, dword ptr [r9] ; ret
0x00000000004fe526 : add dh, al ; and al, 0x3f ; add ecx, ebp ; retf
0x00000000007abe8f : add dh, al ; in eax, dx ; call qword ptr [rbx]
0x0000000000754a87 : add dh, al ; iretd ; jmp rcx
0x00000000007343a3 : add dh, al ; jg 0x734378 ; call rax
0x000000000069254e : add dh, al ; jnp 0x692559 ; pop rbx ; ret
0x0000000000760ebf : add dh, al ; loop 0x760e9a ; call rsp
0x00000000007381c3 : add dh, al ; mov ah, 0xd4 ; jmp rax
0x0000000000738203 : add dh, al ; mov dh, 0xd4 ; jmp rax
0x000000000073a4e3 : add dh, al ; mov dh, 0xdb ; call rax
0x0000000000674666 : add dh, al ; or byte ptr [r9], r8b ; mov byte ptr [rdi + 9], 0 ; ret
0x00000000006a6ca1 : add dh, al ; ret
0x000000000064a8e2 : add dh, al ; ret 0xf00
0x00000000004a5f06 : add dh, al ; retf
0x00000000007cd7e7 : add dh, al ; sldt word ptr [rax] ; add bh, ch ; syscall
0x00000000007f6f6c : add dh, al ; sldt word ptr [rax] ; add cl, cl ; syscall
0x000000000074b3d4 : add dh, al ; stc ; call qword ptr [rax]
0x000000000056f2ea : add dh, al ; sub byte ptr [r9], al ; pop rbx ; ret
0x00000000007ce2ca : add dh, al ; syscall
0x00000000006115af : add dh, al ; xchg eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0x00000000006a81df : add dh, al ; xor byte ptr [r8], r8b ; ret
0x00000000007dd562 : add dh, bh ; add al, 5 ; ret 0xb
0x0000000000739363 : add dh, bh ; and eax, ebx ; call rax
0x00000000007b7560 : add dh, bh ; ret
0x00000000007a824f : add dh, bh ; sub ah, ch ; jmp qword ptr [rcx]
0x00000000007cd5c4 : add dh, bh ; syscall
0x000000000073b705 : add dh, bl ; call rax
0x00000000007abb47 : add dh, bl ; cmp ch, ch ; jmp qword ptr [rbx]
0x0000000000744dab : add dh, bl ; fsub st(6), st(0) ; jmp qword ptr [rax]
0x0000000000757e4f : add dh, bl ; loop 0x757e26 ; jmp qword ptr [rax]
0x00000000007e7af9 : add dh, bl ; or dword ptr [rax], ebx ; ret
0x00000000006844df : add dh, bl ; ret
0x0000000000681eec : add dh, bl ; retf -0x1e22
0x00000000007cd464 : add dh, bl ; syscall
0x00000000004d7d20 : add dh, byte ptr [rax + rcx + 0x48] ; mov edi, eax ; call 0x6d4748
0x00000000005162f4 : add dh, byte ptr [rax - 0x76b7ffea] ; ret
0x00000000006625f1 : add dh, byte ptr [rbp + 0xc] ; mov qword ptr [rax + 0x30], rsi ; xor eax, eax ; ret
0x00000000005b6826 : add dh, byte ptr [rbp + 7] ; mov dword ptr [rdi + 0x158], esi ; ret
0x00000000005b6856 : add dh, byte ptr [rbp + 7] ; mov dword ptr [rdi + 0x188], esi ; ret
0x00000000005b6b56 : add dh, byte ptr [rbp + 7] ; mov dword ptr [rdi + 0x398], esi ; ret
0x00000000005b6476 : add dh, byte ptr [rbp + 7] ; mov dword ptr [rdi + 0x428], esi ; ret
0x00000000005b5366 : add dh, byte ptr [rbp + 7] ; mov dword ptr [rdi + 0x458], esi ; ret
0x00000000005b53f6 : add dh, byte ptr [rbp + 7] ; mov dword ptr [rdi + 0x488], esi ; ret
0x00000000005b5996 : add dh, byte ptr [rbp + 7] ; mov dword ptr [rdi + 0x5d8], esi ; ret
0x00000000005b7676 : add dh, byte ptr [rbp + 7] ; mov dword ptr [rip + 0x44e4a9], edi ; ret
0x00000000005b68e6 : add dh, byte ptr [rbp + 7] ; mov dword ptr [rip + 0x44f029], edi ; ret
0x00000000005b6886 : add dh, byte ptr [rbp + 7] ; mov dword ptr [rip + 0x44f0b9], edi ; ret
0x00000000005b01f6 : add dh, byte ptr [rbp + 7] ; mov eax, dword ptr [rdi + 0x158] ; ret
0x00000000005b03d6 : add dh, byte ptr [rbp + 7] ; mov eax, dword ptr [rdi + 0x398] ; ret
0x00000000005b0136 : add dh, byte ptr [rbp + 7] ; mov eax, dword ptr [rdi + 0x428] ; ret
0x00000000005af766 : add dh, byte ptr [rbp + 7] ; mov eax, dword ptr [rdi + 0x458] ; ret
0x00000000005afa46 : add dh, byte ptr [rbp + 7] ; mov eax, dword ptr [rdi + 0x5d8] ; ret
0x0000000000666172 : add dh, byte ptr [rbp - 0x1d] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000069c912 : add dh, byte ptr [rbp - 0x45] ; ret
0x00000000006bfc19 : add dh, byte ptr [rbx] ; ret
0x00000000007d4ef4 : add dh, byte ptr [rcx] ; add byte ptr [rax], al ; ret 0x2a02
0x00000000005b7cc1 : add dh, byte ptr [rcx] ; rol byte ptr [rcx + 0x39], cl ; retf -0x71f1
0x00000000006d11b0 : add dh, byte ptr [rdi + rsi*2 - 0x48] ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000722bb0 : add dh, byte ptr [rdx - 0x56e41a0d] ; ret 0x30a4
0x00000000006bdac5 : add dh, byte ptr [rsi + 8] ; ret
0x00000000007c9d34 : add dh, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000000006d6933 : add dh, byte ptr [rsi] ; retf 0x5b9d
0x00000000007ed4e2 : add dh, ch ; adc dword ptr [rcx], edx ; nop ; and eax, dword ptr [rax] ; ret
0x00000000007e1228 : add dh, ch ; add al, 0x16 ; ret 4
0x00000000007a5f8f : add dh, ch ; and eax, esi ; call qword ptr [rdx]
0x0000000000744d9b : add dh, ch ; fucomi st(6) ; call rax
0x000000000079c707 : add dh, ch ; mov dl, 0xe7 ; call qword ptr [rdi]
0x000000000071433f : add dh, ch ; ret 0x5d
0x000000000073912b : add dh, ch ; retf -0x29
0x000000000075ba8f : add dh, ch ; sar edi, 1 ; ret 1
0x00000000007d739e : add dh, ch ; syscall
0x0000000000795abf : add dh, cl ; and ah, ch ; call rsp
0x0000000000757e8f : add dh, cl ; loop 0x757e66 ; call qword ptr [rcx]
0x0000000000736563 : add dh, cl ; ret
0x00000000007cb9f8 : add dh, cl ; syscall
0x000000000079bcef : add dh, cl ; test bh, ah ; call rsp
0x0000000000742860 : add dh, dh ; add eax, 0xe9f8e000 ; jmp qword ptr [rax]
0x00000000007485fd : add dh, dh ; call rax
0x0000000000734733 : add dh, dh ; fmulp st(5) ; call rax
0x000000000079827f : add dh, dh ; fsubrp st(5) ; jmp qword ptr [rsi]
0x0000000000512e5b : add dh, dh ; ret
0x00000000005189d8 : add dh, dh ; ret 0x4801
0x0000000000661499 : add dh, dh ; ret 0xf04
0x00000000007e61ae : add dh, dh ; syscall
0x0000000000738c13 : add dh, dl ; fst st(6) ; jmp rax
0x00000000007382f3 : add dh, dl ; ret
0x0000000000737a13 : add dh, dl ; ret 0xffd3
0x0000000000792a6f : add dh, dl ; ret 0xffe3
0x0000000000726738 : add dh, dl ; retf
0x00000000007dc577 : add dh, dl ; syscall
0x0000000000510deb : add dil, byte ptr [rcx] ; retf
0x00000000005f86ed : add dil, byte ptr [rcx] ; retf -0x73f1
0x0000000000607eeb : add dil, byte ptr [rcx] ; retf -0x7884
0x00000000005f96cb : add dil, dil ; loopne 0x5f9693 ; retf
0x00000000005d3949 : add dil, dil ; ror cl, 1 ; ret
0x00000000006a191e : add dil, r15b ; cmp rax, rsi ; jne 0x6a1918 ; ret
0x00000000006a1a1e : add dil, r15b ; cmp rax, rsi ; jne 0x6a1a18 ; ret
0x00000000006a1a5e : add dil, r15b ; cmp rax, rsi ; jne 0x6a1a58 ; ret
0x000000000073e1dc : add dl, 0xe1 ; push qword ptr [rax - 0x7c] ; add al, 0 ; nop ; ret 0xffe1
0x00000000007d7cc7 : add dl, ah ; adc al, 2 ; retf 0x33
0x0000000000738ef3 : add dl, ah ; call rsi
0x000000000078f551 : add dl, ah ; jmp qword ptr [rbx]
0x000000000078f681 : add dl, ah ; jmp qword ptr [rdx]
0x000000000074484b : add dl, ah ; jno 0x744841 ; call rax
0x00000000007f43d0 : add dl, ah ; loop 0x7f43de ; add eax, 0x1e2c2 ; jmp rdx
0x000000000075a95f : add dl, ah ; mov bh, 0xd0 ; jmp qword ptr [rbx]
0x000000000073518b : add dl, ah ; or cl, bh ; inc dword ptr [rax] ; ret 1
0x00000000007374cb : add dl, ah ; or edx, ebx ; call rax
0x0000000000737743 : add dl, ah ; push 0xd3 ; jmp rax
0x00000000007ce2d0 : add dl, ah ; syscall
0x0000000000735190 : add dl, al ; add dword ptr [rax], eax ; or r9d, edi ; jmp qword ptr [rax]
0x0000000000741f98 : add dl, al ; add eax, 0xe7cc4000 ; jmp qword ptr [rax]
0x000000000073597d : add dl, al ; call qword ptr [rax]
0x000000000079815f : add dl, al ; fsub st(5) ; call rbx
0x0000000000753c67 : add dl, al ; fxch st(0), st(6) ; call rsp
0x00000000007abea7 : add dl, al ; in eax, dx ; jmp qword ptr [rcx]
0x00000000007448cb : add dl, al ; js 0x7448c1 ; call qword ptr [rax]
0x0000000000738803 : add dl, al ; salc ; jmp qword ptr [rax]
0x00000000007c6c05 : add dl, al ; sub al, 5 ; lahf ; cmp eax, dword ptr [rax] ; ret
0x00000000007dcb9c : add dl, al ; syscall
0x000000000073364d : add dl, bh ; call rax
0x0000000000767817 : add dl, bh ; call rsi
0x0000000000757a97 : add dl, bh ; fxch st(0), st(7) ; jmp qword ptr [rax]
0x0000000000733649 : add dl, bh ; push qword ptr [rax] ; add dl, bh ; call rax
0x000000000073663b : add dl, bh ; retf
0x00000000007d9202 : add dl, bh ; syscall
0x000000000074838c : add dl, bl ; cmc ; call rax
0x0000000000757b37 : add dl, bl ; fxch st(0), st(7) ; call qword ptr [rbx]
0x00000000007cb454 : add dl, bl ; js 0x7cb461 ; add byte ptr [rax], al ; xchg eax, edx ; jns 0x7cb46b ; ret 0x79
0x0000000000724e97 : add dl, bl ; retf
0x0000000000744b43 : add dl, bl ; xchg eax, ebp ; out dx, al ; jmp rax
0x00000000007a6c3a : add dl, byte ptr [rax + 0x41380e0a] ; ret
0x00000000006b6c73 : add dl, byte ptr [rax] ; mov byte ptr [rdx + r8 + 0x11], cl ; ret
0x00000000006b6e3b : add dl, byte ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004950ca : add dl, byte ptr [rbp - 0x76b7ffde] ; ret 0x8948
0x00000000004b26ac : add dl, byte ptr [rbp] ; call rax
0x00000000007aa1b8 : add dl, byte ptr [rbx + 0xa] ; ret
0x000000000058e379 : add dl, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f2607 : add dl, byte ptr [rcx] ; call rax
0x00000000006b6c78 : add dl, byte ptr [rcx] ; ret
0x00000000007a864d : add dl, byte ptr [rdi + 0xa] ; ret
0x0000000000564442 : add dl, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b4452 : add dl, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007f8870 : add dl, byte ptr [rdx] ; ret
0x000000000076cc66 : add dl, byte ptr [rsi + 0xa] ; ret
0x00000000006af13a : add dl, byte ptr [rsi + 2] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007f06ea : add dl, byte ptr [rsi] ; jmp qword ptr [rax]
0x00000000007d0ec8 : add dl, byte ptr [rsi] ; retf
0x00000000007e8718 : add dl, ch ; adc al, 0 ; xchg eax, ecx ; syscall
0x000000000074bfc7 : add dl, ch ; adc cl, ah ; call rsp
0x00000000007e5d7c : add dl, ch ; add al, 0x22 ; ret 5
0x0000000000757ad7 : add dl, ch ; fxch st(0), st(7) ; call qword ptr [rcx]
0x0000000000737bdb : add dl, ch ; loop 0x737bb6 ; call rax
0x000000000076e92f : add dl, ch ; push rdi ; leave ; call qword ptr [rdx]
0x0000000000737303 : add dl, ch ; rcl edx, 1 ; call qword ptr [rax]
0x0000000000766227 : add dl, ch ; retf -0x2b
0x00000000007ddbd4 : add dl, ch ; syscall
0x0000000000735263 : add dl, ch ; xor al, 0xcf ; call qword ptr [rax]
0x0000000000735320 : add dl, cl ; add dword ptr [rax], eax ; mov dh, 0x6a ; iretd ; jmp qword ptr [rax]
0x00000000007677f7 : add dl, cl ; call rsi
0x00000000007dcba2 : add dl, cl ; clts ; mov cl, 0x15 ; add ah, dh ; syscall
0x00000000007cc578 : add dl, cl ; clts ; out 0x10, eax ; add cl, ah ; syscall
0x00000000007482b4 : add dl, cl ; cmc ; inc dword ptr [rax + 0x700007c8] ; retf -0xb
0x0000000000737beb : add dl, cl ; jrcxz 0x737bc6 ; call qword ptr [rax]
0x00000000007e8ecd : add dl, cl ; or al, 0 ; ret
0x00000000007e51dd : add dl, cl ; or al, 6 ; ret
0x000000000074743b : add dl, cl ; ret 0xfff4
0x0000000000724ec7 : add dl, cl ; retf
0x00000000007dc56c : add dl, cl ; syscall
0x000000000078cd3f : add dl, cl ; xchg edi, eax ; call qword ptr [rdx]
0x00000000007daa8f : add dl, dh ; adc bh, byte ptr [rdi] ; add byte ptr [rax], al ; retf
0x00000000007f5dec : add dl, dh ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000007390f8 : add dl, dh ; add al, byte ptr [rax] ; xor al, 0xae ; xlatb ; jmp qword ptr [rax]
0x0000000000735b88 : add dl, dh ; add dword ptr [rax], eax ; jne 0x735b66 ; jmp qword ptr [rax]
0x0000000000766b29 : add dl, dh ; call rsi
0x0000000000744363 : add dl, dh ; fsubp st(5) ; jmp rax
0x000000000079767f : add dl, dh ; in ax, -1 ; ret 1
0x0000000000737363 : add dl, dh ; loope 0x73733d ; jmp rax
0x00000000006822ef : add dl, dh ; movups xmm0, xmmword ptr [rip + 0x95728] ; ret
0x0000000000683fd7 : add dl, dh ; movups xmm0, xmmword ptr [rip + 0xa4770] ; ret
0x00000000006a47df : add dl, dh ; mulps xmm0, xmm0 ; mulsd xmm0, xmm0 ; ret
0x0000000000682d60 : add dl, dh ; mulps xmm0, xmm2 ; add rsp, 0x38 ; ret
0x000000000073721b : add dl, dh ; ret 0xffd2
0x000000000057f6a6 : add dl, dl ; call 0xffffffffc3ccf85b
0x000000000075bcff : add dl, dl ; cmp cl, dl ; call qword ptr [rbx]
0x000000000075bcbf : add dl, dl ; cmp cl, dl ; call qword ptr [rdx]
0x0000000000735b7b : add dl, dl ; je 0x735b53 ; jmp rax
0x00000000007369dd : add dl, dl ; jmp qword ptr [rax]
0x00000000007369cd : add dl, dl ; jmp rax
0x00000000007448fb : add dl, dl ; jns 0x7448f1 ; call rax
0x000000000073680b : add dl, dl ; loope 0x7367e4 ; call qword ptr [rax]
0x000000000073a4ab : add dl, dl ; mov cl, 0xdb ; call rax
0x00000000007ea117 : add dl, dl ; or byte ptr [rdx], al ; ret 0x16
0x0000000000737533 : add dl, dl ; sbb ebx, edx ; jmp rax
0x000000000075b717 : add dl, dl ; sbb ecx, edx ; jmp rbx
0x00000000007d7398 : add dl, dl ; syscall
0x000000000065db79 : add dword ptr [eax], eax ; add byte ptr [rcx - 0x7d], al ; ret 0x4101
0x00000000006c5831 : add dword ptr [r13 - 0x77], eax ; retf
0x0000000000525e7a : add dword ptr [r13], 1 ; call qword ptr [rip + 0x4dca5b]
0x0000000000773fb6 : add dword ptr [r15], 3 ; ret
0x000000000068d670 : add dword ptr [r8 + 0x63], r9d ; ror dword ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000005ae932 : add dword ptr [r8 - 0x73], r9d ; push rbx ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000067b4df : add dword ptr [r8 - 0x77], r9d ; ret 0x840f
0x00000000006d2d28 : add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000057f797 : add dword ptr [r8], eax ; add byte ptr [rcx + 0x63], cl ; retf
0x000000000075fe15 : add dword ptr [r8], r8d ; cmp byte ptr [rcx - 0x2d], dh ; jmp qword ptr [rcx]
0x000000000075fe35 : add dword ptr [r8], r8d ; cmp dh, byte ptr [rcx - 0x2d] ; jmp qword ptr [rsi]
0x00000000006918c6 : add dword ptr [r8], r8d ; mov eax, dword ptr [rbx + 0x58] ; pop rbx ; ret
0x000000000075fee5 : add dword ptr [r8], r8d ; movsb byte ptr [rdi], byte ptr [rsi] ; je 0x75fec4 ; jmp qword ptr [rbx]
0x0000000000688356 : add dword ptr [r9 + 0x29], eax ; retf 0x3145
0x00000000004f5c02 : add dword ptr [r9], eax ; ret
0x0000000000532965 : add dword ptr [r9], edi ; ret
0x0000000000601af6 : add dword ptr [r9], r15d ; ret
0x00000000004e7743 : add dword ptr [r9], r15d ; ret 0x850f
0x00000000006b0751 : add dword ptr [r9], r8d ; retf
0x000000000053b1e5 : add dword ptr [rax + 0x10], 1 ; ret
0x00000000007e5be1 : add dword ptr [rax + 0x16], ebx ; add byte ptr [rax], al ; jno 0x7e5c1f ; ret
0x0000000000632eef : add dword ptr [rax + 0x16], edi ; mov dword ptr [rdx + 4], eax ; pop rbx ; ret
0x00000000005cebc0 : add dword ptr [rax + 0x18c48348], edx ; pop rbx ; pop rbp ; ret
0x00000000005fbcc3 : add dword ptr [rax + 0x19], edi ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004c9729 : add dword ptr [rax + 0x1bb], edx ; add al, ch ; retf
0x00000000005011ea : add dword ptr [rax + 0x21], ecx ; clc ; ret
0x0000000000660d1a : add dword ptr [rax + 0x21], ecx ; ret 0x8d48
0x0000000000411084 : add dword ptr [rax + 0x28c48348], edx ; pop rbx ; pop rbp ; ret
0x00000000006b3a7d : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x29] ; retf
0x000000000056208d : add dword ptr [rax + 0x29], ecx ; ret 0x148
0x00000000005bfe71 : add dword ptr [rax + 0x29], ecx ; ret 0x28e9
0x00000000006867e0 : add dword ptr [rax + 0x29], ecx ; ret 0x294c
0x000000000064bed8 : add dword ptr [rax + 0x29], ecx ; ret 0x2b48
0x00000000006b6d8f : add dword ptr [rax + 0x29], ecx ; ret 0x37e9
0x0000000000601b0e : add dword ptr [rax + 0x29], ecx ; ret 0x3941
0x0000000000579a0d : add dword ptr [rax + 0x29], ecx ; ret 0x39e9
0x0000000000694b57 : add dword ptr [rax + 0x29], ecx ; ret 0x3be9
0x0000000000566531 : add dword ptr [rax + 0x29], ecx ; ret 0x3ee9
0x00000000006c828b : add dword ptr [rax + 0x29], ecx ; ret 0x3fe9
0x00000000005799c8 : add dword ptr [rax + 0x29], ecx ; ret 0x43e9
0x00000000006b080d : add dword ptr [rax + 0x29], ecx ; ret 0x4be9
0x00000000004f4812 : add dword ptr [rax + 0x29], ecx ; ret 0x4fe9
0x00000000005ca788 : add dword ptr [rax + 0x29], ecx ; ret 0x52e9
0x0000000000686dc6 : add dword ptr [rax + 0x29], ecx ; ret 0x56e9
0x00000000005c8378 : add dword ptr [rax + 0x29], ecx ; ret 0x5be9
0x00000000004ffe05 : add dword ptr [rax + 0x29], ecx ; ret 0x62e8
0x0000000000565f74 : add dword ptr [rax + 0x29], ecx ; ret 0x6348
0x0000000000579720 : add dword ptr [rax + 0x29], ecx ; ret 0x6349
0x00000000005c7bd8 : add dword ptr [rax + 0x29], ecx ; ret 0x634d
0x0000000000686696 : add dword ptr [rax + 0x29], ecx ; ret 0x6ee9
0x00000000005c9019 : add dword ptr [rax + 0x29], ecx ; ret 0x7be9
0x00000000004f601a : add dword ptr [rax + 0x29], ecx ; ret 0x7ee9
0x00000000005f83b9 : add dword ptr [rax + 0x29], ecx ; ret 0x80eb
0x00000000005a269a : add dword ptr [rax + 0x29], ecx ; ret 0x8148
0x00000000005fa54c : add dword ptr [rax + 0x29], ecx ; ret 0x84eb
0x0000000000560340 : add dword ptr [rax + 0x29], ecx ; ret 0x8545
0x0000000000563433 : add dword ptr [rax + 0x29], ecx ; ret 0x8949
0x000000000068e419 : add dword ptr [rax + 0x29], ecx ; ret 0x894c
0x000000000054237d : add dword ptr [rax + 0x29], ecx ; ret 0x8ae9
0x000000000064c783 : add dword ptr [rax + 0x29], ecx ; ret 0x8b45
0x000000000050874a : add dword ptr [rax + 0x29], ecx ; ret 0x8b49
0x00000000005c51e6 : add dword ptr [rax + 0x29], ecx ; ret 0x8ce9
0x00000000005c8995 : add dword ptr [rax + 0x29], ecx ; ret 0x8d42
0x000000000052b857 : add dword ptr [rax + 0x29], ecx ; ret 0x8d48
0x00000000004ffda6 : add dword ptr [rax + 0x29], ecx ; ret 0x8d49
0x000000000064d84e : add dword ptr [rax + 0x29], ecx ; ret 0x9ae9
0x0000000000579a80 : add dword ptr [rax + 0x29], ecx ; ret 0x9be9
0x0000000000687016 : add dword ptr [rax + 0x29], ecx ; ret 0x9ceb
0x000000000068e433 : add dword ptr [rax + 0x29], ecx ; ret 0xa0eb
0x00000000006c822c : add dword ptr [rax + 0x29], ecx ; ret 0xa1eb
0x0000000000689106 : add dword ptr [rax + 0x29], ecx ; ret 0xa2eb
0x000000000068e823 : add dword ptr [rax + 0x29], ecx ; ret 0xaaeb
0x00000000005f8439 : add dword ptr [rax + 0x29], ecx ; ret 0xade9
0x00000000005c82fc : add dword ptr [rax + 0x29], ecx ; ret 0xb4e9
0x00000000006cc046 : add dword ptr [rax + 0x29], ecx ; ret 0xb60f
0x0000000000692ef5 : add dword ptr [rax + 0x29], ecx ; ret 0xbee9
0x000000000053ec9e : add dword ptr [rax + 0x29], ecx ; ret 0xc031
0x00000000004f5b06 : add dword ptr [rax + 0x29], ecx ; ret 0xc085
0x000000000054ea90 : add dword ptr [rax + 0x29], ecx ; ret 0xc148
0x000000000068b4de : add dword ptr [rax + 0x29], ecx ; ret 0xc2eb
0x000000000069efdb : add dword ptr [rax + 0x29], ecx ; ret 0xc5e9
0x00000000005c51a7 : add dword ptr [rax + 0x29], ecx ; ret 0xcbe9
0x00000000005c82ed : add dword ptr [rax + 0x29], ecx ; ret 0xce9
0x00000000005ca75d : add dword ptr [rax + 0x29], ecx ; ret 0xd2e9
0x00000000006b4ccf : add dword ptr [rax + 0x29], ecx ; ret 0xf48
0x000000000064d6d9 : add dword ptr [rax + 0x29], ecx ; ret 0xfe9
0x000000000050b079 : add dword ptr [rax + 0x29], ecx ; ret 0xffb8
0x0000000000599b28 : add dword ptr [rax + 0x29], ecx ; retf
0x000000000064c1b6 : add dword ptr [rax + 0x29], ecx ; retf -0x2d17
0x000000000053b1bb : add dword ptr [rax + 0x29], ecx ; retf -0x3815
0x0000000000610052 : add dword ptr [rax + 0x29], ecx ; retf -0x46b8
0x000000000051a269 : add dword ptr [rax + 0x29], ecx ; retf -0x47
0x000000000053d273 : add dword ptr [rax + 0x29], ecx ; retf -0x4915
0x00000000005b9946 : add dword ptr [rax + 0x29], ecx ; retf -0x5117
0x000000000068a50e : add dword ptr [rax + 0x29], ecx ; retf -0x5415
0x00000000006bf20c : add dword ptr [rax + 0x29], ecx ; retf -0x5b17
0x00000000006c275e : add dword ptr [rax + 0x29], ecx ; retf -0x6315
0x000000000068bd52 : add dword ptr [rax + 0x29], ecx ; retf -0x67b8
0x000000000053dd93 : add dword ptr [rax + 0x29], ecx ; retf -0x6a15
0x000000000053aeec : add dword ptr [rax + 0x29], ecx ; retf -0x72b3
0x000000000068c1ec : add dword ptr [rax + 0x29], ecx ; retf -0x72b5
0x000000000053c49b : add dword ptr [rax + 0x29], ecx ; retf -0x72b7
0x000000000053b33a : add dword ptr [rax + 0x29], ecx ; retf -0x72b8
0x000000000068bd72 : add dword ptr [rax + 0x29], ecx ; retf -0x7415
0x000000000055b593 : add dword ptr [rax + 0x29], ecx ; retf -0x74b8
0x00000000005173ce : add dword ptr [rax + 0x29], ecx ; retf -0x7abb
0x000000000053bec3 : add dword ptr [rax + 0x29], ecx ; retf -0x7d15
0x000000000068bcfa : add dword ptr [rax + 0x29], ecx ; retf -0x7d7
0x0000000000507f5d : add dword ptr [rax + 0x29], ecx ; retf -0x7eb8
0x00000000005bfe25 : add dword ptr [rax + 0x29], ecx ; retf 0x144
0x00000000004f4763 : add dword ptr [rax + 0x29], ecx ; retf 0x145
0x000000000053dfe5 : add dword ptr [rax + 0x29], ecx ; retf 0x148
0x000000000064f0e9 : add dword ptr [rax + 0x29], ecx ; retf 0x20e9
0x0000000000659f15 : add dword ptr [rax + 0x29], ecx ; retf 0x294c
0x000000000060ca1c : add dword ptr [rax + 0x29], ecx ; retf 0x2b48
0x00000000005092c9 : add dword ptr [rax + 0x29], ecx ; retf 0x3948
0x00000000006b878d : add dword ptr [rax + 0x29], ecx ; retf 0x3c80
0x000000000068c209 : add dword ptr [rax + 0x29], ecx ; retf 0x62e9
0x00000000006011c6 : add dword ptr [rax + 0x29], ecx ; retf 0x6ee9
0x00000000006b4c4e : add dword ptr [rax + 0x29], ecx ; retf 0xf48
0x00000000006004a3 : add dword ptr [rax + 0x29], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0x1ae9
0x0000000000600043 : add dword ptr [rax + 0x29], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0x6348
0x00000000007cbc95 : add dword ptr [rax + 0x3301], eax ; ret
0x0000000000445074 : add dword ptr [rax + 0x38c48348], edx ; pop rbx ; pop rbp ; ret
0x0000000000512200 : add dword ptr [rax + 0x39], ecx ; ret
0x0000000000509572 : add dword ptr [rax + 0x39], ecx ; ret 0x5874
0x00000000005bb241 : add dword ptr [rax + 0x39], ecx ; ret 0x6174
0x000000000064b845 : add dword ptr [rax + 0x39], ecx ; ret 0x7574
0x0000000000541c1c : add dword ptr [rax + 0x39], ecx ; ret 0x840f
0x000000000050eef5 : add dword ptr [rax + 0x39], ecx ; ret 0x850f
0x00000000004f5798 : add dword ptr [rax + 0x39], ecx ; ret 0x8e0f
0x0000000000537bca : add dword ptr [rax + 0x39], ecx ; ret 0xa7c
0x000000000052fa03 : add dword ptr [rax + 0x39], ecx ; ret 0xc748
0x000000000068cd37 : add dword ptr [rax + 0x39], ecx ; ret 0xf375
0x000000000054168b : add dword ptr [rax + 0x39], ecx ; ret 0xf40
0x000000000057b963 : add dword ptr [rax + 0x39], ecx ; ret 0xf41
0x000000000051ef5b : add dword ptr [rax + 0x39], ecx ; retf
0x0000000000541c94 : add dword ptr [rax + 0x39], ecx ; retf -0x7af1
0x000000000068baa5 : add dword ptr [rax + 0x39], ecx ; retf -0xa8b
0x0000000000667c8e : add dword ptr [rax + 0x39], ecx ; retf -0xb8b
0x0000000000686897 : add dword ptr [rax + 0x39], ecx ; retf -0xc8b
0x00000000006a96cb : add dword ptr [rax + 0x39], ecx ; retf 0x4c6
0x0000000000542052 : add dword ptr [rax + 0x39], ecx ; rol dword ptr [rcx + 0xf], -0x63 ; ret
0x00000000006bd4cb : add dword ptr [rax + 0x39], ecx ; rol edi, 4 ; ret 0
0x0000000000559ccb : add dword ptr [rax + 0x39], ecx ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000006a07e3 : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rbp - 0x11], 1 ; ret
0x000000000053ecb9 : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rbp - 0x17], 1 ; ret
0x00000000006bc52a : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rbp - 0x18], 1 ; ret
0x00000000006a096a : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rdx + 4], 1 ; mov rax, rdi ; ret
0x00000000006a1cc0 : add dword ptr [rax + 0x39], ecx ; xlatb ; jne 0x6a1c96 ; ret
0x00000000006a1d2d : add dword ptr [rax + 0x39], ecx ; xlatb ; jne 0x6a1cf6 ; ret
0x00000000006a1e10 : add dword ptr [rax + 0x39], ecx ; xlatb ; jne 0x6a1de6 ; ret
0x000000000065e751 : add dword ptr [rax + 0x48], edx ; xor eax, eax ; ret
0x00000000007d6fd9 : add dword ptr [rax + 0x58], ebp ; add byte ptr [rax], al ; ret
0x000000000068534f : add dword ptr [rax + 0x63], ecx ; call rbx
0x000000000068709f : add dword ptr [rax + 0x63], ecx ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000005705e6 : add dword ptr [rax + 0x63], ecx ; fisttp qword ptr [rax - 0x7d] ; ret
0x0000000000501615 : add dword ptr [rax + 0x63], ecx ; ret
0x00000000006d1963 : add dword ptr [rax + 0x63], ecx ; ret 0x2948
0x00000000006af892 : add dword ptr [rax + 0x63], ecx ; ret 0x44c6
0x00000000006867d6 : add dword ptr [rax + 0x63], ecx ; ret 0x6348
0x00000000006869ca : add dword ptr [rax + 0x63], ecx ; ret 0xd231
0x0000000000687e0a : add dword ptr [rax + 0x63], ecx ; retf
0x000000000069f2bd : add dword ptr [rax + 0x63], ecx ; retf -0x77c0
0x000000000058f2e7 : add dword ptr [rax + 0x63], ecx ; retf 0x1c89
0x00000000005c7a69 : add dword ptr [rax + 0x63], ecx ; retf 0x2948
0x000000000058f072 : add dword ptr [rax + 0x63], ecx ; retf 0x2c89
0x000000000058ef3c : add dword ptr [rax + 0x63], ecx ; retf 0x3489
0x000000000068d671 : add dword ptr [rax + 0x63], ecx ; ror dword ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000006bd0c3 : add dword ptr [rax + 0x63], ecx ; ror dword ptr [rbp + 0x63], 1 ; ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000007faee6 : add dword ptr [rax + 0x65d801], eax ; in eax, dx ; ret
0x00000000005fc970 : add dword ptr [rax + 0x69], ecx ; inc dword ptr [rax] ; retf 0x3b9a
0x0000000000677599 : add dword ptr [rax + 0x69], ecx ; ret 0xca00
0x0000000000513a80 : add dword ptr [rax + 0x69], ecx ; rol byte ptr [rax], cl ; retf 0x3b9a
0x0000000000688f38 : add dword ptr [rax + 0x7420073c], eax ; int1 ; ret
0x00000000006a08e0 : add dword ptr [rax + 0x7500073c], eax ; int1 ; ret
0x000000000067e888 : add dword ptr [rax + 0x7500073c], eax ; int1 ; xor eax, eax ; ret
0x00000000006784a8 : add dword ptr [rax + 0x7900073c], eax ; int1 ; xor eax, eax ; ret
0x0000000000689b17 : add dword ptr [rax + 0xa096e0], edi ; ret
0x0000000000670760 : add dword ptr [rax + 0xc78], 1 ; ret
0x000000000066b130 : add dword ptr [rax + 0xc90], 1 ; ret
0x00000000007ea527 : add dword ptr [rax + 0xd], eax ; add byte ptr cs:[rax], al ; outsb dx, byte ptr [rsi] ; ret 0x102
0x00000000006b4c02 : add dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8d48
0x00000000006a304b : add dword ptr [rax + 1], 0 ; add cl, ch ; retf
0x0000000000551734 : add dword ptr [rax + 2], 0 ; add al, ch ; ret 0x115d
0x00000000006ced52 : add dword ptr [rax + 3], edi ; je 0x6ced68 ; ret
0x0000000000507235 : add dword ptr [rax + 4], 1 ; lock add dword ptr [rax], 1 ; ret
0x00000000006898f5 : add dword ptr [rax + 4], 1 ; ret
0x00000000005fbb55 : add dword ptr [rax + 4], edi ; mov dword ptr [rdi + 4], eax ; ret
0x00000000005fbc05 : add dword ptr [rax + 4], edi ; mov dword ptr [rdi + 8], eax ; ret
0x00000000007cbbb9 : add dword ptr [rax + 5], ebp ; ret
0x00000000007c4318 : add dword ptr [rax + 5], edi ; add byte ptr [rax], al ; lea eax, dword ptr [rcx] ; retf
0x000000000066789d : add dword ptr [rax + rax*2 + 0x48], esi ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006fc244 : add dword ptr [rax + rax], eax ; add al, cl ; ret
0x00000000006dcb24 : add dword ptr [rax + rax], eax ; add al, cl ; retf 0x6d
0x000000000073c649 : add dword ptr [rax + rax], eax ; add byte ptr [rbp - 0x21], dh ; jmp qword ptr [rax]
0x00000000006a4a69 : add dword ptr [rax + rax], eax ; add byte ptr [rsi + 0xf], ah ; sub cl, al ; ret
0x0000000000413563 : add dword ptr [rax + rbx - 0x15], esi ; or ecx, dword ptr [rax - 0x77] ; ret
0x00000000004484e9 : add dword ptr [rax + rcx + 0x48], esi ; mov edi, eax ; call 0x6d4748
0x000000000067d4e3 : add dword ptr [rax + rdi], edx ; mov rdi, r12 ; call 0x689fb9
0x000000000057000a : add dword ptr [rax - 0x73], ecx ; js 0x56ffef ; jne 0x570060 ; call r12
0x00000000005702bf : add dword ptr [rax - 0x73], ecx ; js 0x5702a4 ; jne 0x570318 ; call r12
0x00000000005ae933 : add dword ptr [rax - 0x73], ecx ; push rbx ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000006bed26 : add dword ptr [rax - 0x75], ecx ; add eax, 0x343b7a ; jmp rax
0x0000000000611707 : add dword ptr [rax - 0x75], ecx ; add eax, 0x3f11d1 ; call rax
0x000000000068e575 : add dword ptr [rax - 0x75], ecx ; add ebp, ebx ; ret 0x1f0f
0x00000000006bf4ce : add dword ptr [rax - 0x75], ecx ; pop rbp ; clc ; leave ; ret
0x00000000005e7d3b : add dword ptr [rax - 0x76b7fff3], edx ; ret 0x8b48
0x0000000000526baa : add dword ptr [rax - 0x77], ecx ; clc ; ret
0x000000000051f973 : add dword ptr [rax - 0x77], ecx ; fmul dword ptr [rax - 0x7d] ; ret
0x000000000051d9cd : add dword ptr [rax - 0x77], ecx ; jmp 0xffffffffd2511150
0x000000000051dbb4 : add dword ptr [rax - 0x77], ecx ; jmp 0xffffffffd2512237
0x00000000005405eb : add dword ptr [rax - 0x77], ecx ; jmp 0xffffffffd253386e
0x000000000054c646 : add dword ptr [rax - 0x77], ecx ; jmp 0xffffffffd253fec9
0x0000000000589cf4 : add dword ptr [rax - 0x77], ecx ; jmp 0xffffffffd257e377
0x00000000004f741a : add dword ptr [rax - 0x77], ecx ; ret
0x00000000006a8cd4 : add dword ptr [rax - 0x77], ecx ; ret 0x13e8
0x00000000005085e2 : add dword ptr [rax - 0x77], ecx ; ret 0x2948
0x000000000067b4e0 : add dword ptr [rax - 0x77], ecx ; ret 0x840f
0x00000000005101de : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x000000000055371d : add dword ptr [rax - 0x77], ecx ; ret 0x874
0x00000000006a8d20 : add dword ptr [rax - 0x77], ecx ; ret 0x8948
0x00000000004d9b0b : add dword ptr [rax - 0x77], ecx ; ret 0x8d48
0x00000000005993cb : add dword ptr [rax - 0x77], ecx ; ret 0xc148
0x0000000000687ed6 : add dword ptr [rax - 0x77], ecx ; ret 0xc189
0x00000000005086ab : add dword ptr [rax - 0x77], ecx ; ret 0xc7
0x00000000006489e0 : add dword ptr [rax - 0x77], ecx ; ret 0xc748
0x00000000006bbcc2 : add dword ptr [rax - 0x77], ecx ; ret 0xe8c0
0x0000000000688179 : add dword ptr [rax - 0x77], ecx ; retf -0x1e7d
0x000000000059cca3 : add dword ptr [rax - 0x77], ecx ; retf -0x3eb8
0x0000000000675531 : add dword ptr [rax - 0x77], ecx ; retf -0x6918
0x000000000063670c : add dword ptr [rax - 0x77], ecx ; retf -0x7af1
0x000000000051be24 : add dword ptr [rax - 0x77], ecx ; retf -0x7cb8
0x00000000005d8d46 : add dword ptr [rax - 0x77], ecx ; retf 0x1deb
0x00000000006a971b : add dword ptr [rax - 0x77], ecx ; retf 0x2948
0x00000000005d46b4 : add dword ptr [rax - 0x77], ecx ; retf 0x4beb
0x00000000005d44cc : add dword ptr [rax - 0x77], ecx ; retf 0x53eb
0x00000000005d4521 : add dword ptr [rax - 0x77], ecx ; retf 0x5b90
0x000000000066d393 : add dword ptr [rax - 0x77], ecx ; ror byte ptr [rbp + 0x39], 1 ; fmul dword ptr [rbp + 0x63] ; retf 0x1ba
0x00000000006a4600 : add dword ptr [rax - 0x77], ecx ; sal byte ptr [rdx + rbp - 0x77], 1 ; retf
0x0000000000542692 : add dword ptr [rax - 0x77], ecx ; sbb byte ptr [r8 + 0x39], cl ; ret 0x247f
0x0000000000616399 : add dword ptr [rax - 0x7ba74b8], edx ; nop ; leave ; ret
0x00000000005fb674 : add dword ptr [rax - 0x7bf0d006], eax ; retf 0
0x00000000006cdd0e : add dword ptr [rax - 0x7d], ecx ; jp 0x6cdd14 ; add byte ptr [rbp - 0xe], dh ; ret
0x00000000004f60b6 : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004f49af : add dword ptr [rax - 0x7d], ecx ; ret 0x3901
0x00000000006bac46 : add dword ptr [rax - 0x7d], ecx ; ret 0x4001
0x0000000000691f4a : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000006c8e9b : add dword ptr [rax - 0x7d], ecx ; ret 0x4501
0x00000000005fc646 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000005664d2 : add dword ptr [rax - 0x7d], ecx ; ret 0x480f
0x0000000000601295 : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x000000000059f67b : add dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x00000000005fb92a : add dword ptr [rax - 0x7d], ecx ; ret 0x4a10
0x000000000067ff4d : add dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000068ebe2 : add dword ptr [rax - 0x7d], ecx ; ret 0x8008
0x00000000006d1a05 : add dword ptr [rax - 0x7d], ecx ; ret 0x8901
0x00000000006bab56 : add dword ptr [rax - 0x7d], ecx ; ret 0x8d01
0x00000000006baf16 : add dword ptr [rax - 0x7d], ecx ; ret 0xf601
0x0000000000667773 : add dword ptr [rax - 0x7f], ecx ; ret 0xca00
0x000000000053f2ce : add dword ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4501
0x00000000006a2fef : add dword ptr [rax], 0x53b60f00 ; and al, 0xf ; scasd eax, dword ptr [rdi] ; ret 0x148
0x00000000006b65ed : add dword ptr [rax], 0xdb310000 ; call qword ptr [rip + 0x34c2e7]
0x000000000053b5fa : add dword ptr [rax], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040bfc5 : add dword ptr [rax], 1 ; pop rbp ; ret
0x0000000000506c65 : add dword ptr [rax], 1 ; ret
0x0000000000723fe4 : add dword ptr [rax], 8 ; add byte ptr [rbx], al ; or byte ptr [rax], al ; ret
0x000000000076802e : add dword ptr [rax], eax ; adc dh, byte ptr [rbp - 0x29] ; jmp qword ptr [rbx]
0x00000000006719a6 : add dword ptr [rax], eax ; add al, ch ; ret 0x38f
0x00000000005c14f2 : add dword ptr [rax], eax ; add al, ch ; xchg eax, esi ; ret
0x000000000073596a : add dword ptr [rax], eax ; add ax, dx ; call rax
0x000000000076734e : add dword ptr [rax], eax ; add bl, byte ptr [rsi - 0x2a] ; call rsp
0x00000000005ffd63 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000066c96c : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000608adc : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000060700e : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf
0x000000000067fbe8 : add dword ptr [rax], eax ; add byte ptr [rax + 0x40478b48], dl ; ret
0x00000000005187ff : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; dec byte ptr [rax + 0x63] ; ret
0x0000000000559c0a : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; fmul dword ptr [rax + 0x63] ; retf -0x41bf
0x00000000005c64e0 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; fmul dword ptr [rax + 0x63] ; retf -0x7cb8
0x00000000005c4fd3 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3145
0x00000000006a131a : add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; retf
0x0000000000632296 : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; fmul dword ptr [rax + 0x39] ; ret
0x00000000004e3e7a : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; retf -0x7cb8
0x000000000074b82d : add dword ptr [rax], eax ; add byte ptr [rax + rbp*8], ch ; retf
0x000000000074b84d : add dword ptr [rax], eax ; add byte ptr [rax - 0x18], dh ; retf
0x0000000000602976 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax + 0x63], cl ; ret
0x0000000000498f3d : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rcx - 0x77] ; ret 0x65e8
0x00000000006a7f79 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax + 0x39], cl ; ret
0x000000000066aa68 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000052846c : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; leave ; ret 0x1a
0x0000000000594425 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; push rax ; retf
0x0000000000511aa4 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000004fc9de : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000505614 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000005054e0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000006d22da : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000048d27a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000004ef1bf : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000006d3ea5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000006bd8d1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc783
0x00000000006488d8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x2948
0x00000000006d272b : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x0000000000512b6d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; loopne 0x512b3b ; ret
0x0000000000539ddd : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; loopne 0x539dab ; ret
0x00000000006b245b : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; loopne 0x6b2429 ; ret
0x0000000000538a16 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000477e69 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000053f1bb : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000066863a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007066ea : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; retf
0x00000000006d74ea : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4136
0x00000000006d796a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x413e
0x00000000006dca6a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x44fb
0x00000000004f45d1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000573947 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x67fb58
0x00000000004fead6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x68ad76
0x0000000000432a8c : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x6bed06
0x00000000006d400b : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x0000000000404a60 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000065e64b : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rcx
0x0000000000652601 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rdx
0x0000000000525984 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x525996 ; ret
0x000000000052b164 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x52b176 ; ret
0x0000000000544e24 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x544e36 ; ret
0x000000000056ae94 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x56aea6 ; ret
0x0000000000571984 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x571996 ; ret
0x000000000058f6c4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x58f6d6 ; ret
0x00000000005957c4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x5957d6 ; ret
0x00000000005ad824 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x5ad836 ; ret
0x00000000006b24e6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x6b2536 ; ret
0x000000000040ce58 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x40ce26
0x000000000040d568 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x40d536
0x0000000000410d54 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x410d22
0x000000000041390b : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x4138d9
0x00000000004140ab : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x414079
0x000000000041c94c : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x41c91a
0x000000000041d067 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x41d035
0x0000000000420da7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x420d75
0x0000000000422d7d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x422d4b
0x000000000042351d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x4234eb
0x000000000042b93e : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x42b90c
0x000000000042c04e : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x42c01c
0x000000000042f83a : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x42f808
0x000000000043239d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x43236b
0x0000000000432b3d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x432b0b
0x000000000043d882 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x43d858
0x0000000000448854 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x44882a
0x000000000044fe13 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x44fde1
0x00000000004509dd : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x4509ab
0x00000000004519d5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x4519a3
0x00000000004531b9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x453187
0x0000000000453d83 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x453d51
0x000000000045524d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x45521b
0x0000000000459508 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x4594de
0x0000000000462302 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x4622d8
0x000000000046c002 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x46bfd8
0x00000000004716a3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x471671
0x000000000047226d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x47223b
0x0000000000478a43 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x478a11
0x000000000048d359 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x48d32f
0x000000000049c37e : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x49c354
0x00000000004a1d6d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x4a1d3b
0x00000000004a2937 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x4a2905
0x00000000004b58cf : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x4b589d
0x00000000004b6499 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x4b6467
0x00000000004b7b35 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x4b7b03
0x00000000004b86ff : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x4b86cd
0x00000000004c23f9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x4c23c7
0x00000000004c3615 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x4c35e3
0x00000000005cd08b : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5cd059
0x00000000005cd2b9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5cd287
0x00000000005cd4e7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5cd4b5
0x00000000005cd70c : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5cd6da
0x00000000005cf364 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5cf332
0x00000000005cf585 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5cf553
0x00000000005d4bd5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5d4ba3
0x00000000005d4be4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5d4bba
0x00000000005d7f6e : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5d7f3c
0x00000000005d8190 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5d815e
0x00000000005d9be1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5d9baf
0x00000000005d9e0f : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5d9ddd
0x00000000005da03d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5da00b
0x00000000005da262 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5da230
0x00000000005dbfcf : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5dbf9d
0x00000000005dc1fe : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5dc1cc
0x00000000005e1aae : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5e1a7c
0x00000000005e1abd : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5e1a93
0x00000000005e545f : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5e542d
0x00000000005e568f : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5e565d
0x00000000005e7f43 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5e7f11
0x00000000005e86fd : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5e86cb
0x00000000005eb25b : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5eb229
0x00000000005eba15 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5eb9e3
0x00000000006143ca : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x614398
0x0000000000614872 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x614840
0x0000000000615b5e : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x615b2c
0x000000000061b1a1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x61b16f
0x000000000061bdaf : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x61bd7d
0x000000000069a1d9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x696c49
0x000000000069ac52 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x697758
0x00000000005011c0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000451d43 : add dword ptr [rax], eax ; add byte ptr [rax], al ; leave ; ret
0x000000000069254b : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov byte ptr [rbx + 0x7b], 0 ; pop rbx ; ret
0x00000000006d13bf : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [r10 + 0x24], edi ; ret
0x0000000000660974 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xfffffffd ; ret
0x00000000005d4409 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; nop ; pop rbp ; ret
0x00000000006c5a61 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000006d4568 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000511108 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov esi, ebx ; mov rdi, r12 ; call rax
0x00000000005817f2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rbx ; ret
0x00000000005417b7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000511356 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x0000000000534a5b : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 0x18] ; call rax
0x00000000005351a3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 0x38] ; call rax
0x0000000000516b54 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call 0x512d79
0x00000000005111f4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x000000000063d6fd : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rcx
0x000000000055464a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rdx
0x00000000006c719e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call 0x403c79
0x000000000052bad3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x000000000062df12 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rdx
0x0000000000511b31 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rax
0x00000000006516e3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rdx
0x000000000052ca28 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r15 ; call rax
0x000000000055156f : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r15 ; call rdx
0x000000000047c744 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rax ; call 0x4791e9
0x0000000000459d73 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rax ; call 0x4b67d5
0x000000000048fcc3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rax ; call 0x4bbf13
0x0000000000511b86 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x000000000041e961 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call 0x41b399
0x00000000004fb6ac : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call 0x4f8199
0x0000000000503a30 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000040ab78 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rdx
0x000000000040b08f : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rcx ; call rax
0x000000000040aaf7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rcx ; call rdx
0x000000000040b102 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rdx ; call rax
0x0000000000575e82 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rsp ; call 0x572109
0x0000000000613c17 : add dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000412614 : add dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x0000000000706640 : add dword ptr [rax], eax ; add byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; retf
0x00000000006d7540 : add dword ptr [rax], eax ; add byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x4136
0x0000000000717b40 : add dword ptr [rax], eax ; add byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rax], al ; retf
0x00000000006d79c0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0x413e
0x00000000006dcac0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0x44fb
0x00000000006cbcf4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000451c6b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000606605 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000554295 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000504f08 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000007eed0f : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x1e01
0x0000000000783bcd : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x7d
0x00000000007ce9de : add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0x1e01
0x00000000007f46fc : add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0x1f7
0x0000000000769c5d : add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0x7c
0x0000000000518284 : add dword ptr [rax], eax ; add byte ptr [rax], al ; test edx, edx ; jle 0x518298 ; ret
0x0000000000519f11 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000050ef2e : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; in eax, 0xf ; popfq ; ret 0x854d
0x000000000053f229 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x894c
0x000000000066418c : add dword ptr [rax], eax ; add byte ptr [rbp - 0x39], dh ; ret
0x000000000065ea43 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x29102454], cl ; ret 0x8b41
0x00000000004134a0 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000621e10 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop rbp ; ret
0x0000000000583851 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000687c9d : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000005f988c : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000006867d1 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x634801c2], al ; ret 0x6348
0x000000000053f196 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], cl ; ret 0x8c0f
0x000000000053f1cb : add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], cl ; ret 0xb841
0x000000000057f798 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x63], cl ; retf
0x0000000000510209 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000511125 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000006c0744 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r12 ; call rax
0x000000000062de1b : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x0000000000608409 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; push rdi ; or byte ptr [rax - 0x7f], cl ; ret
0x000000000069eba1 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; fld dword ptr [rbp - 0x77] ; ret
0x000000000060cd61 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; retf
0x0000000000539019 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000065db7a : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; ret 0x4101
0x000000000066d32d : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000694643 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; cld ; add al, 0xf ; xchg eax, esp ; ret 0xfb83
0x00000000006d35a4 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rax]
0x00000000006d3590 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rbx]
0x00000000006115b3 : add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0x00000000004deef3 : add dword ptr [rax], eax ; add byte ptr [rcx], al ; retf -0x3dc7
0x00000000005329b0 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x00000000004dafe2 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x227c
0x00000000004fa41f : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x8c0f
0x000000000064cfe3 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x8d0f
0x000000000050db62 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; retf
0x0000000000686f00 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; retf -0x70f1
0x0000000000502860 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; retf -0x73f1
0x00000000005067e2 : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; fmul dword ptr [rax + 0x63] ; retf
0x000000000050e929 : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000004daff9 : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret 0xd089
0x000000000067abc8 : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret 0xfa83
0x00000000006bef82 : add dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x49], al ; ret 0x8941
0x00000000006a4c05 : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; ret
0x00000000004f800d : add dword ptr [rax], eax ; add byte ptr [rsi + 1], bh ; call rax
0x0000000000783de5 : add dword ptr [rax], eax ; add byte ptr [rsp + rbp*8], al ; ret
0x0000000000769cf5 : add dword ptr [rax], eax ; add byte ptr [rsp + rbp*8], al ; retf 0x7c
0x00000000006a9948 : add dword ptr [rax], eax ; add cl, bl ; retf
0x00000000006a304d : add dword ptr [rax], eax ; add cl, ch ; retf
0x00000000007356a2 : add dword ptr [rax], eax ; add cl, cl ; iretd ; call rax
0x000000000040c01b : add dword ptr [rax], eax ; add cl, cl ; ret
0x00000000006a7133 : add dword ptr [rax], eax ; add dh, al ; ret
0x000000000068797b : add dword ptr [rax], eax ; add eax, ecx ; cmp rdi, rdx ; jne 0x687979 ; ret
0x0000000000658eba : add dword ptr [rax], eax ; add rsp, 0x18 ; ret
0x0000000000537027 : add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000005b8794 : add dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x0000000000694057 : add dword ptr [rax], eax ; add rsp, 0xb8 ; ret
0x000000000057d138 : add dword ptr [rax], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000068e337 : add dword ptr [rax], eax ; add rsp, 8 ; ret
0x00000000007db44a : add dword ptr [rax], eax ; and byte ptr [rax], al ; add byte ptr [rax + 0x30], bl ; retf
0x000000000076a38e : add dword ptr [rax], eax ; and byte ptr [rsi - 0x27], ch ; jmp qword ptr [rax]
0x0000000000768846 : add dword ptr [rax], eax ; and dh, bh ; xlatb ; jmp rdx
0x00000000007636b6 : add dword ptr [rax], eax ; and ebp, edx ; call qword ptr [rax]
0x00000000007625d6 : add dword ptr [rax], eax ; call 0x2475fa44
0x00000000007ca99e : add dword ptr [rax], eax ; call 0xffffffffc3883b05
0x000000000073514a : add dword ptr [rax], eax ; call 0xffffffffe173205c
0x000000000076285e : add dword ptr [rax], eax ; clc ; mov ah, dl ; jmp qword ptr [rbx]
0x000000000073492a : add dword ptr [rax], eax ; clc ; or esi, ecx ; jmp rax
0x00000000007627de : add dword ptr [rax], eax ; cld ; jge 0x7627bc ; jmp qword ptr [rbx]
0x0000000000767816 : add dword ptr [rax], eax ; cli ; call rsi
0x00000000007f4076 : add dword ptr [rax], eax ; cmc ; retf
0x000000000075fe16 : add dword ptr [rax], eax ; cmp byte ptr [rcx - 0x2d], dh ; jmp qword ptr [rcx]
0x000000000076277e : add dword ptr [rax], eax ; cmp byte ptr [rdx - 0x2c], bh ; call qword ptr [rdx]
0x000000000075fe36 : add dword ptr [rax], eax ; cmp dh, byte ptr [rcx - 0x2d] ; jmp qword ptr [rsi]
0x00000000007f402e : add dword ptr [rax], eax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; retf 0x501
0x0000000000735342 : add dword ptr [rax], eax ; cwde ; outsb dx, byte ptr [rsi] ; iretd ; call rax
0x000000000073468a : add dword ptr [rax], eax ; cwde ; ret
0x000000000076886e : add dword ptr [rax], eax ; fdivr st(7), st(0) ; xlatb ; jmp qword ptr [rbx]
0x000000000076644e : add dword ptr [rax], eax ; hlt ; rcl ebp, 1 ; call rsp
0x0000000000766106 : add dword ptr [rax], eax ; hlt ; ret
0x0000000000735e2a : add dword ptr [rax], eax ; hlt ; retf
0x0000000000735352 : add dword ptr [rax], eax ; imul byte ptr [rdi - 0x31] ; lcall ptr [rax] ; retf
0x00000000007351c2 : add dword ptr [rax], eax ; in al, 0xc ; iretd ; jmp rax
0x00000000007f4046 : add dword ptr [rax], eax ; int1 ; retf 0x501
0x00000000007352c2 : add dword ptr [rax], eax ; iretq ; call qword ptr [rax]
0x0000000000735292 : add dword ptr [rax], eax ; jb 0x7352e5 ; iretd ; jmp qword ptr [rax]
0x000000000076772e : add dword ptr [rax], eax ; jl 0x76772c ; salc ; jmp qword ptr [rax]
0x0000000000766b6e : add dword ptr [rax], eax ; jle 0x766b83 ; salc ; call rsp
0x00000000007f406e : add dword ptr [rax], eax ; jmp 0x7f4040
0x00000000007f43d7 : add dword ptr [rax], eax ; jmp rdx
0x0000000000734372 : add dword ptr [rax], eax ; jne 0x734349 ; call rax
0x0000000000735b8a : add dword ptr [rax], eax ; jne 0x735b64 ; jmp qword ptr [rax]
0x0000000000735b89 : add dword ptr [rax], eax ; jne 0x735b65 ; jmp qword ptr [rax]
0x00000000007351d2 : add dword ptr [rax], eax ; jo 0x7351e8 ; iretd ; jmp qword ptr [rax]
0x0000000000735402 : add dword ptr [rax], eax ; js 0x735487 ; iretd ; jmp qword ptr [rax]
0x000000000073531a : add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; push 0xcf ; inc dword ptr [rax] ; retf 1
0x00000000007351fa : add dword ptr [rax], eax ; loop 0x735211 ; iretd ; call rax
0x00000000007f2d29 : add dword ptr [rax], eax ; mov bl, 0x23 ; pop rsi ; ret 0x1d7
0x000000000075c086 : add dword ptr [rax], eax ; mov cl, byte ptr [rdx - 0x2f] ; call rsp
0x000000000075c046 : add dword ptr [rax], eax ; mov cl, byte ptr [rdx - 0x2f] ; jmp qword ptr [rsi]
0x0000000000735322 : add dword ptr [rax], eax ; mov dh, 0x6a ; iretd ; jmp qword ptr [rax]
0x00000000007358a2 : add dword ptr [rax], eax ; mov dh, ah ; iretd ; call qword ptr [rax]
0x00000000007f3493 : add dword ptr [rax], eax ; mov dh, byte ptr [rbp + 5] ; retf
0x00000000006918c7 : add dword ptr [rax], eax ; mov eax, dword ptr [rbx + 0x58] ; pop rbx ; ret
0x0000000000691787 : add dword ptr [rax], eax ; mov eax, dword ptr [rbx + 0x5c] ; pop rbx ; ret
0x0000000000690537 : add dword ptr [rax], eax ; mov eax, dword ptr [rbx + 0x60] ; pop rbx ; ret
0x00000000007f32b1 : add dword ptr [rax], eax ; mov ebp, 0xb09e0561 ; add dword ptr [rax], eax ; ret 0x3361
0x00000000007faed2 : add dword ptr [rax], eax ; mov ebx, 0xfa0501c2 ; ret
0x00000000007f7e2f : add dword ptr [rax], eax ; mov edx, 0x501 ; ret 0x501
0x000000000073570a : add dword ptr [rax], eax ; mov edx, ds ; iretd ; call rax
0x00000000007f4036 : add dword ptr [rax], eax ; mov esi, 0xb20501ca ; retf
0x0000000000480032 : add dword ptr [rax], eax ; mov qword ptr [rbp - 8], rax ; leave ; ret
0x000000000068e347 : add dword ptr [rax], eax ; mov rax, qword ptr [rbx + 0x58] ; pop rbx ; ret
0x0000000000693f57 : add dword ptr [rax], eax ; mov rax, qword ptr [rbx + 8] ; pop rbx ; ret
0x00000000005dafc5 : add dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x427912] ; call rax
0x00000000005dad05 : add dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x427bd2] ; call rax
0x00000000005d5fcf : add dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x42c908] ; call rax
0x00000000005d5d1b : add dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x42cbbc] ; call rax
0x00000000005d243a : add dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x43049d] ; call rax
0x00000000005d21ce : add dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x430709] ; call rax
0x00000000005d170e : add dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x4311c9] ; call rax
0x00000000005d1626 : add dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x4312b1] ; call rax
0x00000000005d14c8 : add dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x43140f] ; call rax
0x00000000005d13de : add dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x4314f9] ; call rax
0x00000000005ce3e3 : add dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x4344f4] ; call rax
0x00000000005ce12f : add dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x4347a8] ; call rax
0x000000000043e433 : add dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x5c44a4] ; call rax
0x000000000068e787 : add dword ptr [rax], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000007fa02d : add dword ptr [rax], eax ; mov word ptr [rsi + 5], cs ; ret
0x000000000075fee6 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; je 0x75fec3 ; jmp qword ptr [rbx]
0x0000000000768d56 : add dword ptr [rax], eax ; neg byte ptr [rsi - 0x28] ; jmp qword ptr [rbx]
0x00000000007359aa : add dword ptr [rax], eax ; nop ; add edx, eax ; call rax
0x000000000075d4ee : add dword ptr [rax], eax ; nop ; retf
0x000000000068e0ba : add dword ptr [rax], eax ; nop dword ptr [rax] ; ret
0x0000000000679268 : add dword ptr [rax], eax ; nop word ptr [rax + rax] ; ret
0x000000000076136e : add dword ptr [rax], eax ; not ebx ; call rbx
0x000000000075f42e : add dword ptr [rax], eax ; not rdx ; jmp qword ptr [rbx]
0x000000000075f58e : add dword ptr [rax], eax ; or bl, r10b ; call qword ptr [rbx]
0x0000000000735192 : add dword ptr [rax], eax ; or r9d, edi ; jmp qword ptr [rax]
0x0000000000734f2a : add dword ptr [rax], eax ; out 0xce, al ; jmp qword ptr [rax]
0x000000000075ba8e : add dword ptr [rax], eax ; out dx, al ; sar edi, 1 ; ret 1
0x000000000075de26 : add dword ptr [rax], eax ; pop rax ; not ecx ; call rdx
0x0000000000735dd2 : add dword ptr [rax], eax ; pop rax ; ret
0x0000000000735e12 : add dword ptr [rax], eax ; pop rax ; retf -0x30
0x000000000076a3ee : add dword ptr [rax], eax ; pop rdx ; pushfq ; leave ; call qword ptr [rdx]
0x000000000073498a : add dword ptr [rax], eax ; pop rsi ; adc esi, ecx ; call rax
0x0000000000767486 : add dword ptr [rax], eax ; pop rsi ; jo 0x767466 ; call rax
0x0000000000767cc6 : add dword ptr [rax], eax ; pop rsp ; adc al, 0xd7 ; jmp qword ptr [rbx]
0x00000000007608de : add dword ptr [rax], eax ; pop rsp ; ret 0xffd3
0x00000000007352ba : add dword ptr [rax], eax ; push 0x4d ; iretd ; jmp rax
0x00000000007fad2a : add dword ptr [rax], eax ; push qword ptr [rcx + rax + 0x65d832] ; retf
0x00000000007660d6 : add dword ptr [rax], eax ; push rax ; ret
0x0000000000735bba : add dword ptr [rax], eax ; push rdx ; jbe 0x735b94 ; jmp rax
0x0000000000735bb9 : add dword ptr [rax], eax ; push rdx ; jbe 0x735b95 ; jmp rax
0x0000000000734ea2 : add dword ptr [rax], eax ; push rdx ; retf -0x32
0x0000000000735d9a : add dword ptr [rax], eax ; push rsp ; mov ch, 0xd0 ; call qword ptr [rax]
0x000000000075de06 : add dword ptr [rax], eax ; push rsp ; not ecx ; jmp qword ptr [rbx]
0x000000000076a406 : add dword ptr [rax], eax ; push rsp ; pushfq ; leave ; call qword ptr [rdx]
0x00000000007f2b70 : add dword ptr [rax], eax ; pushfq ; adc dword ptr [rip + 0x19ca3], ecx ; ret 0x511
0x000000000073574a : add dword ptr [rax], eax ; pushfq ; in al, -0x31 ; jmp qword ptr [rax]
0x00000000005053b3 : add dword ptr [rax], eax ; ret
0x00000000007f36fb : add dword ptr [rax], eax ; ret 0x18a
0x00000000007cab29 : add dword ptr [rax], eax ; ret 0x199
0x00000000007cab69 : add dword ptr [rax], eax ; ret 0x19e
0x00000000007faac2 : add dword ptr [rax], eax ; ret 0x1a3
0x00000000007f3c71 : add dword ptr [rax], eax ; ret 0x1b0
0x00000000007fae25 : add dword ptr [rax], eax ; ret 0x1bc
0x00000000007f443f : add dword ptr [rax], eax ; ret 0x1e5
0x00000000007f4467 : add dword ptr [rax], eax ; ret 0x1e6
0x00000000007f4660 : add dword ptr [rax], eax ; ret 0x1f3
0x00000000007f47a8 : add dword ptr [rax], eax ; ret 0x1fc
0x00000000007caffa : add dword ptr [rax], eax ; ret 0x2501
0x00000000007f32b8 : add dword ptr [rax], eax ; ret 0x3361
0x00000000007fbfab : add dword ptr [rax], eax ; ret 0x501
0x00000000007f2b77 : add dword ptr [rax], eax ; ret 0x511
0x00000000007f2bc4 : add dword ptr [rax], eax ; ret 0x514
0x00000000007f2e64 : add dword ptr [rax], eax ; ret 0x5d30
0x0000000000734baa : add dword ptr [rax], eax ; ret 0xce7f
0x0000000000734c82 : add dword ptr [rax], eax ; ret 0xce90
0x00000000007359ca : add dword ptr [rax], eax ; ret 0xd004
0x00000000007d93f6 : add dword ptr [rax], eax ; ret 0xd01
0x000000000075dd4e : add dword ptr [rax], eax ; ret 0xd1f5
0x000000000075ea16 : add dword ptr [rax], eax ; ret 0xd238
0x000000000075f1be : add dword ptr [rax], eax ; ret 0xd2d7
0x0000000000763e2e : add dword ptr [rax], eax ; ret 0xd52e
0x00000000007663f6 : add dword ptr [rax], eax ; ret 0xd5d0
0x0000000000767656 : add dword ptr [rax], eax ; ret 0xd6dd
0x0000000000734672 : add dword ptr [rax], eax ; ret 0xffcd
0x00000000007660a6 : add dword ptr [rax], eax ; ret 0xffd5
0x00000000007c37aa : add dword ptr [rax], eax ; retf
0x0000000000767b76 : add dword ptr [rax], eax ; retf -0x28f1
0x00000000007677f6 : add dword ptr [rax], eax ; retf -0x2901
0x0000000000766576 : add dword ptr [rax], eax ; retf -0x2a25
0x0000000000765336 : add dword ptr [rax], eax ; retf -0x2aa0
0x00000000007650ee : add dword ptr [rax], eax ; retf -0x2ab0
0x0000000000764b86 : add dword ptr [rax], eax ; retf -0x2abb
0x000000000076469e : add dword ptr [rax], eax ; retf -0x2ac6
0x000000000076160e : add dword ptr [rax], eax ; retf -0x2bfd
0x000000000076139e : add dword ptr [rax], eax ; retf -0x2c08
0x000000000075e40e : add dword ptr [rax], eax ; retf -0x2df2
0x000000000075cbee : add dword ptr [rax], eax ; retf -0x2e9e
0x000000000075ba66 : add dword ptr [rax], eax ; retf -0x2ed3
0x000000000075b936 : add dword ptr [rax], eax ; retf -0x2eda
0x0000000000735e52 : add dword ptr [rax], eax ; retf -0x2f32
0x0000000000735e22 : add dword ptr [rax], eax ; retf -0x2f36
0x0000000000735a2a : add dword ptr [rax], eax ; retf -0x2fe7
0x000000000073567a : add dword ptr [rax], eax ; retf -0x3041
0x000000000073563a : add dword ptr [rax], eax ; retf -0x304b
0x000000000073534a : add dword ptr [rax], eax ; retf -0x3091
0x00000000007348aa : add dword ptr [rax], eax ; retf -0x31fe
0x00000000007346b2 : add dword ptr [rax], eax ; retf -0x3237
0x00000000007345ea : add dword ptr [rax], eax ; retf -0x324d
0x00000000007f3d09 : add dword ptr [rax], eax ; retf 0x1b4
0x00000000007f4568 : add dword ptr [rax], eax ; retf 0x1ed
0x00000000007bfd82 : add dword ptr [rax], eax ; retf 0x2501
0x00000000007c74ae : add dword ptr [rax], eax ; retf 0x2b01
0x00000000007f3341 : add dword ptr [rax], eax ; retf 0x3a67
0x00000000007dac6d : add dword ptr [rax], eax ; retf 0x501
0x00000000007f3174 : add dword ptr [rax], eax ; retf 0x551
0x000000000073590a : add dword ptr [rax], eax ; sbb al, 0xfc ; iretd ; jmp qword ptr [rax]
0x0000000000769a4e : add dword ptr [rax], eax ; sbb ch, 0xd8 ; call qword ptr [rdx]
0x00000000007670fe : add dword ptr [rax], eax ; sbb dl, byte ptr [rdx - 0x2a] ; jmp qword ptr [rbx]
0x00000000007354a2 : add dword ptr [rax], eax ; scasb al, byte ptr [rdi] ; mov ecx, edi ; call qword ptr [rax]
0x000000000075f0f6 : add dword ptr [rax], eax ; scasb al, byte ptr [rdi] ; rcl dl, 1 ; jmp qword ptr [rcx]
0x00000000007f99fd : add dword ptr [rax], eax ; scasd eax, dword ptr [rdi] ; add al, 0x1c ; cwde ; sahf ; add dword ptr [rax], eax ; retf
0x00000000007622ee : add dword ptr [rax], eax ; shl byte ptr [rsi], 0xd4 ; jmp qword ptr [rbx]
0x00000000006891d9 : add dword ptr [rax], eax ; shr eax, 0x1f ; add rsp, 8 ; ret
0x00000000007688e6 : add dword ptr [rax], eax ; sti ; xlatb ; jmp rax
0x0000000000735e1a : add dword ptr [rax], eax ; stosb byte ptr [rdi], al ; retf -0x30
0x00000000007f3f4c : add dword ptr [rax], eax ; stosd dword ptr [rdi], eax ; ret
0x000000000073586a : add dword ptr [rax], eax ; sub al, 0xf2 ; iretd ; call qword ptr [rax]
0x000000000075b9a6 : add dword ptr [rax], eax ; sub ecx, r10d ; jmp qword ptr [rax]
0x000000000075ed96 : add dword ptr [rax], eax ; test byte ptr [rbp - 0x2e], dh ; jmp qword ptr [rsi]
0x00000000007f3118 : add dword ptr [rax], eax ; test byte ptr [rsi + 5], cl ; ret
0x000000000073571a : add dword ptr [rax], eax ; xchg ah, bl ; iretd ; jmp qword ptr [rax]
0x000000000073582a : add dword ptr [rax], eax ; xchg ch, ch ; iretd ; jmp rax
0x00000000007f4056 : add dword ptr [rax], eax ; xchg eax, ebx ; retf
0x00000000007f4026 : add dword ptr [rax], eax ; xchg eax, ecx ; retf 0x501
0x0000000000763686 : add dword ptr [rax], eax ; xchg eax, edx ; and ch, dl ; call rsp
0x00000000007ca9d2 : add dword ptr [rax], eax ; xchg eax, edx ; outsb dx, byte ptr [rsi] ; loope 0x7ca9e0 ; ret
0x00000000007672f6 : add dword ptr [rax], eax ; xchg eax, edx ; pop rsp ; salc ; jmp qword ptr [rsi]
0x000000000075d4be : add dword ptr [rax], eax ; xchg eax, edx ; retf -0x2f
0x00000000007626b6 : add dword ptr [rax], eax ; xchg eax, esi ; jb 0x762694 ; call rdi
0x000000000075f6ee : add dword ptr [rax], eax ; xchg eax, esp ; adc edx, ebx ; jmp qword ptr [rbx]
0x000000000073499a : add dword ptr [rax], eax ; xchg eax, esp ; adc esi, ecx ; call qword ptr [rax]
0x0000000000768ffe : add dword ptr [rax], eax ; xchg eax, esp ; jb 0x768fe0 ; jmp qword ptr [rbx]
0x00000000007f3f44 : add dword ptr [rax], eax ; xchg eax, esp ; ret
0x000000000075e63e : add dword ptr [rax], eax ; xor al, 0x14 ; sar bh, cl ; retf
0x0000000000769bbe : add dword ptr [rax], eax ; xor al, 0xa3 ; leave ; call qword ptr [rdx]
0x000000000075e976 : add dword ptr [rax], eax ; xor dl, dl ; jmp qword ptr [rbx]
0x00000000007f571f : add dword ptr [rax], ebp ; retf 0x21
0x00000000007cee14 : add dword ptr [rax], ebx ; ret 0x102
0x00000000006005d6 : add dword ptr [rax], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006528bb : add dword ptr [rax], ecx ; add byte ptr [rax], al ; call rax
0x0000000000502768 : add dword ptr [rax], edi ; ret
0x0000000000581174 : add dword ptr [rax], edx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007dc40b : add dword ptr [rax], edx ; retf 1
0x00000000004be4cc : add dword ptr [rax], esp ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004c052d : add dword ptr [rax], esp ; add cl, cl ; ret
0x00000000006a977f : add dword ptr [rax], esp ; jne 0x6a9764 ; ret
0x00000000007faece : add dword ptr [rax], esp ; mov esi, 0xbb0001be ; ret 0x501
0x00000000004fee6f : add dword ptr [rax], esp ; ret
0x00000000007f4233 : add dword ptr [rax], esp ; ret 0x1d7
0x00000000007f43eb : add dword ptr [rax], esp ; ret 0x1e2
0x000000000074b84c : add dword ptr [rax], r8d ; add byte ptr [rax - 0x18], dh ; retf
0x000000000043ae6e : add dword ptr [rax], r8d ; add cl, cl ; ret
0x00000000007d0f85 : add dword ptr [rbp + 0x101], esi ; retf 0x501
0x00000000006b17dc : add dword ptr [rbp + 0x13], esi ; call rax
0x00000000005820ba : add dword ptr [rbp + 0x15], esi ; mov rdi, rsi ; jmp rax
0x0000000000517db1 : add dword ptr [rbp + 0x15], esi ; mov rsi, rbx ; call rax
0x00000000007ec99b : add dword ptr [rbp + 0x1603], ebp ; ret
0x00000000007ec9c7 : add dword ptr [rbp + 0x1604], esi ; retf
0x0000000000516e85 : add dword ptr [rbp + 0x16], esi ; mov esi, 1 ; call rax
0x000000000051327f : add dword ptr [rbp + 0x17], esi ; add rsp, 8 ; jmp rax
0x00000000005133a8 : add dword ptr [rbp + 0x18], esi ; call rax
0x0000000000519345 : add dword ptr [rbp + 0x1a], esi ; call rax
0x00000000005193d5 : add dword ptr [rbp + 0x1b], esi ; call rax
0x0000000000504431 : add dword ptr [rbp + 0x1b], esi ; mov rdi, rbx ; call rax
0x0000000000519415 : add dword ptr [rbp + 0x1e], esi ; call rax
0x00000000005043f1 : add dword ptr [rbp + 0x1e], esi ; mov rdi, rbx ; call rax
0x00000000005c6898 : add dword ptr [rbp + 0x21], esi ; mov esi, 2 ; call rax
0x00000000006078ea : add dword ptr [rbp + 0x21], esi ; mov r12d, edx ; mov rbp, rax ; call rcx
0x000000000066ba77 : add dword ptr [rbp + 0x22], esi ; call rax
0x0000000000519385 : add dword ptr [rbp + 0x24], esi ; call rax
0x00000000006bfd8f : add dword ptr [rbp + 0x26], esi ; mov rdi, rbp ; call rax
0x000000000050f8b0 : add dword ptr [rbp + 0x27], esi ; xor esi, esi ; jmp rax
0x0000000000513304 : add dword ptr [rbp + 0x28], esi ; add rsp, 8 ; jmp rax
0x0000000000688354 : add dword ptr [rbp + 0x29410141], ecx ; retf 0x3145
0x0000000000583ae3 : add dword ptr [rbp + 0x29], ecx ; retf -0x74b8
0x000000000062c2be : add dword ptr [rbp + 0x2b], esi ; mov rdi, rbx ; call rdx
0x0000000000631a89 : add dword ptr [rbp + 0x2d], esi ; call rax
0x00000000007eb303 : add dword ptr [rbp + 0x2f01], ecx ; retf 0x501
0x000000000051abf5 : add dword ptr [rbp + 0x2f], esi ; mov esi, ebx ; call rax
0x0000000000535695 : add dword ptr [rbp + 0x30], esi ; call rax
0x00000000007cd951 : add dword ptr [rbp + 0x316e201], ecx ; retf 0x502
0x0000000000530efa : add dword ptr [rbp + 0x31], eax ; shl byte ptr [rsi + 0x44], 0x89 ; ret
0x000000000065998f : add dword ptr [rbp + 0x39], eax ; out 0xf, al ; sahf ; ret
0x0000000000539060 : add dword ptr [rbp + 0x39], eax ; ret
0x00000000006886f4 : add dword ptr [rbp + 0x39], eax ; ret 0x667c
0x00000000005fe45a : add dword ptr [rbp + 0x39], eax ; ret 0x8c0f
0x0000000000666b56 : add dword ptr [rbp + 0x39], eax ; ret 0xec75
0x00000000006885f4 : add dword ptr [rbp + 0x39], eax ; retf 0x567c
0x00000000006c8ecf : add dword ptr [rbp + 0x39], eax ; retf 0xc74
0x000000000068808d : add dword ptr [rbp + 0x39], ecx ; fidiv dword ptr [rbp - 0x4b] ; pop rbx ; pop r14 ; ret
0x00000000005115b5 : add dword ptr [rbp + 0x3c], esi ; mov rdi, rbp ; call rcx
0x000000000053722d : add dword ptr [rbp + 0x3d], esi ; mov rdx, rsp ; call rax
0x000000000059e6e8 : add dword ptr [rbp + 0x45], esi ; call r12
0x000000000059e895 : add dword ptr [rbp + 0x48], esi ; call r12
0x000000000063a2e7 : add dword ptr [rbp + 0x4b], esi ; mov esi, 1 ; call rax
0x00000000005a4e21 : add dword ptr [rbp + 0x4c], esi ; call r12
0x00000000005359b1 : add dword ptr [rbp + 0x4c], esi ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000005358f2 : add dword ptr [rbp + 0x4d], esi ; mov rsi, r14 ; mov rdi, rbx ; call rax
0x000000000050adfc : add dword ptr [rbp + 0x4d], esi ; mov rsi, rsp ; call rax
0x00000000007d0eb0 : add dword ptr [rbp + 0x501], esi ; mov byte ptr [rcx], 5 ; retf
0x0000000000647f96 : add dword ptr [rbp + 0x51], esi ; mov esi, 1 ; call rax
0x000000000051b45e : add dword ptr [rbp + 0x53], esi ; call rdx
0x00000000005524ba : add dword ptr [rbp + 0x54], esi ; call rsi
0x0000000000606e6e : add dword ptr [rbp + 0x55], esi ; call rax
0x000000000066d233 : add dword ptr [rbp + 0x57], esi ; mov esi, ebp ; call rax
0x0000000000648317 : add dword ptr [rbp + 0x59], esi ; mov esi, 1 ; call rax
0x000000000053574d : add dword ptr [rbp + 0x5d], esi ; call rax
0x0000000000525ea4 : add dword ptr [rbp + 0x61], esi ; mov rsi, rsp ; call rax
0x00000000006b3c84 : add dword ptr [rbp + 0x63], ecx ; dec dword ptr [rax + 0x29] ; retf 0x14c
0x000000000050facf : add dword ptr [rbp + 0x63], esi ; call rax
0x0000000000675fd5 : add dword ptr [rbp + 0x65], esi ; mov rcx, r12 ; mov rdx, rbx ; call rax
0x000000000066d216 : add dword ptr [rbp + 0x6a], esi ; mov esi, ebp ; call rax
0x0000000000518a40 : add dword ptr [rbp + 0x6e], esi ; call rax
0x000000000054a31b : add dword ptr [rbp + 0x70], esi ; call rax
0x000000000052c44a : add dword ptr [rbp + 0x78], esi ; mov esi, 1 ; call rax
0x0000000000647f74 : add dword ptr [rbp + 0x7d], esi ; mov esi, 1 ; call rax
0x00000000006265a1 : add dword ptr [rbp + 0x7d], esi ; mov rsi, rsp ; call rax
0x000000000068f2e5 : add dword ptr [rbp + 0xa], esi ; mov rdi, rbx ; call rax
0x00000000006d10e7 : add dword ptr [rbp + 0xa], esi ; mov rsi, rsp ; call rax
0x00000000006d1dbe : add dword ptr [rbp + 0xc], esi ; mov rsi, rbx ; xor ebx, ebx ; call rax
0x0000000000685fbb : add dword ptr [rbp + 0xd], esi ; mov rdx, rbx ; call rax
0x0000000000519311 : add dword ptr [rbp + 0xf], esi ; jmp rax
0x000000000056e7a8 : add dword ptr [rbp + 1], eax ; ret 0x8b41
0x00000000007ce9dc : add dword ptr [rbp + 1], ebp ; retf 0x1e01
0x00000000007eed0d : add dword ptr [rbp + 1], esp ; ret 0x1e01
0x0000000000503c5c : add dword ptr [rbp + 2], esi ; jmp rax
0x00000000006aada8 : add dword ptr [rbp + 5], esi ; add rsp, 8 ; ret
0x000000000053da41 : add dword ptr [rbp + 7], esi ; call rax
0x00000000005011bc : add dword ptr [rbp + 7], esi ; mov esi, 1 ; jmp rax
0x00000000006c02bd : add dword ptr [rbp + 9], esi ; call rdx
0x00000000005ca1e6 : add dword ptr [rbp + r9*4 + 0x6e], r8d ; add bh, byte ptr [rcx] ; retf -0x71f1
0x00000000005ca1e7 : add dword ptr [rbp + rcx*4 + 0x6e], eax ; add bh, byte ptr [rcx] ; retf -0x71f1
0x00000000004791cc : add dword ptr [rbp - 0x14], 1 ; jmp 0x47919a
0x00000000006a4ba2 : add dword ptr [rbp - 0x15], esi ; ret
0x00000000004294ba : add dword ptr [rbp - 0x34], 1 ; jmp 0x429490
0x000000000043cf7e : add dword ptr [rbp - 0x34], 1 ; jmp 0x43cf54
0x000000000043d36e : add dword ptr [rbp - 0x34], 1 ; jmp 0x43d344
0x0000000000448340 : add dword ptr [rbp - 0x34], 1 ; jmp 0x448316
0x0000000000458ff4 : add dword ptr [rbp - 0x34], 1 ; jmp 0x458fca
0x0000000000461dee : add dword ptr [rbp - 0x34], 1 ; jmp 0x461dc4
0x000000000046baee : add dword ptr [rbp - 0x34], 1 ; jmp 0x46bac4
0x0000000000479d26 : add dword ptr [rbp - 0x34], 1 ; jmp 0x479cfc
0x000000000049be6a : add dword ptr [rbp - 0x34], 1 ; jmp 0x49be40
0x00000000004f11d0 : add dword ptr [rbp - 0x34], 1 ; jmp 0x4f119e
0x000000000067b269 : add dword ptr [rbp - 0x3c7ce3ad], ecx ; and al, 0xf ; ret
0x000000000067e529 : add dword ptr [rbp - 0x3c7ce4ad], ecx ; xor dword ptr [rdi], ecx ; ret
0x000000000069cc98 : add dword ptr [rbp - 0x3ebe02ba], edx ; retf 0x410f
0x0000000000675b27 : add dword ptr [rbp - 0x42], esi ; retf
0x00000000006bbcbf : add dword ptr [rbp - 0x76b7fe85], ecx ; ret 0xe8c0
0x0000000000597961 : add dword ptr [rbp - 0x76b7fff2], ecx ; ret
0x0000000000628a3b : add dword ptr [rbp - 0x76b7fff6], edi ; ret
0x00000000006c5832 : add dword ptr [rbp - 0x77], eax ; retf
0x00000000005a05e5 : add dword ptr [rbp - 0x77], ecx ; fisttp qword ptr [rbp - 0x77] ; ret 0x294d
0x00000000005a0953 : add dword ptr [rbp - 0x77], ecx ; fisttp qword ptr [rbp - 0x77] ; retf 0x294d
0x00000000006bf2ba : add dword ptr [rbp - 0xd], esi ; ret
0x000000000043c19a : add dword ptr [rbp - 4], 1 ; jmp 0x43c168
0x000000000044787c : add dword ptr [rbp - 4], 1 ; jmp 0x44784a
0x0000000000458530 : add dword ptr [rbp - 4], 1 ; jmp 0x4584fe
0x000000000046132a : add dword ptr [rbp - 4], 1 ; jmp 0x4612f8
0x000000000046b02a : add dword ptr [rbp - 4], 1 ; jmp 0x46aff8
0x000000000049b3a6 : add dword ptr [rbp - 4], 1 ; jmp 0x49b374
0x0000000000525e7b : add dword ptr [rbp], 1 ; call qword ptr [rip + 0x4dca5b]
0x00000000004326a7 : add dword ptr [rbp], ebx ; call rax
0x000000000064e60b : add dword ptr [rbx + 0x15ff0003], esi ; retf
0x00000000007f8f9f : add dword ptr [rbx + 0x1601], ebx ; ret
0x00000000007db448 : add dword ptr [rbx + 0x200001], edx ; add byte ptr [rax + 0x30], bl ; retf
0x00000000004b7acb : add dword ptr [rbx + 0x20], ebp ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000057cd6a : add dword ptr [rbx + 0x4e8d4112], ecx ; add edi, dword ptr [rcx] ; ret 0x8f0f
0x000000000053ae5e : add dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000005229ad : add dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00000000006906e5 : add dword ptr [rbx + 0x60], 1 ; pop rbx ; ret
0x00000000005eb3df : add dword ptr [rbx + 9], edx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000687eb8 : add dword ptr [rbx + rbx*8 - 0x7d], esi ; ret
0x000000000058c55d : add dword ptr [rbx + rcx*4 + 0x4b], ecx ; or byte ptr [rcx - 0x77], cl ; ret 0x8948
0x000000000067449a : add dword ptr [rbx + rdi + 0x48], esi ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006ce4df : add dword ptr [rbx - 0x1c8a0008], eax ; mov dword ptr [rsi], eax ; ret
0x000000000059e05b : add dword ptr [rbx - 0x39c6fe18], eax ; jl 0x59e039 ; pop rbx ; ret
0x000000000069cf0c : add dword ptr [rbx - 0x3e37dbbc], ecx ; ret 0x10e
0x00000000006bac43 : add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4001
0x000000000067ff4a : add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x8001
0x00000000006bab53 : add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x8d01
0x00000000006baf13 : add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0xf601
0x00000000007ebd02 : add dword ptr [rbx - 0x7e], ecx ; adc eax, dword ptr [rax] ; retf
0x00000000007bab5d : add dword ptr [rbx], -0x7a ; add al, byte ptr [rsi + rcx + 0x18] ; ret
0x00000000007e0e18 : add dword ptr [rbx], 0x30 ; add byte ptr [rax], al ; ret 0x503
0x000000000076aa7e : add dword ptr [rbx], 0xa ; ret
0x000000000073adb1 : add dword ptr [rbx], 0xdd365000 ; call rax
0x00000000007838f5 : add dword ptr [rbx], 0xdf2d7800 ; jmp qword ptr [rdi]
0x000000000077b8f5 : add dword ptr [rbx], eax ; add al, cl ; and al, 0xdd ; call rcx
0x000000000079146e : add dword ptr [rbx], eax ; ret
0x00000000007e1532 : add dword ptr [rbx], eax ; ret 4
0x00000000007716d6 : add dword ptr [rbx], eax ; retf 0xa01
0x000000000050e494 : add dword ptr [rbx], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007d3b7a : add dword ptr [rbx], ecx ; ret 0x103
0x00000000007f00bb : add dword ptr [rbx], ecx ; retf
0x00000000007c6da0 : add dword ptr [rbx], edi ; add byte ptr [rax], al ; retf
0x00000000007c355b : add dword ptr [rbx], edi ; or eax, 0x190 ; ret
0x00000000007c919c : add dword ptr [rbx], edx ; add byte ptr [rax], al ; ret
0x00000000007e169b : add dword ptr [rbx], edx ; add byte ptr [rax], al ; retf 0x501
0x00000000007cee0e : add dword ptr [rbx], edx ; mov dword ptr [rdx], 0x1801c701 ; ret 0x102
0x00000000007cbc97 : add dword ptr [rbx], esi ; add byte ptr [rax], al ; ret
0x00000000007c8844 : add dword ptr [rbx], esi ; add byte ptr [rax], al ; ret 0x502
0x000000000049088a : add dword ptr [rbx], esp ; add cl, cl ; ret
0x000000000053901f : add dword ptr [rcx + 0x29], eax ; ret
0x00000000006882e1 : add dword ptr [rcx + 0x29], eax ; retf 0x3145
0x00000000007ca101 : add dword ptr [rcx + 0x29], ebx ; ret
0x00000000006c414c : add dword ptr [rcx + 0x29], ecx ; ret
0x00000000006b92d8 : add dword ptr [rcx + 0x29], ecx ; retf
0x0000000000692269 : add dword ptr [rcx + 0x29], ecx ; retf 0x3846
0x000000000063237f : add dword ptr [rcx + 0x39], eax ; fmul qword ptr [rdi] ; xchg eax, ebp ; ret 0xd084
0x0000000000686a50 : add dword ptr [rcx + 0x39], eax ; ret 0x8d0f
0x00000000006bfa41 : add dword ptr [rcx + 0x39], eax ; ret 0x8f0f
0x00000000005fd02c : add dword ptr [rcx + 0x39], ecx ; ret 0xde75
0x00000000006b3d54 : add dword ptr [rcx + 0x39], ecx ; retf
0x0000000000691e62 : add dword ptr [rcx + 0x480f41ca], ecx ; ret
0x00000000007c84f5 : add dword ptr [rcx + 0x51], ebp ; add byte ptr [rax], al ; retf 0x501
0x00000000004c3857 : add dword ptr [rcx + 0x5671e810], ecx ; sbb dword ptr [rax], eax ; leave ; ret
0x00000000004c37c0 : add dword ptr [rcx + 0x5708e810], ecx ; sbb dword ptr [rax], eax ; leave ; ret
0x0000000000686d16 : add dword ptr [rcx + 0x63], ecx ; ret 0x3941
0x0000000000686db3 : add dword ptr [rcx + 0x63], ecx ; ret 0x67e9
0x00000000006a8cb1 : add dword ptr [rcx + 0x63], ecx ; xor byte ptr [rax + 0x63], cl ; adc ch, byte ptr [rcx] ; ret
0x000000000054e634 : add dword ptr [rcx + 0x6a831847], ecx ; sbb byte ptr [rcx], al ; ret
0x00000000006c6324 : add dword ptr [rcx + 0x75682474], ecx ; retf -0x4e17
0x00000000006c62c1 : add dword ptr [rcx + 0x75682474], ecx ; retf 0x14e9
0x00000000007eef0f : add dword ptr [rcx + 0xd], esp ; retf 2
0x000000000067b4db : add dword ptr [rcx + 0xf], eax ; mov dh, 0x47 ; add dword ptr [rax - 0x77], ecx ; ret 0x840f
0x00000000006b3be4 : add dword ptr [rcx + 0xf], eax ; scasd eax, dword ptr [rdi] ; ret 0x3145
0x00000000006b62d3 : add dword ptr [rcx + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret
0x0000000000677dd7 : add dword ptr [rcx + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xba49
0x00000000006ad9fc : add dword ptr [rcx + 1], eax ; ret 0x634d
0x00000000006ba0dc : add dword ptr [rcx + 1], ecx ; vpsadbw xmm9, xmm9, xmmword ptr [rbp + 1] ; ret
0x000000000066b5b4 : add dword ptr [rcx + rcx + 0x48], esi ; add esp, 8 ; ret
0x000000000066b814 : add dword ptr [rcx + rcx + 0x5b], esi ; ret
0x0000000000526dd7 : add dword ptr [rcx + rcx*4 - 0x1e], ecx ; jne 0x526e26 ; call rdx
0x0000000000589754 : add dword ptr [rcx + rcx*4 - 0x1e], ecx ; jne 0x5897a6 ; call rdx
0x0000000000590bb7 : add dword ptr [rcx + rcx*4 - 0x1e], ecx ; jne 0x590c06 ; call rdx
0x0000000000589b69 : add dword ptr [rcx + rcx*4 - 0x1f], ecx ; jne 0x589bbe ; call rcx
0x00000000006c578f : add dword ptr [rcx + rdi - 0x40], ecx ; jne 0x6c5786 ; ret
0x00000000005aa9cb : add dword ptr [rcx + rdx], edi ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040b2d2 : add dword ptr [rcx - 0x15], esi ; or ecx, dword ptr [rax - 0x77] ; ret
0x000000000066ccf6 : add dword ptr [rcx - 0x1c6b73e], ecx ; jne 0x66ccf8 ; ret
0x000000000066ccf5 : add dword ptr [rcx - 0x1c6b73e], ecx ; jne 0x66ccf9 ; ret
0x000000000069e991 : add dword ptr [rcx - 0x1ff7b], ecx ; dec dword ptr [rax + 0x29] ; ret 0x8d48
0x00000000005f7e3c : add dword ptr [rcx - 0x3a], eax ; add al, 0 ; xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004fff48 : add dword ptr [rcx - 0x73], eax ; sbb eax, dword ptr [rcx - 0x7d] ; ret 0xe925
0x00000000006d1361 : add dword ptr [rcx - 0x75], ecx ; xor dword ptr [rax - 0x77], ecx ; ret 0x294c
0x0000000000507c45 : add dword ptr [rcx - 0x7d], eax ; cld ; add cl, byte ptr [rdi] ; lahf ; ret 0x854d
0x000000000064d79c : add dword ptr [rcx - 0x7d], eax ; ret 0x4605
0x000000000064c898 : add dword ptr [rcx - 0x7d], eax ; ret 0x4606
0x000000000064d45a : add dword ptr [rcx - 0x7d], eax ; ret 0x4607
0x000000000064c967 : add dword ptr [rcx - 0x7d], eax ; ret 0x4608
0x00000000006bc1bd : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000694961 : add dword ptr [rcx - 0x7d], ecx ; ret 0x490f
0x0000000000581173 : add dword ptr [rcx], 0x10 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e933a : add dword ptr [rcx], 0xc3830000 ; add ebx, ebp ; ret
0x00000000007e57b7 : add dword ptr [rcx], eax ; adc byte ptr [rax], r8b ; add byte ptr [rsi + 5], bl ; retf 0x101
0x00000000006ae413 : add dword ptr [rcx], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x00000000005399f8 : add dword ptr [rcx], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000006dc970 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000007d0f87 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; retf 0x501
0x00000000007cbc94 : add dword ptr [rcx], eax ; add byte ptr [rcx], 0x33 ; add byte ptr [rax], al ; ret
0x00000000007d214f : add dword ptr [rcx], eax ; add eax, dword ptr [rax] ; ret 0x401
0x0000000000688562 : add dword ptr [rcx], eax ; enter 0x394c, -0x39 ; jne 0x688548 ; ret
0x00000000007d7859 : add dword ptr [rcx], eax ; mov al, byte ptr [rcx] ; add byte ptr es:[rax], al ; ret
0x00000000004f5c03 : add dword ptr [rcx], eax ; ret
0x00000000007ed28b : add dword ptr [rcx], eax ; ret 0x1601
0x00000000007f030f : add dword ptr [rcx], eax ; ret 0x2c01
0x00000000006ad8ba : add dword ptr [rcx], eax ; ret 0x3944
0x00000000007ce3c9 : add dword ptr [rcx], eax ; ret 0x401
0x000000000067999f : add dword ptr [rcx], eax ; ret 0x8b41
0x00000000005b7907 : add dword ptr [rcx], eax ; retf
0x00000000007d28fe : add dword ptr [rcx], eax ; retf 0x1801
0x00000000007ea9f8 : add dword ptr [rcx], eax ; retf 0x1d01
0x00000000007d57ab : add dword ptr [rcx], eax ; retf 0x901
0x00000000007deb40 : add dword ptr [rcx], eax ; xchg eax, edx ; add dword ptr [rcx], edx ; add byte ptr [rax], al ; ret 0x501
0x00000000005765f0 : add dword ptr [rcx], ebp ; ret 0x8b44
0x00000000005870b2 : add dword ptr [rcx], ebp ; ret 0xc189
0x0000000000537a42 : add dword ptr [rcx], ebp ; ret 0xd089
0x000000000050b6cf : add dword ptr [rcx], ebp ; retf -0x2877
0x000000000060eb7a : add dword ptr [rcx], ebp ; retf -0x2e77
0x000000000055c152 : add dword ptr [rcx], ebp ; retf -0x72bf
0x000000000065de96 : add dword ptr [rcx], ebp ; retf -0x76b4
0x000000000065d2d2 : add dword ptr [rcx], ebp ; retf 0xbeb
0x000000000068723e : add dword ptr [rcx], ebp ; sar byte ptr [rcx], 1 ; ret
0x000000000052e3de : add dword ptr [rcx], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007d4b71 : add dword ptr [rcx], ecx ; add byte ptr [rax], al ; ret
0x000000000048f96d : add dword ptr [rcx], edi ; ret
0x00000000004ae0fa : add dword ptr [rcx], edi ; ret 0x127c
0x000000000046843f : add dword ptr [rcx], edi ; ret 0x1c7c
0x00000000004be9df : add dword ptr [rcx], edi ; ret 0x2674
0x00000000005cf8c0 : add dword ptr [rcx], edi ; ret 0x2b7e
0x0000000000489fd8 : add dword ptr [rcx], edi ; ret 0x307e
0x00000000004c3c9d : add dword ptr [rcx], edi ; ret 0x4d0f
0x00000000006b53c1 : add dword ptr [rcx], edi ; ret 0x840f
0x00000000004e7744 : add dword ptr [rcx], edi ; ret 0x850f
0x0000000000572637 : add dword ptr [rcx], edi ; ret 0x8c0f
0x0000000000666c02 : add dword ptr [rcx], edi ; ret 0xd977
0x0000000000677b66 : add dword ptr [rcx], edi ; ret 0xed7c
0x0000000000510e2a : add dword ptr [rcx], edi ; retf
0x0000000000580cdb : add dword ptr [rcx], edi ; retf -0x72f1
0x00000000006bbea4 : add dword ptr [rcx], edi ; ror byte ptr [rcx - 0x71f067bb], 1 ; ret
0x00000000006d0b8d : add dword ptr [rcx], edi ; ror dword ptr [rdi], cl ; pushfq ; ret 0xb60f
0x00000000007deb43 : add dword ptr [rcx], edx ; add byte ptr [rax], al ; ret 0x501
0x00000000004f274b : add dword ptr [rcx], edx ; call rax
0x0000000000540609 : add dword ptr [rcx], esi ; fild dword ptr [rbx + 0x15ff01f5] ; retf
0x00000000006b4c87 : add dword ptr [rcx], esi ; test byte ptr [rax + 0xf], 0xaf ; ret
0x00000000004ae6df : add dword ptr [rcx], esp ; add cl, cl ; ret
0x00000000007d4cc2 : add dword ptr [rcx], esp ; in eax, dx ; add eax, dword ptr [rax] ; ret 0x302
0x0000000000694c11 : add dword ptr [rcx], r15d ; ret
0x00000000006b53c0 : add dword ptr [rcx], r15d ; ret 0x840f
0x0000000000531b5d : add dword ptr [rdi + 0x18], edi ; call 0x6be5d8
0x000000000060740b : add dword ptr [rdi + 0x3d], edi ; call rax
0x00000000007fc02b : add dword ptr [rdi + 0x404], esp ; retf
0x00000000006a60cc : add dword ptr [rdi + 0xa], esi ; add rsp, 8 ; ret
0x000000000066b330 : add dword ptr [rdi + 0xc90], 1 ; ret
0x00000000007f9097 : add dword ptr [rdi + 0xd02], ebp ; retf 0x502
0x0000000000507d71 : add dword ptr [rdi + 4], 1 ; lock add dword ptr [rdi], 1 ; ret
0x0000000000689b91 : add dword ptr [rdi + 4], 1 ; ret
0x0000000000671bd6 : add dword ptr [rdi + rax + 0x5b], esi ; ret
0x00000000007ee9df : add dword ptr [rdi + rax], ebx ; ret 2
0x000000000040e128 : add dword ptr [rdi + rbp - 0x15], esi ; cmp byte ptr [rax - 0x77], cl ; ret
0x00000000007ebf9d : add dword ptr [rdi + rdi*8], edx ; or byte ptr [rax], al ; ret
0x000000000079aa26 : add dword ptr [rdi + rdx*2], 0xa ; ret
0x00000000007f2e09 : add dword ptr [rdi - 0x3b], ebp ; sub al, 6 ; in eax, -0x10 ; add dword ptr [rax], eax ; retf
0x00000000007f44a9 : add dword ptr [rdi - 0x5cf9fe18], ebx ; pushfq ; add dword ptr [rax], eax ; retf
0x000000000068a761 : add dword ptr [rdi - 1], ebx ; dec dword ptr [rax - 0x77] ; ret
0x0000000000747439 : add dword ptr [rdi], 0 ; retf -0xb3e
0x0000000000747391 : add dword ptr [rdi], 0xf4bf5000 ; call rax
0x00000000007473a1 : add dword ptr [rdi], 0xf4bfec00 ; call qword ptr [rax]
0x0000000000609197 : add dword ptr [rdi], 0xfa834800 ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000507d61 : add dword ptr [rdi], 1 ; ret
0x00000000007a791a : add dword ptr [rdi], 2 ; push rdx ; ret
0x000000000076a5ef : add dword ptr [rdi], 2 ; ret 0xc0a
0x00000000007ac9da : add dword ptr [rdi], 2 ; retf 0x70c
0x000000000074b892 : add dword ptr [rdi], 3 ; ret
0x0000000000796766 : add dword ptr [rdi], 3 ; ret 0xc01
0x000000000075d47e : add dword ptr [rdi], 3 ; ret 0xc02
0x00000000007540f6 : add dword ptr [rdi], 3 ; ret 0xc03
0x00000000007953be : add dword ptr [rdi], 3 ; retf
0x000000000075a8ce : add dword ptr [rdi], 3 ; retf 0xc02
0x00000000007d0eac : add dword ptr [rdi], eax ; retf
0x00000000007eb305 : add dword ptr [rdi], ebp ; add byte ptr [rax], al ; retf 0x501
0x0000000000547ea0 : add dword ptr [rdi], ecx ; mov dh, 0xfb ; jne 0x547ecc ; mov rsi, rbp ; call rax
0x0000000000606e76 : add dword ptr [rdi], ecx ; mov esi, 0xe88948ff ; jne 0x606ed9 ; call rax
0x0000000000582f16 : add dword ptr [rdi], ecx ; ret
0x000000000069c36e : add dword ptr [rdi], ecx ; ret 0x6348
0x00000000007d6071 : add dword ptr [rdi], ecx ; retf
0x00000000006a97f6 : add dword ptr [rdi], ecx ; retf -0x2dcf
0x00000000007d6d5f : add dword ptr [rdi], ecx ; retf 0x302
0x00000000006bf5c5 : add dword ptr [rdi], ecx ; sahf ; sar dword ptr [rcx], 0x42 ; add al, 0xf ; popfq ; ret 0xd184
0x000000000061ff79 : add dword ptr [rdi], ecx ; test bl, dl ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004c5354 : add dword ptr [rdi], ecx ; test cl, al ; add byte ptr [rax], al ; add cl, ch ; retf
0x0000000000656892 : add dword ptr [rdi], ecx ; test dword ptr [rax + 0xc], eax ; add byte ptr [rax], al ; call rax
0x00000000004f7fce : add dword ptr [rdi], ecx ; test dword ptr [rax + 1], esp ; add byte ptr [rax], al ; call rax
0x000000000054a3df : add dword ptr [rdi], ecx ; test dword ptr [rbp + 1], edx ; add byte ptr [rax], al ; call rax
0x00000000006a7561 : add dword ptr [rdi], ecx ; test dword ptr [rbp + 1], esi ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x00000000005312b1 : add dword ptr [rdi], ecx ; test dword ptr [rbp + 1], esp ; add byte ptr [rax], al ; call rax
0x00000000006a761c : add dword ptr [rdi], ecx ; test dword ptr [rbp], edi ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x000000000055270e : add dword ptr [rdi], ecx ; test dword ptr [rbx + 0xd], esp ; add byte ptr [rax], al ; call rax
0x0000000000645f99 : add dword ptr [rdi], ecx ; test dword ptr [rbx - 0x4100005c], ebp ; retf
0x000000000066d0ec : add dword ptr [rdi], ecx ; test dword ptr [rbx - 0x76ffffff], eax ; out dx, al ; call rax
0x0000000000672a8f : add dword ptr [rdi], ecx ; test dword ptr [rcx + 1], ebp ; add byte ptr [rax], al ; call rax
0x000000000051ab28 : add dword ptr [rdi], ecx ; test dword ptr [rcx + 1], esp ; add byte ptr [rax], al ; call rax
0x0000000000530fb2 : add dword ptr [rdi], ecx ; test dword ptr [rcx + 4], esi ; add byte ptr [rax], al ; call rax
0x00000000004f802c : add dword ptr [rdi], ecx ; test dword ptr [rcx + rax], ebx ; add byte ptr [rax], al ; call rax
0x00000000005187ce : add dword ptr [rdi], ecx ; test dword ptr [rdi + 1], ecx ; add byte ptr [rax], al ; call rax
0x0000000000637f5c : add dword ptr [rdi], ecx ; test dword ptr [rdi + 3], ebx ; add byte ptr [rax], al ; call rax
0x0000000000653fbd : add dword ptr [rdi], ecx ; test dword ptr [rdx + 0x21], edi ; add byte ptr [rax], al ; call rax
0x000000000054eb46 : add dword ptr [rdi], ecx ; test dword ptr [rdx + 3], ebx ; add byte ptr [rax], al ; call rax
0x000000000052b915 : add dword ptr [rdi], ecx ; test dword ptr [rdx + 3], esi ; add byte ptr [rax], al ; call rax
0x000000000064525c : add dword ptr [rdi], ecx ; test dword ptr [rdx], eax ; ret 0xffff
0x0000000000674c27 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x76fffffc], eax ; out dx, al ; call rax
0x000000000066d10c : add dword ptr [rdi], ecx ; test dword ptr [rsi + 1], edx ; add byte ptr [rax], al ; mov esi, ebp ; call rax
0x00000000006452e1 : add dword ptr [rdi], ecx ; test ebx, ebp ; ret 0xffff
0x000000000069b33c : add dword ptr [rdi], ecx ; test ebx, ecx ; retf
0x00000000005d5280 : add dword ptr [rdi], ecx ; test edx, ecx ; add eax, dword ptr [rax] ; add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xa
0x0000000000640327 : add dword ptr [rdi], ecx ; test esp, ebp ; pop rbp ; add byte ptr [rax], al ; call rax
0x0000000000662987 : add dword ptr [rdi], ecx ; xchg byte ptr [rdx - 0x76fffff6], bh ; ret 0xe283
0x00000000006a7c1a : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0x8548
0x0000000000674c96 : add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x23c
0x0000000000694795 : add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xfb83
0x00000000005f3ef4 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x00000000006c5aa5 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8040
0x00000000006c4c84 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8440
0x0000000000689ba4 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8548
0x0000000000691551 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd184
0x00000000005645b2 : add dword ptr [rdi], edx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007f5cbe : add dword ptr [rdi], edx ; retf 0x21
0x00000000007dec6c : add dword ptr [rdx + 0x1101], ecx ; ret 0x501
0x00000000007deb41 : add dword ptr [rdx + 0x1101], edx ; ret 0x501
0x00000000007e5c0c : add dword ptr [rdx + 0x1604], esi ; retf
0x0000000000509161 : add dword ptr [rdx + 0x17], ebp ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007d785a : add dword ptr [rdx + 0x2601], ecx ; ret
0x00000000005eb6db : add dword ptr [rdx + 0x41], esi ; add bh, bh ; ror cl, 1 ; ret
0x00000000007d54f9 : add dword ptr [rdx + 0x502], edi ; retf 0x502
0x00000000007f2fd0 : add dword ptr [rdx + 0x63ee901], esi ; ret 0x1e2
0x00000000007f963b : add dword ptr [rdx + 0xd], edx ; add al, 0 ; add byte ptr [rbx + 5], al ; ret 2
0x00000000007dfa27 : add dword ptr [rdx + 0xf02], esi ; ret
0x0000000000694a70 : add dword ptr [rdx + 0xf], eax ; mov dh, 0x14 ; sbb byte ptr [rbp + 0x39], al ; retf -0x77bd
0x00000000006a8fc1 : add dword ptr [rdx + r10*2 + 0x55], r10d ; ret
0x00000000007eddb3 : add dword ptr [rdx + rax + 0x5028800], esi ; ret
0x0000000000632ecb : add dword ptr [rdx + rax + 0x5b], esi ; ret
0x00000000007fa290 : add dword ptr [rdx + rax - 0xfa9e1d], ebx ; ret
0x00000000007b755e : add dword ptr [rdx + rax], -9 ; ret
0x000000000077b2ee : add dword ptr [rdx + rax], 0x4a ; ret
0x00000000007792ea : add dword ptr [rdx + rax], 0x4e ; ret
0x00000000007985ee : add dword ptr [rdx + rax], 0x68 ; ret
0x0000000000678153 : add dword ptr [rdx + rcx + 0x48], esi ; add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000687f85 : add dword ptr [rdx + rcx - 0x7d], esi ; ret
0x00000000004b70ff : add dword ptr [rdx + rdi*8 - 1], eax ; leave ; ret
0x00000000007cecd0 : add dword ptr [rdx + rdi*8], eax ; add al, byte ptr [rax] ; ret 0x401
0x00000000006a8fc2 : add dword ptr [rdx + rdx*2 + 0x55], edx ; ret
0x0000000000737a09 : add dword ptr [rdx], 0 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffd3
0x0000000000773b1d : add dword ptr [rdx], 0 ; push rax ; jno 0x773b04 ; jmp rcx
0x0000000000737a11 : add dword ptr [rdx], 0 ; salc ; ret 0xffd3
0x000000000077688d : add dword ptr [rdx], 0x41 ; ret
0x00000000007bc814 : add dword ptr [rdx], 0x4d ; ret
0x00000000007ab264 : add dword ptr [rdx], 0x50 ; ret
0x00000000007bc8b4 : add dword ptr [rdx], 0x52 ; ret
0x00000000007b7904 : add dword ptr [rdx], 0x53 ; ret
0x000000000076ae4c : add dword ptr [rdx], 0x56 ; ret
0x00000000007bc87c : add dword ptr [rdx], 0x58 ; ret
0x000000000076cc5c : add dword ptr [rdx], 0x59 ; ret
0x0000000000773da4 : add dword ptr [rdx], 0x5a ; ret
0x0000000000772b44 : add dword ptr [rdx], 0x5b ; ret
0x0000000000776984 : add dword ptr [rdx], 0x5d ; ret
0x00000000007a510c : add dword ptr [rdx], 0x60 ; ret
0x0000000000771f34 : add dword ptr [rdx], 0x61 ; ret
0x00000000007bec84 : add dword ptr [rdx], 0x69 ; ret
0x00000000007a663c : add dword ptr [rdx], 0x6e ; ret
0x00000000007ae854 : add dword ptr [rdx], 0x71 ; ret
0x0000000000776884 : add dword ptr [rdx], 0x72 ; ret
0x000000000079b0bc : add dword ptr [rdx], 0x75 ; ret
0x000000000077c6dc : add dword ptr [rdx], 0x7a ; ret
0x000000000050bfaf : add dword ptr [rdx], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000007a709c : add dword ptr [rdx], 2 ; lodsd eax, dword ptr [rsi] ; ret
0x00000000007bbcb0 : add dword ptr [rdx], 2 ; ret
0x0000000000779e08 : add dword ptr [rdx], 3 ; retf 0xa01
0x0000000000609dd3 : add dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x00000000005e26f3 : add dword ptr [rdx], eax ; call rax
0x00000000007e219d : add dword ptr [rdx], eax ; ret
0x00000000007c71cf : add dword ptr [rdx], eax ; retf
0x00000000007b3746 : add dword ptr [rdx], eax ; retf 0xe0a
0x000000000051e47e : add dword ptr [rdx], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e9653 : add dword ptr [rdx], ebx ; add eax, 0x4c000004 ; retf
0x00000000007ee5c7 : add dword ptr [rdx], ebx ; or dword ptr [rax + rax], eax ; add byte ptr [rbx], bh ; lea eax, dword ptr [rdx] ; retf 0x102
0x00000000007ea3cb : add dword ptr [rdx], ebx ; xchg eax, ecx ; sbb dword ptr [rax], eax ; ret
0x00000000007b6b4e : add dword ptr [rdx], ecx ; or al, 7 ; or byte ptr [rbx + rcx + 2], al ; ret
0x00000000007917d6 : add dword ptr [rdx], ecx ; ret
0x00000000007d5b67 : add dword ptr [rdx], ecx ; ret 3
0x0000000000560a8e : add dword ptr [rdx], edx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007fad2e : add dword ptr [rdx], esi ; fsub dword ptr [rbp] ; retf
0x00000000007c9f48 : add dword ptr [rdx], esi ; stosb byte ptr [rdi], al ; add eax, dword ptr [rax] ; ret
0x00000000007fab22 : add dword ptr [rip + 0x1401a6dc], eax ; ret
0x00000000007f3fba : add dword ptr [rip + 0x18a91], eax ; retf
0x00000000007fa7f4 : add dword ptr [rip + 0x190f8], eax ; ret
0x00000000007f3b44 : add dword ptr [rip + 0x195ac], eax ; retf
0x00000000007cab25 : add dword ptr [rip + 0x199d3], eax ; ret 0x199
0x00000000007f4463 : add dword ptr [rip + 0x19ca3], eax ; ret 0x1e6
0x00000000007f465c : add dword ptr [rip + 0x19ca3], eax ; ret 0x1f3
0x00000000007f39fc : add dword ptr [rip + 0x19ca3], eax ; retf
0x00000000007f3f48 : add dword ptr [rip + 0x19ca3], eax ; stosd dword ptr [rdi], eax ; ret
0x00000000007f3abc : add dword ptr [rip + 0x19ca3], ebp ; ret
0x00000000007f36f7 : add dword ptr [rip + 0x19ca3], ecx ; ret 0x18a
0x00000000007cab65 : add dword ptr [rip + 0x19ed2], eax ; ret 0x19e
0x00000000007faa97 : add dword ptr [rip + 0x1a381], eax ; ret
0x00000000007faabe : add dword ptr [rip + 0x1a4da], eax ; ret 0x1a3
0x00000000007f4022 : add dword ptr [rip + 0x1b18e], eax ; xchg eax, ecx ; retf 0x501
0x00000000007f3c6d : add dword ptr [rip + 0x1b1a2], eax ; ret 0x1b0
0x00000000007f3d05 : add dword ptr [rip + 0x1b590], eax ; retf 0x1b4
0x00000000007fae21 : add dword ptr [rip + 0x1bcfe], eax ; ret 0x1bc
0x00000000007f3f40 : add dword ptr [rip + 0x1c3b8], eax ; xchg eax, esp ; ret
0x00000000007f3f71 : add dword ptr [rip + 0x1c4e0], eax ; ret
0x00000000007f402a : add dword ptr [rip + 0x1c9a9], eax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; retf 0x501
0x00000000007f406a : add dword ptr [rip + 0x1cae7], eax ; jmp 0x7f4044
0x00000000007f4052 : add dword ptr [rip + 0x1cbc7], eax ; xchg eax, ebx ; retf
0x00000000007f4072 : add dword ptr [rip + 0x1cc95], eax ; cmc ; retf
0x00000000007f43d3 : add dword ptr [rip + 0x1e2c2], eax ; jmp rdx
0x00000000007f443b : add dword ptr [rip + 0x1e5f5], eax ; ret 0x1e5
0x00000000007f4564 : add dword ptr [rip + 0x1eef9], eax ; retf 0x1ed
0x00000000007f45dc : add dword ptr [rip + 0x1f1a0], eax ; ret
0x00000000007f478c : add dword ptr [rip + 0x1fcdb], eax ; ret
0x0000000000404558 : add dword ptr [rip + 0x5d5b5800], ebp ; ret
0x00000000007ca8df : add dword ptr [rip + 0x6ae20cb], eax ; ret
0x000000000079b8bd : add dword ptr [rip - 0x18a1ce00], eax ; jmp qword ptr [rcx]
0x000000000073f941 : add dword ptr [rip - 0x1bb6d000], eax ; call rax
0x000000000073f921 : add dword ptr [rip - 0x1bbbd000], eax ; jmp qword ptr [rax]
0x00000000007d5bf3 : add dword ptr [rip - 0x3afafe4c], eax ; add al, byte ptr [rax] ; retf
0x00000000007dc405 : add dword ptr [rip - 0x51fafd76], eax ; add dword ptr [rax], edx ; retf 1
0x00000000007e4bc3 : add dword ptr [rip - 0x56fafe30], eax ; add dword ptr [rsi], eax ; retf
0x00000000004c2b6e : add dword ptr [rip - 0x70410000], eax ; ret 0x6e
0x000000000050e1df : add dword ptr [rip - 0x76b7ffe9], esp ; ret
0x00000000007e152c : add dword ptr [rip - 0x77fffb39], eax ; add dword ptr [rbx], eax ; ret 4
0x00000000007f886a : add dword ptr [rip - 0x7ffcef2c], eax ; add dl, byte ptr [rdx] ; ret
0x00000000007f9387 : add dword ptr [rip - 0x7ffffc3f], eax ; add cl, byte ptr [rax] ; ret
0x00000000007e1699 : add dword ptr [rsi + 0x1301], edx ; retf 0x501
0x00000000007e14cc : add dword ptr [rsi + 0x3903], eax ; retf
0x000000000052115f : add dword ptr [rsi + 0x39], esp ; ret
0x00000000006be051 : add dword ptr [rsi + 0x39], esp ; ret 0xf175
0x000000000052e960 : add dword ptr [rsi + 0x39], esp ; ret 0xf275
0x00000000006b8295 : add dword ptr [rsi + 0x39], esp ; retf 0x137d
0x00000000006b6e70 : add dword ptr [rsi + 0x41], esp ; mov dword ptr [rdx + 0x22], eax ; ret
0x00000000007e965e : add dword ptr [rsi + 0x502], ebp ; ret
0x00000000007c605f : add dword ptr [rsi + 0x502], esi ; retf
0x00000000007f9032 : add dword ptr [rsi + 0xd02], ebp ; retf
0x0000000000519f80 : add dword ptr [rsi + 0xd], edi ; sub edx, 1 ; ret
0x0000000000526be7 : add dword ptr [rsi + 0xe], edi ; lea edx, dword ptr [rsi - 1] ; mov rax, rdi ; ret
0x000000000066b477 : add dword ptr [rsi + rax + 0x5b], esi ; ret
0x00000000007f653f : add dword ptr [rsi + rax*8], eax ; sbb dword ptr [rax], eax ; ret
0x00000000007f3f91 : add dword ptr [rsi - 0x25], eax ; ret
0x00000000007f2bbd : add dword ptr [rsi*4 - 0x612af9ec], esp ; add dword ptr [rax], eax ; ret 0x514
0x0000000000744431 : add dword ptr [rsi], 0 ; adc al, 0x12 ; out dx, al ; jmp qword ptr [rax]
0x00000000007443a1 : add dword ptr [rsi], 0xedf8fc00 ; jmp qword ptr [rax]
0x00000000007443c1 : add dword ptr [rsi], 0xee02d800 ; call rax
0x00000000007b38ed : add dword ptr [rsi], 0xef257000 ; call qword ptr [rcx]
0x000000000076c8e8 : add dword ptr [rsi], 2 ; ret
0x000000000074d724 : add dword ptr [rsi], 2 ; ret 0x70c
0x000000000079897c : add dword ptr [rsi], 2 ; ret 0xe0a
0x000000000075d22c : add dword ptr [rsi], 2 ; retf
0x0000000000762eec : add dword ptr [rsi], 2 ; retf 0x70c
0x00000000007a0800 : add dword ptr [rsi], 2 ; stosb byte ptr [rdi], al ; ret
0x0000000000753b34 : add dword ptr [rsi], 3 ; ret 0xc03
0x00000000007ef917 : add dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x00000000007f5719 : add dword ptr [rsi], eax ; fisub dword ptr [rcx] ; add cl, ah ; add dword ptr [rax], ebp ; retf 0x21
0x00000000007de0ff : add dword ptr [rsi], eax ; retf
0x00000000007d4cb6 : add dword ptr [rsi], eax ; xchg byte ptr [rax + rax], al ; retf
0x00000000007f980b : add dword ptr [rsi], ebx ; adc byte ptr [rdx], bl ; add byte ptr [rax], al ; sub al, 0x31 ; ret 0x101
0x00000000007d606c : add dword ptr [rsi], ecx ; add byte ptr [rax], al ; stosb byte ptr [rdi], al ; add dword ptr [rdi], ecx ; retf
0x00000000007e3c0c : add dword ptr [rsi], ecx ; cdq ; add dword ptr [rax], eax ; retf
0x00000000007e459c : add dword ptr [rsi], ecx ; cwde ; add dword ptr [rax], eax ; retf 0x501
0x00000000007e4bbd : add dword ptr [rsi], ecx ; retf
0x00000000007bf9b2 : add dword ptr [rsi], edi ; ret
0x00000000007c431e : add dword ptr [rsi], edi ; retf
0x000000000055e453 : add dword ptr [rsi], edx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007f8fa1 : add dword ptr [rsi], edx ; add byte ptr [rax], al ; ret
0x00000000007e5bec : add dword ptr [rsi], edx ; add byte ptr [rax], al ; rol byte ptr [rcx], cl ; test dword ptr [rcx], eax ; ret
0x00000000004a2786 : add dword ptr [rsi], edx ; call rax
0x00000000007ede72 : add dword ptr [rsi], edx ; or eax, 0x1de ; ret
0x00000000007c5312 : add dword ptr [rsi], esi ; add byte ptr [rax], al ; ret 0x502
0x00000000007d785c : add dword ptr [rsi], esp ; add byte ptr [rax], al ; ret
0x00000000005307d4 : add dword ptr [rsp + rax*2 - 0x7af0f7dc], eax ; retf 0
0x0000000000539018 : add dword ptr cs:[rax], eax ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000075e63d : add dword ptr cs:[rax], eax ; xor al, 0x14 ; sar bh, cl ; retf
0x000000000049074e : add dword ptr ds:[rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000538a15 : add dword ptr ds:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000005019b9 : add dword ptr ds:[rax], eax ; add byte ptr [rsi + 1], bh ; call rax
0x000000000075f58d : add dword ptr ds:[rax], eax ; or bl, r10b ; call qword ptr [rbx]
0x0000000000769cf4 : add dword ptr es:[rax], eax ; add byte ptr [rsp + rbp*8], al ; retf 0x7c
0x000000000075de25 : add dword ptr es:[rax], eax ; pop rax ; not ecx ; call rdx
0x000000000075de05 : add dword ptr es:[rax], eax ; push rsp ; not ecx ; jmp qword ptr [rbx]
0x000000000075dd4d : add dword ptr es:[rax], eax ; ret 0xd1f5
0x000000000075ed95 : add dword ptr ss:[rax], eax ; test byte ptr [rbp - 0x2e], dh ; jmp qword ptr [rsi]
0x00000000004f7c6c : add eax, 0x10442c6 ; ret
0x00000000007d5c6b : add eax, 0x105f321 ; ret 0x1805
0x00000000007e0fdb : add eax, 0x119d11 ; ret 0x605
0x00000000007d501f : add eax, 0x11f205 ; ret
0x00000000007fab23 : add eax, 0x1401a6dc ; ret
0x00000000007f2b3c : add eax, 0x15019d8f ; retf 0x60f
0x00000000006b238c : add eax, 0x15ff0035 ; retf
0x00000000007e5c0b : add eax, 0x1604b201 ; add byte ptr [rax], al ; retf
0x00000000007ec9c6 : add eax, 0x1604b501 ; add byte ptr [rax], al ; retf
0x00000000007e5be0 : add eax, 0x165801 ; add byte ptr [rcx + 0x30], dh ; ret
0x00000000007c8051 : add eax, 0x179405 ; retf 0x505
0x00000000007bf9ae : add eax, 0x185036a ; ret
0x00000000007cd539 : add eax, 0x18a114 ; ret 0x505
0x00000000007f3fbb : add eax, 0x18a91 ; retf
0x00000000007c431a : add eax, 0x18d0000 ; retf
0x000000000061500a : add eax, 0x19 ; mov rdi, rax ; call 0x6a1a98
0x00000000007fa7f5 : add eax, 0x190f8 ; ret
0x00000000007fa4a9 : add eax, 0x193c7 ; retf
0x00000000007f3b45 : add eax, 0x195ac ; retf
0x00000000007cab26 : add eax, 0x199d3 ; ret 0x199
0x00000000007f2d26 : add eax, 0x19ca3 ; mov bl, 0x23 ; pop rsi ; ret 0x1d7
0x00000000007f4464 : add eax, 0x19ca3 ; ret 0x1e6
0x00000000007f465d : add eax, 0x19ca3 ; ret 0x1f3
0x00000000007f2e61 : add eax, 0x19ca3 ; ret 0x5d30
0x00000000007f39fd : add eax, 0x19ca3 ; retf
0x00000000007f3f49 : add eax, 0x19ca3 ; stosd dword ptr [rdi], eax ; ret
0x00000000007cab66 : add eax, 0x19ed2 ; ret 0x19e
0x00000000007ca99b : add eax, 0x1a08f ; call 0xffffffffc3883b08
0x00000000007ca9cf : add eax, 0x1a1ed ; xchg eax, edx ; outsb dx, byte ptr [rsi] ; loope 0x7ca9e3 ; ret
0x00000000007faa98 : add eax, 0x1a381 ; ret
0x00000000007faabf : add eax, 0x1a4da ; ret 0x1a3
0x00000000007f32b5 : add eax, 0x1b09e ; ret 0x3361
0x00000000007f4023 : add eax, 0x1b18e ; xchg eax, ecx ; retf 0x501
0x00000000007f3c6e : add eax, 0x1b1a2 ; ret 0x1b0
0x00000000007dac66 : add eax, 0x1b40000 ; adc edi, ecx ; add dword ptr [rax], eax ; retf 0x501
0x00000000007f3d06 : add eax, 0x1b590 ; retf 0x1b4
0x00000000007cf4ba : add eax, 0x1b60000 ; adc dl, dl ; add dword ptr [rax], eax ; retf
0x0000000000451d41 : add eax, 0x1b8 ; add cl, cl ; ret
0x00000000006760ba : add eax, 0x1b8 ; add rsp, 8 ; ret
0x00000000006760a1 : add eax, 0x1b8 ; ret
0x00000000007fae22 : add eax, 0x1bcfe ; ret 0x1bc
0x00000000007f3f41 : add eax, 0x1c3b8 ; xchg eax, esp ; ret
0x00000000007f3f72 : add eax, 0x1c4e0 ; ret
0x0000000000677541 : add eax, 0x1c694800 ; and al, 0 ; retf 0x3b9a
0x00000000007dda94 : add eax, 0x1c8205 ; retf
0x00000000007f402b : add eax, 0x1c9a9 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; retf 0x501
0x00000000007f406b : add eax, 0x1cae7 ; jmp 0x7f4043
0x00000000007f4053 : add eax, 0x1cbc7 ; xchg eax, ebx ; retf
0x00000000007f4073 : add eax, 0x1cc95 ; cmc ; retf
0x000000000066b18a : add eax, 0x1e0 ; add rsp, 8 ; ret
0x000000000066b171 : add eax, 0x1e0 ; ret
0x00000000007f43d4 : add eax, 0x1e2c2 ; jmp rdx
0x00000000007f443c : add eax, 0x1e5f5 ; ret 0x1e5
0x0000000000678b87 : add eax, 0x1e88300 ; add rsp, 8 ; ret
0x000000000060c3f9 : add eax, 0x1e88348 ; ret
0x00000000007f4565 : add eax, 0x1eef9 ; retf 0x1ed
0x00000000007f45dd : add eax, 0x1f1a0 ; ret
0x00000000007f478d : add eax, 0x1fcdb ; ret
0x00000000006b2459 : add eax, 0x1ff ; and rax, 0xffffffffffffffc0 ; ret
0x00000000005198d8 : add eax, 0x20408b48 ; ret
0x000000000052b1f4 : add eax, 0x20468b48 ; ret
0x00000000007ba56c : add eax, 0x2300e44 ; ret
0x00000000007a0260 : add eax, 0x2300e47 ; retf
0x000000000043ecec : add eax, 0x24 ; mov rdi, rax ; call 0x43af04
0x000000000045aac1 : add eax, 0x24 ; mov rdi, rax ; call 0x457518
0x00000000004640da : add eax, 0x24 ; mov rdi, rax ; call 0x4603ce
0x000000000046ddda : add eax, 0x24 ; mov rdi, rax ; call 0x46a0ce
0x000000000049e17e : add eax, 0x24 ; mov rdi, rax ; call 0x49a44a
0x00000000007764b8 : add eax, 0x2500e47 ; retf
0x00000000007cbf53 : add eax, 0x2702b100 ; ret 6
0x00000000005198a8 : add eax, 0x28408b48 ; ret
0x000000000052b104 : add eax, 0x28468b48 ; ret
0x000000000067c624 : add eax, 0x2847b60f ; ret
0x00000000005280d1 : add eax, 0x28c48348 ; ret
0x00000000005870af : add eax, 0x2901518d ; ret 0xc189
0x0000000000677934 : add eax, 0x2944c931 ; retf -0x2d95
0x00000000007fb3cb : add eax, 0x2c001 ; add byte ptr [rax], al ; retf
0x00000000007c4fe6 : add eax, 0x2c70000 ; je 0x7c4fb1 ; add eax, dword ptr [rax] ; retf 0x1403
0x00000000007c56ba : add eax, 0x2c70000 ; je 0x7c5685 ; add eax, dword ptr [rax] ; retf 0x1403
0x00000000007db9a7 : add eax, 0x302eb00 ; ret
0x00000000007cd06d : add eax, 0x304eb16 ; retf 0x505
0x00000000007e5ae1 : add eax, 0x30afe05 ; retf
0x00000000007f0db8 : add eax, 0x30bef06 ; ret 0x7105
0x00000000007d1a03 : add eax, 0x3104f800 ; add byte ptr [rax], al ; retf 0x605
0x00000000007dba29 : add eax, 0x324f712 ; ret 0x505
0x00000000006d111a : add eax, 0x331721 ; mfence ; ret
0x00000000006cea0a : add eax, 0x334251 ; add rsp, 8 ; ret
0x00000000006ce022 : add eax, 0x334c99 ; ret
0x00000000006cde92 : add eax, 0x334e31 ; ret
0x00000000006cdea2 : add eax, 0x334e39 ; ret
0x00000000006cde82 : add eax, 0x334e49 ; ret
0x00000000006cbba6 : add eax, 0x336d15 ; add rsp, 8 ; jmp rax
0x00000000006c6f98 : add eax, 0x33b943 ; jmp rax
0x00000000006c6f08 : add eax, 0x33b9d3 ; jmp rax
0x00000000006c6e88 : add eax, 0x33ba53 ; jmp rax
0x00000000006cdc61 : add eax, 0x33f6fa ; ret
0x00000000006c065d : add eax, 0x34225e ; pop rbx ; jmp rax
0x00000000006c05e8 : add eax, 0x3422f3 ; jmp rax
0x00000000006c04f8 : add eax, 0x3423e3 ; jmp rax
0x00000000006c0418 : add eax, 0x3424c3 ; jmp rax
0x00000000006bfc68 : add eax, 0x342c73 ; jmp rax
0x00000000006bfab2 : add eax, 0x342fcd ; sub byte ptr [rax], 0 ; ret
0x00000000006bf33d : add eax, 0x34372a ; add rsp, 8 ; ret
0x00000000006bed29 : add eax, 0x343b7a ; jmp rax
0x00000000006bed02 : add eax, 0x343bd9 ; jmp rax
0x00000000006bec22 : add eax, 0x343c61 ; jmp rax
0x00000000006bec12 : add eax, 0x343c81 ; jmp rax
0x00000000006bebd2 : add eax, 0x343cb9 ; jmp rax
0x00000000006bebc2 : add eax, 0x343cd9 ; jmp rax
0x00000000006be9bd : add eax, 0x343eee ; add rsp, 8 ; jmp rax
0x00000000006bec8e : add eax, 0x34e135 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000006bea42 : add eax, 0x34e299 ; ret
0x00000000006bea32 : add eax, 0x34e2a1 ; ret
0x00000000006becc7 : add eax, 0x34e394 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000006b25a8 : add eax, 0x350333 ; jmp rax
0x00000000006b2429 : add eax, 0x3504b2 ; jmp rax
0x00000000006b23e6 : add eax, 0x3504f5 ; add rsp, 8 ; jmp rax
0x00000000006b2398 : add eax, 0x350543 ; jmp rax
0x00000000006b2281 : add eax, 0x3509a6 ; ret
0x00000000006b225c : add eax, 0x3509cb ; ret
0x00000000006b17d6 : add eax, 0x350fad ; test al, 1 ; jne 0x6b17fb ; call rax
0x00000000006ad4ac : add eax, 0x35540f ; add rsp, 8 ; jmp rax
0x00000000006b351c : add eax, 0x356daf ; add rsp, 8 ; ret
0x00000000006aa8f5 : add eax, 0x357fe6 ; jmp rax
0x00000000006b207b : add eax, 0x358244 ; ret
0x00000000006a8aa8 : add eax, 0x359e13 ; jmp rax
0x00000000006a832f : add eax, 0x35a334 ; ret
0x00000000006a8228 : add eax, 0x35a6b3 ; jmp rax
0x00000000006a7e30 : add eax, 0x35aa8b ; pop rbx ; jmp rax
0x00000000006a7c2e : add eax, 0x35acad ; jmp rax
0x00000000006bcaa2 : add eax, 0x35c8d00 ; add al, 0x83 ; ret
0x00000000006a5fb8 : add eax, 0x35c923 ; jmp rax
0x00000000006a5f18 : add eax, 0x35c9c3 ; jmp rax
0x00000000006a45bb : add eax, 0x35e300 ; jmp rax
0x00000000006a45a4 : add eax, 0x35e317 ; jmp rax
0x00000000006a40b6 : add eax, 0x35e805 ; add rsp, 8 ; jmp rax
0x00000000006a4046 : add eax, 0x35e875 ; add rsp, 8 ; jmp rax
0x00000000006a18d6 : add eax, 0x360fe5 ; add rsp, 8 ; jmp rax
0x00000000006a0dfc : add eax, 0x361abf ; add rsp, 8 ; jmp rax
0x00000000006a07a6 : add eax, 0x362115 ; add rsp, 8 ; jmp rax
0x00000000006a7d16 : add eax, 0x36218d ; pop rbx ; ret
0x000000000069baf6 : add eax, 0x366dc5 ; add rsp, 8 ; jmp rax
0x000000000069e538 : add eax, 0x36b7eb ; pop rbx ; ret
0x000000000069c77f : add eax, 0x36d45c ; pop rbx ; ret
0x000000000069f501 : add eax, 0x36de8e ; test eax, eax ; jne 0x69f519 ; ret
0x0000000000692612 : add eax, 0x36fe31 ; ret
0x00000000006925f2 : add eax, 0x36fe59 ; ret
0x00000000006925d2 : add eax, 0x36fe69 ; ret
0x00000000006904d8 : add eax, 0x372403 ; jmp rax
0x00000000006905d1 : add eax, 0x372652 ; ret
0x000000000068fe06 : add eax, 0x372ab5 ; add rsp, 8 ; jmp rax
0x000000000068ebff : add eax, 0x3737cc ; ret
0x000000000068e1f8 : add eax, 0x3746e3 ; jmp rax
0x0000000000694882 : add eax, 0x375239 ; add rsp, 8 ; ret
0x0000000000693729 : add eax, 0x3761d2 ; add rsp, 8 ; ret
0x00000000006905b2 : add eax, 0x379351 ; add rax, 0x70 ; ret
0x00000000006905a2 : add eax, 0x379361 ; ret
0x0000000000690592 : add eax, 0x379379 ; add rax, 0x70 ; ret
0x0000000000690572 : add eax, 0x379389 ; add rax, 0x70 ; ret
0x0000000000690582 : add eax, 0x379389 ; ret
0x0000000000690562 : add eax, 0x379399 ; ret
0x00000000006879e8 : add eax, 0x37aed3 ; add rsp, 8 ; jmp rax
0x0000000000685f48 : add eax, 0x37c993 ; jmp rax
0x0000000000684cd6 : add eax, 0x37dbe5 ; add rsp, 8 ; jmp rax
0x0000000000681b90 : add eax, 0x380d2b ; add rsp, 8 ; jmp rax
0x0000000000681a88 : add eax, 0x380e53 ; jmp rax
0x000000000068192a : add eax, 0x380fb1 ; jmp rax
0x0000000000688268 : add eax, 0x38142b ; ret
0x00000000007c67ef : add eax, 0x38213f6 ; retf 0x2a
0x0000000000685ed4 : add eax, 0x3834ff ; pop rbx ; pop rbp ; pop r14 ; ret
0x000000000068e364 : add eax, 0x3847b60f ; ret
0x0000000000678d46 : add eax, 0x389b75 ; add rsp, 8 ; jmp rax
0x00000000006783c6 : add eax, 0x38a4f5 ; add rsp, 8 ; jmp rax
0x0000000000678316 : add eax, 0x38a5a5 ; add rsp, 8 ; jmp rax
0x0000000000676b53 : add eax, 0x38bd00 ; add rsp, 8 ; jmp rax
0x0000000000676b35 : add eax, 0x38bd1e ; jmp rax
0x000000000050a774 : add eax, 0x38c48348 ; ret
0x00000000006761cf : add eax, 0x38c70c ; jmp rax
0x0000000000674108 : add eax, 0x38e7d3 ; jmp rax
0x00000000007ca70d : add eax, 0x390001d2 ; ret 1
0x0000000000678b77 : add eax, 0x39080c ; je 0x678b87 ; ret
0x0000000000671350 : add eax, 0x39155b ; call rax
0x0000000000541e4f : add eax, 0x39480000 ; ret 0x10bf
0x0000000000669932 : add eax, 0x3963c1 ; ret
0x000000000066b7b5 : add eax, 0x396616 ; ret
0x000000000066af50 : add eax, 0x396e2b ; add rsp, 8 ; ret
0x000000000066af2b : add eax, 0x396e50 ; ret
0x00000000006698cf : add eax, 0x39900c ; jmp rax
0x000000000066d4cb : add eax, 0x39be18 ; ret
0x000000000066b0ba : add eax, 0x39e0f9 ; add rsp, 8 ; ret
0x000000000066af16 : add eax, 0x39e39d ; mov qword ptr [rdi + 0x78], rax ; ret
0x000000000066753e : add eax, 0x3a1afd ; add rsp, 0x18 ; ret
0x000000000065d258 : add eax, 0x3a5683 ; jmp rax
0x000000000065c836 : add eax, 0x3a60a5 ; add rsp, 8 ; jmp rax
0x000000000065901e : add eax, 0x3a98bd ; jmp rax
0x0000000000658f1a : add eax, 0x3a99c1 ; jmp rax
0x0000000000658806 : add eax, 0x3aa0b5 ; add rsp, 8 ; jmp rax
0x000000000065e22b : add eax, 0x3aae08 ; add rsp, 8 ; ret
0x0000000000658a9b : add eax, 0x3b024f ; add al, ch ; retf 0x4f2
0x0000000000648670 : add eax, 0x3ba26b ; jmp rax
0x00000000006484f3 : add eax, 0x3ba3e8 ; jmp rax
0x000000000064835b : add eax, 0x3ba580 ; jmp rax
0x00000000006481de : add eax, 0x3ba6fd ; jmp rax
0x00000000006480b0 : add eax, 0x3ba82b ; jmp rax
0x0000000000647fd2 : add eax, 0x3ba909 ; jmp rax
0x000000000063b396 : add eax, 0x3c7545 ; jmp rax
0x000000000063b116 : add eax, 0x3c77c5 ; jmp rax
0x000000000063a31d : add eax, 0x3c85be ; jmp rax
0x00000000007e1233 : add eax, 0x3d058d00 ; ret 4
0x0000000000630068 : add eax, 0x3d2873 ; jmp rax
0x000000000062e1f8 : add eax, 0x3d46e3 ; jmp rax
0x000000000062be58 : add eax, 0x3d6a83 ; jmp rax
0x000000000062b2a8 : add eax, 0x3d7633 ; jmp rax
0x000000000062b218 : add eax, 0x3d76c3 ; jmp rax
0x000000000062b108 : add eax, 0x3d77d3 ; jmp rax
0x000000000062b098 : add eax, 0x3d7843 ; jmp rax
0x000000000062511a : add eax, 0x3da7b9 ; pop rbp ; ret
0x0000000000626dcc : add eax, 0x3dbb0f ; add rsp, 8 ; jmp rax
0x000000000062c141 : add eax, 0x3dc8a2 ; mov eax, ebx ; pop rbx ; ret
0x00000000006258a4 : add eax, 0x3dcfc7 ; call rax
0x00000000006257a4 : add eax, 0x3dd13f ; call rax
0x000000000062561b : add eax, 0x3dd2c8 ; call rax
0x000000000062548a : add eax, 0x3dd451 ; call rax
0x0000000000625406 : add eax, 0x3dd4dd ; call rax
0x000000000062420f : add eax, 0x3de6cc ; call rax
0x000000000062417d : add eax, 0x3de6de ; call rax
0x0000000000624174 : add eax, 0x3de76f ; call rax
0x0000000000623be9 : add eax, 0x3dec82 ; call rax
0x0000000000623bc0 : add eax, 0x3deca3 ; call rax
0x00000000006225da : add eax, 0x3e0301 ; call rax
0x00000000006225be : add eax, 0x3e0325 ; call rax
0x00000000006223f4 : add eax, 0x3e04ef ; call rax
0x0000000000622091 : add eax, 0x3e0852 ; call rax
0x0000000000622066 : add eax, 0x3e0875 ; call rax
0x0000000000621f2f : add eax, 0x3e09b4 ; call rax
0x0000000000621f00 : add eax, 0x3e09db ; call rax
0x00000000006218b9 : add eax, 0x3e102a ; call rax
0x0000000000621888 : add eax, 0x3e1053 ; call rax
0x00000000006216f9 : add eax, 0x3e11ea ; call rax
0x00000000006216c8 : add eax, 0x3e1213 ; call rax
0x00000000006211fb : add eax, 0x3e16e8 ; call rax
0x00000000006211ca : add eax, 0x3e1711 ; call rax
0x0000000000620adc : add eax, 0x3e1e07 ; call rax
0x0000000000620aa0 : add eax, 0x3e1e3b ; call rax
0x00000000006208ee : add eax, 0x3e1ff5 ; call rax
0x00000000006208a8 : add eax, 0x3e2033 ; call rax
0x00000000006206d1 : add eax, 0x3e2212 ; call rax
0x00000000006206a0 : add eax, 0x3e223b ; call rax
0x0000000000620519 : add eax, 0x3e23ca ; call rax
0x00000000006204ec : add eax, 0x3e23ef ; call rax
0x00000000006203bf : add eax, 0x3e2524 ; call rax
0x0000000000620386 : add eax, 0x3e2555 ; call rax
0x00000000006201d3 : add eax, 0x3e2710 ; call rax
0x0000000000620198 : add eax, 0x3e2743 ; call rax
0x00000000006200cc : add eax, 0x3e280f ; call rax
0x000000000062008c : add eax, 0x3e2857 ; call rax
0x000000000061ff2f : add eax, 0x3e29ac ; call rax
0x000000000061fee8 : add eax, 0x3e29fb ; call rax
0x000000000061fe9f : add eax, 0x3e2a44 ; call rax
0x000000000061fd31 : add eax, 0x3e2bb2 ; call rax
0x000000000061fbdb : add eax, 0x3e2d08 ; call rax
0x000000000061fbb0 : add eax, 0x3e2d2b ; call rax
0x000000000061f8dc : add eax, 0x3e3007 ; call rax
0x000000000061f802 : add eax, 0x3e3069 ; call rax
0x000000000061f7f9 : add eax, 0x3e30e2 ; call rax
0x000000000061f7ae : add eax, 0x3e3135 ; call rax
0x000000000061f727 : add eax, 0x3e313c ; call rax
0x000000000061f527 : add eax, 0x3e33b4 ; call rax
0x000000000061f449 : add eax, 0x3e3412 ; call rax
0x000000000061f440 : add eax, 0x3e34a3 ; call rax
0x000000000062513c : add eax, 0x3e3637 ; leave ; ret
0x000000000061f1e3 : add eax, 0x3e3700 ; call rax
0x000000000061ed82 : add eax, 0x3e3b61 ; call rax
0x000000000061e855 : add eax, 0x3e408e ; call rax
0x000000000061e4d3 : add eax, 0x3e4410 ; call rax
0x000000000061e4a6 : add eax, 0x3e4435 ; call rax
0x000000000061e3bb : add eax, 0x3e4528 ; call rax
0x000000000061e388 : add eax, 0x3e4553 ; call rax
0x000000000061e191 : add eax, 0x3e4752 ; call rax
0x000000000061e164 : add eax, 0x3e4777 ; call rax
0x000000000061d692 : add eax, 0x3e5249 ; call rax
0x000000000061d656 : add eax, 0x3e5285 ; call rax
0x000000000061d648 : add eax, 0x3e529b ; call rax
0x000000000061cadc : add eax, 0x3e5d8f ; call rax
0x000000000061cad3 : add eax, 0x3e5d90 ; call rax
0x000000000061caa7 : add eax, 0x3e5db4 ; call rax
0x000000000061cab0 : add eax, 0x3e5e2b ; call rax
0x000000000061ca9e : add eax, 0x3e5e45 ; call rax
0x000000000061c854 : add eax, 0x3e6087 ; call rax
0x000000000061c830 : add eax, 0x3e60b3 ; call rax
0x000000000061c3f0 : add eax, 0x3e64eb ; call rax
0x000000000061c3cc : add eax, 0x3e6517 ; call rax
0x000000000061be28 : add eax, 0x3e6abb ; call rax
0x000000000061bcc6 : add eax, 0x3e6c1d ; call rax
0x000000000061bc04 : add eax, 0x3e6cd7 ; call rax
0x000000000061bbe8 : add eax, 0x3e6cfb ; call rax
0x000000000061b64c : add eax, 0x3e721f ; call rax
0x000000000061b643 : add eax, 0x3e7220 ; call rax
0x000000000061b617 : add eax, 0x3e7244 ; call rax
0x000000000061b620 : add eax, 0x3e72bb ; call rax
0x000000000061b60e : add eax, 0x3e72d5 ; call rax
0x000000000061b4de : add eax, 0x3e738d ; call rax
0x000000000061b4d5 : add eax, 0x3e738e ; call rax
0x000000000061b4a9 : add eax, 0x3e73b2 ; call rax
0x000000000061b4b2 : add eax, 0x3e7429 ; call rax
0x000000000061b4a0 : add eax, 0x3e7443 ; call rax
0x000000000061b264 : add eax, 0x3e767f ; call rax
0x000000000061b0ea : add eax, 0x3e77f9 ; call rax
0x000000000061b02e : add eax, 0x3e78ad ; call rax
0x000000000061b012 : add eax, 0x3e78d1 ; call rax
0x000000000061add4 : add eax, 0x3e7a97 ; call rax
0x000000000061adcb : add eax, 0x3e7a98 ; call rax
0x000000000061ad9f : add eax, 0x3e7abc ; call rax
0x000000000061ada8 : add eax, 0x3e7b33 ; call rax
0x000000000061ad96 : add eax, 0x3e7b4d ; call rax
0x000000000061acf6 : add eax, 0x3e7b75 ; call rax
0x000000000061aced : add eax, 0x3e7b76 ; call rax
0x000000000061acc1 : add eax, 0x3e7b9a ; call rax
0x000000000061acca : add eax, 0x3e7c11 ; call rax
0x000000000061acb8 : add eax, 0x3e7c2b ; call rax
0x000000000061a7d0 : add eax, 0x3e8113 ; call rax
0x000000000061a632 : add eax, 0x3e82a9 ; call rax
0x000000000061a616 : add eax, 0x3e82cd ; call rax
0x000000000061a444 : add eax, 0x3e8497 ; call rax
0x000000000061a428 : add eax, 0x3e84bb ; call rax
0x000000000061a33b : add eax, 0x3e85a8 ; call rax
0x0000000000619e91 : add eax, 0x3e8a4a ; call rax
0x0000000000619e70 : add eax, 0x3e8a73 ; call rax
0x0000000000619bb7 : add eax, 0x3e8d24 ; call rax
0x0000000000619b96 : add eax, 0x3e8d4d ; call rax
0x0000000000619450 : add eax, 0x3e9493 ; call rax
0x00000000006192f0 : add eax, 0x3e95eb ; call rax
0x00000000006192d4 : add eax, 0x3e960f ; call rax
0x000000000061912e : add eax, 0x3e97ad ; call rax
0x0000000000619112 : add eax, 0x3e97d1 ; call rax
0x0000000000618968 : add eax, 0x3e9f03 ; call rax
0x000000000061894f : add eax, 0x3e9f14 ; call rax
0x00000000006189c5 : add eax, 0x3e9f16 ; call rax
0x00000000006188cb : add eax, 0x3e9f90 ; call rax
0x000000000061890e : add eax, 0x3e9fd5 ; call rax
0x00000000006188d4 : add eax, 0x3ea007 ; call rax
0x00000000006188c2 : add eax, 0x3ea021 ; call rax
0x00000000006182cc : add eax, 0x3ea59f ; call rax
0x00000000006182b3 : add eax, 0x3ea5b0 ; call rax
0x0000000000618329 : add eax, 0x3ea5b2 ; call rax
0x000000000061822f : add eax, 0x3ea62c ; call rax
0x0000000000618272 : add eax, 0x3ea671 ; call rax
0x0000000000618238 : add eax, 0x3ea6a3 ; call rax
0x0000000000618226 : add eax, 0x3ea6bd ; call rax
0x0000000000617d8a : add eax, 0x3eab51 ; call rax
0x0000000000617d6e : add eax, 0x3eab75 ; call rax
0x0000000000617c81 : add eax, 0x3eac62 ; call rax
0x00000000006178a0 : add eax, 0x3eb03b ; call rax
0x0000000000617884 : add eax, 0x3eb05f ; call rax
0x00000000006176b3 : add eax, 0x3eb230 ; call rax
0x0000000000617550 : add eax, 0x3eb393 ; call rax
0x0000000000617417 : add eax, 0x3eb4c4 ; call rax
0x00000000006173fa : add eax, 0x3eb4e9 ; call rax
0x0000000000616dd2 : add eax, 0x3ebb09 ; call rax
0x0000000000616db6 : add eax, 0x3ebb2d ; call rax
0x0000000000616be5 : add eax, 0x3ebcfe ; call rax
0x0000000000616a82 : add eax, 0x3ebe61 ; call rax
0x0000000000616949 : add eax, 0x3ebf92 ; call rax
0x000000000061692c : add eax, 0x3ebfb7 ; call rax
0x0000000000615a7a : add eax, 0x3ece69 ; call rax
0x00000000006159be : add eax, 0x3ecf1d ; call rax
0x00000000006159a2 : add eax, 0x3ecf41 ; call rax
0x0000000000615711 : add eax, 0x3ed1ca ; call rax
0x00000000006156f0 : add eax, 0x3ed1f3 ; call rax
0x0000000000615437 : add eax, 0x3ed4a4 ; call rax
0x0000000000615416 : add eax, 0x3ed4cd ; call rax
0x0000000000614765 : add eax, 0x3ee17e ; call rax
0x00000000006146a8 : add eax, 0x3ee233 ; call rax
0x000000000061468c : add eax, 0x3ee257 ; call rax
0x00000000006144f9 : add eax, 0x3ee3ea ; call rax
0x000000000061443c : add eax, 0x3ee49f ; call rax
0x0000000000614420 : add eax, 0x3ee4c3 ; call rax
0x00000000006142bd : add eax, 0x3ee626 ; call rax
0x0000000000614200 : add eax, 0x3ee6db ; call rax
0x00000000006141e4 : add eax, 0x3ee6ff ; call rax
0x0000000000613e2c : add eax, 0x3eeab7 ; call rax
0x0000000000613dd6 : add eax, 0x3eeb0d ; call rax
0x0000000000613c73 : add eax, 0x3eec68 ; call rax
0x0000000000613c46 : add eax, 0x3eec9d ; call rax
0x000000000061170a : add eax, 0x3f11d1 ; call rax
0x00000000006116f8 : add eax, 0x3f11eb ; call rax
0x000000000067fab0 : add eax, 0x40 ; add rsp, 8 ; ret
0x00000000007e1216 : add eax, 0x4003f400 ; ret 4
0x00000000007fc02a : add eax, 0x404a701 ; add byte ptr [rax], al ; retf
0x00000000005fd6bb : add eax, 0x405220 ; jmp rax
0x00000000005fd248 : add eax, 0x405693 ; jmp rax
0x00000000005fd168 : add eax, 0x405773 ; jmp rax
0x00000000005f96c8 : add eax, 0x409213 ; jmp rax
0x00000000005f9532 : add eax, 0x4093a9 ; jmp rax
0x00000000005f8cf8 : add eax, 0x409be3 ; jmp rax
0x00000000005f7a0d : add eax, 0x40aed6 ; call rax
0x00000000005f792a : add eax, 0x40afb9 ; call rax
0x00000000005f7852 : add eax, 0x40b091 ; call rax
0x00000000005f776f : add eax, 0x40b174 ; call rax
0x00000000005f7635 : add eax, 0x40b2ae ; call rax
0x00000000005f75aa : add eax, 0x40b331 ; call rax
0x00000000005f7587 : add eax, 0x40b35c ; call rax
0x00000000005f7338 : add eax, 0x40b5a3 ; call rax
0x00000000005f7278 : add eax, 0x40b66b ; call rax
0x00000000005f71be : add eax, 0x40b71d ; call rax
0x00000000005f7178 : add eax, 0x40b76b ; call rax
0x00000000005f6ce1 : add eax, 0x40bbfa ; call rax
0x00000000005f6ca1 : add eax, 0x40bc42 ; call rax
0x00000000005f6c62 : add eax, 0x40bc81 ; call rax
0x00000000005f6bfc : add eax, 0x40bcdf ; call rax
0x00000000005f6bbc : add eax, 0x40bd27 ; call rax
0x00000000005f6b7d : add eax, 0x40bd66 ; call rax
0x00000000005f6ad1 : add eax, 0x40be12 ; call rax
0x00000000005f69b7 : add eax, 0x40bf24 ; call rax
0x00000000005f6968 : add eax, 0x40bf7b ; call rax
0x00000000005f68b0 : add eax, 0x40c02b ; call rax
0x00000000005f6870 : add eax, 0x40c073 ; call rax
0x00000000005f65a8 : add eax, 0x40c333 ; call rax
0x00000000005f6565 : add eax, 0x40c37e ; call rax
0x00000000005f6528 : add eax, 0x40c3bb ; call rax
0x00000000005f61fd : add eax, 0x40c6de ; call rax
0x00000000005f619e : add eax, 0x40c745 ; call rax
0x00000000005f54e8 : add eax, 0x40d3f3 ; call rax
0x00000000005f5409 : add eax, 0x40d452 ; call rax
0x00000000005f5400 : add eax, 0x40d4e3 ; call rax
0x00000000005f5345 : add eax, 0x40d596 ; call rax
0x00000000005f5302 : add eax, 0x40d5e1 ; call rax
0x00000000005f50af : add eax, 0x40d82c ; call rax
0x00000000005f505a : add eax, 0x40d889 ; call rax
0x00000000005f4653 : add eax, 0x40e218 ; call rax
0x00000000005f464a : add eax, 0x40e291 ; call rax
0x00000000005f4607 : add eax, 0x40e2dc ; call rax
0x00000000005f4552 : add eax, 0x40e311 ; call rax
0x00000000005f450d : add eax, 0x40e3ce ; call rax
0x00000000005f44ca : add eax, 0x40e419 ; call rax
0x00000000005f4489 : add eax, 0x40e45a ; call rax
0x00000000005f4271 : add eax, 0x40e672 ; call rax
0x00000000005f4145 : add eax, 0x40e796 ; call rax
0x00000000005f4112 : add eax, 0x40e7d1 ; call rax
0x00000000005f4058 : add eax, 0x40e883 ; call rax
0x00000000005f400e : add eax, 0x40e8d5 ; call rax
0x00000000005f3dcc : add eax, 0x40eb0f ; call rax
0x00000000005f3d82 : add eax, 0x40eb61 ; call rax
0x00000000005f3ba0 : add eax, 0x40ed3b ; call rax
0x00000000005f3b4e : add eax, 0x40ed95 ; call rax
0x00000000005f392f : add eax, 0x40efac ; call rax
0x00000000005f38d0 : add eax, 0x40f013 ; call rax
0x00000000005f37cb : add eax, 0x40f110 ; call rax
0x00000000005f3780 : add eax, 0x40f163 ; call rax
0x00000000005f348c : add eax, 0x40f44f ; call rax
0x00000000005f33fb : add eax, 0x40f460 ; call rax
0x00000000005f33f2 : add eax, 0x40f4f1 ; call rax
0x00000000005f3262 : add eax, 0x40f609 ; call rax
0x00000000005f3259 : add eax, 0x40f60a ; call rax
0x00000000005f307d : add eax, 0x40f85e ; call rax
0x00000000005f301a : add eax, 0x40f8c9 ; call rax
0x00000000005f2f60 : add eax, 0x40f97b ; call rax
0x00000000005f2f36 : add eax, 0x40f9ad ; call rax
0x00000000007e1210 : add eax, 0x4103a900 ; retf 5
0x00000000005f249f : add eax, 0x41043c ; call rax
0x00000000005f2452 : add eax, 0x410491 ; call rax
0x00000000005f23bb : add eax, 0x410528 ; call rax
0x00000000005f22be : add eax, 0x410625 ; call rax
0x00000000005f2195 : add eax, 0x410746 ; call rax
0x00000000005f2148 : add eax, 0x41079b ; call rax
0x00000000005f1ece : add eax, 0x410a0d ; call rax
0x00000000005f1e5c : add eax, 0x410a87 ; call rax
0x00000000005f1d34 : add eax, 0x410ba7 ; call rax
0x00000000005f1cf4 : add eax, 0x410bef ; call rax
0x00000000005f1c3b : add eax, 0x410ca0 ; call rax
0x00000000005f1bf8 : add eax, 0x410ceb ; call rax
0x00000000005f1980 : add eax, 0x410f5b ; call rax
0x00000000005f1940 : add eax, 0x410fa3 ; call rax
0x00000000005f1900 : add eax, 0x410fe3 ; call rax
0x00000000005f17b7 : add eax, 0x411124 ; call rax
0x00000000005f1777 : add eax, 0x41116c ; call rax
0x00000000005f1739 : add eax, 0x4111aa ; call rax
0x00000000005f160b : add eax, 0x4112d8 ; call rax
0x00000000005f154b : add eax, 0x411390 ; call rax
0x00000000005f152e : add eax, 0x4113b5 ; call rax
0x00000000005f10b7 : add eax, 0x411824 ; call rax
0x00000000005f0ffa : add eax, 0x4118e9 ; call rax
0x00000000005f0d8b : add eax, 0x411b50 ; call rax
0x00000000005f0cf0 : add eax, 0x411bf3 ; call rax
0x00000000007a6d89 : add eax, 0x41280e02 ; ret
0x00000000005ef9b8 : add eax, 0x412f23 ; call rax
0x00000000005ef8e0 : add eax, 0x413003 ; call rax
0x00000000005ef698 : add eax, 0x413243 ; call rax
0x00000000005ef64c : add eax, 0x413297 ; call rax
0x00000000005ef0bc : add eax, 0x41381f ; call rax
0x00000000005eefe4 : add eax, 0x4138ff ; call rax
0x00000000005eeda5 : add eax, 0x413b36 ; call rax
0x00000000005eed58 : add eax, 0x413b8b ; call rax
0x00000000005ee5fb : add eax, 0x4142e0 ; call rax
0x00000000005ee522 : add eax, 0x4143c1 ; call rax
0x00000000005edfac : add eax, 0x414937 ; call rax
0x00000000005edda2 : add eax, 0x414b41 ; call rax
0x00000000005edcdf : add eax, 0x414bfc ; call rax
0x00000000005edcbe : add eax, 0x414c25 ; call rax
0x00000000005ed316 : add eax, 0x415555 ; call rax
0x00000000005ed30d : add eax, 0x415556 ; call rax
0x00000000005ed2e1 : add eax, 0x41557a ; call rax
0x00000000005ed2ea : add eax, 0x4155f1 ; call rax
0x00000000005ed2d8 : add eax, 0x41560b ; call rax
0x00000000005ecb63 : add eax, 0x415d80 ; call rax
0x00000000005ec472 : add eax, 0x416469 ; call rax
0x00000000005ec44e : add eax, 0x416495 ; call rax
0x00000000005ec00e : add eax, 0x4168cd ; call rax
0x00000000005ebfea : add eax, 0x4168f9 ; call rax
0x00000000005eba8e : add eax, 0x416e55 ; call rax
0x00000000005eb94a : add eax, 0x416f99 ; call rax
0x00000000005eb88e : add eax, 0x41704d ; call rax
0x00000000005eb872 : add eax, 0x417071 ; call rax
0x00000000005eb706 : add eax, 0x417165 ; call rax
0x00000000005eb6fd : add eax, 0x417166 ; call rax
0x00000000005eb6d1 : add eax, 0x41718a ; call rax
0x00000000005eb6da : add eax, 0x417201 ; call rax
0x00000000005eb6c8 : add eax, 0x41721b ; call rax
0x00000000005eb598 : add eax, 0x4172d3 ; call rax
0x00000000005eb58f : add eax, 0x4172d4 ; call rax
0x00000000005eb563 : add eax, 0x4172f8 ; call rax
0x00000000005eb56c : add eax, 0x41736f ; call rax
0x00000000005eb55a : add eax, 0x417389 ; call rax
0x00000000005eb31e : add eax, 0x4175c5 ; call rax
0x00000000005eb1a4 : add eax, 0x41773f ; call rax
0x00000000005eb0e8 : add eax, 0x4177f3 ; call rax
0x00000000005eb0cc : add eax, 0x417817 ; call rax
0x00000000005eaf24 : add eax, 0x417947 ; call rax
0x00000000005eaf1b : add eax, 0x417948 ; call rax
0x00000000005eaeef : add eax, 0x41796c ; call rax
0x00000000005eaef8 : add eax, 0x4179e3 ; call rax
0x00000000005eaee6 : add eax, 0x4179fd ; call rax
0x00000000005eae46 : add eax, 0x417a25 ; call rax
0x00000000005eae3d : add eax, 0x417a26 ; call rax
0x00000000005eae11 : add eax, 0x417a4a ; call rax
0x00000000005eae1a : add eax, 0x417ac1 ; call rax
0x00000000005eae08 : add eax, 0x417adb ; call rax
0x00000000005e9f7c : add eax, 0x4188ef ; call rax
0x00000000005e9f73 : add eax, 0x4188f0 ; call rax
0x00000000005e9f47 : add eax, 0x418914 ; call rax
0x00000000005e9f50 : add eax, 0x41898b ; call rax
0x00000000005e9f3e : add eax, 0x4189a5 ; call rax
0x00000000005e9815 : add eax, 0x4190ce ; call rax
0x00000000005e915a : add eax, 0x419781 ; call rax
0x00000000005e9136 : add eax, 0x4197ad ; call rax
0x00000000005e8cf6 : add eax, 0x419be5 ; call rax
0x00000000005e8cd2 : add eax, 0x419c11 ; call rax
0x00000000005e8776 : add eax, 0x41a16d ; call rax
0x00000000005e8632 : add eax, 0x41a2b1 ; call rax
0x00000000005e8576 : add eax, 0x41a365 ; call rax
0x00000000005e855a : add eax, 0x41a389 ; call rax
0x00000000005e83ee : add eax, 0x41a47d ; call rax
0x00000000005e83e5 : add eax, 0x41a47e ; call rax
0x00000000005e83b9 : add eax, 0x41a4a2 ; call rax
0x00000000005e83c2 : add eax, 0x41a519 ; call rax
0x00000000005e83b0 : add eax, 0x41a533 ; call rax
0x00000000005e8280 : add eax, 0x41a5eb ; call rax
0x00000000005e8277 : add eax, 0x41a5ec ; call rax
0x00000000005e824b : add eax, 0x41a610 ; call rax
0x00000000005e8254 : add eax, 0x41a687 ; call rax
0x00000000005e8242 : add eax, 0x41a6a1 ; call rax
0x00000000005e8006 : add eax, 0x41a8dd ; call rax
0x00000000005e7e8c : add eax, 0x41aa57 ; call rax
0x00000000005e7dd0 : add eax, 0x41ab0b ; call rax
0x00000000005e7db4 : add eax, 0x41ab2f ; call rax
0x00000000005e7c0c : add eax, 0x41ac5f ; call rax
0x00000000005e7c03 : add eax, 0x41ac60 ; call rax
0x00000000005e7bd7 : add eax, 0x41ac84 ; call rax
0x00000000005e7be0 : add eax, 0x41acfb ; call rax
0x00000000005e7bce : add eax, 0x41ad15 ; call rax
0x00000000005e7b2e : add eax, 0x41ad3d ; call rax
0x00000000005e7b25 : add eax, 0x41ad3e ; call rax
0x00000000005e7af9 : add eax, 0x41ad62 ; call rax
0x00000000005e7b02 : add eax, 0x41add9 ; call rax
0x00000000005e7af0 : add eax, 0x41adf3 ; call rax
0x00000000005e6b02 : add eax, 0x41bde1 ; call rax
0x00000000005e6a3a : add eax, 0x41bea1 ; call rax
0x00000000005e6a1e : add eax, 0x41bec5 ; call rax
0x00000000005e6966 : add eax, 0x41bf75 ; call rax
0x00000000005e694a : add eax, 0x41bf99 ; call rax
0x00000000005e65c8 : add eax, 0x41c313 ; call rax
0x00000000005e65ac : add eax, 0x41c337 ; call rax
0x00000000005e5ecf : add eax, 0x41ca14 ; call rax
0x00000000005e5ceb : add eax, 0x41cbf8 ; call rax
0x00000000005e59dc : add eax, 0x41ceff ; call rax
0x00000000005e59b6 : add eax, 0x41cf2d ; call rax
0x00000000005e57bd : add eax, 0x41d126 ; call rax
0x00000000005e5700 : add eax, 0x41d1db ; call rax
0x00000000005e56e4 : add eax, 0x41d1ff ; call rax
0x00000000005e5582 : add eax, 0x41d361 ; call rax
0x00000000005e54c2 : add eax, 0x41d419 ; call rax
0x00000000005e54a6 : add eax, 0x41d43d ; call rax
0x00000000005e5311 : add eax, 0x41d5d2 ; call rax
0x00000000005e51e6 : add eax, 0x41d6f5 ; call rax
0x00000000005e51ca : add eax, 0x41d719 ; call rax
0x00000000005e4f01 : add eax, 0x41d9e2 ; call rax
0x00000000005e4d77 : add eax, 0x41db6c ; call rax
0x00000000005e4b32 : add eax, 0x41dda9 ; call rax
0x00000000005e4b0c : add eax, 0x41ddd7 ; call rax
0x00000000005e4691 : add eax, 0x41e252 ; call rax
0x00000000005e43f0 : add eax, 0x41e4f3 ; call rax
0x00000000005e4147 : add eax, 0x41e79c ; call rax
0x00000000005e3dfd : add eax, 0x41eae6 ; call rax
0x00000000005e3b57 : add eax, 0x41ed8c ; call rax
0x00000000005e38b1 : add eax, 0x41f032 ; call rax
0x00000000005e35aa : add eax, 0x41f339 ; call rax
0x00000000005e331d : add eax, 0x41f5be ; call rax
0x00000000005e32fc : add eax, 0x41f5e7 ; call rax
0x00000000005e305d : add eax, 0x41f87e ; call rax
0x00000000005e303c : add eax, 0x41f8a7 ; call rax
0x00000000005e2eb8 : add eax, 0x41fa23 ; call rax
0x00000000005e2e94 : add eax, 0x41fa4f ; call rax
0x00000000005e2ddc : add eax, 0x41faff ; call rax
0x00000000005e2db6 : add eax, 0x41fb2d ; call rax
0x00000000005e2cfe : add eax, 0x41fbdd ; call rax
0x00000000005e2cd8 : add eax, 0x41fc0b ; call rax
0x00000000005e2c20 : add eax, 0x41fcbb ; call rax
0x00000000005e2bfa : add eax, 0x41fce9 ; call rax
0x00000000005e2717 : add eax, 0x4201cc ; call rax
0x00000000005e26f1 : add eax, 0x4201ea ; call rax
0x00000000005e26b1 : add eax, 0x420232 ; call rax
0x00000000005e266f : add eax, 0x420274 ; call rax
0x00000000005e25c5 : add eax, 0x420316 ; call rax
0x00000000005e2585 : add eax, 0x42035e ; call rax
0x00000000005e2543 : add eax, 0x4203a0 ; call rax
0x00000000005e24c6 : add eax, 0x420415 ; call rax
0x00000000005e2486 : add eax, 0x42045d ; call rax
0x00000000005e2446 : add eax, 0x42049d ; call rax
0x00000000005e23cf : add eax, 0x42050c ; call rax
0x00000000005e238f : add eax, 0x420554 ; call rax
0x00000000005e234f : add eax, 0x420594 ; call rax
0x00000000005e2297 : add eax, 0x42064c ; call rax
0x00000000005e20f6 : add eax, 0x4207e5 ; call rax
0x00000000005e20bc : add eax, 0x420827 ; call rax
0x00000000005e1ded : add eax, 0x420af6 ; call rax
0x00000000005e1d19 : add eax, 0x420bca ; call rax
0x00000000005e1ba0 : add eax, 0x420d3b ; call rax
0x00000000005e1b7a : add eax, 0x420d69 ; call rax
0x00000000005e1992 : add eax, 0x420f51 ; call rax
0x00000000005e18d2 : add eax, 0x421009 ; call rax
0x00000000005e18b6 : add eax, 0x42102d ; call rax
0x00000000005e1710 : add eax, 0x4211cb ; call rax
0x00000000005e16f4 : add eax, 0x4211ef ; call rax
0x00000000005e0f20 : add eax, 0x42194b ; call rax
0x00000000005e0f07 : add eax, 0x42195c ; call rax
0x00000000005e0f7d : add eax, 0x42195e ; call rax
0x00000000005e0e83 : add eax, 0x4219d8 ; call rax
0x00000000005e0ec6 : add eax, 0x421a1d ; call rax
0x00000000005e0e8c : add eax, 0x421a4f ; call rax
0x00000000005e0e7a : add eax, 0x421a69 ; call rax
0x00000000005e0880 : add eax, 0x421feb ; call rax
0x00000000005e0867 : add eax, 0x421ffc ; call rax
0x00000000005e08dd : add eax, 0x421ffe ; call rax
0x00000000005e07e3 : add eax, 0x422078 ; call rax
0x00000000005e0826 : add eax, 0x4220bd ; call rax
0x00000000005e07ec : add eax, 0x4220ef ; call rax
0x00000000005e07da : add eax, 0x422109 ; call rax
0x00000000005e0325 : add eax, 0x4225be ; call rax
0x00000000005e0268 : add eax, 0x422673 ; call rax
0x00000000005e024c : add eax, 0x422697 ; call rax
0x00000000005dfdcc : add eax, 0x422b17 ; call rax
0x00000000005dfcdb : add eax, 0x422c08 ; call rax
0x00000000005df376 : add eax, 0x42356d ; call rax
0x00000000005df283 : add eax, 0x423658 ; call rax
0x00000000005df25a : add eax, 0x423689 ; call rax
0x00000000005df0d7 : add eax, 0x42380c ; call rax
0x00000000005df00d : add eax, 0x4238ce ; call rax
0x00000000005defe4 : add eax, 0x4238ff ; call rax
0x00000000005de4fc : add eax, 0x4243df ; call rax
0x00000000005de4cc : add eax, 0x424417 ; call rax
0x00000000005de414 : add eax, 0x4244c7 ; call rax
0x00000000005de3e2 : add eax, 0x424501 ; call rax
0x00000000005de2b6 : add eax, 0x424625 ; call rax
0x00000000005de284 : add eax, 0x42465f ; call rax
0x00000000005de1cc : add eax, 0x42470f ; call rax
0x00000000005de19a : add eax, 0x424749 ; call rax
0x00000000005ddef7 : add eax, 0x4249ec ; call rax
0x00000000005dda72 : add eax, 0x424e71 ; call rax
0x00000000005dd884 : add eax, 0x425057 ; call rax
0x00000000005dd7e9 : add eax, 0x4250fa ; call rax
0x00000000005dd52a : add eax, 0x4253b1 ; call rax
0x00000000005dd48f : add eax, 0x425454 ; call rax
0x00000000005dcf89 : add eax, 0x425952 ; call rax
0x00000000005dceee : add eax, 0x4259f5 ; call rax
0x00000000005dcb07 : add eax, 0x425dd4 ; call rax
0x00000000005dca6f : add eax, 0x425e74 ; call rax
0x00000000005dc0f2 : add eax, 0x4267f1 ; call rax
0x00000000005dc032 : add eax, 0x4268a9 ; call rax
0x00000000005dc016 : add eax, 0x4268cd ; call rax
0x00000000005dbe6b : add eax, 0x426a78 ; call rax
0x00000000005dbd1e : add eax, 0x426bbd ; call rax
0x00000000005dbd02 : add eax, 0x426be1 ; call rax
0x00000000005dbb89 : add eax, 0x426d5a ; call rax
0x00000000005db349 : add eax, 0x42759a ; call rax
0x00000000005db232 : add eax, 0x4276a9 ; call rax
0x00000000005db216 : add eax, 0x4276cd ; call rax
0x00000000005dafc9 : add eax, 0x427912 ; call rax
0x00000000005dafa8 : add eax, 0x42793b ; call rax
0x00000000005dad09 : add eax, 0x427bd2 ; call rax
0x00000000005dace8 : add eax, 0x427bfb ; call rax
0x00000000005da9a7 : add eax, 0x427f3c ; call rax
0x00000000005da4a5 : add eax, 0x42843e ; call rax
0x00000000005da44f : add eax, 0x428494 ; call rax
0x00000000005da2e7 : add eax, 0x4285f4 ; call rax
0x00000000005da2ba : add eax, 0x428629 ; call rax
0x00000000005da16b : add eax, 0x428778 ; call rax
0x00000000005da0ae : add eax, 0x42882d ; call rax
0x00000000005da092 : add eax, 0x428851 ; call rax
0x00000000005d9f3d : add eax, 0x4289a6 ; call rax
0x00000000005d9e80 : add eax, 0x428a5b ; call rax
0x00000000005d9e64 : add eax, 0x428a7f ; call rax
0x00000000005d9d0f : add eax, 0x428bd4 ; call rax
0x00000000005d9c52 : add eax, 0x428c89 ; call rax
0x00000000005d9c36 : add eax, 0x428cad ; call rax
0x00000000005d9ad9 : add eax, 0x428e0a ; call rax
0x00000000005d9a1c : add eax, 0x428ebf ; call rax
0x00000000005d9a00 : add eax, 0x428ee3 ; call rax
0x00000000005d950a : add eax, 0x4293d9 ; call rax
0x00000000005d9442 : add eax, 0x429499 ; call rax
0x00000000005d9426 : add eax, 0x4294bd ; call rax
0x00000000005d936e : add eax, 0x42956d ; call rax
0x00000000005d9352 : add eax, 0x429591 ; call rax
0x00000000005d8ffc : add eax, 0x4298df ; call rax
0x00000000005d8fe0 : add eax, 0x429903 ; call rax
0x00000000005d8941 : add eax, 0x429fa2 ; call rax
0x00000000005d87b8 : add eax, 0x42a12b ; call rax
0x00000000005d84de : add eax, 0x42a3fd ; call rax
0x00000000005d84b8 : add eax, 0x42a42b ; call rax
0x00000000005d82bf : add eax, 0x42a624 ; call rax
0x00000000005d8202 : add eax, 0x42a6d9 ; call rax
0x00000000005d81e6 : add eax, 0x42a6fd ; call rax
0x00000000005d8090 : add eax, 0x42a853 ; call rax
0x00000000005d7fd0 : add eax, 0x42a90b ; call rax
0x00000000005d7fb4 : add eax, 0x42a92f ; call rax
0x00000000005d7e2d : add eax, 0x42aab6 ; call rax
0x00000000005d7d02 : add eax, 0x42abd9 ; call rax
0x00000000005d7ce6 : add eax, 0x42abfd ; call rax
0x00000000005d7a50 : add eax, 0x42ae93 ; call rax
0x00000000005d7914 : add eax, 0x42afcf ; call rax
0x00000000005d76dc : add eax, 0x42b1ff ; call rax
0x00000000005d76b6 : add eax, 0x42b22d ; call rax
0x00000000005d7247 : add eax, 0x42b69c ; call rax
0x00000000005d6fb1 : add eax, 0x42b932 ; call rax
0x00000000005d6d1e : add eax, 0x42bbc5 ; call rax
0x00000000005d6a0f : add eax, 0x42bed4 ; call rax
0x00000000005d6799 : add eax, 0x42c14a ; call rax
0x00000000005d6527 : add eax, 0x42c3bc ; call rax
0x00000000005d6254 : add eax, 0x42c68f ; call rax
0x00000000005d5fd3 : add eax, 0x42c908 ; call rax
0x00000000005d5fb2 : add eax, 0x42c931 ; call rax
0x00000000005d5d1f : add eax, 0x42cbbc ; call rax
0x00000000005d5cfe : add eax, 0x42cbe5 ; call rax
0x00000000005d5b7a : add eax, 0x42cd61 ; call rax
0x00000000005d5b56 : add eax, 0x42cd8d ; call rax
0x00000000005d5a9e : add eax, 0x42ce3d ; call rax
0x00000000005d5a78 : add eax, 0x42ce6b ; call rax
0x00000000005d59c0 : add eax, 0x42cf1b ; call rax
0x00000000005d599a : add eax, 0x42cf49 ; call rax
0x00000000005d58e2 : add eax, 0x42cff9 ; call rax
0x00000000005d58bc : add eax, 0x42d027 ; call rax
0x00000000005d52fd : add eax, 0x42d5e6 ; call rax
0x00000000005d52d7 : add eax, 0x42d604 ; call rax
0x00000000005d5297 : add eax, 0x42d64c ; call rax
0x00000000005d5255 : add eax, 0x42d68e ; call rax
0x00000000005d51ab : add eax, 0x42d730 ; call rax
0x00000000005d516b : add eax, 0x42d778 ; call rax
0x00000000005d5129 : add eax, 0x42d7ba ; call rax
0x00000000005d50ac : add eax, 0x42d82f ; call rax
0x00000000005d506c : add eax, 0x42d877 ; call rax
0x00000000005d502c : add eax, 0x42d8b7 ; call rax
0x00000000005d4fb5 : add eax, 0x42d926 ; call rax
0x00000000005d4f75 : add eax, 0x42d96e ; call rax
0x00000000005d4f35 : add eax, 0x42d9ae ; call rax
0x00000000005d4e7d : add eax, 0x42da66 ; call rax
0x00000000005d4cdc : add eax, 0x42dbff ; call rax
0x00000000005d4ca2 : add eax, 0x42dc41 ; call rax
0x00000000005d4ac6 : add eax, 0x42de1d ; call rax
0x00000000005d4a06 : add eax, 0x42ded5 ; call rax
0x00000000005d49ea : add eax, 0x42def9 ; call rax
0x00000000005d4844 : add eax, 0x42e097 ; call rax
0x00000000005d4828 : add eax, 0x42e0bb ; call rax
0x00000000005d407a : add eax, 0x42e7f1 ; call rax
0x00000000005d4061 : add eax, 0x42e802 ; call rax
0x00000000005d40d7 : add eax, 0x42e804 ; call rax
0x00000000005d3fdd : add eax, 0x42e87e ; call rax
0x00000000005d4020 : add eax, 0x42e8c3 ; call rax
0x00000000005d3fe6 : add eax, 0x42e8f5 ; call rax
0x00000000005d3fd4 : add eax, 0x42e90f ; call rax
0x00000000005d39da : add eax, 0x42ee91 ; call rax
0x00000000005d39c1 : add eax, 0x42eea2 ; call rax
0x00000000005d3a37 : add eax, 0x42eea4 ; call rax
0x00000000005d393d : add eax, 0x42ef1e ; call rax
0x00000000005d3980 : add eax, 0x42ef63 ; call rax
0x00000000005d3946 : add eax, 0x42ef95 ; call rax
0x00000000005d3934 : add eax, 0x42efaf ; call rax
0x00000000005d347f : add eax, 0x42f464 ; call rax
0x00000000005d33c2 : add eax, 0x42f519 ; call rax
0x00000000005d33a6 : add eax, 0x42f53d ; call rax
0x00000000005d2f31 : add eax, 0x42f9b2 ; call rax
0x00000000005d2e4b : add eax, 0x42fa98 ; call rax
0x00000000005d2530 : add eax, 0x4303b3 ; call rax
0x00000000005d243e : add eax, 0x43049d ; call rax
0x00000000005d2418 : add eax, 0x4304cb ; call rax
0x00000000005d2298 : add eax, 0x43064b ; call rax
0x00000000005d21d2 : add eax, 0x430709 ; call rax
0x00000000005d21ac : add eax, 0x430737 ; call rax
0x00000000005d1712 : add eax, 0x4311c9 ; call rax
0x00000000005d16e2 : add eax, 0x431201 ; call rax
0x00000000005d162a : add eax, 0x4312b1 ; call rax
0x00000000005d15f8 : add eax, 0x4312eb ; call rax
0x00000000005d14cc : add eax, 0x43140f ; call rax
0x00000000005d149a : add eax, 0x431449 ; call rax
0x00000000005d13e2 : add eax, 0x4314f9 ; call rax
0x00000000005d13b0 : add eax, 0x431533 ; call rax
0x00000000005d1118 : add eax, 0x4317cb ; call rax
0x00000000005d0c9e : add eax, 0x431c45 ; call rax
0x00000000005d0ad9 : add eax, 0x431e02 ; call rax
0x00000000005d0a3e : add eax, 0x431ea5 ; call rax
0x00000000005d07ac : add eax, 0x43212f ; call rax
0x00000000005d0711 : add eax, 0x4321d2 ; call rax
0x00000000005d024d : add eax, 0x43268e ; call rax
0x00000000005d01b2 : add eax, 0x432731 ; call rax
0x00000000005cfe21 : add eax, 0x432aba ; call rax
0x00000000005cfd89 : add eax, 0x432b5a ; call rax
0x00000000005cf486 : add eax, 0x43345d ; call rax
0x00000000005cf3c6 : add eax, 0x433515 ; call rax
0x00000000005cf3aa : add eax, 0x433539 ; call rax
0x00000000005cf20d : add eax, 0x4336d6 ; call rax
0x00000000005cf0c0 : add eax, 0x43381b ; call rax
0x00000000005cf0a4 : add eax, 0x43383f ; call rax
0x00000000005cef35 : add eax, 0x4339ae ; call rax
0x00000000005ce75b : add eax, 0x434188 ; call rax
0x00000000005ce644 : add eax, 0x434297 ; call rax
0x00000000005ce628 : add eax, 0x4342bb ; call rax
0x00000000005ce3e7 : add eax, 0x4344f4 ; call rax
0x00000000005ce3c6 : add eax, 0x43451d ; call rax
0x00000000005ce133 : add eax, 0x4347a8 ; call rax
0x00000000005ce112 : add eax, 0x4347d1 ; call rax
0x00000000005cde05 : add eax, 0x434ade ; call rax
0x00000000005cd94f : add eax, 0x434f94 ; call rax
0x00000000005cd8f9 : add eax, 0x434fea ; call rax
0x00000000005cd791 : add eax, 0x43514a ; call rax
0x00000000005cd764 : add eax, 0x43517f ; call rax
0x00000000005cd615 : add eax, 0x4352ce ; call rax
0x00000000005cd558 : add eax, 0x435383 ; call rax
0x00000000005cd53c : add eax, 0x4353a7 ; call rax
0x00000000005cd3e7 : add eax, 0x4354fc ; call rax
0x00000000005cd32a : add eax, 0x4355b1 ; call rax
0x00000000005cd30e : add eax, 0x4355d5 ; call rax
0x00000000005cd1b9 : add eax, 0x43572a ; call rax
0x00000000005cd0fc : add eax, 0x4357df ; call rax
0x00000000005cd0e0 : add eax, 0x435803 ; call rax
0x00000000005ccf83 : add eax, 0x435960 ; call rax
0x00000000005ccec6 : add eax, 0x435a15 ; call rax
0x00000000005cceaa : add eax, 0x435a39 ; call rax
0x00000000005be9c8 : add eax, 0x443f13 ; jmp rax
0x0000000000722a03 : add eax, 0x447e62e9 ; ret 0x2d4f
0x00000000005b078e : add eax, 0x45214d ; jmp rax
0x00000000005b068b : add eax, 0x4554f8 ; ret
0x00000000005b037b : add eax, 0x455538 ; ret
0x00000000005b058a : add eax, 0x455539 ; ret
0x00000000005b031b : add eax, 0x455568 ; ret
0x00000000005b034a : add eax, 0x455599 ; ret
0x00000000005afb8a : add eax, 0x455ed9 ; ret
0x00000000005afada : add eax, 0x455f59 ; ret
0x00000000005afb5a : add eax, 0x455ff9 ; ret
0x00000000005af7ca : add eax, 0x456239 ; ret
0x00000000005af7fb : add eax, 0x4562f8 ; ret
0x00000000005af55b : add eax, 0x456658 ; ret
0x0000000000623a28 : add eax, 0x458d4800 ; ror byte ptr [rcx - 0x77], 1 ; ret 0xdee8
0x00000000005a9658 : add eax, 0x459283 ; jmp rax
0x00000000005a8d88 : add eax, 0x459b53 ; jmp rax
0x00000000005a8cf8 : add eax, 0x459be3 ; jmp rax
0x00000000005a8bc8 : add eax, 0x459d13 ; jmp rax
0x00000000005a8b58 : add eax, 0x459d83 ; jmp rax
0x00000000005a3c78 : add eax, 0x45ec63 ; jmp rax
0x00000000005a2dc8 : add eax, 0x45fb13 ; jmp rax
0x00000000005a2d38 : add eax, 0x45fba3 ; jmp rax
0x00000000005a2c48 : add eax, 0x45fc93 ; jmp rax
0x00000000005a2bd8 : add eax, 0x45fd03 ; jmp rax
0x0000000000598b08 : add eax, 0x469dd3 ; jmp rax
0x0000000000597f48 : add eax, 0x46a993 ; jmp rax
0x0000000000597eb8 : add eax, 0x46aa23 ; jmp rax
0x0000000000597d88 : add eax, 0x46ab53 ; jmp rax
0x0000000000597d18 : add eax, 0x46abc3 ; jmp rax
0x0000000000597be8 : add eax, 0x46acf3 ; jmp rax
0x0000000000596fe8 : add eax, 0x46b8f3 ; jmp rax
0x0000000000596f58 : add eax, 0x46b983 ; jmp rax
0x0000000000596e68 : add eax, 0x46ba73 ; jmp rax
0x0000000000596df8 : add eax, 0x46bae3 ; jmp rax
0x0000000000596cc8 : add eax, 0x46bc13 ; jmp rax
0x0000000000596188 : add eax, 0x46c753 ; jmp rax
0x00000000005960f8 : add eax, 0x46c7e3 ; jmp rax
0x0000000000596008 : add eax, 0x46c8d3 ; jmp rax
0x0000000000595f98 : add eax, 0x46c943 ; jmp rax
0x000000000058807e : add eax, 0x47a85d ; jmp rax
0x00000000006a40b7 : add eax, 0x480035e8 ; add esp, 8 ; jmp rax
0x00000000006774b6 : add eax, 0x484ed46a ; add eax, ebx ; pop rbx ; ret
0x000000000062a03c : add eax, 0x48906600 ; mov eax, dword ptr [rdi + 0x18] ; ret
0x0000000000578398 : add eax, 0x48a543 ; jmp rax
0x0000000000628a61 : add eax, 0x48a8eb00 ; mov ebx, eax ; jmp 0x628a35
0x0000000000572fd8 : add eax, 0x48f903 ; jmp rax
0x0000000000572f48 : add eax, 0x48f993 ; jmp rax
0x0000000000572e58 : add eax, 0x48fa83 ; jmp rax
0x0000000000572de8 : add eax, 0x48faf3 ; jmp rax
0x000000000056ca18 : add eax, 0x495ec3 ; jmp rax
0x000000000056c458 : add eax, 0x496483 ; jmp rax
0x000000000056b898 : add eax, 0x497043 ; jmp rax
0x000000000056b808 : add eax, 0x4970d3 ; jmp rax
0x000000000056b6d8 : add eax, 0x497203 ; jmp rax
0x000000000056b668 : add eax, 0x497273 ; jmp rax
0x000000000066bbda : add eax, 0x49800000 ; jb 0x66bbe8 ; ret
0x00000000005593f8 : add eax, 0x4a94e3 ; jmp rax
0x0000000000558b28 : add eax, 0x4a9db3 ; jmp rax
0x0000000000558a98 : add eax, 0x4a9e43 ; jmp rax
0x0000000000558978 : add eax, 0x4a9f63 ; jmp rax
0x0000000000558908 : add eax, 0x4a9fd3 ; jmp rax
0x0000000000550f2c : add eax, 0x4b19af ; jmp rax
0x0000000000550db8 : add eax, 0x4b1b23 ; jmp rax
0x0000000000550338 : add eax, 0x4b25a3 ; jmp rax
0x00000000005501b8 : add eax, 0x4b2723 ; jmp rax
0x000000000054f9b8 : add eax, 0x4b2f23 ; jmp rax
0x000000000054f928 : add eax, 0x4b2fb3 ; jmp rax
0x000000000054f838 : add eax, 0x4b30a3 ; jmp rax
0x000000000054f7c8 : add eax, 0x4b3113 ; jmp rax
0x00000000007cc89c : add eax, 0x4b406 ; retf
0x00000000005482c1 : add eax, 0x4b5d9a ; ret
0x0000000000549fd6 : add eax, 0x4b88e5 ; add rsp, 8 ; jmp rax
0x00000000005481be : add eax, 0x4ba71d ; jmp rax
0x0000000000547c17 : add eax, 0x4bacc4 ; jmp rax
0x000000000054783a : add eax, 0x4bb0a1 ; jmp rax
0x0000000000547417 : add eax, 0x4bb4c4 ; jmp rax
0x0000000000547118 : add eax, 0x4bb7c3 ; jmp rax
0x0000000000546578 : add eax, 0x4bc363 ; jmp rax
0x00000000005464e8 : add eax, 0x4bc3f3 ; jmp rax
0x0000000000545458 : add eax, 0x4bd483 ; jmp rax
0x00000000005453e8 : add eax, 0x4bd4f3 ; jmp rax
0x00000000007e9655 : add eax, 0x4c000004 ; retf
0x00000000007f2d34 : add eax, 0x4c01d78a ; stosd dword ptr [rdi], eax ; and al, 6 ; ret 0x1d7
0x0000000000535abb : add eax, 0x4cce20 ; jmp rax
0x000000000053593b : add eax, 0x4ccfa0 ; jmp rax
0x00000000005320e8 : add eax, 0x4d07f3 ; jmp rax
0x0000000000531f78 : add eax, 0x4d0963 ; jmp rax
0x0000000000530118 : add eax, 0x4d27c3 ; jmp rax
0x0000000000530088 : add eax, 0x4d2853 ; jmp rax
0x000000000052ff68 : add eax, 0x4d2973 ; jmp rax
0x000000000052fef8 : add eax, 0x4d29e3 ; jmp rax
0x000000000052fad8 : add eax, 0x4d2e03 ; jmp rax
0x000000000052eed8 : add eax, 0x4d3a03 ; jmp rax
0x000000000052ee48 : add eax, 0x4d3a93 ; jmp rax
0x000000000052ed58 : add eax, 0x4d3b83 ; jmp rax
0x000000000052ece8 : add eax, 0x4d3bf3 ; jmp rax
0x000000000052e828 : add eax, 0x4d40b3 ; jmp rax
0x000000000052dc68 : add eax, 0x4d4c73 ; jmp rax
0x000000000052dbd8 : add eax, 0x4d4d03 ; jmp rax
0x000000000052daa8 : add eax, 0x4d4e33 ; jmp rax
0x000000000052da38 : add eax, 0x4d4ea3 ; jmp rax
0x000000000052969b : add eax, 0x4d9240 ; jmp rax
0x00000000005295db : add eax, 0x4d9300 ; jmp rax
0x000000000050d94f : add eax, 0x4f4f8c ; jmp rax
0x000000000050c9e8 : add eax, 0x4f5ef3 ; jmp rax
0x000000000050be38 : add eax, 0x4f6aa3 ; jmp rax
0x000000000050bda8 : add eax, 0x4f6b33 ; jmp rax
0x000000000050bc98 : add eax, 0x4f6c43 ; jmp rax
0x000000000050bc28 : add eax, 0x4f6cb3 ; jmp rax
0x0000000000505e28 : add eax, 0x4fcab3 ; jmp rax
0x0000000000505cb8 : add eax, 0x4fcc23 ; jmp rax
0x0000000000505238 : add eax, 0x4fd6a3 ; jmp rax
0x0000000000504f48 : add eax, 0x4fd993 ; jmp rax
0x0000000000504b68 : add eax, 0x4fdd73 ; jmp rax
0x00000000005045f8 : add eax, 0x4fe2e3 ; jmp rax
0x0000000000503a48 : add eax, 0x4fee93 ; jmp rax
0x0000000000501a93 : add eax, 0x500e48 ; jmp rax
0x00000000007e7219 : add eax, 0x504af00 ; ret
0x00000000007e1811 : add eax, 0x504b901 ; ret
0x00000000007d8f0a : add eax, 0x504bb05 ; ret
0x00000000007f277a : add eax, 0x5059a05 ; retf 0x505
0x00000000007e0ef8 : add eax, 0x5059b00 ; retf 5
0x00000000007c47ef : add eax, 0x5059e00 ; retf
0x00000000007dc228 : add eax, 0x505c600 ; retf
0x00000000004f72b6 : add eax, 0x50c715 ; add rsp, 8 ; ret
0x00000000004ef180 : add eax, 0x50e18b ; pop rbp ; ret
0x00000000004f4148 : add eax, 0x50e79b ; call rax
0x00000000004f40e8 : add eax, 0x50e7fb ; call rax
0x00000000004f4088 : add eax, 0x50e85b ; call rax
0x00000000004f4028 : add eax, 0x50e8bb ; call rax
0x00000000004f3f03 : add eax, 0x50e9e0 ; call rax
0x00000000004f3dda : add eax, 0x50eb09 ; call rax
0x00000000004f3c10 : add eax, 0x50ecd3 ; call rax
0x00000000004f3abf : add eax, 0x50ee24 ; call rax
0x00000000004f3a6d : add eax, 0x50ee76 ; call rax
0x00000000004f37be : add eax, 0x50f125 ; call rax
0x00000000004f364c : add eax, 0x50f297 ; call rax
0x00000000004f34cc : add eax, 0x50f417 ; call rax
0x00000000004f346e : add eax, 0x50f475 ; call rax
0x00000000004f341f : add eax, 0x50f4c4 ; call rax
0x00000000004f32d1 : add eax, 0x50f612 ; call rax
0x00000000004f31ab : add eax, 0x50f738 ; call rax
0x00000000004f3134 : add eax, 0x50f7af ; call rax
0x00000000004f3112 : add eax, 0x50f7c9 ; call rax
0x00000000004f30cf : add eax, 0x50f814 ; call rax
0x00000000004f2fef : add eax, 0x50f8ec ; call rax
0x00000000004f2fa6 : add eax, 0x50f93d ; call rax
0x00000000004f2ee6 : add eax, 0x50f9f5 ; call rax
0x00000000004f2e9d : add eax, 0x50fa46 ; call rax
0x00000000004f28ab : add eax, 0x510030 ; call rax
0x00000000004f2749 : add eax, 0x51019a ; call rax
0x00000000004f2605 : add eax, 0x5102d6 ; call rax
0x00000000004f25a0 : add eax, 0x510343 ; call rax
0x00000000004f233a : add eax, 0x5105a1 ; call rax
0x00000000004f22ed : add eax, 0x5105f6 ; call rax
0x00000000004f18e6 : add eax, 0x510ff5 ; call rax
0x00000000004f18c4 : add eax, 0x51101f ; call rax
0x00000000004f1663 : add eax, 0x511280 ; call rax
0x00000000004f1559 : add eax, 0x511382 ; call rax
0x00000000004f153c : add eax, 0x5113a7 ; call rax
0x00000000004f13c6 : add eax, 0x511515 ; call rax
0x00000000004f138e : add eax, 0x511555 ; call rax
0x00000000004f12d6 : add eax, 0x511605 ; call rax
0x00000000004f12ba : add eax, 0x511629 ; call rax
0x00000000004f113d : add eax, 0x5117a6 ; call rax
0x00000000004f0b9c : add eax, 0x511d3f ; call rax
0x00000000004f0b5c : add eax, 0x511d87 ; call rax
0x00000000004f0aa3 : add eax, 0x511e38 ; call rax
0x00000000004f0a60 : add eax, 0x511e83 ; call rax
0x00000000004f083c : add eax, 0x51209f ; call rax
0x00000000004f07fc : add eax, 0x5120e7 ; call rax
0x00000000004f07c2 : add eax, 0x512121 ; call rax
0x00000000004f0765 : add eax, 0x512176 ; call rax
0x00000000004f0725 : add eax, 0x5121be ; call rax
0x00000000004f06eb : add eax, 0x5121f8 ; call rax
0x00000000004f051e : add eax, 0x5123bd ; call rax
0x00000000004f04de : add eax, 0x512405 ; call rax
0x00000000004f03ab : add eax, 0x512530 ; call rax
0x00000000004f036a : add eax, 0x512579 ; call rax
0x00000000004f0325 : add eax, 0x5125be ; call rax
0x00000000004efe0c : add eax, 0x512ad7 ; call rax
0x00000000004ef608 : add eax, 0x5132db ; call rax
0x00000000004ef433 : add eax, 0x5134b0 ; call rax
0x00000000004ec83e : add eax, 0x51609d ; call rax
0x00000000004ec7ec : add eax, 0x5160f7 ; call rax
0x00000000004ec733 : add eax, 0x5161a8 ; call rax
0x00000000004ec6de : add eax, 0x516205 ; call rax
0x00000000004ec618 : add eax, 0x5162c3 ; call rax
0x00000000004ec5b0 : add eax, 0x516333 ; call rax
0x00000000004ec4e8 : add eax, 0x5163f3 ; call rax
0x00000000004ec480 : add eax, 0x516463 ; call rax
0x00000000004ec2f7 : add eax, 0x5165e4 ; call rax
0x00000000004ec2a2 : add eax, 0x516641 ; call rax
0x00000000004ec125 : add eax, 0x5167b6 ; call rax
0x00000000004ec106 : add eax, 0x5167dd ; call rax
0x00000000004ec04d : add eax, 0x51688e ; call rax
0x00000000004ec010 : add eax, 0x5168d3 ; call rax
0x00000000004ebee5 : add eax, 0x5169f6 ; call rax
0x00000000004ebe7a : add eax, 0x516a69 ; call rax
0x00000000004ebce7 : add eax, 0x516bf4 ; call rax
0x00000000004ebc64 : add eax, 0x516c7f ; call rax
0x00000000004ebb9c : add eax, 0x516d3f ; call rax
0x00000000004ebb34 : add eax, 0x516daf ; call rax
0x00000000004eba76 : add eax, 0x516e65 ; call rax
0x00000000004eba20 : add eax, 0x516ec3 ; call rax
0x00000000004eabb6 : add eax, 0x517d2d ; call rax
0x00000000004e9697 : add eax, 0x519244 ; call rax
0x00000000004e964a : add eax, 0x519299 ; call rax
0x00000000004e91d1 : add eax, 0x51970a ; call rax
0x00000000004e9184 : add eax, 0x51975f ; call rax
0x00000000004e8d01 : add eax, 0x519bda ; call rax
0x00000000004e8cbe : add eax, 0x519c25 ; call rax
0x00000000004e8c6e : add eax, 0x519c75 ; call rax
0x00000000004e89f3 : add eax, 0x519ef0 ; call rax
0x00000000004e8474 : add eax, 0x51a467 ; call rax
0x00000000004e844c : add eax, 0x51a497 ; call rax
0x00000000004e7ecb : add eax, 0x51aa10 ; call rax
0x00000000004e7e76 : add eax, 0x51aa6d ; call rax
0x00000000004e7c00 : add eax, 0x51acdb ; call rax
0x00000000004e7bbd : add eax, 0x51ad26 ; call rax
0x00000000004e7533 : add eax, 0x51b3b0 ; call rax
0x00000000004e73f9 : add eax, 0x51b4e2 ; call rax
0x00000000004e73dc : add eax, 0x51b507 ; call rax
0x00000000004e7323 : add eax, 0x51b5b8 ; call rax
0x00000000004e7302 : add eax, 0x51b5e1 ; call rax
0x00000000004e69ec : add eax, 0x51beef ; call rax
0x00000000004e69ca : add eax, 0x51bf19 ; call rax
0x00000000004e6305 : add eax, 0x51c5d6 ; call rax
0x00000000004e628a : add eax, 0x51c659 ; call rax
0x00000000004e4714 : add eax, 0x51e1c7 ; call rax
0x00000000004e46c7 : add eax, 0x51e21c ; call rax
0x00000000004e388d : add eax, 0x51f04e ; call rax
0x00000000004e3838 : add eax, 0x51f0ab ; call rax
0x00000000004e3493 : add eax, 0x51f448 ; call rax
0x00000000004e3450 : add eax, 0x51f493 ; call rax
0x00000000004e3403 : add eax, 0x51f4e0 ; call rax
0x00000000004e32d0 : add eax, 0x51f613 ; call rax
0x00000000004e31cd : add eax, 0x51f716 ; call rax
0x00000000004e30e2 : add eax, 0x51f801 ; call rax
0x00000000004e2e9c : add eax, 0x51fa3f ; call rax
0x00000000004e2e52 : add eax, 0x51fa91 ; call rax
0x00000000004e2d26 : add eax, 0x51fbb5 ; call rax
0x00000000004e2c8a : add eax, 0x51fc59 ; call rax
0x00000000004e2a1a : add eax, 0x51fec1 ; call rax
0x00000000004e2989 : add eax, 0x51ff5a ; call rax
0x00000000004e15ab : add eax, 0x521330 ; call rax
0x00000000004e1546 : add eax, 0x52139d ; call rax
0x00000000004e1016 : add eax, 0x5218c5 ; call rax
0x00000000004e0fc9 : add eax, 0x52191a ; call rax
0x00000000004ddfff : add eax, 0x5248dc ; call rax
0x00000000004ddfaa : add eax, 0x524939 ; call rax
0x00000000004dd98d : add eax, 0x524f4e ; call rax
0x00000000004dd938 : add eax, 0x524fab ; call rax
0x00000000004dd38b : add eax, 0x525550 ; call rax
0x00000000004dd335 : add eax, 0x5255ae ; call rax
0x00000000004dcdc1 : add eax, 0x525b1a ; call rax
0x00000000004dcd6b : add eax, 0x525b78 ; call rax
0x00000000004dbe04 : add eax, 0x526ad7 ; call rax
0x00000000004dbdaf : add eax, 0x526b34 ; call rax
0x00000000004daee1 : add eax, 0x5279fa ; call rax
0x00000000004dae96 : add eax, 0x527a4d ; call rax
0x00000000004dabc6 : add eax, 0x527d15 ; call rax
0x00000000004dab4a : add eax, 0x527d99 ; call rax
0x00000000004da439 : add eax, 0x5284aa ; call rax
0x00000000004da3e2 : add eax, 0x528501 ; call rax
0x00000000004da3a0 : add eax, 0x528543 ; call rax
0x00000000004d9a93 : add eax, 0x528e50 ; call rax
0x00000000004d9796 : add eax, 0x529145 ; call rax
0x00000000004d975e : add eax, 0x529185 ; call rax
0x00000000004d959a : add eax, 0x529341 ; call rax
0x00000000004d9562 : add eax, 0x529381 ; call rax
0x00000000004d9392 : add eax, 0x529549 ; call rax
0x00000000004d935a : add eax, 0x529589 ; call rax
0x00000000004d9041 : add eax, 0x52989a ; call rax
0x00000000004d8ffe : add eax, 0x5298e5 ; call rax
0x00000000004d8ea5 : add eax, 0x529a36 ; call rax
0x00000000004d8e62 : add eax, 0x529a81 ; call rax
0x00000000004d8daa : add eax, 0x529b31 ; call rax
0x00000000004d8d64 : add eax, 0x529b7f ; call rax
0x00000000004d8cac : add eax, 0x529c2f ; call rax
0x00000000004d8c66 : add eax, 0x529c7d ; call rax
0x00000000004d8bae : add eax, 0x529d2d ; call rax
0x00000000004d8b68 : add eax, 0x529d7b ; call rax
0x00000000004d8ab0 : add eax, 0x529e2b ; call rax
0x00000000004d8a6a : add eax, 0x529e79 ; call rax
0x00000000004d7c87 : add eax, 0x52ac54 ; call rax
0x00000000004d7c1a : add eax, 0x52acc9 ; call rax
0x00000000004d7b0f : add eax, 0x52adcc ; call rax
0x00000000004d7ac0 : add eax, 0x52ae23 ; call rax
0x00000000004d6f2d : add eax, 0x52b9ae ; call rax
0x00000000004d6df4 : add eax, 0x52baef ; call rax
0x00000000004d6d2d : add eax, 0x52bbae ; call rax
0x00000000004d6cd4 : add eax, 0x52bc0f ; call rax
0x00000000004d6c1a : add eax, 0x52bcc1 ; call rax
0x00000000004d6bd4 : add eax, 0x52bd0f ; call rax
0x00000000004d65f0 : add eax, 0x52c2eb ; call rax
0x00000000004d65ad : add eax, 0x52c336 ; call rax
0x00000000004d656c : add eax, 0x52c377 ; call rax
0x00000000004d6460 : add eax, 0x52c47b ; call rax
0x00000000004d641d : add eax, 0x52c4c6 ; call rax
0x00000000004d63dc : add eax, 0x52c507 ; call rax
0x00000000004d6046 : add eax, 0x52c895 ; call rax
0x00000000004d5f6e : add eax, 0x52c975 ; call rax
0x00000000004d5cfe : add eax, 0x52cbe5 ; call rax
0x00000000004d5739 : add eax, 0x52d1a2 ; call rax
0x00000000004d56f2 : add eax, 0x52d1f1 ; call rax
0x00000000004d5530 : add eax, 0x52d3ab ; call rax
0x00000000004d54ce : add eax, 0x52d415 ; call rax
0x00000000004d3e60 : add eax, 0x52ea7b ; call rax
0x00000000004d3e1d : add eax, 0x52eac6 ; call rax
0x00000000004d3de0 : add eax, 0x52eb03 ; call rax
0x00000000004d3d33 : add eax, 0x52eba8 ; call rax
0x00000000004d3cf0 : add eax, 0x52ebf3 ; call rax
0x00000000004d3cb6 : add eax, 0x52ec2d ; call rax
0x00000000004d3c0b : add eax, 0x52ecd0 ; call rax
0x00000000004d3bc8 : add eax, 0x52ed1b ; call rax
0x00000000004d3b8e : add eax, 0x52ed55 ; call rax
0x00000000004d3ade : add eax, 0x52edfd ; call rax
0x00000000004d3a9b : add eax, 0x52ee48 ; call rax
0x00000000004d3a5e : add eax, 0x52ee85 ; call rax
0x00000000004d39ac : add eax, 0x52ef2f ; call rax
0x00000000004d3969 : add eax, 0x52ef7a ; call rax
0x00000000004d392c : add eax, 0x52efb7 ; call rax
0x00000000004d3129 : add eax, 0x52f7ba ; call rax
0x00000000004d2459 : add eax, 0x530482 ; call rax
0x00000000004d2416 : add eax, 0x5304cd ; call rax
0x00000000004d2124 : add eax, 0x5307b7 ; call rax
0x00000000004d20e1 : add eax, 0x530802 ; call rax
0x00000000004d20a4 : add eax, 0x53083f ; call rax
0x00000000004d1d0b : add eax, 0x530bd8 ; call rax
0x00000000004d11a9 : add eax, 0x53173a ; call rax
0x00000000004d0e33 : add eax, 0x531ab0 ; call rax
0x00000000004d0a1f : add eax, 0x531ec4 ; call rax
0x00000000004cd9fe : add eax, 0x534edd ; call rax
0x00000000004cd9b7 : add eax, 0x534f2c ; call rax
0x00000000004cd5ad : add eax, 0x535336 ; call rax
0x00000000004cd43c : add eax, 0x53549f ; call rax
0x00000000004cd40c : add eax, 0x5354d7 ; call rax
0x00000000004cd28c : add eax, 0x535657 ; call rax
0x00000000004cd194 : add eax, 0x535747 ; call rax
0x00000000004cd178 : add eax, 0x53576b ; call rax
0x00000000004cd011 : add eax, 0x5358ca ; call rax
0x00000000004ccfb2 : add eax, 0x535931 ; call rax
0x00000000004cce99 : add eax, 0x535a42 ; call rax
0x00000000004cce4b : add eax, 0x535a98 ; call rax
0x00000000004cc773 : add eax, 0x536168 ; call rax
0x00000000004cc71e : add eax, 0x5361c5 ; call rax
0x00000000004cc288 : add eax, 0x536653 ; call rax
0x00000000004cc248 : add eax, 0x53669b ; call rax
0x00000000004cc16b : add eax, 0x536770 ; call rax
0x00000000004cc128 : add eax, 0x5367bb ; call rax
0x00000000004cbc56 : add eax, 0x536c85 ; call rax
0x00000000004cbc13 : add eax, 0x536cd0 ; call rax
0x00000000004cbbbb : add eax, 0x536d28 ; call rax
0x00000000004cb77f : add eax, 0x53715c ; call rax
0x00000000004cb73c : add eax, 0x5371a7 ; call rax
0x00000000004cb6d9 : add eax, 0x53720a ; call rax
0x00000000004ca7da : add eax, 0x538101 ; call rax
0x00000000004ca797 : add eax, 0x53814c ; call rax
0x00000000004ca747 : add eax, 0x53819c ; call rax
0x00000000004ca21f : add eax, 0x5386c4 ; call rax
0x00000000004ca0ab : add eax, 0x538830 ; call rax
0x00000000004ca060 : add eax, 0x538883 ; call rax
0x00000000004c99ae : add eax, 0x538f35 ; call rax
0x00000000004c98da : add eax, 0x539009 ; call rax
0x00000000004c96f5 : add eax, 0x5391ee ; call rax
0x00000000004c9629 : add eax, 0x5392ba ; call rax
0x00000000004c9382 : add eax, 0x539561 ; call rax
0x00000000004c91ee : add eax, 0x5396ed ; call rax
0x00000000004c91ae : add eax, 0x539735 ; call rax
0x00000000004c90f5 : add eax, 0x5397e6 ; call rax
0x00000000004c90b2 : add eax, 0x539831 ; call rax
0x00000000004c8fec : add eax, 0x5398ef ; call rax
0x00000000004c8f96 : add eax, 0x53994d ; call rax
0x00000000004c8edb : add eax, 0x539a00 ; call rax
0x00000000004c8ebe : add eax, 0x539a25 ; call rax
0x00000000004c8cf7 : add eax, 0x539be4 ; call rax
0x00000000004c8caf : add eax, 0x539c34 ; call rax
0x00000000004c8b53 : add eax, 0x539d90 ; call rax
0x00000000004c86bc : add eax, 0x53a227 ; call rax
0x00000000004c8667 : add eax, 0x53a274 ; call rax
0x00000000004c8624 : add eax, 0x53a2bf ; call rax
0x00000000004c85e5 : add eax, 0x53a2fe ; call rax
0x00000000004c8511 : add eax, 0x53a3d2 ; call rax
0x00000000004c841c : add eax, 0x53a4bf ; call rax
0x00000000004c83d5 : add eax, 0x53a50e ; call rax
0x00000000004c8395 : add eax, 0x53a54e ; call rax
0x00000000004c7f7a : add eax, 0x53a969 ; call rax
0x00000000004c7925 : add eax, 0x53afbe ; call rax
0x00000000004c7830 : add eax, 0x53b0ab ; call rax
0x00000000004c7814 : add eax, 0x53b0cf ; call rax
0x00000000004c6a96 : add eax, 0x53be45 ; call rax
0x00000000004c6a7a : add eax, 0x53be69 ; call rax
0x00000000004c69a3 : add eax, 0x53bf40 ; call rax
0x00000000004c6963 : add eax, 0x53bf80 ; call rax
0x00000000004c5fe5 : add eax, 0x53c8f6 ; call rax
0x00000000004c5f7e : add eax, 0x53c965 ; call rax
0x00000000004c59db : add eax, 0x53cf00 ; call rax
0x00000000004c5958 : add eax, 0x53cf8b ; call rax
0x00000000004c589e : add eax, 0x53d03d ; call rax
0x00000000004c585e : add eax, 0x53d085 ; call rax
0x00000000004c56b8 : add eax, 0x53d223 ; call rax
0x00000000004c5677 : add eax, 0x53d26c ; call rax
0x00000000004c5520 : add eax, 0x53d3bb ; call rax
0x00000000004c54e0 : add eax, 0x53d403 ; call rax
0x00000000004c5305 : add eax, 0x53d5d6 ; call rax
0x00000000004c52c5 : add eax, 0x53d61e ; call rax
0x00000000004c511e : add eax, 0x53d7bd ; call rax
0x00000000004c50de : add eax, 0x53d805 ; call rax
0x00000000004c4f2b : add eax, 0x53d9b0 ; call rax
0x00000000004c4eeb : add eax, 0x53d9f8 ; call rax
0x00000000004c4d76 : add eax, 0x53db65 ; call rax
0x00000000004c4d36 : add eax, 0x53dbad ; call rax
0x00000000004c4b8f : add eax, 0x53dd4c ; call rax
0x00000000004c4b4e : add eax, 0x53dd95 ; call rax
0x00000000004c49e8 : add eax, 0x53def3 ; call rax
0x00000000004c49a8 : add eax, 0x53df3b ; call rax
0x00000000007bf04e : add eax, 0x53e016d ; retf 0x301
0x00000000004c44ea : add eax, 0x53e3f1 ; call rax
0x00000000004c44aa : add eax, 0x53e439 ; call rax
0x00000000004c4466 : add eax, 0x53e47d ; call rax
0x00000000004c41a8 : add eax, 0x53e733 ; call rax
0x00000000004c4168 : add eax, 0x53e77b ; call rax
0x00000000004c3b3f : add eax, 0x53ed9c ; call rax
0x00000000004c3aff : add eax, 0x53ede4 ; call rax
0x00000000004c3abb : add eax, 0x53ee28 ; call rax
0x00000000004c3686 : add eax, 0x53f255 ; call rax
0x00000000004c366a : add eax, 0x53f279 ; call rax
0x00000000004c3539 : add eax, 0x53f3aa ; call rax
0x00000000004c3428 : add eax, 0x53f4b3 ; call rax
0x00000000004c33e8 : add eax, 0x53f4fb ; call rax
0x00000000004c332f : add eax, 0x53f5ac ; call rax
0x00000000004c3312 : add eax, 0x53f5d1 ; call rax
0x00000000004c3134 : add eax, 0x53f7a7 ; call rax
0x00000000004c30ef : add eax, 0x53f7f4 ; call rax
0x00000000004c30ad : add eax, 0x53f836 ; call rax
0x00000000004c3029 : add eax, 0x53f8ba ; call rax
0x00000000004c2b4f : add eax, 0x53fd8c ; call rax
0x00000000004c2ace : add eax, 0x53fe15 ; call rax
0x00000000004c27d0 : add eax, 0x54010b ; call rax
0x00000000004c278d : add eax, 0x540156 ; call rax
0x00000000004c246a : add eax, 0x540471 ; call rax
0x00000000004c244e : add eax, 0x540495 ; call rax
0x00000000004c2319 : add eax, 0x5405ca ; call rax
0x00000000004c225c : add eax, 0x54067f ; call rax
0x00000000004c2240 : add eax, 0x5406a3 ; call rax
0x00000000004c198e : add eax, 0x540f4d ; call rax
0x00000000004c1972 : add eax, 0x540f71 ; call rax
0x00000000004c18ba : add eax, 0x541021 ; call rax
0x00000000004c1872 : add eax, 0x541071 ; call rax
0x00000000004c17b9 : add eax, 0x541122 ; call rax
0x00000000004c179c : add eax, 0x541147 ; call rax
0x00000000004c1671 : add eax, 0x54126a ; call rax
0x00000000004c15f2 : add eax, 0x5412f1 ; call rax
0x00000000004c10c9 : add eax, 0x541812 ; call rax
0x00000000004c107b : add eax, 0x541868 ; call rax
0x00000000004c0f96 : add eax, 0x54194d ; call rax
0x00000000004c0b3f : add eax, 0x541d9c ; call rax
0x00000000004c0ad9 : add eax, 0x541e0a ; call rax
0x00000000004c09f1 : add eax, 0x541ef2 ; call rax
0x00000000004c0450 : add eax, 0x54248b ; call rax
0x00000000004c0434 : add eax, 0x5424af ; call rax
0x00000000004c037c : add eax, 0x54255f ; call rax
0x00000000004c0334 : add eax, 0x5425af ; call rax
0x00000000004c027b : add eax, 0x542660 ; call rax
0x00000000004c025e : add eax, 0x542685 ; call rax
0x00000000004c0133 : add eax, 0x5427a8 ; call rax
0x00000000004c00b4 : add eax, 0x54282f ; call rax
0x00000000004bfabc : add eax, 0x542e1f ; call rax
0x00000000004bfa6e : add eax, 0x542e75 ; call rax
0x00000000004bf989 : add eax, 0x542f5a ; call rax
0x00000000004bf609 : add eax, 0x5432d2 ; call rax
0x00000000004bf5a3 : add eax, 0x543340 ; call rax
0x00000000004bf4bb : add eax, 0x543428 ; call rax
0x00000000004bf143 : add eax, 0x543798 ; call rax
0x00000000004bf0fc : add eax, 0x5437e7 ; call rax
0x00000000004beed5 : add eax, 0x543a06 ; call rax
0x00000000004bee92 : add eax, 0x543a51 ; call rax
0x00000000004bedda : add eax, 0x543b01 ; call rax
0x00000000004bedbe : add eax, 0x543b25 ; call rax
0x00000000004bed06 : add eax, 0x543bd5 ; call rax
0x00000000004becbe : add eax, 0x543c25 ; call rax
0x00000000004bec05 : add eax, 0x543cd6 ; call rax
0x00000000004bebe8 : add eax, 0x543cfb ; call rax
0x00000000004beabd : add eax, 0x543e1e ; call rax
0x00000000004bea3e : add eax, 0x543ea5 ; call rax
0x00000000004be447 : add eax, 0x544494 ; call rax
0x00000000004be3f9 : add eax, 0x5444ea ; call rax
0x00000000004be314 : add eax, 0x5445cf ; call rax
0x00000000004bdf31 : add eax, 0x5449aa ; call rax
0x00000000004bdecb : add eax, 0x544a18 ; call rax
0x00000000004bdde3 : add eax, 0x544b00 ; call rax
0x00000000004bda6b : add eax, 0x544e70 ; call rax
0x00000000004bda24 : add eax, 0x544ebf ; call rax
0x00000000004bd82f : add eax, 0x5450ac ; call rax
0x00000000004bd7ec : add eax, 0x5450f7 ; call rax
0x00000000004bbbdb : add eax, 0x546d08 ; call rax
0x00000000004b93b8 : add eax, 0x5494b3 ; call rax
0x00000000004b93af : add eax, 0x5494b4 ; call rax
0x00000000004b9383 : add eax, 0x5494d8 ; call rax
0x00000000004b938c : add eax, 0x54954f ; call rax
0x00000000004b937a : add eax, 0x549569 ; call rax
0x00000000004b919c : add eax, 0x54973f ; call rax
0x00000000004b9178 : add eax, 0x54976b ; call rax
0x00000000004b8d38 : add eax, 0x549ba3 ; call rax
0x00000000004b8d14 : add eax, 0x549bcf ; call rax
0x00000000004b8778 : add eax, 0x54a16b ; call rax
0x00000000004b8624 : add eax, 0x54a2bf ; call rax
0x00000000004b8568 : add eax, 0x54a373 ; call rax
0x00000000004b854c : add eax, 0x54a397 ; call rax
0x00000000004b7fe0 : add eax, 0x54a88b ; call rax
0x00000000004b7fd7 : add eax, 0x54a88c ; call rax
0x00000000004b7fab : add eax, 0x54a8b0 ; call rax
0x00000000004b7fb4 : add eax, 0x54a927 ; call rax
0x00000000004b7fa2 : add eax, 0x54a941 ; call rax
0x00000000004b7e72 : add eax, 0x54a9f9 ; call rax
0x00000000004b7e69 : add eax, 0x54a9fa ; call rax
0x00000000004b7e3d : add eax, 0x54aa1e ; call rax
0x00000000004b7e46 : add eax, 0x54aa95 ; call rax
0x00000000004b7e34 : add eax, 0x54aaaf ; call rax
0x00000000004b7bf8 : add eax, 0x54aceb ; call rax
0x00000000004b7a7e : add eax, 0x54ae65 ; call rax
0x00000000004b79c2 : add eax, 0x54af19 ; call rax
0x00000000004b79a6 : add eax, 0x54af3d ; call rax
0x00000000004b77c4 : add eax, 0x54b0a7 ; call rax
0x00000000004b77bb : add eax, 0x54b0a8 ; call rax
0x00000000004b778f : add eax, 0x54b0cc ; call rax
0x00000000004b7798 : add eax, 0x54b143 ; call rax
0x00000000004b7786 : add eax, 0x54b15d ; call rax
0x00000000004b76e6 : add eax, 0x54b185 ; call rax
0x00000000004b76dd : add eax, 0x54b186 ; call rax
0x00000000004b76b1 : add eax, 0x54b1aa ; call rax
0x00000000004b76ba : add eax, 0x54b221 ; call rax
0x00000000004b76a8 : add eax, 0x54b23b ; call rax
0x00000000004b7152 : add eax, 0x54b719 ; call rax
0x00000000004b7149 : add eax, 0x54b71a ; call rax
0x00000000004b711d : add eax, 0x54b73e ; call rax
0x00000000004b7126 : add eax, 0x54b7b5 ; call rax
0x00000000004b7114 : add eax, 0x54b7cf ; call rax
0x00000000004b6f36 : add eax, 0x54b9a5 ; call rax
0x00000000004b6f12 : add eax, 0x54b9d1 ; call rax
0x00000000004b6ad2 : add eax, 0x54be09 ; call rax
0x00000000004b6aae : add eax, 0x54be35 ; call rax
0x00000000004b6512 : add eax, 0x54c3d1 ; call rax
0x00000000004b63be : add eax, 0x54c525 ; call rax
0x00000000004b6302 : add eax, 0x54c5d9 ; call rax
0x00000000004b62e6 : add eax, 0x54c5fd ; call rax
0x00000000004b5d7a : add eax, 0x54caf1 ; call rax
0x00000000004b5d71 : add eax, 0x54caf2 ; call rax
0x00000000004b5d45 : add eax, 0x54cb16 ; call rax
0x00000000004b5d4e : add eax, 0x54cb8d ; call rax
0x00000000004b5d3c : add eax, 0x54cba7 ; call rax
0x00000000004b5c0c : add eax, 0x54cc5f ; call rax
0x00000000004b5c03 : add eax, 0x54cc60 ; call rax
0x00000000004b5bd7 : add eax, 0x54cc84 ; call rax
0x00000000004b5be0 : add eax, 0x54ccfb ; call rax
0x00000000004b5bce : add eax, 0x54cd15 ; call rax
0x00000000004b5992 : add eax, 0x54cf51 ; call rax
0x00000000004b5818 : add eax, 0x54d0cb ; call rax
0x00000000004b575c : add eax, 0x54d17f ; call rax
0x00000000004b5740 : add eax, 0x54d1a3 ; call rax
0x00000000004b555e : add eax, 0x54d30d ; call rax
0x00000000004b5555 : add eax, 0x54d30e ; call rax
0x00000000004b5529 : add eax, 0x54d332 ; call rax
0x00000000004b5532 : add eax, 0x54d3a9 ; call rax
0x00000000004b5520 : add eax, 0x54d3c3 ; call rax
0x00000000004b5480 : add eax, 0x54d3eb ; call rax
0x00000000004b5477 : add eax, 0x54d3ec ; call rax
0x00000000004b544b : add eax, 0x54d410 ; call rax
0x00000000004b5454 : add eax, 0x54d487 ; call rax
0x00000000004b5442 : add eax, 0x54d4a1 ; call rax
0x00000000004b34f2 : add eax, 0x54f3f1 ; call rax
0x00000000004b3310 : add eax, 0x54f5cb ; call rax
0x00000000004b32f4 : add eax, 0x54f5ef ; call rax
0x00000000004b26aa : add eax, 0x550239 ; call rax
0x00000000004b2561 : add eax, 0x55037a ; call rax
0x00000000004b2544 : add eax, 0x55039f ; call rax
0x00000000004b236f : add eax, 0x55056c ; call rax
0x00000000004b2325 : add eax, 0x5505be ; call rax
0x00000000004b1d0d : add eax, 0x550bce ; call rax
0x00000000004b1ca8 : add eax, 0x550c3b ; call rax
0x00000000004b1ba5 : add eax, 0x550d36 ; call rax
0x00000000004b1b84 : add eax, 0x550d5f ; call rax
0x00000000004b1acc : add eax, 0x550e0f ; call rax
0x00000000004b1aaa : add eax, 0x550e39 ; call rax
0x00000000004b12d4 : add eax, 0x551607 ; call rax
0x00000000004b12b2 : add eax, 0x551631 ; call rax
0x00000000004b0489 : add eax, 0x552452 ; call rax
0x00000000004b0436 : add eax, 0x5524ad ; call rax
0x00000000004b02a0 : add eax, 0x55263b ; call rax
0x00000000004b01d8 : add eax, 0x55270b ; call rax
0x00000000004b00ec : add eax, 0x5527ef ; call rax
0x00000000004b0096 : add eax, 0x55284d ; call rax
0x00000000004af72a : add eax, 0x5531b1 ; call rax
0x00000000004af6b5 : add eax, 0x55322e ; call rax
0x00000000004af671 : add eax, 0x553272 ; call rax
0x00000000004af05e : add eax, 0x55387d ; call rax
0x00000000004af01b : add eax, 0x5538c8 ; call rax
0x00000000004aefda : add eax, 0x553909 ; call rax
0x00000000004aed4d : add eax, 0x553b96 ; call rax
0x00000000004aecfa : add eax, 0x553be9 ; call rax
0x00000000004ae92a : add eax, 0x553fb1 ; call rax
0x00000000004ae8fc : add eax, 0x553fe7 ; call rax
0x00000000004ae74a : add eax, 0x554191 ; call rax
0x00000000004ae70a : add eax, 0x5541d9 ; call rax
0x00000000004ae62d : add eax, 0x5542ae ; call rax
0x00000000004ae5ea : add eax, 0x5542f9 ; call rax
0x00000000004adb25 : add eax, 0x554dbe ; call rax
0x00000000004ada9a : add eax, 0x554e41 ; call rax
0x00000000004ada57 : add eax, 0x554e8c ; call rax
0x00000000004ada16 : add eax, 0x554ecd ; call rax
0x00000000004ad785 : add eax, 0x555156 ; call rax
0x00000000004ad742 : add eax, 0x5551a1 ; call rax
0x00000000004ad701 : add eax, 0x5551e2 ; call rax
0x00000000004ad4fe : add eax, 0x5553e5 ; call rax
0x00000000004ad40d : add eax, 0x5554ce ; call rax
0x00000000004ad3f0 : add eax, 0x5554f3 ; call rax
0x00000000004a8a05 : add eax, 0x559ede ; call rax
0x00000000004a35f0 : add eax, 0x55f27b ; call rax
0x00000000004a35e7 : add eax, 0x55f27c ; call rax
0x00000000004a35bb : add eax, 0x55f2a0 ; call rax
0x00000000004a35c4 : add eax, 0x55f317 ; call rax
0x00000000004a35b2 : add eax, 0x55f331 ; call rax
0x00000000004a33d4 : add eax, 0x55f507 ; call rax
0x00000000004a33b0 : add eax, 0x55f533 ; call rax
0x00000000004a2f70 : add eax, 0x55f96b ; call rax
0x00000000004a2f4c : add eax, 0x55f997 ; call rax
0x00000000004a29b0 : add eax, 0x55ff33 ; call rax
0x00000000004a285c : add eax, 0x560087 ; call rax
0x00000000004a27a0 : add eax, 0x56013b ; call rax
0x00000000004a2784 : add eax, 0x56015f ; call rax
0x00000000004a2218 : add eax, 0x560653 ; call rax
0x00000000004a220f : add eax, 0x560654 ; call rax
0x00000000004a21e3 : add eax, 0x560678 ; call rax
0x00000000004a21ec : add eax, 0x5606ef ; call rax
0x00000000004a21da : add eax, 0x560709 ; call rax
0x00000000004a20aa : add eax, 0x5607c1 ; call rax
0x00000000004a20a1 : add eax, 0x5607c2 ; call rax
0x00000000004a2075 : add eax, 0x5607e6 ; call rax
0x00000000004a207e : add eax, 0x56085d ; call rax
0x00000000004a206c : add eax, 0x560877 ; call rax
0x00000000004a1e30 : add eax, 0x560ab3 ; call rax
0x00000000004a1cb6 : add eax, 0x560c2d ; call rax
0x00000000004a1bfa : add eax, 0x560ce1 ; call rax
0x00000000004a1bde : add eax, 0x560d05 ; call rax
0x00000000004a19fc : add eax, 0x560e6f ; call rax
0x00000000004a19f3 : add eax, 0x560e70 ; call rax
0x00000000004a19c7 : add eax, 0x560e94 ; call rax
0x00000000004a19d0 : add eax, 0x560f0b ; call rax
0x00000000004a19be : add eax, 0x560f25 ; call rax
0x00000000004a191e : add eax, 0x560f4d ; call rax
0x00000000004a1915 : add eax, 0x560f4e ; call rax
0x00000000004a18e9 : add eax, 0x560f72 ; call rax
0x00000000004a18f2 : add eax, 0x560fe9 ; call rax
0x00000000004a18e0 : add eax, 0x561003 ; call rax
0x00000000004a132f : add eax, 0x5615b4 ; call rax
0x00000000004a1124 : add eax, 0x5617b7 ; call rax
0x00000000004a1108 : add eax, 0x5617db ; call rax
0x00000000004a0a03 : add eax, 0x561ed8 ; call rax
0x00000000004a09e2 : add eax, 0x561f01 ; call rax
0x00000000004a06f7 : add eax, 0x5621e4 ; call rax
0x00000000004a06d6 : add eax, 0x56220d ; call rax
0x000000000049ffb5 : add eax, 0x56292e ; call rax
0x000000000049fde6 : add eax, 0x562af5 ; call rax
0x000000000049fdca : add eax, 0x562b19 ; call rax
0x000000000049fc24 : add eax, 0x562cb7 ; call rax
0x000000000049fc08 : add eax, 0x562cdb ; call rax
0x000000000049f68c : add eax, 0x5631df ; call rax
0x000000000049f673 : add eax, 0x5631f0 ; call rax
0x000000000049f6e9 : add eax, 0x5631f2 ; call rax
0x000000000049f5ef : add eax, 0x56326c ; call rax
0x000000000049f632 : add eax, 0x5632b1 ; call rax
0x000000000049f5f8 : add eax, 0x5632e3 ; call rax
0x000000000049f5e6 : add eax, 0x5632fd ; call rax
0x000000000049f1c8 : add eax, 0x563713 ; call rax
0x000000000049f1ac : add eax, 0x563737 ; call rax
0x000000000049f0bf : add eax, 0x563824 ; call rax
0x000000000049d342 : add eax, 0x5655a1 ; call rax
0x000000000049d216 : add eax, 0x5656c5 ; call rax
0x000000000049d1fa : add eax, 0x5656e9 ; call rax
0x000000000049cf0d : add eax, 0x5659ce ; call rax
0x000000000049ceec : add eax, 0x5659f7 ; call rax
0x000000000049cc01 : add eax, 0x565cda ; call rax
0x000000000049cbe0 : add eax, 0x565d03 ; call rax
0x000000000049c290 : add eax, 0x566653 ; call rax
0x000000000049c1be : add eax, 0x56671d ; call rax
0x000000000049c1a2 : add eax, 0x566741 ; call rax
0x000000000049c0bc : add eax, 0x566827 ; call rax
0x000000000049bfe6 : add eax, 0x5668f5 ; call rax
0x000000000049bfca : add eax, 0x566919 ; call rax
0x000000000049bdd4 : add eax, 0x566b0f ; call rax
0x000000000049bd7b : add eax, 0x566b68 ; call rax
0x000000000049bc09 : add eax, 0x566cd2 ; call rax
0x000000000049bbdc : add eax, 0x566d07 ; call rax
0x000000000049a942 : add eax, 0x567fa1 ; call rax
0x000000000049a86c : add eax, 0x56806f ; call rax
0x000000000049a850 : add eax, 0x568093 ; call rax
0x000000000049a130 : add eax, 0x5687b3 ; call rax
0x00000000004993d9 : add eax, 0x569502 ; call rax
0x0000000000499394 : add eax, 0x56954f ; call rax
0x000000000049928b : add eax, 0x569650 ; call rax
0x0000000000499248 : add eax, 0x56969b ; call rax
0x0000000000498f02 : add eax, 0x5699d9 ; call rax
0x0000000000498eba : add eax, 0x569a29 ; call rax
0x0000000000498c86 : add eax, 0x569c55 ; call rax
0x0000000000498c43 : add eax, 0x569ca0 ; call rax
0x00000000004968a1 : add eax, 0x56c03a ; call rax
0x000000000049685c : add eax, 0x56c087 ; call rax
0x0000000000496475 : add eax, 0x56c466 ; call rax
0x0000000000496431 : add eax, 0x56c4b2 ; call rax
0x0000000000496386 : add eax, 0x56c55d ; call rax
0x0000000000493466 : add eax, 0x56f47d ; call rax
0x0000000000492c51 : add eax, 0x56fc8a ; call rax
0x0000000000492c18 : add eax, 0x56fccb ; call rax
0x0000000000492b0e : add eax, 0x56fdcd ; call rax
0x0000000000492ace : add eax, 0x56fe15 ; call rax
0x00000000004929c5 : add eax, 0x56ff16 ; call rax
0x0000000000492982 : add eax, 0x56ff61 ; call rax
0x0000000000492855 : add eax, 0x570086 ; call rax
0x0000000000492812 : add eax, 0x5700d1 ; call rax
0x00000000004923ab : add eax, 0x570530 ; call rax
0x0000000000492368 : add eax, 0x57057b ; call rax
0x0000000000492325 : add eax, 0x5705be ; call rax
0x0000000000492058 : add eax, 0x570883 ; call rax
0x0000000000492015 : add eax, 0x5708ce ; call rax
0x0000000000491fd2 : add eax, 0x570911 ; call rax
0x0000000000491b8b : add eax, 0x570d50 ; call rax
0x0000000000491b48 : add eax, 0x570d9b ; call rax
0x0000000000491b07 : add eax, 0x570ddc ; call rax
0x0000000000491988 : add eax, 0x570f5b ; call rax
0x0000000000491935 : add eax, 0x570fae ; call rax
0x00000000004917ab : add eax, 0x571130 ; call rax
0x000000000049176a : add eax, 0x571179 ; call rax
0x00000000004915b5 : add eax, 0x571326 ; call rax
0x0000000000491560 : add eax, 0x571383 ; call rax
0x00000000004912c0 : add eax, 0x57161b ; call rax
0x000000000049127d : add eax, 0x571666 ; call rax
0x000000000049123a : add eax, 0x5716a9 ; call rax
0x0000000000490f9d : add eax, 0x57193e ; call rax
0x0000000000490f5a : add eax, 0x571989 ; call rax
0x0000000000490d50 : add eax, 0x571b8b ; call rax
0x0000000000490cfc : add eax, 0x571be7 ; call rax
0x000000000049093e : add eax, 0x571fa5 ; call rax
0x0000000000490555 : add eax, 0x57238e ; call rax
0x000000000048fe48 : add eax, 0x572a93 ; call rax
0x000000000048fdfc : add eax, 0x572ae7 ; call rax
0x000000000048fce4 : add eax, 0x572bf7 ; call rax
0x000000000048fc92 : add eax, 0x572c51 ; call rax
0x000000000048ee87 : add eax, 0x573a54 ; call rax
0x000000000048ee3a : add eax, 0x573aa9 ; call rax
0x000000000048dc1c : add eax, 0x574cc7 ; call rax
0x000000000048dbc5 : add eax, 0x574d1e ; call rax
0x000000000048daff : add eax, 0x574ddc ; call rax
0x000000000048dae2 : add eax, 0x574e01 ; call rax
0x000000000048d9cc : add eax, 0x574f0f ; call rax
0x000000000048d972 : add eax, 0x574f71 ; call rax
0x000000000048d6e7 : add eax, 0x5751f4 ; call rax
0x000000000048d69f : add eax, 0x575244 ; call rax
0x000000000048d5f1 : add eax, 0x5752f2 ; call rax
0x000000000048cda9 : add eax, 0x575b32 ; call rax
0x000000000048cd88 : add eax, 0x575b5b ; call rax
0x000000000048cc59 : add eax, 0x575c82 ; call rax
0x000000000048cbaa : add eax, 0x575d39 ; call rax
0x000000000048caf0 : add eax, 0x575deb ; call rax
0x000000000048caaa : add eax, 0x575e39 ; call rax
0x000000000048c9cd : add eax, 0x575f0e ; call rax
0x000000000048c9a8 : add eax, 0x575f3b ; call rax
0x000000000048c228 : add eax, 0x5766b3 ; call rax
0x000000000048c1ce : add eax, 0x576715 ; call rax
0x000000000048c107 : add eax, 0x5767d4 ; call rax
0x000000000048c0ac : add eax, 0x576837 ; call rax
0x000000000048bf7f : add eax, 0x57695c ; call rax
0x000000000048bf2e : add eax, 0x5769b5 ; call rax
0x000000000048be01 : add eax, 0x576ada ; call rax
0x000000000048bdae : add eax, 0x576b35 ; call rax
0x000000000048bcf4 : add eax, 0x576be7 ; call rax
0x000000000048bccc : add eax, 0x576c17 ; call rax
0x000000000048bb3c : add eax, 0x576d9f ; call rax
0x000000000048baaa : add eax, 0x576e39 ; call rax
0x000000000048b918 : add eax, 0x576fc3 ; call rax
0x000000000048b886 : add eax, 0x57705d ; call rax
0x000000000048b75a : add eax, 0x577181 ; call rax
0x000000000048b6fe : add eax, 0x5771e5 ; call rax
0x000000000048b644 : add eax, 0x577297 ; call rax
0x000000000048b61c : add eax, 0x5772c7 ; call rax
0x000000000048b564 : add eax, 0x577377 ; call rax
0x000000000048b53c : add eax, 0x5773a7 ; call rax
0x000000000048851d : add eax, 0x57a3be ; call rax
0x00000000004884d5 : add eax, 0x57a40e ; call rax
0x0000000000488394 : add eax, 0x57a54f ; call rax
0x0000000000488247 : add eax, 0x57a694 ; call rax
0x00000000004881ff : add eax, 0x57a6e4 ; call rax
0x00000000004880be : add eax, 0x57a825 ; call rax
0x0000000000487dba : add eax, 0x57ab29 ; call rax
0x0000000000487bd5 : add eax, 0x57ad06 ; call rax
0x0000000000487b8a : add eax, 0x57ad59 ; call rax
0x000000000048749c : add eax, 0x57b43f ; call rax
0x0000000000487438 : add eax, 0x57b4ab ; call rax
0x00000000004870c4 : add eax, 0x57b817 ; call rax
0x0000000000487081 : add eax, 0x57b862 ; call rax
0x0000000000487040 : add eax, 0x57b8a3 ; call rax
0x0000000000486e4f : add eax, 0x57ba94 ; call rax
0x00000000004860bc : add eax, 0x57c81f ; call rax
0x000000000048607c : add eax, 0x57c867 ; call rax
0x0000000000485be4 : add eax, 0x57ccf7 ; call rax
0x0000000000485ba2 : add eax, 0x57cd41 ; call rax
0x000000000048582f : add eax, 0x57d0b4 ; call rax
0x00000000004850e3 : add eax, 0x57d7f8 ; call rax
0x00000000004850ae : add eax, 0x57d835 ; call rax
0x0000000000484b51 : add eax, 0x57dd92 ; call rax
0x0000000000484983 : add eax, 0x57df60 ; call rax
0x000000000048466b : add eax, 0x57e278 ; call rax
0x000000000048449d : add eax, 0x57e446 ; call rax
0x00000000004841e8 : add eax, 0x57e6fb ; call rax
0x0000000000483580 : add eax, 0x57f35b ; call rax
0x0000000000483538 : add eax, 0x57f3ab ; call rax
0x00000000004830df : add eax, 0x57f804 ; call rax
0x0000000000483018 : add eax, 0x57f8c3 ; call rax
0x0000000000482fd0 : add eax, 0x57f913 ; call rax
0x0000000000482efa : add eax, 0x57f9e9 ; call rax
0x0000000000482b82 : add eax, 0x57fd61 ; call rax
0x0000000000482b29 : add eax, 0x57fdba ; call rax
0x00000000004829b2 : add eax, 0x57ff29 ; call rax
0x0000000000482964 : add eax, 0x57ff7f ; call rax
0x0000000000406c37 : add eax, 0x58002cdb ; pop rbx ; pop rbp ; ret
0x000000000048285a : add eax, 0x580081 ; call rax
0x000000000048281a : add eax, 0x5800c9 ; call rax
0x0000000000482627 : add eax, 0x5802b4 ; call rax
0x00000000004825e5 : add eax, 0x5802fe ; call rax
0x000000000048233e : add eax, 0x5805a5 ; call rax
0x000000000048223b : add eax, 0x5806a0 ; call rax
0x0000000000482206 : add eax, 0x5806dd ; call rax
0x00000000004817e0 : add eax, 0x5810fb ; call rax
0x000000000048179d : add eax, 0x581146 ; call rax
0x0000000000481579 : add eax, 0x581362 ; call rax
0x0000000000481524 : add eax, 0x5813bf ; call rax
0x0000000000480f3f : add eax, 0x5819a4 ; call rax
0x000000000047fee7 : add eax, 0x5829f4 ; call rax
0x000000000047fe9e : add eax, 0x582a45 ; call rax
0x000000000047f730 : add eax, 0x5831b3 ; call rax
0x000000000047f5a4 : add eax, 0x58333f ; call rax
0x000000000047f4d3 : add eax, 0x583408 ; call rax
0x000000000047f4b0 : add eax, 0x583433 ; call rax
0x000000000047ed80 : add eax, 0x583b63 ; call rax
0x000000000047ebd3 : add eax, 0x583d10 ; call rax
0x000000000047eb0b : add eax, 0x583dd0 ; call rax
0x000000000047eae8 : add eax, 0x583dfb ; call rax
0x000000000047e5a2 : add eax, 0x584341 ; call rax
0x000000000047e35b : add eax, 0x584580 ; call rax
0x000000000047e338 : add eax, 0x5845ab ; call rax
0x000000000047dc06 : add eax, 0x584cd5 ; call rax
0x000000000047dbde : add eax, 0x584d05 ; call rax
0x000000000047d8a0 : add eax, 0x58503b ; call rax
0x000000000047d878 : add eax, 0x58506b ; call rax
0x000000000047d16e : add eax, 0x5856fd ; call rax
0x000000000047d155 : add eax, 0x58570e ; call rax
0x000000000047d1cc : add eax, 0x58570f ; call rax
0x000000000047d0c7 : add eax, 0x585794 ; call rax
0x000000000047d10a : add eax, 0x5857d9 ; call rax
0x000000000047d0d0 : add eax, 0x58580b ; call rax
0x000000000047d0be : add eax, 0x585825 ; call rax
0x000000000047cc67 : add eax, 0x585c74 ; call rax
0x000000000047cc44 : add eax, 0x585c9f ; call rax
0x000000000047cb50 : add eax, 0x585d93 ; call rax
0x000000000047b3f5 : add eax, 0x5874ee ; call rax
0x000000000047b2af : add eax, 0x58762c ; call rax
0x000000000047b28c : add eax, 0x587657 ; call rax
0x000000000047af62 : add eax, 0x587979 ; call rax
0x000000000047af3a : add eax, 0x5879a9 ; call rax
0x000000000047abfc : add eax, 0x587cdf ; call rax
0x000000000047abd4 : add eax, 0x587d0f ; call rax
0x000000000047a1a7 : add eax, 0x58873c ; call rax
0x000000000047a0c9 : add eax, 0x588812 ; call rax
0x000000000047a0a6 : add eax, 0x58883d ; call rax
0x0000000000479fa4 : add eax, 0x58893f ; call rax
0x0000000000479ebf : add eax, 0x588a1c ; call rax
0x0000000000479e9c : add eax, 0x588a47 ; call rax
0x0000000000479c83 : add eax, 0x588c60 ; call rax
0x0000000000479c1c : add eax, 0x588cc7 ; call rax
0x00000000005b7902 : add eax, 0x588dd029 ; add dword ptr [rcx], eax ; retf
0x0000000000479a9a : add eax, 0x588e41 ; call rax
0x0000000000479a60 : add eax, 0x588e83 ; call rax
0x0000000000478998 : add eax, 0x589f4b ; call rax
0x00000000004788b3 : add eax, 0x58a028 ; call rax
0x0000000000478890 : add eax, 0x58a053 ; call rax
0x00000000004780cd : add eax, 0x58a816 ; call rax
0x000000000045a089 : add eax, 0x58b4800 ; mov byte ptr [rdx], r11b ; call rax
0x0000000000459d7d : add eax, 0x58b4800 ; pop rdx ; mov ebx, dword ptr [rdx] ; call rax
0x000000000045ef2d : add eax, 0x58b4800 ; stosb byte ptr [rdi], al ; cmp dword ptr [rdx], ebx ; call rax
0x00000000004740e1 : add eax, 0x58e7fa ; call rax
0x000000000047404f : add eax, 0x58e80c ; call rax
0x0000000000474046 : add eax, 0x58e89d ; call rax
0x0000000000473b53 : add eax, 0x58ed18 ; call rax
0x0000000000473b4a : add eax, 0x58ed19 ; call rax
0x000000000047354b : add eax, 0x58f398 ; call rax
0x0000000000473480 : add eax, 0x58f45b ; call rax
0x0000000000473464 : add eax, 0x58f47f ; call rax
0x0000000000472f26 : add eax, 0x58f945 ; call rax
0x0000000000472f1d : add eax, 0x58f946 ; call rax
0x0000000000472ef1 : add eax, 0x58f96a ; call rax
0x0000000000472efa : add eax, 0x58f9e1 ; call rax
0x0000000000472ee8 : add eax, 0x58f9fb ; call rax
0x0000000000472d0a : add eax, 0x58fbd1 ; call rax
0x0000000000472ce6 : add eax, 0x58fbfd ; call rax
0x00000000004728a6 : add eax, 0x590035 ; call rax
0x0000000000472882 : add eax, 0x590061 ; call rax
0x00000000004722e6 : add eax, 0x5905fd ; call rax
0x0000000000472192 : add eax, 0x590751 ; call rax
0x00000000004720d6 : add eax, 0x590805 ; call rax
0x00000000004720ba : add eax, 0x590829 ; call rax
0x0000000000471b4e : add eax, 0x590d1d ; call rax
0x0000000000471b45 : add eax, 0x590d1e ; call rax
0x0000000000471b19 : add eax, 0x590d42 ; call rax
0x0000000000471b22 : add eax, 0x590db9 ; call rax
0x0000000000471b10 : add eax, 0x590dd3 ; call rax
0x00000000004719e0 : add eax, 0x590e8b ; call rax
0x00000000004719d7 : add eax, 0x590e8c ; call rax
0x00000000004719ab : add eax, 0x590eb0 ; call rax
0x00000000004719b4 : add eax, 0x590f27 ; call rax
0x00000000004719a2 : add eax, 0x590f41 ; call rax
0x0000000000471766 : add eax, 0x59117d ; call rax
0x00000000004715ec : add eax, 0x5912f7 ; call rax
0x0000000000471530 : add eax, 0x5913ab ; call rax
0x0000000000471514 : add eax, 0x5913cf ; call rax
0x0000000000471332 : add eax, 0x591539 ; call rax
0x0000000000471329 : add eax, 0x59153a ; call rax
0x00000000004712fd : add eax, 0x59155e ; call rax
0x0000000000471306 : add eax, 0x5915d5 ; call rax
0x00000000004712f4 : add eax, 0x5915ef ; call rax
0x0000000000471254 : add eax, 0x591617 ; call rax
0x000000000047124b : add eax, 0x591618 ; call rax
0x000000000047121f : add eax, 0x59163c ; call rax
0x0000000000471228 : add eax, 0x5916b3 ; call rax
0x0000000000471216 : add eax, 0x5916cd ; call rax
0x0000000000470d5f : add eax, 0x591b84 ; call rax
0x0000000000470b54 : add eax, 0x591d87 ; call rax
0x0000000000470b38 : add eax, 0x591dab ; call rax
0x000000000047046d : add eax, 0x59246e ; call rax
0x000000000047044c : add eax, 0x592497 ; call rax
0x0000000000470161 : add eax, 0x59277a ; call rax
0x0000000000470140 : add eax, 0x5927a3 ; call rax
0x000000000046fba3 : add eax, 0x592d40 ; call rax
0x000000000046f9d4 : add eax, 0x592f07 ; call rax
0x000000000046f9b8 : add eax, 0x592f2b ; call rax
0x000000000046f812 : add eax, 0x5930c9 ; call rax
0x000000000046f7f6 : add eax, 0x5930ed ; call rax
0x000000000046f27a : add eax, 0x5935f1 ; call rax
0x000000000046f261 : add eax, 0x593602 ; call rax
0x000000000046f2d7 : add eax, 0x593604 ; call rax
0x000000000046f1dd : add eax, 0x59367e ; call rax
0x000000000046f220 : add eax, 0x5936c3 ; call rax
0x000000000046f1e6 : add eax, 0x5936f5 ; call rax
0x000000000046f1d4 : add eax, 0x59370f ; call rax
0x000000000046edb6 : add eax, 0x593b25 ; call rax
0x000000000046ed9a : add eax, 0x593b49 ; call rax
0x000000000046ecad : add eax, 0x593c36 ; call rax
0x000000000046cfc0 : add eax, 0x595923 ; call rax
0x000000000046ce94 : add eax, 0x595a47 ; call rax
0x000000000046ce78 : add eax, 0x595a6b ; call rax
0x000000000046cb8b : add eax, 0x595d50 ; call rax
0x000000000046cb6a : add eax, 0x595d79 ; call rax
0x000000000046c87f : add eax, 0x59605c ; call rax
0x000000000046c85e : add eax, 0x596085 ; call rax
0x000000000046bf14 : add eax, 0x5969cf ; call rax
0x000000000046be42 : add eax, 0x596a99 ; call rax
0x000000000046be26 : add eax, 0x596abd ; call rax
0x000000000046bd40 : add eax, 0x596ba3 ; call rax
0x000000000046bc6a : add eax, 0x596c71 ; call rax
0x000000000046bc4e : add eax, 0x596c95 ; call rax
0x000000000046ba58 : add eax, 0x596e8b ; call rax
0x000000000046b9ff : add eax, 0x596ee4 ; call rax
0x000000000046b88d : add eax, 0x59704e ; call rax
0x000000000046b860 : add eax, 0x597083 ; call rax
0x000000000046a5c6 : add eax, 0x59831d ; call rax
0x000000000046a4f0 : add eax, 0x5983eb ; call rax
0x000000000046a4d4 : add eax, 0x59840f ; call rax
0x0000000000468c93 : add eax, 0x599c48 ; call rax
0x0000000000468c4b : add eax, 0x599c98 ; call rax
0x0000000000468a92 : add eax, 0x599e49 ; call rax
0x0000000000468a2c : add eax, 0x599eb7 ; call rax
0x0000000000467ed6 : add eax, 0x59aa0d ; call rax
0x000000000046780a : add eax, 0x59b0d1 ; call rax
0x00000000004677c3 : add eax, 0x59b120 ; call rax
0x00000000004675e2 : add eax, 0x59b2f9 ; call rax
0x000000000046757c : add eax, 0x59b367 ; call rax
0x000000000046705f : add eax, 0x59b884 ; call rax
0x0000000000466e54 : add eax, 0x59ba87 ; call rax
0x0000000000466e38 : add eax, 0x59baab ; call rax
0x000000000046676d : add eax, 0x59c16e ; call rax
0x000000000046674c : add eax, 0x59c197 ; call rax
0x0000000000466461 : add eax, 0x59c47a ; call rax
0x0000000000466440 : add eax, 0x59c4a3 ; call rax
0x0000000000465ea3 : add eax, 0x59ca40 ; call rax
0x0000000000465cd4 : add eax, 0x59cc07 ; call rax
0x0000000000465cb8 : add eax, 0x59cc2b ; call rax
0x0000000000465b12 : add eax, 0x59cdc9 ; call rax
0x0000000000465af6 : add eax, 0x59cded ; call rax
0x000000000046557a : add eax, 0x59d2f1 ; call rax
0x0000000000465561 : add eax, 0x59d302 ; call rax
0x00000000004655d7 : add eax, 0x59d304 ; call rax
0x00000000004654dd : add eax, 0x59d37e ; call rax
0x0000000000465520 : add eax, 0x59d3c3 ; call rax
0x00000000004654e6 : add eax, 0x59d3f5 ; call rax
0x00000000004654d4 : add eax, 0x59d40f ; call rax
0x00000000004650b6 : add eax, 0x59d825 ; call rax
0x000000000046509a : add eax, 0x59d849 ; call rax
0x0000000000464fad : add eax, 0x59d936 ; call rax
0x00000000004632c0 : add eax, 0x59f623 ; call rax
0x0000000000463194 : add eax, 0x59f747 ; call rax
0x0000000000463178 : add eax, 0x59f76b ; call rax
0x0000000000462e8b : add eax, 0x59fa50 ; call rax
0x0000000000462e6a : add eax, 0x59fa79 ; call rax
0x0000000000462b7f : add eax, 0x59fd5c ; call rax
0x0000000000462b5e : add eax, 0x59fd85 ; call rax
0x00000000007f2d88 : add eax, 0x5a01dae0 ; retf 0x627
0x0000000000462214 : add eax, 0x5a06cf ; call rax
0x0000000000462142 : add eax, 0x5a0799 ; call rax
0x0000000000462126 : add eax, 0x5a07bd ; call rax
0x0000000000462040 : add eax, 0x5a08a3 ; call rax
0x0000000000461f6a : add eax, 0x5a0971 ; call rax
0x0000000000461f4e : add eax, 0x5a0995 ; call rax
0x0000000000461d58 : add eax, 0x5a0b8b ; call rax
0x0000000000461cff : add eax, 0x5a0be4 ; call rax
0x0000000000461b8d : add eax, 0x5a0d4e ; call rax
0x0000000000461b60 : add eax, 0x5a0d83 ; call rax
0x00000000004608c6 : add eax, 0x5a201d ; call rax
0x00000000004607f0 : add eax, 0x5a20eb ; call rax
0x00000000004607d4 : add eax, 0x5a210f ; call rax
0x000000000045fbed : add eax, 0x5a2cf6 ; call rax
0x000000000045f9e2 : add eax, 0x5a2ef9 ; call rax
0x000000000045f9c6 : add eax, 0x5a2f1d ; call rax
0x000000000045f814 : add eax, 0x5a30cf ; call rax
0x000000000045f417 : add eax, 0x5a34cc ; call rax
0x000000000045ef31 : add eax, 0x5a39aa ; call rax
0x000000000045ef10 : add eax, 0x5a39d3 ; call rax
0x000000000045ec25 : add eax, 0x5a3cb6 ; call rax
0x000000000045ec04 : add eax, 0x5a3cdf ; call rax
0x000000000045eafc : add eax, 0x5a3ddf ; call rax
0x000000000045eace : add eax, 0x5a3e15 ; call rax
0x000000000045ea16 : add eax, 0x5a3ec5 ; call rax
0x000000000045e9f2 : add eax, 0x5a3ef1 ; call rax
0x000000000045e70b : add eax, 0x5a41d8 ; call rax
0x000000000045e6d3 : add eax, 0x5a4208 ; call rax
0x000000000045e68f : add eax, 0x5a4254 ; call rax
0x000000000045e64a : add eax, 0x5a4299 ; call rax
0x000000000045e5a2 : add eax, 0x5a4341 ; call rax
0x000000000045e468 : add eax, 0x5a4473 ; call rax
0x000000000045e42e : add eax, 0x5a44b5 ; call rax
0x000000000045e271 : add eax, 0x5a4672 ; call rax
0x000000000045e1ae : add eax, 0x5a472d ; call rax
0x000000000045e188 : add eax, 0x5a475b ; call rax
0x000000000045dea2 : add eax, 0x5a4a39 ; call rax
0x000000000045de55 : add eax, 0x5a4a8e ; call rax
0x000000000045d989 : add eax, 0x5a4f5a ; call rax
0x000000000045d7ba : add eax, 0x5a5121 ; call rax
0x000000000045d79e : add eax, 0x5a5145 ; call rax
0x000000000045d5f8 : add eax, 0x5a52e3 ; call rax
0x000000000045d5dc : add eax, 0x5a5307 ; call rax
0x000000000045d060 : add eax, 0x5a580b ; call rax
0x000000000045d047 : add eax, 0x5a581c ; call rax
0x000000000045d0bd : add eax, 0x5a581e ; call rax
0x000000000045cfc3 : add eax, 0x5a5898 ; call rax
0x000000000045d006 : add eax, 0x5a58dd ; call rax
0x000000000045cfcc : add eax, 0x5a590f ; call rax
0x000000000045cfba : add eax, 0x5a5929 ; call rax
0x000000000045cb9c : add eax, 0x5a5d3f ; call rax
0x000000000045cb80 : add eax, 0x5a5d63 ; call rax
0x000000000045ca93 : add eax, 0x5a5e50 ; call rax
0x000000000045c7ad : add eax, 0x5a6136 ; call rax
0x000000000045c090 : add eax, 0x5a6853 ; call rax
0x000000000045b9f3 : add eax, 0x5a6ef0 ; call rax
0x000000000045b8de : add eax, 0x5a7005 ; call rax
0x000000000045a81d : add eax, 0x5a80c6 ; call rax
0x000000000045a4c2 : add eax, 0x5a8421 ; call rax
0x000000000045a396 : add eax, 0x5a8545 ; call rax
0x000000000045a37a : add eax, 0x5a8569 ; call rax
0x000000000045a08d : add eax, 0x5a884e ; call rax
0x000000000045a06c : add eax, 0x5a8877 ; call rax
0x0000000000459d81 : add eax, 0x5a8b5a ; call rax
0x0000000000459d60 : add eax, 0x5a8b83 ; call rax
0x000000000068d392 : add eax, 0x5a8df229 ; add dword ptr [rcx], eax ; ret
0x000000000045941a : add eax, 0x5a94c9 ; call rax
0x0000000000459348 : add eax, 0x5a9593 ; call rax
0x000000000045932c : add eax, 0x5a95b7 ; call rax
0x0000000000459246 : add eax, 0x5a969d ; call rax
0x0000000000459170 : add eax, 0x5a976b ; call rax
0x0000000000459154 : add eax, 0x5a978f ; call rax
0x0000000000458f5e : add eax, 0x5a9985 ; call rax
0x0000000000458f05 : add eax, 0x5a99de ; call rax
0x0000000000458d93 : add eax, 0x5a9b48 ; call rax
0x0000000000458d66 : add eax, 0x5a9b7d ; call rax
0x0000000000457acc : add eax, 0x5aae17 ; call rax
0x00000000004579f6 : add eax, 0x5aaee5 ; call rax
0x00000000004579da : add eax, 0x5aaf09 ; call rax
0x0000000000456cd1 : add eax, 0x5abc0a ; call rax
0x0000000000456b6a : add eax, 0x5abd79 ; call rax
0x0000000000455a04 : add eax, 0x5acedf ; call rax
0x0000000000455326 : add eax, 0x5ad5bd ; call rax
0x000000000045517e : add eax, 0x5ad765 ; call rax
0x00000000004550c2 : add eax, 0x5ad819 ; call rax
0x00000000004550a6 : add eax, 0x5ad83d ; call rax
0x0000000000454a3c : add eax, 0x5ade2f ; call rax
0x0000000000454a33 : add eax, 0x5ade30 ; call rax
0x0000000000454a07 : add eax, 0x5ade54 ; call rax
0x0000000000454a10 : add eax, 0x5adecb ; call rax
0x00000000004549fe : add eax, 0x5adee5 ; call rax
0x0000000000454820 : add eax, 0x5ae0bb ; call rax
0x00000000004547fc : add eax, 0x5ae0e7 ; call rax
0x00000000007f13bb : add eax, 0x5ae1b ; retf 0x505
0x00000000004543bc : add eax, 0x5ae51f ; call rax
0x0000000000454398 : add eax, 0x5ae54b ; call rax
0x0000000000453dfc : add eax, 0x5aeae7 ; call rax
0x0000000000453ca8 : add eax, 0x5aec3b ; call rax
0x0000000000453bec : add eax, 0x5aecef ; call rax
0x0000000000453bd0 : add eax, 0x5aed13 ; call rax
0x0000000000453664 : add eax, 0x5af207 ; call rax
0x000000000045365b : add eax, 0x5af208 ; call rax
0x000000000045362f : add eax, 0x5af22c ; call rax
0x0000000000453638 : add eax, 0x5af2a3 ; call rax
0x0000000000453626 : add eax, 0x5af2bd ; call rax
0x00000000004534f6 : add eax, 0x5af375 ; call rax
0x00000000004534ed : add eax, 0x5af376 ; call rax
0x00000000004534c1 : add eax, 0x5af39a ; call rax
0x00000000004534ca : add eax, 0x5af411 ; call rax
0x00000000004534b8 : add eax, 0x5af42b ; call rax
0x000000000045327c : add eax, 0x5af667 ; call rax
0x0000000000453102 : add eax, 0x5af7e1 ; call rax
0x0000000000453046 : add eax, 0x5af895 ; call rax
0x000000000045302a : add eax, 0x5af8b9 ; call rax
0x0000000000452e48 : add eax, 0x5afa23 ; call rax
0x0000000000452e3f : add eax, 0x5afa24 ; call rax
0x0000000000452e13 : add eax, 0x5afa48 ; call rax
0x0000000000452e1c : add eax, 0x5afabf ; call rax
0x0000000000452e0a : add eax, 0x5afad9 ; call rax
0x0000000000452d6a : add eax, 0x5afb01 ; call rax
0x0000000000452d61 : add eax, 0x5afb02 ; call rax
0x0000000000452d35 : add eax, 0x5afb26 ; call rax
0x0000000000452d3e : add eax, 0x5afb9d ; call rax
0x0000000000452d2c : add eax, 0x5afbb7 ; call rax
0x0000000000452ac7 : add eax, 0x5afe1c ; call rax
0x0000000000451aae : add eax, 0x5b0e35 ; call rax
0x0000000000451906 : add eax, 0x5b0fdd ; call rax
0x000000000045184a : add eax, 0x5b1091 ; call rax
0x000000000045182e : add eax, 0x5b10b5 ; call rax
0x0000000000451250 : add eax, 0x5b161b ; call rax
0x0000000000451247 : add eax, 0x5b161c ; call rax
0x000000000045121b : add eax, 0x5b1640 ; call rax
0x0000000000451224 : add eax, 0x5b16b7 ; call rax
0x0000000000451212 : add eax, 0x5b16d1 ; call rax
0x0000000000451034 : add eax, 0x5b18a7 ; call rax
0x0000000000451010 : add eax, 0x5b18d3 ; call rax
0x0000000000450a56 : add eax, 0x5b1e8d ; call rax
0x0000000000450902 : add eax, 0x5b1fe1 ; call rax
0x0000000000450846 : add eax, 0x5b2095 ; call rax
0x000000000045082a : add eax, 0x5b20b9 ; call rax
0x00000000004502be : add eax, 0x5b25ad ; call rax
0x00000000004502b5 : add eax, 0x5b25ae ; call rax
0x0000000000450289 : add eax, 0x5b25d2 ; call rax
0x0000000000450292 : add eax, 0x5b2649 ; call rax
0x0000000000450280 : add eax, 0x5b2663 ; call rax
0x0000000000450150 : add eax, 0x5b271b ; call rax
0x0000000000450147 : add eax, 0x5b271c ; call rax
0x000000000045011b : add eax, 0x5b2740 ; call rax
0x0000000000450124 : add eax, 0x5b27b7 ; call rax
0x0000000000450112 : add eax, 0x5b27d1 ; call rax
0x000000000044fed6 : add eax, 0x5b2a0d ; call rax
0x000000000044fd5c : add eax, 0x5b2b87 ; call rax
0x000000000044fca0 : add eax, 0x5b2c3b ; call rax
0x000000000044fc84 : add eax, 0x5b2c5f ; call rax
0x000000000044faae : add eax, 0x5b2dbd ; call rax
0x000000000044faa5 : add eax, 0x5b2dbe ; call rax
0x000000000044fa79 : add eax, 0x5b2de2 ; call rax
0x000000000044fa82 : add eax, 0x5b2e59 ; call rax
0x000000000044fa70 : add eax, 0x5b2e73 ; call rax
0x000000000044f9d0 : add eax, 0x5b2e9b ; call rax
0x000000000044f9c7 : add eax, 0x5b2e9c ; call rax
0x000000000044f99b : add eax, 0x5b2ec0 ; call rax
0x000000000044f9a4 : add eax, 0x5b2f37 ; call rax
0x000000000044f992 : add eax, 0x5b2f51 ; call rax
0x00000000007c93aa : add eax, 0x5b305 ; retf
0x000000000044f337 : add eax, 0x5b35ac ; call rax
0x000000000044f126 : add eax, 0x5b37b5 ; call rax
0x000000000044f10a : add eax, 0x5b37d9 ; call rax
0x000000000044ef44 : add eax, 0x5b399f ; call rax
0x000000000044eb19 : add eax, 0x5b3dca ; call rax
0x000000000044e619 : add eax, 0x5b42c2 ; call rax
0x000000000044e5f8 : add eax, 0x5b42eb ; call rax
0x000000000044e30d : add eax, 0x5b45ce ; call rax
0x000000000044e2ec : add eax, 0x5b45f7 ; call rax
0x000000000044e1e4 : add eax, 0x5b46f7 ; call rax
0x000000000044e1b6 : add eax, 0x5b472d ; call rax
0x000000000044e0fe : add eax, 0x5b47dd ; call rax
0x000000000044e0da : add eax, 0x5b4809 ; call rax
0x000000000044e022 : add eax, 0x5b48b9 ; call rax
0x000000000044dffc : add eax, 0x5b48e7 ; call rax
0x000000000044dc98 : add eax, 0x5b4c4b ; call rax
0x000000000044dc51 : add eax, 0x5b4c8a ; call rax
0x000000000044dc11 : add eax, 0x5b4cd2 ; call rax
0x000000000044dbd2 : add eax, 0x5b4d11 ; call rax
0x000000000044db4c : add eax, 0x5b4d8f ; call rax
0x000000000044db0c : add eax, 0x5b4dd7 ; call rax
0x000000000044dacd : add eax, 0x5b4e16 ; call rax
0x000000000044da36 : add eax, 0x5b4ead ; call rax
0x000000000044d898 : add eax, 0x5b5043 ; call rax
0x000000000044d85e : add eax, 0x5b5085 ; call rax
0x000000000044d695 : add eax, 0x5b524e ; call rax
0x000000000044d5cc : add eax, 0x5b530f ; call rax
0x000000000044d5a6 : add eax, 0x5b533d ; call rax
0x000000000044d2c0 : add eax, 0x5b561b ; call rax
0x000000000044d273 : add eax, 0x5b5670 ; call rax
0x000000000044cd73 : add eax, 0x5b5b70 ; call rax
0x000000000044cba4 : add eax, 0x5b5d37 ; call rax
0x000000000044cb88 : add eax, 0x5b5d5b ; call rax
0x000000000044c9e2 : add eax, 0x5b5ef9 ; call rax
0x000000000044c9c6 : add eax, 0x5b5f1d ; call rax
0x000000000044c44a : add eax, 0x5b6421 ; call rax
0x000000000044c431 : add eax, 0x5b6432 ; call rax
0x000000000044c4a7 : add eax, 0x5b6434 ; call rax
0x000000000044c3ad : add eax, 0x5b64ae ; call rax
0x000000000044c3f0 : add eax, 0x5b64f3 ; call rax
0x000000000044c3b6 : add eax, 0x5b6525 ; call rax
0x000000000044c3a4 : add eax, 0x5b653f ; call rax
0x000000000044bf86 : add eax, 0x5b6955 ; call rax
0x000000000044bf6a : add eax, 0x5b6979 ; call rax
0x000000000044be7d : add eax, 0x5b6a66 ; call rax
0x000000000044bb82 : add eax, 0x5b6d61 ; call rax
0x000000000044b436 : add eax, 0x5b74ad ; call rax
0x000000000044ad6e : add eax, 0x5b7b75 ; call rax
0x000000000044ac48 : add eax, 0x5b7c9b ; call rax
0x0000000000449b86 : add eax, 0x5b8d5d ; call rax
0x000000000044980e : add eax, 0x5b90d5 ; call rax
0x00000000004496e2 : add eax, 0x5b91f9 ; call rax
0x00000000004496c6 : add eax, 0x5b921d ; call rax
0x00000000004493d9 : add eax, 0x5b9502 ; call rax
0x00000000004493b8 : add eax, 0x5b952b ; call rax
0x00000000004490cd : add eax, 0x5b980e ; call rax
0x00000000004490ac : add eax, 0x5b9837 ; call rax
0x0000000000448766 : add eax, 0x5ba17d ; call rax
0x0000000000448694 : add eax, 0x5ba247 ; call rax
0x0000000000448678 : add eax, 0x5ba26b ; call rax
0x0000000000448592 : add eax, 0x5ba351 ; call rax
0x00000000004484bc : add eax, 0x5ba41f ; call rax
0x00000000004484a0 : add eax, 0x5ba443 ; call rax
0x00000000004482aa : add eax, 0x5ba639 ; call rax
0x0000000000448251 : add eax, 0x5ba692 ; call rax
0x00000000004480df : add eax, 0x5ba7fc ; call rax
0x00000000004480b2 : add eax, 0x5ba831 ; call rax
0x00000000007c3eb4 : add eax, 0x5bb2f ; retf 0x505
0x0000000000446e18 : add eax, 0x5bbacb ; call rax
0x0000000000446d42 : add eax, 0x5bbb99 ; call rax
0x0000000000446d26 : add eax, 0x5bbbbd ; call rax
0x0000000000658859 : add eax, 0x5bc03100 ; ret
0x000000000044668a : add eax, 0x5bc251 ; call rax
0x000000000044666e : add eax, 0x5bc275 ; call rax
0x0000000000446484 : add eax, 0x5bc457 ; call rax
0x0000000000446456 : add eax, 0x5bc48d ; call rax
0x0000000000445f49 : add eax, 0x5bc992 ; call rax
0x0000000000445f2c : add eax, 0x5bc9b7 ; call rax
0x0000000000445b1c : add eax, 0x5bcdc7 ; call rax
0x0000000000445ab9 : add eax, 0x5bce2a ; call rax
0x00000000004459eb : add eax, 0x5bcef8 ; call rax
0x0000000000444cf6 : add eax, 0x5bdbe5 ; call rax
0x0000000000444cda : add eax, 0x5bdc09 ; call rax
0x0000000000444c22 : add eax, 0x5bdcb9 ; call rax
0x0000000000444c06 : add eax, 0x5bdcdd ; call rax
0x0000000000443ec5 : add eax, 0x5bea16 ; call rax
0x0000000000443e98 : add eax, 0x5bea4b ; call rax
0x0000000000443564 : add eax, 0x5bf377 ; call rax
0x0000000000443536 : add eax, 0x5bf3ad ; call rax
0x0000000000443399 : add eax, 0x5bf54a ; call rax
0x0000000000443341 : add eax, 0x5bf5a2 ; call rax
0x0000000000443290 : add eax, 0x5bf653 ; call rax
0x0000000000443232 : add eax, 0x5bf6b1 ; call rax
0x000000000044273d : add eax, 0x5c01a6 ; call rax
0x00000000004425ae : add eax, 0x5c032d ; call rax
0x0000000000442592 : add eax, 0x5c0351 ; call rax
0x00000000004423ec : add eax, 0x5c04ef ; call rax
0x00000000004423d0 : add eax, 0x5c0513 ; call rax
0x0000000000441f30 : add eax, 0x5c093b ; call rax
0x0000000000441f17 : add eax, 0x5c094c ; call rax
0x0000000000441f8d : add eax, 0x5c094e ; call rax
0x0000000000441e93 : add eax, 0x5c09c8 ; call rax
0x0000000000441ed6 : add eax, 0x5c0a0d ; call rax
0x0000000000441e9c : add eax, 0x5c0a3f ; call rax
0x0000000000441e8a : add eax, 0x5c0a59 ; call rax
0x0000000000441a6c : add eax, 0x5c0e6f ; call rax
0x0000000000441a50 : add eax, 0x5c0e93 ; call rax
0x0000000000441963 : add eax, 0x5c0f80 ; call rax
0x0000000000441722 : add eax, 0x5c11b9 ; call rax
0x0000000000441706 : add eax, 0x5c11dd ; call rax
0x000000000043f730 : add eax, 0x5c31ab ; call rax
0x000000000043f714 : add eax, 0x5c31cf ; call rax
0x000000000043e8ce : add eax, 0x5c4015 ; call rax
0x000000000043e7a2 : add eax, 0x5c4139 ; call rax
0x000000000043e786 : add eax, 0x5c415d ; call rax
0x00000000004f81da : add eax, 0x5c415d5b ; ret
0x000000000043e437 : add eax, 0x5c44a4 ; call rax
0x000000000043e416 : add eax, 0x5c44cd ; call rax
0x000000000043dd5e : add eax, 0x5c4b85 ; call rax
0x000000000043dbbe : add eax, 0x5c4d1d ; call rax
0x000000000043dba2 : add eax, 0x5c4d41 ; call rax
0x000000000043d794 : add eax, 0x5c514f ; call rax
0x000000000043d6c2 : add eax, 0x5c5219 ; call rax
0x000000000043d6a6 : add eax, 0x5c523d ; call rax
0x000000000043d5c0 : add eax, 0x5c5323 ; call rax
0x000000000043d4ea : add eax, 0x5c53f1 ; call rax
0x000000000043d4ce : add eax, 0x5c5415 ; call rax
0x000000000043d2d8 : add eax, 0x5c560b ; call rax
0x000000000043d27f : add eax, 0x5c5664 ; call rax
0x000000000043d10d : add eax, 0x5c57ce ; call rax
0x000000000043d0e0 : add eax, 0x5c5803 ; call rax
0x000000000043cee8 : add eax, 0x5c59fb ; call rax
0x000000000043ce8f : add eax, 0x5c5a54 ; call rax
0x000000000043cd1d : add eax, 0x5c5bbe ; call rax
0x000000000043ccf0 : add eax, 0x5c5bf3 ; call rax
0x000000000043b736 : add eax, 0x5c71ad ; call rax
0x000000000043b660 : add eax, 0x5c727b ; call rax
0x000000000043b644 : add eax, 0x5c729f ; call rax
0x000000000043a992 : add eax, 0x5c7f49 ; call rax
0x000000000043a849 : add eax, 0x5c809a ; call rax
0x000000000043a305 : add eax, 0x5c85d6 ; call rax
0x000000000043a26c : add eax, 0x5c8677 ; call rax
0x000000000043a02f : add eax, 0x5c88ac ; call rax
0x0000000000439fe7 : add eax, 0x5c88fc ; call rax
0x0000000000439d79 : add eax, 0x5c8b6a ; call rax
0x0000000000439c77 : add eax, 0x5c8c6c ; call rax
0x0000000000439a98 : add eax, 0x5c8e43 ; call rax
0x0000000000439a28 : add eax, 0x5c8ebb ; call rax
0x000000000043990b : add eax, 0x5c8fd0 ; call rax
0x000000000043982a : add eax, 0x5c90b9 ; call rax
0x000000000043961f : add eax, 0x5c92bc ; call rax
0x0000000000439586 : add eax, 0x5c935d ; call rax
0x00000000004392b3 : add eax, 0x5c9628 ; call rax
0x0000000000439270 : add eax, 0x5c9673 ; call rax
0x00000000004391b8 : add eax, 0x5c9723 ; call rax
0x0000000000439172 : add eax, 0x5c9771 ; call rax
0x00000000004390b9 : add eax, 0x5c9822 ; call rax
0x000000000043906e : add eax, 0x5c9875 ; call rax
0x0000000000438f60 : add eax, 0x5c997b ; call rax
0x0000000000438f02 : add eax, 0x5c99e1 ; call rax
0x0000000000438e3a : add eax, 0x5c9aa1 ; call rax
0x0000000000438da5 : add eax, 0x5c9ab6 ; call rax
0x0000000000438d9c : add eax, 0x5c9b47 ; call rax
0x0000000000438245 : add eax, 0x5ca696 ; call rax
0x0000000000438202 : add eax, 0x5ca6e1 ; call rax
0x00000000004381bf : add eax, 0x5ca724 ; call rax
0x0000000000437fc6 : add eax, 0x5ca915 ; call rax
0x0000000000437f83 : add eax, 0x5ca960 ; call rax
0x0000000000437f42 : add eax, 0x5ca9a1 ; call rax
0x0000000000437d49 : add eax, 0x5cab92 ; call rax
0x0000000000437d01 : add eax, 0x5cabe2 ; call rax
0x0000000000437c4c : add eax, 0x5cac97 ; call rax
0x00000000004376a6 : add eax, 0x5cb235 ; call rax
0x000000000043765e : add eax, 0x5cb285 ; call rax
0x00000000004375a9 : add eax, 0x5cb33a ; call rax
0x00000000004374b9 : add eax, 0x5cb3b2 ; call rax
0x00000000004374b0 : add eax, 0x5cb3b3 ; call rax
0x00000000004373a7 : add eax, 0x5cb53c ; call rax
0x00000000004372a0 : add eax, 0x5cb63b ; call rax
0x0000000000437268 : add eax, 0x5cb67b ; call rax
0x0000000000437158 : add eax, 0x5cb783 ; call rax
0x00000000004370fa : add eax, 0x5cb7e9 ; call rax
0x0000000000437032 : add eax, 0x5cb8a9 ; call rax
0x0000000000436f9d : add eax, 0x5cb8be ; call rax
0x0000000000436f94 : add eax, 0x5cb94f ; call rax
0x0000000000436687 : add eax, 0x5cc254 ; call rax
0x000000000043663f : add eax, 0x5cc2a4 ; call rax
0x000000000043658a : add eax, 0x5cc359 ; call rax
0x00000000004364a3 : add eax, 0x5cc3c8 ; call rax
0x000000000043649a : add eax, 0x5cc3c9 ; call rax
0x000000000043639e : add eax, 0x5cc545 ; call rax
0x0000000000436296 : add eax, 0x5cc645 ; call rax
0x000000000043625e : add eax, 0x5cc685 ; call rax
0x00000000004361a4 : add eax, 0x5cc737 ; call rax
0x0000000000436164 : add eax, 0x5cc77f ; call rax
0x00000000004360ab : add eax, 0x5cc830 ; call rax
0x0000000000436068 : add eax, 0x5cc87b ; call rax
0x00000000004359cb : add eax, 0x5ccf10 ; call rax
0x0000000000435988 : add eax, 0x5ccf5b ; call rax
0x0000000000435947 : add eax, 0x5ccf9c ; call rax
0x00000000004357e0 : add eax, 0x5cd0fb ; call rax
0x000000000043579d : add eax, 0x5cd146 ; call rax
0x000000000043575c : add eax, 0x5cd187 ; call rax
0x00000000004355f1 : add eax, 0x5cd2f2 ; call rax
0x00000000004354eb : add eax, 0x5cd3f0 ; call rax
0x00000000004354b6 : add eax, 0x5cd42d ; call rax
0x00000000004353a6 : add eax, 0x5cd535 ; call rax
0x0000000000435348 : add eax, 0x5cd59b ; call rax
0x0000000000435280 : add eax, 0x5cd65b ; call rax
0x00000000004351eb : add eax, 0x5cd670 ; call rax
0x00000000004351e2 : add eax, 0x5cd701 ; call rax
0x000000000043466e : add eax, 0x5ce26d ; call rax
0x0000000000434626 : add eax, 0x5ce2bd ; call rax
0x0000000000434571 : add eax, 0x5ce372 ; call rax
0x0000000000434481 : add eax, 0x5ce3ea ; call rax
0x0000000000434478 : add eax, 0x5ce3eb ; call rax
0x000000000043440c : add eax, 0x5ce4d7 ; call rax
0x0000000000434326 : add eax, 0x5ce5b5 ; call rax
0x00000000004342ee : add eax, 0x5ce5f5 ; call rax
0x0000000000433b10 : add eax, 0x5ced5b ; call rax
0x0000000000433b07 : add eax, 0x5ced5c ; call rax
0x0000000000433adb : add eax, 0x5ced80 ; call rax
0x0000000000433ae4 : add eax, 0x5cedf7 ; call rax
0x0000000000433ad2 : add eax, 0x5cee11 ; call rax
0x00000000004335d2 : add eax, 0x5cf309 ; call rax
0x00000000004335ae : add eax, 0x5cf335 ; call rax
0x000000000043316e : add eax, 0x5cf76d ; call rax
0x000000000043314a : add eax, 0x5cf799 ; call rax
0x0000000000432bb6 : add eax, 0x5cfd2d ; call rax
0x0000000000432a6a : add eax, 0x5cfe79 ; call rax
0x00000000004329ae : add eax, 0x5cff2d ; call rax
0x0000000000432992 : add eax, 0x5cff51 ; call rax
0x0000000000432848 : add eax, 0x5d0023 ; call rax
0x000000000043283f : add eax, 0x5d0024 ; call rax
0x0000000000432813 : add eax, 0x5d0048 ; call rax
0x000000000043281c : add eax, 0x5d00bf ; call rax
0x000000000043280a : add eax, 0x5d00d9 ; call rax
0x00000000004326da : add eax, 0x5d0191 ; call rax
0x00000000004326d1 : add eax, 0x5d0192 ; call rax
0x00000000004326a5 : add eax, 0x5d01b6 ; call rax
0x00000000007f2d9d : add eax, 0x5d01daee ; jmp qword ptr [rdi]
0x00000000004326ae : add eax, 0x5d022d ; call rax
0x000000000043269c : add eax, 0x5d0247 ; call rax
0x0000000000432460 : add eax, 0x5d0483 ; call rax
0x00000000004322e6 : add eax, 0x5d05fd ; call rax
0x000000000043222a : add eax, 0x5d06b1 ; call rax
0x000000000043220e : add eax, 0x5d06d5 ; call rax
0x0000000000432066 : add eax, 0x5d0805 ; call rax
0x000000000043205d : add eax, 0x5d0806 ; call rax
0x0000000000432031 : add eax, 0x5d082a ; call rax
0x000000000043203a : add eax, 0x5d08a1 ; call rax
0x0000000000432028 : add eax, 0x5d08bb ; call rax
0x0000000000431f88 : add eax, 0x5d08e3 ; call rax
0x0000000000431f7f : add eax, 0x5d08e4 ; call rax
0x0000000000431f53 : add eax, 0x5d0908 ; call rax
0x0000000000431f5c : add eax, 0x5d097f ; call rax
0x0000000000431f4a : add eax, 0x5d0999 ; call rax
0x0000000000430ccd : add eax, 0x5d1c16 ; call rax
0x0000000000430b90 : add eax, 0x5d1d4b ; call rax
0x0000000000430b74 : add eax, 0x5d1d6f ; call rax
0x0000000000430704 : add eax, 0x5d21df ; call rax
0x000000000043066d : add eax, 0x5d2276 ; call rax
0x00000000004303e9 : add eax, 0x5d24f2 ; call rax
0x00000000004303c8 : add eax, 0x5d251b ; call rax
0x000000000042f959 : add eax, 0x5d2f8a ; call rax
0x000000000042f89c : add eax, 0x5d303f ; call rax
0x000000000042f880 : add eax, 0x5d3063 ; call rax
0x000000000042f6dd : add eax, 0x5d3206 ; call rax
0x000000000042f5c6 : add eax, 0x5d3315 ; call rax
0x000000000042f5aa : add eax, 0x5d3339 ; call rax
0x000000000042f2a0 : add eax, 0x5d3643 ; call rax
0x000000000042efd7 : add eax, 0x5d3904 ; call rax
0x000000000042efb6 : add eax, 0x5d392d ; call rax
0x000000000042ee32 : add eax, 0x5d3aa9 ; call rax
0x000000000042ee0e : add eax, 0x5d3ad5 ; call rax
0x000000000042ed56 : add eax, 0x5d3b85 ; call rax
0x000000000042ed30 : add eax, 0x5d3bb3 ; call rax
0x000000000042eb1f : add eax, 0x5d3dbc ; call rax
0x000000000042eade : add eax, 0x5d3e05 ; call rax
0x000000000042ea9c : add eax, 0x5d3e47 ; call rax
0x000000000042ea31 : add eax, 0x5d3eaa ; call rax
0x000000000042e9ec : add eax, 0x5d3ef7 ; call rax
0x000000000042e9a6 : add eax, 0x5d3f3d ; call rax
0x000000000042e818 : add eax, 0x5d40c3 ; call rax
0x000000000042e7f4 : add eax, 0x5d40ef ; call rax
0x000000000042e73c : add eax, 0x5d419f ; call rax
0x000000000042e716 : add eax, 0x5d41cd ; call rax
0x000000000042e505 : add eax, 0x5d43d6 ; call rax
0x000000000042e4c4 : add eax, 0x5d441f ; call rax
0x000000000042e482 : add eax, 0x5d4461 ; call rax
0x000000000042e417 : add eax, 0x5d44c4 ; call rax
0x000000000042e3d2 : add eax, 0x5d4511 ; call rax
0x000000000042e38c : add eax, 0x5d4557 ; call rax
0x000000000042df87 : add eax, 0x5d495c ; call rax
0x000000000042de7c : add eax, 0x5d4a5f ; call rax
0x000000000042de60 : add eax, 0x5d4a83 ; call rax
0x000000000042dcba : add eax, 0x5d4c21 ; call rax
0x000000000042dc9e : add eax, 0x5d4c45 ; call rax
0x000000000042d69c : add eax, 0x5d51cf ; call rax
0x000000000042d683 : add eax, 0x5d51e0 ; call rax
0x000000000042d6f9 : add eax, 0x5d51e2 ; call rax
0x000000000042d5ff : add eax, 0x5d525c ; call rax
0x000000000042d642 : add eax, 0x5d52a1 ; call rax
0x000000000042d608 : add eax, 0x5d52d3 ; call rax
0x000000000042d5f6 : add eax, 0x5d52ed ; call rax
0x000000000042d06c : add eax, 0x5d57ff ; call rax
0x000000000042d053 : add eax, 0x5d5810 ; call rax
0x000000000042d0c9 : add eax, 0x5d5812 ; call rax
0x000000000042cfcf : add eax, 0x5d588c ; call rax
0x000000000042d012 : add eax, 0x5d58d1 ; call rax
0x000000000042cfd8 : add eax, 0x5d5903 ; call rax
0x000000000042cfc6 : add eax, 0x5d591d ; call rax
0x00000000006bfe87 : add eax, 0x5d5b0000 ; pop r12 ; pop r13 ; ret
0x0000000000404222 : add eax, 0x5d5b002d ; pop r12 ; ret
0x000000000042cb49 : add eax, 0x5d5d9a ; call rax
0x000000000042ca8c : add eax, 0x5d5e4f ; call rax
0x000000000042ca70 : add eax, 0x5d5e73 ; call rax
0x000000000042c212 : add eax, 0x5d66d1 ; call rax
0x000000000042bef1 : add eax, 0x5d69f2 ; call rax
0x000000000042bdda : add eax, 0x5d6b01 ; call rax
0x000000000042bdbe : add eax, 0x5d6b25 ; call rax
0x000000000042b86d : add eax, 0x5d7076 ; call rax
0x000000000042b7b4 : add eax, 0x5d7127 ; call rax
0x000000000042b798 : add eax, 0x5d714b ; call rax
0x000000000042b509 : add eax, 0x5d73d2 ; call rax
0x000000000042b4e8 : add eax, 0x5d73fb ; call rax
0x000000000042aed4 : add eax, 0x5d7a0f ; call rax
0x000000000042ae7b : add eax, 0x5d7a68 ; call rax
0x000000000042ad09 : add eax, 0x5d7bd2 ; call rax
0x000000000042acdc : add eax, 0x5d7c07 ; call rax
0x000000000042a4dd : add eax, 0x5d8406 ; call rax
0x000000000042a3db : add eax, 0x5d8508 ; call rax
0x000000000042a1fc : add eax, 0x5d86df ; call rax
0x000000000042a18c : add eax, 0x5d8757 ; call rax
0x000000000042a06f : add eax, 0x5d886c ; call rax
0x0000000000429f8e : add eax, 0x5d8955 ; call rax
0x0000000000429d63 : add eax, 0x5d8b78 ; call rax
0x0000000000429cca : add eax, 0x5d8c19 ; call rax
0x00000000004299c1 : add eax, 0x5d8f1a ; call rax
0x0000000000429980 : add eax, 0x5d8f63 ; call rax
0x0000000000429841 : add eax, 0x5d901a ; call rax
0x00000000004298b9 : add eax, 0x5d9022 ; call rax
0x0000000000429838 : add eax, 0x5d90ab ; call rax
0x0000000000429005 : add eax, 0x5d98d6 ; call rax
0x0000000000428fbd : add eax, 0x5d9926 ; call rax
0x0000000000428ef8 : add eax, 0x5d99eb ; call rax
0x0000000000428e08 : add eax, 0x5d9a63 ; call rax
0x0000000000428dff : add eax, 0x5d9a64 ; call rax
0x0000000000428ca7 : add eax, 0x5d9c3c ; call rax
0x0000000000428b9e : add eax, 0x5d9d3d ; call rax
0x0000000000428b66 : add eax, 0x5d9d7d ; call rax
0x000000000042890c : add eax, 0x5d9fd7 ; call rax
0x000000000042884d : add eax, 0x5da08e ; call rax
0x0000000000428830 : add eax, 0x5da0b3 ; call rax
0x00000000004286fe : add eax, 0x5da1dd ; call rax
0x00000000004286a0 : add eax, 0x5da243 ; call rax
0x00000000004285d8 : add eax, 0x5da303 ; call rax
0x0000000000428543 : add eax, 0x5da318 ; call rax
0x000000000042853a : add eax, 0x5da3a9 ; call rax
0x00000000007c9121 : add eax, 0x5db05 ; retf
0x00000000007c6573 : add eax, 0x5db05 ; retf 0x505
0x00000000004276d5 : add eax, 0x5db206 ; call rax
0x000000000042768d : add eax, 0x5db256 ; call rax
0x00000000004275c8 : add eax, 0x5db31b ; call rax
0x00000000004274ce : add eax, 0x5db39d ; call rax
0x00000000004274c5 : add eax, 0x5db39e ; call rax
0x0000000000427459 : add eax, 0x5db48a ; call rax
0x0000000000427374 : add eax, 0x5db567 ; call rax
0x000000000042733c : add eax, 0x5db5a7 ; call rax
0x0000000000427281 : add eax, 0x5db65a ; call rax
0x000000000042723e : add eax, 0x5db6a5 ; call rax
0x0000000000427185 : add eax, 0x5db756 ; call rax
0x000000000042713a : add eax, 0x5db7a9 ; call rax
0x0000000000427074 : add eax, 0x5db867 ; call rax
0x0000000000426fdf : add eax, 0x5db87c ; call rax
0x0000000000426fd6 : add eax, 0x5db90d ; call rax
0x0000000000426eea : add eax, 0x5db9f1 ; call rax
0x0000000000426e8c : add eax, 0x5dba57 ; call rax
0x0000000000426dc4 : add eax, 0x5dbb17 ; call rax
0x0000000000426d2f : add eax, 0x5dbb2c ; call rax
0x0000000000426d26 : add eax, 0x5dbbbd ; call rax
0x00000000007c3588 : add eax, 0x5dc05 ; retf
0x0000000000426764 : add eax, 0x5dc177 ; call rax
0x0000000000426721 : add eax, 0x5dc1c2 ; call rax
0x00000000004266de : add eax, 0x5dc205 ; call rax
0x00000000004264f6 : add eax, 0x5dc3e5 ; call rax
0x00000000004264ae : add eax, 0x5dc435 ; call rax
0x00000000004263f2 : add eax, 0x5dc4f1 ; call rax
0x000000000042624f : add eax, 0x5dc61c ; call rax
0x0000000000426246 : add eax, 0x5dc61d ; call rax
0x0000000000425d73 : add eax, 0x5dcb68 ; call rax
0x0000000000425d2b : add eax, 0x5dcbb8 ; call rax
0x0000000000425c66 : add eax, 0x5dcc7d ; call rax
0x0000000000425b76 : add eax, 0x5dccf5 ; call rax
0x0000000000425b6d : add eax, 0x5dccf6 ; call rax
0x00000000004259b7 : add eax, 0x5dcf2c ; call rax
0x00000000004258c4 : add eax, 0x5dd017 ; call rax
0x000000000042588c : add eax, 0x5dd057 ; call rax
0x00000000004257d2 : add eax, 0x5dd109 ; call rax
0x0000000000425792 : add eax, 0x5dd151 ; call rax
0x00000000004256d9 : add eax, 0x5dd202 ; call rax
0x0000000000425696 : add eax, 0x5dd24d ; call rax
0x00000000004255dd : add eax, 0x5dd2fe ; call rax
0x000000000042559a : add eax, 0x5dd349 ; call rax
0x000000000042504f : add eax, 0x5dd88c ; call rax
0x000000000042500c : add eax, 0x5dd8d7 ; call rax
0x0000000000424fc9 : add eax, 0x5dd91a ; call rax
0x0000000000424ee2 : add eax, 0x5dd9f9 ; call rax
0x0000000000424e9f : add eax, 0x5dda44 ; call rax
0x0000000000424e5e : add eax, 0x5dda85 ; call rax
0x0000000000424d77 : add eax, 0x5ddb64 ; call rax
0x0000000000424d34 : add eax, 0x5ddbaf ; call rax
0x0000000000424cf3 : add eax, 0x5ddbf0 ; call rax
0x0000000000424bfa : add eax, 0x5ddce9 ; call rax
0x0000000000424aeb : add eax, 0x5dddf0 ; call rax
0x0000000000424ab6 : add eax, 0x5dde2d ; call rax
0x00000000004244f0 : add eax, 0x5de37b ; call rax
0x00000000004244e7 : add eax, 0x5de37c ; call rax
0x00000000004244bb : add eax, 0x5de3a0 ; call rax
0x00000000004244c4 : add eax, 0x5de417 ; call rax
0x00000000004244b2 : add eax, 0x5de431 ; call rax
0x0000000000423fb2 : add eax, 0x5de929 ; call rax
0x0000000000423f8e : add eax, 0x5de955 ; call rax
0x0000000000423b4e : add eax, 0x5ded8d ; call rax
0x0000000000423b2a : add eax, 0x5dedb9 ; call rax
0x0000000000423596 : add eax, 0x5df34d ; call rax
0x000000000042344a : add eax, 0x5df499 ; call rax
0x000000000042338e : add eax, 0x5df54d ; call rax
0x0000000000423372 : add eax, 0x5df571 ; call rax
0x0000000000423228 : add eax, 0x5df643 ; call rax
0x000000000042321f : add eax, 0x5df644 ; call rax
0x00000000004231f3 : add eax, 0x5df668 ; call rax
0x00000000004231fc : add eax, 0x5df6df ; call rax
0x00000000004231ea : add eax, 0x5df6f9 ; call rax
0x00000000004230ba : add eax, 0x5df7b1 ; call rax
0x00000000004230b1 : add eax, 0x5df7b2 ; call rax
0x0000000000423085 : add eax, 0x5df7d6 ; call rax
0x000000000042308e : add eax, 0x5df84d ; call rax
0x000000000042307c : add eax, 0x5df867 ; call rax
0x0000000000422e40 : add eax, 0x5dfaa3 ; call rax
0x0000000000422cc6 : add eax, 0x5dfc1d ; call rax
0x0000000000422c0a : add eax, 0x5dfcd1 ; call rax
0x0000000000422bee : add eax, 0x5dfcf5 ; call rax
0x0000000000422a46 : add eax, 0x5dfe25 ; call rax
0x0000000000422a3d : add eax, 0x5dfe26 ; call rax
0x0000000000422a11 : add eax, 0x5dfe4a ; call rax
0x0000000000422a1a : add eax, 0x5dfec1 ; call rax
0x0000000000422a08 : add eax, 0x5dfedb ; call rax
0x0000000000422968 : add eax, 0x5dff03 ; call rax
0x000000000042295f : add eax, 0x5dff04 ; call rax
0x0000000000422933 : add eax, 0x5dff28 ; call rax
0x000000000042293c : add eax, 0x5dff9f ; call rax
0x000000000042292a : add eax, 0x5dffb9 ; call rax
0x000000000042225f : add eax, 0x5e0684 ; call rax
0x0000000000422122 : add eax, 0x5e07b9 ; call rax
0x0000000000422106 : add eax, 0x5e07dd ; call rax
0x0000000000421c88 : add eax, 0x5e0c5b ; call rax
0x0000000000421be9 : add eax, 0x5e0cfa ; call rax
0x0000000000421957 : add eax, 0x5e0f84 ; call rax
0x0000000000421936 : add eax, 0x5e0fad ; call rax
0x0000000000420ec7 : add eax, 0x5e1a1c ; call rax
0x0000000000420e0a : add eax, 0x5e1ad1 ; call rax
0x0000000000420dee : add eax, 0x5e1af5 ; call rax
0x0000000000420c47 : add eax, 0x5e1c9c ; call rax
0x0000000000420b30 : add eax, 0x5e1dab ; call rax
0x0000000000420b14 : add eax, 0x5e1dcf ; call rax
0x0000000000420802 : add eax, 0x5e20e1 ; call rax
0x0000000000420539 : add eax, 0x5e23a2 ; call rax
0x0000000000420518 : add eax, 0x5e23cb ; call rax
0x0000000000420394 : add eax, 0x5e2547 ; call rax
0x0000000000420370 : add eax, 0x5e2573 ; call rax
0x00000000004202b8 : add eax, 0x5e2623 ; call rax
0x0000000000420292 : add eax, 0x5e2651 ; call rax
0x00000000004201da : add eax, 0x5e2701 ; call rax
0x00000000004201b4 : add eax, 0x5e272f ; call rax
0x000000000041feea : add eax, 0x5e29f1 ; call rax
0x000000000041feaa : add eax, 0x5e2a39 ; call rax
0x000000000041fe68 : add eax, 0x5e2a7b ; call rax
0x000000000041fdf1 : add eax, 0x5e2aea ; call rax
0x000000000041fdb1 : add eax, 0x5e2b32 ; call rax
0x000000000041fd6f : add eax, 0x5e2b74 ; call rax
0x000000000041fcf8 : add eax, 0x5e2be3 ; call rax
0x000000000041fcbb : add eax, 0x5e2c28 ; call rax
0x000000000041fc7d : add eax, 0x5e2c66 ; call rax
0x000000000041fae6 : add eax, 0x5e2df5 ; call rax
0x000000000041fac2 : add eax, 0x5e2e21 ; call rax
0x000000000041fa0a : add eax, 0x5e2ed1 ; call rax
0x000000000041f9e4 : add eax, 0x5e2eff ; call rax
0x000000000041f92c : add eax, 0x5e2faf ; call rax
0x000000000041f906 : add eax, 0x5e2fdd ; call rax
0x000000000041f63c : add eax, 0x5e329f ; call rax
0x000000000041f5fc : add eax, 0x5e32e7 ; call rax
0x000000000041f5ba : add eax, 0x5e3329 ; call rax
0x000000000041f543 : add eax, 0x5e3398 ; call rax
0x000000000041f503 : add eax, 0x5e33e0 ; call rax
0x000000000041f4c1 : add eax, 0x5e3422 ; call rax
0x000000000041f44a : add eax, 0x5e3491 ; call rax
0x000000000041f40d : add eax, 0x5e34d6 ; call rax
0x000000000041f3cf : add eax, 0x5e3514 ; call rax
0x000000000041efc1 : add eax, 0x5e3922 ; call rax
0x000000000041eeb6 : add eax, 0x5e3a25 ; call rax
0x000000000041ee9a : add eax, 0x5e3a49 ; call rax
0x000000000041ecf4 : add eax, 0x5e3be7 ; call rax
0x000000000041ecd8 : add eax, 0x5e3c0b ; call rax
0x00000000007e5c25 : add eax, 0x5e40000 ; lea eax, dword ptr [rcx] ; ret
0x000000000041e6ce : add eax, 0x5e419d ; call rax
0x000000000041e6b5 : add eax, 0x5e41ae ; call rax
0x000000000041e72b : add eax, 0x5e41b0 ; call rax
0x000000000041e631 : add eax, 0x5e422a ; call rax
0x000000000041e674 : add eax, 0x5e426f ; call rax
0x000000000041e63a : add eax, 0x5e42a1 ; call rax
0x000000000041e628 : add eax, 0x5e42bb ; call rax
0x000000000041e09e : add eax, 0x5e47cd ; call rax
0x000000000041e085 : add eax, 0x5e47de ; call rax
0x000000000041e0fb : add eax, 0x5e47e0 ; call rax
0x000000000041e001 : add eax, 0x5e485a ; call rax
0x000000000041e044 : add eax, 0x5e489f ; call rax
0x000000000041e00a : add eax, 0x5e48d1 ; call rax
0x000000000041dff8 : add eax, 0x5e48eb ; call rax
0x000000000041db7b : add eax, 0x5e4d68 ; call rax
0x000000000041dabe : add eax, 0x5e4e1d ; call rax
0x000000000041daa2 : add eax, 0x5e4e41 ; call rax
0x000000000041d234 : add eax, 0x5e56af ; call rax
0x000000000041cf07 : add eax, 0x5e59dc ; call rax
0x000000000041cdf0 : add eax, 0x5e5aeb ; call rax
0x000000000041cdd4 : add eax, 0x5e5b0f ; call rax
0x000000000041c87b : add eax, 0x5e6068 ; call rax
0x000000000041c7c2 : add eax, 0x5e6119 ; call rax
0x000000000041c7a6 : add eax, 0x5e613d ; call rax
0x000000000041c517 : add eax, 0x5e63c4 ; call rax
0x000000000041c4f6 : add eax, 0x5e63ed ; call rax
0x000000000041becc : add eax, 0x5e6a17 ; call rax
0x000000000041be73 : add eax, 0x5e6a70 ; call rax
0x000000000041bd01 : add eax, 0x5e6bda ; call rax
0x000000000041bcd4 : add eax, 0x5e6c0f ; call rax
0x000000000041b2e7 : add eax, 0x5e75fc ; call rax
0x000000000041b1e5 : add eax, 0x5e76fe ; call rax
0x000000000041b006 : add eax, 0x5e78d5 ; call rax
0x000000000041af96 : add eax, 0x5e794d ; call rax
0x000000000041ae79 : add eax, 0x5e7a62 ; call rax
0x000000000041ad98 : add eax, 0x5e7b4b ; call rax
0x000000000041ab8d : add eax, 0x5e7d4e ; call rax
0x000000000041aaf4 : add eax, 0x5e7def ; call rax
0x000000000041a821 : add eax, 0x5e80ba ; call rax
0x000000000041a7de : add eax, 0x5e8105 ; call rax
0x000000000041a726 : add eax, 0x5e81b5 ; call rax
0x000000000041a6e0 : add eax, 0x5e8203 ; call rax
0x000000000041a627 : add eax, 0x5e82b4 ; call rax
0x000000000041a5dc : add eax, 0x5e8307 ; call rax
0x000000000041a4ce : add eax, 0x5e840d ; call rax
0x000000000041a470 : add eax, 0x5e8473 ; call rax
0x000000000041a3a8 : add eax, 0x5e8533 ; call rax
0x000000000041a313 : add eax, 0x5e8548 ; call rax
0x000000000041a30a : add eax, 0x5e85d9 ; call rax
0x00000000007e1830 : add eax, 0x5e905 ; retf 0x3405
0x00000000004197b3 : add eax, 0x5e9128 ; call rax
0x0000000000419770 : add eax, 0x5e9173 ; call rax
0x000000000041972d : add eax, 0x5e91b6 ; call rax
0x0000000000419534 : add eax, 0x5e93a7 ; call rax
0x00000000004194f1 : add eax, 0x5e93f2 ; call rax
0x00000000004194b0 : add eax, 0x5e9433 ; call rax
0x00000000004192b7 : add eax, 0x5e9624 ; call rax
0x000000000041926f : add eax, 0x5e9674 ; call rax
0x00000000004191ba : add eax, 0x5e9729 ; call rax
0x0000000000418c14 : add eax, 0x5e9cc7 ; call rax
0x0000000000418bcc : add eax, 0x5e9d17 ; call rax
0x0000000000418b17 : add eax, 0x5e9dcc ; call rax
0x0000000000418a27 : add eax, 0x5e9e44 ; call rax
0x0000000000418a1e : add eax, 0x5e9e45 ; call rax
0x0000000000418915 : add eax, 0x5e9fce ; call rax
0x000000000041880e : add eax, 0x5ea0cd ; call rax
0x00000000004187d6 : add eax, 0x5ea10d ; call rax
0x00000000004186c6 : add eax, 0x5ea215 ; call rax
0x0000000000418668 : add eax, 0x5ea27b ; call rax
0x00000000004185a0 : add eax, 0x5ea33b ; call rax
0x000000000041850b : add eax, 0x5ea350 ; call rax
0x0000000000418502 : add eax, 0x5ea3e1 ; call rax
0x0000000000417bf5 : add eax, 0x5eace6 ; call rax
0x0000000000417bad : add eax, 0x5ead36 ; call rax
0x0000000000417af8 : add eax, 0x5eadeb ; call rax
0x0000000000417a11 : add eax, 0x5eae5a ; call rax
0x0000000000417a08 : add eax, 0x5eae5b ; call rax
0x000000000041790c : add eax, 0x5eafd7 ; call rax
0x0000000000417804 : add eax, 0x5eb0d7 ; call rax
0x00000000004177cc : add eax, 0x5eb117 ; call rax
0x0000000000417712 : add eax, 0x5eb1c9 ; call rax
0x00000000004176d2 : add eax, 0x5eb211 ; call rax
0x0000000000417619 : add eax, 0x5eb2c2 ; call rax
0x00000000004175d6 : add eax, 0x5eb30d ; call rax
0x000000000041704a : add eax, 0x5eb891 ; call rax
0x0000000000417007 : add eax, 0x5eb8dc ; call rax
0x0000000000416fc6 : add eax, 0x5eb91d ; call rax
0x0000000000416d4e : add eax, 0x5ebb8d ; call rax
0x0000000000416d0b : add eax, 0x5ebbd8 ; call rax
0x0000000000416cca : add eax, 0x5ebc19 ; call rax
0x0000000000416b5f : add eax, 0x5ebd84 ; call rax
0x0000000000416a59 : add eax, 0x5ebe82 ; call rax
0x0000000000416a24 : add eax, 0x5ebebf ; call rax
0x0000000000416914 : add eax, 0x5ebfc7 ; call rax
0x00000000004168b6 : add eax, 0x5ec02d ; call rax
0x00000000004167ee : add eax, 0x5ec0ed ; call rax
0x0000000000416759 : add eax, 0x5ec102 ; call rax
0x0000000000416750 : add eax, 0x5ec193 ; call rax
0x0000000000415bdc : add eax, 0x5eccff ; call rax
0x0000000000415b94 : add eax, 0x5ecd4f ; call rax
0x0000000000415adf : add eax, 0x5ece04 ; call rax
0x00000000004159ef : add eax, 0x5ece7c ; call rax
0x00000000004159e6 : add eax, 0x5ece7d ; call rax
0x000000000041597a : add eax, 0x5ecf69 ; call rax
0x0000000000415894 : add eax, 0x5ed047 ; call rax
0x000000000041585c : add eax, 0x5ed087 ; call rax
0x000000000041507e : add eax, 0x5ed7ed ; call rax
0x0000000000415075 : add eax, 0x5ed7ee ; call rax
0x0000000000415049 : add eax, 0x5ed812 ; call rax
0x0000000000415052 : add eax, 0x5ed889 ; call rax
0x0000000000415040 : add eax, 0x5ed8a3 ; call rax
0x0000000000414b40 : add eax, 0x5edd9b ; call rax
0x0000000000414b1c : add eax, 0x5eddc7 ; call rax
0x00000000004146dc : add eax, 0x5ee1ff ; call rax
0x00000000004146b8 : add eax, 0x5ee22b ; call rax
0x0000000000414124 : add eax, 0x5ee7bf ; call rax
0x0000000000413fd8 : add eax, 0x5ee90b ; call rax
0x0000000000413f1c : add eax, 0x5ee9bf ; call rax
0x0000000000413f00 : add eax, 0x5ee9e3 ; call rax
0x0000000000413db6 : add eax, 0x5eeab5 ; call rax
0x0000000000413dad : add eax, 0x5eeab6 ; call rax
0x0000000000413d81 : add eax, 0x5eeada ; call rax
0x0000000000413d8a : add eax, 0x5eeb51 ; call rax
0x0000000000413d78 : add eax, 0x5eeb6b ; call rax
0x0000000000413c48 : add eax, 0x5eec23 ; call rax
0x0000000000413c3f : add eax, 0x5eec24 ; call rax
0x0000000000413c13 : add eax, 0x5eec48 ; call rax
0x0000000000413c1c : add eax, 0x5eecbf ; call rax
0x0000000000413c0a : add eax, 0x5eecd9 ; call rax
0x00000000004139ce : add eax, 0x5eef15 ; call rax
0x00000000007ccdd1 : add eax, 0x5ef05 ; retf
0x0000000000413854 : add eax, 0x5ef08f ; call rax
0x0000000000413798 : add eax, 0x5ef143 ; call rax
0x000000000041377c : add eax, 0x5ef167 ; call rax
0x00000000004135d4 : add eax, 0x5ef297 ; call rax
0x00000000004135cb : add eax, 0x5ef298 ; call rax
0x000000000041359f : add eax, 0x5ef2bc ; call rax
0x00000000004135a8 : add eax, 0x5ef333 ; call rax
0x0000000000413596 : add eax, 0x5ef34d ; call rax
0x00000000004134f6 : add eax, 0x5ef375 ; call rax
0x00000000004134ed : add eax, 0x5ef376 ; call rax
0x00000000004134c1 : add eax, 0x5ef39a ; call rax
0x00000000004134ca : add eax, 0x5ef411 ; call rax
0x00000000004134b8 : add eax, 0x5ef42b ; call rax
0x00000000004121e7 : add eax, 0x5f06fc ; call rax
0x00000000004120aa : add eax, 0x5f0831 ; call rax
0x000000000041208e : add eax, 0x5f0855 ; call rax
0x0000000000411c1e : add eax, 0x5f0cc5 ; call rax
0x0000000000411b87 : add eax, 0x5f0d5c ; call rax
0x0000000000411903 : add eax, 0x5f0fd8 ; call rax
0x00000000004118e2 : add eax, 0x5f1001 ; call rax
0x0000000000410e73 : add eax, 0x5f1a70 ; call rax
0x0000000000410db6 : add eax, 0x5f1b25 ; call rax
0x0000000000410d9a : add eax, 0x5f1b49 ; call rax
0x0000000000410bf7 : add eax, 0x5f1cec ; call rax
0x0000000000410ae0 : add eax, 0x5f1dfb ; call rax
0x0000000000410ac4 : add eax, 0x5f1e1f ; call rax
0x00000000004107ba : add eax, 0x5f2129 ; call rax
0x00000000004104f1 : add eax, 0x5f23ea ; call rax
0x00000000004104d0 : add eax, 0x5f2413 ; call rax
0x000000000041034c : add eax, 0x5f258f ; call rax
0x0000000000410328 : add eax, 0x5f25bb ; call rax
0x0000000000410270 : add eax, 0x5f266b ; call rax
0x000000000041024a : add eax, 0x5f2699 ; call rax
0x0000000000410039 : add eax, 0x5f28a2 ; call rax
0x000000000040fff8 : add eax, 0x5f28eb ; call rax
0x000000000040ffb6 : add eax, 0x5f292d ; call rax
0x000000000040ff4b : add eax, 0x5f2990 ; call rax
0x000000000040ff06 : add eax, 0x5f29dd ; call rax
0x000000000040fec0 : add eax, 0x5f2a23 ; call rax
0x000000000040fd32 : add eax, 0x5f2ba9 ; call rax
0x000000000040fd0e : add eax, 0x5f2bd5 ; call rax
0x000000000040fc56 : add eax, 0x5f2c85 ; call rax
0x000000000040fc30 : add eax, 0x5f2cb3 ; call rax
0x000000000040fa1f : add eax, 0x5f2ebc ; call rax
0x000000000040f9de : add eax, 0x5f2f05 ; call rax
0x000000000040f99c : add eax, 0x5f2f47 ; call rax
0x000000000040f931 : add eax, 0x5f2faa ; call rax
0x000000000040f8ec : add eax, 0x5f2ff7 ; call rax
0x000000000040f8a6 : add eax, 0x5f303d ; call rax
0x000000000040f4a1 : add eax, 0x5f3442 ; call rax
0x000000000040f396 : add eax, 0x5f3545 ; call rax
0x000000000040f37a : add eax, 0x5f3569 ; call rax
0x000000000040f1d4 : add eax, 0x5f3707 ; call rax
0x000000000040f1b8 : add eax, 0x5f372b ; call rax
0x0000000000409bcc : add eax, 0x5f3a87 ; call 0x505e77
0x000000000040ebb6 : add eax, 0x5f3cb5 ; call rax
0x000000000040eb9d : add eax, 0x5f3cc6 ; call rax
0x000000000040ec13 : add eax, 0x5f3cc8 ; call rax
0x000000000040eb19 : add eax, 0x5f3d42 ; call rax
0x000000000040eb5c : add eax, 0x5f3d87 ; call rax
0x000000000040eb22 : add eax, 0x5f3db9 ; call rax
0x000000000040eb10 : add eax, 0x5f3dd3 ; call rax
0x00000000007ce77c : add eax, 0x5f405 ; retf 0x505
0x000000000040e586 : add eax, 0x5f42e5 ; call rax
0x000000000040e56d : add eax, 0x5f42f6 ; call rax
0x000000000040e5e3 : add eax, 0x5f42f8 ; call rax
0x000000000040e4e9 : add eax, 0x5f4372 ; call rax
0x000000000040e52c : add eax, 0x5f43b7 ; call rax
0x000000000040e4f2 : add eax, 0x5f43e9 ; call rax
0x000000000040e4e0 : add eax, 0x5f4403 ; call rax
0x000000000040e063 : add eax, 0x5f4880 ; call rax
0x000000000040dfa6 : add eax, 0x5f4935 ; call rax
0x000000000040df8a : add eax, 0x5f4959 ; call rax
0x000000000040d72c : add eax, 0x5f51b7 ; call rax
0x000000000040d40b : add eax, 0x5f54d8 ; call rax
0x000000000040d2f4 : add eax, 0x5f55e7 ; call rax
0x000000000040d2d8 : add eax, 0x5f560b ; call rax
0x000000000040cd87 : add eax, 0x5f5b5c ; call rax
0x000000000040ccce : add eax, 0x5f5c0d ; call rax
0x000000000040ccb2 : add eax, 0x5f5c31 ; call rax
0x000000000040ca23 : add eax, 0x5f5eb8 ; call rax
0x000000000040ca02 : add eax, 0x5f5ee1 ; call rax
0x000000000040c3ee : add eax, 0x5f64f5 ; call rax
0x000000000040c395 : add eax, 0x5f654e ; call rax
0x000000000040c223 : add eax, 0x5f66b8 ; call rax
0x000000000040c1f6 : add eax, 0x5f66ed ; call rax
0x000000000040b9a3 : add eax, 0x5f6f40 ; call rax
0x000000000040b579 : add eax, 0x5f7362 ; call rax
0x000000000040b52d : add eax, 0x5f73b6 ; call rax
0x000000000040b361 : add eax, 0x5f757a ; call rax
0x000000000040b31c : add eax, 0x5f75c7 ; call rax
0x000000000040b278 : add eax, 0x5f7663 ; call rax
0x000000000040b255 : add eax, 0x5f768e ; call rax
0x000000000040b10d : add eax, 0x5f77ce ; call rax
0x000000000040b02c : add eax, 0x5f78b7 ; call rax
0x000000000040aba9 : add eax, 0x5f7d32 ; call rax
0x000000000040ab10 : add eax, 0x5f7dd3 ; call rax
0x0000000000408c18 : add eax, 0x5f9ccb ; call rax
0x0000000000408b60 : add eax, 0x5f9d7b ; call rax
0x0000000000408b3c : add eax, 0x5f9da7 ; call rax
0x0000000000408ae4 : add eax, 0x5fa1fe ; add ebx, esi ; ret
0x0000000000673b99 : add eax, 0x600 ; ret
0x000000000040a0b8 : add eax, 0x6032af ; nop ; leave ; ret
0x00000000006c5d7b : add eax, 0x6348327f ; ret 0x294c
0x00000000007eb7b6 : add eax, 0x68005 ; retf 0x3405
0x00000000007d6fd6 : add eax, 0x6801029a ; pop rax ; add byte ptr [rax], al ; ret
0x00000000007ca8e0 : add eax, 0x6ae20cb ; ret
0x0000000000678012 : add eax, 0x6bd22944 ; ret 0x3964
0x0000000000690578 : add eax, 0x70 ; ret
0x00000000007d5664 : add eax, 0x7028400 ; ret 5
0x00000000006a47d3 : add eax, 0x73248 ; ret
0x00000000006a4763 : add eax, 0x73c34 ; ret
0x0000000000600906 : add eax, 0x74c58949 ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000005150be : add eax, 0x74c68949 ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000057700f : add eax, 0x74c68949 ; adc ecx, dword ptr [rax - 0x77] ; ret
0x000000000065bd49 : add eax, 0x74c68949 ; and byte ptr [rax - 0x77], cl ; ret
0x0000000000522abb : add eax, 0x75303b49 ; retf -0x7ab8
0x00000000006a82d0 : add eax, 0x75383b48 ; ret
0x00000000007917cf : add eax, 0x783068c ; add edi, dword ptr [rax] ; add dword ptr [rdx], ecx ; ret
0x00000000007b7e9f : add eax, 0x783068c ; add edx, dword ptr [rdi] ; add ecx, dword ptr [rdx] ; ret
0x00000000004a73f6 : add eax, 0x7cf83944 ; adc al, 0xbe ; retf
0x00000000004b3739 : add eax, 0x7dfd3941 ; adc al, 0xbe ; retf
0x00000000004a74b2 : add eax, 0x7e0cf883 ; adc al, 0xbe ; retf
0x00000000007f9388 : add eax, 0x800003c1 ; add cl, byte ptr [rax] ; ret
0x00000000007ed0b8 : add eax, 0x80000f8a ; syscall
0x00000000007f886b : add eax, 0x800310d4 ; add dl, byte ptr [rdx] ; ret
0x00000000007dc661 : add eax, 0x800f3bcf ; sbb eax, dword ptr [rsi] ; ret 0x3b
0x00000000007dd0c1 : add eax, 0x81000faa ; syscall
0x00000000007edc6d : add eax, 0x810511b6 ; syscall
0x00000000007f5aa7 : add eax, 0x810930ef ; xor dword ptr [rcx], edx ; ret
0x00000000007ce2b5 : add eax, 0x82000ef5 ; syscall
0x00000000007cde6d : add eax, 0x820019c2 ; syscall
0x00000000007e0e14 : add eax, 0x830002fb ; add esi, dword ptr [rax] ; add byte ptr [rax], al ; ret 0x503
0x00000000006ba185 : add eax, 0x83480000 ; ret
0x00000000006210b1 : add eax, 0x83d88900 ; rol byte ptr [rcx], 0x89 ; ret
0x00000000006cb874 : add eax, 0x8478d48 ; ret
0x0000000000504344 : add eax, 0x847b60f ; ret
0x000000000069478a : add eax, 0x84c0940f ; ret 0x2e75
0x00000000007d0192 : add eax, 0x85000f8c ; add edx, dword ptr [rdx] ; ret 0xe
0x00000000007d45dc : add eax, 0x85000fa3 ; syscall
0x00000000006a5a73 : add eax, 0x85b24 ; add rsp, 0x48 ; ret
0x00000000006a59bb : add eax, 0x85bd8 ; add rsp, 0x48 ; ret
0x0000000000651b9d : add eax, 0x85d23100 ; ror byte ptr [rdi], 0x48 ; ret 0xc389
0x00000000007c76dc : add eax, 0x86000f97 ; syscall
0x00000000007e14c9 : add eax, 0x860103eb ; add edi, dword ptr [rcx] ; add byte ptr [rax], al ; retf
0x00000000007d438a : add eax, 0x87030fce ; syscall
0x00000000006cd043 : add eax, 0x8747f3c ; ret
0x00000000007e152d : add eax, 0x880004c7 ; add dword ptr [rbx], eax ; ret 4
0x00000000007f1052 : add eax, 0x88070ed8 ; syscall
0x00000000007f69c4 : add eax, 0x88094a99 ; syscall
0x0000000000674c2a : add eax, 0x89000004 ; out dx, al ; call rax
0x0000000000659529 : add eax, 0x89000280 ; ret
0x0000000000691b77 : add eax, 0x89000340 ; ret 0x8948
0x000000000055cff7 : add eax, 0x89001291 ; ret
0x00000000007e6fac : add eax, 0x890019b7 ; add al, 5 ; retf
0x00000000007eb552 : add eax, 0x89001cc8 ; sbb al, 6 ; ret
0x00000000007ca85d : add eax, 0x89050ec6 ; syscall
0x000000000048f7d8 : add eax, 0x89480000 ; ret
0x0000000000675fc9 : add eax, 0x89480000 ; ret 0x948
0x000000000064f657 : add eax, 0x89480003 ; ret
0x000000000062f56c : add eax, 0x89480005 ; ret
0x00000000006116db : add eax, 0x89480006 ; ret 0x8b48
0x0000000000604193 : add eax, 0x8948000d ; ret
0x000000000059a7ab : add eax, 0x8948000f ; ret
0x0000000000570075 : add eax, 0x89480011 ; ret
0x0000000000500cf8 : add eax, 0x89480018 ; ret
0x000000000052e0a1 : add eax, 0x89480019 ; ret
0x00000000005201a4 : add eax, 0x8948001a ; ret
0x00000000005c56e7 : add eax, 0x8948ffe4 ; ret
0x000000000054ec79 : add eax, 0x894c0000 ; out dx, eax ; call rax
0x00000000007d2810 : add eax, 0x8a000498 ; add al, 0x23 ; add byte ptr [rax], al ; retf 0x504
0x00000000007e3618 : add eax, 0x8a0017fe ; syscall
0x00000000007d7857 : add eax, 0x8a0101b0 ; add dword ptr [rsi], esp ; add byte ptr [rax], al ; ret
0x00000000007cbf5d : add eax, 0x8a0305d9 ; add ecx, dword ptr [rsi] ; ret 6
0x00000000007d2e5e : add eax, 0x8a030eec ; syscall
0x00000000007cda88 : add eax, 0x8b000ef9 ; syscall
0x00000000007f89fc : add eax, 0x8b000efe ; syscall
0x00000000007d737d : add eax, 0x8b000fca ; syscall
0x00000000007dd0c7 : add eax, 0x8b000fd0 ; syscall
0x00000000007efced : add eax, 0x8b001584 ; syscall
0x000000000046891f : add eax, 0x8b00594a ; add al, 0x89 ; ret 0x458b
0x00000000007e5ec7 : add eax, 0x8b0d12f4 ; or al, 0x19 ; add byte ptr [rax], al ; ret
0x00000000007cd44a : add eax, 0x8c000efa ; syscall
0x00000000007e5ee4 : add eax, 0x8c0012d8 ; syscall
0x00000000007d070e : add eax, 0x8c0023f5 ; syscall
0x000000000055438a : add eax, 0x8c48348 ; ret
0x00000000007eb300 : add eax, 0x8d0101bc ; add dword ptr [rdi], ebp ; add byte ptr [rax], al ; retf 0x501
0x00000000007e7cfe : add eax, 0x8d03b000 ; add eax, edx ; add al, 3 ; ret
0x0000000000601af1 : add eax, 0x8d410000 ; add dword ptr [r9], r15d ; ret
0x00000000007f0259 : add eax, 0x8e030ee8 ; syscall
0x00000000007c0a03 : add eax, 0x8e502 ; retf 0x6305
0x00000000007cd2da : add eax, 0x8f000f96 ; add edx, dword ptr [rdx] ; call qword ptr [rax]
0x00000000004c26f8 : add eax, 0x8fbf0000 ; ret 0x6e
0x00000000007d4943 : add eax, 0x90000ef5 ; syscall
0x00000000007f5ae7 : add eax, 0x900036ee ; xor al, 5 ; ret
0x00000000007ecae1 : add eax, 0x91000ef2 ; syscall
0x00000000007e76d3 : add eax, 0x920034a3 ; xor al, 5 ; ret 0x34
0x00000000007cc593 : add eax, 0x930010c7 ; adc byte ptr [rsi], al ; ret 0x10
0x00000000007e615a : add eax, 0x930d10d3 ; or al, 0x19 ; add byte ptr [rax], al ; ret
0x00000000007f4fd2 : add eax, 0x940002b3 ; add bl, byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x00000000007d0d4f : add eax, 0x94000fa9 ; syscall
0x00000000007c6b3f : add eax, 0x940017cb ; sbb byte ptr [rdi], ch ; ret
0x00000000007e768b : add eax, 0x94002baa ; sub al, 5 ; ret
0x0000000000672ac4 : add eax, 0x9480000 ; ret 0x840f
0x00000000007dd9b2 : add eax, 0x95000f9f ; syscall
0x0000000000682533 : add eax, 0x954e8 ; add rsp, 8 ; ret
0x00000000006822f3 : add eax, 0x95728 ; ret
0x00000000007daf85 : add eax, 0x960003d7 ; add esi, dword ptr [rcx] ; add byte ptr [rax], al ; retf 0x603
0x00000000007c72b9 : add eax, 0x96000d9b ; or al, 5 ; ret 0xc
0x00000000007d96b6 : add eax, 0x960014f3 ; syscall
0x00000000007ed0be : add eax, 0x97000f85 ; syscall
0x00000000007e4cc3 : add eax, 0x970012fa ; add ebx, dword ptr [rcx] ; call qword ptr [rdx]
0x00000000007f025f : add eax, 0x980010c3 ; syscall
0x00000000007dd96b : add eax, 0x99000c8c ; or al, 5 ; ret 0xc
0x00000000007e36ad : add eax, 0x9a0327a0 ; adc al, 0x16 ; jmp qword ptr [rsi]
0x00000000007e68d1 : add eax, 0x9b000df5 ; adc edx, dword ptr [rsi] ; add byte ptr [rax], al ; retf 0x513
0x00000000007ecae7 : add eax, 0x9b000fdc ; syscall
0x00000000007f8f9c : add eax, 0x9b010394 ; add dword ptr [rsi], edx ; add byte ptr [rax], al ; ret
0x00000000007c7052 : add eax, 0x9c001ec1 ; sbb dword ptr [rbx], eax ; add byte ptr [rax], al ; retf
0x00000000007d4558 : add eax, 0x9d000abc ; or dl, byte ptr [rdi] ; add byte ptr [rax], al ; retf 0x50a
0x00000000007ce2bb : add eax, 0x9d000cfb ; syscall
0x00000000007d91ed : add eax, 0x9d0017cd ; syscall
0x00000000007d4390 : add eax, 0x9e030bfc ; syscall
0x00000000007cd450 : add eax, 0x9e090fa8 ; syscall
0x00000000007e4dba : add eax, 0x9f000fac ; syscall
0x00000000007cd5b0 : add eax, 0x9f001583 ; syscall
0x00000000007f0537 : add eax, 0xa00002c8 ; add cl, byte ptr [rbx] ; add byte ptr [rax], al ; ret
0x00000000007d7383 : add eax, 0xa00009d1 ; syscall
0x00000000007ea455 : add eax, 0xa0001881 ; sysenter
0x00000000007c91d3 : add eax, 0xa0030284 ; add dword ptr [rbx], edx ; add byte ptr [rax], al ; ret
0x00000000007c9197 : add eax, 0xa003028a ; add dword ptr [rbx], edx ; add byte ptr [rax], al ; ret
0x00000000007edc12 : add eax, 0xa00310c5 ; add al, 6 ; retf
0x00000000007d1613 : add eax, 0xa10003ad ; add esp, dword ptr [rcx] ; add byte ptr [rax], al ; retf 0x603
0x00000000007e110e : add eax, 0xa1000f94 ; syscall
0x00000000007f4d65 : add eax, 0xa1000fbb ; clts ; ret
0x00000000007d6b62 : add eax, 0xa1051289 ; syscall
0x00000000007efcf3 : add eax, 0xa2000fb9 ; syscall
0x00000000007f084a : add eax, 0xa2153fd3 ; syscall
0x00000000007e6847 : add eax, 0xa3000fdb ; syscall
0x00000000007cda8e : add eax, 0xa4000f90 ; syscall
0x0000000000683fdb : add eax, 0xa4770 ; ret
0x00000000006839d8 : add eax, 0xa4e23 ; add rsp, 0x18 ; ret
0x0000000000683808 : add eax, 0xa4ff3 ; add rsp, 0x18 ; ret
0x00000000007dd0cd : add eax, 0xa5000fcb ; syscall
0x00000000007e9e80 : add eax, 0xa50021a8 ; syscall
0x00000000007e6190 : add eax, 0xa5150ef8 ; adc byte ptr [rax], al ; xchg eax, edx ; syscall
0x00000000007f6752 : add eax, 0xa60022b1 ; syscall
0x0000000000682520 : add eax, 0xa61f3 ; add rsp, 8 ; ret
0x00000000007f66ff : add eax, 0xa7001a8a ; or al, 5 ; ret
0x00000000007d927a : add eax, 0xa70714e3 ; adc al, 0x18 ; add byte ptr [rax], al ; retf
0x00000000007c0e99 : add eax, 0xa8000ebe ; syscall
0x00000000007f22a8 : add eax, 0xa8033a86 ; and al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000007dd54a : add eax, 0xa80604bc ; or al, byte ptr [rax] ; ret 0x1104
0x00000000007d96bc : add eax, 0xa90012d6 ; syscall
0x00000000007cb407 : add eax, 0xa90071a9 ; jno 0x7cb417 ; add byte ptr [rax], al ; ret
0x00000000007f6247 : add eax, 0xa90310d7 ; or dword ptr [rsi], eax ; retf 0x10
0x00000000007e4bc4 : add eax, 0xa90501d0 ; add dword ptr [rsi], eax ; retf
0x00000000007f56ae : add eax, 0xaa000fd7 ; syscall
0x00000000007d7389 : add eax, 0xaa000fe6 ; syscall
0x00000000007e68f9 : add eax, 0xaa0014c7 ; adc al, 5 ; ret 0x14
0x00000000007d90df : add eax, 0xaa0015cf ; add al, 5 ; retf 0x15
0x00000000007ef912 : add eax, 0xab00048f ; add dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x00000000007cb5df : add eax, 0xab0512d8 ; adc byte ptr [rsi], cl ; ret
0x00000000007dd9b8 : add eax, 0xac000fb6 ; syscall
0x00000000007e6d6a : add eax, 0xac031bff ; sbb al, 5 ; retf 0x31e
0x00000000007ded54 : add eax, 0xad0004e6 ; add al, 5 ; add byte ptr [rax], al ; ret 0x504
0x00000000007ec998 : add eax, 0xad0106f5 ; add edx, dword ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000000007dfc39 : add eax, 0xae000ece ; syscall
0x00000000007ce2c1 : add eax, 0xae000ef5 ; syscall
0x00000000007dc406 : add eax, 0xae05028a ; add dword ptr [rax], edx ; retf 1
0x00000000007ddc16 : add eax, 0xae0511f5 ; adc al, byte ptr [rax] ; call qword ptr [rcx]
0x00000000007d321a : add eax, 0xaf000fed ; syscall
0x0000000000662861 : add eax, 0xb ; ret
0x00000000007e8a59 : add eax, 0xb0000ecd ; syscall
0x00000000007cc569 : add eax, 0xb00011eb ; syscall
0x00000000007d1d59 : add eax, 0xb03a701 ; retf
0x00000000007ca851 : add eax, 0xb1050dee ; syscall
0x00000000007cdc89 : add eax, 0xb2001490 ; syscall
0x00000000007bfe4e : add eax, 0xb20017a1 ; sete byte ptr [rdx] ; ret 0x17
0x00000000007e5c09 : add eax, 0xb20105c3 ; add al, 0x16 ; add byte ptr [rax], al ; retf
0x00000000007e5156 : add eax, 0xb21732b0 ; or al, byte ptr [rsi] ; retf
0x00000000007ed0c4 : add eax, 0xb3000fcf ; syscall
0x00000000007ddbbf : add eax, 0xb3001cce ; syscall
0x00000000007c51d3 : add eax, 0xb33602fd ; add eax, dword ptr [rax] ; ret 0x503
0x00000000007e7b49 : add eax, 0xb4000ed1 ; syscall
0x00000000007d9c1c : add eax, 0xb5002584 ; syscall
0x00000000007ec9c4 : add eax, 0xb50105ab ; add al, 0x16 ; add byte ptr [rax], al ; retf
0x00000000007dd0d3 : add eax, 0xb7000fc1 ; syscall
0x0000000000446269 : add eax, 0xb8 ; add byte ptr [rax + 0x39], cl ; ret 0x2075
0x000000000043ff7a : add eax, 0xb8 ; add byte ptr [rax + 0x39], cl ; ret 0x2475
0x00000000004944b2 : add eax, 0xb8 ; add byte ptr [rax + 0x39], cl ; ret 0x3875
0x00000000004e05ca : add eax, 0xb8 ; add byte ptr [rax + 0x39], cl ; ret 0x3f75
0x000000000043fd93 : add eax, 0xb8 ; add byte ptr [rax + 0x39], cl ; ret 0x4675
0x000000000043fbc6 : add eax, 0xb8 ; add byte ptr [rax + 0x39], cl ; ret 0x4975
0x00000000004402f8 : add eax, 0xb8 ; add byte ptr [rax + 0x39], cl ; ret 0x5175
0x0000000000494c13 : add eax, 0xb8 ; add byte ptr [rax + 0x39], cl ; ret 0x5375
0x0000000000443bb3 : add eax, 0xb8 ; add byte ptr [rax + 0x39], cl ; ret 0x5875
0x000000000044aa7c : add eax, 0xb8 ; add byte ptr [rax + 0x39], cl ; ret 0x6775
0x0000000000464276 : add eax, 0xb8 ; add byte ptr [rax + 0x39], cl ; ret 0x6875
0x000000000049e31a : add eax, 0xb8 ; add byte ptr [rax + 0x39], cl ; ret 0x7475
0x000000000045b6c2 : add eax, 0xb8 ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000004adf73 : add eax, 0xb8 ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x3d48
0x000000000043c2a8 : add eax, 0xb8 ; add byte ptr [rcx], bh ; ret 0x840f
0x000000000043c41b : add eax, 0xb8 ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000004139a8 : add eax, 0xb8 ; add cl, cl ; ret
0x000000000044e32a : add eax, 0xb8006e ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000047dc23 : add eax, 0xb8006e ; add byte ptr [rax], al ; add al, ch ; retf 0x2036
0x00000000007cde78 : add eax, 0xb80d1ac9 ; syscall
0x00000000007d0d55 : add eax, 0xb9000c92 ; syscall
0x0000000000493fe7 : add eax, 0xba ; add byte ptr [rcx], al ; ret 0xc085
0x00000000004a4269 : add eax, 0xba ; add byte ptr [rcx], al ; retf -0x3f7b
0x00000000007cd456 : add eax, 0xba000cac ; syscall
0x00000000007cda94 : add eax, 0xba000fa9 ; syscall
0x00000000007d4396 : add eax, 0xba030cb1 ; syscall
0x00000000007e553a : add eax, 0xbb0038d3 ; cmp dword ptr [rdx], esp ; ret 0x3a
0x00000000007d8f08 : add eax, 0xbb05059b ; add al, 5 ; ret
0x00000000007f0265 : add eax, 0xbc0010e4 ; syscall
0x00000000007cdc8f : add eax, 0xbc0011ea ; sysenter
0x00000000007d91f3 : add eax, 0xbc0017c8 ; syscall
0x00000000007cca47 : add eax, 0xbd00048a ; add al, 5 ; ret 4
0x0000000000440001 : add eax, 0xbe ; add byte ptr [rcx], bh ; ret 0x1d7d
0x000000000055389e : add eax, 0xbe000001 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x00000000007e684d : add eax, 0xbe000fd9 ; syscall
0x00000000007cd5b6 : add eax, 0xbe0014cf ; syscall
0x00000000007fa50b : add eax, 0xbe0065d8 ; jns 0x7fa51e ; retf 0x7c
0x00000000007d2e64 : add eax, 0xbe030f8f ; syscall
0x00000000007f0850 : add eax, 0xbe153fc9 ; syscall
0x00000000007e3220 : add eax, 0xbf0326f5 ; adc al, 5 ; retf 0x526
0x000000000053ddc9 : add eax, 0xc0 ; ret
0x00000000007d45e7 : add eax, 0xc1000fd2 ; syscall
0x000000000069cfd7 : add eax, 0xc1a9e3e9 ; retf 0x440c
0x00000000007ecaed : add eax, 0xc2000ef2 ; syscall
0x00000000007dcb99 : add eax, 0xc2000fa0 ; syscall
0x0000000000537a3d : add eax, 0xc2830000 ; add dword ptr [rcx], ebp ; ret 0xd089
0x000000000068bcf5 : add eax, 0xc283480c ; add dword ptr [rax + 0x29], ecx ; retf -0x7d7
0x00000000007d3220 : add eax, 0xc30009f8 ; syscall
0x00000000007d0d5b : add eax, 0xc3000ffb ; syscall
0x00000000007c0e9f : add eax, 0xc4000fd4 ; syscall
0x00000000007d96c2 : add eax, 0xc4001582 ; syscall
0x00000000007d439c : add eax, 0xc4030fe3 ; syscall
0x000000000067fb5e : add eax, 0xc4834800 ; or bl, al ; ret
0x000000000067f640 : add eax, 0xc483481f ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000626673 : add eax, 0xc4894100 ; call qword ptr [rip + 0x3dc26a]
0x00000000007ed0ca : add eax, 0xc5000fd4 ; syscall
0x00000000007d738f : add eax, 0xc5000fe1 ; syscall
0x00000000007d5bf4 : add eax, 0xc50501b4 ; add al, byte ptr [rax] ; retf
0x00000000007f26bc : add eax, 0xc60004a5 ; add al, 5 ; retf
0x00000000007ce2c7 : add eax, 0xc6000cfb ; syscall
0x00000000007f026b : add eax, 0xc6000ffe ; syscall
0x00000000007d974f : add eax, 0xc60014b5 ; adc al, 5 ; retf
0x00000000007f0951 : add eax, 0xc6151c9a ; sbb al, 5 ; retf
0x00000000007a5f8e : add eax, 0xc623ee00 ; call qword ptr [rdx]
0x00000000007a4806 : add eax, 0xc6334a00 ; call qword ptr [rdx]
0x00000000007a47ee : add eax, 0xc6335000 ; call qword ptr [rdx]
0x00000000007a47be : add eax, 0xc6335800 ; call qword ptr [rdx]
0x00000000007a47a6 : add eax, 0xc6335e00 ; call qword ptr [rdx]
0x00000000007a478e : add eax, 0xc6336400 ; call qword ptr [rdx]
0x00000000007a3ebe : add eax, 0xc63b6c00 ; call qword ptr [rdx]
0x00000000007a3ea6 : add eax, 0xc63b7200 ; call qword ptr [rdx]
0x00000000007a16ae : add eax, 0xc6471600 ; call rdi
0x00000000007a1966 : add eax, 0xc6498800 ; call qword ptr [rdx]
0x00000000007a194e : add eax, 0xc6498e00 ; call qword ptr [rdx]
0x00000000007a1936 : add eax, 0xc6499400 ; call qword ptr [rdx]
0x00000000007a1906 : add eax, 0xc649b200 ; call qword ptr [rdx]
0x00000000007a18ee : add eax, 0xc649b800 ; call qword ptr [rdx]
0x00000000007a18d6 : add eax, 0xc649be00 ; call qword ptr [rdx]
0x00000000007a18be : add eax, 0xc649c400 ; call qword ptr [rdx]
0x00000000004f49f9 : add eax, 0xc6830000 ; add dword ptr [rcx], edi ; ret
0x00000000007ddbc5 : add eax, 0xc9000fb8 ; syscall
0x00000000007cd45c : add eax, 0xc9000ff5 ; syscall
0x00000000004187a7 : add eax, 0xc9002a61 ; ret
0x000000000045026b : add eax, 0xc9fffeac ; ret
0x00000000007dc409 : add eax, 0xca1001ae ; add dword ptr [rax], eax ; ret
0x00000000007e1114 : add eax, 0xcb000fc1 ; syscall
0x00000000007e8a5f : add eax, 0xcc000fdc ; syscall
0x00000000007ecaf3 : add eax, 0xcc000fe1 ; syscall
0x00000000007d3226 : add eax, 0xcd001089 ; syscall
0x00000000007e8ecc : add eax, 0xcd102 ; ret
0x0000000000733e22 : add eax, 0xcd15ca00 ; call qword ptr [rax]
0x0000000000733eea : add eax, 0xcd1a7c00 ; jmp qword ptr [rax]
0x0000000000733f32 : add eax, 0xcd1dc000 ; call qword ptr [rax]
0x00000000007e6853 : add eax, 0xcf000fd4 ; syscall
0x00000000007efcf9 : add eax, 0xcf001299 ; syscall
0x00000000007e7b4f : add eax, 0xd0000fe0 ; syscall
0x00000000007f0d8c : add eax, 0xd00503a8 ; adc al, 3 ; ret 0x1303
0x00000000007e0e98 : add eax, 0xd02b300 ; add byte ptr [rax], al ; ret
0x00000000007ed99d : add eax, 0xd05aa00 ; add byte ptr [rax], al ; ret
0x00000000007d7395 : add eax, 0xd2000fdc ; syscall
0x00000000007cda9a : add eax, 0xd4000fbf ; syscall
0x00000000007f1064 : add eax, 0xd40010eb ; syscall
0x00000000007e8a18 : add eax, 0xd40b11e1 ; or cl, byte ptr [rsi] ; retf 0x12
0x00000000007e111a : add eax, 0xd50010f6 ; syscall
0x00000000007dd0d9 : add eax, 0xd8000fc6 ; syscall
0x00000000007e6165 : add eax, 0xd8030cc8 ; or al, 6 ; retf 0xf
0x00000000005fe2b6 : add eax, 0xd889000c ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000007d43a2 : add eax, 0xd9030cb1 ; syscall
0x00000000007cb52f : add eax, 0xdb000feb ; syscall
0x00000000007d91f9 : add eax, 0xdb001aab ; syscall
0x00000000007e6093 : add eax, 0xdc000fa2 ; syscall
0x00000000007d96c8 : add eax, 0xde0014fd ; syscall
0x00000000007eba97 : add eax, 0xdf0019c7 ; sbb byte ptr [rsi], al ; ret
0x0000000000627cbf : add eax, 0xdf894800 ; call 0x6d4747
0x00000000007f5605 : add eax, 0xe000108a ; syscall
0x00000000007ddbcb : add eax, 0xe00f0fce ; syscall
0x00000000007cbf5f : add eax, 0xe038a03 ; ret 6
0x00000000007d0d61 : add eax, 0xe1000c92 ; syscall
0x00000000007c650e : add eax, 0xe1000ff2 ; syscall
0x00000000007ce2cd : add eax, 0xe200108b ; syscall
0x00000000007d7cc4 : add eax, 0xe2003298 ; adc al, 2 ; retf 0x33
0x00000000007e6859 : add eax, 0xe3000df5 ; syscall
0x00000000007f0271 : add eax, 0xe40010e4 ; syscall
0x000000000073f922 : add eax, 0xe4443000 ; jmp qword ptr [rax]
0x000000000073f942 : add eax, 0xe4493000 ; call rax
0x000000000073f9ea : add eax, 0xe483e000 ; jmp rax
0x000000000073fa22 : add eax, 0xe4923000 ; call qword ptr [rax]
0x000000000073fa82 : add eax, 0xe4a92000 ; call rax
0x000000000073fad2 : add eax, 0xe4ac0000 ; call qword ptr [rax]
0x000000000073fafa : add eax, 0xe4aee000 ; jmp qword ptr [rax]
0x000000000073fb1a : add eax, 0xe4b0b000 ; jmp rax
0x000000000073fb52 : add eax, 0xe4d79000 ; jmp rax
0x000000000073fb9a : add eax, 0xe4dce000 ; jmp qword ptr [rax]
0x000000000073fbba : add eax, 0xe4ddc000 ; call rax
0x000000000073fc0a : add eax, 0xe4dff000 ; jmp qword ptr [rax]
0x000000000073fc32 : add eax, 0xe4e2e000 ; call qword ptr [rax]
0x000000000073fc72 : add eax, 0xe4e47000 ; call qword ptr [rax]
0x000000000073fcd2 : add eax, 0xe4ea0000 ; call qword ptr [rax]
0x000000000073fd12 : add eax, 0xe4ece000 ; call qword ptr [rax]
0x00000000007f4c3b : add eax, 0xe50010c8 ; add al, 6 ; ret
0x000000000073fd82 : add eax, 0xe505a000 ; jmp qword ptr [rax]
0x000000000073fdca : add eax, 0xe5072000 ; jmp qword ptr [rax]
0x000000000073fdfa : add eax, 0xe5084000 ; jmp rax
0x000000000073fe0a : add eax, 0xe5086000 ; call qword ptr [rax]
0x000000000073fe4a : add eax, 0xe508e000 ; call rax
0x000000000073feba : add eax, 0xe509f000 ; jmp qword ptr [rax]
0x000000000073fefa : add eax, 0xe50a7000 ; jmp rax
0x000000000073ff0a : add eax, 0xe50a9000 ; call qword ptr [rax]
0x000000000073ff4a : add eax, 0xe50b1000 ; call rax
0x000000000073ff92 : add eax, 0xe50cc000 ; call qword ptr [rax]
0x000000000073ffba : add eax, 0xe50da000 ; call rax
0x000000000073ffea : add eax, 0xe50eb000 ; call rax
0x00000000007400c2 : add eax, 0xe514a000 ; jmp rax
0x00000000007400f2 : add eax, 0xe517f000 ; jmp qword ptr [rax]
0x000000000074012a : add eax, 0xe519c000 ; call qword ptr [rax]
0x0000000000740152 : add eax, 0xe51a9000 ; call rax
0x000000000074016a : add eax, 0xe51b1000 ; jmp qword ptr [rax]
0x000000000074019a : add eax, 0xe51e0000 ; call qword ptr [rax]
0x00000000007401da : add eax, 0xe521d000 ; call rax
0x000000000074024a : add eax, 0xe5230000 ; jmp qword ptr [rax]
0x00000000007402ca : add eax, 0xe5297000 ; call rax
0x0000000000740342 : add eax, 0xe532d000 ; jmp qword ptr [rax]
0x000000000074035a : add eax, 0xe5365000 ; jmp qword ptr [rax]
0x0000000000740392 : add eax, 0xe5393000 ; call qword ptr [rax]
0x00000000007403e2 : add eax, 0xe53d9000 ; call rax
0x000000000074041a : add eax, 0xe5437000 ; jmp qword ptr [rax]
0x0000000000740472 : add eax, 0xe5488000 ; call qword ptr [rax]
0x0000000000740492 : add eax, 0xe54f8000 ; call qword ptr [rax]
0x00000000007404fa : add eax, 0xe561d000 ; call rax
0x0000000000740502 : add eax, 0xe5637000 ; call qword ptr [rax]
0x0000000000740542 : add eax, 0xe56f1000 ; call rax
0x0000000000740572 : add eax, 0xe57bf000 ; jmp qword ptr [rax]
0x0000000000740592 : add eax, 0xe581d000 ; call qword ptr [rax]
0x00000000007405c2 : add eax, 0xe58a5000 ; jmp rax
0x0000000000740612 : add eax, 0xe59cd000 ; jmp rax
0x000000000074062a : add eax, 0xe5a4a000 ; call rax
0x0000000000740632 : add eax, 0xe5a75000 ; jmp qword ptr [rax]
0x000000000074064a : add eax, 0xe5b2b000 ; jmp qword ptr [rax]
0x000000000074068a : add eax, 0xe5b34000 ; jmp rax
0x000000000074069a : add eax, 0xe5b36000 ; call qword ptr [rax]
0x00000000007406da : add eax, 0xe5b3f000 ; call rax
0x0000000000740722 : add eax, 0xe5bc1000 ; call qword ptr [rax]
0x0000000000740762 : add eax, 0xe5bf8000 ; jmp qword ptr [rax]
0x00000000007407a2 : add eax, 0xe5c0a000 ; jmp rax
0x00000000007407aa : add eax, 0xe5c14000 ; jmp qword ptr [rax]
0x000000000074080a : add eax, 0xe5d0a000 ; jmp qword ptr [rax]
0x000000000074083a : add eax, 0xe5d2c000 ; call rax
0x000000000074088a : add eax, 0xe5d53000 ; jmp rax
0x00000000007408b2 : add eax, 0xe5db0000 ; call rax
0x000000000074090a : add eax, 0xe5e3a000 ; call rax
0x0000000000740982 : add eax, 0xe5f8d000 ; jmp rax
0x00000000007409aa : add eax, 0xe5fd9000 ; jmp rax
0x00000000007409ba : add eax, 0xe5fdb000 ; call qword ptr [rax]
0x0000000000740a0a : add eax, 0xe6059000 ; call rax
0x0000000000740a1a : add eax, 0xe605f000 ; call qword ptr [rax]
0x0000000000740a8a : add eax, 0xe61d1000 ; jmp qword ptr [rax]
0x0000000000740b32 : add eax, 0xe6244000 ; jmp rax
0x0000000000740b42 : add eax, 0xe6247000 ; call qword ptr [rax]
0x0000000000740b82 : add eax, 0xe6260000 ; jmp rax
0x0000000000740b92 : add eax, 0xe6262000 ; call qword ptr [rax]
0x0000000000740bd2 : add eax, 0xe627a000 ; jmp rax
0x0000000000740bda : add eax, 0xe6282000 ; call qword ptr [rax]
0x0000000000740c72 : add eax, 0xe632c000 ; call rax
0x0000000000740cc2 : add eax, 0xe6348000 ; call rax
0x0000000000740cda : add eax, 0xe6351000 ; jmp qword ptr [rax]
0x0000000000740d42 : add eax, 0xe63b2000 ; jmp rax
0x0000000000740d4a : add eax, 0xe63ba000 ; call qword ptr [rax]
0x0000000000740d82 : add eax, 0xe6409000 ; jmp qword ptr [rax]
0x0000000000740dca : add eax, 0xe642b000 ; call qword ptr [rax]
0x0000000000740e0a : add eax, 0xe6445000 ; jmp rax
0x0000000000740e1a : add eax, 0xe6447000 ; call qword ptr [rax]
0x0000000000740eb2 : add eax, 0xe64f2000 ; call rax
0x0000000000740ec2 : add eax, 0xe64fb000 ; call qword ptr [rax]
0x0000000000740f02 : add eax, 0xe6516000 ; jmp rax
0x0000000000740f12 : add eax, 0xe6518000 ; call qword ptr [rax]
0x0000000000740f3a : add eax, 0xe656b000 ; call qword ptr [rax]
0x0000000000740f52 : add eax, 0xe658d000 ; jmp rax
0x0000000000740f9a : add eax, 0xe66a6000 ; call qword ptr [rax]
0x000000000074101a : add eax, 0xe6826000 ; jmp qword ptr [rax]
0x0000000000741082 : add eax, 0xe684b000 ; jmp qword ptr [rax]
0x00000000007410b2 : add eax, 0xe685f000 ; call rax
0x00000000007410e2 : add eax, 0xe689c000 ; jmp rax
0x00000000007410f2 : add eax, 0xe689e000 ; call qword ptr [rax]
0x0000000000741132 : add eax, 0xe68ee000 ; call rax
0x000000000074117a : add eax, 0xe6918000 ; jmp qword ptr [rax]
0x0000000000741192 : add eax, 0xe6994000 ; jmp qword ptr [rax]
0x00000000007411c2 : add eax, 0xe6a1e000 ; jmp qword ptr [rax]
0x00000000007411da : add eax, 0xe6a98000 ; call qword ptr [rax]
0x00000000007411fa : add eax, 0xe6aba000 ; call rax
0x0000000000741202 : add eax, 0xe6ad5000 ; call qword ptr [rax]
0x000000000074125a : add eax, 0xe6ba2000 ; jmp qword ptr [rax]
0x000000000074126a : add eax, 0xe6c5a000 ; call rax
0x0000000000741292 : add eax, 0xe6cab000 ; jmp rax
0x00000000007412ca : add eax, 0xe6dda000 ; call rax
0x00000000007412d2 : add eax, 0xe6e0d000 ; jmp qword ptr [rax]
0x000000000074134a : add eax, 0xe6f0d000 ; call rax
0x0000000000741362 : add eax, 0xe6f17000 ; jmp qword ptr [rax]
0x00000000007413e2 : add eax, 0xe6f47000 ; call rax
0x0000000000741492 : add eax, 0xe7101000 ; jmp rax
0x00000000007414e2 : add eax, 0xe714f000 ; jmp qword ptr [rax]
0x0000000000741522 : add eax, 0xe715f000 ; jmp rax
0x0000000000741532 : add eax, 0xe7163000 ; call qword ptr [rax]
0x000000000074155a : add eax, 0xe71a8000 ; jmp rax
0x000000000074156a : add eax, 0xe71af000 ; call qword ptr [rax]
0x00000000007415aa : add eax, 0xe7227000 ; jmp qword ptr [rax]
0x00000000007415fa : add eax, 0xe7343000 ; jmp rax
0x000000000074160a : add eax, 0xe7348000 ; call qword ptr [rax]
0x0000000000741642 : add eax, 0xe7355000 ; call rax
0x0000000000741722 : add eax, 0xe73c8000 ; jmp rax
0x000000000074172a : add eax, 0xe73d5000 ; call qword ptr [rax]
0x000000000074174a : add eax, 0xe73e7000 ; call rax
0x000000000074178a : add eax, 0xe7405000 ; jmp rax
0x00000000007417c2 : add eax, 0xe745b000 ; call qword ptr [rax]
0x0000000000741812 : add eax, 0xe7505000 ; jmp rax
0x0000000000741822 : add eax, 0xe7508000 ; call qword ptr [rax]
0x000000000079b77e : add eax, 0xe751d000 ; jmp qword ptr [rcx]
0x000000000079b79e : add eax, 0xe751e000 ; call qword ptr [rax]
0x0000000000741862 : add eax, 0xe7522000 ; jmp rax
0x000000000079b806 : add eax, 0xe7539800 ; jmp rdi
0x00000000007418b2 : add eax, 0xe7541000 ; jmp rax
0x00000000007418ba : add eax, 0xe7549000 ; call qword ptr [rax]
0x00000000007418e2 : add eax, 0xe7579000 ; call rax
0x000000000079b8be : add eax, 0xe75e3200 ; jmp qword ptr [rcx]
0x00000000007419b2 : add eax, 0xe76cc000 ; jmp rax
0x00000000007419da : add eax, 0xe771b000 ; call rax
0x00000000007419fa : add eax, 0xe7775000 ; jmp rax
0x000000000079bbc6 : add eax, 0xe777d400 ; jmp rdx
0x0000000000741a02 : add eax, 0xe777e000 ; jmp qword ptr [rax]
0x0000000000741a32 : add eax, 0xe77b6000 ; jmp rax
0x000000000079bcee : add eax, 0xe784ce00 ; call rsp
0x000000000079bd4e : add eax, 0xe786aa00 ; call rsp
0x000000000079bdae : add eax, 0xe788b600 ; call rsp
0x0000000000741aa2 : add eax, 0xe78c8000 ; call qword ptr [rax]
0x000000000079bf8e : add eax, 0xe7918400 ; jmp rdi
0x000000000079c0a6 : add eax, 0xe7933400 ; call qword ptr [rbx]
0x0000000000741b0a : add eax, 0xe795c000 ; call qword ptr [rax]
0x000000000079c1a6 : add eax, 0xe797d400 ; call rsp
0x0000000000741b62 : add eax, 0xe79f5000 ; call rax
0x000000000079c4ae : add eax, 0xe79f6200 ; jmp rdx
0x0000000000741bda : add eax, 0xe7a55000 ; jmp rax
0x0000000000741bea : add eax, 0xe7a57000 ; call qword ptr [rax]
0x0000000000741c2a : add eax, 0xe7a64000 ; call rax
0x000000000079c57e : add eax, 0xe7a81000 ; call rsp
0x000000000079c6ae : add eax, 0xe7b1ae00 ; call rsp
0x0000000000741cf2 : add eax, 0xe7b29000 ; jmp qword ptr [rax]
0x000000000079c706 : add eax, 0xe7b2ee00 ; call qword ptr [rdi]
0x000000000079c7de : add eax, 0xe7b56800 ; call rsp
0x0000000000741d12 : add eax, 0xe7b57000 ; jmp rax
0x0000000000741d5a : add eax, 0xe7b72000 ; jmp rax
0x0000000000741d6a : add eax, 0xe7b78000 ; call qword ptr [rax]
0x0000000000741d92 : add eax, 0xe7bb1000 ; jmp rax
0x0000000000741da2 : add eax, 0xe7bb7000 ; jmp qword ptr [rax]
0x0000000000741df2 : add eax, 0xe7bd5000 ; jmp qword ptr [rax]
0x0000000000741e3a : add eax, 0xe7bfd000 ; jmp qword ptr [rax]
0x000000000079caee : add eax, 0xe7c26200 ; call qword ptr [rdx]
0x000000000079cace : add eax, 0xe7c26e00 ; call qword ptr [rbx]
0x000000000079cba6 : add eax, 0xe7c38e00 ; call qword ptr [rdx]
0x000000000079cc3e : add eax, 0xe7c4ac00 ; call rsp
0x000000000079cc9e : add eax, 0xe7c60e00 ; call rsp
0x0000000000741eba : add eax, 0xe7c69000 ; call qword ptr [rax]
0x0000000000741f02 : add eax, 0xe7c87000 ; call qword ptr [rax]
0x0000000000741f42 : add eax, 0xe7c9f000 ; jmp rax
0x0000000000741f92 : add eax, 0xe7cc1000 ; inc dword ptr [rax] ; ret 5
0x0000000000741f9a : add eax, 0xe7cc4000 ; jmp qword ptr [rax]
0x000000000079cede : add eax, 0xe7d1cc00 ; call rbx
0x000000000079cf8e : add eax, 0xe7d47200 ; call rsp
0x000000000079d0a6 : add eax, 0xe7d54800 ; call rsp
0x000000000079d006 : add eax, 0xe7d56c00 ; call qword ptr [rbx]
0x000000000079d276 : add eax, 0xe7da0a00 ; jmp qword ptr [rdi]
0x000000000079d3ee : add eax, 0xe7dbfc00 ; call rsp
0x000000000079d41e : add eax, 0xe7dca000 ; call qword ptr [rax]
0x0000000000741fba : add eax, 0xe7e2f000 ; jmp rax
0x000000000079d8a6 : add eax, 0xe7e31a00 ; call rsp
0x0000000000741fc2 : add eax, 0xe7e4a000 ; push qword ptr [rax] ; ret
0x000000000079da6e : add eax, 0xe7e75c00 ; call rcx
0x000000000079db96 : add eax, 0xe7ea9800 ; call rcx
0x000000000079e026 : add eax, 0xe7f34400 ; call rax
0x000000000079e096 : add eax, 0xe7f4d000 ; call qword ptr [rsi]
0x000000000079e076 : add eax, 0xe7f4da00 ; call qword ptr [rsi]
0x000000000079e056 : add eax, 0xe7f4e400 ; call qword ptr [rsi]
0x000000000079e116 : add eax, 0xe7f50a00 ; call qword ptr [rdi]
0x000000000079e1a6 : add eax, 0xe7fd7600 ; jmp qword ptr [rbx]
0x000000000079e236 : add eax, 0xe7fe0200 ; jmp rsp
0x00000000006719a5 : add eax, 0xe8000001 ; ret 0x38f
0x00000000007d322c : add eax, 0xe8001084 ; syscall
0x000000000079e526 : add eax, 0xe805b000 ; call qword ptr [rdx]
0x00000000007ec24a : add eax, 0xe80930ca ; syscall
0x0000000000742012 : add eax, 0xe80b1000 ; jmp qword ptr [rax]
0x000000000074208a : add eax, 0xe8186000 ; jmp rax
0x000000000074209a : add eax, 0xe818c000 ; call qword ptr [rax]
0x00000000007420ca : add eax, 0xe81b6000 ; call rax
0x000000000079e886 : add eax, 0xe81ece00 ; call qword ptr [rdi]
0x000000000079e986 : add eax, 0xe8223600 ; call qword ptr [rdi]
0x00000000007420fa : add eax, 0xe8228000 ; jmp qword ptr [rax]
0x0000000000742132 : add eax, 0xe8259000 ; jmp qword ptr [rax]
0x0000000000742152 : add eax, 0xe827f000 ; call rax
0x000000000079eac6 : add eax, 0xe82cb600 ; call rax
0x0000000000742192 : add eax, 0xe82de000 ; jmp qword ptr [rax]
0x00000000007421d2 : add eax, 0xe830e000 ; call qword ptr [rax]
0x000000000079ec36 : add eax, 0xe834d000 ; call qword ptr [rax]
0x000000000079ed5e : add eax, 0xe8383800 ; call rsp
0x000000000074222a : add eax, 0xe83c0000 ; call qword ptr [rax]
0x000000000079eed6 : add eax, 0xe83f5400 ; jmp qword ptr [rbx]
0x000000000079eef6 : add eax, 0xe83f5800 ; call qword ptr [rsi]
0x000000000079ef3e : add eax, 0xe83f7600 ; call rsi
0x000000000079efb6 : add eax, 0xe8424000 ; call qword ptr [rsi]
0x000000000079f076 : add eax, 0xe8487800 ; jmp qword ptr [rbx]
0x000000000074229a : add eax, 0xe84c8000 ; call rax
0x000000000079f1f6 : add eax, 0xe850da00 ; jmp qword ptr [rbx]
0x000000000079f216 : add eax, 0xe850de00 ; call qword ptr [rcx]
0x000000000079f30e : add eax, 0xe85e1200 ; jmp qword ptr [rcx]
0x000000000079f36e : add eax, 0xe85e5800 ; jmp qword ptr [rsi]
0x0000000000742312 : add eax, 0xe8632000 ; call qword ptr [rax]
0x000000000079f45e : add eax, 0xe865d000 ; jmp qword ptr [rbx]
0x000000000079f446 : add eax, 0xe865d800 ; call qword ptr [rax]
0x000000000079f756 : add eax, 0xe865f800 ; call qword ptr [rbx]
0x000000000079f83e : add eax, 0xe8671000 ; jmp qword ptr [rdi]
0x000000000079f9f6 : add eax, 0xe8676800 ; call qword ptr [rbx]
0x000000000079fa0e : add eax, 0xe8677000 ; call qword ptr [rbx]
0x000000000079fc16 : add eax, 0xe86e8800 ; jmp qword ptr [rsi]
0x000000000079fd4e : add eax, 0xe870f000 ; call qword ptr [rbx]
0x000000000079fd66 : add eax, 0xe870f800 ; jmp rcx
0x000000000079fca6 : add eax, 0xe8711800 ; call qword ptr [rdi]
0x000000000079fdee : add eax, 0xe8748000 ; jmp qword ptr [rbx]
0x000000000079fede : add eax, 0xe8769000 ; call qword ptr [rax]
0x000000000079ffde : add eax, 0xe877b000 ; call rdi
0x00000000007a02de : add eax, 0xe880f000 ; call rsi
0x00000000007a05ee : add eax, 0xe8890000 ; jmp rsi
0x00000000007a082e : add eax, 0xe894e000 ; call qword ptr [rcx]
0x000000000074233a : add eax, 0xe8974000 ; jmp qword ptr [rax]
0x0000000000742362 : add eax, 0xe89c6000 ; call qword ptr [rax]
0x00000000007a0dbe : add eax, 0xe8a38000 ; jmp qword ptr [rax]
0x00000000007a0e06 : add eax, 0xe8a39800 ; jmp qword ptr [rax]
0x00000000007a0e1e : add eax, 0xe8a3a000 ; call qword ptr [rax]
0x00000000007a0e6e : add eax, 0xe8a3e000 ; call qword ptr [rax]
0x00000000007a0eee : add eax, 0xe8a46000 ; jmp qword ptr [rax]
0x00000000007a0f36 : add eax, 0xe8a48800 ; jmp qword ptr [rax]
0x00000000007a13c6 : add eax, 0xe8ae9800 ; call rsi
0x00000000007423ca : add eax, 0xe8af6000 ; call rax
0x00000000007423d2 : add eax, 0xe8b0a000 ; call qword ptr [rax]
0x00000000007a191e : add eax, 0xe8b58000 ; jmp qword ptr [rbx]
0x0000000000742412 : add eax, 0xe8c1e000 ; call qword ptr [rax]
0x00000000007a1b1e : add eax, 0xe8c73000 ; call rdx
0x00000000007a1cee : add eax, 0xe8cdb000 ; jmp rsi
0x00000000007a1d4e : add eax, 0xe8cf6000 ; call rdx
0x00000000007a1e36 : add eax, 0xe8d69800 ; call qword ptr [rbx]
0x00000000007a224e : add eax, 0xe8efe000 ; call rcx
0x00000000007a231e : add eax, 0xe8f58000 ; call qword ptr [rax]
0x00000000007a237e : add eax, 0xe8f60000 ; call rdi
0x00000000007a265e : add eax, 0xe8fe1000 ; call rsi
0x00000000007a2696 : add eax, 0xe8feb800 ; call rsi
0x000000000052a998 : add eax, 0xe8fffffe ; ret
0x00000000007a2856 : add eax, 0xe9044800 ; call rsi
0x00000000007a28ae : add eax, 0xe9052000 ; call rdx
0x00000000007a2976 : add eax, 0xe9092800 ; call qword ptr [rsi]
0x00000000007a29ae : add eax, 0xe90a1000 ; call qword ptr [rsi]
0x00000000007cde7e : add eax, 0xe90f1af7 ; syscall
0x00000000007424b2 : add eax, 0xe91cf000 ; call qword ptr [rax]
0x00000000007424d2 : add eax, 0xe92dd000 ; call qword ptr [rax]
0x0000000000742502 : add eax, 0xe94a0000 ; call rax
0x00000000007a2b76 : add eax, 0xe95cb800 ; call qword ptr [rsi]
0x000000000074257a : add eax, 0xe98f8400 ; jmp rax
0x000000000074258a : add eax, 0xe98fc000 ; jmp qword ptr [rax]
0x0000000000742632 : add eax, 0xe994b800 ; jmp rax
0x000000000074263a : add eax, 0xe9961a00 ; call qword ptr [rax]
0x000000000074265a : add eax, 0xe99a7600 ; call rax
0x00000000007a401e : add eax, 0xe9a0a000 ; call qword ptr [rdi]
0x00000000007a4036 : add eax, 0xe9a0a800 ; jmp qword ptr [rbx]
0x000000000074268a : add eax, 0xe9a23800 ; jmp rax
0x000000000074272a : add eax, 0xe9b43a00 ; call qword ptr [rax]
0x000000000074275a : add eax, 0xe9bb1400 ; jmp qword ptr [rax]
0x0000000000742782 : add eax, 0xe9bce000 ; call rax
0x0000000000742792 : add eax, 0xe9bd6600 ; call qword ptr [rax]
0x00000000007427ba : add eax, 0xe9db0e00 ; jmp rax
0x0000000000742862 : add eax, 0xe9f8e000 ; jmp qword ptr [rax]
0x0000000000742882 : add eax, 0xe9fe3200 ; call rax
0x0000000000742892 : add eax, 0xe9feb000 ; call qword ptr [rax]
0x00000000007ddbd1 : add eax, 0xea0018af ; syscall
0x00000000007428ba : add eax, 0xea052600 ; call rax
0x00000000007428ca : add eax, 0xea06f400 ; jmp qword ptr [rax]
0x00000000007428f2 : add eax, 0xea095400 ; call rax
0x0000000000742902 : add eax, 0xea09f800 ; call qword ptr [rax]
0x000000000074293a : add eax, 0xea0d1400 ; call qword ptr [rax]
0x00000000007a42c6 : add eax, 0xea304800 ; jmp rsi
0x000000000062663f : add eax, 0xea834800 ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000007f4c64 : add eax, 0xea905 ; retf
0x00000000007a4a76 : add eax, 0xea9b1800 ; call qword ptr [rcx]
0x00000000007a4afe : add eax, 0xeabe7000 ; jmp rax
0x00000000007f4d71 : add eax, 0xeb000f9e ; syscall
0x00000000007d0d67 : add eax, 0xeb001080 ; syscall
0x000000000045679c : add eax, 0xeb01c083 ; in eax, 0x5d ; ret
0x0000000000450392 : add eax, 0xeb01c083 ; out 0x5d, al ; ret
0x00000000004bb91b : add eax, 0xeb01c383 ; ret
0x00000000005e92ad : add eax, 0xeb01c383 ; retf
0x00000000004bba3f : add eax, 0xeb01eb83 ; ret
0x00000000007a4cb6 : add eax, 0xeb3b3800 ; jmp qword ptr [rcx]
0x00000000007a4d1e : add eax, 0xeb3b5000 ; call qword ptr [rbx]
0x00000000007a4d56 : add eax, 0xeb3b5800 ; call qword ptr [rbx]
0x00000000007a5076 : add eax, 0xeb405800 ; jmp qword ptr [rdi]
0x00000000007a51a6 : add eax, 0xeb453800 ; call qword ptr [rsi]
0x00000000007a51be : add eax, 0xeb454000 ; jmp qword ptr [rax]
0x00000000007a5266 : add eax, 0xeb46c800 ; jmp qword ptr [rax]
0x00000000007a5a56 : add eax, 0xeb671800 ; jmp qword ptr [rdi]
0x00000000007a5bb6 : add eax, 0xeb6b6800 ; call qword ptr [rax]
0x00000000007a5b9e : add eax, 0xeb6b7000 ; call qword ptr [rax]
0x00000000007a5bfe : add eax, 0xeb6b8000 ; jmp qword ptr [rax]
0x00000000007a5db6 : add eax, 0xeb6bb800 ; jmp qword ptr [rdi]
0x00000000007a5c4e : add eax, 0xeb6bd000 ; jmp qword ptr [rcx]
0x00000000007a628e : add eax, 0xeb7d3000 ; call qword ptr [rsi]
0x00000000007a642e : add eax, 0xeb7e3000 ; call qword ptr [rdx]
0x00000000007a67be : add eax, 0xeba1a000 ; jmp qword ptr [rsi]
0x00000000007a687e : add eax, 0xeba95000 ; call rax
0x00000000007a6b16 : add eax, 0xebbac800 ; jmp qword ptr [rsi]
0x00000000007a6cae : add eax, 0xebce5000 ; call rsi
0x00000000007a6ce6 : add eax, 0xebcef800 ; call rdi
0x00000000007a6f06 : add eax, 0xebdc3800 ; call qword ptr [rsi]
0x00000000007a6f1e : add eax, 0xebdc4000 ; call qword ptr [rsi]
0x00000000007a703e : add eax, 0xebdda000 ; call rsi
0x00000000007a742e : add eax, 0xebfdc000 ; jmp qword ptr [rcx]
0x00000000007a7446 : add eax, 0xebfdd800 ; jmp qword ptr [rsi]
0x00000000007a745e : add eax, 0xebfdf000 ; jmp qword ptr [rsi]
0x00000000007cdaa0 : add eax, 0xec000fd9 ; syscall
0x00000000007f8a0e : add eax, 0xec001096 ; syscall
0x00000000007a78fe : add eax, 0xec021000 ; jmp rdi
0x00000000007a78ce : add eax, 0xec022000 ; call qword ptr [rdx]
0x00000000007a7946 : add eax, 0xec03b800 ; call qword ptr [rsi]
0x00000000007a7a86 : add eax, 0xec10a800 ; jmp qword ptr [rsi]
0x00000000007a7ba6 : add eax, 0xec10d800 ; call qword ptr [rbx]
0x00000000007a7c56 : add eax, 0xec132800 ; jmp qword ptr [rax]
0x00000000007a7c6e : add eax, 0xec133000 ; jmp qword ptr [rax]
0x00000000007a7e8e : add eax, 0xec188000 ; jmp qword ptr [rdx]
0x00000000007a7ed6 : add eax, 0xec18d800 ; call qword ptr [rdi]
0x00000000007a809e : add eax, 0xec1c2600 ; call qword ptr [rdi]
0x00000000007a80de : add eax, 0xec1c4c00 ; call qword ptr [rbx]
0x00000000007a811e : add eax, 0xec1c6200 ; call qword ptr [rbx]
0x00000000007a822e : add eax, 0xec28fc00 ; jmp qword ptr [rcx]
0x00000000007a824e : add eax, 0xec28fe00 ; jmp qword ptr [rcx]
0x00000000007a837e : add eax, 0xec2ad000 ; call qword ptr [rdx]
0x00000000007a85b6 : add eax, 0xec2f1800 ; call qword ptr [rbx]
0x00000000007a8bde : add eax, 0xec490000 ; call qword ptr [rdx]
0x00000000007a8b96 : add eax, 0xec492800 ; call qword ptr [rcx]
0x00000000007a8fa6 : add eax, 0xec689800 ; call qword ptr [rcx]
0x00000000007a9726 : add eax, 0xec9f9800 ; call rbx
0x00000000007a9a56 : add eax, 0xeca9c800 ; jmp qword ptr [rsi]
0x00000000007a9b2e : add eax, 0xecab3000 ; call qword ptr [rax]
0x00000000007a9ca6 : add eax, 0xecaf2800 ; jmp rsp
0x00000000007a9e76 : add eax, 0xecba1800 ; call rdx
0x00000000007aa096 : add eax, 0xecc20800 ; call qword ptr [rcx]
0x00000000007aa86e : add eax, 0xecda5000 ; call qword ptr [rdi]
0x00000000007aa89e : add eax, 0xecda6000 ; jmp qword ptr [rcx]
0x00000000007aa97e : add eax, 0xecdad000 ; call qword ptr [rdx]
0x00000000007aa8d6 : add eax, 0xecdad800 ; jmp qword ptr [rcx]
0x00000000007aa9f6 : add eax, 0xecdae800 ; call qword ptr [rcx]
0x00000000007aa906 : add eax, 0xecdae800 ; call qword ptr [rdx]
0x00000000007aaa9e : add eax, 0xecdb1000 ; call qword ptr [rdx]
0x00000000007aad6e : add eax, 0xecdfc000 ; jmp qword ptr [rcx]
0x00000000007aae2e : add eax, 0xece03000 ; jmp qword ptr [rdi]
0x00000000007aafae : add eax, 0xece29000 ; jmp qword ptr [rax]
0x00000000007ab056 : add eax, 0xece44800 ; jmp rbx
0x00000000007ab226 : add eax, 0xecf71800 ; jmp qword ptr [rdi]
0x00000000007d6caa : add eax, 0xed0304e1 ; add al, 0x3e ; add byte ptr [rax], al ; ret 0x505
0x00000000007d4cc0 : add eax, 0xed2101ef ; add eax, dword ptr [rax] ; ret 0x302
0x00000000007e54aa : add eax, 0xed373285 ; xor byte ptr [rsi], al ; retf
0x00000000007d739b : add eax, 0xee0009d1 ; syscall
0x00000000007d43a8 : add eax, 0xee030bfc ; syscall
0x00000000007f7d6e : add eax, 0xee050bc1 ; syscall
0x000000000068ceda : add eax, 0xeee8df01 ; retf
0x00000000007d0ffe : add eax, 0xf10304e5 ; add al, 0x3a ; add byte ptr [rax], al ; ret 0x505
0x00000000007f5de9 : add eax, 0xf2001ca7 ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000007d5b91 : add eax, 0xf3000391 ; add ch, byte ptr [rbx] ; ret 3
0x00000000007f070f : add eax, 0xf30744f1 ; add al, 6 ; jmp qword ptr [rax]
0x00000000007ed076 : add eax, 0xf4000ce4 ; or al, 5 ; ret 0xd
0x00000000007d3232 : add eax, 0xf5000fff ; syscall
0x00000000007f4d77 : add eax, 0xf500109f ; syscall
0x00000000006cb674 : add eax, 0xf7048d48 ; ret
0x00000000007d1a01 : add eax, 0xf8000594 ; add al, 0x31 ; add byte ptr [rax], al ; retf 0x605
0x00000000007e640b : add eax, 0xf8000fbe ; syscall
0x00000000007ed0d0 : add eax, 0xf8000fd9 ; syscall
0x00000000007edc84 : add eax, 0xf80012bf ; syscall
0x00000000006cb864 : add eax, 0xf8478d48 ; ret
0x00000000006a054d : add eax, 0xf889fffe ; ret
0x00000000007d96ce : add eax, 0xf90014f1 ; syscall
0x00000000007f7d97 : add eax, 0xf9050dae ; syscall
0x00000000007cddc5 : add eax, 0xf90517c7 ; add eax, dword ptr [rsi] ; ret 0x17
0x00000000007cb6b9 : add eax, 0xf9526 ; retf
0x00000000004f4995 : add eax, 0xf9800000 ; sub byte ptr [rbx + rdx*2 + 0x39], dh ; ret
0x00000000007f56c0 : add eax, 0xfa000eb0 ; syscall
0x00000000007d91ff : add eax, 0xfa001aa6 ; syscall
0x000000000062e8ac : add eax, 0xfa834800 ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000062e033 : add eax, 0xfa834800 ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000007f560b : add eax, 0xfb001085 ; syscall
0x00000000007f09e5 : add eax, 0xfb17229c ; and dword ptr [rcx], esp ; ret
0x00000000007c530d : add eax, 0xfc00028d ; add dword ptr [rsi], esi ; add byte ptr [rax], al ; ret 0x502
0x00000000007cc51f : add eax, 0xfc000dc5 ; or al, 5 ; ret
0x00000000007c9d2f : add eax, 0xfd00038e ; add dh, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000000007dd55f : add eax, 0xfe000bc7 ; add al, 5 ; ret 0xb
0x00000000006cb684 : add eax, 0xfe048d48 ; ret
0x00000000007c883f : add eax, 0xff00028c ; add dword ptr [rbx], esi ; add byte ptr [rax], al ; ret 0x502
0x000000000055bf0f : add eax, 0xffffffb8 ; dec dword ptr [rax + 0x39] ; ret 0x870f
0x00000000006a08de : add eax, 1 ; cmp byte ptr [rdi + rax], 0 ; jne 0x6a08e1 ; ret
0x00000000006a0911 : add eax, 1 ; cmp byte ptr [rdi + rax], 0 ; jne 0x6a0919 ; ret
0x0000000000688f36 : add eax, 1 ; cmp byte ptr [rdi + rax], 0x20 ; je 0x688f39 ; ret
0x00000000006bc4f6 : add eax, 1 ; cmp dx, ax ; jne 0x6bc4f8 ; ret
0x000000000051b8fd : add eax, 1 ; cmp edi, esi ; jl 0x51b8e7 ; ret
0x000000000058654d : add eax, 1 ; cmp edi, esi ; jl 0x586537 ; ret
0x0000000000586db9 : add eax, 1 ; cmp edi, esi ; jl 0x586da7 ; ret
0x00000000006c578d : add eax, 1 ; cmp rax, r8 ; jne 0x6c5788 ; ret
0x000000000053ecb7 : add eax, 1 ; cmp rax, rdx ; jne 0x53ecb0 ; ret
0x00000000006a07e1 : add eax, 1 ; cmp rax, rdx ; jne 0x6a07e0 ; ret
0x00000000006bc528 : add eax, 1 ; cmp rax, rdx ; jne 0x6bc520 ; ret
0x00000000006cba81 : add eax, 1 ; cmp rax, rdx ; jne 0x6cba80 ; ret
0x00000000006a4ba0 : add eax, 1 ; jne 0x6a4b95 ; ret
0x000000000054dbad : add eax, 1 ; mov dword ptr [rdi + 0x18], eax ; ret
0x00000000004f7ae6 : add eax, 1 ; mov dword ptr [rdx], eax ; add rsp, 8 ; ret
0x00000000006b6e6e : add eax, 1 ; mov word ptr [r10 + 0x22], ax ; ret
0x0000000000506ad6 : add eax, 1 ; ret
0x0000000000661b9f : add eax, 3 ; ret
0x0000000000450440 : add eax, 4 ; mov dword ptr [rax], edx ; leave ; ret
0x00000000005f4fb8 : add eax, 8 ; mov rdi, rax ; call 0x5e12c8
0x00000000004bd695 : add eax, 8 ; mov rdi, rax ; call 0x689918
0x00000000004bd4e2 : add eax, 8 ; mov rdi, rax ; call 0x689fb8
0x00000000005cf779 : add eax, 8 ; nop ; pop rbp ; ret
0x0000000000582495 : add eax, 8 ; pop rbx ; ret
0x000000000073a831 : add eax, dword ptr [eax] ; push rax ; retf -0x24
0x0000000000781eed : add eax, dword ptr [eax] ; rcl bh, 0xde ; jmp qword ptr [rbx]
0x00000000004f66a3 : add eax, dword ptr [r11 + 0x634c02c3] ; retf
0x000000000073a179 : add eax, dword ptr [r8] ; cmp byte ptr [rbp - 0x26], dl ; call rax
0x000000000077f8bd : add eax, dword ptr [r8] ; nop ; xor al, 0xde ; call qword ptr [rcx]
0x000000000073a1d1 : add eax, dword ptr [r8] ; retf -0x25a2
0x0000000000677dbd : add eax, dword ptr [r9 + 0xf] ; ret
0x00000000007c6d9e : add eax, dword ptr [rax + 0x3b01] ; retf
0x00000000004fc75c : add eax, dword ptr [rax + rax] ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000006c6af2 : add eax, dword ptr [rax - 0x80] ; inc dword ptr [rcx] ; seta al ; ret
0x000000000073b8ba : add eax, dword ptr [rax] ; adc byte ptr [rdi - 0x22], al ; jmp qword ptr [rax]
0x00000000007c5d72 : add eax, dword ptr [rax] ; add ah, dl ; sbb eax, 0x7ef205 ; ret 0x31e
0x00000000007eed8f : add eax, dword ptr [rax] ; add al, 0xc4 ; add eax, dword ptr [rax] ; push 4 ; ret 3
0x00000000005d5284 : add eax, dword ptr [rax] ; add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xa
0x000000000073a302 : add eax, dword ptr [rax] ; add bl, bl ; call qword ptr [rax]
0x00000000006bf6d5 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x880f
0x00000000005c6c01 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x63], cl ; fmul dword ptr [rax + 0x63] ; retf -0x7cb8
0x000000000060012d : add eax, dword ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000067f76c : add eax, dword ptr [rax] ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x480f
0x0000000000579714 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rcx + 0x63], 1 ; ret 0x8348
0x000000000044a897 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; clc ; leave ; ret
0x0000000000482532 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006dcb20 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add dword ptr [rax + rax], eax ; add al, cl ; retf 0x6d
0x0000000000503a9e : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmove eax, edi ; ret
0x00000000006ced54 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x6ced66 ; ret
0x00000000006c5a55 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jne 0x6c5a2f ; mov eax, edx ; pop rbx ; ret
0x0000000000669d8f : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000006d11b4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000561dd2 : add eax, dword ptr [rax] ; add byte ptr [rbp + 0x144034e], cl ; retf -0x97b
0x000000000065a158 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000005328b3 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x634803c3], al ; ret
0x000000000066556f : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x63], cl ; ret 0x8f8b
0x00000000004fc5ad : add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000073c52a : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x21], dl ; call rax
0x00000000006b54bb : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x73], al ; add dword ptr [rcx], r15d ; ret 0x840f
0x00000000005653cf : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], al ; adc byte ptr [r9], r15b ; ret
0x000000000050edbc : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x80], al ; jl 0x50ede8 ; jmp qword ptr [rsi]
0x00000000005fffa0 : add eax, dword ptr [rax] ; add byte ptr [rcx], al ; retf -0x2ec7
0x0000000000610e8a : add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret 0x6348
0x00000000004fe01b : add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret 0x8c0f
0x000000000057fcb2 : add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000004faa7c : add eax, dword ptr [rax] ; add byte ptr [rcx], dh ; leave ; call r8
0x00000000007f938a : add eax, dword ptr [rax] ; add byte ptr [rdx], 8 ; ret
0x00000000005517dd : add eax, dword ptr [rax] ; add byte ptr [rsi + 1], bh ; call rax
0x000000000073b84a : add eax, dword ptr [rax] ; add byte ptr [rsi - 0x22], al ; call rax
0x000000000074ba4d : add eax, dword ptr [rax] ; add byte ptr [rsi - 1], al ; retf
0x000000000079acf5 : add eax, dword ptr [rax] ; add byte ptr [rsp], al ; retf
0x00000000007d5b93 : add eax, dword ptr [rax] ; add ch, byte ptr [rbx] ; ret 3
0x0000000000639156 : add eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x000000000056c586 : add eax, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000067fc14 : add eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000073b042 : add eax, dword ptr [rax] ; and byte ptr [rax - 0x23], dh ; jmp qword ptr [rax]
0x00000000007889ee : add eax, dword ptr [rax] ; and byte ptr [rdi - 0x20], bh ; jmp qword ptr [rcx]
0x000000000073bb12 : add eax, dword ptr [rax] ; and byte ptr [rdi - 0x22], dl ; call qword ptr [rax - 0x3d]
0x000000000073ac1a : add eax, dword ptr [rax] ; and byte ptr [rdx], 0xdd ; jmp qword ptr [rax]
0x0000000000739922 : add eax, dword ptr [rax] ; and dh, byte ptr [rcx - 0x28] ; call qword ptr [rax]
0x000000000073c2ea : add eax, dword ptr [rax] ; and dil, bl ; jmp qword ptr [rax]
0x000000000077f63e : add eax, dword ptr [rax] ; and ebx, esi ; call rax
0x000000000073a452 : add eax, dword ptr [rax] ; call 0x11737fe8
0x000000000073a4f2 : add eax, dword ptr [rax] ; call 0x117380b4
0x000000000078ac86 : add eax, dword ptr [rax] ; call 0x13788d78
0x000000000077d166 : add eax, dword ptr [rax] ; call 0x1477af00
0x0000000000784aa6 : add eax, dword ptr [rax] ; call 0x14782a7f
0x0000000000739e72 : add eax, dword ptr [rax] ; call 0xffffffffe17377d4
0x0000000000789286 : add eax, dword ptr [rax] ; call 0xffffffffe2787332
0x000000000078b6a6 : add eax, dword ptr [rax] ; clc ; adc ah, cl ; call qword ptr [rbx]
0x0000000000782516 : add eax, dword ptr [rax] ; clc ; fcomp st(6) ; call qword ptr [rbx]
0x0000000000783f86 : add eax, dword ptr [rax] ; clc ; jle 0x783f6f ; call qword ptr [rax]
0x0000000000739aea : add eax, dword ptr [rax] ; clc ; mov cl, 0xd8 ; jmp qword ptr [rax]
0x000000000073a17a : add eax, dword ptr [rax] ; cmp byte ptr [rbp - 0x26], dl ; call rax
0x0000000000788a06 : add eax, dword ptr [rax] ; cmp byte ptr [rdi - 0x20], bh ; call qword ptr [rbx]
0x000000000077ff5e : add eax, dword ptr [rax] ; cmp byte ptr [rsi + rbx*8], 0xff ; retf 0
0x0000000000739a12 : add eax, dword ptr [rax] ; cwde ; mov bl, al ; jmp rax
0x0000000000789a96 : add eax, dword ptr [rax] ; fadd st(1) ; loopne 0x789aa1 ; retf
0x000000000078ab36 : add eax, dword ptr [rax] ; in al, -0x20 ; jmp qword ptr [rax]
0x000000000073a392 : add eax, dword ptr [rax] ; in al, dx ; cmp ebx, ebx ; jmp qword ptr [rax]
0x000000000073c012 : add eax, dword ptr [rax] ; in eax, -0x22 ; call qword ptr [rax]
0x00000000007f7f51 : add eax, dword ptr [rax] ; int1 ; add ebp, dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x00000000007d302a : add eax, dword ptr [rax] ; jae 0x7d303a ; stosd dword ptr [rdi], eax ; add eax, dword ptr [rax] ; ret
0x0000000000568dbd : add eax, dword ptr [rax] ; jmp 0x568d8f
0x00000000006cdf21 : add eax, dword ptr [rax] ; jmp 0x6cdeeb
0x000000000073b0c2 : add eax, dword ptr [rax] ; jnp 0x73b0a9 ; call rax
0x00000000007eaa1a : add eax, dword ptr [rax] ; jrcxz 0x7eaa25 ; push rcx ; ret
0x00000000007f7602 : add eax, dword ptr [rax] ; jrcxz 0x7f760d ; push rcx ; ret
0x000000000067b938 : add eax, dword ptr [rax] ; leave ; ret
0x0000000000739b6a : add eax, dword ptr [rax] ; lodsb al, byte ptr [rsi] ; fstp st(0) ; jmp rax
0x00000000007c6192 : add eax, dword ptr [rax] ; loop 0x7c619e ; push rax ; add byte ptr [rax], al ; ret 0x502
0x000000000073bad2 : add eax, dword ptr [rax] ; mov al, 0x55 ; fdivp st(7) ; push rax ; ret 3
0x000000000078b2c6 : add eax, dword ptr [rax] ; mov byte ptr [rcx], cl ; jmp qword ptr [rbx]
0x000000000077f296 : add eax, dword ptr [rax] ; mov byte ptr [rsi + rbx*8], al ; jmp qword ptr [rbx]
0x000000000073b212 : add eax, dword ptr [rax] ; mov ds, ebp ; jmp qword ptr [rax]
0x000000000073b1d2 : add eax, dword ptr [rax] ; mov ebp, ebx ; jmp rax
0x00000000007df420 : add eax, dword ptr [rax] ; mov esi, 0x502 ; ret
0x0000000000780f3e : add eax, dword ptr [rax] ; mov esi, ds ; jmp qword ptr [rdx]
0x00000000006466ca : add eax, dword ptr [rax] ; mov r14d, eax ; call qword ptr [rip + 0x3bc213]
0x0000000000645ec3 : add eax, dword ptr [rax] ; mov r14d, eax ; call qword ptr [rip + 0x3bca1a]
0x0000000000487bd1 : add eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x57ad06] ; call rax
0x000000000048357c : add eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x57f35b] ; call rax
0x00000000006913b6 : add eax, dword ptr [rax] ; mov rdi, qword ptr [rbx + 8] ; call 0x6cde68
0x00000000006438aa : add eax, dword ptr [rax] ; mov rdi, r12 ; xor eax, eax ; call 0x67fb5b
0x000000000064393e : add eax, dword ptr [rax] ; mov rdi, rax ; xor eax, eax ; call 0x67fb59
0x0000000000647cb2 : add eax, dword ptr [rax] ; mov rdi, rbp ; call 0x6d4747
0x00000000007397ba : add eax, dword ptr [rax] ; mov ss, word ptr [rdi - 0x28] ; call qword ptr [rax]
0x0000000000785086 : add eax, dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; inc edi ; call qword ptr [rdx]
0x000000000073a582 : add eax, dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; rcr bl, cl ; call rax
0x000000000073b202 : add eax, dword ptr [rax] ; nop ; mov ebp, ds ; call rax
0x000000000073be6a : add eax, dword ptr [rax] ; nop ; mov esi, ds ; jmp rax
0x000000000077f8be : add eax, dword ptr [rax] ; nop ; xor al, 0xde ; call qword ptr [rcx]
0x00000000006a30d7 : add eax, dword ptr [rax] ; nop dword ptr [rax] ; ret
0x0000000000733c3a : add eax, dword ptr [rax] ; or al, 0xcd ; jmp rax
0x000000000078b166 : add eax, dword ptr [rax] ; or al, 0xe1 ; call qword ptr [rbx]
0x000000000078b04e : add eax, dword ptr [rax] ; or al, 0xe1 ; jmp qword ptr [rbx]
0x000000000078b13e : add eax, dword ptr [rax] ; or al, 0xe1 ; jmp qword ptr [rdi]
0x00000000007885a6 : add eax, dword ptr [rax] ; or byte ptr [rcx - 0x20], ch ; call qword ptr [rbx]
0x00000000007848ee : add eax, dword ptr [rax] ; or ch, 0xdf ; jmp qword ptr [rax]
0x000000000073c0c2 : add eax, dword ptr [rax] ; out -0x22, eax ; jmp qword ptr [rax]
0x000000000073a2ca : add eax, dword ptr [rax] ; out -0x26, eax ; call rax
0x0000000000789b86 : add eax, dword ptr [rax] ; pop rax ; ret
0x000000000073a242 : add eax, dword ptr [rax] ; pop rax ; ret 0xffda
0x0000000000789f46 : add eax, dword ptr [rax] ; pop rax ; retf -0x20
0x000000000073997a : add eax, dword ptr [rax] ; pop rsi ; jp 0x73995c ; jmp rax
0x000000000073a25a : add eax, dword ptr [rax] ; pop rsi ; retf -0x26
0x000000000073a012 : add eax, dword ptr [rax] ; pop rsp ; ret
0x00000000007eed94 : add eax, dword ptr [rax] ; push 4 ; ret 3
0x000000000077b7ae : add eax, dword ptr [rax] ; push rax ; and ebx, ebp ; call qword ptr [rbx]
0x000000000077b7de : add eax, dword ptr [rax] ; push rax ; and ebx, ebp ; jmp qword ptr [rdx]
0x0000000000780f5e : add eax, dword ptr [rax] ; push rax ; mov esi, ds ; jmp qword ptr [rdx]
0x0000000000784d9e : add eax, dword ptr [rax] ; push rax ; rcr edi, 1 ; call qword ptr [rbx]
0x0000000000784f5e : add eax, dword ptr [rax] ; push rax ; rcr edi, cl ; call rax
0x0000000000789b9e : add eax, dword ptr [rax] ; push rax ; ret
0x000000000073b492 : add eax, dword ptr [rax] ; push rax ; ret 0xffdd
0x000000000073a832 : add eax, dword ptr [rax] ; push rax ; retf -0x24
0x000000000077cd56 : add eax, dword ptr [rax] ; push rsi ; jg 0x77cd28 ; call qword ptr [rdx]
0x0000000000781eee : add eax, dword ptr [rax] ; rcl bh, 0xde ; jmp qword ptr [rbx]
0x0000000000781dbe : add eax, dword ptr [rax] ; rcl cl, 0xde ; jmp rcx
0x000000000073b56a : add eax, dword ptr [rax] ; rcr bh, 0xdd ; call rax
0x000000000073bf7a : add eax, dword ptr [rax] ; ret
0x00000000007c7be8 : add eax, dword ptr [rax] ; ret 0x2c02
0x00000000007d4cc5 : add eax, dword ptr [rax] ; ret 0x302
0x00000000007d2152 : add eax, dword ptr [rax] ; ret 0x401
0x00000000007e0a7b : add eax, dword ptr [rax] ; ret 0x501
0x00000000007cfc8a : add eax, dword ptr [rax] ; ret 0x502
0x00000000007c51d8 : add eax, dword ptr [rax] ; ret 0x503
0x000000000077ff46 : add eax, dword ptr [rax] ; ret 0xc84e
0x00000000007d6e94 : add eax, dword ptr [rax] ; ret 0xd03
0x0000000000739cca : add eax, dword ptr [rax] ; ret 0xd8fd
0x000000000073a2da : add eax, dword ptr [rax] ; ret 0xdaf1
0x000000000073a342 : add eax, dword ptr [rax] ; ret 0xdb27
0x00000000007d1b26 : add eax, dword ptr [rax] ; ret 0xe02
0x00000000007c71d2 : add eax, dword ptr [rax] ; retf
0x000000000073a3aa : add eax, dword ptr [rax] ; retf -0x24bc
0x000000000073a31a : add eax, dword ptr [rax] ; retf -0x24f9
0x000000000073a1d2 : add eax, dword ptr [rax] ; retf -0x25a2
0x000000000073995a : add eax, dword ptr [rax] ; retf -0x2789
0x00000000007396a2 : add eax, dword ptr [rax] ; retf -0x27ba
0x000000000073958a : add eax, dword ptr [rax] ; retf -0x27c5
0x0000000000739b3a : add eax, dword ptr [rax] ; retf -0x28
0x00000000007c4fed : add eax, dword ptr [rax] ; retf 0x1403
0x00000000007d5295 : add eax, dword ptr [rax] ; retf 0x501
0x00000000007d7818 : add eax, dword ptr [rax] ; retf 0x503
0x00000000007f4e4d : add eax, dword ptr [rax] ; retf 0x902
0x00000000007d2534 : add eax, dword ptr [rax] ; retf 0xd03
0x0000000000739752 : add eax, dword ptr [rax] ; ror byte ptr [rsi - 0x28], 1 ; jmp rax
0x000000000073ad0a : add eax, dword ptr [rax] ; sal byte ptr [rcx], 0xdd ; call rax
0x000000000078671e : add eax, dword ptr [rax] ; sal ch, 0xdf ; call qword ptr [rbx]
0x000000000078309e : add eax, dword ptr [rax] ; sar bh, 0xde ; jmp qword ptr [rax]
0x0000000000788716 : add eax, dword ptr [rax] ; sbb byte ptr [rax - 0x20], dh ; jmp qword ptr [rax]
0x0000000000739d8a : add eax, dword ptr [rax] ; sbb ebx, ecx ; jmp rax
0x0000000000781c16 : add eax, dword ptr [rax] ; scasq rax, qword ptr [rdi] ; fdivp st(7) ; ret
0x0000000000785a2e : add eax, dword ptr [rax] ; shr ch, 0xdf ; call qword ptr [rbx]
0x00000000007c9d31 : add eax, dword ptr [rax] ; std ; add dh, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000000007d46b3 : add eax, dword ptr [rax] ; test byte ptr [rbx], 0x41 ; add byte ptr [rax], al ; ret
0x000000000073a18a : add eax, dword ptr [rax] ; test byte ptr [rsi - 0x26], dl ; jmp qword ptr [rax]
0x0000000000739b42 : add eax, dword ptr [rax] ; xchg eax, edx ; retf -0x28
0x00000000007daf87 : add eax, dword ptr [rax] ; xchg eax, esi ; add esi, dword ptr [rcx] ; add byte ptr [rax], al ; retf 0x603
0x000000000073a422 : add eax, dword ptr [rax] ; xchg eax, esp ; xchg ebx, ebx ; jmp qword ptr [rax]
0x000000000073a412 : add eax, dword ptr [rax] ; xchg ebx, ebx ; jmp rax
0x000000000073b75a : add eax, dword ptr [rax] ; xor byte ptr [rbx], 0xde ; call qword ptr [rax]
0x00000000007884fe : add eax, dword ptr [rax] ; xor byte ptr [rcx - 0x20], ch ; call qword ptr [rbx]
0x0000000000780046 : add eax, dword ptr [rax] ; xor byte ptr [rsi - 0x38], cl ; call qword ptr [rdx]
0x000000000078632e : add eax, dword ptr [rax] ; xor cl, 0xdf ; jmp qword ptr [rcx]
0x00000000007e69d1 : add eax, dword ptr [rax] ; xor eax, dword ptr [rsi] ; ret
0x00000000004f66a4 : add eax, dword ptr [rbx + 0x634c02c3] ; retf
0x00000000007aa152 : add eax, dword ptr [rbx + 0xe] ; and byte ptr [rbx + 0xa5b0204], al ; ret
0x00000000006bcaa6 : add eax, dword ptr [rbx + rax*4] ; ret
0x00000000006854e9 : add eax, dword ptr [rbx - 0x3d7cf81f] ; add dword ptr [rax + 0x63], ecx ; call rbx
0x0000000000685349 : add eax, dword ptr [rbx - 0x3f7cf81f] ; add dword ptr [rax + 0x63], ecx ; call rbx
0x0000000000688073 : add eax, dword ptr [rbx - 0x7cb7f81f] ; ret 0x8301
0x0000000000684f92 : add eax, dword ptr [rbx - 0x7cbef81f] ; ret
0x0000000000685c5b : add eax, dword ptr [rbx - 0x7cbef81f] ; ret 0x4801
0x0000000000684fca : add eax, dword ptr [rbx - 0x7cbef81f] ; ret 0xd301
0x00000000006506ee : add eax, dword ptr [rbx] ; add byte ptr [rax - 0x7d], cl ; cli ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000007e9cf2 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; mov cl, 4 ; retf -0x78ff
0x00000000007dda71 : add eax, dword ptr [rbx] ; call qword ptr [rdi]
0x00000000005d2532 : add eax, dword ptr [rbx] ; call rax
0x00000000007bc2ca : add eax, dword ptr [rbx] ; ret
0x00000000007d5433 : add eax, dword ptr [rbx] ; retf
0x00000000007d1ed5 : add eax, dword ptr [rbx] ; xchg eax, edi ; add al, 5 ; pushfq ; add al, 7 ; retf
0x0000000000677e19 : add eax, dword ptr [rcx + 0x29] ; ret
0x00000000007ab06e : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa410204], al ; ret
0x00000000007aa1b2 : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa530204], al ; ret
0x0000000000677dbe : add eax, dword ptr [rcx + 0xf] ; ret
0x000000000065e2a6 : add eax, dword ptr [rcx + 0xf] ; xchg eax, esi ; ret 0xd285
0x00000000007e1213 : add eax, dword ptr [rcx - 0x36] ; add eax, 0x4003f400 ; ret 4
0x0000000000685cce : add eax, dword ptr [rcx - 0x7d] ; ret
0x000000000075badd : add eax, dword ptr [rcx] ; add byte ptr [rdx], ch ; xor ecx, edx ; call qword ptr [rdi]
0x000000000075ba8d : add eax, dword ptr [rcx] ; add dh, ch ; sar edi, 1 ; ret 1
0x00000000007dfa26 : add eax, dword ptr [rcx] ; mov dl, 2 ; sldt word ptr [rax] ; ret
0x00000000006bdad2 : add eax, dword ptr [rcx] ; ret
0x00000000007d5675 : add eax, dword ptr [rcx] ; ret 0x1202
0x00000000007d7402 : add eax, dword ptr [rcx] ; retf
0x00000000007f8f9e : add eax, dword ptr [rcx] ; wait ; add dword ptr [rsi], edx ; add byte ptr [rax], al ; ret
0x00000000007a6b02 : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rdx], al ; retf 0x180e
0x000000000057196c : add eax, dword ptr [rdi + 8] ; sub rax, 0x28 ; ret
0x000000000040e4e1 : add eax, dword ptr [rdi + rbx*2] ; call rax
0x00000000005485e9 : add eax, dword ptr [rdi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000735f31 : add eax, dword ptr [rdx] ; add byte ptr [rax + rbp*8 - 0x30], cl ; call rax
0x0000000000517acf : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; call rax
0x00000000005e2545 : add eax, dword ptr [rdx] ; call rax
0x00000000007e890a : add eax, dword ptr [rdx] ; ret 6
0x00000000007d44cd : add eax, dword ptr [rdx] ; retf
0x00000000007a6d88 : add eax, dword ptr [rip + 0x41280e02] ; ret
0x00000000007d4cbf : add eax, dword ptr [rip - 0x12defe11] ; add eax, dword ptr [rax] ; ret 0x302
0x000000000069cfd6 : add eax, dword ptr [rip - 0x3e561c17] ; retf 0x440c
0x00000000007c51d2 : add eax, dword ptr [rip - 0x4cc9fd03] ; add eax, dword ptr [rax] ; ret 0x503
0x00000000007e4cc2 : add eax, dword ptr [rip - 0x68ffed06] ; add ebx, dword ptr [rcx] ; call qword ptr [rdx]
0x00000000007cddc4 : add eax, dword ptr [rip - 0x6fae839] ; add eax, dword ptr [rsi] ; ret 0x17
0x00000000004c26f7 : add eax, dword ptr [rip - 0x70410000] ; ret 0x6e
0x00000000007cd2d9 : add eax, dword ptr [rip - 0x70fff06a] ; add edx, dword ptr [rdx] ; call qword ptr [rax]
0x00000000007e6fab : add eax, dword ptr [rip - 0x76ffe649] ; add al, 5 ; retf
0x00000000007bab5e : add eax, dword ptr [rsi + 0x180e4402] ; ret
0x00000000007ad412 : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rbx + 0x10730304], al ; ret
0x000000000076aa7a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rbx], 0xa ; ret
0x000000000079aa22 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdi + rdx*2], 0xa ; ret
0x000000000077b2ea : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], 0x4a ; ret
0x00000000007985ea : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], 0x68 ; ret
0x00000000007b3742 : add eax, dword ptr [rsi + rcx - 0x80] ; add dword ptr [rdx], eax ; retf 0xe0a
0x00000000007abac5 : add eax, dword ptr [rsi] ; add byte ptr [rdx], al ; cmp ch, ch ; jmp qword ptr [rdi]
0x00000000007f7f11 : add eax, dword ptr [rsi] ; ret
0x00000000007cddca : add eax, dword ptr [rsi] ; ret 0x17
0x00000000007cf215 : add eax, dword ptr [rsi] ; retf
0x00000000007d2531 : add eax, dword ptr [rsi] ; xlatb ; add eax, dword ptr [rax] ; retf 0xd03
0x0000000000668f97 : add eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000007d242d : add eax, dword ptr [rsp + rdi*8] ; or byte ptr [rax], al ; ret 0x403
0x0000000000781c15 : add eax, dword ptr fs:[rax] ; scasq rax, qword ptr [rdi] ; fdivp st(7) ; ret
0x00000000007fb3cc : add eax, eax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; retf
0x0000000000662830 : add eax, eax ; lea rax, qword ptr [r8 + rsi] ; add rax, rdx ; ret
0x000000000067f3d4 : add eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006d3417 : add eax, ebp ; jmp r8
0x000000000052a8ae : add eax, ebp ; pushfq ; call qword ptr [rdi]
0x0000000000403f89 : add eax, ebp ; ret
0x00000000005924c8 : add eax, ebp ; ret 0x10f5
0x00000000006a0a88 : add eax, ebp ; ret 0x9d
0x00000000005a8662 : add eax, ebp ; retf 0xd8e
0x00000000007faee8 : add eax, ebx ; add ch, ch ; ret
0x0000000000677571 : add eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000000006d2b51 : add eax, ebx ; jmp rax
0x00000000006774bb : add eax, ebx ; pop rbx ; ret
0x00000000005cf776 : add eax, ecx ; add rax, 8 ; nop ; pop rbp ; ret
0x0000000000688563 : add eax, ecx ; cmp rdi, r8 ; jne 0x688547 ; ret
0x000000000068797d : add eax, ecx ; cmp rdi, rdx ; jne 0x687977 ; ret
0x00000000006d2c4d : add eax, ecx ; jmp rax
0x00000000006609b8 : add eax, ecx ; ret
0x000000000040c153 : add eax, ecx ; test eax, eax ; nop ; pop rbp ; ret
0x0000000000676d13 : add eax, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004c9eac : add eax, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000052fce6 : add eax, edi ; ret
0x00000000007e7d03 : add eax, edx ; add al, 3 ; ret
0x00000000007e4b56 : add eax, edx ; add al, byte ptr [rax] ; popfq ; add cl, byte ptr [rcx] ; add byte ptr [rax], al ; retf
0x00000000006944f3 : add eax, edx ; add rsp, 0x18 ; ret
0x00000000006b20d4 : add eax, edx ; add rsp, 0x38 ; ret
0x000000000067817a : add eax, edx ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000073596d : add eax, edx ; call rax
0x00000000004e3c14 : add eax, edx ; nop ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000006163d7 : add eax, edx ; nop ; pop rbp ; ret
0x0000000000662837 : add eax, edx ; ret
0x00000000007e362d : add eax, edx ; syscall
0x0000000000507238 : add eax, esi ; add dword ptr [rax], 1 ; ret
0x0000000000507d74 : add eax, esi ; add dword ptr [rdi], 1 ; ret
0x00000000006c5c02 : add eax, esi ; add rsp, 8 ; ret
0x000000000068e571 : add eax, esi ; imul eax, dword ptr [rcx], 0xeb038b48 ; ret 0x1f0f
0x00000000006927f1 : add eax, esi ; jns 0x6927fc ; pop rbx ; ret
0x00000000005f972d : add eax, esi ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000667708 : add eax, esi ; ret
0x000000000051d779 : add eax, esi ; sub dword ptr [rax], 1 ; jmp 0x51d751
0x00000000005898e9 : add eax, esi ; sub dword ptr [rax], 1 ; jmp 0x5898c1
0x00000000005a4e69 : add eax, esi ; sub dword ptr [rax], 1 ; jmp 0x5a4e41
0x0000000000507248 : add eax, esi ; sub dword ptr [rax], 1 ; ret
0x0000000000507db4 : add eax, esi ; sub dword ptr [rdi], 1 ; ret
0x00000000006d3a4e : add eax, esp ; jmp rax
0x00000000007d439f : add eax, esp ; syscall
0x000000000051a43e : add ebp, 0x2a1 ; call rax
0x00000000004e204b : add ebp, 0x8948001d ; ret 0x8948
0x000000000053e3a6 : add ebp, 8 ; call rax
0x00000000007f22ab : add ebp, dword ptr [rax + 0x22] ; ret
0x00000000007e3627 : add ebp, dword ptr [rax + 0x22d0170f] ; add eax, edx ; syscall
0x00000000007d9d75 : add ebp, dword ptr [rbp + 0x23] ; ret
0x00000000007f7f54 : add ebp, dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x00000000007e3669 : add ebp, dword ptr [rdx + 0x12] ; retf 0x512
0x00000000007fb8a4 : add ebp, dword ptr [rsi + 0xd05] ; ret
0x0000000000664e45 : add ebp, dword ptr [rsp + rdx - 0x77000000] ; ret 0x8348
0x00000000007e367a : add ebp, eax ; adc dl, byte ptr [rdi] ; ret
0x00000000005fc9a1 : add ebp, eax ; sub dword ptr [rsp + rcx], ebx ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x00000000007d6cad : add ebp, ebp ; add al, 0x3e ; add byte ptr [rax], al ; ret 0x505
0x00000000005abb4b : add ebp, ebp ; str word ptr [rax - 0x77] ; ret
0x000000000068e578 : add ebp, ebx ; ret 0x1f0f
0x00000000007df41e : add ebp, ecx ; add eax, dword ptr [rax] ; mov esi, 0x502 ; ret
0x000000000074ebb1 : add ebp, ecx ; call rsp
0x0000000000763111 : add ebp, edx ; call rsp
0x00000000007d43ab : add ebp, esi ; syscall
0x00000000007e320d : add ebp, esp ; add al, 1 ; retf 0x203
0x00000000007a7949 : add ebp, esp ; call qword ptr [rsi]
0x000000000067ec7a : add ebx, 1 ; call rax
0x00000000004bb91c : add ebx, 1 ; jmp 0x4bb8e8
0x00000000005e92ae : add ebx, 1 ; jmp 0x5e9282
0x00000000005e933e : add ebx, 1 ; jmp 0x5e930a
0x0000000000607409 : add ebx, 1 ; mov edi, 0x3d ; call rax
0x00000000005b797e : add ebx, 1 ; movsxd rbx, ebx ; call 0x403c78
0x0000000000610969 : add ebx, dword ptr [rax + 0x1000002] ; pop rbx ; ret
0x0000000000598dc9 : add ebx, dword ptr [rax + 0x12] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000683069 : add ebx, dword ptr [rax + 0xa] ; add dh, bl ; retf -0x1e22
0x000000000050e23f : add ebx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042cfd9 : add ebx, dword ptr [rcx + 0x5d] ; add bh, bh ; ror cl, 1 ; ret
0x000000000068f27e : add ebx, dword ptr [rcx - 0x10] ; mov rax, rbx ; pop rbx ; ret
0x00000000005443c0 : add ebx, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e4cc8 : add ebx, dword ptr [rcx] ; call qword ptr [rdx]
0x00000000007e4bad : add ebx, dword ptr [rdx + 6] ; mov eax, dword ptr [rdx] ; add byte ptr [rax + 0x11], ah ; retf
0x00000000007cfbc1 : add ebx, dword ptr [rdx] ; ret
0x00000000007d6d5d : add ebx, eax ; add dword ptr [rdi], ecx ; retf 0x302
0x0000000000522b37 : add ebx, eax ; cmp rsi, r9 ; sete al ; ret
0x000000000068ee01 : add ebx, eax ; mov eax, 1 ; ret
0x000000000067fbfd : add ebx, eax ; nop ; movzx eax, byte ptr [rdi + 1] ; ret
0x00000000007e6168 : add ebx, eax ; or al, 6 ; retf 0xf
0x00000000005a8ac5 : add ebx, eax ; push rax ; call 0x40554d
0x00000000005a8ad6 : add ebx, eax ; push rax ; call 0x405563
0x000000000043c2a6 : add ebx, ebp ; add eax, 0xb8 ; add byte ptr [rcx], bh ; ret 0x840f
0x000000000043c419 : add ebx, ebp ; add eax, 0xb8 ; add byte ptr [rcx], bh ; ret 0x8d0f
0x0000000000493fe5 : add ebx, ebp ; add eax, 0xba ; add byte ptr [rcx], al ; ret 0xc085
0x00000000004a4267 : add ebx, ebp ; add eax, 0xba ; add byte ptr [rcx], al ; retf -0x3f7b
0x000000000043ffff : add ebx, ebp ; add eax, 0xbe ; add byte ptr [rcx], bh ; ret 0x1d7d
0x000000000052a3db : add ebx, ebp ; fimul dword ptr [rax - 0x77] ; ret
0x000000000051e029 : add ebx, ebp ; fmul dword ptr [rax - 0x77] ; ret
0x000000000045679f : add ebx, ebp ; in eax, 0x5d ; ret
0x000000000043bdc7 : add ebx, ebp ; mov bh, 0x90 ; pop rbp ; ret
0x000000000059987b : add ebx, ebp ; mov cl, byte ptr [rax - 0x77] ; ret
0x000000000051f8e0 : add ebx, ebp ; mov cs, word ptr [rax - 0x77] ; ret
0x00000000004ad3c0 : add ebx, ebp ; mov ecx, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x00000000005705ed : add ebx, ebp ; or dword ptr [rax - 0x7d], ecx ; ret
0x0000000000450395 : add ebx, ebp ; out 0x5d, al ; ret
0x000000000043c19d : add ebx, ebp ; ret
0x000000000057cc9c : add ebx, ebp ; ret 0xbf90
0x00000000004294bd : add ebx, ebp ; retf
0x00000000005ab395 : add ebx, ebp ; retf -0x2742
0x0000000000568825 : add ebx, ebp ; retf -0x3742
0x0000000000592465 : add ebx, ebp ; retf -0x742
0x000000000058c6f6 : add ebx, ebp ; retf -0x76b8
0x0000000000523935 : add ebx, ebp ; retf 0x60be
0x000000000050aecb : add ebx, ebp ; ror byte ptr [rax - 0x77], 1 ; ret
0x000000000054cfa1 : add ebx, ebp ; ror dword ptr [rax - 0x77], cl ; ret
0x00000000005e208e : add ebx, ebp ; xchg eax, ebp ; leave ; ret
0x000000000069c8a6 : add ebx, ecx ; mov dword ptr [rdi + 4], ebx ; pop rbx ; ret
0x00000000007d43a5 : add ebx, ecx ; syscall
0x00000000005749d9 : add ebx, edi ; add al, bpl ; push rax ; retf
0x00000000007f56bd : add ebx, edi ; syscall
0x00000000007df313 : add ebx, edx ; or byte ptr [rax], al ; retf
0x00000000007c758f : add ebx, edx ; or eax, dword ptr [rax] ; retf
0x0000000000408ae9 : add ebx, esi ; ret
0x00000000007c13b5 : add ebx, esp ; add dword ptr [rcx], eax ; ret
0x000000000069c8a5 : add ebx, r9d ; mov dword ptr [rdi + 4], ebx ; pop rbx ; ret
0x00000000006c6899 : add ecx, 0x40 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000067f8fe : add ecx, 1 ; test esi, esi ; jg 0x67f8d2 ; ret
0x00000000006be45b : add ecx, dword ptr [rax + 0x29] ; ret 0xb60f
0x00000000006b3654 : add ecx, dword ptr [rax + 0x29] ; retf -0x67b8
0x0000000000664173 : add ecx, dword ptr [rax + 0x33] ; or cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000548d93 : add ecx, dword ptr [rax + 0x39] ; ret 0x127c
0x000000000069d546 : add ecx, dword ptr [rax + 0x39] ; ret 0x147c
0x000000000053ba29 : add ecx, dword ptr [rax + 0x39] ; ret 0x8c0f
0x00000000006d081d : add ecx, dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8d48
0x00000000006663c1 : add ecx, dword ptr [rax + 0x39] ; ror dword ptr [rax + 0xf], 1 ; retf 0x3948
0x000000000051ab50 : add ecx, dword ptr [rax + 0x63] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00000000005185a1 : add ecx, dword ptr [rax + 0x63] ; ret
0x0000000000510954 : add ecx, dword ptr [rax + 0x63] ; retf
0x000000000062525e : add ecx, dword ptr [rax + 0x63] ; retf 0x3948
0x00000000006a600d : add ecx, dword ptr [rax - 0x39] ; add al, 0xc7 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000050fc5a : add ecx, dword ptr [rax - 0x39] ; add al, 0xf7 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000005185b8 : add ecx, dword ptr [rax - 0x73] ; jl 0x518588 ; sbb al, ch ; insd dword ptr [rdi], dx ; ret 0x15
0x00000000005270d3 : add ecx, dword ptr [rax - 0x73] ; pop rsp ; ret
0x000000000052fcf1 : add ecx, dword ptr [rax - 0x73] ; ret
0x000000000062c2b7 : add ecx, dword ptr [rax - 0x75] ; push rax ; and dh, dh ; ret 0x7501
0x00000000005f858e : add ecx, dword ptr [rax - 0x77] ; out dx, eax ; call 0x674836
0x00000000006b3e8b : add ecx, dword ptr [rax - 0x77] ; push rbx ; or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000408db2 : add ecx, dword ptr [rax - 0x77] ; ret
0x000000000061ab41 : add ecx, dword ptr [rax - 0x77] ; ret 0x4d8b
0x00000000004dc41d : add ecx, dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004e28e3 : add ecx, dword ptr [rax - 0x77] ; ret 0x8b49
0x00000000005eea69 : add ecx, dword ptr [rax - 0x77] ; ret 0xb8
0x000000000069d518 : add ecx, dword ptr [rax - 0x77] ; retf 0x2948
0x00000000005346da : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x48 ; ret 0x8d4c
0x000000000068dbe6 : add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000005299de : add ecx, dword ptr [rax - 0x7f] ; ret 0x107
0x00000000007e7d01 : add ecx, dword ptr [rbp + 0x304d001] ; ret
0x0000000000503f3a : add ecx, dword ptr [rbp + 0x39440170] ; ret 0x8e0f
0x00000000007c3559 : add ecx, dword ptr [rbp + 1] ; cmp ecx, dword ptr [rip + 0x190] ; ret
0x0000000000548d47 : add ecx, dword ptr [rbx + rcx*4 + 0x24] ; ret
0x0000000000488cf3 : add ecx, dword ptr [rbx - 0x366f03bb] ; ret
0x00000000007d1d56 : add ecx, dword ptr [rbx] ; fadd qword ptr [rip + 0xb03a701] ; retf
0x00000000007d1d5c : add ecx, dword ptr [rbx] ; retf
0x00000000007a8afa : add ecx, dword ptr [rcx + 0xe] ; and byte ptr [rsi + rcx + 0x18], cl ; ret
0x00000000007b47ea : add ecx, dword ptr [rcx + 0xe] ; and byte ptr [rsi + rcx + 0x18], dh ; ret
0x0000000000541d21 : add ecx, dword ptr [rcx + rcx*4 + 0x65] ; adc byte ptr [rax + 0x39], cl ; ret 0x8c0f
0x00000000006c7042 : add ecx, dword ptr [rcx - 0x5ab70c37] ; ret
0x0000000000498f42 : add ecx, dword ptr [rcx - 0x77] ; ret 0x65e8
0x0000000000498f9f : add ecx, dword ptr [rcx - 0x77] ; ret 0x8e8
0x0000000000681e89 : add ecx, dword ptr [rcx] ; add al, bl ; ret 0x7cd9
0x00000000004ed70c : add ecx, dword ptr [rdi] ; mov dh, 0xc0 ; mov edi, eax ; call 0x4b99aa
0x00000000004ecfce : add ecx, dword ptr [rdi] ; mov dh, 0xc0 ; mov edi, eax ; call 0x4b9a5e
0x000000000048ffc4 : add ecx, dword ptr [rdi] ; mov dh, 0xc0 ; mov edi, eax ; call 0x4bc200
0x0000000000650426 : add ecx, dword ptr [rdi] ; ror qword ptr [r8 + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x410f
0x000000000069462f : add ecx, dword ptr [rdi] ; xchg eax, edi ; ret 0xfb83
0x0000000000694773 : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xfb83
0x00000000005bf43a : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x8441
0x000000000067ba2c : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xd084
0x0000000000782e57 : add ecx, dword ptr [rdx + 0x41380e01] ; ret
0x00000000007b309a : add ecx, dword ptr [rdx + 0xe] ; and byte ptr [rsi + rcx + 0x18], dl ; ret
0x000000000076ffca : add ecx, dword ptr [rdx + 0xe] ; xor byte ptr [rdx], al ; retf 0xe0a
0x00000000007b7ea6 : add ecx, dword ptr [rdx] ; ret
0x00000000005a0748 : add ecx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007cbf62 : add ecx, dword ptr [rsi] ; ret 6
0x00000000007db9a5 : add ecx, eax ; add eax, 0x302eb00 ; ret
0x00000000006d4ceb : add ecx, eax ; jmp r9
0x00000000007d7a5c : add ecx, ebp ; add al, 0 ; retf 0xd01
0x00000000007cac7c : add ecx, ebp ; and al, 0 ; ret
0x0000000000660e81 : add ecx, ebp ; ret
0x00000000006114d9 : add ecx, ebp ; ret 0xfffb
0x00000000004fe52b : add ecx, ebp ; retf
0x00000000007c69ea : add ecx, ebp ; sbb al, byte ptr [rax] ; retf 0x508
0x00000000007f88fb : add ecx, ebx ; or eax, 0xd04b200 ; add byte ptr [rax], al ; ret
0x000000000074a56d : add ecx, edi ; jmp qword ptr [rax]
0x00000000006d20c6 : add ecx, edi ; jmp rcx
0x00000000007f8cc2 : add ecx, edx ; add eax, dword ptr [rax] ; ret 0x502
0x00000000007f7f4f : add ecx, esi ; add eax, dword ptr [rax] ; int1 ; add ebp, dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x00000000007df549 : add ecx, esi ; add eax, dword ptr [rax] ; mov esi, 0x502 ; ret
0x00000000007bc769 : add ecx, esi ; call qword ptr [rsi]
0x000000000066bd14 : add edi, 0x10 ; cmp rax, rdx ; jne 0x66bd08 ; ret
0x000000000066bfac : add edi, 0x10 ; cmp rax, rdx ; jne 0x66bfa0 ; ret
0x0000000000673fa4 : add edi, 0x10 ; cmp rax, rdx ; jne 0x673f98 ; ret
0x0000000000673fd4 : add edi, 0x10 ; cmp rax, rdx ; jne 0x673fc8 ; ret
0x00000000006c6d4c : add edi, 0x10 ; cmp rax, rdx ; jne 0x6c6d48 ; ret
0x000000000064c697 : add edi, 0x208 ; call 0x689148
0x000000000064c6d2 : add edi, 0x218 ; call 0x689148
0x00000000006d128d : add edi, 0x30 ; mov byte ptr [r10 + 0xc], dil ; ret
0x0000000000651bb2 : add edi, 0xb ; and rdi, 0xfffffffffffffffc ; call 0x6be5d9
0x00000000006472f5 : add edi, 0xe60 ; call 0x563d88
0x000000000067fa7e : add edi, 0xe8 ; call rax
0x00000000006472a5 : add edi, 0xff8 ; call 0x563d88
0x00000000006a1cbe : add edi, 1 ; cmp rdi, rdx ; jne 0x6a1c98 ; ret
0x00000000006a1d2b : add edi, 1 ; cmp rdi, rdx ; jne 0x6a1cf8 ; ret
0x00000000006a1e0e : add edi, 1 ; cmp rdi, rdx ; jne 0x6a1de8 ; ret
0x000000000059ddcf : add edi, 8 ; call 0x6aa855
0x00000000006ce5c8 : add edi, 8 ; cmp rdi, rax ; jne 0x6ce5c9 ; ret
0x00000000006b2f43 : add edi, 8 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000007917d4 : add edi, dword ptr [rax] ; add dword ptr [rdx], ecx ; ret
0x00000000007d44c8 : add edi, dword ptr [rbp + rcx + 0x203a000] ; retf
0x00000000007e14ce : add edi, dword ptr [rcx] ; add byte ptr [rax], al ; retf
0x00000000007c61cd : add edi, dword ptr [rcx] ; ret
0x000000000067bd4b : add edi, dword ptr [rcx] ; ret 0x407c
0x0000000000599075 : add edi, dword ptr [rcx] ; ret 0x7d7c
0x000000000057cd70 : add edi, dword ptr [rcx] ; ret 0x8f0f
0x000000000064cae7 : add edi, dword ptr [rcx] ; retf
0x00000000005f8710 : add edi, dword ptr [rcx] ; retf 0x737c
0x00000000006bde2e : add edi, dword ptr [rdi + 2] ; pop rbx ; ret
0x00000000007d4399 : add edi, dword ptr [rdx + 0xfe3050f] ; add eax, esp ; syscall
0x0000000000722e7a : add edi, dword ptr [rdx - 0x72961f99] ; xlatb ; retf
0x00000000007e5db3 : add edi, dword ptr [rsi + 0x503] ; ret
0x00000000007cee12 : add edi, eax ; add dword ptr [rax], ebx ; ret 0x102
0x00000000007fa4f5 : add edi, eax ; js 0x7fa502 ; ret 0xd37b
0x00000000007b2ff9 : add edi, ebp ; jmp qword ptr [rdi]
0x00000000007f2496 : add edi, ebp ; xor al, 5 ; ret 0x3935
0x00000000007ccb85 : add edi, edx ; add al, 0 ; ret 0x501
0x00000000005f45ac : add edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000006682f4 : add edx, 0x10 ; cmp rsi, rcx ; jne 0x6682e9 ; pop rbx ; ret
0x0000000000667775 : add edx, 0x3b9aca00 ; ret
0x00000000005a1eff : add edx, 1 ; add rsp, 8 ; ret
0x000000000053add9 : add edx, 1 ; cmp rcx, rdx ; sete al ; ret
0x0000000000519f03 : add edx, 1 ; ret
0x00000000004f25a1 : add edx, dword ptr [r9] ; call rax
0x00000000007cfca4 : add edx, dword ptr [rbp - 0x51ffffff] ; add al, 6 ; ret 4
0x00000000004b2546 : add edx, dword ptr [rbp] ; call rax
0x000000000058e210 : add edx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007ceea8 : add edx, dword ptr [rbx] ; add byte ptr [rax], al ; retf 0x503
0x00000000007d73ff : add edx, dword ptr [rbx] ; hlt ; add eax, dword ptr [rcx] ; retf
0x0000000000570f8e : add edx, dword ptr [rcx] ; add bl, ch ; test dword ptr [rax - 0x77], ecx ; ret
0x000000000057032d : add edx, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005ae261 : add edx, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x00000000004f25a2 : add edx, dword ptr [rcx] ; call rax
0x00000000006ac16c : add edx, dword ptr [rdi + 0x20] ; cmp rsi, rdx ; setb al ; ret
0x00000000007b7ea4 : add edx, dword ptr [rdi] ; add ecx, dword ptr [rdx] ; ret
0x00000000007e676e : add edx, dword ptr [rdi] ; retf
0x00000000007cd2df : add edx, dword ptr [rdx] ; call qword ptr [rax]
0x00000000007d0197 : add edx, dword ptr [rdx] ; ret 0xe
0x00000000007ec99d : add edx, dword ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000057032c : add edx, dword ptr ss:[rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007359ad : add edx, eax ; call rax
0x00000000007e1223 : add edx, ebp ; add al, 0xd ; add byte ptr [rax], al ; out dx, al ; add al, 0x16 ; ret 4
0x00000000006d31f1 : add edx, ebp ; jmp rdx
0x00000000006d3637 : add edx, ecx ; jmp rdx
0x0000000000667763 : add edx, edi ; js 0x667774 ; ret
0x0000000000667368 : add edx, edi ; ret
0x0000000000736a05 : add edx, edx ; jmp rax
0x00000000007f030d : add edx, esp ; add dword ptr [rcx], eax ; ret 0x2c01
0x00000000007f672e : add edx, esp ; and byte ptr [rax], al ; ret
0x000000000078f6c9 : add edx, esp ; jmp qword ptr [rbx]
0x000000000078f6b1 : add edx, esp ; jmp qword ptr [rdx]
0x0000000000689b4f : add esi, 0x14 ; cmp edx, esi ; setle al ; ret
0x00000000006cda98 : add esi, 8 ; cmp rsi, rax ; jne 0x6cda99 ; ret
0x00000000007e0e19 : add esi, dword ptr [rax] ; add byte ptr [rax], al ; ret 0x503
0x00000000004973a9 : add esi, dword ptr [rbp + 0x22] ; add cl, cl ; ret
0x00000000005b5396 : add esi, dword ptr [rbp + 7] ; mov dword ptr [rdi + 0x3c8], esi ; ret
0x00000000005b5d56 : add esi, dword ptr [rbp + 7] ; mov dword ptr [rdi + 0x3f8], esi ; ret
0x00000000005b3fe6 : add esi, dword ptr [rbp + 7] ; mov dword ptr [rdi + 0x4e8], esi ; ret
0x00000000005b72e6 : add esi, dword ptr [rbp + 7] ; mov dword ptr [rdi + 0x698], esi ; ret
0x00000000005b55d6 : add esi, dword ptr [rbp + 7] ; mov dword ptr [rdi + 0x9f8], esi ; ret
0x00000000005b5d86 : add esi, dword ptr [rbp + 7] ; mov dword ptr [rdi + 0xab8], esi ; ret
0x00000000005b7316 : add esi, dword ptr [rbp + 7] ; mov dword ptr [rip + 0x44e7a9], edi ; ret
0x00000000005b6946 : add esi, dword ptr [rbp + 7] ; mov dword ptr [rip + 0x44ef99], edi ; ret
0x00000000005b5de6 : add esi, dword ptr [rbp + 7] ; mov dword ptr [rip + 0x44fc79], edi ; ret
0x00000000005b5d26 : add esi, dword ptr [rbp + 7] ; mov dword ptr [rip + 0x44fd09], edi ; ret
0x00000000005b5db6 : add esi, dword ptr [rbp + 7] ; mov dword ptr [rip + 0x44fd99], edi ; ret
0x00000000005b53c6 : add esi, dword ptr [rbp + 7] ; mov dword ptr [rip + 0x450639], edi ; ret
0x00000000005af796 : add esi, dword ptr [rbp + 7] ; mov eax, dword ptr [rdi + 0x3c8] ; ret
0x00000000005afb06 : add esi, dword ptr [rbp + 7] ; mov eax, dword ptr [rdi + 0x3f8] ; ret
0x00000000005af016 : add esi, dword ptr [rbp + 7] ; mov eax, dword ptr [rdi + 0x4e8] ; ret
0x00000000005b0556 : add esi, dword ptr [rbp + 7] ; mov eax, dword ptr [rdi + 0x698] ; ret
0x00000000005af986 : add esi, dword ptr [rbp + 7] ; mov eax, dword ptr [rdi + 0x9f8] ; ret
0x00000000005afb26 : add esi, dword ptr [rbp + 7] ; mov eax, dword ptr [rdi + 0xab8] ; ret
0x00000000005b0586 : add esi, dword ptr [rbp + 7] ; mov eax, dword ptr [rip + 0x455539] ; ret
0x00000000005b0346 : add esi, dword ptr [rbp + 7] ; mov eax, dword ptr [rip + 0x455599] ; ret
0x00000000005afb86 : add esi, dword ptr [rbp + 7] ; mov eax, dword ptr [rip + 0x455ed9] ; ret
0x00000000005afad6 : add esi, dword ptr [rbp + 7] ; mov eax, dword ptr [rip + 0x455f59] ; ret
0x00000000005afb56 : add esi, dword ptr [rbp + 7] ; mov eax, dword ptr [rip + 0x455ff9] ; ret
0x00000000005af7c6 : add esi, dword ptr [rbp + 7] ; mov eax, dword ptr [rip + 0x456239] ; ret
0x00000000007ad418 : add esi, dword ptr [rbx + 0x10] ; ret
0x00000000007daf8a : add esi, dword ptr [rcx] ; add byte ptr [rax], al ; retf 0x603
0x00000000007f06e3 : add esi, dword ptr [rdx + rax - 0x6ffffd2] ; add dl, byte ptr [rsi] ; jmp qword ptr [rax]
0x00000000006aaacb : add esi, dword ptr [rsi + 2] ; ret
0x00000000007fb9e1 : add esi, eax ; add eax, dword ptr [rcx] ; retf
0x000000000067466a : add esi, eax ; or dword ptr [r8], r8d ; ret
0x00000000006b798c : add esi, ebp ; call 0x403c74
0x00000000006ce0dc : add esi, ebx ; ret
0x00000000006c689e : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00000000007d1001 : add esi, ecx ; add al, 0x3a ; add byte ptr [rax], al ; ret 0x505
0x0000000000751819 : add esi, ecx ; jmp qword ptr [rax]
0x00000000007517f9 : add esi, ecx ; jmp qword ptr [rbx]
0x00000000005f964d : add esi, ecx ; mov dword ptr [rdi + 4], esi ; ret
0x00000000007f960d : add esi, edi ; add dword ptr [rax], eax ; retf
0x00000000006d1f03 : add esi, edi ; jmp rsi
0x00000000006a4893 : add esi, edx ; sar esi, 1 ; jne 0x6a4886 ; ret
0x000000000074860d : add esi, esi ; jmp qword ptr [rax]
0x000000000043be2d : add esp, 0x10 ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000040b2ee : add esp, 0x10 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000055cb2d : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004f76f2 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000501959 : add esp, 0x10 ; pop rbx ; ret
0x0000000000648790 : add esp, 0x1010 ; pop rbx ; ret
0x00000000005f9889 : add esp, 0x108 ; pop rbx ; pop rbp ; ret
0x0000000000669168 : add esp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000006cd3b9 : add esp, 0x18 ; movzx eax, ah ; pop rbx ; pop rbp ; ret
0x00000000006ce3ff : add esp, 0x18 ; neg eax ; ret
0x0000000000440722 : add esp, 0x18 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000631832 : add esp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000632d14 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000004f7378 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000005b6073 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x000000000040c0e3 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004f6eff : add esp, 0x18 ; ret
0x00000000004e2149 : add esp, 0x1d ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000440540 : add esp, 0x20 ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000047fcfe : add esp, 0x20 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000050188e : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000525072 : add esp, 0x20 ; pop rbx ; ret
0x0000000000669c82 : add esp, 0x238 ; pop rbx ; pop rbp ; ret
0x00000000006d44da : add esp, 0x278 ; pop rbx ; pop rbp ; ret
0x00000000006ce43a : add esp, 0x28 ; neg eax ; ret
0x000000000043c0d9 : add esp, 0x28 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000543a16 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000508981 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000005b6025 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x000000000040c7fb : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000050d6b9 : add esp, 0x28 ; ret
0x00000000004f830f : add esp, 0x288 ; pop rbx ; pop rbp ; ret
0x00000000006813b0 : add esp, 0x288 ; ret
0x00000000005bf081 : add esp, 0x2d8 ; pop rbx ; pop rbp ; ret
0x00000000004401d7 : add esp, 0x30 ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000041357f : add esp, 0x30 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000050a983 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000518526 : add esp, 0x30 ; pop rbx ; ret
0x000000000065a155 : add esp, 0x318 ; pop rbx ; pop rbp ; ret
0x000000000043baf0 : add esp, 0x38 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000062c64f : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000005864c4 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040bf7d : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000005075a6 : add esp, 0x38 ; ret
0x000000000041468a : add esp, 0x40 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000051d19d : add esp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000677c3a : add esp, 0x40 ; pop rbx ; ret
0x00000000005052fd : add esp, 0x418 ; pop rbx ; pop rbp ; ret
0x000000000041274c : add esp, 0x48 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000058113f : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040d067 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000005633d1 : add esp, 0x48 ; ret
0x0000000000450fe2 : add esp, 0x50 ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000005117f4 : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000626d7f : add esp, 0x50 ; pop rbx ; ret
0x000000000043ccbd : add esp, 0x58 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004f70ce : add esp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004791d9 : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000054164e : add esp, 0x60 ; pop rbx ; ret
0x000000000040db0d : add esp, 0x68 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000069b78f : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040f7f3 : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000006ac892 : add esp, 0x68 ; ret
0x000000000047c7f3 : add esp, 0x70 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000050e2fb : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000058367e : add esp, 0x70 ; pop rbx ; ret
0x000000000044bdcf : add esp, 0x78 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000050e55f : add esp, 0x78 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044b94e : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000044536f : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x00000000006cd194 : add esp, 0x90 ; pop rbx ; ret
0x00000000006cca96 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000006596a0 : add esp, 0x98 ; ret
0x00000000005f9022 : add esp, 0x9c8 ; pop rbx ; pop rbp ; ret
0x00000000006cd974 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000000000068e307 : add esp, 0xa8 ; ret
0x000000000069c4bb : add esp, 0xb0 ; pop rbx ; ret
0x000000000068e6ac : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x00000000006923c0 : add esp, 0xb8 ; ret
0x00000000006ce248 : add esp, 0xc8 ; ret
0x00000000006cec97 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000670c7c : add esp, 0xdc0 ; pop rbx ; ret
0x000000000066800f : add esp, 0xdc8 ; ret
0x0000000000668a70 : add esp, 0xf08 ; pop rbx ; pop rbp ; ret
0x00000000005130b6 : add esp, 8 ; jmp rax
0x00000000006625d0 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000006cd455 : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000006ce8e8 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000006cdefc : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000513009 : add esp, 8 ; mov rsi, rcx ; jmp rax
0x000000000041b34b : add esp, 8 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000050469d : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000005359f5 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000004f7b68 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004f75e4 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000403276 : add esp, 8 ; ret
0x00000000006ce908 : add esp, 8 ; xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000007c919a : add esp, dword ptr [rax + 0x1301] ; ret
0x00000000007f1fd8 : add esp, dword ptr [rax + rcx + 0x3228911] ; ret 0x508
0x000000000047f82c : add esp, dword ptr [rax] ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000006d1226 : add esp, dword ptr [rax] ; jne 0x6d11bc ; mov eax, 2 ; ret
0x000000000062585f : add esp, dword ptr [rbx - 0x76b7fffb] ; ret
0x000000000061b48b : add esp, dword ptr [rbx - 1] ; dec ecx ; ret
0x00000000007c84aa : add esp, dword ptr [rcx + rbp + 0x329d305] ; ret
0x00000000007d1618 : add esp, dword ptr [rcx] ; add byte ptr [rax], al ; retf 0x603
0x00000000007c6505 : add esp, dword ptr [rdi + 0x78208] ; add ah, al ; syscall
0x000000000040f7cf : add esp, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000418d89 : add esp, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x8948
0x00000000007ceea6 : add esp, dword ptr [rdx + 0x1303] ; retf 0x503
0x00000000007e7cce : add esp, dword ptr [rdx + 0x503] ; retf 0x2f03
0x000000000056abc1 : add esp, dword ptr [rdx - 0x76b70017] ; ret
0x00000000007fbd05 : add esp, dword ptr [rdx] ; ret
0x00000000007fbcf9 : add esp, dword ptr [rsi] ; ret
0x00000000007ed289 : add esp, eax ; add dword ptr [rcx], eax ; ret 0x1601
0x00000000007d57a9 : add esp, eax ; add dword ptr [rcx], eax ; retf 0x901
0x00000000007b691d : add esp, eax ; add dword ptr [rdx], ecx ; ret
0x000000000079ae19 : add esp, edi ; call qword ptr [rbx]
0x000000000078f851 : add esp, edx ; jmp qword ptr [rdx]
0x000000000051e47d : add qword ptr [r10], r11 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007c355a : add qword ptr [r11], r15 ; or eax, 0x190 ; ret
0x00000000006a45ff : add qword ptr [r8 - 0x77], rcx ; sal byte ptr [rdx + rbp - 0x77], 1 ; retf
0x0000000000691786 : add qword ptr [r8], rax ; mov eax, dword ptr [rbx + 0x5c] ; pop rbx ; ret
0x000000000065e750 : add qword ptr [rax + 0x48], rdx ; xor eax, eax ; ret
0x00000000006489df : add qword ptr [rax - 0x77], rcx ; ret 0xc748
0x000000000068ebe1 : add qword ptr [rax - 0x7d], r9 ; ret 0x8008
0x000000000050e928 : add qword ptr [rax], r8 ; add byte ptr [rcx], ch ; ret
0x0000000000477e68 : add qword ptr [rax], rax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000006bac42 : add qword ptr [rbx - 0x7cb7fe40], rax ; ret 0x4001
0x000000000067ff49 : add qword ptr [rbx - 0x7cb7fe40], rax ; ret 0x8001
0x00000000006bab52 : add qword ptr [rbx - 0x7cb7fe40], rax ; ret 0x8d01
0x0000000000692268 : add qword ptr [rcx + 0x29], rcx ; retf 0x3846
0x0000000000691e61 : add qword ptr [rcx + 0x480f41ca], rcx ; ret
0x000000000076a5ee : add qword ptr [rdi], 2 ; ret 0xc0a
0x00000000006b6c72 : add r10b, byte ptr [rax] ; mov byte ptr [rdx + r8 + 0x11], cl ; ret
0x00000000006b6c77 : add r10b, byte ptr [rcx] ; ret
0x00000000005a1efe : add r10d, 1 ; add rsp, 8 ; ret
0x000000000043269d : add r11b, byte ptr [r13] ; call rax
0x00000000005928d1 : add r11b, r13b ; fimul dword ptr [rax - 0x77] ; ret
0x0000000000544979 : add r12b, bpl ; dec dword ptr [rax - 0x77] ; ret
0x000000000057cd6f : add r15, qword ptr [rcx] ; ret 0x8f0f
0x00000000005e7b05 : add r15b, dil ; ror cl, 1 ; ret
0x000000000073a3a9 : add r8, qword ptr [r8] ; retf -0x24bc
0x000000000073a411 : add r8, qword ptr [r8] ; xchg ebx, ebx ; jmp rax
0x000000000073a391 : add r8, qword ptr [rax] ; in al, dx ; cmp ebx, ebx ; jmp qword ptr [rax]
0x00000000006d3416 : add r8, r13 ; jmp r8
0x0000000000565d19 : add r8b, bpl ; adc bh, byte ptr [rax + 0x15ff0011] ; ret 0x49cb
0x0000000000564a3d : add r8b, bpl ; out dx, al ; retf 0x11
0x000000000054ed68 : add r8b, bpl ; ret
0x000000000067fe2f : add r8b, byte ptr [r8] ; add rsp, 8 ; ret
0x000000000076fe8d : add r8b, byte ptr [r8] ; lodsb al, byte ptr [rsi] ; leave ; call qword ptr [rdx]
0x0000000000736f79 : add r8b, byte ptr [r8] ; mov byte ptr [rcx - 0x2e], ch ; call qword ptr [rax]
0x000000000076fe75 : add r8b, byte ptr [r8] ; mov dl, 0x43 ; leave ; call qword ptr [rdx]
0x0000000000736dc9 : add r8b, byte ptr [r8] ; retf -0x2dc7
0x0000000000565599 : add r8b, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; adc byte ptr [r9], r15b ; ret
0x00000000005b099f : add r8b, r13b ; retf 0xda3
0x000000000073a241 : add r8d, dword ptr [r8] ; pop rax ; ret 0xffda
0x00000000006bdad1 : add r8d, dword ptr [r9] ; ret
0x000000000067b937 : add r8d, dword ptr [rax] ; leave ; ret
0x000000000073a259 : add r8d, dword ptr [rax] ; pop rsi ; retf -0x26
0x000000000075ba8c : add r8d, dword ptr [rcx] ; add dh, ch ; sar edi, 1 ; ret 1
0x00000000005485e8 : add r8d, dword ptr [rdi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000067b936 : add r8d, dword ptr ss:[rax] ; leave ; ret
0x00000000006d4cea : add r9, rax ; jmp r9
0x00000000006652c2 : add r9b, byte ptr [rax + 0x63] ; ret 0xba41
0x000000000062b87a : add rax, -0x157cb800 ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000007a05ed : add rax, -0x17770000 ; jmp rsi
0x00000000007a02dd : add rax, -0x177f1000 ; call rsi
0x000000000079ffdd : add rax, -0x17885000 ; call rdi
0x0000000000740809 : add rax, -0x1a2f6000 ; jmp qword ptr [rax]
0x00000000007407a9 : add rax, -0x1a3ec000 ; jmp qword ptr [rax]
0x00000000007407a1 : add rax, -0x1a3f6000 ; jmp rax
0x0000000000740761 : add rax, -0x1a408000 ; jmp qword ptr [rax]
0x0000000000740721 : add rax, -0x1a43f000 ; call qword ptr [rax]
0x00000000007406d9 : add rax, -0x1a4c1000 ; call rax
0x0000000000740699 : add rax, -0x1a4ca000 ; call qword ptr [rax]
0x0000000000740689 : add rax, -0x1a4cc000 ; jmp rax
0x0000000000740649 : add rax, -0x1a4d5000 ; jmp qword ptr [rax]
0x000000000067fb5d : add rax, -0x3b7cb800 ; or bl, al ; ret
0x0000000000615009 : add rax, 0x19 ; mov rdi, rax ; call 0x6a1a99
0x00000000006760a0 : add rax, 0x1b8 ; ret
0x000000000066b170 : add rax, 0x1e0 ; ret
0x000000000043eceb : add rax, 0x24 ; mov rdi, rax ; call 0x43af05
0x000000000045aac0 : add rax, 0x24 ; mov rdi, rax ; call 0x457519
0x00000000004640d9 : add rax, 0x24 ; mov rdi, rax ; call 0x4603cf
0x000000000046ddd9 : add rax, 0x24 ; mov rdi, rax ; call 0x46a0cf
0x000000000049e17d : add rax, 0x24 ; mov rdi, rax ; call 0x49a44b
0x000000000067faaf : add rax, 0x40 ; add rsp, 8 ; ret
0x0000000000722a02 : add rax, 0x447e62e9 ; ret 0x2d4f
0x0000000000673b98 : add rax, 0x600 ; ret
0x0000000000690577 : add rax, 0x70 ; ret
0x0000000000662860 : add rax, 0xb ; ret
0x000000000053ddc8 : add rax, 0xc0 ; ret
0x00000000006bc4f5 : add rax, 1 ; cmp dx, ax ; jne 0x6bc4f9 ; ret
0x00000000006c578c : add rax, 1 ; cmp rax, r8 ; jne 0x6c5789 ; ret
0x000000000053ecb6 : add rax, 1 ; cmp rax, rdx ; jne 0x53ecb1 ; ret
0x00000000006a07e0 : add rax, 1 ; cmp rax, rdx ; jne 0x6a07e1 ; ret
0x00000000006bc527 : add rax, 1 ; cmp rax, rdx ; jne 0x6bc521 ; ret
0x00000000006cba80 : add rax, 1 ; cmp rax, rdx ; jne 0x6cba81 ; ret
0x000000000045043f : add rax, 4 ; mov dword ptr [rax], edx ; leave ; ret
0x00000000005f4fb7 : add rax, 8 ; mov rdi, rax ; call 0x5e12c9
0x00000000004bd694 : add rax, 8 ; mov rdi, rax ; call 0x689919
0x00000000004bd4e1 : add rax, 8 ; mov rdi, rax ; call 0x689fb9
0x00000000005cf778 : add rax, 8 ; nop ; pop rbp ; ret
0x0000000000582494 : add rax, 8 ; pop rbx ; ret
0x000000000073a301 : add rax, qword ptr [r8] ; add bl, bl ; call qword ptr [rax]
0x000000000073a2d9 : add rax, qword ptr [r8] ; ret 0xdaf1
0x000000000073a341 : add rax, qword ptr [r8] ; ret 0xdb27
0x0000000000780045 : add rax, qword ptr [r8] ; xor byte ptr [rsi - 0x38], cl ; call qword ptr [rdx]
0x000000000077ff5d : add rax, qword ptr [rax] ; cmp byte ptr [rsi + rbx*8], 0xff ; retf 0
0x000000000073a2c9 : add rax, qword ptr [rax] ; out -0x26, eax ; call rax
0x000000000077ff45 : add rax, qword ptr [rax] ; ret 0xc84e
0x000000000073a319 : add rax, qword ptr [rax] ; retf -0x24f9
0x000000000057196b : add rax, qword ptr [rdi + 8] ; sub rax, 0x28 ; ret
0x0000000000668f96 : add rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000006d2b50 : add rax, r11 ; jmp rax
0x00000000006d3a4d : add rax, r12 ; jmp rax
0x0000000000677570 : add rax, rbx ; add rsp, 0x30 ; pop rbx ; ret
0x00000000006774ba : add rax, rbx ; pop rbx ; ret
0x00000000005cf775 : add rax, rcx ; add rax, 8 ; nop ; pop rbp ; ret
0x00000000006d2c4c : add rax, rcx ; jmp rax
0x00000000006609b7 : add rax, rcx ; ret
0x0000000000676d12 : add rax, rdi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006a1802 : add rax, rdi ; ret
0x00000000006944f2 : add rax, rdx ; add rsp, 0x18 ; ret
0x00000000006b20d3 : add rax, rdx ; add rsp, 0x38 ; ret
0x0000000000678179 : add rax, rdx ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000006163d6 : add rax, rdx ; nop ; pop rbp ; ret
0x0000000000662836 : add rax, rdx ; ret
0x0000000000667707 : add rax, rsi ; ret
0x000000000051a43d : add rbp, 0x2a1 ; call rax
0x000000000053e3a5 : add rbp, 8 ; call rax
0x000000000067ec79 : add rbx, 1 ; call rax
0x0000000000607408 : add rbx, 1 ; mov edi, 0x3d ; call rax
0x000000000068f27d : add rbx, qword ptr [rcx - 0x10] ; mov rax, rbx ; pop rbx ; ret
0x00000000005ab394 : add rbx, rbp ; retf -0x2742
0x0000000000568824 : add rbx, rbp ; retf -0x3742
0x0000000000592464 : add rbx, rbp ; retf -0x742
0x0000000000523934 : add rbx, rbp ; retf 0x60be
0x000000000067f8fd : add rcx, 1 ; test esi, esi ; jg 0x67f8d3 ; ret
0x00000000006d20c5 : add rcx, rdi ; jmp rcx
0x000000000066bd13 : add rdi, 0x10 ; cmp rax, rdx ; jne 0x66bd09 ; ret
0x000000000066bfab : add rdi, 0x10 ; cmp rax, rdx ; jne 0x66bfa1 ; ret
0x0000000000673fa3 : add rdi, 0x10 ; cmp rax, rdx ; jne 0x673f99 ; ret
0x0000000000673fd3 : add rdi, 0x10 ; cmp rax, rdx ; jne 0x673fc9 ; ret
0x00000000006c6d4b : add rdi, 0x10 ; cmp rax, rdx ; jne 0x6c6d49 ; ret
0x000000000064c696 : add rdi, 0x208 ; call 0x689149
0x000000000064c6d1 : add rdi, 0x218 ; call 0x689149
0x00000000006472f4 : add rdi, 0xe60 ; call 0x563d89
0x000000000067fa7d : add rdi, 0xe8 ; call rax
0x00000000006472a4 : add rdi, 0xff8 ; call 0x563d89
0x00000000006a1cbd : add rdi, 1 ; cmp rdi, rdx ; jne 0x6a1c99 ; ret
0x00000000006a1d2a : add rdi, 1 ; cmp rdi, rdx ; jne 0x6a1cf9 ; ret
0x00000000006a1e0d : add rdi, 1 ; cmp rdi, rdx ; jne 0x6a1de9 ; ret
0x000000000059ddce : add rdi, 8 ; call 0x6aa856
0x00000000006b2f42 : add rdi, 8 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000005f870f : add rdi, qword ptr [rcx] ; retf 0x737c
0x00000000007b2ff8 : add rdi, rbp ; jmp qword ptr [rdi]
0x0000000000667774 : add rdx, 0x3b9aca00 ; ret
0x00000000006d31f0 : add rdx, rbp ; jmp rdx
0x00000000006d3636 : add rdx, rcx ; jmp rdx
0x0000000000667762 : add rdx, rdi ; js 0x667775 ; ret
0x0000000000667367 : add rdx, rdi ; ret
0x00000000006d1f02 : add rsi, r15 ; jmp rsi
0x00000000006b798b : add rsi, rbp ; call 0x403c75
0x000000000043be2c : add rsp, 0x10 ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000040b2ed : add rsp, 0x10 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000055cb2c : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004f76f1 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000501958 : add rsp, 0x10 ; pop rbx ; ret
0x000000000064878f : add rsp, 0x1010 ; pop rbx ; ret
0x00000000005f9888 : add rsp, 0x108 ; pop rbx ; pop rbp ; ret
0x0000000000669167 : add rsp, 0x118 ; pop rbx ; pop rbp ; ret
0x00000000006cd3b8 : add rsp, 0x18 ; movzx eax, ah ; pop rbx ; pop rbp ; ret
0x00000000006ce3fe : add rsp, 0x18 ; neg eax ; ret
0x0000000000631831 : add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x000000000040c0e2 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004f6efe : add rsp, 0x18 ; ret
0x000000000044053f : add rsp, 0x20 ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000047fcfd : add rsp, 0x20 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000050188d : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000525071 : add rsp, 0x20 ; pop rbx ; ret
0x0000000000669c81 : add rsp, 0x238 ; pop rbx ; pop rbp ; ret
0x00000000006d44d9 : add rsp, 0x278 ; pop rbx ; pop rbp ; ret
0x00000000006ce439 : add rsp, 0x28 ; neg eax ; ret
0x000000000040c7fa : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000050d6b8 : add rsp, 0x28 ; ret
0x00000000004f830e : add rsp, 0x288 ; pop rbx ; pop rbp ; ret
0x00000000006813af : add rsp, 0x288 ; ret
0x00000000005bf080 : add rsp, 0x2d8 ; pop rbx ; pop rbp ; ret
0x00000000004401d6 : add rsp, 0x30 ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000041357e : add rsp, 0x30 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000050a982 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000518525 : add rsp, 0x30 ; pop rbx ; ret
0x000000000065a154 : add rsp, 0x318 ; pop rbx ; pop rbp ; ret
0x000000000040bf7c : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000005075a5 : add rsp, 0x38 ; ret
0x0000000000414689 : add rsp, 0x40 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000051d19c : add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000677c39 : add rsp, 0x40 ; pop rbx ; ret
0x00000000005052fc : add rsp, 0x418 ; pop rbx ; pop rbp ; ret
0x000000000040d066 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000005633d0 : add rsp, 0x48 ; ret
0x0000000000450fe1 : add rsp, 0x50 ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000005117f3 : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000626d7e : add rsp, 0x50 ; pop rbx ; ret
0x00000000004791d8 : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000054164d : add rsp, 0x60 ; pop rbx ; ret
0x000000000040f7f2 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000006ac891 : add rsp, 0x68 ; ret
0x000000000047c7f2 : add rsp, 0x70 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000050e2fa : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000058367d : add rsp, 0x70 ; pop rbx ; ret
0x000000000044b94d : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000044536e : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x00000000006cd193 : add rsp, 0x90 ; pop rbx ; ret
0x00000000006cca95 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000065969f : add rsp, 0x98 ; ret
0x00000000005f9021 : add rsp, 0x9c8 ; pop rbx ; pop rbp ; ret
0x00000000006cd973 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000000000068e306 : add rsp, 0xa8 ; ret
0x000000000069c4ba : add rsp, 0xb0 ; pop rbx ; ret
0x000000000068e6ab : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x00000000006923bf : add rsp, 0xb8 ; ret
0x00000000006ce247 : add rsp, 0xc8 ; ret
0x00000000006cec96 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000670c7b : add rsp, 0xdc0 ; pop rbx ; ret
0x000000000066800e : add rsp, 0xdc8 ; ret
0x0000000000668a6f : add rsp, 0xf08 ; pop rbx ; pop rbp ; ret
0x00000000005130b5 : add rsp, 8 ; jmp rax
0x00000000006625cf : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000006cd454 : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000006ce8e7 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000006cdefb : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000513008 : add rsp, 8 ; mov rsi, rcx ; jmp rax
0x000000000050469c : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000004f75e3 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000403275 : add rsp, 8 ; ret
0x0000000000751818 : add si, cx ; jmp qword ptr [rax]
0x00000000006115ae : add sil, al ; xchg eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0x000000000078f740 : add spl, dl ; jmp qword ptr [rdx]
0x00000000005ffd62 : add word ptr [rax], ax ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000057d1a7 : add word ptr [rax], ax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000682c57 : addps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x00000000006824de : addps xmm0, xmm1 ; add rsp, 8 ; ret
0x0000000000683fcd : addps xmm0, xmm2 ; ret
0x0000000000682c56 : addsd xmm0, xmm1 ; add rsp, 0x28 ; ret
0x00000000006824dd : addsd xmm0, xmm1 ; add rsp, 8 ; ret
0x0000000000683fcc : addsd xmm0, xmm2 ; ret
0x00000000007bb660 : and ah, 0xf0 ; call rsp
0x0000000000404051 : and ah, ah ; outsb dx, byte ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x58 ; retf
0x00000000007415ad : and ah, bh ; jmp qword ptr [rax]
0x0000000000743e7c : and ah, bl ; in al, dx ; call rax
0x00000000006221a2 : and ah, byte ptr [rbp + 0x3e] ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4847
0x0000000000721bac : and ah, byte ptr [rbp - 0xd] ; in eax, -0xd ; mov dl, 2 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x1ba9
0x00000000004ac2eb : and ah, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000061e0a2 : and ah, byte ptr [rsi + 0x6348003e] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4847
0x00000000006a4fc5 : and ah, byte ptr [rsi + 0xf] ; sub al, dl ; movapd xmm0, xmm2 ; ret
0x0000000000681fe5 : and ah, byte ptr [rsi + 0xf] ; sub cl, al ; add rsp, 0x28 ; ret
0x00000000006c9fb2 : and ah, byte ptr [rsi - 0x3f] ; ret 0xf08
0x0000000000795ac1 : and ah, ch ; call rsp
0x0000000000746d55 : and ah, dh ; jmp qword ptr [rax]
0x00000000006b2af2 : and al, 0 ; add byte ptr [rax + 0x2a0ff300], al ; ret 0x9ba
0x0000000000792c08 : and al, 0 ; add byte ptr [rax], al ; add al, 0x75 ; add al, 0 ; retf -0x1d
0x000000000059912b : and al, 0 ; add byte ptr [rax], al ; add bl, ch ; mov byte ptr [rax - 0x77], cl ; ret
0x00000000006fc240 : and al, 0 ; add byte ptr [rax], al ; add dword ptr [rax + rax], eax ; add al, cl ; ret
0x0000000000789f90 : and al, 0 ; add byte ptr [rax], al ; call 0xffffffffcc509fa6
0x0000000000796240 : and al, 0 ; add byte ptr [rax], al ; cmp al, 0xab ; add al, 0 ; retf -0x1acc
0x00000000007979f8 : and al, 0 ; add byte ptr [rax], al ; hlt ; ret 4
0x00000000007663f0 : and al, 0 ; add byte ptr [rax], al ; in al, dx ; lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; ret 0xd5d0
0x0000000000750ff0 : and al, 0 ; add byte ptr [rax], al ; in al, dx ; pop rax ; add byte ptr [rax], al ; xchg eax, edx ; retf
0x0000000000767a70 : and al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x0000000000792a68 : and al, 0 ; add byte ptr [rax], al ; jae 0x792a7c ; add dh, dl ; ret 0xffe3
0x0000000000754880 : and al, 0 ; add byte ptr [rax], al ; jl 0x75481f ; add byte ptr [rax], al ; retf -0x30d2
0x00000000007662c0 : and al, 0 ; add byte ptr [rax], al ; mov esp, 0xe80001ab ; retf
0x00000000007682a8 : and al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000007b7960 : and al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 6
0x00000000007a7a58 : and al, 0 ; add byte ptr [rax], al ; push rsp ; ret
0x000000000075b930 : and al, 0 ; add byte ptr [rax], al ; sub al, 2 ; add dword ptr [rax], eax ; retf -0x2eda
0x0000000000750f88 : and al, 0 ; add byte ptr [rax], al ; test byte ptr [rax], bl ; add dh, ah ; retf -0x33
0x0000000000777a98 : and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x000000000074dbbd : and al, 0 ; add byte ptr [rax], bl ; mov cs, esp ; jmp qword ptr [rbx]
0x00000000007f8cbd : and al, 0 ; add byte ptr [rsi + rdx*8], bh ; add ecx, edx ; add eax, dword ptr [rax] ; ret 0x502
0x000000000043afae : and al, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000006ce14d : and al, 0 ; je 0x6ce15d ; ret
0x000000000043293e : and al, 0 ; leave ; ret
0x00000000004740dd : and al, 0 ; mov rax, qword ptr [rip + 0x58e7fa] ; call rax
0x000000000043a301 : and al, 0 ; mov rax, qword ptr [rip + 0x5c85d6] ; call rax
0x000000000043a02b : and al, 0 ; mov rax, qword ptr [rip + 0x5c88ac] ; call rax
0x000000000043961b : and al, 0 ; mov rax, qword ptr [rip + 0x5c92bc] ; call rax
0x0000000000438241 : and al, 0 ; mov rax, qword ptr [rip + 0x5ca696] ; call rax
0x0000000000437fc2 : and al, 0 ; mov rax, qword ptr [rip + 0x5ca915] ; call rax
0x0000000000437d45 : and al, 0 ; mov rax, qword ptr [rip + 0x5cab92] ; call rax
0x00000000004376a2 : and al, 0 ; mov rax, qword ptr [rip + 0x5cb235] ; call rax
0x0000000000436683 : and al, 0 ; mov rax, qword ptr [rip + 0x5cc254] ; call rax
0x00000000004359c7 : and al, 0 ; mov rax, qword ptr [rip + 0x5ccf10] ; call rax
0x00000000004357dc : and al, 0 ; mov rax, qword ptr [rip + 0x5cd0fb] ; call rax
0x000000000043466a : and al, 0 ; mov rax, qword ptr [rip + 0x5ce26d] ; call rax
0x000000000044074c : and al, 0 ; nop ; leave ; ret
0x00000000007cac7e : and al, 0 ; ret
0x00000000007d7d2c : and al, 0 ; ret 0x1b
0x0000000000668f91 : and al, 0 ; retf 0x3b9a
0x00000000005280cd : and al, 0x10 ; add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x28 ; ret
0x00000000006cc9f6 : and al, 0x10 ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8148
0x0000000000527f8a : and al, 0x10 ; add ebx, ebp ; mov cs, word ptr [rax - 0x77] ; ret
0x0000000000677694 : and al, 0x10 ; add rsp, 0x28 ; ret
0x00000000006a5667 : and al, 0x10 ; add rsp, 0x38 ; ret
0x000000000051ffbb : and al, 0x10 ; call 0x51c2c4
0x0000000000555a85 : and al, 0x10 ; call rax
0x00000000006a59a3 : and al, 0x10 ; faddp st(1) ; add rsp, 0x48 ; ret
0x00000000006a5a63 : and al, 0x10 ; fsubrp st(1) ; add rsp, 0x48 ; ret
0x00000000006c14ec : and al, 0x10 ; mov edx, 0x730d00 ; call rax
0x000000000054393e : and al, 0x10 ; mov rbx, rax ; xor eax, eax ; call 0x67fb5b
0x00000000005121a8 : and al, 0x10 ; mov rdi, r12 ; call rax
0x00000000006c23d8 : and al, 0x10 ; mov rdi, rbp ; call rax
0x00000000006d4a95 : and al, 0x10 ; mov rsi, qword ptr [r15] ; call r14
0x00000000005438a5 : and al, 0x10 ; xor eax, eax ; call 0x67fb56
0x00000000005438b1 : and al, 0x10 ; xor eax, eax ; call 0x67fb58
0x000000000058c156 : and al, 0x13 ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x00000000006943b1 : and al, 0x14 ; add rsp, 0x28 ; ret
0x00000000006cfe83 : and al, 0x14 ; add rsp, 0x38 ; ret
0x000000000056c1c1 : and al, 0x15 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000074cc6c : and al, 0x15 ; add byte ptr [rax], al ; rcr byte ptr [rcx - 0x34], 1 ; call qword ptr [rsi]
0x00000000005722f1 : and al, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000066262f : and al, 0x17 ; add byte ptr [rax], al ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x0000000000665f51 : and al, 0x17 ; add byte ptr [rax], al ; or bl, dh ; ret
0x0000000000665ea4 : and al, 0x17 ; add byte ptr [rax], al ; pop r13 ; pop r14 ; ret
0x00000000004fe67c : and al, 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000068209e : and al, 0x18 ; add rsp, 0x28 ; ret
0x00000000006cfea4 : and al, 0x18 ; add rsp, 0x38 ; ret
0x00000000005349a5 : and al, 0x18 ; call rax
0x0000000000554519 : and al, 0x18 ; mov rdi, rbp ; mov esi, dword ptr [rsp + 0x24] ; call rax
0x000000000050c0de : and al, 0x1b ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007386cc : and al, 0x1b ; salc ; jmp qword ptr [rax]
0x000000000051232d : and al, 0x1c ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006a47ae : and al, 0x1c ; add rsp, 0x28 ; ret
0x000000000047d740 : and al, 0x20 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050a770 : and al, 0x20 ; add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x38 ; ret
0x00000000006a63a7 : and al, 0x20 ; add rsp, 0x18 ; ret
0x0000000000692b16 : and al, 0x20 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000006a5647 : and al, 0x20 ; add rsp, 0x38 ; ret
0x000000000057caaa : and al, 0x20 ; call 0x4c94f2
0x000000000067dcca : and al, 0x20 ; call rax
0x000000000079da6c : and al, 0x23 ; add eax, 0xe7e75c00 ; call rcx
0x000000000047f1a6 : and al, 0x24 ; add cl, cl ; ret
0x0000000000554520 : and al, 0x24 ; call rax
0x000000000044e2c1 : and al, 0x27 ; add cl, cl ; ret
0x0000000000681f08 : and al, 0x28 ; add rsp, 0x38 ; ret
0x000000000054164b : and al, 0x28 ; add rsp, 0x60 ; pop rbx ; ret
0x0000000000683544 : and al, 0x28 ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000006b1294 : and al, 0x28 ; mov edi, dword ptr [r12 + 0x2c] ; call 0x6adce9
0x000000000041e279 : and al, 0x2a ; add cl, cl ; ret
0x00000000006b1299 : and al, 0x2c ; call 0x6adce4
0x00000000006a5e4c : and al, 0x30 ; add rsp, 0x28 ; ret
0x0000000000690b8d : and al, 0x30 ; jmp 0x690b57
0x0000000000690bdd : and al, 0x30 ; jmp 0x690ba7
0x000000000069115d : and al, 0x30 ; jmp 0x691127
0x00000000006911ad : and al, 0x30 ; jmp 0x691177
0x0000000000529b79 : and al, 0x30 ; mov rdi, rbx ; call rax
0x000000000058e4d9 : and al, 0x31 ; shr al, 0xff ; ret
0x0000000000683092 : and al, 0x38 ; add rsp, 0x48 ; ret
0x0000000000683532 : and al, 0x38 ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000005351aa : and al, 0x38 ; call rax
0x0000000000565e2c : and al, 0x39 ; ret
0x00000000004cb679 : and al, 0x39 ; ret 0x147e
0x00000000004cccdc : and al, 0x39 ; ret 0x267d
0x0000000000508742 : and al, 0x39 ; ret 0x597c
0x0000000000603f93 : and al, 0x39 ; ret 0x8c0f
0x00000000005196a1 : and al, 0x39 ; ret 0xd475
0x000000000042cca8 : and al, 0x3a ; sub dword ptr [rax], eax ; leave ; ret
0x000000000075f42c : and al, 0x3d ; add dword ptr [rax], eax ; not rdx ; jmp qword ptr [rbx]
0x0000000000684bec : and al, 0x3d ; or al, byte ptr [rax] ; ret
0x00000000004fe529 : and al, 0x3f ; add ecx, ebp ; retf
0x000000000057caa0 : and al, 0x40 ; call 0x4c94f2
0x00000000006c0d61 : and al, 0x48 ; add esp, 0x18 ; ret
0x000000000063233e : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006c5061 : and al, 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000006782d1 : and al, 0x48 ; add esp, 0x28 ; ret
0x00000000006d06b4 : and al, 0x48 ; add esp, 0x38 ; ret
0x0000000000538cb3 : and al, 0x48 ; mov dword ptr [rax], edx ; add rsp, 0x18 ; ret
0x00000000006176b0 : and al, 0x48 ; mov eax, dword ptr [rip + 0x3eb230] ; call rax
0x000000000061754d : and al, 0x48 ; mov eax, dword ptr [rip + 0x3eb393] ; call rax
0x0000000000616be2 : and al, 0x48 ; mov eax, dword ptr [rip + 0x3ebcfe] ; call rax
0x0000000000616a7f : and al, 0x48 ; mov eax, dword ptr [rip + 0x3ebe61] ; call rax
0x00000000004a132c : and al, 0x48 ; mov eax, dword ptr [rip + 0x5615b4] ; call rax
0x000000000049ffb2 : and al, 0x48 ; mov eax, dword ptr [rip + 0x56292e] ; call rax
0x000000000047e59f : and al, 0x48 ; mov eax, dword ptr [rip + 0x584341] ; call rax
0x0000000000470d5c : and al, 0x48 ; mov eax, dword ptr [rip + 0x591b84] ; call rax
0x000000000046fba0 : and al, 0x48 ; mov eax, dword ptr [rip + 0x592d40] ; call rax
0x000000000046705c : and al, 0x48 ; mov eax, dword ptr [rip + 0x59b884] ; call rax
0x0000000000465ea0 : and al, 0x48 ; mov eax, dword ptr [rip + 0x59ca40] ; call rax
0x000000000045fbea : and al, 0x48 ; mov eax, dword ptr [rip + 0x5a2cf6] ; call rax
0x000000000045d986 : and al, 0x48 ; mov eax, dword ptr [rip + 0x5a4f5a] ; call rax
0x000000000044f334 : and al, 0x48 ; mov eax, dword ptr [rip + 0x5b35ac] ; call rax
0x000000000044cd70 : and al, 0x48 ; mov eax, dword ptr [rip + 0x5b5b70] ; call rax
0x0000000000445b19 : and al, 0x48 ; mov eax, dword ptr [rip + 0x5bcdc7] ; call rax
0x0000000000445ab6 : and al, 0x48 ; mov eax, dword ptr [rip + 0x5bce2a] ; call rax
0x00000000004459e8 : and al, 0x48 ; mov eax, dword ptr [rip + 0x5bcef8] ; call rax
0x0000000000443396 : and al, 0x48 ; mov eax, dword ptr [rip + 0x5bf54a] ; call rax
0x000000000044333e : and al, 0x48 ; mov eax, dword ptr [rip + 0x5bf5a2] ; call rax
0x000000000044328d : and al, 0x48 ; mov eax, dword ptr [rip + 0x5bf653] ; call rax
0x000000000044322f : and al, 0x48 ; mov eax, dword ptr [rip + 0x5bf6b1] ; call rax
0x000000000044273a : and al, 0x48 ; mov eax, dword ptr [rip + 0x5c01a6] ; call rax
0x000000000043ecee : and al, 0x48 ; mov edi, eax ; call 0x43af02
0x000000000045aac3 : and al, 0x48 ; mov edi, eax ; call 0x457516
0x00000000004640dc : and al, 0x48 ; mov edi, eax ; call 0x4603cc
0x000000000046dddc : and al, 0x48 ; mov edi, eax ; call 0x46a0cc
0x000000000049e180 : and al, 0x48 ; mov edi, eax ; call 0x49a448
0x00000000005306a4 : and al, 0x48 ; mov edi, ebx ; call rax
0x000000000047b87c : and al, 0x4d ; mov edx, esi ; mov rdi, rax ; call 0x47837f
0x0000000000592db9 : and al, 0x50 ; mov rdx, rax ; call r8
0x00000000006d2729 : and al, 0x58 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x00000000006a5a74 : and al, 0x5b ; or byte ptr [rax], al ; add rsp, 0x48 ; ret
0x000000000076136c : and al, 0x5c ; add dword ptr [rax], eax ; not ebx ; call rbx
0x00000000006d0b8b : and al, 0x60 ; add dword ptr [rcx], edi ; ror dword ptr [rdi], cl ; pushfq ; ret 0xb60f
0x00000000005361c2 : and al, 0x60 ; call 0x672404
0x0000000000540763 : and al, 0x60 ; ret 0x6f
0x0000000000683a15 : and al, 0x66 ; xorps xmm0, xmm2 ; add rsp, 0x18 ; ret
0x000000000056504a : and al, 0x70 ; add byte ptr [rcx], dh ; shr al, 0xa6 ; ret 0x11
0x000000000056473d : and al, 0x70 ; add byte ptr [rcx], dh ; shr al, 0xb3 ; retf
0x0000000000592f41 : and al, 0x70 ; call rax
0x00000000005bea0e : and al, 0x71 ; add al, ch ; retf 0xd11
0x00000000006884ba : and al, 0x75 ; call r8
0x0000000000723236 : and al, 0x7b ; retf
0x00000000006c4d6b : and al, 0x80 ; add byte ptr [rax], al ; add al, bl ; retf -0x3e22
0x00000000005c6fde : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000057626e : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xb60f
0x000000000057d051 : and al, 0x83 ; ret
0x00000000006678f6 : and al, 0x83 ; ret 0x8901
0x00000000004c4108 : and al, 0x83 ; rol byte ptr [rcx], 0x39 ; ret 0x2674
0x0000000000773c2c : and al, 0x85 ; add al, byte ptr [rax] ; push rax ; je 0x773c15 ; jmp qword ptr [rdx]
0x0000000000763e2c : and al, 0x87 ; add dword ptr [rax], eax ; ret 0xd52e
0x00000000006c65ac : and al, 0x88 ; add byte ptr [rax], al ; add al, ch ; retf -0xa
0x00000000007e84cf : and al, 0x89 ; add cl, ah ; xor eax, dword ptr [rdi] ; retf
0x00000000005a1fb1 : and al, 0x89 ; ret
0x00000000006c4f40 : and al, 0x89 ; ret 0x58e8
0x00000000006c9701 : and al, 0x89 ; ret 0x8948
0x00000000006cd9eb : and al, 0x89 ; ret 0xe083
0x000000000061ba22 : and al, 0x8b ; add byte ptr [rcx], bh ; ret 0x1f75
0x000000000051969e : and al, 0x8b ; and al, 0x39 ; ret 0xd475
0x000000000047c834 : and al, 0x8b ; and byte ptr [r9], dil ; ret 0x1b7c
0x000000000047c814 : and al, 0x8b ; and byte ptr [r9], dil ; ret 0x538b
0x000000000047c1c8 : and al, 0x8b ; and byte ptr [rax], al ; nop ; leave ; ret
0x00000000005bc75e : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000069f395 : and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], al ; retf 0x2374
0x0000000000774d2c : and al, 0x96 ; add al, byte ptr [rax] ; nop ; mov bl, 0xdb ; call qword ptr [rax]
0x0000000000593019 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000077546c : and al, 0x9d ; add al, byte ptr [rax] ; loop 0x775455 ; call rdi
0x00000000005ed592 : and al, 0xa ; add byte ptr [rax + 0x29], cl ; ret
0x00000000006ccfa1 : and al, 0xa ; add rsp, 0x28 ; ret
0x000000000069779c : and al, 0xa0 ; add al, ch ; ret 0xfe8e
0x00000000006d2e6b : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000589862 : and al, 0xa0 ; ret 0x70
0x0000000000785a2c : and al, 0xa3 ; add eax, dword ptr [rax] ; shr ch, 0xdf ; call qword ptr [rbx]
0x0000000000537f6e : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050adfa : and al, 0xa8 ; add dword ptr [rbp + 0x4d], esi ; mov rsi, rsp ; call rax
0x0000000000525ea2 : and al, 0xa8 ; add dword ptr [rbp + 0x61], esi ; mov rsi, rsp ; call rax
0x000000000078632c : and al, 0xac ; add eax, dword ptr [rax] ; xor cl, 0xdf ; jmp qword ptr [rcx]
0x00000000007a642c : and al, 0xad ; add eax, 0xeb7e3000 ; call qword ptr [rdx]
0x000000000075676c : and al, 0xb0 ; add byte ptr [rax], al ; cwde ; mov al, 0xcf ; call rsp
0x0000000000766b6c : and al, 0xb4 ; add dword ptr [rax], eax ; jle 0x766b85 ; salc ; call rsp
0x0000000000756c2c : and al, 0xb5 ; add byte ptr [rax], al ; xchg eax, edx ; ret
0x00000000006b8023 : and al, 0xb8 ; adc eax, 0xf6000000 ; ret 0xf04
0x00000000007a742c : and al, 0xbd ; add eax, 0xebfdc000 ; jmp qword ptr [rcx]
0x00000000006d3f5b : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x00000000006d108b : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000006aaf19 : and al, 0xc ; add rsp, 0x18 ; ret
0x00000000006c4302 : and al, 0xc ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000694371 : and al, 0xc ; add rsp, 0x28 ; ret
0x00000000006cfad4 : and al, 0xc ; add rsp, 0x38 ; ret
0x00000000006c7db3 : and al, 0xc ; mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000006cd4a4 : and al, 0xc ; mov dword ptr [rbx], edx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004e2967 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf -0x76b8
0x000000000079796c : and al, 0xc2 ; add al, 0 ; pop rax ; xchg eax, ebx ; in eax, -1 ; retf 1
0x0000000000537c2a : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000068e0b8 : and al, 0xc8 ; add dword ptr [rax], eax ; nop dword ptr [rax] ; ret
0x000000000076802c : and al, 0xc9 ; add dword ptr [rax], eax ; adc dh, byte ptr [rbp - 0x29] ; jmp qword ptr [rbx]
0x00000000007a822c : and al, 0xcb ; add eax, 0xec28fc00 ; jmp qword ptr [rcx]
0x00000000007ca1d5 : and al, 0xd ; add al, 0 ; add byte ptr [rdi + rbx], dh ; retf
0x000000000060ec46 : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf -0x76b8
0x00000000006a5b46 : and al, 0xd8 ; fld xword ptr [rsp - 0x28] ; ret
0x0000000000681476 : and al, 0xd8 ; lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000006cbaf7 : and al, 0xd8 ; mov rdx, qword ptr [rsp - 0x20] ; ret
0x00000000006a5b4a : and al, 0xd8 ; ret
0x000000000077b8f9 : and al, 0xdd ; call rcx
0x000000000077952c : and al, 0xde ; add al, byte ptr [rax] ; ror al, 0xdc ; jmp qword ptr [rdx]
0x000000000059ee68 : and al, 0xe ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006aaeea : and al, 0xe ; add rsp, 0x18 ; ret
0x0000000000757bd8 : and al, 0xe0 ; iretd ; jmp qword ptr [rax]
0x00000000006cbafc : and al, 0xe0 ; ret
0x00000000007a9b2c : and al, 0xe4 ; add eax, 0xecab3000 ; call qword ptr [rax]
0x0000000000740b45 : and al, 0xe6 ; call qword ptr [rax]
0x0000000000799269 : and al, 0xe6 ; call rdi
0x0000000000740b35 : and al, 0xe6 ; jmp rax
0x0000000000799e2c : and al, 0xe7 ; add al, 0 ; xor byte ptr [rax - 0x1a], bl ; call qword ptr [rdx]
0x00000000006a56d6 : and al, 0xe8 ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000606ba3 : and al, 0xe8 ; mov edx, 0x12 ; ret
0x0000000000507dcd : and al, 0xe8 ; mov qword ptr [rdi], rax ; ret
0x00000000006cbb2f : and al, 0xe8 ; mov rdx, qword ptr [rsp - 0x10] ; ret
0x00000000006a4fda : and al, 0xe8 ; movapd xmm0, xmm2 ; ret
0x00000000005cc3e7 : and al, 0xe8 ; ret
0x000000000051b81f : and al, 0xe8 ; retf
0x000000000063bfa4 : and al, 0xe8 ; retf -0x28e
0x0000000000572a5c : and al, 0xe9 ; dec dword ptr [rax - 0x77] ; ret
0x000000000075a16c : and al, 0xea ; add byte ptr [rax], al ; mov dh, 0x90 ; sar bh, 1 ; ret
0x000000000079a22c : and al, 0xeb ; add al, 0 ; ret 0xffe6
0x00000000006aaeba : and al, 0xf ; add rsp, 0x18 ; ret
0x00000000006c0da1 : and al, 0xf ; mov edx, 0x730d50 ; call rax
0x000000000067b26f : and al, 0xf ; ret
0x00000000006d4e55 : and al, 0xf ; ret 0x8348
0x00000000006a2ff5 : and al, 0xf ; scasd eax, dword ptr [rdi] ; ret 0x148
0x00000000005c57c8 : and al, 0xf ; test byte ptr [rdx + rax], dl ; add byte ptr [rax + 0x63], cl ; ret
0x00000000006c519f : and al, 0xf ; xchg eax, ebp ; ret 0xc085
0x0000000000682ada : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000682ae0 : and al, 0xf0 ; ret
0x000000000079ab2c : and al, 0xf4 ; add al, 0 ; xor cl, 0xe6 ; jmp qword ptr [rcx]
0x00000000007479d5 : and al, 0xf5 ; call rax
0x0000000000405218 : and al, 0xf5 ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000079ae2c : and al, 0xf7 ; add al, 0 ; add byte ptr [rdi], al ; jmp qword ptr [rcx]
0x00000000007aae2c : and al, 0xf7 ; add eax, 0xece03000 ; jmp qword ptr [rdi]
0x0000000000748ebd : and al, 0xf7 ; jmp rax
0x0000000000722cfd : and al, 0xfd ; jb 0x722d09 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x376a
0x0000000000543b27 : and al, 1 ; add byte ptr [rax], al ; add al, ch ; lahf ; retf
0x000000000062e3d5 : and al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000006cbbf2 : and al, 1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000529422 : and al, 1 ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000074b82c : and al, 1 ; add byte ptr [rax], al ; sub al, 0xe8 ; retf
0x000000000075dbc5 : and al, 1 ; add byte ptr [rdi + rbp*8 - 0x2f], al ; call qword ptr [rdx]
0x0000000000506fc8 : and al, 1 ; pop rbx ; ret
0x0000000000506c9c : and al, 1 ; ret
0x00000000006a00a2 : and al, 2 ; sub rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000007dba2c : and al, 3 ; ret 0x505
0x00000000007f1179 : and al, 3 ; retf -0x23f9
0x0000000000677cf1 : and al, 4 ; add rsp, 0x28 ; ret
0x00000000006cfe64 : and al, 4 ; add rsp, 0x38 ; ret
0x00000000006d10e4 : and al, 4 ; test al, 1 ; jne 0x6d10fd ; mov rsi, rsp ; call rax
0x00000000006cd0c1 : and al, 5 ; add rsp, 0x28 ; ret
0x00000000007d0927 : and al, 5 ; ret 0x25
0x000000000065c17b : and al, 6 ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x00000000006cd031 : and al, 6 ; add rsp, 0x28 ; ret
0x00000000007d0921 : and al, 6 ; nop ; and dword ptr [rax], eax ; in eax, dx ; and al, 5 ; ret 0x25
0x00000000007f2d3a : and al, 6 ; ret 0x1d7
0x0000000000690dda : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000668f99 : and al, 8 ; add rsp, 0x18 ; ret
0x00000000006c4444 : and al, 8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000677cd1 : and al, 8 ; add rsp, 0x28 ; ret
0x00000000006cfab4 : and al, 8 ; add rsp, 0x38 ; ret
0x000000000067adab : and al, 8 ; and al, byte ptr [rbx + 0x4c0f09f8] ; ret 0x9848
0x000000000065cf43 : and al, 8 ; call rax
0x0000000000684042 : and al, 8 ; fldln2 ; fxch st(1) ; fyl2x ; ret
0x0000000000684032 : and al, 8 ; fucompi st(0) ; setp al ; ret
0x000000000055b20e : and al, 8 ; mov esi, ebx ; call 0x557436
0x00000000004780c9 : and al, 8 ; mov rax, qword ptr [rip + 0x58a816] ; call rax
0x0000000000513a52 : and al, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000066ba71 : and al, 8 ; mov rax, rdx ; test al, 1 ; jne 0x66baa5 ; call rax
0x000000000050b6b4 : and al, 8 ; mov rsi, r14 ; call 0x687957
0x000000000068d8c6 : and al, 8 ; pop rbx ; pop rbp ; pop r12 ; jmp 0x689ba8
0x000000000068d8c5 : and al, 8 ; pop rbx ; pop rbp ; pop r12 ; jmp 0x689ba9
0x00000000006cce01 : and al, 9 ; add rsp, 0x28 ; ret
0x000000000073bf6c : and al, al ; fdivp st(7) ; push rax ; fld qword ptr [rbx] ; add byte ptr [rax], ah ; ret
0x00000000006894f0 : and al, al ; je 0x6894fc ; ret
0x0000000000757860 : and al, bl ; iretd ; call rsp
0x000000000067b328 : and al, byte ptr [r11 + 0x490f23c3] ; ret
0x00000000007d48f3 : and al, byte ptr [rax] ; add ah, al ; or dword ptr [rsi], eax ; test byte ptr [rax + rax], dl ; retf 0x1e09
0x00000000007f22ad : and al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004fc695 : and al, byte ptr [rax] ; add byte ptr [rsi - 0x77], ah ; adc byte ptr [r9 - 0x7d], al ; call qword ptr [rdx]
0x00000000005e6f21 : and al, byte ptr [rax] ; add cl, cl ; ret
0x00000000004575c2 : and al, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000007f6754 : and al, byte ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; syscall
0x00000000004503ed : and al, byte ptr [rax] ; leave ; ret
0x00000000007f675a : and al, byte ptr [rax] ; mov eax, 0x228f070f ; add cl, bl ; syscall
0x00000000007f09f3 : and al, byte ptr [rax] ; mov ecx, 0x522 ; retf
0x0000000000492c4d : and al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x56fc8a] ; call rax
0x00000000004917a7 : and al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x571130] ; call rax
0x00000000004915b1 : and al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x571326] ; call rax
0x000000000048fe44 : and al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x572a93] ; call rax
0x000000000048fce0 : and al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x572bf7] ; call rax
0x000000000048ee83 : and al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x573a54] ; call rax
0x000000000045ea12 : and al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x5a3ec5] ; call rax
0x000000000045e6cf : and al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x5a4208] ; call rax
0x000000000045de9e : and al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x5a4a39] ; call rax
0x0000000000408b5c : and al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x5f9d7b] ; call rax
0x000000000045bde4 : and al, byte ptr [rax] ; nop ; leave ; ret
0x00000000007f5897 : and al, byte ptr [rax] ; ret 0x522
0x00000000007d341e : and al, byte ptr [rax] ; retf
0x00000000007f674e : and al, byte ptr [rax] ; wait ; syscall
0x000000000067b329 : and al, byte ptr [rbx + 0x490f23c3] ; ret
0x000000000067c029 : and al, byte ptr [rbx + 0x4c0f06f8] ; ret 0x9848
0x000000000067adad : and al, byte ptr [rbx + 0x4c0f09f8] ; ret 0x9848
0x000000000061aac4 : and al, byte ptr [rbx + 0x634801c3] ; ret
0x000000000068c392 : and al, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000722e79 : and al, byte ptr [rbx] ; mov edx, 0x8d69e067 ; xlatb ; retf
0x00000000007f23d5 : and al, byte ptr [rbx] ; ret
0x00000000007f1fdd : and al, byte ptr [rbx] ; ret 0x508
0x00000000007e362c : and al, byte ptr [rbx] ; ret 0x50f
0x00000000007f2495 : and al, byte ptr [rbx] ; std ; xor al, 5 ; ret 0x3935
0x00000000006ac317 : and al, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x000000000060f0a2 : and al, byte ptr [rdi] ; add byte ptr [rax - 0x7d], cl ; cli ; or ecx, dword ptr [rax - 0x77] ; ret
0x000000000076d9ad : and al, byte ptr [rdx] ; add byte ptr [rax + 0x67], bl ; leave ; call qword ptr [rdx]
0x0000000000736561 : and al, byte ptr [rdx] ; add dh, cl ; ret
0x0000000000498457 : and al, byte ptr fs:[rax] ; leave ; ret
0x000000000056bc8e : and al, ch ; in al, dx ; ret
0x000000000059581b : and al, ch ; outsd dx, dword ptr [rsi] ; ret 0x10
0x00000000006b9b30 : and al, ch ; pop rdx ; loope 0x6b9b3c ; dec dword ptr [rax - 0x77] ; ret 0xb60f
0x0000000000595854 : and al, ch ; ret 0x10
0x000000000059a450 : and al, ch ; retf -0x1953
0x0000000000630880 : and al, ch ; retf -0xdc9
0x00000000004f6c74 : and al, ch ; xor ebx, dword ptr ss:[rcx] ; add bl, ch ; ret
0x0000000000758bd1 : and al, dl ; jmp qword ptr [rax]
0x000000000062268a : and al, dl ; or dword ptr [rax], eax ; leave ; ret
0x00000000006894ef : and al, r8b ; je 0x6894fd ; ret
0x0000000000592fad : and bh, ah ; dec dword ptr [rax - 0x77] ; ret
0x00000000007fa489 : and bh, al ; xchg eax, ebx ; add dword ptr [rax], eax ; retf
0x000000000066ba79 : and bh, bh ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000073c2ed : and bh, bl ; jmp qword ptr [rax]
0x0000000000543a0a : and bh, byte ptr [rdi + rdi*8 + 0x58b48ff] ; retf
0x00000000006206a2 : and bh, byte ptr [rsi] ; add bh, bh ; ror cl, 1 ; ret
0x000000000074a6cd : and bh, cl ; call rax
0x0000000000754561 : and bh, cl ; call rsp
0x0000000000791a61 : and bl, ah ; jmp qword ptr [rax]
0x0000000000739375 : and bl, al ; call qword ptr [rax]
0x000000000073bf74 : and bl, al ; fdivp st(7) ; test al, 0xdd ; add eax, dword ptr [rax] ; ret
0x000000000073c325 : and bl, bh ; call qword ptr [rax]
0x00000000007c2abf : and bl, bl ; or al, byte ptr [rax] ; ret 0x7102
0x000000000043066f : and bl, byte ptr [rbp] ; call rax
0x00000000005b71c6 : and bl, byte ptr [rcx - 0x76b7fff4] ; ret
0x00000000007e3264 : and bl, byte ptr [rcx] ; ret
0x00000000004de439 : and bl, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004ec613 : and bl, byte ptr [rip + 0x58b4800] ; ret
0x000000000073ac1d : and bl, ch ; jmp qword ptr [rax]
0x00000000006d9718 : and bl, cl ; lahf ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; retf
0x00000000007457cc : and bl, cl ; out dx, eax ; ljmp ptr [rax] ; out 6, al ; add al, al ; retf
0x00000000005a2d77 : and bl, dh ; jo 0x5a2d83 ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000005426b9 : and byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000054ae16 : and byte ptr [r13 - 0x3f60f040], r8b ; ret
0x0000000000506b81 : and byte ptr [r13 - 0x3f6bf040], r8b ; ret
0x0000000000528848 : and byte ptr [r8 + 0x39], r9b ; ret 0xb174
0x000000000052b18c : and byte ptr [r8 + r9 + 0x48], r14b ; add esp, 8 ; ret
0x00000000006a6af9 : and byte ptr [r8 + rcx*4 + 0x4d], r8b ; ret 0x8589
0x0000000000670c59 : and byte ptr [r8 - 0x39], r9b ; ret
0x0000000000557375 : and byte ptr [r8 - 0x7b], cl ; sal byte ptr [rdi + rsi + 0x48], 0x39 ; ret 0xef75
0x00000000005412c7 : and byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; nop ; ret
0x000000000047c836 : and byte ptr [r9], dil ; ret 0x1b7c
0x000000000047c816 : and byte ptr [r9], dil ; ret 0x538b
0x00000000006b24e4 : and byte ptr [r9], r8b ; add byte ptr [rax], al ; add byte ptr [rdi + 0x44], bh ; ret
0x000000000058e71c : and byte ptr [rax + 0x14], ah ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b9d59 : and byte ptr [rax + 0x39], cl ; ret 0x1675
0x00000000004b9c03 : and byte ptr [rax + 0x39], cl ; ret 0x1975
0x0000000000528821 : and byte ptr [rax + 0x39], cl ; ret 0x2875
0x00000000004b9e10 : and byte ptr [rax + 0x39], cl ; ret 0x5475
0x00000000004b9c50 : and byte ptr [rax + 0x39], cl ; ret 0x6975
0x00000000004bc2ef : and byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000005cb68a : and byte ptr [rax + 0x39], cl ; ret 0x8c0f
0x0000000000528849 : and byte ptr [rax + 0x39], cl ; ret 0xb174
0x00000000006ac16e : and byte ptr [rax + 0x39], cl ; salc ; setb al ; ret
0x000000000051327d : and byte ptr [rax + 0x48177501], ch ; add esp, 8 ; jmp rax
0x000000000050442e : and byte ptr [rax + 0x481b7501], bpl ; mov edi, ebx ; call rax
0x000000000050442f : and byte ptr [rax + 0x481b7501], ch ; mov edi, ebx ; call rax
0x00000000006d9098 : and byte ptr [rax + 0x6d], dl ; add byte ptr [rax], al ; cwde ; retf 0x9f
0x00000000004f374a : and byte ptr [rax + 0x7de8006e], ah ; ret
0x00000000006c839d : and byte ptr [rax + 9], cl ; ret
0x00000000006a1668 : and byte ptr [rax + 9], cl ; retf -0x2677
0x000000000053ede6 : and byte ptr [rax + 9], cl ; retf 0x948
0x00000000006cb047 : and byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000007e9ed1 : and byte ptr [rax + rbp*4], dl ; and dword ptr [rax], eax ; retf 0x520
0x000000000052b18d : and byte ptr [rax + rcx + 0x48], dh ; add esp, 8 ; ret
0x00000000006a6afa : and byte ptr [rax + rcx*4 + 0x4d], al ; ret 0x8589
0x000000000074528c : and byte ptr [rax - 0x11], cl ; call qword ptr [rax]
0x000000000073b044 : and byte ptr [rax - 0x23], dh ; jmp qword ptr [rax]
0x0000000000670c5a : and byte ptr [rax - 0x39], cl ; ret
0x0000000000528845 : and byte ptr [rax - 0x75], cl ; and byte ptr [r8 + 0x39], r9b ; ret 0xb174
0x000000000052881d : and byte ptr [rax - 0x75], cl ; and byte ptr [rax + 0x39], cl ; ret 0x2875
0x0000000000503383 : and byte ptr [rax - 0x75], cl ; je 0x5033b4 ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000559db0 : and byte ptr [rax - 0x75], cl ; je 0x559de1 ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000005636f2 : and byte ptr [rax - 0x75], cl ; je 0x563723 ; cmp byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000056380b : and byte ptr [rax - 0x75], cl ; je 0x56383c ; or byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000005fb565 : and byte ptr [rax - 0x75], cl ; je 0x5fb596 ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000610141 : and byte ptr [rax - 0x75], cl ; je 0x610172 ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000595850 : and byte ptr [rax - 0x75], cl ; jge 0x59587c ; call 0x6a1a97
0x00000000004fd37a : and byte ptr [rax - 0x75], cl ; jl 0x4fd3ab ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000004fe3b5 : and byte ptr [rax - 0x75], cl ; jl 0x4fe3e6 ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000004ff1e5 : and byte ptr [rax - 0x75], cl ; jl 0x4ff216 ; sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000500c69 : and byte ptr [rax - 0x75], cl ; jl 0x500c9a ; sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000658715 : and byte ptr [rax - 0x75], cl ; jl 0x658746 ; sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000595817 : and byte ptr [rax - 0x75], cl ; jnp 0x595843 ; call 0x6a1a97
0x00000000004fe68f : and byte ptr [rax - 0x77], cl ; ret
0x000000000053edad : and byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000053ed71 : and byte ptr [rax - 0x77], cl ; ret 0xb848
0x000000000063b9f7 : and byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000006d0b65 : and byte ptr [rax - 0x77], cl ; ret 0xd889
0x00000000004cc6c2 : and byte ptr [rax - 0x77], cl ; retf -0x2d77
0x00000000004505d4 : and byte ptr [rax - 0x77], cl ; ror cl, 1 ; ret
0x00000000005ef087 : and byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0xe283
0x00000000006d50bf : and byte ptr [rax - 0x7b], cl ; ret 0x840f
0x00000000005568c6 : and byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rbp + 0x48], 0x39 ; ret
0x0000000000557376 : and byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + rsi + 0x48], 0x39 ; ret 0xef75
0x000000000067fcf3 : and byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret 0x1a8
0x00000000005add4e : and byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x000000000053a873 : and byte ptr [rax - 0x7d], cl ; ret
0x0000000000680081 : and byte ptr [rax - 0x7d], cl ; ret 0x3901
0x00000000006d4489 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000563751 : and byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000747cb4 : and byte ptr [rax - 0xb], bl ; jmp qword ptr [rax]
0x000000000068e125 : and byte ptr [rax - 1], bh ; ret
0x00000000005058ea : and byte ptr [rax], ah ; add byte ptr [rax], al ; jg 0x505900 ; xor eax, eax ; ret
0x000000000074a69c : and byte ptr [rax], ah ; stc ; jmp qword ptr [rax]
0x00000000007db44c : and byte ptr [rax], al ; add byte ptr [rax + 0x30], bl ; retf
0x0000000000505654 : and byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf
0x00000000005bab31 : and byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x480f
0x000000000059a2b4 : and byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfebb
0x00000000006d445a : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000005412c8 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; nop ; ret
0x0000000000517214 : and byte ptr [rax], al ; add byte ptr [rax], al ; call 0x403c76
0x0000000000582342 : and byte ptr [rax], al ; add byte ptr [rax], al ; call 0x6be5d6
0x00000000004f44b8 : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000006ce0f7 : and byte ptr [rax], al ; add byte ptr [rax], al ; test edx, edx ; jne 0x6ce111 ; ret
0x00000000006ac24c : and byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000065405c : and byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000005058eb : and byte ptr [rax], al ; add byte ptr [rdi + 8], bh ; xor eax, eax ; ret
0x0000000000478430 : and byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004a38c1 : and byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000050a771 : and byte ptr [rax], al ; je 0x50a782 ; add rsp, 0x38 ; ret
0x0000000000524fc1 : and byte ptr [rax], al ; je 0x524fd2 ; add rsp, 0x38 ; ret
0x000000000055b084 : and byte ptr [rax], al ; je 0x55b095 ; add rsp, 0x38 ; ret
0x000000000056a481 : and byte ptr [rax], al ; je 0x56a492 ; add rsp, 0x38 ; ret
0x0000000000594aa1 : and byte ptr [rax], al ; je 0x594ab2 ; add rsp, 0x38 ; ret
0x00000000005ac4d4 : and byte ptr [rax], al ; je 0x5ac4e5 ; add rsp, 0x38 ; ret
0x0000000000629be4 : and byte ptr [rax], al ; je 0x629bf5 ; add rsp, 0x38 ; ret
0x0000000000471c7d : and byte ptr [rax], al ; leave ; ret
0x00000000004b029c : and byte ptr [rax], al ; mov rax, qword ptr [rip + 0x55263b] ; call rax
0x00000000004b00e8 : and byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5527ef] ; call rax
0x00000000004aecf6 : and byte ptr [rax], al ; mov rax, qword ptr [rip + 0x553be9] ; call rax
0x00000000004860b8 : and byte ptr [rax], al ; mov rax, qword ptr [rip + 0x57c81f] ; call rax
0x0000000000482856 : and byte ptr [rax], al ; mov rax, qword ptr [rip + 0x580081] ; call rax
0x000000000047c1ca : and byte ptr [rax], al ; nop ; leave ; ret
0x00000000007f672a : and byte ptr [rax], al ; or dword ptr [rsi], 0x20d403 ; ret
0x00000000007eb4d0 : and byte ptr [rax], al ; pushfq ; syscall
0x00000000006b226b : and byte ptr [rax], al ; ret
0x00000000007f5813 : and byte ptr [rax], al ; ret 0xf519
0x00000000007e6d4f : and byte ptr [rax], al ; retf
0x000000000053c5a7 : and byte ptr [rax], bl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006c6ec8 : and byte ptr [rax], bl ; jae 0x6c6ed0 ; ret
0x00000000006c9672 : and byte ptr [rax], bl ; jae 0x6c967e ; mov dword ptr [rax + 8], ebx ; pop rbx ; ret
0x0000000000749641 : and byte ptr [rax], cl ; add al, ah ; xchg bh, dh ; jmp qword ptr [rax]
0x00000000005fead8 : and byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000074a794 : and byte ptr [rax], dh ; stc ; call rax
0x00000000006ce15f : and byte ptr [rax], dl ; add byte ptr [rax], al ; ret
0x000000000067ac33 : and byte ptr [rbp + 0x293774c0], al ; ret 0xfa83
0x00000000006a6d2a : and byte ptr [rbp + 0x296174c0], al ; ret 0xfa83
0x0000000000666e1c : and byte ptr [rbp + 0x39], al ; ret 0x840f
0x00000000006a0fd2 : and byte ptr [rbp + 1], cl ; ror byte ptr [rbp - 0x77], 1 ; ret 0xc149
0x00000000005ab0ae : and byte ptr [rbp + rcx], 0x89 ; ret
0x00000000006d148c : and byte ptr [rbp - 0x1f], dh ; ret
0x00000000006a9780 : and byte ptr [rbp - 0x23], dh ; ret
0x000000000054ae17 : and byte ptr [rbp - 0x3f60f040], al ; ret
0x00000000004417c2 : and byte ptr [rbp - 0x3f6bf040], al ; nop ; pop rbp ; ret
0x0000000000506b82 : and byte ptr [rbp - 0x3f6bf040], al ; ret
0x00000000007f3f39 : and byte ptr [rbp - 0x75fffe3f], cl ; ret
0x00000000006d1227 : and byte ptr [rbp - 0x77], dh ; mov eax, 2 ; ret
0x00000000006a8f0a : and byte ptr [rbp - 0xd], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000006a9262 : and byte ptr [rbp - 0xd], dh ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000007466d4 : and byte ptr [rbp - 0xd], dl ; jmp rax
0x00000000007ad415 : and byte ptr [rbx + 0x10730304], al ; ret
0x000000000041a58c : and byte ptr [rbx + 0x2a], al ; add cl, cl ; ret
0x000000000066f84b : and byte ptr [rbx + 0x39db3e05], cl ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000408be8 : and byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000047fd00 : and byte ptr [rbx + 0x41], bl ; pop rsp ; pop rbp ; ret
0x000000000051027a : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000501890 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000007ab071 : and byte ptr [rbx + 0xa410204], al ; ret
0x00000000007aa1b5 : and byte ptr [rbx + 0xa530204], al ; ret
0x00000000007aa155 : and byte ptr [rbx + 0xa5b0204], al ; ret
0x0000000000742314 : and byte ptr [rbx - 0x18], ah ; call qword ptr [rax]
0x00000000006bda8b : and byte ptr [rbx - 0x3d], bl ; nop ; lea eax, dword ptr [rdi + 3] ; ret
0x0000000000507123 : and byte ptr [rbx - 0x3dc6dfba], cl ; sete al ; ret
0x00000000007a1cd2 : and byte ptr [rbx - 0x73fc79fc], al ; add al, byte ptr [rdx] ; xchg eax, ecx ; ret
0x00000000006627bb : and byte ptr [rbx - 0x7cb7fd3e], al ; ret 0x4912
0x00000000007e3282 : and byte ptr [rbx], ah ; call qword ptr [rip + 0x2520ca05]
0x00000000007e6cf0 : and byte ptr [rbx], al ; retf
0x000000000045082c : and byte ptr [rbx], bl ; call rax
0x000000000050fbf7 : and byte ptr [rbx], bl ; outsd dx, dword ptr [rsi] ; add byte ptr [rcx - 0x6f3cf789], cl ; ret
0x00000000007b3c70 : and byte ptr [rbx], ch ; out dx, eax ; jmp qword ptr [rcx]
0x000000000074637c : and byte ptr [rbx], cl ; call rax
0x000000000074516c : and byte ptr [rbx], dh ; out dx, eax ; inc dword ptr [rax] ; ret 6
0x0000000000688a96 : and byte ptr [rcx + 0x29], cl ; ret 0xc031
0x0000000000440542 : and byte ptr [rcx + 0x5c], al ; pop r13 ; pop rbp ; ret
0x000000000052a2a5 : and byte ptr [rcx + rcx*4 + 0x60], cl ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000005b1fbb : and byte ptr [rcx - 0x17dbdbbc], cl ; retf
0x00000000005dd34c : and byte ptr [rcx - 0x1e], ch ; dec dword ptr [rax + 0x63] ; ret
0x00000000006a2069 : and byte ptr [rcx - 0x2ff6b738], cl ; pop rbx ; ret
0x000000000066d479 : and byte ptr [rcx - 0x35f6b737], cl ; pop rbx ; pop r14 ; ret
0x000000000066e916 : and byte ptr [rcx - 0x75], al ; and byte ptr [rcx], r15b ; ret
0x0000000000688759 : and byte ptr [rcx - 0xff6b740], cl ; ret
0x00000000007493d4 : and byte ptr [rcx - 9], dh ; jmp rax
0x00000000007491ac : and byte ptr [rcx - 9], dl ; jmp rax
0x00000000007e6eb2 : and byte ptr [rcx], 0x21 ; add byte ptr [rax], al ; shl byte ptr [rdi], 2 ; retf 0x35
0x00000000006a7b92 : and byte ptr [rcx], 0xa0 ; add al, ch ; retf
0x00000000006ac57c : and byte ptr [rcx], al ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x00000000006b24e5 : and byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi + 0x44], bh ; ret
0x000000000075d79d : and byte ptr [rcx], al ; add byte ptr [rdi + rdx*8 - 0x2f], dh ; jmp rax
0x00000000006a15ab : and byte ptr [rcx], al ; ret 0xca39
0x000000000066db4e : and byte ptr [rcx], bh ; ret
0x000000000047c837 : and byte ptr [rcx], bh ; ret 0x1b7c
0x000000000061ba0c : and byte ptr [rcx], bh ; ret 0x3775
0x000000000047c817 : and byte ptr [rcx], bh ; ret 0x538b
0x000000000043edea : and byte ptr [rcx], bh ; ret 0x8d0f
0x0000000000507126 : and byte ptr [rcx], bh ; ret 0x940f
0x0000000000613da6 : and byte ptr [rcx], bh ; ret 0xb74
0x00000000006a175f : and byte ptr [rcx], ch ; enter 0x948, -0x10 ; ret
0x00000000006c3d92 : and byte ptr [rcx], ch ; ret 0xfa83
0x000000000061ba0b : and byte ptr [rcx], dil ; ret 0x3775
0x000000000043ede9 : and byte ptr [rcx], dil ; ret 0x8d0f
0x0000000000613da5 : and byte ptr [rcx], dil ; ret 0xb74
0x00000000005c267b : and byte ptr [rcx], dl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f07fe : and byte ptr [rcx], dl ; call rax
0x000000000066db4d : and byte ptr [rcx], r15b ; ret
0x0000000000507125 : and byte ptr [rcx], r15b ; ret 0x940f
0x00000000006d0aa6 : and byte ptr [rdi + 0x48], dh ; add esp, 8 ; ret
0x000000000065c3de : and byte ptr [rdi + rcx + 0x48], dh ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000551189 : and byte ptr [rdi + rcx], dh ; ret 0x8d48
0x0000000000740eb4 : and byte ptr [rdi - 0x1a], cl ; call rax
0x00000000007889f0 : and byte ptr [rdi - 0x20], bh ; jmp qword ptr [rcx]
0x000000000073bb14 : and byte ptr [rdi - 0x22], dl ; call qword ptr [rax - 0x3d]
0x0000000000777040 : and byte ptr [rdi - 0x24], ah ; call qword ptr [rdx]
0x000000000053f4b5 : and byte ptr [rdi - 0x76b7ff91], ah ; out dx, eax ; call rax
0x000000000067901c : and byte ptr [rdi - 0x76b7fffb], dh ; ret
0x000000000051501e : and byte ptr [rdi], bpl ; xor eax, eax ; call 0x681302
0x0000000000404122 : and byte ptr [rdi], ch ; xor eax, eax ; call 0x680b93
0x000000000051501f : and byte ptr [rdi], ch ; xor eax, eax ; call 0x681301
0x00000000007bd550 : and byte ptr [rdi], cl ; int1 ; jmp qword ptr [rdx]
0x00000000006c1796 : and byte ptr [rdi], cl ; jae 0x6c17a1 ; mov rdi, rbx ; call rax
0x00000000006c1bc1 : and byte ptr [rdi], cl ; jae 0x6c1bcc ; mov rdi, r14 ; call rcx
0x00000000006c1eb6 : and byte ptr [rdi], cl ; jae 0x6c1ec1 ; mov rdi, rbx ; call rax
0x00000000006c22e4 : and byte ptr [rdi], cl ; jae 0x6c22ef ; mov rdi, rbp ; call rax
0x00000000006c2556 : and byte ptr [rdi], cl ; jae 0x6c2561 ; mov rdi, r15 ; call rax
0x00000000006c2980 : and byte ptr [rdi], cl ; jae 0x6c298b ; mov rdi, r15 ; call rax
0x000000000067cedc : and byte ptr [rdi], cl ; ret
0x00000000005b21cf : and byte ptr [rdi], cl ; ret 0x894c
0x00000000006291b5 : and byte ptr [rdi], cl ; ror qword ptr [r8 + 0x63], 1 ; ror byte ptr [rax - 0x7d], cl ; ret 0x480f
0x00000000005c9304 : and byte ptr [rdi], cl ; ror qword ptr [r8 + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x480f
0x00000000005390ab : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd301
0x00000000006bd3db : and byte ptr [rdi], cl ; xchg eax, esp ; ror byte ptr [rcx], 0xd0 ; ret
0x0000000000746eb4 : and byte ptr [rdi], dh ; hlt ; jmp qword ptr [rax]
0x0000000000665d71 : and byte ptr [rdi], dl ; add byte ptr [rax], al ; pop r14 ; ret
0x0000000000665ee5 : and byte ptr [rdi], dl ; add byte ptr [rax], al ; ret
0x00000000004f8492 : and byte ptr [rdx + 0x6ede40], bh ; mov rdi, rbx ; call rax
0x000000000050b0bf : and byte ptr [rdx + 0x6ef550], bh ; mov rdi, r12 ; call rax
0x000000000050745e : and byte ptr [rdx + 0x6ef550], bh ; mov rdi, rbx ; call rax
0x00000000005074dc : and byte ptr [rdx + 0x6ef560], bh ; mov rdi, rbx ; call rax
0x000000000051416b : and byte ptr [rdx + 0x6f2130], bh ; mov rdi, rbx ; call rax
0x000000000051dd4b : and byte ptr [rdx + 0x6f2690], bh ; mov rdi, rbx ; call rax
0x000000000051ddc4 : and byte ptr [rdx + 0x6f26a0], bh ; mov rdi, rbx ; call rax
0x00000000005384d8 : and byte ptr [rdx + 0x6f9200], bh ; mov rdi, rbx ; call rax
0x0000000000538508 : and byte ptr [rdx + 0x6f92f0], bh ; mov rdi, rbx ; call rax
0x000000000052ee87 : and byte ptr [rdx + 0x6f], bh ; add byte ptr [rax - 0x77], cl ; ja 0x52ee9f ; ret
0x000000000053ea56 : and byte ptr [rdx + 0x6fa4c0], bh ; mov rdi, r15 ; call rax
0x000000000053ea82 : and byte ptr [rdx + 0x6fa4d0], bh ; mov rdi, r15 ; call rax
0x0000000000545fc3 : and byte ptr [rdx + 0x6fa720], bh ; mov rdi, r12 ; call rax
0x00000000005401b4 : and byte ptr [rdx + 0x6fa720], bh ; mov rdi, rbx ; call rax
0x000000000054013b : and byte ptr [rdx + 0x6fa730], bh ; mov rdi, rbx ; call rax
0x00000000005556ce : and byte ptr [rdx + 0x6fe650], bh ; mov rdi, rbx ; call rax
0x0000000000555750 : and byte ptr [rdx + 0x6fe660], bh ; mov rdi, rbx ; call rax
0x0000000000564244 : and byte ptr [rdx + 0x701f80], bh ; mov rdi, rbx ; call rax
0x00000000005641cb : and byte ptr [rdx + 0x701f90], bh ; mov rdi, rbx ; call rax
0x0000000000577adb : and byte ptr [rdx + 0x704400], bh ; mov rdi, r12 ; call rax
0x0000000000586291 : and byte ptr [rdx + 0x7070c0], bh ; mov rdi, rbx ; call rax
0x0000000000588a9b : and byte ptr [rdx + 0x7070d0], bh ; mov rdi, rbx ; call rax
0x00000000005a2183 : and byte ptr [rdx + 0x70e700], bh ; mov rdi, r12 ; call rax
0x00000000005a21f5 : and byte ptr [rdx + 0x70e710], bh ; mov rdi, r12 ; call rax
0x00000000005a7d5b : and byte ptr [rdx + 0x70fa40], bh ; mov rdi, rbx ; call rax
0x00000000005a7dd4 : and byte ptr [rdx + 0x70fa50], bh ; mov rdi, rbx ; call rax
0x000000000062a588 : and byte ptr [rdx + 0x71bbc0], bh ; mov rdi, r12 ; call rax
0x00000000006263ae : and byte ptr [rdx + 0x71bbd0], bh ; mov rdi, rbx ; call rax
0x0000000000626430 : and byte ptr [rdx + 0x71bbe0], bh ; mov rdi, rbx ; call rax
0x000000000074a118 : and byte ptr [rdx + 8], dl ; add byte ptr [rax], al ; ret 0xfff8
0x00000000007b4a50 : and byte ptr [rdx - 0x11], cl ; jmp qword ptr [rbx]
0x0000000000741864 : and byte ptr [rdx - 0x19], dl ; jmp rax
0x0000000000746fac : and byte ptr [rdx - 0xc], cl ; jmp qword ptr [rax]
0x00000000005ed572 : and byte ptr [rdx - 1], bl ; dec ecx ; ret
0x00000000007e3330 : and byte ptr [rdx], 0 ; retf
0x000000000073ac1c : and byte ptr [rdx], 0xdd ; jmp qword ptr [rax]
0x00000000007420fc : and byte ptr [rdx], 0xe8 ; jmp qword ptr [rax]
0x0000000000736560 : and byte ptr [rdx], 2 ; add dh, cl ; ret
0x0000000000736550 : and byte ptr [rdx], ah ; add al, byte ptr [rax] ; xchg eax, edx ; ret 0xffd1
0x000000000074506c : and byte ptr [rdx], ah ; out dx, eax ; jmp qword ptr [rax]
0x000000000074a6cc : and byte ptr [rdx], ah ; stc ; call rax
0x00000000005e07e5 : and byte ptr [rdx], al ; call rax
0x00000000007a78d0 : and byte ptr [rdx], al ; in al, dx ; call qword ptr [rdx]
0x00000000006bfc18 : and byte ptr [rdx], al ; jae 0x6bfc20 ; ret
0x00000000007a6b05 : and byte ptr [rdx], al ; retf 0x180e
0x000000000078eb2d : and byte ptr [rdx], al ; retf 0xe0a
0x00000000007a6cc5 : and byte ptr [rdx], al ; test eax, 0x41180e0a ; ret
0x00000000004607f2 : and byte ptr [rdx], bl ; call rax
0x000000000041e615 : and byte ptr [rdx], ch ; add cl, cl ; ret
0x000000000061e61f : and byte ptr [rdx], cl ; add cl, cl ; ret
0x000000000073ffe9 : and byte ptr [rip - 0x1af15000], al ; call rax
0x00000000004db1b1 : and byte ptr [rip - 0x70410000], dl ; ret 0x6e
0x0000000000747c00 : and byte ptr [rsi + 0x49400007], 0xf5 ; call rax
0x0000000000681a38 : and byte ptr [rsi + 0x72], bh ; add bl, al ; nop dword ptr [rax] ; ret
0x00000000006a4bfb : and byte ptr [rsi + 0xf], ah ; retf
0x0000000000503a2e : and byte ptr [rsi + 1], bh ; mov rdi, rbx ; call rax
0x00000000007407b0 : and byte ptr [rsi + 5], cl ; add al, ah ; ret
0x0000000000743e78 : and byte ptr [rsi + rax], 0x20 ; fsub st(4), st(0) ; call rax
0x00000000007abfed : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000007a8afd : and byte ptr [rsi + rcx + 0x18], cl ; ret
0x00000000007b47ed : and byte ptr [rsi + rcx + 0x18], dh ; ret
0x00000000007b309d : and byte ptr [rsi + rcx + 0x18], dl ; ret
0x0000000000743c04 : and byte ptr [rsi - 0x14], dh ; call rax
0x000000000063fff6 : and byte ptr [rsi - 0x18], bl ; dec dword ptr [rax - 0x77] ; ret
0x000000000076a390 : and byte ptr [rsi - 0x27], ch ; jmp qword ptr [rax]
0x00000000007faecf : and byte ptr [rsi - 0x44fffe42], bh ; ret 0x501
0x000000000052ea02 : and byte ptr [rsi], 0x6f ; add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x000000000065c5b0 : and byte ptr [rsi], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007430e1 : and byte ptr [rsi], al ; add byte ptr [rsi + rax*2 - 0x15], ah ; jmp rax
0x00000000006208aa : and byte ptr [rsi], bh ; add bh, bh ; ror cl, 1 ; ret
0x0000000000420804 : and byte ptr [rsi], bl ; call rax
0x00000000006c1112 : and byte ptr [rsi], cl ; jae 0x6c111a ; call rax
0x00000000006c1202 : and byte ptr [rsi], cl ; jae 0x6c120a ; call rax
0x00000000006c12a2 : and byte ptr [rsi], cl ; jae 0x6c12aa ; call rax
0x00000000006c15e7 : and byte ptr [rsi], cl ; jae 0x6c15ef ; call rax
0x00000000006c1677 : and byte ptr [rsi], cl ; jae 0x6c167f ; call rax
0x00000000006c16d7 : and byte ptr [rsi], cl ; jae 0x6c16df ; call rax
0x0000000000572678 : and byte ptr [rsi], dl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005bab30 : and byte ptr ds:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x480f
0x000000000053c5a6 : and byte ptr es:[rax], bl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005cb14f : and byte ptr gs:[rax - 0x77], cl ; ret
0x0000000000737c1c : and ch, 0xd3 ; call rax
0x000000000079e989 : and ch, al ; call qword ptr [rdi]
0x00000000007420fd : and ch, al ; jmp qword ptr [rax]
0x00000000005fb7e6 : and ch, al ; test byte ptr [rax + 0x1c44c6ff], al ; jmp qword ptr [rdx]
0x0000000000735dd0 : and ch, bh ; add dword ptr [rax], eax ; pop rax ; ret
0x000000000074506d : and ch, bh ; jmp qword ptr [rax]
0x000000000040e4cd : and ch, byte ptr [rbx] ; add cl, cl ; ret
0x0000000000565e76 : and ch, byte ptr [rcx] ; ret
0x00000000004a76aa : and ch, byte ptr [rdi + 0x21] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000763689 : and ch, dl ; call rsp
0x000000000074a2bc : and ch, dl ; clc ; jmp qword ptr [rax]
0x000000000073d94d : and cl, ah ; call qword ptr [rax]
0x000000000078b919 : and cl, ah ; jmp qword ptr [rdi]
0x0000000000744274 : and cl, al ; in eax, dx ; call qword ptr [rax]
0x0000000000677242 : and cl, al ; ret
0x000000000074a69d : and cl, bh ; jmp qword ptr [rax]
0x00000000006a542f : and cl, bl ; retf -0x1525
0x0000000000489daa : and cl, byte ptr [rax + 0x23] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004fd542 : and cl, byte ptr [rax - 0x77] ; ret
0x00000000006c595d : and cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000063c397 : and cl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006359fc : and cl, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000007f646f : and cl, byte ptr [rbx] ; retf 0x522
0x00000000005ed6b5 : and cl, byte ptr [rdx] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004d2cd2 : and cl, byte ptr [rip - 0x70410000] ; ret 0x6e
0x00000000005ed786 : and cl, byte ptr es:[rdx] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000063c396 : and cl, byte ptr ss:[rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000733f75 : and cl, ch ; jmp qword ptr [rax]
0x0000000000748e75 : and dh, bh ; call rax
0x0000000000768848 : and dh, bh ; xlatb ; jmp rdx
0x00000000006c05ea : and dh, byte ptr [rax + rax] ; jmp rax
0x00000000006c065f : and dh, byte ptr [rax + rax] ; pop rbx ; jmp rax
0x00000000006d0997 : and dh, byte ptr [rbx] ; add byte ptr [rcx], bh ; ret
0x00000000007ee14b : and dh, byte ptr [rcx + 0x2820003] ; mov word ptr [rcx], es ; retf
0x0000000000739924 : and dh, byte ptr [rcx - 0x28] ; call qword ptr [rax]
0x00000000006a66b7 : and dh, byte ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000066070d : and dh, byte ptr [rcx] ; rol byte ptr [rbx + 0xb740d3a], 0xf3 ; ret
0x0000000000755540 : and dh, byte ptr [rsi - 0x31] ; call rsp
0x00000000007eb368 : and dh, cl ; and dword ptr [rax], eax ; ret 0x601
0x00000000007ca86c : and dh, dh ; adc byte ptr [rax], al ; retf
0x000000000062c2bb : and dh, dh ; ret 0x7501
0x000000000073c2ec : and dil, bl ; jmp qword ptr [rax]
0x00000000007b2580 : and dl, 0xee ; jmp qword ptr [rax]
0x000000000074a124 : and dl, al ; clc ; lcall ptr [rax + 0x52] ; or byte ptr [rax], al ; ret 0xfff8
0x000000000074992c : and dl, al ; idiv edi ; loopne 0x749969 ; or byte ptr [rax], al ; ret 0xfff7
0x000000000074b6f8 : and dl, bl ; retf
0x000000000064f21a : and dl, byte ptr [rbp + 8] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000451420 : and dl, byte ptr [rbp - 1] ; dec ecx ; ret
0x0000000000465249 : and dl, byte ptr [rbx - 0x76b7ffb5] ; ret 0xbe
0x00000000007f09e7 : and dl, byte ptr [rdi] ; sti ; and dword ptr [rcx], esp ; ret
0x000000000057244f : and dl, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a06d8 : and dl, byte ptr [rsi] ; call rax
0x00000000004be4fb : and dl, ch ; insd dword ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000074a1e4 : and dl, cl ; clc ; push qword ptr [rax + 0x55] ; or byte ptr [rax], al ; nop ; retf -8
0x0000000000736c05 : and dl, dl ; call qword ptr [rax]
0x0000000000736c35 : and dl, dl ; call rax
0x0000000000468c05 : and dword ptr [edx], esp ; add byte ptr [rax - 0x77], cl ; ret
0x000000000055ecc1 : and dword ptr [r8], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000058df1b : and dword ptr [rax + 0x14], ebp ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000661cbd : and dword ptr [rax + rax + 0xf410000], 0xffffff94 ; ret 0x2944
0x00000000006860e9 : and dword ptr [rax + rax], 0 ; add rsp, 8 ; ret
0x00000000004fd6d5 : and dword ptr [rax + rbx], edi ; add byte ptr [rax - 0x77], cl ; ret
0x000000000060fe1c : and dword ptr [rax - 0x77], ecx ; ret
0x000000000058409d : and dword ptr [rax - 0x7d], ecx ; ret
0x00000000006a870b : and dword ptr [rax], eax ; add byte ptr [rsi - 0x70], ah ; pop rbx ; ret
0x000000000046a0bc : and dword ptr [rax], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004b542b : and dword ptr [rax], eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004b5033 : and dword ptr [rax], eax ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000055ecc2 : and dword ptr [rax], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000007d0924 : and dword ptr [rax], eax ; in eax, dx ; and al, 5 ; ret 0x25
0x00000000007f5f42 : and dword ptr [rax], eax ; jmp qword ptr [rcx]
0x00000000004a0279 : and dword ptr [rax], eax ; leave ; ret
0x000000000047347c : and dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x58f45b] ; call rax
0x0000000000468c8f : and dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x599c48] ; call rax
0x0000000000467806 : and dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x59b0d1] ; call rax
0x00000000007e9e82 : and dword ptr [rax], eax ; movsd dword ptr [rdi], dword ptr [rsi] ; syscall
0x000000000046e3a2 : and dword ptr [rax], eax ; nop ; leave ; ret
0x00000000007d35ba : and dword ptr [rax], eax ; ret
0x00000000007eb36a : and dword ptr [rax], eax ; ret 0x601
0x00000000007f57bd : and dword ptr [rax], eax ; ret 0x90d
0x00000000007e9ed4 : and dword ptr [rax], eax ; retf 0x520
0x00000000007e51dc : and dword ptr [rax], eax ; retf 0x60c
0x00000000007f57a6 : and dword ptr [rax], eax ; std ; or cl, byte ptr [rcx] ; ret 0x1e
0x0000000000652548 : and dword ptr [rax], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042dcbb : and dword ptr [rbp + rbx*2], ecx ; call rax
0x000000000045f32b : and dword ptr [rbp - 0x76b7ffdc], esi ; ret
0x00000000005b06f9 : and dword ptr [rbp], eax ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000005b0790 : and dword ptr [rbp], eax ; jmp rax
0x0000000000430706 : and dword ptr [rbp], ebx ; call rax
0x000000000058cc1b : and dword ptr [rbx + 0x14], edi ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044c44b : and dword ptr [rbx + rbx*2], esp ; call rax
0x0000000000520b1b : and dword ptr [rbx + rbx], edi ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006287d5 : and dword ptr [rbx - 0x76b7fffb], ecx ; ret
0x00000000005d0713 : and dword ptr [rbx], eax ; call rax
0x00000000007dbb9d : and dword ptr [rbx], eax ; retf
0x00000000007e3668 : and dword ptr [rbx], eax ; stosb byte ptr [rdi], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; retf 0x512
0x000000000054d9b4 : and dword ptr [rbx], edx ; add bl, ch ; test dword ptr [rax - 0x77], ecx ; ret
0x000000000054f117 : and dword ptr [rbx], edx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007222f3 : and dword ptr [rcx + 0x78], eax ; push rbp ; cdq ; scasd eax, dword ptr [rdi] ; xlatb ; loopne 0x722290 ; retf 0x5cb0
0x00000000006b217b : and dword ptr [rcx + rax + 0x14694800], edi ; and al, 0 ; retf 0x3b9a
0x00000000006ac44b : and dword ptr [rcx], 0x89480001 ; ret 0xc7
0x000000000075d87d : and dword ptr [rcx], eax ; add al, dl ; fcom st(0), st(1) ; jmp rdi
0x000000000049b8bf : and dword ptr [rcx], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000006ac44c : and dword ptr [rcx], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x000000000062c456 : and dword ptr [rcx], ecx ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x00000000004f06ed : and dword ptr [rcx], edx ; call rax
0x00000000007e383a : and dword ptr [rcx], edx ; xchg eax, edi ; sbb byte ptr [rbx], al ; ret
0x00000000005b4809 : and dword ptr [rcx], esi ; xor eax, eax ; call 0x680af3
0x00000000005b4fff : and dword ptr [rcx], esi ; xor eax, eax ; call 0x681301
0x00000000007e6eb3 : and dword ptr [rcx], esp ; add byte ptr [rax], al ; shl byte ptr [rdi], 2 ; retf 0x35
0x00000000007f09ea : and dword ptr [rcx], esp ; ret
0x00000000006ce5a5 : and dword ptr [rdi + rdx*8], eax ; ret
0x00000000004f901b : and dword ptr [rdi - 0x76b7ffe3], esi ; ret
0x00000000005c848f : and dword ptr [rdi - 0x76b7fff5], eax ; ret
0x0000000000513e5e : and dword ptr [rdi], ebp ; mov rdi, rbx ; call rax
0x0000000000513376 : and dword ptr [rdi], ebp ; ret
0x00000000004107bc : and dword ptr [rdi], ebx ; call rax
0x000000000057fa35 : and dword ptr [rdi], ecx ; ret
0x000000000052ce1a : and dword ptr [rdi], ecx ; ror qword ptr [r8 + 0x63], 1 ; ror byte ptr [rax - 0x7d], cl ; ret 0x480f
0x00000000006d111b : and dword ptr [rdi], edx ; xor eax, dword ptr [rax] ; mfence ; ret
0x00000000007e3843 : and dword ptr [rdi], esp ; retf
0x00000000004b76bb : and dword ptr [rdx - 0x2f00ffac], esi ; leave ; ret
0x00000000005e07dc : and dword ptr [rdx], eax ; call rax
0x000000000041e855 : and dword ptr [rdx], ebp ; add cl, cl ; ret
0x00000000005325d0 : and dword ptr [rdx], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004de1eb : and dword ptr [rdx], ebx ; add byte ptr [rcx - 0x77], cl ; ret 0x8949
0x00000000004607d6 : and dword ptr [rdx], ebx ; call rax
0x00000000005ed7c2 : and dword ptr [rdx], ecx ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000468c06 : and dword ptr [rdx], esp ; add byte ptr [rax - 0x77], cl ; ret
0x000000000079d8a5 : and dword ptr [rip - 0x181ce600], eax ; call rsp
0x0000000000630702 : and dword ptr [rip - 0x3b7cb800], edi ; or byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000007f09e4 : and dword ptr [rip - 0x4e8dd64], eax ; and dword ptr [rcx], esp ; ret
0x000000000044b541 : and dword ptr [rsi + 0x23], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005c689a : and dword ptr [rsi + 2], edi ; call rax
0x0000000000517567 : and dword ptr [rsi - 0x76b7ffea], edx ; ret
0x00000000007f5015 : and dword ptr [rsi], ebx ; retf 0x101
0x000000000051d96a : and dword ptr [rsi], edx ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x00000000004a06f9 : and dword ptr [rsi], edx ; call rax
0x000000000046a0bb : and dword ptr gs:[rax], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000005ed847 : and dword ptr gs:[rdx], ecx ; add byte ptr [rax + 0x29], cl ; ret
0x00000000006d4c0a : and eax, 0x10468b48 ; add rsp, 8 ; ret
0x00000000007dba26 : and eax, 0x12058803 ; mul dword ptr [rbx + rax] ; ret 0x505
0x00000000005584d5 : and eax, 0x17c265e8 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050b795 : and eax, 0x1c8fa5e8 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007ed747 : and eax, 0x29b106 ; retf 0xe25
0x000000000067f9c2 : and eax, 0x428b0eeb ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000052ba47 : and eax, 0x48000005 ; mov edi, ebx ; call rax
0x00000000005b05e7 : and eax, 0x48001032 ; mov eax, ebx ; pop rbx ; ret
0x00000000007e38a9 : and eax, 0x525b103 ; ret 0x325
0x0000000000424d73 : and eax, 0x58b4800 ; fistp dword ptr fs:[rbp] ; call rax
0x000000000042e814 : and eax, 0x58b4800 ; ret
0x0000000000424ede : and eax, 0x58b4800 ; stc ; fstp dword ptr [rbp] ; call rax
0x000000000063a2fe : and eax, 0x5c415d5b ; ret
0x00000000006a5bfd : and eax, 0x7279a ; add rsp, 0x28 ; ret
0x00000000005f8609 : and eax, 0x7fffffff ; add rsp, 8 ; ret
0x00000000005b4209 : and eax, 0x89000cd3 ; ret
0x0000000000576d09 : and eax, 0x890010a8 ; ret
0x000000000068c083 : and eax, 0x89480003 ; ret
0x000000000063e66b : and eax, 0x89480004 ; ret
0x000000000060c011 : and eax, 0x8948000b ; ret
0x00000000005ad59f : and eax, 0x8948000d ; ret
0x00000000005cbff0 : and eax, 0x8948000f ; ret
0x000000000058c076 : and eax, 0x89480013 ; ret 0xc7
0x000000000056c00e : and eax, 0x89480015 ; ret
0x00000000005721d1 : and eax, 0x89480016 ; ret
0x000000000050e1e0 : and eax, 0x89480017 ; ret
0x000000000053c07e : and eax, 0x89480018 ; ret
0x000000000049d62f : and eax, 0x8948001e ; ret
0x0000000000746121 : and eax, 0x98700007 ; jmp rax
0x000000000062ac15 : and eax, 0xa9b25e8 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007cac77 : and eax, 0xaf058600 ; add ecx, ebp ; and al, 0 ; ret
0x000000000059dc3d : and eax, 0xbe000e2a ; retf 8
0x00000000004ef4d2 : and eax, 0xbeffffff ; retf
0x000000000042abc6 : and eax, 0xc4834800 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000451495 : and eax, 0xc4834800 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000435487 : and eax, 0xc9002894 ; ret
0x0000000000432ce5 : and eax, 0xc9ffff84 ; ret
0x00000000004231d5 : and eax, 0xc9ffff89 ; ret
0x0000000000455f67 : and eax, 0xc9ffffff ; ret
0x0000000000620388 : and eax, 0xd0ff003e ; leave ; ret
0x00000000007dfc45 : and eax, 0xef000ece ; syscall
0x000000000044c3b7 : and eax, 0xff005b65 ; ror cl, 1 ; ret
0x0000000000512b71 : and eax, 0xffffffc0 ; ret
0x0000000000669704 : and eax, 0xfffffff8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000512c7e : and eax, 0xfffffff8 ; mov eax, dword ptr [rdi + rax + 0x28] ; ret
0x000000000053ad0e : and eax, 0xfffffff8 ; movzx eax, byte ptr [rdi + rax + 0x50] ; ret
0x0000000000668024 : and eax, 0xfffffff8 ; ret
0x00000000006783fe : and eax, 1 ; ret
0x000000000048c313 : and eax, dword ptr [r8] ; leave ; ret
0x00000000007d9d77 : and eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000005043ac : and eax, dword ptr [rax] ; add byte ptr [rcx - 0x772dce2f], cl ; retf -0x7cb8
0x0000000000462af4 : and eax, dword ptr [rax] ; add cl, cl ; ret
0x000000000046a077 : and eax, dword ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004731f7 : and eax, dword ptr [rax] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000007f5f5f : and eax, dword ptr [rax] ; jmp qword ptr [rdx]
0x0000000000481990 : and eax, dword ptr [rax] ; leave ; ret
0x000000000048d9c8 : and eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x574f0f] ; call rax
0x000000000048cc55 : and eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x575c82] ; call rax
0x000000000048c224 : and eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x5766b3] ; call rax
0x000000000048c103 : and eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x5767d4] ; call rax
0x00000000004850df : and eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x57d7f8] ; call rax
0x00000000004829ae : and eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x57ff29] ; call rax
0x0000000000482237 : and eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x5806a0] ; call rax
0x0000000000481575 : and eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x581362] ; call rax
0x000000000047fee3 : and eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x5829f4] ; call rax
0x000000000044e0fa : and eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x5b47dd] ; call rax
0x000000000044e01e : and eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x5b48b9] ; call rax
0x000000000044dc4d : and eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x5b4c8a] ; call rax
0x000000000044db48 : and eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x5b4d8f] ; call rax
0x000000000044d2bc : and eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x5b561b] ; call rax
0x000000000044b16a : and eax, dword ptr [rax] ; nop ; leave ; ret
0x00000000007f6748 : and eax, dword ptr [rax] ; or dword ptr [rdi], 0x22c207 ; wait ; syscall
0x00000000007ed4e1 : and eax, dword ptr [rax] ; out dx, al ; adc dword ptr [rcx], edx ; nop ; and eax, dword ptr [rax] ; ret
0x00000000007ed4e7 : and eax, dword ptr [rax] ; ret
0x00000000007ed4ed : and eax, dword ptr [rax] ; retf
0x00000000005516e5 : and eax, dword ptr [rbx] ; add byte ptr [rax], al ; call rax
0x000000000075db2d : and eax, dword ptr [rcx] ; add ah, cl ; in al, dx ; sar edi, 1 ; ret
0x00000000006ac2a7 : and eax, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x000000000051a212 : and eax, dword ptr [rcx] ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000007460b1 : and eax, dword ptr [rdi] ; add byte ptr [rax - 0x6f], dl ; call qword ptr [rax]
0x00000000007460a1 : and eax, dword ptr [rdi] ; add byte ptr [rax], dl ; xchg eax, ecx ; jmp rax
0x00000000007f5d7a : and eax, dword ptr [rdi] ; ret
0x00000000007d7dc4 : and eax, dword ptr [rdi] ; retf
0x00000000007f2d25 : and eax, dword ptr [rip + 0x19ca3] ; mov bl, 0x23 ; pop rsi ; ret 0x1d7
0x000000000079da6d : and eax, dword ptr [rip - 0x1818a400] ; call rcx
0x00000000006ac2a6 : and eax, dword ptr es:[rcx] ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x0000000000567c6f : and eax, ebp ; retf
0x0000000000739365 : and eax, ebx ; call rax
0x0000000000406f1b : and eax, ebx ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000053ed80 : and eax, edi ; or rax, rdx ; ret
0x00000000005011ec : and eax, edi ; ret
0x00000000006c5ab0 : and eax, edx ; ret
0x00000000007a5f91 : and eax, esi ; call qword ptr [rdx]
0x0000000000602d73 : and ebp, 7 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006d6c83 : and ebp, dword ptr [rdi] ; pop rsp ; ret 0x5d78
0x000000000044fda9 : and ebp, eax ; add byte ptr es:[rax - 0x77], cl ; ret 0x8948
0x0000000000508be4 : and ebp, eax ; push rsi ; mov ebx, 0x8948001c ; ret
0x000000000055a1b4 : and ebp, eax ; xchg byte ptr [rbp - 0x76b7ffe9], ah ; ret
0x00000000007d4cc3 : and ebp, ebp ; add eax, dword ptr [rax] ; ret 0x302
0x000000000073ac05 : and ebp, ebx ; call rax
0x00000000007636b9 : and ebp, edx ; call qword ptr [rax]
0x00000000007401dd : and ebp, esp ; call rax
0x0000000000548423 : and ebx, 0xfffffff8 ; call rax
0x00000000004fe7ae : and ebx, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; cli ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000050c291 : and ebx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004104f3 : and ebx, dword ptr [rdi] ; call rax
0x000000000042051a : and ebx, dword ptr [rsi] ; call rax
0x000000000077b7b1 : and ebx, ebp ; call qword ptr [rbx]
0x000000000077b7e1 : and ebx, ebp ; jmp qword ptr [rdx]
0x000000000073a33d : and ebx, ebx ; inc dword ptr [rax + 0x4b] ; add eax, dword ptr [rax] ; ret 0xdb27
0x0000000000684757 : and ebx, ecx ; ret 0x6cdb
0x00000000007f7d6b : and ebx, edi ; or al, 5 ; ror dword ptr [rbx], 5 ; out dx, al ; syscall
0x00000000007f57bb : and ebx, edx ; and dword ptr [rax], eax ; ret 0x90d
0x000000000077f641 : and ebx, esi ; call rax
0x0000000000505b42 : and ecx, dword ptr [rax - 0x77] ; ret
0x0000000000652c34 : and ecx, dword ptr [rax - 0x77] ; ret 0x13e8
0x00000000006a4294 : and ecx, dword ptr [rax - 0x7d] ; ret 0x4401
0x0000000000667faf : and ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000007f2263 : and ecx, dword ptr [rbx] ; ret 0x3e1f
0x000000000065cdd4 : and ecx, dword ptr [rcx + 0x39] ; retf
0x000000000067b32c : and ecx, dword ptr [rdi] ; ret
0x0000000000636b8b : and ecx, dword ptr [rdi] ; ret 0x8d44
0x00000000005ed5cb : and ecx, dword ptr [rdx] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000059ff8d : and ecx, dword ptr [rsi + rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005de393 : and ecx, dword ptr [rsi] ; add cl, cl ; ret
0x00000000007cad29 : and ecx, eax ; and al, 0 ; ret
0x00000000007c6c00 : and ecx, eax ; or dh, bh ; cmp al, byte ptr [rax] ; ret 0x52c
0x000000000078b999 : and ecx, esp ; jmp rdi
0x00000000005b9a0b : and edi, 0x15fffff3 ; retf
0x0000000000651bb6 : and edi, 0xfffffffc ; call 0x6be5d5
0x0000000000677602 : and edi, 3 ; sete al ; ret
0x00000000006453d3 : and edi, dword ptr [rdi - 0x76b7fffd] ; ret
0x0000000000474fe9 : and edi, dword ptr [rsi - 0x76b6ffde] ; ret 0x8949
0x00000000006204ee : and edi, dword ptr [rsi] ; add bh, bh ; ror cl, 1 ; ret
0x000000000069d5c6 : and edi, eax ; mov eax, edi ; or eax, edx ; ret
0x000000000074502d : and edi, ebp ; jmp qword ptr [rax]
0x00000000006881e1 : and edx, 0x1f ; or byte ptr [rdi + rdx], sil ; ret
0x000000000068edfc : and edx, 0x3f ; lea eax, dword ptr [rdx + 1] ; ret
0x000000000058c1d2 : and edx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e3208 : and edx, dword ptr [rbx] ; add byte ptr [rax], al ; inc dword ptr [rbx] ; in al, dx ; add al, 1 ; retf 0x203
0x000000000042aa3f : and edx, dword ptr [rcx + 0x25] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b6a3f : and edx, dword ptr [rcx - 0x76b7ffe4] ; ret
0x00000000004f0520 : and edx, dword ptr [rcx] ; call rax
0x000000000057f019 : and edx, dword ptr [rdi + 0x15] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000490557 : and edx, dword ptr [rdi] ; call rax
0x000000000055e2c0 : and edx, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000069ca16 : and edx, eax ; mov eax, edx ; or eax, esi ; ret
0x00000000005a014f : and edx, ebp ; or rdx, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000736c75 : and edx, edx ; call rax
0x000000000069d5c4 : and edx, esi ; and edi, eax ; mov eax, edi ; or eax, edx ; ret
0x0000000000526bd6 : and edx, esi ; or rdx, rcx ; ret
0x0000000000733598 : and edx, esi ; stc ; call qword ptr [rsi]
0x000000000051bebe : and edx, esp ; or rdx, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006cf480 : and esi, 0x10 ; jne 0x6cf497 ; xor eax, eax ; ret
0x000000000053a043 : and esi, 0x8148004c ; ret
0x000000000066ab5b : and esi, 0x8948ffff ; ret 0x8b48
0x00000000006c04fa : and esi, dword ptr [rax + rax] ; jmp rax
0x000000000068f7ed : and esi, dword ptr [rax + rdx + 0x39] ; ret
0x00000000007e537e : and esi, dword ptr [rbx] ; ret
0x00000000005ad911 : and esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000005c416e : and esi, dword ptr [rcx] ; xor eax, eax ; call 0x680b93
0x000000000068f7b6 : and esi, dword ptr [rdi + rax - 0x7d] ; rol byte ptr [rcx], 0x39 ; ret
0x000000000047d0a9 : and esi, dword ptr [rsi] ; and al, 0 ; leave ; ret
0x000000000069ca56 : and esi, eax ; mov eax, esi ; or eax, edx ; ret
0x00000000007b0f19 : and esi, ebp ; jmp qword ptr [rcx]
0x0000000000748e85 : and esi, edi ; jmp qword ptr [rax]
0x000000000047d73f : and esp, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000612f0f : and esp, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000044d7e5 : and esp, dword ptr [rbx] ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000044d7d1 : and esp, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000051e019 : and esp, dword ptr [rdi + 0x1b] ; add bl, ch ; retf 0x41f0
0x0000000000795af1 : and esp, ebp ; call qword ptr [rax]
0x000000000074024d : and esp, ebp ; jmp qword ptr [rax]
0x00000000006458e6 : and esp, ebx ; dec dword ptr [rax - 0x7d] ; cli ; sbb ecx, dword ptr [rax - 0x77] ; ret
0x000000000073e565 : and esp, edx ; jmp rax
0x0000000000490489 : and esp, esp ; and al, byte ptr [rax] ; leave ; ret
0x000000000073f87d : and esp, esp ; call rax
0x00000000005b078f : and qword ptr [r13], r8 ; jmp rax
0x00000000006ce5a4 : and qword ptr [rdi + rdx*8], rax ; ret
0x000000000041e854 : and qword ptr [rdx], rbp ; add cl, cl ; ret
0x0000000000736c84 : and r10b, dl ; call qword ptr [rax]
0x0000000000636b8a : and r9, qword ptr [r15] ; ret 0x8d44
0x0000000000733f74 : and r9b, bpl ; jmp qword ptr [rax]
0x000000000068c082 : and rax, 0x89480003 ; ret
0x000000000053c07d : and rax, 0x89480018 ; ret
0x0000000000512b70 : and rax, 0xffffffffffffffc0 ; ret
0x0000000000512c7d : and rax, 0xfffffffffffffff8 ; mov eax, dword ptr [rdi + rax + 0x28] ; ret
0x000000000053ad0d : and rax, 0xfffffffffffffff8 ; movzx eax, byte ptr [rdi + rax + 0x50] ; ret
0x0000000000462af3 : and rax, qword ptr [r8] ; add cl, cl ; ret
0x000000000053ed7f : and rax, rdi ; or rax, rdx ; ret
0x00000000005011eb : and rax, rdi ; ret
0x0000000000548422 : and rbx, 0xfffffffffffffff8 ; call rax
0x0000000000651bb5 : and rdi, 0xfffffffffffffffc ; call 0x6be5d6
0x0000000000526bd5 : and rdx, rsi ; or rdx, rcx ; ret
0x00000000004c1974 : andps xmm0, xmmword ptr [rax] ; call rax
0x00000000004c198f : andps xmm8, xmmword ptr [r8] ; call rax
0x00000000004d6cd5 : bsf edx, dword ptr [rdx] ; call rax
0x00000000004d6bd5 : bsr edx, dword ptr [rdx] ; call rax
0x0000000000733cb5 : bswap ebp ; call rax
0x0000000000733cc5 : bswap ebp ; jmp rax
0x0000000000735205 : bswap edi ; push rax ; ret
0x0000000000733cc4 : bswap rbp ; jmp rax
0x000000000053a070 : btr dword ptr [rax], -0x68 ; outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000073a454 : call 0x11737fe6
0x000000000073a4f4 : call 0x117380b2
0x0000000000775238 : call 0x11772e0e
0x00000000007bd5f8 : call 0x117bc70f
0x00000000007aa9f8 : call 0x127a96da
0x00000000007b89f8 : call 0x127b7a62
0x000000000078ac88 : call 0x13788d76
0x00000000007aa908 : call 0x137a95ea
0x000000000077d168 : call 0x1477aefe
0x0000000000784aa8 : call 0x14782a7d
0x000000000078cc28 : call 0x1478adb3
0x00000000007ac418 : call 0x147ab166
0x00000000004cc510 : call 0x14cb8750
0x000000000076e918 : call 0x1876c367
0x000000000063b737 : call 0x2163b73d
0x0000000000774178 : call 0x21771d19
0x00000000007746e8 : call 0x21772296
0x00000000007b8a28 : call 0x217b7a92
0x000000000078f838 : call 0x2378da42
0x00000000007907f8 : call 0x2378ea60
0x00000000004cc673 : call 0x23c188b3
0x00000000007625d8 : call 0x2475fa42
0x0000000000790648 : call 0x2478e8ab
0x0000000000790ab8 : call 0x2478ed2b
0x00000000007b43a8 : call 0x287b32f2
0x000000000069d3f6 : call 0x31ae9606
0x00000000006a6970 : call 0x403442
0x0000000000476ede : call 0x4038f2
0x00000000005c772e : call 0x403a02
0x0000000000667818 : call 0x403b02
0x0000000000667977 : call 0x403b92
0x00000000006671f9 : call 0x403c32
0x00000000004f7984 : call 0x403c72
0x00000000005280aa : call 0x404300
0x0000000000568437 : call 0x404ea2
0x00000000005886d2 : call 0x405102
0x00000000005a8ac8 : call 0x40554a
0x00000000005a8ad9 : call 0x405560
0x00000000005b8ded : call 0x405850
0x0000000000629b4b : call 0x405d70
0x000000000065bb01 : call 0x407d32
0x0000000000416bd5 : call 0x412e9a
0x000000000041e968 : call 0x41b392
0x0000000000421ff0 : call 0x41ea5c
0x000000000043ecf2 : call 0x43aefe
0x000000000043f4a3 : call 0x43b6f4
0x000000000043f3b5 : call 0x43be38
0x0000000000440b2f : call 0x43d57e
0x00000000004417f1 : call 0x43da4a
0x0000000000443aec : call 0x44056c
0x00000000004e8a4b : call 0x4554ce
0x00000000004e8aa1 : call 0x45553c
0x000000000045aac7 : call 0x457512
0x00000000004640e0 : call 0x4603c8
0x0000000000543375 : call 0x461af5f1
0x00000000004b9613 : call 0x4660c4
0x000000000046dde0 : call 0x46a0c8
0x000000000047b883 : call 0x478378
0x000000000047c74b : call 0x4791e2
0x0000000000497378 : call 0x483668
0x0000000000497377 : call 0x483669
0x00000000004996c2 : call 0x4859b2
0x00000000004996c1 : call 0x4859b3
0x000000000049e184 : call 0x49a444
0x00000000004a3723 : call 0x4a0190
0x00000000004a37bf : call 0x4a021c
0x000000000045925c : call 0x4b5ca0
0x0000000000459d7a : call 0x4b67ce
0x00000000004ed712 : call 0x4b99a4
0x00000000004ecfd4 : call 0x4b9a58
0x000000000048fcca : call 0x4bbf0c
0x000000000048ffca : call 0x4bc1fa
0x000000000057caa2 : call 0x4c94f0
0x000000000057caa1 : call 0x4c94f1
0x000000000064088a : call 0x4ccb6e
0x00000000004d23c4 : call 0x4ce6b8
0x000000000062d5ac : call 0x4d982a
0x00000000004aa366 : call 0x4f6dc2
0x00000000004fb6b3 : call 0x4f8192
0x0000000000409bd1 : call 0x505e72
0x0000000000516b5b : call 0x512d72
0x000000000051e8c4 : call 0x51b2f2
0x000000000051ffbd : call 0x51c2c2
0x000000000053132c : call 0x53ddf2
0x000000000055b17c : call 0x557432
0x00000000006472ab : call 0x563d82
0x0000000000575b1e : call 0x571dd2
0x0000000000575e89 : call 0x572102
0x0000000000577952 : call 0x573ba2
0x0000000000577f73 : call 0x5741e2
0x0000000000548fb7 : call 0x5a5a52
0x000000000054944f : call 0x5a5f52
0x000000000063baf7 : call 0x5a8582
0x00000000005ad041 : call 0x5a9b32
0x00000000005ad469 : call 0x5a9e92
0x00000000005c0c45 : call 0x5bd712
0x00000000005e0261 : call 0x5ccc86
0x00000000005f4fbe : call 0x5e12c2
0x00000000005ea5de : call 0x5e70be
0x000000000050dd3c : call 0x5fa802
0x000000000062a7d0 : call 0x6272a2
0x000000000062c0b2 : call 0x628b72
0x000000000064bd4f : call 0x6487d2
0x0000000000536148 : call 0x672402
0x00000000005f8507 : call 0x6747e2
0x00000000005185be : call 0x674832
0x0000000000639153 : call 0x675412
0x0000000000669a05 : call 0x675cc2
0x000000000043c2be : call 0x678d72
0x000000000067e015 : call 0x67aa72
0x00000000004238bd : call 0x67fb52
0x00000000004238d9 : call 0x67fb54
0x0000000000433947 : call 0x67fb68
0x0000000000674416 : call 0x680668
0x00000000006344d7 : call 0x6806e6
0x0000000000674765 : call 0x680a66
0x00000000004847df : call 0x680ac6
0x0000000000484808 : call 0x680aee
0x00000000006c4868 : call 0x680b16
0x00000000005a482e : call 0x680b2a
0x000000000064412e : call 0x680b3e
0x00000000004348bc : call 0x680b8e
0x00000000004e4926 : call 0x680bb6
0x0000000000405008 : call 0x6812fc
0x00000000004052ac : call 0x681534
0x00000000004b56ba : call 0x6819b2
0x00000000004b56fc : call 0x6819c2
0x0000000000625722 : call 0x6819f2
0x0000000000414fc8 : call 0x681a32
0x000000000040953c : call 0x686022
0x00000000004cb343 : call 0x6875d2
0x000000000050b6b9 : call 0x687952
0x000000000065b9d0 : call 0x687bf2
0x000000000055bfa2 : call 0x6881f2
0x000000000064c69d : call 0x689142
0x000000000056cdf4 : call 0x6898f2
0x00000000004bd69b : call 0x689912
0x000000000068d893 : call 0x689ad2
0x000000000068d853 : call 0x689b22
0x00000000004fdda9 : call 0x689fb2
0x00000000004fdd81 : call 0x689ff2
0x000000000042ea8e : call 0x68ad72
0x00000000005d37fa : call 0x68fa42
0x00000000006155b0 : call 0x6a1892
0x000000000059581c : call 0x6a1a92
0x0000000000475ba4 : call 0x6a1e62
0x00000000006cb2af : call 0x6a7d72
0x00000000006cb2ce : call 0x6a7da2
0x000000000041b2cc : call 0x6a7db2
0x00000000006bce41 : call 0x6a9092
0x000000000059ddd2 : call 0x6aa852
0x000000000046e5f1 : call 0x6aa8e2
0x00000000006b129b : call 0x6adce2
0x0000000000432332 : call 0x6be5d2
0x0000000000412664 : call 0x6be892
0x0000000000412638 : call 0x6be8b2
0x00000000004f28ed : call 0x6bebe2
0x0000000000432a90 : call 0x6bed02
0x0000000000672b23 : call 0x6bf552
0x000000000055445b : call 0x6c06d2
0x0000000000455078 : call 0x6c1372
0x00000000005a782d : call 0x6c3b12
0x00000000004a7867 : call 0x6c42c2
0x00000000004385b7 : call 0x6c5022
0x0000000000538a09 : call 0x6c5472
0x00000000006913bc : call 0x6cde62
0x00000000006b1d8e : call 0x6cdfd2
0x0000000000511625 : call 0x6ce052
0x000000000067162a : call 0x6ce0f2
0x00000000004184c3 : call 0x6d4742
0x00000000007a1d9a : call 0x7be8a0
0x000000000067a7b8 : call 0x7e771f8
0x00000000004cc6d0 : call 0xffffffff89958960
0x00000000004cc6cf : call 0xffffffff89958961
0x0000000000507dce : call 0xffffffffc358071f
0x000000000043b9e9 : call 0xffffffffc358433a
0x000000000043bc26 : call 0xffffffffc3584577
0x000000000043bef4 : call 0xffffffffc3584845
0x000000000043d998 : call 0xffffffffc35862e9
0x000000000043e09d : call 0xffffffffc35869ee
0x00000000004470cb : call 0xffffffffc358fa1c
0x0000000000447308 : call 0xffffffffc358fc59
0x00000000004475d6 : call 0xffffffffc358ff27
0x000000000044896a : call 0xffffffffc35912bb
0x000000000052204e : call 0xffffffffc359a99f
0x00000000005220ce : call 0xffffffffc359aa1f
0x000000000052214e : call 0xffffffffc359aa9f
0x0000000000457d7f : call 0xffffffffc35a06d0
0x0000000000457fbc : call 0xffffffffc35a090d
0x000000000045828a : call 0xffffffffc35a0bdb
0x000000000045961e : call 0xffffffffc35a1f6f
0x0000000000460b79 : call 0xffffffffc35a94ca
0x0000000000460db6 : call 0xffffffffc35a9707
0x0000000000461084 : call 0xffffffffc35a99d5
0x0000000000462418 : call 0xffffffffc35aad69
0x00000000005af01b : call 0xffffffffc35af028
0x00000000005af73c : call 0xffffffffc35af74c
0x000000000046a879 : call 0xffffffffc35b31ca
0x000000000046aab6 : call 0xffffffffc35b3407
0x000000000046ad84 : call 0xffffffffc35b36d5
0x00000000005b3feb : call 0xffffffffc35b3ff8
0x000000000046c118 : call 0xffffffffc35b4a69
0x00000000005b533c : call 0xffffffffc35b534c
0x0000000000542b1e : call 0xffffffffc35bb46f
0x0000000000478d3e : call 0xffffffffc35c168f
0x000000000054db0e : call 0xffffffffc35c645f
0x000000000055605e : call 0xffffffffc35ce9af
0x000000000056703e : call 0xffffffffc35df98f
0x000000000049abf5 : call 0xffffffffc35e3546
0x000000000049ae32 : call 0xffffffffc35e3783
0x000000000049b100 : call 0xffffffffc35e3a51
0x000000000049c494 : call 0xffffffffc35e4de5
0x000000000057194e : call 0xffffffffc35ea29f
0x000000000058edbe : call 0xffffffffc360770f
0x000000000058ee3e : call 0xffffffffc360778f
0x000000000058eebe : call 0xffffffffc360780f
0x00000000005a2b8e : call 0xffffffffc361b4df
0x00000000005a8b0e : call 0xffffffffc362145f
0x0000000000677e11 : call 0xffffffffc368bf38
0x00000000006784ec : call 0xffffffffc3696578
0x0000000000626e4e : call 0xffffffffc369f79f
0x0000000000687be4 : call 0xffffffffc36a5c70
0x00000000006bea21 : call 0xffffffffc36c8af6
0x00000000006c8a93 : call 0xffffffffc36cfdb3
0x000000000069f2fe : call 0xffffffffc36e7e4f
0x0000000000643015 : call 0xffffffffc37a301d
0x00000000007bfcfe : call 0xffffffffc3818211
0x00000000007ca9a0 : call 0xffffffffc3883b03
0x000000000040ef8b : call 0xffffffffc39e4b24
0x000000000040f0f5 : call 0xffffffffc39e4c8e
0x000000000041eaab : call 0xffffffffc39f4644
0x000000000041ec15 : call 0xffffffffc39f47ae
0x000000000042da71 : call 0xffffffffc3a0360a
0x000000000042dbdb : call 0xffffffffc3a03774
0x000000000057f6a8 : call 0xffffffffc3ccf859
0x0000000000502cda : call 0xffffffffc3d92cfa
0x0000000000522c57 : call 0xffffffffc3db2c75
0x0000000000522cb1 : call 0xffffffffc3db2ccf
0x0000000000562c8b : call 0xffffffffc3df2ca5
0x000000000057599d : call 0xffffffffc3e0a2a5
0x00000000005771a3 : call 0xffffffffc3e0baab
0x00000000005773af : call 0xffffffffc3e0bcb7
0x00000000005775af : call 0xffffffffc3e0beb7
0x00000000005779ac : call 0xffffffffc3e0c2b4
0x0000000000579c3d : call 0xffffffffc3e0e545
0x000000000057bb03 : call 0xffffffffc3e1040b
0x000000000063b921 : call 0xffffffffc3ed0229
0x000000000063b99b : call 0xffffffffc3ed02a3
0x000000000063ba2d : call 0xffffffffc3ed0335
0x000000000063bc33 : call 0xffffffffc3ed053b
0x000000000063c013 : call 0xffffffffc3ed091b
0x000000000063c0d8 : call 0xffffffffc3ed09e0
0x000000000063c195 : call 0xffffffffc3ed0a9d
0x000000000063c24f : call 0xffffffffc3ed0b57
0x000000000063c30b : call 0xffffffffc3ed0c13
0x000000000063ed58 : call 0xffffffffc3ed3660
0x000000000063ee1d : call 0xffffffffc3ed3725
0x000000000063eee0 : call 0xffffffffc3ed37e8
0x000000000063f187 : call 0xffffffffc3ed3a8f
0x000000000063f250 : call 0xffffffffc3ed3b58
0x000000000063f31c : call 0xffffffffc3ed3c24
0x000000000063fa9a : call 0xffffffffc3ed43a2
0x000000000063fb37 : call 0xffffffffc3ed443f
0x000000000063fc0b : call 0xffffffffc3ed4513
0x000000000063fcb1 : call 0xffffffffc3ed45b9
0x000000000063fd86 : call 0xffffffffc3ed468e
0x000000000063ff24 : call 0xffffffffc3ed482c
0x000000000063fff8 : call 0xffffffffc3ed4900
0x00000000006400cb : call 0xffffffffc3ed49d3
0x0000000000640401 : call 0xffffffffc3ed4d09
0x00000000006406b9 : call 0xffffffffc3ed4fc1
0x000000000064078f : call 0xffffffffc3ed5097
0x000000000064086d : call 0xffffffffc3ed5175
0x00000000006417b1 : call 0xffffffffc3ed60b9
0x00000000006417b0 : call 0xffffffffc3ed60ba
0x0000000000641b3d : call 0xffffffffc3ed6445
0x0000000000641b3c : call 0xffffffffc3ed6446
0x0000000000652d1b : call 0xffffffffc3ee2d26
0x0000000000441e77 : call 0xffffffffc40d1ea7
0x00000000004420b7 : call 0xffffffffc40d20e7
0x0000000000460070 : call 0xffffffffc40f009e
0x0000000000684035 : call 0xffffffffc428da4d
0x00000000005edc62 : call 0xffffffffc428dc6a
0x00000000005edc92 : call 0xffffffffc428dc9a
0x0000000000617b9e : call 0xffffffffc42b0bc6
0x0000000000617bf0 : call 0xffffffffc42b0c18
0x00000000006a0db6 : call 0xffffffffc4340dbe
0x0000000000721997 : call 0xffffffffc4509cc4
0x0000000000721996 : call 0xffffffffc4509cc5
0x0000000000722994 : call 0xffffffffc459fa90
0x00000000006bf2b9 : call 0xffffffffc45f67c3
0x00000000006846e7 : call 0xffffffffcc4210c9
0x0000000000789f95 : call 0xffffffffcc509fa1
0x0000000000789f94 : call 0xffffffffcc509fa2
0x0000000000789f7d : call 0xffffffffcc589f89
0x0000000000474048 : call 0xffffffffd14640a8
0x0000000000474051 : call 0xffffffffd14640b1
0x00000000004f402a : call 0xffffffffd14e4082
0x00000000004f408a : call 0xffffffffd14e40e2
0x00000000005d3fdf : call 0xffffffffd15c4029
0x00000000005d3fe8 : call 0xffffffffd15c4032
0x00000000005d4022 : call 0xffffffffd15c406c
0x00000000005d4063 : call 0xffffffffd15c40ad
0x00000000005d40d9 : call 0xffffffffd15c4123
0x00000000005f4010 : call 0xffffffffd15e4058
0x00000000005f405a : call 0xffffffffd15e40a2
0x0000000000606e7c : call 0xffffffffd15fbff9
0x000000000068758d : call 0xffffffffd167a20a
0x000000000068d99b : call 0xffffffffd167f218
0x000000000068dbe0 : call 0xffffffffd167f85d
0x0000000000743784 : call 0xffffffffd1742363
0x0000000000758a38 : call 0xffffffffd4755a56
0x0000000000754560 : call 0xffffffffd5751488
0x0000000000759e18 : call 0xffffffffd5756ea2
0x00000000007b3e58 : call 0xffffffffd77b2d99
0x000000000057a8e8 : call 0xffffffffe157a8ec
0x000000000073514c : call 0xffffffffe173205a
0x0000000000733640 : call 0xffffffffe1733043
0x000000000073908c : call 0xffffffffe1736822
0x0000000000739e74 : call 0xffffffffe17377d2
0x000000000074497c : call 0xffffffffe1743802
0x0000000000789288 : call 0xffffffffe2787330
0x0000000000684c91 : call 0xfffffffff3450f74
0x0000000000745e4d : call qword ptr [eax]
0x0000000000500c3f : call qword ptr [r15]
0x00000000005715e7 : call qword ptr [r8]
0x0000000000560ba3 : call qword ptr [r9]
0x000000000055358e : call qword ptr [rax + 0xc2be]
0x00000000006aad1e : call qword ptr [rax - 0x3cf849f1]
0x0000000000435816 : call qword ptr [rax - 0x3d]
0x00000000006a710e : call qword ptr [rax - 0x57c3dd7]
0x000000000040b776 : call qword ptr [rax]
0x0000000000491cfb : call qword ptr [rbx]
0x00000000004ddadd : call qword ptr [rcx]
0x000000000040aea8 : call qword ptr [rdi]
0x0000000000409e11 : call qword ptr [rdx]
0x00000000007e3284 : call qword ptr [rip + 0x2520ca05]
0x00000000006b663d : call qword ptr [rip + 0x34c29d]
0x00000000006b660d : call qword ptr [rip + 0x34c2d5]
0x00000000006b65f3 : call qword ptr [rip + 0x34c2e7]
0x00000000006966c9 : call qword ptr [rip + 0x36c219]
0x0000000000696629 : call qword ptr [rip + 0x36c2b1]
0x00000000006965f3 : call qword ptr [rip + 0x36c2ef]
0x00000000006965e5 : call qword ptr [rip + 0x36c2f5]
0x0000000000695eb7 : call qword ptr [rip + 0x36ca2b]
0x0000000000695ea9 : call qword ptr [rip + 0x36ca31]
0x0000000000695e90 : call qword ptr [rip + 0x36ca52]
0x0000000000695e82 : call qword ptr [rip + 0x36ca58]
0x0000000000695e66 : call qword ptr [rip + 0x36ca7c]
0x0000000000695ddb : call qword ptr [rip + 0x36caff]
0x0000000000656588 : call qword ptr [rip + 0x3ac35a]
0x00000000006466cf : call qword ptr [rip + 0x3bc213]
0x0000000000645ec8 : call qword ptr [rip + 0x3bca1a]
0x0000000000635da9 : call qword ptr [rip + 0x3ccb31]
0x0000000000626689 : call qword ptr [rip + 0x3dc251]
0x0000000000626678 : call qword ptr [rip + 0x3dc26a]
0x0000000000626563 : call qword ptr [rip + 0x3dc37f]
0x00000000005c5e36 : call qword ptr [rip + 0x43caa4]
0x00000000005c5e28 : call qword ptr [rip + 0x43caba]
0x00000000005c5e1a : call qword ptr [rip + 0x43cac0]
0x00000000005c5dec : call qword ptr [rip + 0x43caf6]
0x00000000005b66ce : call qword ptr [rip + 0x44c214]
0x00000000005b66c1 : call qword ptr [rip + 0x44c219]
0x00000000005b66af : call qword ptr [rip + 0x44c233]
0x00000000005b65e8 : call qword ptr [rip + 0x44c2f2]
0x00000000005b653e : call qword ptr [rip + 0x44c3a4]
0x00000000005b5e86 : call qword ptr [rip + 0x44ca54]
0x00000000005b5e80 : call qword ptr [rip + 0x44ca62]
0x00000000005b5e75 : call qword ptr [rip + 0x44ca65]
0x00000000005b5e67 : call qword ptr [rip + 0x44ca7b]
0x00000000005b5e59 : call qword ptr [rip + 0x44ca81]
0x00000000005b5e46 : call qword ptr [rip + 0x44ca9c]
0x0000000000596611 : call qword ptr [rip + 0x46c2c9]
0x00000000005965f8 : call qword ptr [rip + 0x46c2ea]
0x0000000000575e93 : call qword ptr [rip + 0x48ca47]
0x0000000000575e7b : call qword ptr [rip + 0x48ca67]
0x0000000000575e5e : call qword ptr [rip + 0x48ca7c]
0x0000000000575e50 : call qword ptr [rip + 0x48ca92]
0x0000000000575e22 : call qword ptr [rip + 0x48cab8]
0x00000000005666cf : call qword ptr [rip + 0x49c213]
0x0000000000565d20 : call qword ptr [rip + 0x49cbc2]
0x00000000005566d1 : call qword ptr [rip + 0x4ac209]
0x0000000000556671 : call qword ptr [rip + 0x4ac269]
0x0000000000556660 : call qword ptr [rip + 0x4ac282]
0x0000000000556604 : call qword ptr [rip + 0x4ac2d6]
0x00000000005565ef : call qword ptr [rip + 0x4ac2f3]
0x00000000005565a5 : call qword ptr [rip + 0x4ac33d]
0x0000000000555ec2 : call qword ptr [rip + 0x4aca20]
0x0000000000555e79 : call qword ptr [rip + 0x4aca61]
0x0000000000555e73 : call qword ptr [rip + 0x4aca6f]
0x0000000000546592 : call qword ptr [rip + 0x4bc2c8]
0x000000000054656f : call qword ptr [rip + 0x4bc2eb]
0x0000000000546544 : call qword ptr [rip + 0x4bc31e]
0x0000000000546502 : call qword ptr [rip + 0x4bc358]
0x00000000005464b4 : call qword ptr [rip + 0x4bc3ae]
0x00000000005464fc : call qword ptr [rip + 0x4bc3e6]
0x00000000005266a3 : call qword ptr [rip + 0x4dc237]
0x000000000052667a : call qword ptr [rip + 0x4dc260]
0x0000000000526669 : call qword ptr [rip + 0x4dc279]
0x0000000000525ec8 : call qword ptr [rip + 0x4dca12]
0x0000000000525eb3 : call qword ptr [rip + 0x4dca2f]
0x0000000000525e7f : call qword ptr [rip + 0x4dca5b]
0x0000000000525e6b : call qword ptr [rip + 0x4dca77]
0x000000000051660c : call qword ptr [rip + 0x4ec2ce]
0x0000000000515e6e : call qword ptr [rip + 0x4eca6c]
0x0000000000515e42 : call qword ptr [rip + 0x4eca98]
0x0000000000515e2d : call qword ptr [rip + 0x4ecab5]
0x0000000000515e0a : call qword ptr [rip + 0x4ecad0]
0x0000000000515dea : call qword ptr [rip + 0x4ecaf0]
0x0000000000505e42 : call qword ptr [rip + 0x4fca18]
0x0000000000505e1f : call qword ptr [rip + 0x4fca3b]
0x0000000000505df4 : call qword ptr [rip + 0x4fca6e]
0x0000000000505dfa : call qword ptr [rip + 0x4fca70]
0x0000000000505e48 : call qword ptr [rip + 0x4fca92]
0x0000000000505e3c : call qword ptr [rip + 0x4fcaa6]
0x0000000000505e19 : call qword ptr [rip + 0x4fcac9]
0x0000000000505c84 : call qword ptr [rip + 0x4fcbde]
0x00000000004066d1 : call qword ptr [rip + 0x5fc209]
0x0000000000406685 : call qword ptr [rip + 0x5fc25d]
0x000000000040663d : call qword ptr [rip + 0x5fc29d]
0x00000000004065f1 : call qword ptr [rip + 0x5fc2f1]
0x0000000000405ead : call qword ptr [rip + 0x5fca35]
0x0000000000405e1f : call qword ptr [rip + 0x5fcabb]
0x00000000004b74ad : call qword ptr [rsi]
0x000000000051d734 : call r10
0x00000000004e4acc : call r11
0x0000000000570011 : call r12
0x00000000006cd619 : call r14
0x00000000006d4946 : call r15
0x00000000004e48af : call r8
0x0000000000491217 : call r9
0x00000000004043c1 : call rax
0x00000000004e4acd : call rbx
0x00000000004163b5 : call rcx
0x00000000005250dd : call rdi
0x000000000040a98d : call rdx
0x00000000004ab0a8 : call rsi
0x0000000000416d79 : call rsp
0x00000000007efcfa : cdq ; adc al, byte ptr [rax] ; iretd ; syscall
0x00000000007cc576 : cdq ; adc dword ptr [rax], eax ; retf 0x60f
0x00000000004504f3 : cdq ; adc dword ptr [rdi], esp ; add cl, cl ; ret
0x00000000006bcc23 : cdq ; add al, 0 ; add byte ptr [rcx - 0x7d], al ; ret 0x3101
0x000000000079512d : cdq ; add al, 0 ; rcr bh, 0xe4 ; jmp rsi
0x00000000005543f8 : cdq ; add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000734929 : cdq ; add dword ptr [rax], eax ; clc ; or esi, ecx ; jmp rax
0x00000000007cab28 : cdq ; add dword ptr [rax], eax ; ret 0x199
0x00000000007e3c0e : cdq ; add dword ptr [rax], eax ; retf
0x00000000007650ed : cdq ; add dword ptr [rax], eax ; retf -0x2ab0
0x00000000007d4b70 : cdq ; add dword ptr [rcx], ecx ; add byte ptr [rax], al ; ret
0x00000000007cab24 : cdq ; add dword ptr [rip + 0x199d3], eax ; ret 0x199
0x00000000007ca8de : cdq ; add dword ptr [rip + 0x6ae20cb], eax ; ret
0x00000000007dc404 : cdq ; add dword ptr [rip - 0x51fafd76], eax ; add dword ptr [rax], edx ; retf 1
0x00000000007a5075 : cdq ; add eax, 0xeb405800 ; jmp qword ptr [rdi]
0x0000000000785085 : cdq ; add eax, dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; inc edi ; call qword ptr [rdx]
0x000000000073b201 : cdq ; add eax, dword ptr [rax] ; nop ; mov ebp, ds ; call rax
0x00000000004b797b : cdq ; and byte ptr [rax], al ; leave ; ret
0x00000000005de603 : cdq ; and ecx, dword ptr [rsi] ; add cl, cl ; ret
0x0000000000658f89 : cdq ; cmp al, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000658f1c : cdq ; cmp al, byte ptr [rax] ; jmp rax
0x00000000007693d1 : cdq ; fdivr st(7) ; mov dword ptr [rax + rax], ecx ; add byte ptr [rsp], al ; ret 0x7c
0x00000000005e2b47 : cdq ; fisttp dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000406ba3 : cdq ; fld xword ptr [rax + rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000006c068f : cdq ; idiv rbx ; imul rax, rbx ; pop rbx ; ret
0x00000000006671b9 : cdq ; idiv rsi ; add rsp, 8 ; ret
0x00000000007fa49e : cdq ; ja 0x7fa4aa ; cdq ; jbe 0x7fa4bb ; fsub dword ptr [rbp] ; ret
0x00000000007fa4a1 : cdq ; jbe 0x7fa4b8 ; fsub dword ptr [rbp] ; ret
0x00000000005e8847 : cdq ; jle 0x5e8859 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b1613 : cdq ; mov dword ptr [rip + 0x3d8b4800], ecx ; retf 0x4545
0x00000000005f5d13 : cdq ; mov ecx, dword ptr [rax + rax] ; leave ; ret
0x00000000004f3b33 : cdq ; mov edi, 0x40bf0019 ; retf 0x6d
0x00000000004c1c25 : cdq ; mov esp, 0x8948ffff ; ret
0x00000000006831de : cdq ; nop ; ret
0x00000000007dd96f : cdq ; or al, 5 ; ret 0xc
0x000000000063ad60 : cdq ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000431f4b : cdq ; or dword ptr [rbp], ebx ; call rax
0x00000000005b1414 : cdq ; or eax, 0x5894800 ; ret 0x4547
0x000000000079c209 : cdq ; out -1, eax ; retf
0x00000000004f3705 : cdq ; outsb dx, byte ptr [rsi] ; add al, ch ; ret
0x0000000000432333 : cdq ; ret 0x28
0x00000000005f8593 : cdq ; ret 7
0x0000000000564a95 : cdq ; retf 0x11
0x00000000005230b5 : cdq ; retf 0x15
0x000000000047ee47 : cdq ; sbb byte ptr [rax], ah ; add byte ptr [rax - 0x77], cl ; ret
0x000000000051fa5d : cdq ; sbb byte ptr [rsi], dl ; add bl, ch ; test dword ptr [rax - 0x77], ecx ; ret
0x00000000007222f7 : cdq ; scasd eax, dword ptr [rdi] ; xlatb ; loopne 0x72228c ; retf 0x5cb0
0x000000000074af5d : cdq ; stc ; call qword ptr [rax]
0x000000000074af4d : cdq ; stc ; jmp rax
0x00000000007dc556 : cdq ; syscall
0x0000000000626a5d : cdq ; test al, 5 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005d6133 : cdq ; test byte ptr [rsi], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000496033 : cdq ; test dword ptr [rdx], esp ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000006ce023 : cdq ; xor r8, qword ptr [rax] ; ret
0x00000000006a1853 : cdq ; xor rax, rdx ; sub rax, rdx ; ret
0x000000000051934a : cdqe ; add rsp, 0x18 ; ret
0x00000000006ad4f9 : cdqe ; mov qword ptr [rdx + rax*8 - 8], rcx ; ret
0x00000000006d144d : cdqe ; sub rax, rcx ; mov byte ptr [rdx + rax], 0x2d ; ret
0x000000000078b6a8 : clc ; adc ah, cl ; call qword ptr [rbx]
0x0000000000775bd8 : clc ; adc al, 0xdc ; call rdi
0x000000000073fc70 : clc ; adc al, byte ptr [rip - 0x1b1b9000] ; call qword ptr [rax]
0x00000000006d36d0 : clc ; adc byte ptr [rbp + 0xf], cl ; retf 0x14d
0x0000000000745cc0 : clc ; adc dword ptr [rdi], eax ; add byte ptr [rax + 0x4d], dl ; call qword ptr [rax]
0x00000000007ea0d7 : clc ; adc eax, dword ptr [rax] ; ret 0x9f01
0x000000000079b298 : clc ; adc esp, edi ; jmp rax
0x000000000066893d : clc ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000006720ed : clc ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000007d1a05 : clc ; add al, 0x31 ; add byte ptr [rax], al ; retf 0x605
0x000000000079aee8 : clc ; add al, 0xe7 ; jmp qword ptr [rcx]
0x00000000007caca8 : clc ; add al, bl ; syscall
0x00000000007d1ad1 : clc ; add al, byte ptr [rax] ; ret 0xe02
0x0000000000771d48 : clc ; add bl, bl ; call qword ptr [rbx]
0x0000000000544444 : clc ; add bl, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000477fac : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000068e9ef : clc ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x68e9e7 ; ret
0x00000000006cdd12 : clc ; add byte ptr [rbp - 0xe], dh ; ret
0x000000000066418a : clc ; add byte ptr [rcx], al ; add byte ptr [rax], al ; jne 0x664160 ; ret
0x000000000069333b : clc ; add byte ptr ss:[rcx], bh ; ret 0x840f
0x000000000069b9c4 : clc ; add cl, byte ptr [rdi] ; xchg eax, edi ; ret 0xfb83
0x000000000078f698 : clc ; add dl, ah ; jmp qword ptr [rdx]
0x0000000000611706 : clc ; add dword ptr [rax - 0x75], ecx ; add eax, 0x3f11d1 ; call rax
0x00000000006aada7 : clc ; add dword ptr [rbp + 5], esi ; add rsp, 8 ; ret
0x000000000040e127 : clc ; add dword ptr [rdi + rbp - 0x15], esi ; cmp byte ptr [rax - 0x77], cl ; ret
0x00000000007473a0 : clc ; add dword ptr [rdi], 0xf4bfec00 ; call qword ptr [rax]
0x000000000061ff78 : clc ; add dword ptr [rdi], ecx ; test bl, dl ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004c5353 : clc ; add dword ptr [rdi], ecx ; test cl, al ; add byte ptr [rax], al ; add cl, ch ; retf
0x00000000006a7c19 : clc ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0x8548
0x00000000007f8869 : clc ; add dword ptr [rip - 0x7ffcef2c], eax ; add dl, byte ptr [rdx] ; ret
0x00000000006ba184 : clc ; add eax, 0x83480000 ; ret
0x00000000007428f1 : clc ; add eax, 0xea095400 ; call rax
0x0000000000742901 : clc ; add eax, 0xea09f800 ; call qword ptr [rax]
0x00000000007aafad : clc ; add eax, 0xece29000 ; jmp qword ptr [rax]
0x0000000000684f91 : clc ; add eax, dword ptr [rbx - 0x7cbef81f] ; ret
0x0000000000685c5a : clc ; add eax, dword ptr [rbx - 0x7cbef81f] ; ret 0x4801
0x0000000000684fc9 : clc ; add eax, dword ptr [rbx - 0x7cbef81f] ; ret 0xd301
0x000000000065e2a5 : clc ; add eax, dword ptr [rcx + 0xf] ; xchg eax, esi ; ret 0xd285
0x0000000000685ccd : clc ; add eax, dword ptr [rcx - 0x7d] ; ret
0x00000000005e208d : clc ; add ebx, ebp ; xchg eax, ebp ; leave ; ret
0x00000000006b3653 : clc ; add ecx, dword ptr [rax + 0x29] ; retf -0x67b8
0x00000000005eea68 : clc ; add ecx, dword ptr [rax - 0x77] ; ret 0xb8
0x00000000005346d9 : clc ; add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x48 ; ret 0x8d4c
0x000000000079ae18 : clc ; add esp, edi ; call qword ptr [rbx]
0x0000000000740698 : clc ; add rax, -0x1a4ca000 ; call qword ptr [rax]
0x0000000000687d82 : clc ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000676d14 : clc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005091ba : clc ; add rsp, 8 ; ret
0x0000000000799268 : clc ; and al, 0xe6 ; call rdi
0x00000000005ed6b4 : clc ; and cl, byte ptr [rdx] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004f06ec : clc ; and dword ptr [rcx], edx ; call rax
0x00000000006ce57f : clc ; and eax, 1 ; ret
0x00000000007460b0 : clc ; and eax, dword ptr [rdi] ; add byte ptr [rax - 0x6f], dl ; call qword ptr [rax]
0x000000000078b998 : clc ; and ecx, esp ; jmp rdi
0x0000000000749dce : clc ; call qword ptr [rax]
0x0000000000548425 : clc ; call rax
0x00000000007392c0 : clc ; cli ; add al, byte ptr [rax] ; push rax ; sbb ebx, eax ; jmp qword ptr [rax]
0x000000000078f0a8 : clc ; cmc ; loope 0x78f0af ; retf 1
0x00000000006786fa : clc ; cmovg eax, esi ; ret
0x0000000000678704 : clc ; cmovs eax, esi ; ret
0x0000000000746500 : clc ; cmp al, byte ptr [rdi] ; add byte ptr [rax + 0x3b], dl ; call qword ptr [rax]
0x0000000000740490 : clc ; cmp al, byte ptr [rip - 0x1ab08000] ; call qword ptr [rax]
0x0000000000740470 : clc ; cmp dword ptr [rip - 0x1ab78000], eax ; call qword ptr [rax]
0x00000000006bf4e7 : clc ; cmp rdi, rsi ; cmova eax, edx ; ret
0x000000000074b4a0 : clc ; cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; nop ; salc ; stc ; call qword ptr [rax]
0x0000000000610cef : clc ; dec dword ptr [rax + 0x63] ; xor cl, byte ptr [rax - 0x77] ; ret
0x000000000074a136 : clc ; dec dword ptr [rax + 0x70000852] ; ret 0xfff8
0x00000000004c9f0f : clc ; dec dword ptr [rax - 0x73] ; ror byte ptr [r9 - 0x77], 1 ; ret 0x8948
0x00000000004ca0a7 : clc ; dec dword ptr [rax - 0x75] ; add eax, 0x538830 ; call rax
0x00000000005b8caa : clc ; dec dword ptr [rax - 0x75] ; cmp cl, byte ptr [rax - 0x77] ; ret
0x00000000004c9ead : clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004dc13f : clc ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000005125ee : clc ; dec dword ptr [rax - 0x77] ; ret 0xb8
0x000000000074a17e : clc ; dec dword ptr [rax - 0x7ffff7ad] ; ret
0x000000000074a046 : clc ; dec dword ptr [rax] ; or byte ptr [r8], r8b ; nop ; mov cl, 0xf8 ; jmp qword ptr [rax]
0x0000000000749ec6 : clc ; dec dword ptr [rax] ; or byte ptr [rax], al ; loopne 0x749e80 ; clc ; jmp qword ptr [rax]
0x0000000000749ff6 : clc ; dec dword ptr [rax] ; or byte ptr [rax], r8b ; push rax ; mov al, 0xf8 ; jmp qword ptr [rax]
0x00000000005ba5d6 : clc ; dec dword ptr [rdi] ; pushfq ; ret 0xbd80
0x00000000006a65b1 : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0x3941
0x0000000000749d76 : clc ; dec eax ; or byte ptr [r8], al ; xor al, 0xf8 ; jmp rax
0x0000000000748690 : clc ; fadd dword ptr [rdi] ; add byte ptr [rax], dh ; or dh, dh ; call qword ptr [rax]
0x0000000000782518 : clc ; fcomp st(6) ; call qword ptr [rbx]
0x0000000000738be0 : clc ; fld dword ptr [rdx] ; add byte ptr [rdx], cl ; fcom st(0), st(6) ; jmp qword ptr [rax]
0x00000000004c4eec : clc ; fst dword ptr [rbx] ; call rax
0x00000000007457c0 : clc ; in eax, 6 ; add byte ptr [rax], dl ; retf
0x00000000007443a5 : clc ; in eax, dx ; jmp qword ptr [rax]
0x000000000074a22e : clc ; inc dword ptr [rax + 0x856] ; iretd ; clc ; call rax
0x0000000000749d8e : clc ; inc dword ptr [rax - 0xffff7bc] ; clc ; call rax
0x000000000074a336 : clc ; inc dword ptr [rax] ; pop rbx ; or byte ptr [rax], al ; nop ; fprem ; jmp qword ptr [rax]
0x000000000074a2b6 : clc ; inc dword ptr [rax] ; pop rcx ; or byte ptr [rax], al ; and ch, dl ; clc ; jmp qword ptr [rax]
0x000000000074a376 : clc ; inc dword ptr [rax] ; pop rsp ; or byte ptr [rax], al ; xor bl, bl ; clc ; jmp qword ptr [rax]
0x000000000074a20e : clc ; inc dword ptr [rax] ; push rsi ; or byte ptr [rax], al ; nop ; retf
0x000000000074a2a6 : clc ; inc eax ; pop rax ; or byte ptr [rax], al ; adc ah, 0xf8 ; jmp rax
0x000000000074a366 : clc ; inc eax ; pop rbx ; or byte ptr [rax], al ; rcr dl, 1 ; clc ; jmp rax
0x000000000074a2e6 : clc ; inc eax ; pop rcx ; or byte ptr [rax], al ; add bh, dl ; clc ; jmp rax
0x000000000074a326 : clc ; inc eax ; pop rdx ; or byte ptr [rax], al ; xor cl, bl ; clc ; jmp rax
0x000000000074a3a6 : clc ; inc eax ; pop rsp ; or byte ptr [rax], al ; push rax ; fdiv st(0), st(0) ; jmp rax
0x000000000074a1fe : clc ; inc eax ; push rbp ; or byte ptr [rax], al ; adc bl, cl ; clc ; jmp rax
0x0000000000742228 : clc ; iretd ; add eax, 0xe83c0000 ; call qword ptr [rax]
0x000000000068372b : clc ; ja 0x683757 ; add rsp, 0x28 ; ret
0x000000000068372a : clc ; ja 0x683758 ; add rsp, 0x28 ; ret
0x00000000007470b0 : clc ; jb 0x7470c1 ; add byte ptr [rax + 0x53], al ; hlt ; call qword ptr [rax]
0x0000000000737780 : clc ; jbe 0x73778c ; add byte ptr [rsi], ah ; jb 0x737761 ; jmp qword ptr [rax]
0x00000000007441b0 : clc ; jbe 0x7441c0 ; add al, ah ; mov ebp, ebp ; call qword ptr [rax]
0x0000000000777618 : clc ; jbe 0x7775fa ; jmp qword ptr [rax]
0x00000000005a4b52 : clc ; je 0x5a4b6e ; lea edx, dword ptr [rsi + 1] ; ret
0x000000000073acc8 : clc ; jge 0x73acd5 ; add byte ptr [rax], dl ; xor ebp, ebx ; call qword ptr [rax]
0x0000000000783f88 : clc ; jle 0x783f6d ; call qword ptr [rax]
0x000000000073f4f8 : clc ; jmp 0xffffffffc393f507
0x0000000000749d06 : clc ; jmp qword ptr [rax]
0x0000000000749d7e : clc ; jmp rax
0x000000000074a930 : clc ; jne 0x74a942 ; add byte ptr [rax], dh ; stc ; call qword ptr [rax]
0x000000000073a9e0 : clc ; jno 0x73a9ed ; add byte ptr [rax], dh ; or bl, ch ; call qword ptr [rax]
0x00000000007410f0 : clc ; jns 0x7410ff ; add al, ah ; mov esi, esp ; call qword ptr [rax]
0x0000000000744040 : clc ; jo 0x744050 ; add byte ptr [rax], dh ; movsxd rbp, ebp ; call qword ptr [rax]
0x0000000000747038 : clc ; jo 0x747049 ; add byte ptr [rax + 0x4d], ah ; hlt ; call qword ptr [rax]
0x000000000079fd68 : clc ; jo 0x79fd56 ; jmp rcx
0x000000000074aa30 : clc ; jp 0x74aa42 ; add byte ptr [rax], dl ; pop rsp ; stc ; call qword ptr [rax]
0x00000000007471e0 : clc ; js 0x7471f1 ; add al, dh ; xchg ah, dh ; jmp qword ptr [rax]
0x0000000000741820 : clc ; lahf ; add eax, 0xe7508000 ; call qword ptr [rax]
0x000000000074a126 : clc ; lcall ptr [rax + 0x52] ; or byte ptr [rax], al ; ret 0xfff8
0x000000000074a16e : clc ; lcall ptr [rax + 0x53] ; or byte ptr [rax], al ; push rax ; ret
0x0000000000749e3e : clc ; lcall ptr [rax + 0x60000847] ; lahf ; clc ; call rax
0x000000000073e3d0 : clc ; lea eax, dword ptr [rax + rax] ; nop ; adc ah, dl ; call qword ptr [rax]
0x000000000040dbdd : clc ; leave ; ret
0x0000000000749f3e : clc ; ljmp ptr [rax + 0x6000084b] ; lodsd eax, dword ptr [rsi] ; clc ; call rax
0x000000000074a1f6 : clc ; ljmp ptr [rax - 0x4ffff7ab] ; retf -8
0x000000000074a3c6 : clc ; ljmp ptr [rax - 0xffff7a3] ; loop 0x74a3d0 ; jmp rax
0x000000000040bfc3 : clc ; lock add dword ptr [rax], 1 ; pop rbp ; ret
0x0000000000741aa0 : clc ; lodsb al, byte ptr [rsi] ; add eax, 0xe78c8000 ; call qword ptr [rax]
0x0000000000762860 : clc ; mov ah, dl ; jmp qword ptr [rbx]
0x00000000006c6d12 : clc ; mov al, sil ; ret
0x0000000000774d98 : clc ; mov bl, 0xdb ; jmp qword ptr [rax]
0x000000000066ab44 : clc ; mov byte ptr [rax + 0xa01c80], dl ; pop rbp ; ret
0x0000000000737b30 : clc ; mov byte ptr [rdx], al ; add ah, al ; fst st(3) ; jmp qword ptr [rax]
0x0000000000745260 : clc ; mov byte ptr [rsi], 0 ; push rax ; out dx, eax ; call qword ptr [rax]
0x00000000007ad508 : clc ; mov ch, ch ; call qword ptr [rdi]
0x0000000000739aec : clc ; mov cl, 0xd8 ; jmp qword ptr [rax]
0x000000000074aed8 : clc ; mov cs, word ptr [rax] ; add byte ptr [rax], dl ; xchg eax, ebp ; stc ; call qword ptr [rax]
0x000000000074b6b8 : clc ; mov dl, 8 ; add byte ptr [rax + 0x29], al ; cli ; call qword ptr [rax]
0x00000000005ce0e1 : clc ; mov dword ptr [rax + 0x10], 0 ; leave ; ret
0x000000000040df46 : clc ; mov dword ptr [rax + 0x18], edx ; pop rbp ; ret
0x000000000062210f : clc ; mov dword ptr [rbp - 0xc], esi ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000066ae69 : clc ; mov dword ptr [rbp - 0xc], esi ; nop ; pop rbp ; ret
0x0000000000745288 : clc ; mov dword ptr [rsi], 0xef482000 ; call qword ptr [rax]
0x0000000000415009 : clc ; mov eax, 0x100 ; pop rbp ; ret
0x0000000000413ed1 : clc ; mov eax, 0x140 ; pop rbp ; ret
0x00000000004507fb : clc ; mov eax, 0x180 ; pop rbp ; ret
0x000000000061bbb9 : clc ; mov eax, 0x1c0 ; pop rbp ; ret
0x0000000000455ab9 : clc ; mov eax, 0x40 ; pop rbp ; ret
0x00000000004136c9 : clc ; mov eax, 0x80 ; pop rbp ; ret
0x00000000004511db : clc ; mov eax, 0xc0 ; pop rbp ; ret
0x00000000005cf737 : clc ; mov eax, 1 ; nop ; pop rbp ; ret
0x00000000005d43ed : clc ; mov eax, dword ptr [rax + 0x10] ; nop ; pop rbp ; ret
0x000000000040ee63 : clc ; mov eax, dword ptr [rax + 0x18] ; nop ; pop rbp ; ret
0x00000000004420c7 : clc ; mov eax, dword ptr [rax + 0x20] ; nop ; pop rbp ; ret
0x0000000000618d5d : clc ; mov eax, dword ptr [rax + 0x28] ; nop ; pop rbp ; ret
0x0000000000512c80 : clc ; mov eax, dword ptr [rdi + rax + 0x28] ; ret
0x0000000000747670 : clc ; mov eax, dword ptr [rdi] ; add byte ptr [rdx], ch ; sal ah, cl ; call qword ptr [rax]
0x0000000000450717 : clc ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x0000000000517f39 : clc ; mov edx, esi ; jg 0x517f45 ; ret
0x000000000056f779 : clc ; mov edx, esi ; jg 0x56f785 ; ret
0x0000000000584029 : clc ; mov edx, esi ; jg 0x584035 ; ret
0x00000000005841a9 : clc ; mov edx, esi ; jg 0x5841b5 ; ret
0x000000000059c0d9 : clc ; mov edx, esi ; jg 0x59c0e5 ; ret
0x0000000000748048 : clc ; mov esi, 0xae800007 ; cmc ; call qword ptr [rax]
0x00000000006a17f1 : clc ; mov esi, esi ; add rax, rsi ; ret
0x00000000006a1811 : clc ; mov esi, esi ; imul rax, rsi ; ret
0x000000000061b97e : clc ; mov qword ptr [rax + 0x28], rcx ; mov rax, rdx ; leave ; ret
0x0000000000455aa8 : clc ; mov qword ptr [rax], 0x6dec80 ; pop rbp ; ret
0x0000000000455c12 : clc ; mov qword ptr [rax], 0x6dee00 ; pop rbp ; ret
0x0000000000456144 : clc ; mov qword ptr [rax], 0x6def40 ; pop rbp ; ret
0x0000000000455ac9 : clc ; mov qword ptr [rbp - 0x10], rsi ; mov dword ptr [rbp - 0x14], edx ; pop rbp ; ret
0x000000000066ab65 : clc ; mov qword ptr [rdx + 0xca8], rax ; leave ; ret
0x0000000000625117 : clc ; mov qword ptr [rip + 0x3da7b9], rax ; pop rbp ; ret
0x00000000004ef17d : clc ; mov qword ptr [rip + 0x50e18b], rax ; pop rbp ; ret
0x00000000004f0c5e : clc ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; nop ; leave ; ret
0x0000000000442107 : clc ; mov rax, qword ptr [rax + 0x10] ; nop ; pop rbp ; ret
0x000000000044c7ad : clc ; mov rax, qword ptr [rax + 0x18] ; nop ; pop rbp ; ret
0x000000000068f063 : clc ; mov rax, qword ptr [rax + 0x18] ; ret
0x000000000068f033 : clc ; mov rax, qword ptr [rax + 0x20] ; mov qword ptr [rax], rsi ; ret
0x000000000068eda3 : clc ; mov rax, qword ptr [rax + 0x20] ; mov rax, qword ptr [rax] ; ret
0x000000000068f9fb : clc ; mov rax, qword ptr [rax + 0x30] ; test al, 1 ; jne 0x68fa0f ; jmp rax
0x000000000068f093 : clc ; mov rax, qword ptr [rax + 0x40] ; ret
0x0000000000618d49 : clc ; mov rax, qword ptr [rax + 8] ; nop ; pop rbp ; ret
0x0000000000618f41 : clc ; mov rax, qword ptr [rax] ; nop ; pop rbp ; ret
0x00000000004800d9 : clc ; mov rax, qword ptr [rbp - 0x18] ; nop ; leave ; ret
0x000000000040d846 : clc ; mov rax, qword ptr [rbp - 8] ; nop ; pop rbp ; ret
0x000000000061d645 : clc ; mov rax, qword ptr [rip + 0x3e529b] ; call rax
0x000000000061ca9b : clc ; mov rax, qword ptr [rip + 0x3e5e45] ; call rax
0x000000000061b60b : clc ; mov rax, qword ptr [rip + 0x3e72d5] ; call rax
0x000000000061b49d : clc ; mov rax, qword ptr [rip + 0x3e7443] ; call rax
0x000000000061ad93 : clc ; mov rax, qword ptr [rip + 0x3e7b4d] ; call rax
0x000000000061acb5 : clc ; mov rax, qword ptr [rip + 0x3e7c2b] ; call rax
0x00000000006188bf : clc ; mov rax, qword ptr [rip + 0x3ea021] ; call rax
0x0000000000618223 : clc ; mov rax, qword ptr [rip + 0x3ea6bd] ; call rax
0x00000000005ed2d5 : clc ; mov rax, qword ptr [rip + 0x41560b] ; call rax
0x00000000005eb6c5 : clc ; mov rax, qword ptr [rip + 0x41721b] ; call rax
0x00000000005eb557 : clc ; mov rax, qword ptr [rip + 0x417389] ; call rax
0x00000000005eaee3 : clc ; mov rax, qword ptr [rip + 0x4179fd] ; call rax
0x00000000005eae05 : clc ; mov rax, qword ptr [rip + 0x417adb] ; call rax
0x00000000005e9f3b : clc ; mov rax, qword ptr [rip + 0x4189a5] ; call rax
0x00000000005e83ad : clc ; mov rax, qword ptr [rip + 0x41a533] ; call rax
0x00000000005e823f : clc ; mov rax, qword ptr [rip + 0x41a6a1] ; call rax
0x00000000005e7bcb : clc ; mov rax, qword ptr [rip + 0x41ad15] ; call rax
0x00000000005e7aed : clc ; mov rax, qword ptr [rip + 0x41adf3] ; call rax
0x00000000005e0e77 : clc ; mov rax, qword ptr [rip + 0x421a69] ; call rax
0x00000000005e07d7 : clc ; mov rax, qword ptr [rip + 0x422109] ; call rax
0x00000000005d3fd1 : clc ; mov rax, qword ptr [rip + 0x42e90f] ; call rax
0x00000000005d3931 : clc ; mov rax, qword ptr [rip + 0x42efaf] ; call rax
0x00000000004b9377 : clc ; mov rax, qword ptr [rip + 0x549569] ; call rax
0x00000000004b7f9f : clc ; mov rax, qword ptr [rip + 0x54a941] ; call rax
0x00000000004b7e31 : clc ; mov rax, qword ptr [rip + 0x54aaaf] ; call rax
0x00000000004b7783 : clc ; mov rax, qword ptr [rip + 0x54b15d] ; call rax
0x00000000004b76a5 : clc ; mov rax, qword ptr [rip + 0x54b23b] ; call rax
0x00000000004b7111 : clc ; mov rax, qword ptr [rip + 0x54b7cf] ; call rax
0x00000000004b5d39 : clc ; mov rax, qword ptr [rip + 0x54cba7] ; call rax
0x00000000004b5bcb : clc ; mov rax, qword ptr [rip + 0x54cd15] ; call rax
0x00000000004b551d : clc ; mov rax, qword ptr [rip + 0x54d3c3] ; call rax
0x00000000004b543f : clc ; mov rax, qword ptr [rip + 0x54d4a1] ; call rax
0x00000000004a35af : clc ; mov rax, qword ptr [rip + 0x55f331] ; call rax
0x00000000004a21d7 : clc ; mov rax, qword ptr [rip + 0x560709] ; call rax
0x00000000004a2069 : clc ; mov rax, qword ptr [rip + 0x560877] ; call rax
0x00000000004a19bb : clc ; mov rax, qword ptr [rip + 0x560f25] ; call rax
0x00000000004a18dd : clc ; mov rax, qword ptr [rip + 0x561003] ; call rax
0x000000000049f5e3 : clc ; mov rax, qword ptr [rip + 0x5632fd] ; call rax
0x000000000047d0bb : clc ; mov rax, qword ptr [rip + 0x585825] ; call rax
0x0000000000472ee5 : clc ; mov rax, qword ptr [rip + 0x58f9fb] ; call rax
0x0000000000471b0d : clc ; mov rax, qword ptr [rip + 0x590dd3] ; call rax
0x000000000047199f : clc ; mov rax, qword ptr [rip + 0x590f41] ; call rax
0x00000000004712f1 : clc ; mov rax, qword ptr [rip + 0x5915ef] ; call rax
0x0000000000471213 : clc ; mov rax, qword ptr [rip + 0x5916cd] ; call rax
0x000000000046f1d1 : clc ; mov rax, qword ptr [rip + 0x59370f] ; call rax
0x00000000004654d1 : clc ; mov rax, qword ptr [rip + 0x59d40f] ; call rax
0x000000000045cfb7 : clc ; mov rax, qword ptr [rip + 0x5a5929] ; call rax
0x00000000004549fb : clc ; mov rax, qword ptr [rip + 0x5adee5] ; call rax
0x0000000000453623 : clc ; mov rax, qword ptr [rip + 0x5af2bd] ; call rax
0x00000000004534b5 : clc ; mov rax, qword ptr [rip + 0x5af42b] ; call rax
0x0000000000452e07 : clc ; mov rax, qword ptr [rip + 0x5afad9] ; call rax
0x0000000000452d29 : clc ; mov rax, qword ptr [rip + 0x5afbb7] ; call rax
0x000000000045120f : clc ; mov rax, qword ptr [rip + 0x5b16d1] ; call rax
0x000000000045027d : clc ; mov rax, qword ptr [rip + 0x5b2663] ; call rax
0x000000000045010f : clc ; mov rax, qword ptr [rip + 0x5b27d1] ; call rax
0x000000000044fa6d : clc ; mov rax, qword ptr [rip + 0x5b2e73] ; call rax
0x000000000044f98f : clc ; mov rax, qword ptr [rip + 0x5b2f51] ; call rax
0x000000000044c3a1 : clc ; mov rax, qword ptr [rip + 0x5b653f] ; call rax
0x0000000000441e87 : clc ; mov rax, qword ptr [rip + 0x5c0a59] ; call rax
0x0000000000433acf : clc ; mov rax, qword ptr [rip + 0x5cee11] ; call rax
0x0000000000432807 : clc ; mov rax, qword ptr [rip + 0x5d00d9] ; call rax
0x0000000000432699 : clc ; mov rax, qword ptr [rip + 0x5d0247] ; call rax
0x0000000000432025 : clc ; mov rax, qword ptr [rip + 0x5d08bb] ; call rax
0x0000000000431f47 : clc ; mov rax, qword ptr [rip + 0x5d0999] ; call rax
0x000000000042d5f3 : clc ; mov rax, qword ptr [rip + 0x5d52ed] ; call rax
0x000000000042cfc3 : clc ; mov rax, qword ptr [rip + 0x5d591d] ; call rax
0x00000000004244af : clc ; mov rax, qword ptr [rip + 0x5de431] ; call rax
0x00000000004231e7 : clc ; mov rax, qword ptr [rip + 0x5df6f9] ; call rax
0x0000000000423079 : clc ; mov rax, qword ptr [rip + 0x5df867] ; call rax
0x0000000000422a05 : clc ; mov rax, qword ptr [rip + 0x5dfedb] ; call rax
0x0000000000422927 : clc ; mov rax, qword ptr [rip + 0x5dffb9] ; call rax
0x000000000041e625 : clc ; mov rax, qword ptr [rip + 0x5e42bb] ; call rax
0x000000000041dff5 : clc ; mov rax, qword ptr [rip + 0x5e48eb] ; call rax
0x000000000041503d : clc ; mov rax, qword ptr [rip + 0x5ed8a3] ; call rax
0x0000000000413d75 : clc ; mov rax, qword ptr [rip + 0x5eeb6b] ; call rax
0x0000000000413c07 : clc ; mov rax, qword ptr [rip + 0x5eecd9] ; call rax
0x0000000000413593 : clc ; mov rax, qword ptr [rip + 0x5ef34d] ; call rax
0x00000000004134b5 : clc ; mov rax, qword ptr [rip + 0x5ef42b] ; call rax
0x000000000040eb0d : clc ; mov rax, qword ptr [rip + 0x5f3dd3] ; call rax
0x000000000040e4dd : clc ; mov rax, qword ptr [rip + 0x5f4403] ; call rax
0x00000000006d464b : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004a371f : clc ; mov rdi, rax ; call 0x4a0194
0x00000000004a371e : clc ; mov rdi, rax ; call 0x4a0195
0x0000000000487c52 : clc ; mov rdi, rax ; call 0x6d4746
0x000000000061a5cb : clc ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; pop rbp ; ret
0x00000000005502b2 : clc ; mov rdx, rsi ; ret
0x00000000004417ea : clc ; mov rsi, rcx ; mov rdi, rax ; call 0x43da51
0x00000000004b960c : clc ; mov rsi, rcx ; mov rdi, rax ; call 0x4660cb
0x00000000004a37b8 : clc ; mov rsi, rcx ; mov rdi, rax ; call 0x4a0223
0x00000000004b56b3 : clc ; mov rsi, rcx ; mov rdi, rax ; call 0x6819b9
0x00000000004b56f5 : clc ; mov rsi, rcx ; mov rdi, rax ; call 0x6819c9
0x0000000000455071 : clc ; mov rsi, rdx ; mov rdi, rax ; call 0x6c1379
0x00000000007476c0 : clc ; mov word ptr [rdi], es ; add byte ptr [rsi - 0x2a], bl ; hlt ; jmp qword ptr [rax]
0x00000000007b6be8 : clc ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, eax ; jmp rdx
0x000000000068f539 : clc ; movsxd rax, esi ; mov eax, dword ptr [rdx + rax*4] ; ret
0x00000000006153e7 : clc ; movzx eax, byte ptr [rax + 0x18] ; nop ; pop rbp ; ret
0x000000000068fbb8 : clc ; movzx eax, byte ptr [rax + 0x29] ; ret
0x000000000068f9e3 : clc ; movzx eax, byte ptr [rax + 0x2a] ; ret
0x00000000005f3537 : clc ; movzx eax, byte ptr [rax] ; nop ; pop rbp ; ret
0x000000000053ad10 : clc ; movzx eax, byte ptr [rdi + rax + 0x50] ; ret
0x000000000061a598 : clc ; movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x18], dl ; pop rbp ; ret
0x00000000007fa7f6 : clc ; nop ; add dword ptr [rax], eax ; ret
0x000000000040ef35 : clc ; nop ; leave ; ret
0x000000000040d84a : clc ; nop ; pop rbp ; ret
0x000000000066457d : clc ; not eax ; pop rbx ; ret
0x0000000000678471 : clc ; not eax ; shr al, 7 ; ret
0x00000000006c9541 : clc ; or ah, 0x40 ; ret
0x0000000000668b3c : clc ; or al, 0x74 ; add eax, 0x8c48348 ; ret
0x0000000000667829 : clc ; or al, 0x75 ; ret 0x10be
0x00000000004a74b4 : clc ; or al, 0x7e ; adc al, 0xbe ; retf
0x000000000074a090 : clc ; or byte ptr [r8], r8b ; mov al, 0xb7 ; clc ; call qword ptr [rax]
0x000000000067ae3e : clc ; or byte ptr [rdi], cl ; ret 0x9848
0x0000000000749938 : clc ; or byte ptr cs:[rax], al ; ret
0x000000000074a5b8 : clc ; or byte ptr gs:[rax], al ; add byte ptr [rdx], 0xf9 ; call qword ptr [rax]
0x000000000075b330 : clc ; or cl, dl ; call rsp
0x000000000074ab58 : clc ; or dword ptr [rax], 0xf9786000 ; jmp qword ptr [rax]
0x00000000007d3221 : clc ; or dword ptr [rax], eax ; ret
0x000000000067adaf : clc ; or dword ptr [rdi], ecx ; ret 0x9848
0x000000000073fad0 : clc ; or dword ptr [rip - 0x1b540000], eax ; call qword ptr [rax]
0x00000000005016f3 : clc ; or eax, 0xff66348 ; ret 0x9848
0x00000000006568ea : clc ; or eax, dword ptr [rax] ; add byte ptr [rcx], ch ; ret
0x000000000069d5c9 : clc ; or eax, edx ; ret
0x0000000000742904 : clc ; or edx, ebp ; call qword ptr [rax]
0x000000000073492c : clc ; or esi, ecx ; jmp rax
0x000000000053ed81 : clc ; or rax, rdx ; ret
0x000000000079acf1 : clc ; out 0xff, al ; add ax, word ptr [rax] ; add byte ptr [rsp], al ; retf
0x00000000007b4548 : clc ; out dx, eax ; call qword ptr [rdi]
0x000000000074591d : clc ; out dx, eax ; call rax
0x00000000007b4c18 : clc ; out dx, eax ; jmp qword ptr [rsi]
0x000000000074a750 : clc ; outsb dx, byte ptr [rsi] ; or byte ptr [rax], al ; jo 0x74a78a ; stc ; call qword ptr [rax]
0x0000000000659739 : clc ; outsb dx, byte ptr [rsi] ; sete al ; pop rbx ; ret
0x0000000000740f10 : clc ; outsd dx, dword ptr [rsi] ; add eax, 0xe6518000 ; call qword ptr [rax]
0x00000000007409b8 : clc ; pop rax ; add eax, 0xe5fdb000 ; call qword ptr [rax]
0x0000000000423090 : clc ; pop rbp ; add bh, bh ; ror cl, 1 ; ret
0x000000000040ba6d : clc ; pop rbp ; ret
0x0000000000568c6f : clc ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000525bfc : clc ; pop rbx ; ret
0x000000000051e92e : clc ; pop rcx ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000656694 : clc ; pop rdi ; sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000722f5c : clc ; pop rsp ; scasb al, byte ptr [rdi] ; jne 0x722f5c ; add cl, ch ; ret 0x7f83
0x0000000000722f5c : clc ; pop rsp ; scasb al, byte ptr [rdi] ; jne 0x722f5d ; add cl, ch ; ret 0x7f83
0x0000000000659719 : clc ; push 0x5bc0940f ; ret
0x0000000000749f86 : clc ; push qword ptr [rax + 0x4000084c] ; scasd eax, dword ptr [rdi] ; clc ; call rax
0x000000000074a1e6 : clc ; push qword ptr [rax + 0x55] ; or byte ptr [rax], al ; nop ; retf -8
0x000000000074a07e : clc ; push qword ptr [rax - 0x6ffff7b1] ; mov bh, 0xf8 ; jmp rax
0x00000000006c8f97 : clc ; push qword ptr [rbp + 0x39] ; ret
0x000000000065bdf4 : clc ; push qword ptr [rbp + 6] ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000006c831a : clc ; push qword ptr [rbp + rax + 0x48] ; add esp, 8 ; ret
0x000000000068e6df : clc ; push qword ptr [rbp + rax + 0x5b] ; ret
0x00000000006ce4e1 : clc ; push qword ptr [rbp - 0x1d] ; mov dword ptr [rsi], eax ; ret
0x00000000006c70bc : clc ; push qword ptr [rbp - 0x31] ; pop rbx ; ret
0x00000000006c82d3 : clc ; push qword ptr [rcx + rbx + 0x48] ; add esp, 8 ; ret
0x00000000006ca076 : clc ; push qword ptr [rsi + rax + 0x48] ; add esp, 0x40 ; pop rbx ; ret
0x00000000007fa0bf : clc ; push rax ; retf
0x000000000073d898 : clc ; push rsi ; add al, 0 ; sbb byte ptr [rax], 0xe1 ; call qword ptr [rax]
0x000000000073d818 : clc ; push rsp ; add al, 0 ; rcl byte ptr [rbx], 0xe1 ; call qword ptr [rax]
0x0000000000402618 : clc ; ret
0x0000000000433064 : clc ; ret 0x6d
0x0000000000402318 : clc ; ret 0x9f
0x0000000000779338 : clc ; ret 0xffdc
0x00000000005619d4 : clc ; retf
0x0000000000744d1c : clc ; retf -0x12
0x0000000000792c38 : clc ; retf -0x1d
0x0000000000501db4 : clc ; retf 0x1b
0x0000000000735350 : clc ; retf 1
0x00000000007388e0 : clc ; retf 2
0x0000000000748368 : clc ; retf 7
0x00000000006c9551 : clc ; rol ax, 8 ; ret
0x0000000000738a10 : clc ; rol byte ptr [rdx], 1 ; add byte ptr [rsi - 0x5c], bh ; salc ; jmp qword ptr [rax]
0x0000000000748510 : clc ; rol dword ptr [rdi], 1 ; add byte ptr [rax - 0x14], dl ; cmc ; call qword ptr [rax]
0x0000000000738a48 : clc ; rol dword ptr [rdx], 1 ; add byte ptr [rcx + rbp*4 - 0x2a], ah ; jmp qword ptr [rax]
0x0000000000733f30 : clc ; rol dword ptr [rip - 0x32e24000], cl ; call qword ptr [rax]
0x00000000007cd8bd : clc ; sbb dword ptr [rax], eax ; retf
0x000000000073fe08 : clc ; sbb dword ptr [rip - 0x1af7a000], eax ; call qword ptr [rax]
0x000000000074b628 : clc ; scasb al, byte ptr [rdi] ; or byte ptr [rax], al ; adc byte ptr [rdx], dl ; cli ; jmp qword ptr [rax]
0x000000000066705f : clc ; setg cl ; cmp cl, dl ; jne 0x667070 ; ret
0x000000000066708f : clc ; setg cl ; cmp cl, dl ; jne 0x6670a0 ; ret
0x00000000006670bf : clc ; setg cl ; cmp cl, dl ; jne 0x6670d0 ; ret
0x00000000006770af : clc ; setg cl ; cmp cl, dl ; jne 0x6770c0 ; ret
0x0000000000666fcd : clc ; setl cl ; cmp cl, dl ; jne 0x666fde ; ret
0x0000000000666ffd : clc ; setl cl ; cmp cl, dl ; jne 0x66700e ; ret
0x000000000066702d : clc ; setl cl ; cmp cl, dl ; jne 0x66703e ; ret
0x00000000006a1882 : clc ; shr rax, 0x20 ; ret
0x00000000006472a7 : clc ; sldt word ptr [rax] ; call 0x563d86
0x0000000000527b54 : clc ; sub al, 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007461d0 : clc ; sub byte ptr [rdi], al ; add byte ptr [rax - 0x59], ah ; call qword ptr [rax]
0x0000000000749850 : clc ; sub cl, byte ptr [rax] ; add al, al ; mov cl, 0xf7 ; call qword ptr [rax]
0x0000000000414ed6 : clc ; sub eax, dword ptr [rax] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000006c5713 : clc ; sub eax, dword ptr [rcx - 0x77] ; ret 0x1674
0x00000000007e640f : clc ; syscall
0x0000000000742cb4 : clc ; test al, 0xea ; jmp qword ptr [rax]
0x000000000068f2e3 : clc ; test al, 1 ; jne 0x68f2fa ; mov rdi, rbx ; call rax
0x000000000068f2e2 : clc ; test al, 1 ; jne 0x68f2fb ; mov rdi, rbx ; call rax
0x000000000040d866 : clc ; test rax, rax ; setne al ; nop ; pop rbp ; ret
0x0000000000741608 : clc ; xchg eax, ebp ; add eax, 0xe7348000 ; call qword ptr [rax]
0x00000000007415a8 : clc ; xchg eax, ebx ; add eax, 0xe7227000 ; jmp qword ptr [rax]
0x0000000000741530 : clc ; xchg eax, ecx ; add eax, 0xe7163000 ; call qword ptr [rax]
0x0000000000741568 : clc ; xchg eax, edx ; add eax, 0xe71af000 ; call qword ptr [rax]
0x0000000000749a50 : clc ; xor al, 8 ; add al, dh ; in eax, -9 ; call qword ptr [rax]
0x00000000005429a1 : clc ; xor eax, 1 ; ret
0x000000000069cad5 : clc ; xor eax, esi ; ret
0x00000000006a1864 : clc ; xor edx, edx ; div rsi ; mov rax, rdx ; ret
0x00000000006a1824 : clc ; xor edx, edx ; div rsi ; ret
0x000000000066bac2 : clc ; xor edx, edx ; ret
0x000000000079b34d : cld ; add al, 0 ; sbb al, 0xe7 ; jmp qword ptr [rcx]
0x0000000000694648 : cld ; add al, 0xf ; xchg eax, esp ; ret 0xfb83
0x00000000005a2c6b : cld ; add byte ptr [r8 - 0x77], r9b ; fucompi st(0) ; retf 0x131a
0x000000000052d260 : cld ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000603082 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x000000000055fafe : cld ; add cl, byte ptr [rax - 0x77] ; ret
0x0000000000507c48 : cld ; add cl, byte ptr [rdi] ; lahf ; ret 0x854d
0x0000000000694783 : cld ; add cl, byte ptr [rdi] ; xchg eax, esi ; ret 0xfb83
0x0000000000413562 : cld ; add dword ptr [rax + rbx - 0x15], esi ; or ecx, dword ptr [rax - 0x77] ; ret
0x00000000007f478f : cld ; add dword ptr [rax], eax ; ret
0x000000000040b2d1 : cld ; add dword ptr [rcx - 0x15], esi ; or ecx, dword ptr [rax - 0x77] ; ret
0x0000000000694794 : cld ; add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xfb83
0x00000000007ea9ff : cld ; add dword ptr [rdx], ecx ; ret
0x00000000007c5311 : cld ; add dword ptr [rsi], esi ; add byte ptr [rax], al ; ret 0x502
0x000000000075de04 : cld ; add dword ptr es:[rax], eax ; push rsp ; not ecx ; jmp qword ptr [rbx]
0x000000000043bdc6 : cld ; add ebx, ebp ; mov bh, 0x90 ; pop rbp ; ret
0x000000000043c19c : cld ; add ebx, ebp ; ret
0x000000000069462e : cld ; add ecx, dword ptr [rdi] ; xchg eax, edi ; ret 0xfb83
0x0000000000694772 : cld ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xfb83
0x000000000048ebd3 : cld ; and al, byte ptr [rax] ; leave ; ret
0x00000000007eb4cf : cld ; and byte ptr [rax], al ; pushfq ; syscall
0x0000000000736c44 : cld ; and dl, dl ; call qword ptr [rax]
0x0000000000651bb8 : cld ; call 0x6be5d3
0x000000000054fb50 : cld ; call qword ptr [rdx]
0x00000000007443a4 : cld ; clc ; in eax, dx ; jmp qword ptr [rax]
0x00000000007f0bce : cld ; cmp al, byte ptr [rax] ; ret
0x00000000004f18e2 : cld ; dec dword ptr [rax - 0x75] ; add eax, 0x510ff5 ; call rax
0x00000000004ebce3 : cld ; dec dword ptr [rax - 0x75] ; add eax, 0x516bf4 ; call rax
0x00000000006bfbde : cld ; dec dword ptr [rax - 0x77] ; cmp eax, 0x342ea1 ; ret
0x00000000006b1685 : cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c6d9d : cld ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x00000000004c6b4b : cld ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000076a404 : cld ; in al, dx ; add dword ptr [rax], eax ; push rsp ; pushfq ; leave ; call qword ptr [rdx]
0x00000000007b0119 : cld ; in eax, dx ; jmp qword ptr [rcx]
0x00000000007b00d1 : cld ; in eax, dx ; jmp rdx
0x00000000007aa904 : cld ; int1 ; add eax, 0xecdae800 ; call qword ptr [rdx]
0x000000000073590d : cld ; iretd ; jmp qword ptr [rax]
0x00000000006bd351 : cld ; jb 0x6bd35d ; test byte ptr [rdi + rsi], al ; setne al ; ret
0x00000000006be43c : cld ; jb 0x6be448 ; movzx eax, al ; or byte ptr [rdi + rax], dl ; ret
0x00000000007627e0 : cld ; jge 0x7627ba ; jmp qword ptr [rbx]
0x00000000007b3104 : cld ; jns 0x7b3114 ; add byte ptr [rdx + 0xf], cl ; out dx, eax ; jmp qword ptr [rax]
0x00000000007f4020 : cld ; leave ; add dword ptr [rip + 0x1b18e], eax ; xchg eax, ecx ; retf 0x501
0x000000000041fc70 : cld ; mov al, 0x26 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007a6f04 : cld ; mov bh, 5 ; add byte ptr [rax], bh ; fsub st(3), st(0) ; call qword ptr [rsi]
0x000000000043add0 : cld ; mov eax, dword ptr [rbp - 4] ; nop ; leave ; ret
0x000000000068d84d : cld ; mov esi, eax ; mov rdi, rbp ; call 0x689b28
0x000000000066ab76 : cld ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x00000000006bf546 : cld ; mov qword ptr [rdi + 0x40], rax ; ret
0x0000000000794444 : cld ; mov word ptr [rax + rax], es ; xchg eax, esp ; js 0x794436 ; call rsp
0x00000000007a4804 : cld ; nop ; add eax, 0xc6334a00 ; call qword ptr [rdx]
0x0000000000642d80 : cld ; nop ; dec dword ptr [rax - 0x77] ; ret
0x000000000043abe8 : cld ; nop ; leave ; ret
0x00000000005d440f : cld ; nop ; pop rbp ; ret
0x00000000007cc523 : cld ; or al, 5 ; ret
0x00000000007d242f : cld ; or byte ptr [rax], al ; ret 0x403
0x00000000007e8a10 : cld ; or dword ptr [rsi], esp ; retf 0x12
0x00000000007ac504 : cld ; or eax, 0x46c00006 ; in eax, dx ; call qword ptr [rbx]
0x00000000007d43a9 : cld ; or eax, dword ptr [rbx] ; out dx, al ; syscall
0x00000000007d43d9 : cld ; or eax, dword ptr [rbx] ; ret
0x00000000007d4391 : cld ; or eax, dword ptr [rbx] ; sahf ; syscall
0x00000000007d435b : cld ; or eax, dword ptr [rbx] ; xchg eax, edx ; or eax, 0x30cb105 ; retf 0x50d
0x00000000006740b6 : cld ; pop rsp ; jb 0x6740be ; ret
0x000000000063f31a : cld ; push 0xe8 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000750f04 : cld ; push rdi ; add byte ptr [rax], al ; retf -0x33
0x00000000007a0e04 : cld ; push rsi ; add eax, 0xe8a39800 ; jmp qword ptr [rax]
0x0000000000755404 : cld ; pushfq ; add byte ptr [rax], al ; pop rdx ; jae 0x7553e1 ; call qword ptr [rdx]
0x0000000000548004 : cld ; ret
0x00000000005365e0 : cld ; ret 0x4c
0x00000000007fa11d : cld ; ret 1
0x0000000000797a44 : cld ; ret 4
0x000000000043eefa : cld ; retf
0x0000000000778244 : cld ; retf 2
0x0000000000549450 : cld ; retf 5
0x0000000000788a04 : cld ; rol byte ptr [rbx], cl ; add byte ptr [rax], bh ; jg 0x7889f2 ; call qword ptr [rbx]
0x00000000006b2766 : cld ; sar esp, cl ; dec dword ptr [rax - 0x77] ; ret
0x00000000004eec48 : cld ; sbb al, 0 ; leave ; ret
0x0000000000722e93 : cld ; sbb al, 9 ; retf
0x000000000079d004 : cld ; sbb byte ptr [rip - 0x182a9400], al ; call qword ptr [rbx]
0x00000000007ad504 : cld ; sbb eax, 0x8af80006 ; in eax, dx ; call qword ptr [rdi]
0x0000000000733a21 : cld ; stc ; jmp rsp
0x00000000007a8230 : cld ; sub ah, ch ; jmp qword ptr [rcx]
0x0000000000404ac7 : cld ; sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041a5b0 : cld ; sub al, byte ptr [rax] ; leave ; ret
0x00000000007e7689 : cld ; sub al, byte ptr [rip - 0x6bffd456] ; sub al, 5 ; ret
0x00000000006bf2b6 : cld ; sub rax, 1 ; jne 0x6bf2b7 ; ret
0x000000000079c704 : cld ; syscall
0x000000000054c040 : cld ; xchg byte ptr [rax], bl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007f5ae5 : cld ; xor eax, dword ptr [rip - 0x6fffc912] ; xor al, 5 ; ret
0x00000000007e4cc4 : cli ; adc al, byte ptr [rax] ; xchg eax, edi ; add ebx, dword ptr [rcx] ; call qword ptr [rdx]
0x0000000000602362 : cli ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000006c9df5 : cli ; adc byte ptr [rbp - 0x25], dh ; ret
0x000000000049f5d2 : cli ; adc byte ptr [rdx], ah ; add cl, cl ; ret
0x000000000060f756 : cli ; adc cl, byte ptr [rax - 0x77] ; ret
0x000000000060f456 : cli ; adc dword ptr [rax - 0x77], ecx ; ret
0x000000000060f5b0 : cli ; adc ecx, dword ptr [rax - 0x77] ; ret
0x000000000073f829 : cli ; add al, 0 ; push rax ; or ah, ah ; call qword ptr [rax]
0x00000000007392c1 : cli ; add al, byte ptr [rax] ; push rax ; sbb ebx, eax ; jmp qword ptr [rax]
0x00000000007cecd2 : cli ; add al, byte ptr [rax] ; ret 0x401
0x00000000005f3655 : cli ; add byte ptr [rax], al ; add byte ptr [rax + 0x6348137c], al ; retf
0x0000000000561d80 : cli ; add ch, byte ptr [rcx] ; fimul dword ptr [rax + 0x63] ; retf 0x148
0x00000000006a8e52 : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000006cf6f6 : cli ; add ch, byte ptr [rcx] ; ret 0x6348
0x00000000006a901f : cli ; add ch, byte ptr [rcx] ; ret 0x8941
0x00000000005fc093 : cli ; add ch, byte ptr [rcx] ; retf 0x6348
0x000000000069632c : cli ; add ch, byte ptr [rcx] ; retf 0x7a8d
0x00000000006a9439 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x00000000005f7f11 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000561dc1 : cli ; add cl, byte ptr [rax + 0x63] ; ret 0x148
0x00000000004f6ce5 : cli ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000053a386 : cli ; add cl, byte ptr [rax - 0x77] ; vminps ymm9, ymm1, ymmword ptr [rax - 0x77] ; ret
0x0000000000636e2a : cli ; add cl, byte ptr [rcx - 0x77] ; vunpcklps ymm9, ymm1, ymmword ptr [rax - 0x77] ; ret
0x0000000000661f1d : cli ; add cl, byte ptr [rdi] ; ret 0x7c83
0x0000000000661a89 : cli ; add cl, byte ptr [rdi] ; ret 0xfd83
0x00000000004d7d1f : cli ; add dh, byte ptr [rax + rcx + 0x48] ; mov edi, eax ; call 0x6d4749
0x00000000004484e8 : cli ; add dword ptr [rax + rcx + 0x48], esi ; mov edi, eax ; call 0x6d4749
0x00000000004fd6f2 : cli ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000662986 : cli ; add dword ptr [rdi], ecx ; xchg byte ptr [rdx - 0x76fffff6], bh ; ret 0xe283
0x0000000000691550 : cli ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd184
0x0000000000519f7f : cli ; add dword ptr [rsi + 0xd], edi ; sub edx, 1 ; ret
0x0000000000677933 : cli ; add eax, 0x2944c931 ; retf -0x2d95
0x0000000000678011 : cli ; add eax, 0x6bd22944 ; ret 0x3964
0x0000000000600905 : cli ; add eax, 0x74c58949 ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000005150bd : cli ; add eax, 0x74c68949 ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000057700e : cli ; add eax, 0x74c68949 ; adc ecx, dword ptr [rax - 0x77] ; ret
0x000000000065bd48 : cli ; add eax, 0x74c68949 ; and byte ptr [rax - 0x77], cl ; ret
0x00000000006210b0 : cli ; add eax, 0x83d88900 ; rol byte ptr [rcx], 0x89 ; ret
0x00000000007ab225 : cli ; add eax, 0xecf71800 ; jmp qword ptr [rdi]
0x000000000073c529 : cli ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x21], dl ; call rax
0x00000000005fff9f : cli ; add eax, dword ptr [rax] ; add byte ptr [rcx], al ; retf -0x2ec7
0x000000000078b165 : cli ; add eax, dword ptr [rax] ; or al, 0xe1 ; call qword ptr [rbx]
0x000000000078b13d : cli ; add eax, dword ptr [rax] ; or al, 0xe1 ; jmp qword ptr [rdi]
0x00000000004f8c26 : cli ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000006841cf : cli ; add rsp, 8 ; ret
0x0000000000645e62 : cli ; and byte ptr [rax - 0x77], cl ; ret
0x00000000006c3d91 : cli ; and byte ptr [rcx], ch ; ret 0xfa83
0x00000000006d0aa5 : cli ; and byte ptr [rdi + 0x48], dh ; add esp, 8 ; ret
0x0000000000645f7b : cli ; and cl, byte ptr [rax - 0x77] ; ret
0x00000000004d23c3 : cli ; call 0x4ce6b9
0x000000000074b686 : cli ; call qword ptr [rax]
0x000000000050314b : cli ; call rax
0x0000000000767818 : cli ; call rsi
0x0000000000632e7f : cli ; cmp al, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x00000000007dc8c0 : cli ; cmp al, 0 ; ret 0x53c
0x0000000000698d48 : cli ; cmp cl, byte ptr [rax - 0x77] ; ret
0x000000000069a165 : cli ; cmp dword ptr [rax - 0x77], ecx ; ret
0x00000000004b9198 : cli ; dec dword ptr [rax - 0x75] ; add eax, 0x54973f ; call rax
0x00000000004b8d34 : cli ; dec dword ptr [rax - 0x75] ; add eax, 0x549ba3 ; call rax
0x00000000004b8564 : cli ; dec dword ptr [rax - 0x75] ; add eax, 0x54a373 ; call rax
0x00000000004b79be : cli ; dec dword ptr [rax - 0x75] ; add eax, 0x54af19 ; call rax
0x00000000004b6f32 : cli ; dec dword ptr [rax - 0x75] ; add eax, 0x54b9a5 ; call rax
0x00000000004b6ace : cli ; dec dword ptr [rax - 0x75] ; add eax, 0x54be09 ; call rax
0x00000000004b62fe : cli ; dec dword ptr [rax - 0x75] ; add eax, 0x54c5d9 ; call rax
0x00000000004b5758 : cli ; dec dword ptr [rax - 0x75] ; add eax, 0x54d17f ; call rax
0x00000000004b1d09 : cli ; dec dword ptr [rax - 0x75] ; add eax, 0x550bce ; call rax
0x00000000004b1ba1 : cli ; dec dword ptr [rax - 0x75] ; add eax, 0x550d36 ; call rax
0x00000000004b1ac8 : cli ; dec dword ptr [rax - 0x75] ; add eax, 0x550e0f ; call rax
0x00000000004b12d0 : cli ; dec dword ptr [rax - 0x75] ; add eax, 0x551607 ; call rax
0x00000000004ef2b9 : cli ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x00000000004b5682 : cli ; dec ecx ; ret
0x0000000000757a98 : cli ; fxch st(0), st(7) ; jmp qword ptr [rax]
0x00000000007aff99 : cli ; in eax, dx ; jmp qword ptr [rax]
0x000000000067858f : cli ; inc dword ptr [rax] ; add byte ptr [rax], al ; jle 0x678589 ; xor eax, eax ; ret
0x00000000004d8fd2 : cli ; jbe 0x4d8ff8 ; add cl, cl ; ret
0x0000000000522b00 : cli ; je 0x522ab0 ; ret
0x0000000000528730 : cli ; je 0x5286e0 ; ret
0x0000000000544100 : cli ; je 0x5440b0 ; ret
0x00000000005679f0 : cli ; je 0x5679a0 ; ret
0x0000000000591740 : cli ; je 0x5916f0 ; ret
0x00000000005aa030 : cli ; je 0x5a9fe0 ; ret
0x000000000074b536 : cli ; jmp qword ptr [rax]
0x000000000074b65e : cli ; jmp rax
0x0000000000688117 : cli ; jne 0x6880fb ; ret
0x00000000005a55a8 : cli ; jo 0x5a55ae ; ret
0x00000000005a7109 : cli ; jo 0x5a7112 ; mov rdi, rbx ; call rax
0x00000000005a7108 : cli ; jo 0x5a7113 ; mov rdi, rbx ; call rax
0x00000000005a7358 : cli ; jo 0x5a7361 ; mov rdi, rbx ; call rax
0x00000000005a7357 : cli ; jo 0x5a7362 ; mov rdi, rbx ; call rax
0x00000000005a737c : cli ; jo 0x5a7385 ; mov rdi, rbx ; call rax
0x00000000005a737b : cli ; jo 0x5a7386 ; mov rdi, rbx ; call rax
0x00000000005a73a0 : cli ; jo 0x5a73a9 ; mov rdi, rbx ; call rax
0x00000000005a739f : cli ; jo 0x5a73aa ; mov rdi, rbx ; call rax
0x00000000005a73be : cli ; jo 0x5a73c7 ; mov rdi, rbx ; call rax
0x00000000005a73dc : cli ; jo 0x5a73e5 ; mov rdi, rbx ; call rax
0x00000000005a73fa : cli ; jo 0x5a7403 ; mov rdi, rbx ; call rax
0x00000000005a7891 : cli ; jo 0x5a7897 ; call rax
0x00000000005a7b21 : cli ; jo 0x5a7b27 ; call rax
0x00000000005a7b91 : cli ; jo 0x5a7b97 ; call rax
0x00000000005a7bf0 : cli ; jo 0x5a7bf9 ; mov rdi, rbx ; call rax
0x00000000005a7bef : cli ; jo 0x5a7bfa ; mov rdi, rbx ; call rax
0x00000000005a7cff : cli ; jo 0x5a7d08 ; mov rdi, rbx ; call rax
0x00000000005a7cfe : cli ; jo 0x5a7d09 ; mov rdi, rbx ; call rax
0x00000000005a7d2e : cli ; jo 0x5a7d37 ; mov rdi, rbx ; call rax
0x00000000005a7d2d : cli ; jo 0x5a7d38 ; mov rdi, rbx ; call rax
0x00000000005a7d5e : cli ; jo 0x5a7d67 ; mov rdi, rbx ; call rax
0x00000000005a7d5d : cli ; jo 0x5a7d68 ; mov rdi, rbx ; call rax
0x00000000005a7d8c : cli ; jo 0x5a7d95 ; mov rdi, rbx ; call rax
0x00000000005a7db1 : cli ; jo 0x5a7dba ; mov rdi, rbx ; call rax
0x00000000005a7dd7 : cli ; jo 0x5a7de0 ; mov rdi, rbx ; call rax
0x00000000005ad105 : cli ; jo 0x5ad10e ; mov rdi, r15 ; call rax
0x0000000000667764 : cli ; js 0x667773 ; ret
0x000000000074b656 : cli ; ljmp ptr [rax - 0x5ffff750] ; sbb edi, edx ; jmp rax
0x00000000004516b2 : cli ; loop 0x4516de ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000721a59 : cli ; loope 0x721a4c ; xchg eax, ebx ; retf
0x00000000006d1487 : cli ; mov byte ptr [r8 + rax], 0x20 ; jne 0x6d1478 ; ret
0x00000000006a977c : cli ; mov byte ptr [rcx + rax], 0x20 ; jne 0x6a9767 ; ret
0x00000000004e6053 : cli ; mov rdi, qword ptr [rbp - 0x108] ; call r11
0x0000000000491210 : cli ; mov rdi, r11 ; mov rsi, rbx ; call r9
0x00000000006c0749 : cli ; mov rdi, r12 ; call rax
0x000000000040a4ff : cli ; mov rdi, rcx ; call rax
0x000000000069ca53 : cli ; not eax ; and esi, eax ; mov eax, esi ; or eax, edx ; ret
0x0000000000514b24 : cli ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000553fc9 : cli ; or cl, byte ptr [rax - 0x77] ; ret
0x0000000000553c7e : cli ; or dword ptr [rax - 0x77], ecx ; ret
0x00000000006ce14a : cli ; or dword ptr [rsp], 0 ; je 0x6ce160 ; ret
0x0000000000643a4c : cli ; or eax, 0x74c48949 ; sbb dword ptr [rax - 0x77], ecx ; ret
0x00000000004d89ab : cli ; or eax, 0x8fbf0000 ; ret 0x6e
0x0000000000553deb : cli ; or ecx, dword ptr [rax - 0x77] ; ret
0x0000000000721a3a : cli ; outsb dx, byte ptr [rsi] ; retf -0x1ead
0x0000000000452e1e : cli ; pop rdx ; add bh, bh ; ror cl, 1 ; ret
0x000000000063a942 : cli ; popfq ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000073364a : cli ; push qword ptr [rax] ; add dl, bh ; call rax
0x000000000074b67e : cli ; push rax ; mov cl, 8 ; add byte ptr [rax + 0x26], dh ; cli ; call qword ptr [rax]
0x00000000004c46c6 : cli ; ret
0x0000000000674766 : cli ; ret 0
0x00000000005884d6 : cli ; retf
0x0000000000722a5a : cli ; sal ch, cl ; cli ; retf
0x0000000000738e65 : cli ; salc ; jmp qword ptr [rax]
0x0000000000738e55 : cli ; salc ; jmp rax
0x000000000064565c : cli ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000005b1699 : cli ; sbb cl, byte ptr [rax - 0x77] ; ret
0x0000000000676ef2 : cli ; sbb cl, byte ptr [rax - 0x77] ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000005b16c0 : cli ; sbb dword ptr [rax - 0x77], ecx ; ret
0x00000000006458eb : cli ; sbb ecx, dword ptr [rax - 0x77] ; ret
0x0000000000733605 : cli ; stc ; jmp rdx
0x0000000000645d23 : cli ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000004cf141 : cli ; sub byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000646098 : cli ; sub eax, 0x74c48949 ; sub ecx, dword ptr [rax - 0x77] ; ret
0x00000000007d9203 : cli ; syscall
0x000000000052a49b : cli ; test rdx, rdx ; jne 0x52a48e ; ret
0x0000000000544b5a : cli ; test rdx, rdx ; jne 0x544b4e ; ret
0x00000000004961b2 : cli ; xchg byte ptr [rdx], ah ; add cl, cl ; ret
0x0000000000534812 : cli ; xchg eax, ebp ; sub esi, dword ptr [rcx + 0x148d231] ; ret
0x0000000000698913 : cli ; xor cl, byte ptr [rax - 0x77] ; ret
0x0000000000480030 : cli ; xor eax, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; clc ; leave ; ret
0x00000000006a107a : cli ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000699a93 : cli ; xor ecx, dword ptr [rax - 0x77] ; ret
0x0000000000742d71 : clts ; add byte ptr [rsi], al ; retf -0x16
0x00000000007cc574 : clts ; cdq ; adc dword ptr [rax], eax ; retf 0x60f
0x00000000007dc551 : clts ; cwde ; xor al, byte ptr [rax] ; cdq ; syscall
0x00000000007dc57f : clts ; div byte ptr [rax] ; add bh, ch ; syscall
0x00000000007f6075 : clts ; fstp dword ptr [rsi] ; add bl, bh ; syscall
0x00000000007e6404 : clts ; jrcxz 0x7e641d ; add ah, bl ; syscall
0x00000000007cc586 : clts ; lodsb al, byte ptr [rsi] ; adc byte ptr [rax], al ; std ; syscall
0x00000000007dcba4 : clts ; mov cl, 0x15 ; add ah, dh ; syscall
0x00000000007cc57a : clts ; out 0x10, eax ; add cl, ah ; syscall
0x00000000007f4d6a : clts ; ret
0x00000000007ce0a3 : clts ; retf 0x18
0x0000000000722d5f : cmc ; adc dh, byte ptr [rip - 0x8ec370e] ; cwde ; call qword ptr [rcx]
0x00000000005633cd : cmc ; add al, byte ptr [rax] ; add rsp, 0x48 ; ret
0x00000000007f5083 : cmc ; add al, byte ptr [rax] ; ret
0x00000000007391a1 : cmc ; add al, byte ptr [rax] ; retf -0x280f
0x00000000007e9c3d : cmc ; add al, byte ptr [rbx] ; ret 0x501
0x00000000005bfc83 : cmc ; add byte ptr [r8], al ; jne 0x5bfc96 ; ret
0x0000000000574647 : cmc ; add byte ptr [rsi], dl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000451786 : cmc ; add byte ptr es:[rax - 0x77], cl ; ret 0x8b48
0x0000000000511aa3 : cmc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000078ac85 : cmc ; add eax, dword ptr [rax] ; call 0x13788d79
0x000000000068616a : cmc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000007e3281 : cmc ; and byte ptr [rbx], ah ; call qword ptr [rip + 0x2520ca05]
0x0000000000652547 : cmc ; and dword ptr [rax], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000057599c : cmc ; call 0xffffffffc3e0a2a6
0x00000000005d3fe7 : cmc ; call 0xffffffffd15c4033
0x0000000000747aae : cmc ; call qword ptr [rax]
0x000000000074799e : cmc ; call rax
0x000000000060a979 : cmc ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000722a5c : cmc ; cli ; retf
0x000000000074857d : cmc ; cmc ; jmp qword ptr [rax]
0x0000000000722250 : cmc ; cwde ; outsd dx, dword ptr [rsi] ; nop ; call rbx
0x0000000000748306 : cmc ; dec dword ptr [rax + 0x200007c9] ; retf
0x000000000074825e : cmc ; dec dword ptr [rax - 0x6ffff83a] ; ret
0x00000000004f025a : cmc ; dec dword ptr [rax - 0x73] ; ror byte ptr [r9 - 0x77], 1 ; ret 0xa4e8
0x00000000004f2601 : cmc ; dec dword ptr [rax - 0x75] ; add eax, 0x5102d6 ; call rax
0x00000000004f21c7 : cmc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000747fe6 : cmc ; dec dword ptr [rax] ; mov ebp, 0xaa100007 ; cmc ; jmp qword ptr [rax]
0x000000000074817e : cmc ; dec dword ptr [rax] ; ret
0x0000000000748136 : cmc ; dec dword ptr [rax] ; ret 7
0x000000000074816e : cmc ; dec eax ; ret 7
0x0000000000546847 : cmc ; ficomp word ptr [rax] ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x0000000000653a03 : cmc ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000747bfe : cmc ; inc dword ptr [rax + 0x400007a6] ; cmc ; call rax
0x0000000000747df6 : cmc ; inc dword ptr [rax + 0x500007ae] ; movsxd rsi, ebp ; call rax
0x00000000007482b6 : cmc ; inc dword ptr [rax + 0x700007c8] ; retf -0xb
0x000000000074852e : cmc ; inc dword ptr [rax - 0x5ffff82e] ; out dx, al ; cmc ; call rax
0x0000000000747f9e : cmc ; inc dword ptr [rax] ; mov esp, 0xa8700007 ; cmc ; jmp qword ptr [rax]
0x000000000074832e : cmc ; inc dword ptr [rax] ; retf 7
0x0000000000748486 : cmc ; inc dword ptr [rax] ; rol byte ptr [rdi], 1 ; add byte ptr [rax - 0x1a], al ; cmc ; jmp qword ptr [rax]
0x0000000000747f16 : cmc ; inc eax ; mov eax, 0xa0600007 ; cmc ; call qword ptr [rax]
0x0000000000748356 : cmc ; inc eax ; retf 7
0x0000000000758429 : cmc ; iretd ; call rsp
0x000000000074818e : cmc ; jmp qword ptr [rax - 0x3d]
0x0000000000747a3e : cmc ; jmp qword ptr [rax]
0x0000000000747cf6 : cmc ; jmp rax
0x000000000051f997 : cmc ; jne 0x51f9e4 ; mov rdi, r12 ; call rax
0x0000000000570ec7 : cmc ; jne 0x570f14 ; mov rdi, r12 ; call rax
0x000000000058cfd7 : cmc ; jne 0x58d024 ; mov rdi, r12 ; call rax
0x000000000058d167 : cmc ; jne 0x58d1b4 ; mov rdi, r12 ; call rax
0x00000000005a0417 : cmc ; jne 0x5a0464 ; mov rdi, r12 ; call rax
0x00000000004969d7 : cmc ; jnp 0x496a02 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000722bf7 : cmc ; jp 0x722c49 ; xor dword ptr [rsi], 0x63 ; pop rbp ; mov dl, 0x77 ; retf
0x0000000000748336 : cmc ; lcall ptr [rax] ; retf 7
0x000000000060aabe : cmc ; lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000406547 : cmc ; loope 0x40657d ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000078f0a9 : cmc ; loope 0x78f0ae ; retf 1
0x000000000066fde2 : cmc ; mov rax, qword ptr [rdx] ; add rsp, 0x18 ; ret
0x000000000051f803 : cmc ; mov rax, r13 ; jne 0x51f855 ; mov rdi, r12 ; call rax
0x0000000000570d33 : cmc ; mov rax, r13 ; jne 0x570d85 ; mov rdi, r12 ; call rax
0x000000000058ccb3 : cmc ; mov rax, r13 ; jne 0x58cd05 ; mov rdi, r12 ; call rax
0x000000000058ce43 : cmc ; mov rax, r13 ; jne 0x58ce95 ; mov rdi, r12 ; call rax
0x00000000005a025b : cmc ; mov rax, r14 ; jne 0x5a02ad ; mov rdi, r12 ; call rax
0x00000000006783c7 : cmc ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x000000000055eb3c : cmc ; nop ; nop ; ret
0x0000000000555047 : cmc ; not byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007ea009 : cmc ; or dword ptr [rax], eax ; ret 0x2706
0x00000000007e68d2 : cmc ; or eax, 0x16139b00 ; add byte ptr [rax], al ; retf 0x513
0x00000000007e6878 : cmc ; or eax, 0x610c400 ; salc ; adc al, byte ptr [rax] ; retf 0xe10
0x0000000000744ead : cmc ; out dx, al ; jmp rax
0x000000000050b273 : cmc ; outsb dx, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000050b0c2 : cmc ; outsb dx, byte ptr [rsi] ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000055ba0e : cmc ; outsd dx, dword ptr [rsi] ; add byte ptr [rax + 0x29], cl ; retf -0x7eb8
0x000000000046f1e7 : cmc ; pop rcx ; add bh, bh ; ror cl, 1 ; ret
0x0000000000747f86 : cmc ; push qword ptr [rax - 0x6ffff845] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rax
0x00000000007482d6 : cmc ; push rax ; enter 7, -0x40 ; retf -0xb
0x0000000000748176 : cmc ; push rax ; ret 7
0x0000000000747c76 : cmc ; push rax ; test al, 7 ; add al, dl ; push rbp ; cmc ; jmp qword ptr [rax]
0x00000000006a857a : cmc ; rcr byte ptr [rsi + 0x31c300a0], 0xc0 ; ret
0x00000000004654e7 : cmc ; rcr dword ptr [rcx], cl ; call rax
0x0000000000433759 : cmc ; ret
0x00000000006965e7 : cmc ; ret 0x36
0x00000000007f32e1 : cmc ; ret 0x8c01
0x00000000005a482f : cmc ; ret 0xd
0x0000000000722f74 : cmc ; retf
0x00000000006d6b00 : cmc ; retf -0x7ac
0x0000000000767731 : cmc ; salc ; jmp qword ptr [rax]
0x0000000000420def : cmc ; sbb bl, byte ptr [rsi] ; call rax
0x00000000004f18e7 : cmc ; sqrtps xmm0, xmmword ptr [rax] ; call rax
0x00000000007cd45d : cmc ; str ecx ; syscall
0x0000000000405219 : cmc ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007d9c76 : cmc ; sub al, 3 ; call qword ptr [rsi]
0x000000000061ceb7 : cmc ; sub al, byte ptr [rdi] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000049fde7 : cmc ; sub dl, byte ptr [rsi] ; call rax
0x000000000041f339 : cmc ; sub dword ptr [rax], eax ; leave ; ret
0x000000000040a6b7 : cmc ; sub eax, dword ptr [r8] ; leave ; ret
0x00000000004fe701 : cmc ; sub ebx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006b4f77 : cmc ; sub rsp, 0x18 ; call 0x6819b7
0x00000000007d3236 : cmc ; syscall
0x000000000054c247 : cmc ; test byte ptr [rax], bl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005de1cd : cmova eax, dword ptr [rdx] ; call rax
0x00000000006bf4eb : cmova eax, edx ; ret
0x00000000005e1994 : cmovb eax, dword ptr [rax] ; call rax
0x00000000006a1051 : cmove eax, ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000054a83d : cmove eax, ecx ; pop rbx ; ret
0x000000000054ad30 : cmove eax, ecx ; ret
0x0000000000503aa2 : cmove eax, edi ; ret
0x00000000005190d8 : cmove eax, edx ; mov rdx, rcx ; pop rbx ; ret
0x000000000051af08 : cmove eax, edx ; mov rdx, rcx ; ret
0x00000000006be540 : cmove eax, edx ; ret
0x000000000054a83c : cmove rax, rcx ; pop rbx ; ret
0x000000000054ad2f : cmove rax, rcx ; ret
0x00000000005190d7 : cmove rax, rdx ; mov rdx, rcx ; pop rbx ; ret
0x000000000051af07 : cmove rax, rdx ; mov rdx, rcx ; ret
0x0000000000517ebb : cmovg eax, edi ; cmovle rdx, rcx ; ret
0x00000000006786fb : cmovg eax, esi ; ret
0x000000000048d9cd : cmovg edx, dword ptr [rdi] ; call rax
0x0000000000517eba : cmovg rax, rdi ; cmovle rdx, rcx ; ret
0x00000000004aa361 : cmovge eax, ebx ; mov edi, eax ; call 0x4f6dc7
0x00000000006b2243 : cmovge eax, edi ; ret
0x000000000069c8ea : cmovge ebp, dword ptr [rcx] ; retf -0x3fbf
0x00000000006b2520 : cmovl eax, esi ; mov qword ptr [rdi + 0x30], rax ; ret
0x00000000007eb982 : cmovl ebp, ebx ; or al, 0 ; xlatb ; syscall
0x00000000006b251f : cmovl rax, rsi ; mov qword ptr [rdi + 0x30], rax ; ret
0x0000000000519180 : cmovle eax, ecx ; mov edx, edx ; pop rbx ; ret
0x000000000051aedb : cmovle eax, ecx ; mov edx, edx ; ret
0x000000000059bfa0 : cmovle eax, edx ; mov dl, 1 ; add rsp, 8 ; ret
0x000000000051913b : cmovle eax, edx ; mov dl, 1 ; mov edx, edx ; pop rbx ; ret
0x000000000051aeb6 : cmovle eax, edx ; mov dl, 1 ; ret
0x0000000000517f03 : cmovle eax, esi ; cmovle rdx, rcx ; ret
0x0000000000517ebf : cmovle edx, ecx ; ret
0x000000000051917f : cmovle rax, rcx ; mov edx, edx ; pop rbx ; ret
0x000000000051aeda : cmovle rax, rcx ; mov edx, edx ; ret
0x000000000051913a : cmovle rax, rdx ; mov dl, 1 ; mov edx, edx ; pop rbx ; ret
0x000000000051aeb5 : cmovle rax, rdx ; mov dl, 1 ; ret
0x0000000000517f02 : cmovle rax, rsi ; cmovle rdx, rcx ; ret
0x0000000000517ebe : cmovle rdx, rcx ; ret
0x0000000000508e49 : cmovne eax, ebx ; pop rbx ; ret
0x00000000006a10dd : cmovne eax, ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000517d5d : cmovne eax, edi ; ret
0x0000000000503cc8 : cmovne eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006c8a8a : cmovne eax, edx ; ret
0x0000000000508e48 : cmovne rax, rbx ; pop rbx ; ret
0x0000000000517d5c : cmovne rax, rdi ; ret
0x00000000005f1902 : cmovno eax, dword ptr [rax] ; call rax
0x00000000007d4953 : cmovno ebx, esi ; adc dword ptr [rax], eax ; std ; syscall
0x000000000050f7e0 : cmovs eax, dword ptr [rbx + 0x5d5b08c4] ; ret
0x00000000006078c8 : cmovs eax, dword ptr [rbx + 0x5d5b10c4] ; pop r12 ; ret
0x00000000004905ef : cmovs eax, dword ptr [rbx - 0x76b70720] ; ret 0x894c
0x0000000000496256 : cmovs eax, dword ptr [rbx - 0x76b70720] ; ret 0x8b48
0x0000000000489d55 : cmovs eax, dword ptr [rbx - 0x76b70720] ; ret 0x8d48
0x00000000006cc644 : cmovs eax, edx ; add rsp, 8 ; ret
0x00000000005ce0bb : cmovs eax, edx ; nop ; nop ; pop rbp ; ret
0x0000000000517e82 : cmovs eax, edx ; ret
0x0000000000678705 : cmovs eax, esi ; ret
0x00000000006d48e8 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x00000000006bf30e : cmovs ecx, dword ptr [rcx + 0x394c184f] ; retf 0x4789
0x00000000006c1347 : cmovs ecx, dword ptr [rcx + 0xd00bae6] ; jae 0x6c1359 ; call rax
0x00000000006c1382 : cmovs ecx, dword ptr [rcx + 0xd30bae6] ; jae 0x6c1394 ; call rax
0x00000000006c1473 : cmovs ecx, dword ptr [rcx + 0xd30bae6] ; jae 0x6c1485 ; call rax
0x00000000006c14a2 : cmovs ecx, dword ptr [rcx + 0xd30bae6] ; jae 0x6c14b4 ; call rax
0x00000000006c1522 : cmovs ecx, dword ptr [rcx + 0xd30bae6] ; jae 0x6c1534 ; call rax
0x00000000006c1552 : cmovs ecx, dword ptr [rcx + 0xd30bae6] ; jae 0x6c1564 ; call rax
0x00000000006c1582 : cmovs ecx, dword ptr [rcx + 0xd30bae6] ; jae 0x6c1594 ; call rax
0x00000000006c1413 : cmovs ecx, dword ptr [rcx + 0xd80bae6] ; jae 0x6c1425 ; call rax
0x00000000006c1441 : cmovs ecx, dword ptr [rcx + 0xd80bae6] ; jae 0x6c1453 ; call rax
0x00000000006c15b3 : cmovs ecx, dword ptr [rcx + 0xd80bae6] ; jae 0x6c15c5 ; call rax
0x00000000006c16a1 : cmovs ecx, dword ptr [rcx + 0xd80bae6] ; jae 0x6c16b3 ; call rax
0x00000000006c1701 : cmovs ecx, dword ptr [rcx + 0xd80bae6] ; jae 0x6c1713 ; call rax
0x00000000006c15e2 : cmovs ecx, dword ptr [rcx + 0xe20bae6] ; jae 0x6c15f4 ; call rax
0x00000000006c1672 : cmovs ecx, dword ptr [rcx + 0xe20bae6] ; jae 0x6c1684 ; call rax
0x00000000006c16d2 : cmovs ecx, dword ptr [rcx + 0xe20bae6] ; jae 0x6c16e4 ; call rax
0x000000000054841e : cmovs ecx, dword ptr [rcx - 0x1c7cb71e] ; clc ; call rax
0x000000000073f8fd : cmp ah, ah ; call qword ptr [rax]
0x000000000073a6ad : cmp ah, bl ; jmp qword ptr [rax]
0x0000000000415472 : cmp ah, byte ptr [rbp + 0x29480027] ; ret
0x0000000000479720 : cmp al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000079a308 : cmp al, 0 ; add byte ptr [rax], al ; add al, 0xec ; add al, 0 ; nop ; ret 0xffe6
0x0000000000779330 : cmp al, 0 ; add byte ptr [rax], al ; in al, dx ; fild dword ptr [rdx] ; add al, bh ; ret 0xffdc
0x0000000000784800 : cmp al, 0 ; add byte ptr [rax], al ; mov esp, 0xe8000390 ; ret
0x0000000000777a58 : cmp al, 0 ; add byte ptr [rax], al ; push rsp ; ret
0x00000000007792c8 : cmp al, 0 ; add byte ptr [rax], al ; test bl, bl ; add al, byte ptr [rax] ; ret 0xffdc
0x0000000000632e80 : cmp al, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x00000000006391ac : cmp al, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000634b20 : cmp al, 0 ; call 0x681536
0x000000000063a320 : cmp al, 0 ; jmp rax
0x0000000000632999 : cmp al, 0 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000007e5431 : cmp al, 0 ; ret 0x52a
0x00000000007dc8c1 : cmp al, 0 ; ret 0x53c
0x000000000056be60 : cmp al, 0x11 ; add al, ch ; retf 0x1156
0x000000000056be6f : cmp al, 0x11 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000051d611 : cmp al, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000067f294 : cmp al, 0x16 ; mov eax, ebx ; pop rbx ; ret
0x00000000007f5bd1 : cmp al, 0x17 ; retf 0x283c
0x00000000004fd6d6 : cmp al, 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050a909 : cmp al, 0x1b ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004be990 : cmp al, 0x1d ; and byte ptr [rax], al ; leave ; ret
0x00000000004c6bc4 : cmp al, 0x1e ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005709a0 : cmp al, 0x1f ; add byte ptr [r9 + 0x63], cl ; fisttp qword ptr [rax - 0x7d] ; ret
0x00000000004cca15 : cmp al, 0x1f ; add cl, cl ; ret
0x000000000043c964 : cmp al, 0x24 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000534453 : cmp al, 0x24 ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000040bf5a : cmp al, 0x27 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000048f196 : cmp al, 0x29 ; ret 0xd089
0x000000000079e984 : cmp al, 0x32 ; add eax, 0xe8223600 ; call qword ptr [rdi]
0x00000000004bc36e : cmp al, 0x38 ; ret 0x6075
0x000000000048f206 : cmp al, 0x39 ; ret 0x157c
0x000000000048f188 : cmp al, 0x39 ; ret 0x167c
0x000000000074f244 : cmp al, 0x3b ; add byte ptr [rax], al ; xor al, 0xcd ; jmp qword ptr [rbx]
0x000000000079f444 : cmp al, 0x3d ; add eax, 0xe865d800 ; call qword ptr [rax]
0x00000000006249f1 : cmp al, 0x3e ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4847
0x000000000074fb84 : cmp al, 0x44 ; add byte ptr [rax], al ; add byte ptr [rsi - 0x33], al ; call rdx
0x000000000077ff44 : cmp al, 0x48 ; add eax, dword ptr [rax] ; ret 0xc84e
0x00000000006b3476 : cmp al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005115b7 : cmp al, 0x48 ; mov edi, ebp ; call rcx
0x00000000005359cd : cmp al, 0x48 ; mov esi, ebp ; mov rdi, rbx ; call rax
0x0000000000780044 : cmp al, 0x49 ; add eax, dword ptr [rax] ; xor byte ptr [rsi - 0x38], cl ; call qword ptr [rdx]
0x0000000000790644 : cmp al, 0x4f ; add al, 0 ; call 0x2478e8af
0x000000000051d9a8 : cmp al, 0x4f ; add byte ptr [rax - 0x7d], r9b ; ret
0x000000000066d4c7 : cmp al, 0x50 ; sete byte ptr [rip + 0x39be18] ; ret
0x00000000006390fd : cmp al, 0x51 ; jne 0x6390fd ; add rsp, 0x18 ; ret
0x0000000000623488 : cmp al, 0x52 ; add byte ptr ds:[rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4847
0x0000000000750f44 : cmp al, 0x58 ; add byte ptr [rax], al ; cwde ; retf -0x33
0x00000000006320a7 : cmp al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000006b2077 : cmp al, 0x5c ; sete byte ptr [rip + 0x358244] ; ret
0x000000000058b5ba : cmp al, 0x5d ; str word ptr [rax - 0x77] ; ret
0x0000000000771d44 : cmp al, 0x66 ; add al, byte ptr [rax] ; clc ; add bl, bl ; call qword ptr [rbx]
0x000000000056e4f6 : cmp al, 0x69 ; jmp 0xffffffffc3e02e02
0x0000000000589dba : cmp al, 0x75 ; str word ptr [rax - 0x77] ; ret
0x0000000000763684 : cmp al, 0x7f ; add dword ptr [rax], eax ; xchg eax, edx ; and ch, dl ; call rsp
0x00000000006cce14 : cmp al, 0x7f ; je 0x6cce24 ; ret
0x00000000006cceb4 : cmp al, 0x7f ; je 0x6ccec4 ; ret
0x00000000006ccf24 : cmp al, 0x7f ; je 0x6ccf34 ; ret
0x00000000006ccfb4 : cmp al, 0x7f ; je 0x6ccfc4 ; ret
0x00000000006cd044 : cmp al, 0x7f ; je 0x6cd054 ; ret
0x00000000006cd2d4 : cmp al, 0x7f ; je 0x6cd2e4 ; ret
0x0000000000783f84 : cmp al, 0x88 ; add eax, dword ptr [rax] ; clc ; jle 0x783f71 ; call qword ptr [rax]
0x000000000069094c : cmp al, 0x89 ; ret 0xe283
0x000000000065e37c : cmp al, 0x8b ; xor al, 1 ; fidivr dword ptr [rcx] ; ret 0x5589
0x0000000000754684 : cmp al, 0x8f ; add byte ptr [rax], al ; js 0x7546b7 ; iretd ; call rsp
0x0000000000586ebf : cmp al, 0x8f ; lea rsi, qword ptr [rbx + rsi*4] ; call 0x4038f8
0x0000000000764b84 : cmp al, 0x94 ; add dword ptr [rax], eax ; retf -0x2abb
0x0000000000721fd5 : cmp al, 0x95 ; ret
0x0000000000755444 : cmp al, 0x9d ; add byte ptr [rax], al ; pop rdx ; jae 0x755421 ; call qword ptr [rbx]
0x0000000000796244 : cmp al, 0xab ; add al, 0 ; retf -0x1acc
0x00000000007390ec : cmp al, 0xad ; xlatb ; jmp rax
0x000000000058573b : cmp al, 0xb0 ; mov dword ptr [rax + rdx*4], ecx ; add rsp, 8 ; ret
0x00000000007a7444 : cmp al, 0xbd ; add eax, 0xebfdd800 ; jmp qword ptr [rsi]
0x0000000000756a48 : cmp al, 0xbd ; iretd ; jmp qword ptr [rax]
0x00000000005bcab6 : cmp al, 0xc ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000797784 : cmp al, 0xc0 ; add al, 0 ; mov ch, byte ptr [rbx - 0x1b] ; call rsp
0x00000000007a7944 : cmp al, 0xc2 ; add eax, 0xec03b800 ; call qword ptr [rsi]
0x0000000000798544 : cmp al, 0xce ; add al, 0 ; pop rax ; mul ebp ; call qword ptr [rdx]
0x00000000007549c1 : cmp al, 0xcf ; call rsp
0x0000000000768844 : cmp al, 0xd1 ; add dword ptr [rax], eax ; and dh, bh ; xlatb ; jmp rdx
0x0000000000736125 : cmp al, 0xd1 ; jmp rax
0x000000000072322f : cmp al, 0xd1 ; ret 0x85e7
0x000000000073766d : cmp al, 0xd3 ; jmp rax
0x0000000000764841 : cmp al, 0xd5 ; call rsp
0x00000000007f8cc0 : cmp al, 0xd6 ; add ecx, edx ; add eax, dword ptr [rax] ; ret 0x502
0x000000000073a06d : cmp al, 0xda ; call qword ptr [rax]
0x0000000000789284 : cmp al, 0xdb ; add eax, dword ptr [rax] ; call 0xffffffffe2787334
0x0000000000772ea9 : cmp al, 0xdb ; call qword ptr [rbx]
0x0000000000772ef1 : cmp al, 0xdb ; jmp qword ptr [rax]
0x0000000000772e91 : cmp al, 0xdb ; jmp qword ptr [rcx]
0x000000000077be39 : cmp al, 0xdd ; jmp qword ptr [rax]
0x00000000007d35b8 : cmp al, 0xde ; and dword ptr [rax], eax ; ret
0x00000000004b9542 : cmp al, 0xdf ; cli ; dec ecx ; ret
0x00000000007997e9 : cmp al, 0xe6 ; call qword ptr [rdx]
0x0000000000741725 : cmp al, 0xe7 ; jmp rax
0x000000000074222d : cmp al, 0xe8 ; call qword ptr [rax]
0x0000000000567cfc : cmp al, 0xe8 ; retf 0x16
0x00000000005c9b9a : cmp al, 0xe8 ; xor byte ptr [rdx + 0xf], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000061fc70 : cmp al, 0xec ; or dword ptr [rax], eax ; leave ; ret
0x0000000000745225 : cmp al, 0xef ; jmp qword ptr [rax]
0x000000000066b691 : cmp al, 0xf ; je 0x66b6a9 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000075a744 : cmp al, 0xf0 ; add byte ptr [rax], al ; mov cl, 0xd0 ; call qword ptr [rdx]
0x00000000007229ff : cmp al, 0xf0 ; jns 0x722a5b ; add eax, 0x447e62e9 ; ret 0x2d4f
0x0000000000746ee5 : cmp al, 0xf4 ; call qword ptr [rax]
0x000000000078ac84 : cmp al, 0xf5 ; add eax, dword ptr [rax] ; call 0x13788d7a
0x00000000006a8579 : cmp al, 0xf5 ; rcr byte ptr [rsi + 0x31c300a0], 0xc0 ; ret
0x00000000006c0a66 : cmp al, 1 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006a41df : cmp al, 1 ; je 0x6a41d6 ; xor eax, eax ; ret
0x0000000000736b51 : cmp al, 2 ; add byte ptr [rsi], ch ; adc al, 0xd2 ; call rax
0x00000000006bdac4 : cmp al, 2 ; jbe 0x6bdad4 ; ret
0x00000000005f7d43 : cmp al, 2 ; lea eax, dword ptr [rsi - 1] ; mov dword ptr [r10 + 0x14], eax ; ret
0x00000000007cfd1a : cmp al, 3 ; retf
0x000000000060b219 : cmp al, 3 ; sete al ; add rsp, 8 ; ret
0x000000000063cf85 : cmp al, 4 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000688bfb : cmp al, 4 ; mov rax, rbx ; jne 0x688c49 ; call rax
0x000000000062d69e : cmp al, 5 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007dc8be : cmp al, 5 ; cli ; cmp al, 0 ; ret 0x53c
0x00000000007f5bce : cmp al, 5 ; cmp al, 0x17 ; retf 0x283c
0x00000000007f8518 : cmp al, 5 ; ret
0x000000000061bf26 : cmp al, 6 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000007af365 : cmp al, 6 ; add byte ptr [rax - 0x1b], bh ; in eax, dx ; call qword ptr [rsi]
0x00000000006a0915 : cmp al, 7 ; add byte ptr [rbp - 0xa], dh ; ret
0x00000000006a08e2 : cmp al, 7 ; add byte ptr [rbp - 0xf], dh ; ret
0x000000000067e88a : cmp al, 7 ; add byte ptr [rbp - 0xf], dh ; xor eax, eax ; ret
0x00000000006784aa : cmp al, 7 ; add byte ptr [rcx - 0xf], bh ; xor eax, eax ; ret
0x00000000006884b5 : cmp al, 7 ; mov rax, qword ptr [rsp] ; jne 0x68850a ; call rax
0x000000000062a8e0 : cmp al, 9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000075c084 : cmp al, 9 ; add dword ptr [rax], eax ; mov cl, byte ptr [rdx - 0x2f] ; call rsp
0x000000000075c044 : cmp al, 9 ; add dword ptr [rax], eax ; mov cl, byte ptr [rdx - 0x2f] ; jmp qword ptr [rsi]
0x00000000005fada7 : cmp al, 9 ; setbe al ; jmp 0x5fad7f
0x000000000073cd8d : cmp al, ah ; jmp rax
0x00000000006a1b3f : cmp al, al ; jb 0x6a1b5f ; mov eax, 0xffffffff ; ret
0x0000000000722788 : cmp al, bl ; ret 0x4fc4
0x000000000065d0ed : cmp al, byte ptr [r10] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007d5b63 : cmp al, byte ptr [rax] ; add ch, al ; add dword ptr [rdx], ecx ; ret 3
0x0000000000667541 : cmp al, byte ptr [rax] ; add rsp, 0x18 ; ret
0x0000000000658809 : cmp al, byte ptr [rax] ; add rsp, 8 ; jmp rax
0x0000000000658f8a : cmp al, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000065e22e : cmp al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000066c094 : cmp al, byte ptr [rax] ; cmp eax, 1 ; sete al ; ret
0x0000000000658f1d : cmp al, byte ptr [rax] ; jmp rax
0x00000000007f0bcf : cmp al, byte ptr [rax] ; ret
0x00000000007c6c04 : cmp al, byte ptr [rax] ; ret 0x52c
0x00000000007e5548 : cmp al, byte ptr [rax] ; retf 0x53a
0x000000000068025d : cmp al, byte ptr [rbx - 0x7cb7fb40] ; ret 0xeb02
0x0000000000746501 : cmp al, byte ptr [rdi] ; add byte ptr [rax + 0x3b], dl ; call qword ptr [rax]
0x00000000007464f1 : cmp al, byte ptr [rdi] ; add byte ptr [rax], dh ; cmp esi, ebx ; jmp rax
0x000000000060d7fe : cmp al, byte ptr [rdi] ; add cl, ch ; retf
0x00000000005218e3 : cmp al, byte ptr [rdi] ; je 0x5218f6 ; xor eax, eax ; ret
0x000000000055eab3 : cmp al, byte ptr [rdi] ; je 0x55eac6 ; xor eax, eax ; ret
0x00000000005ae343 : cmp al, byte ptr [rdi] ; je 0x5ae356 ; xor eax, eax ; ret
0x000000000065d0ee : cmp al, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000079f1f5 : cmp al, byte ptr [rip - 0x17af2600] ; jmp qword ptr [rbx]
0x0000000000740491 : cmp al, byte ptr [rip - 0x1ab08000] ; call qword ptr [rax]
0x00000000005429c3 : cmp al, byte ptr [rsi] ; je 0x5429d6 ; xor eax, eax ; ret
0x00000000005a5533 : cmp al, byte ptr [rsi] ; je 0x5a5546 ; xor eax, eax ; ret
0x00000000007d136f : cmp al, byte ptr [rsi] ; retf 2
0x000000000079ed61 : cmp al, ch ; call rsp
0x000000000056c879 : cmp al, ch ; int1 ; retf
0x00000000006bde2c : cmp ax, word ptr [rbx] ; jg 0x6bde39 ; pop rbx ; ret
0x000000000060651a : cmp bh, 0x19 ; setbe al ; ret
0x00000000006c5aaa : cmp bh, 0x1b ; sete al ; and eax, edx ; ret
0x00000000006bd3d9 : cmp bh, 0x20 ; sete al ; or eax, edx ; ret
0x0000000000678534 : cmp bh, 0x20 ; sete al ; ret
0x00000000006bd3bc : cmp bh, 0x5e ; setbe al ; or eax, edx ; ret
0x00000000006bd39f : cmp bh, 0x5f ; sete al ; or eax, edx ; ret
0x0000000000678521 : cmp bh, 0x5f ; sete al ; ret
0x00000000006c6b21 : cmp bh, 0xa ; setne al ; ret
0x0000000000678511 : cmp bh, 0xad ; sete al ; ret
0x00000000006c6b31 : cmp bh, 0xb ; setne al ; ret
0x0000000000415538 : cmp bh, 0xff ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000006aa9d1 : cmp bh, 1 ; seta al ; ret
0x00000000005218d1 : cmp bh, 1 ; setne al ; ret
0x00000000005ae2f1 : cmp bh, 2 ; setne al ; ret
0x00000000005ae2e1 : cmp bh, 3 ; setne al ; ret
0x00000000005ae301 : cmp bh, 4 ; setne al ; ret
0x00000000005ae311 : cmp bh, 5 ; setne al ; ret
0x00000000005ae321 : cmp bh, 6 ; setne al ; ret
0x00000000005ae331 : cmp bh, 7 ; setne al ; ret
0x0000000000678434 : cmp bh, 9 ; setbe al ; ret
0x00000000006756ea : cmp bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000424328 : cmp bh, byte ptr [rax - 0x76b7ffdb] ; ret
0x00000000005b7964 : cmp bh, byte ptr [rcx] ; retf
0x00000000004e1b45 : cmp bh, byte ptr [rdi + 0x10] ; call 0x6be5d8
0x0000000000614128 : cmp bh, byte ptr [rdx - 0x76b7fffa] ; ret
0x000000000048eb72 : cmp bh, ch ; and al, byte ptr [rax] ; leave ; ret
0x00000000007451cd : cmp bh, ch ; jmp qword ptr [rax - 0x3d]
0x00000000006bc581 : cmp bh, dh ; sete al ; ret
0x00000000006902b9 : cmp bh, dl ; dec dword ptr [rax + 0x39] ; ret
0x00000000005fffc1 : cmp bl, 0xff ; dec dword ptr [rax + 0x29] ; ret 0x2b48
0x000000000057b440 : cmp bl, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x00000000004e8eb5 : cmp bl, 0xff ; dec dword ptr [rcx - 0x77] ; retf -0x76b8
0x0000000000641e60 : cmp bl, 0xff ; jmp qword ptr [rax]
0x000000000073a6f5 : cmp bl, ah ; jmp qword ptr [rax]
0x0000000000683aad : cmp bl, al ; nop ; ret
0x0000000000502769 : cmp bl, al ; setne al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000007b0028 : cmp bl, bh ; in eax, dx ; call qword ptr [rax]
0x000000000041ee9b : cmp bl, byte ptr [r14] ; call rax
0x0000000000550c9f : cmp bl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042ee10 : cmp bl, byte ptr [rbp] ; call rax
0x000000000063ac02 : cmp bl, byte ptr [rbx + 0x5b580009] ; pop rbp ; ret
0x000000000052aaf5 : cmp bl, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005473bc : cmp bl, byte ptr [rdi - 0x76b7ffed] ; ret
0x0000000000409bce : cmp bl, byte ptr [rdi] ; call 0x505e75
0x000000000041ee9c : cmp bl, byte ptr [rsi] ; call rax
0x00000000007451e4 : cmp bpl, dil ; push rax ; ret
0x0000000000660440 : cmp byte ptr [r8 - 0x75], cl ; jnp 0x66049f ; mov rsi, rax ; call rdx
0x00000000004ec49d : cmp byte ptr [r8 - 0x7b], cl ; sal byte ptr [rbp + 0x14], 0xbe ; retf
0x00000000005a8c35 : cmp byte ptr [r8 - 1], r14b ; jo 0x5a8c41 ; ret
0x000000000043e86b : cmp byte ptr [r8], r8b ; add byte ptr [rcx], bh ; ret
0x000000000048f18f : cmp byte ptr [r9 + 0x458b41c2], r9b ; cmp al, 0x29 ; ret 0xd089
0x000000000066d12a : cmp byte ptr [r9], r15b ; ret 0x107d
0x000000000067aa7e : cmp byte ptr [rax + 0x38], 0 ; je 0x67aa99 ; movzx eax, byte ptr [rax] ; ret
0x00000000004b9c8f : cmp byte ptr [rax + 0x39], cl ; ret 0x2a75
0x00000000004bd0d6 : cmp byte ptr [rax + 0x39], cl ; ret 0x3775
0x00000000004b9e60 : cmp byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000006bb847 : cmp byte ptr [rax + 0x63], cl ; ret 0x2b48
0x00000000006bb629 : cmp byte ptr [rax + 0x63], cl ; ret 0x8948
0x0000000000670761 : cmp byte ptr [rax + 0xc], 0 ; add byte ptr [rcx], al ; ret
0x0000000000660d96 : cmp byte ptr [rax + 1], cl ; retf 0xee9
0x000000000063a813 : cmp byte ptr [rax + rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000047ce1a : cmp byte ptr [rax + rax], ah ; leave ; ret
0x00000000005c565d : cmp byte ptr [rax - 0x75], cl ; jl 0x5c568e ; xor byte ptr [rax - 0x77], cl ; ret
0x000000000060bb51 : cmp byte ptr [rax - 0x75], cl ; jl 0x60bb82 ; xor byte ptr [rax - 0x77], cl ; ret
0x0000000000660441 : cmp byte ptr [rax - 0x75], cl ; jnp 0x66049e ; mov rsi, rax ; call rdx
0x00000000004bb635 : cmp byte ptr [rax - 0x75], cl ; ror byte ptr [r8 + 0x63], 1 ; ret
0x00000000004c3594 : cmp byte ptr [rax - 0x76b7ffe1], dh ; ret 0x8948
0x00000000006b3744 : cmp byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x148b
0x000000000040e12c : cmp byte ptr [rax - 0x77], cl ; ret
0x00000000004f7841 : cmp byte ptr [rax - 0x77], cl ; ret 0xc748
0x00000000006b8624 : cmp byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000043f49c : cmp byte ptr [rax - 0x77], cl ; salc ; mov rdx, rax ; call 0x43b6fb
0x00000000004ec49e : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 0x14], 0xbe ; retf
0x00000000006d2a4c : cmp byte ptr [rax - 0x7d], cl ; ret
0x000000000069f455 : cmp byte ptr [rax - 0x7d], cl ; ret 0x480c
0x00000000005636f7 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000006a9eb8 : cmp byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000068f997 : cmp byte ptr [rax - 1], 0 ; jne 0x68f999 ; lea eax, dword ptr [rdx - 1] ; ret
0x00000000005a8c36 : cmp byte ptr [rax - 1], dh ; jo 0x5a8c40 ; ret
0x000000000043e86c : cmp byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x000000000074efbd : cmp byte ptr [rax], al ; add byte ptr [rsi], ch ; sbb ecx, ebp ; call rsp
0x0000000000676b56 : cmp byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x00000000005018d3 : cmp byte ptr [rax], al ; je 0x5018e4 ; ret
0x000000000067aa80 : cmp byte ptr [rax], al ; je 0x67aa97 ; movzx eax, byte ptr [rax] ; ret
0x00000000006a60fb : cmp byte ptr [rax], al ; je 0x6a6111 ; add rsp, 8 ; ret
0x000000000067410b : cmp byte ptr [rax], al ; jmp rax
0x0000000000688264 : cmp byte ptr [rax], al ; mov qword ptr [rip + 0x38142b], rax ; ret
0x000000000067d4e5 : cmp byte ptr [rax], al ; mov rdi, r12 ; call 0x689fb7
0x0000000000685ed7 : cmp byte ptr [rax], al ; pop rbx ; pop rbp ; pop r14 ; ret
0x000000000068826b : cmp byte ptr [rax], al ; ret
0x00000000004cff36 : cmp byte ptr [rax], bh ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e716f : cmp byte ptr [rax], bh ; ret 0x774
0x00000000004fd2cf : cmp byte ptr [rax], bl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007f0bcc : cmp byte ptr [rax], ch ; cld ; cmp al, byte ptr [rax] ; ret
0x00000000004d3a4e : cmp byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e716e : cmp byte ptr [rax], dil ; ret 0x774
0x0000000000546894 : cmp byte ptr [rbp + 0x17], bh ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007a51a8 : cmp byte ptr [rbp - 0x15], al ; call qword ptr [rsi]
0x000000000073a17c : cmp byte ptr [rbp - 0x26], dl ; call rax
0x0000000000606ea1 : cmp byte ptr [rbp - 0x63], 0xbe ; ret
0x0000000000495094 : cmp byte ptr [rbp - 0x76b7ffde], dl ; ret 0x8948
0x00000000004a0314 : cmp byte ptr [rbp - 0x76b7ffe0], ah ; ret
0x00000000006a8483 : cmp byte ptr [rbp - 0xe], dh ; mov eax, 1 ; ret
0x00000000006a85d3 : cmp byte ptr [rbp - 0xe], dh ; mov rax, qword ptr [rax + 8] ; ret
0x00000000006a82d3 : cmp byte ptr [rbp - 0xe], dh ; ret
0x00000000004af01d : cmp byte ptr [rbp], dl ; call rax
0x00000000007a70d4 : cmp byte ptr [rbx + 0x11f0307], al ; ret
0x00000000006ab8a5 : cmp byte ptr [rbx + 0x3918244c], cl ; retf -0x5d8e
0x000000000043baf2 : cmp byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000062c651 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; jmp rax
0x00000000005864c6 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000006481b4 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040bf7f : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000006cd0e4 : cmp byte ptr [rbx + 7], 0 ; setne al ; pop rbx ; ret
0x00000000005f3659 : cmp byte ptr [rbx + rdx + 0x48], 0x63 ; retf
0x00000000007bc2c4 : cmp byte ptr [rbx - 0x4ff1b5f9], al ; add eax, dword ptr [rbx] ; ret
0x00000000007be3c4 : cmp byte ptr [rbx - 0x7ff1b5f9], al ; add dword ptr [rbx], eax ; ret
0x00000000007716d0 : cmp byte ptr [rbx - 0x7ff1b8f9], al ; add dword ptr [rbx], eax ; retf 0xa01
0x0000000000791468 : cmp byte ptr [rbx - 0xff1b5f9], al ; add dword ptr [rbx], eax ; ret
0x000000000052196c : cmp byte ptr [rbx], 0 ; jne 0x521989 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000521a3c : cmp byte ptr [rbx], 0 ; jne 0x521a59 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000057e6b8 : cmp byte ptr [rbx], 0 ; jne 0x57e6d1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048a315 : cmp byte ptr [rbx], ah ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005cf0a6 : cmp byte ptr [rbx], al ; call rax
0x00000000006a6952 : cmp byte ptr [rbx], al ; je 0x6a6964 ; ret
0x000000000048f190 : cmp byte ptr [rcx + 0x458b41c2], cl ; cmp al, 0x29 ; ret 0xd089
0x0000000000722480 : cmp byte ptr [rcx + 0x7f], al ; salc ; pop rbp ; ret
0x00000000006b6b73 : cmp byte ptr [rcx + r8], 0x7b ; je 0x6b6b89 ; xor eax, eax ; ret
0x00000000006b6b74 : cmp byte ptr [rcx + rax], 0x7b ; je 0x6b6b88 ; xor eax, eax ; ret
0x00000000006b6be2 : cmp byte ptr [rcx + rax], 0x7d ; sete al ; ret
0x00000000006a41de : cmp byte ptr [rcx + rax], bh ; je 0x6a41d7 ; xor eax, eax ; ret
0x00000000006a41dd : cmp byte ptr [rcx + rax], dil ; je 0x6a41d8 ; xor eax, eax ; ret
0x0000000000544304 : cmp byte ptr [rcx + rbx], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a7839 : cmp byte ptr [rcx + rcx*4 - 0x1f], al ; mov rdi, rbp ; call 0x6c3b19
0x000000000076ece8 : cmp byte ptr [rcx - 0x26], dl ; jmp rsp
0x000000000075fe18 : cmp byte ptr [rcx - 0x2d], dh ; jmp qword ptr [rcx]
0x000000000048f202 : cmp byte ptr [rcx - 0x75], al ; cmp al, 0x39 ; ret 0x157c
0x000000000048f184 : cmp byte ptr [rcx - 0x75], al ; cmp al, 0x39 ; ret 0x167c
0x000000000066d127 : cmp byte ptr [rcx - 0x75], al ; cmp byte ptr [r9], r15b ; ret 0x107d
0x0000000000668ab3 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000005eefe6 : cmp byte ptr [rcx], al ; call rax
0x00000000006a60cb : cmp byte ptr [rcx], al ; ja 0x6a60e1 ; add rsp, 8 ; ret
0x000000000066d12b : cmp byte ptr [rcx], bh ; ret 0x107d
0x00000000004bc35a : cmp byte ptr [rcx], bh ; ret 0x7475
0x000000000052ace3 : cmp byte ptr [rcx], bl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004fbf53 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x00000000005730c4 : cmp byte ptr [rcx], dh ; shr al, 0x84 ; retf 0x10
0x000000000054fb4c : cmp byte ptr [rcx], dh ; shr al, 0xfc ; call qword ptr [rdx]
0x00000000005a2f4c : cmp byte ptr [rcx], dh ; shr al, 0xfc ; retf
0x00000000004bc359 : cmp byte ptr [rcx], dil ; ret 0x7475
0x000000000056c35f : cmp byte ptr [rcx], dl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f74c0 : cmp byte ptr [rdi + 0x10], 7 ; sete al ; ret
0x000000000055eae1 : cmp byte ptr [rdi + 0x10], al ; sete al ; ret
0x00000000006a6950 : cmp byte ptr [rdi + 0x38], 3 ; je 0x6a6966 ; ret
0x00000000006819f8 : cmp byte ptr [rdi + 0x72], 0 ; ret
0x00000000005fed10 : cmp byte ptr [rdi + 0x78], 0 ; sete al ; ret
0x000000000066b849 : cmp byte ptr [rdi + 0xc89], 0 ; jne 0x66b861 ; ret
0x000000000066b869 : cmp byte ptr [rdi + 0xc89], 0 ; jne 0x66b881 ; ret
0x0000000000676530 : cmp byte ptr [rdi + 0xc8a], 0 ; jne 0x676549 ; ret
0x0000000000591934 : cmp byte ptr [rdi + 8], al ; je 0x591947 ; xor eax, eax ; ret
0x00000000005ae384 : cmp byte ptr [rdi + 8], al ; sete al ; ret
0x0000000000632ec7 : cmp byte ptr [rdi + rax + 0x31], 1 ; je 0x632ed8 ; pop rbx ; ret
0x000000000067e889 : cmp byte ptr [rdi + rax], 0 ; jne 0x67e888 ; xor eax, eax ; ret
0x00000000006a08e1 : cmp byte ptr [rdi + rax], 0 ; jne 0x6a08de ; ret
0x00000000006a0914 : cmp byte ptr [rdi + rax], 0 ; jne 0x6a0916 ; ret
0x00000000006784a9 : cmp byte ptr [rdi + rax], 0 ; jns 0x6784a8 ; xor eax, eax ; ret
0x0000000000688f39 : cmp byte ptr [rdi + rax], 0x20 ; je 0x688f36 ; ret
0x0000000000746278 : cmp byte ptr [rdi + rax], ch ; add byte ptr [rax], ah ; retf
0x00000000006b6efc : cmp byte ptr [rdi + rsi], 0x3a ; je 0x6b6f10 ; xor eax, eax ; ret
0x000000000068f070 : cmp byte ptr [rdi - 0x1c], 1 ; sete al ; ret
0x0000000000788a08 : cmp byte ptr [rdi - 0x20], bh ; call qword ptr [rbx]
0x000000000067c620 : cmp byte ptr [rdi], 0 ; je 0x67c633 ; movzx eax, byte ptr [rdi + 0x28] ; ret
0x00000000006ccea8 : cmp byte ptr [rdi], 0x2f ; sete al ; ret
0x000000000065e241 : cmp byte ptr [rdi], al ; jb 0x65e249 ; ret
0x0000000000578493 : cmp byte ptr [rdi], al ; je 0x5784a6 ; xor eax, eax ; ret
0x00000000006a1af3 : cmp byte ptr [rdi], cl ; mov dh, 0xc ; xor byte ptr [rax], bh ; retf -0x7af1
0x00000000005fb29b : cmp byte ptr [rdi], cl ; popfq ; ret 0xf685
0x00000000007c481b : cmp byte ptr [rdi], dh ; retf
0x0000000000434704 : cmp byte ptr [rdx + 0x25], cl ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x8948
0x00000000007b4a68 : cmp byte ptr [rdx - 0x11], cl ; jmp qword ptr [rdi]
0x0000000000762780 : cmp byte ptr [rdx - 0x2c], bh ; call qword ptr [rdx]
0x0000000000644116 : cmp byte ptr [rdx - 0x76b6fffd], bh ; fucomp st(1) ; ret 0xffee
0x00000000004a5b94 : cmp byte ptr [rdx - 0x76b7ffdf], cl ; ret
0x00000000004b62aa : cmp byte ptr [rdx - 6], dl ; dec ecx ; ret
0x0000000000640886 : cmp byte ptr [rdx], al ; add byte ptr [rax], al ; call 0x4ccb72
0x00000000005055a6 : cmp byte ptr [rdx], al ; add byte ptr [rax], al ; mov edx, 0x6ef020 ; call rax
0x0000000000669c84 : cmp byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000005defe6 : cmp byte ptr [rdx], al ; call rax
0x00000000007b0528 : cmp byte ptr [rdx], al ; out dx, al ; jmp rax
0x00000000006ea191 : cmp byte ptr [rdx], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4a38
0x00000000006bed10 : cmp byte ptr [rip + 0x343bdb], 0 ; je 0x6bed29 ; ret
0x0000000000676210 : cmp byte ptr [rip + 0x38bd2b], 0 ; je 0x676229 ; ret
0x0000000000675cc0 : cmp byte ptr [rip + 0x38c1cd], 0 ; je 0x675cd9 ; ret
0x0000000000669710 : cmp byte ptr [rip + 0x3965d1], 0 ; jne 0x669729 ; ret
0x00000000005bfc80 : cmp byte ptr [rip + 0x43f5a7], 0 ; jne 0x5bfc99 ; ret
0x000000000079efb5 : cmp byte ptr [rip - 0x17bdc000], al ; call qword ptr [rsi]
0x0000000000740419 : cmp byte ptr [rip - 0x1abc9000], al ; jmp qword ptr [rax]
0x00000000007e5539 : cmp byte ptr [rip - 0x44ffc72d], al ; cmp dword ptr [rdx], esp ; ret 0x3a
0x000000000077ff60 : cmp byte ptr [rsi + rbx*8], 0xff ; retf 0
0x000000000040c84c : cmp byte ptr [rsi], 0x2b ; add cl, cl ; ret
0x000000000056b7b7 : cmp byte ptr [rsi], 0x70 ; add byte ptr [rax - 0x77], cl ; ja 0x56b7cf ; ret
0x0000000000748f9c : cmp byte ptr [rsi], 0xf7 ; jmp rax
0x000000000061c35e : cmp byte ptr [rsi], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000057e633 : cmp byte ptr [rsi], al ; je 0x57e646 ; xor eax, eax ; ret
0x00000000007e3a4d : cmp byte ptr [rsi], al ; ret
0x00000000007d1998 : cmp byte ptr [rsi], al ; ret 5
0x000000000051da4a : cmp byte ptr [rsi], dl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000049f0c1 : cmp byte ptr [rsi], dl ; call rax
0x000000000078f4d0 : cmp ch, 0xe1 ; jmp qword ptr [rbx]
0x00000000007451e5 : cmp ch, bh ; push rax ; ret
0x000000000073ae0d : cmp ch, bl ; jmp rax
0x000000000042cca9 : cmp ch, byte ptr [rcx] ; add cl, cl ; ret
0x0000000000639d02 : cmp ch, byte ptr [rdx + 0x5b580009] ; pop rbp ; ret
0x00000000004fe5bc : cmp ch, byte ptr [rip - 0x76b7ffe8] ; ret
0x00000000007abb49 : cmp ch, ch ; jmp qword ptr [rbx]
0x00000000007abac9 : cmp ch, ch ; jmp qword ptr [rdi]
0x000000000074f479 : cmp ch, cl ; call qword ptr [rax]
0x00000000004d1f90 : cmp cl, 0xff ; call qword ptr [rax]
0x00000000007dfa24 : cmp cl, al ; add eax, dword ptr [rcx] ; mov dl, 2 ; sldt word ptr [rax] ; ret
0x0000000000722a1d : cmp cl, bl ; ret 0xa038
0x0000000000734134 : cmp cl, bpl ; call rax
0x00000000006aa36b : cmp cl, byte ptr [rax + 1] ; ret
0x00000000006cddb2 : cmp cl, byte ptr [rax - 0x77] ; jb 0x6cddc4 ; ret
0x00000000005495f7 : cmp cl, byte ptr [rax - 0x77] ; ret
0x0000000000407e95 : cmp cl, byte ptr [rbp + 0x63] ; sar byte ptr [rcx + rcx + 0x49], 0x63 ; retf
0x000000000052ee4a : cmp cl, byte ptr [rbp] ; jmp rax
0x0000000000583d02 : cmp cl, byte ptr [rcx - 0x77] ; in eax, -0x18 ; jmp rdi
0x00000000005cd692 : cmp cl, byte ptr [rdi] ; str word ptr [rax - 0x77] ; ret 0x8948
0x000000000069b534 : cmp cl, byte ptr [rdi] ; test byte ptr [rbp - 0x76fffffd], dl ; ret 0xe283
0x00000000006d0486 : cmp cl, byte ptr [rdi] ; test edi, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000005b6515 : cmp cl, byte ptr [rip - 0x3dea0100] ; ret
0x00000000005b6530 : cmp cl, byte ptr [rip - 0x58ea0100] ; ret
0x000000000052f902 : cmp cl, byte ptr [rsi + 0x1a] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000059cc02 : cmp cl, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000734135 : cmp cl, ch ; call rax
0x0000000000745b85 : cmp cl, dh ; jmp qword ptr [rax]
0x000000000075bd01 : cmp cl, dl ; call qword ptr [rbx]
0x000000000075bd41 : cmp cl, dl ; call qword ptr [rcx]
0x000000000075bcc1 : cmp cl, dl ; call qword ptr [rdx]
0x0000000000511030 : cmp cl, dl ; jne 0x511055 ; add rsp, 8 ; ret
0x0000000000666fd1 : cmp cl, dl ; jne 0x666fda ; ret
0x0000000000667001 : cmp cl, dl ; jne 0x66700a ; ret
0x0000000000667031 : cmp cl, dl ; jne 0x66703a ; ret
0x0000000000667063 : cmp cl, dl ; jne 0x66706c ; ret
0x0000000000667093 : cmp cl, dl ; jne 0x66709c ; ret
0x00000000006670c3 : cmp cl, dl ; jne 0x6670cc ; ret
0x00000000006670f3 : cmp cl, dl ; jne 0x6670fc ; ret
0x0000000000676dc1 : cmp cl, dl ; jne 0x676dd2 ; add rsp, 8 ; ret
0x0000000000676f61 : cmp cl, dl ; jne 0x676f6a ; ret
0x0000000000676fd1 : cmp cl, dl ; jne 0x676fda ; ret
0x0000000000677043 : cmp cl, dl ; jne 0x67704c ; ret
0x00000000006770b3 : cmp cl, dl ; jne 0x6770bc ; ret
0x0000000000558ad7 : cmp dh, 0x6f ; add byte ptr [rax - 0x77], cl ; ja 0x558aef ; ret
0x0000000000533c40 : cmp dh, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x0000000000426297 : cmp dh, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000005f4959 : cmp dh, 0xff ; dec dword ptr [rcx - 0x77] ; ret 0x15e8
0x00000000005f48b0 : cmp dh, 0xff ; dec dword ptr [rcx - 0x77] ; ret 0x9ae8
0x00000000005f451c : cmp dh, 0xff ; dec dword ptr [rcx - 0x77] ; ret 0xb4e8
0x00000000005f4be7 : cmp dh, 0xff ; dec dword ptr [rcx - 0x77] ; ret 0xf7e8
0x00000000005f49d3 : cmp dh, 0xff ; dec dword ptr [rcx - 0x77] ; ret 0xf9e8
0x00000000006aaac9 : cmp dh, 3 ; jbe 0x6aaad5 ; ret
0x00000000006c6cd3 : cmp dh, bh ; je 0x6c6ce4 ; ret
0x000000000075fe38 : cmp dh, byte ptr [rcx - 0x2d] ; jmp qword ptr [rsi]
0x00000000006bf63a : cmp dh, byte ptr [rsp + rsi] ; add byte ptr [rax - 0x77], cl ; retf 0x6348
0x0000000000551564 : cmp dh, dh ; ret 0xf01
0x00000000006cbaa0 : cmp di, si ; sete al ; ret
0x0000000000606519 : cmp dil, 0x19 ; setbe al ; ret
0x00000000006c5aa9 : cmp dil, 0x1b ; sete al ; and eax, edx ; ret
0x00000000006bd3d8 : cmp dil, 0x20 ; sete al ; or eax, edx ; ret
0x0000000000678533 : cmp dil, 0x20 ; sete al ; ret
0x00000000006bd3bb : cmp dil, 0x5e ; setbe al ; or eax, edx ; ret
0x00000000006bd39e : cmp dil, 0x5f ; sete al ; or eax, edx ; ret
0x0000000000678520 : cmp dil, 0x5f ; sete al ; ret
0x00000000006c6b20 : cmp dil, 0xa ; setne al ; ret
0x0000000000678510 : cmp dil, 0xad ; sete al ; ret
0x00000000006c6b30 : cmp dil, 0xb ; setne al ; ret
0x00000000006aa9d0 : cmp dil, 1 ; seta al ; ret
0x00000000005218d0 : cmp dil, 1 ; setne al ; ret
0x00000000005ae2f0 : cmp dil, 2 ; setne al ; ret
0x00000000005ae2e0 : cmp dil, 3 ; setne al ; ret
0x00000000005ae300 : cmp dil, 4 ; setne al ; ret
0x00000000005ae310 : cmp dil, 5 ; setne al ; ret
0x00000000005ae320 : cmp dil, 6 ; setne al ; ret
0x00000000005ae330 : cmp dil, 7 ; setne al ; ret
0x0000000000678433 : cmp dil, 9 ; setbe al ; ret
0x00000000006bc580 : cmp dil, sil ; sete al ; ret
0x00000000006d0aa4 : cmp dl, 0x20 ; je 0x6d0a99 ; add rsp, 8 ; ret
0x000000000077a540 : cmp dl, 0xdc ; jmp qword ptr [rcx]
0x00000000007bc2a0 : cmp dl, 0xf0 ; call qword ptr [rsi]
0x00000000004d3724 : cmp dl, 0xff ; jmp qword ptr [rdx]
0x00000000006c57ce : cmp dl, 5 ; ja 0x6c57e1 ; add rsp, 8 ; ret
0x0000000000758fc9 : cmp dl, al ; call qword ptr [rdi]
0x000000000057d09e : cmp dl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000056c13e : cmp dl, byte ptr [rcx] ; add bl, ch ; ret 0x8948
0x000000000048ee3c : cmp dl, byte ptr [rdi] ; call rax
0x00000000006aa9f3 : cmp dl, byte ptr [rdi] ; je 0x6aaa06 ; xor eax, eax ; ret
0x00000000006c6815 : cmp dl, byte ptr [rdi] ; je 0x6c6824 ; ret
0x00000000006c6b53 : cmp dl, byte ptr [rdi] ; je 0x6c6b66 ; xor eax, eax ; ret
0x000000000068ed7d : cmp dl, byte ptr [rsi + rax + 1] ; je 0x68ed78 ; xor eax, eax ; ret
0x0000000000570cb8 : cmp dl, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000075bd99 : cmp dl, cl ; call rsp
0x00000000006cba92 : cmp dl, cl ; je 0x6cbaa4 ; ret
0x000000000050c20d : cmp dword ptr [r15], edx ; add bl, ch ; ret 0x8948
0x0000000000519efe : cmp dword ptr [rax + 0x10], edx ; jle 0x519f18 ; add edx, 1 ; ret
0x000000000056fc5e : cmp dword ptr [rax + 0x10], edx ; jle 0x56fc78 ; add edx, 1 ; ret
0x000000000058529e : cmp dword ptr [rax + 0x10], edx ; jle 0x5852b8 ; add edx, 1 ; ret
0x000000000058539e : cmp dword ptr [rax + 0x10], edx ; jle 0x5853b8 ; add edx, 1 ; ret
0x00000000004aa593 : cmp dword ptr [rax + 0x21], eax ; add byte ptr [rax - 0x77], cl ; ret 0x2c7
0x00000000006d1999 : cmp dword ptr [rax + 0x63], ecx ; ret 0x2948
0x000000000063a553 : cmp dword ptr [rax + rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000063a763 : cmp dword ptr [rax + rax], 0x8c48348 ; pop rbx ; pop rbp ; jmp rax
0x00000000006301e2 : cmp dword ptr [rax + rax], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000078f0a5 : cmp dword ptr [rax + rax], eax ; clc ; cmc ; loope 0x78f0b2 ; retf 1
0x00000000006b83e3 : cmp dword ptr [rax + rax], edx ; add byte ptr [rax - 0x77], cl ; ret 0xb60f
0x000000000053d15c : cmp dword ptr [rax + rax], edx ; nop ; ret
0x0000000000454329 : cmp dword ptr [rax - 0x76b7ffde], edi ; ret
0x00000000005e2533 : cmp dword ptr [rax - 0x76b7fff6], ecx ; ret
0x0000000000643b28 : cmp dword ptr [rax - 0x77], ecx ; ret
0x00000000004f6986 : cmp dword ptr [rax - 0x7d], ecx ; ret
0x00000000007f0bcb : cmp dword ptr [rax], 0x28 ; cld ; cmp al, byte ptr [rax] ; ret
0x00000000004d0ff0 : cmp dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; test eax, esp ; idiv edi ; call rax
0x000000000047994a : cmp dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000669714 : cmp dword ptr [rax], eax ; add byte ptr [rbp + 7], dh ; ret
0x00000000007cff9e : cmp dword ptr [rax], eax ; add byte ptr [rcx + 6], ah ; ret
0x000000000066980f : cmp dword ptr [rax], eax ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000066af53 : cmp dword ptr [rax], eax ; add rsp, 8 ; ret
0x0000000000669a03 : cmp dword ptr [rax], eax ; call 0x675cc4
0x0000000000671353 : cmp dword ptr [rax], eax ; call rax
0x0000000000522a87 : cmp dword ptr [rax], eax ; je 0x522a96 ; xor eax, eax ; ret
0x00000000005286b7 : cmp dword ptr [rax], eax ; je 0x5286c6 ; xor eax, eax ; ret
0x0000000000544087 : cmp dword ptr [rax], eax ; je 0x544096 ; xor eax, eax ; ret
0x0000000000567977 : cmp dword ptr [rax], eax ; je 0x567986 ; xor eax, eax ; ret
0x00000000005916c7 : cmp dword ptr [rax], eax ; je 0x5916d6 ; xor eax, eax ; ret
0x00000000005a9fb7 : cmp dword ptr [rax], eax ; je 0x5a9fc6 ; xor eax, eax ; ret
0x0000000000678b7a : cmp dword ptr [rax], eax ; je 0x678b84 ; ret
0x00000000006698d2 : cmp dword ptr [rax], eax ; jmp rax
0x000000000066af19 : cmp dword ptr [rax], eax ; mov qword ptr [rdi + 0x78], rax ; ret
0x0000000000669935 : cmp dword ptr [rax], eax ; ret
0x00000000007f6c40 : cmp dword ptr [rax], eax ; retf
0x00000000005fd929 : cmp dword ptr [rax], ecx ; add byte ptr [rax - 0x7d], cl ; cli ; or dword ptr [rax - 0x77], ecx ; ret
0x000000000047c17a : cmp dword ptr [rax], esp ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000645daf : cmp dword ptr [rbp - 0x76b7fffd], ebp ; ret
0x000000000069ae15 : cmp dword ptr [rbp - 2], ecx ; dec dword ptr [rbp - 0x77] ; imul ecx ; retf -0x2c
0x00000000005aeef5 : cmp dword ptr [rbp], eax ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000042efb8 : cmp dword ptr [rbp], ebx ; call rax
0x00000000004aefdc : cmp dword ptr [rbp], edx ; call rax
0x00000000005632a2 : cmp dword ptr [rbx + 0x10], 0 ; setne al ; pop rbx ; ret
0x0000000000683c41 : cmp dword ptr [rbx + 2], 0 ; add byte ptr [rsi + 0xf], ah ; ret
0x0000000000507b93 : cmp dword ptr [rbx - 0x76b7ffe5], ecx ; ret
0x000000000068abfd : cmp dword ptr [rbx], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005cef37 : cmp dword ptr [rbx], eax ; call rax
0x0000000000520dca : cmp dword ptr [rbx], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044ef46 : cmp dword ptr [rbx], ebx ; call rax
0x000000000054c233 : cmp dword ptr [rbx], edx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000048ac4b : cmp dword ptr [rbx], esp ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000054e80e : cmp dword ptr [rcx + 0x10], 0 ; je 0x54e828 ; xor eax, eax ; ret
0x000000000068f933 : cmp dword ptr [rcx + 4], eax ; sete al ; ret
0x0000000000619a29 : cmp dword ptr [rcx + 6], esp ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000522a86 : cmp dword ptr [rcx], 0 ; je 0x522a97 ; xor eax, eax ; ret
0x00000000005286b6 : cmp dword ptr [rcx], 0 ; je 0x5286c7 ; xor eax, eax ; ret
0x0000000000544086 : cmp dword ptr [rcx], 0 ; je 0x544097 ; xor eax, eax ; ret
0x0000000000567976 : cmp dword ptr [rcx], 0 ; je 0x567987 ; xor eax, eax ; ret
0x00000000005916c6 : cmp dword ptr [rcx], 0 ; je 0x5916d7 ; xor eax, eax ; ret
0x00000000005a9fb6 : cmp dword ptr [rcx], 0 ; je 0x5a9fc7 ; xor eax, eax ; ret
0x000000000058bf44 : cmp dword ptr [rcx], 0x89ef75da ; ret
0x00000000007ad06c : cmp dword ptr [rcx], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0xe], cl ; xor byte ptr [rdx], al ; retf 0xe0a
0x0000000000616e94 : cmp dword ptr [rcx], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000057ec4d : cmp dword ptr [rcx], edi ; ret 0x894c
0x00000000005aacac : cmp dword ptr [rcx], edx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005632b1 : cmp dword ptr [rdi + 0x10], 0 ; je 0x5632c6 ; ret
0x00000000006a4321 : cmp dword ptr [rdi + 0x10], 0 ; je 0x6a4336 ; ret
0x00000000006a32e1 : cmp dword ptr [rdi + 0x10], 0 ; setne al ; ret
0x00000000005a2593 : cmp dword ptr [rdi + 0x10], eax ; je 0x5a25a7 ; xor eax, eax ; ret
0x0000000000526f47 : cmp dword ptr [rdi + 0x10], esi ; jl 0x526f55 ; ret
0x0000000000571d47 : cmp dword ptr [rdi + 0x10], esi ; jl 0x571d55 ; ret
0x000000000058fa87 : cmp dword ptr [rdi + 0x10], esi ; jl 0x58fa95 ; ret
0x0000000000590d27 : cmp dword ptr [rdi + 0x10], esi ; jl 0x590d35 ; ret
0x00000000005a5017 : cmp dword ptr [rdi + 0x10], esi ; jl 0x5a5025 ; ret
0x0000000000526b75 : cmp dword ptr [rdi + 0x10], esi ; setge al ; ret
0x000000000065ceb5 : cmp dword ptr [rdi + 0x18], 9 ; sete al ; ret
0x00000000005429f2 : cmp dword ptr [rdi + 0x18], eax ; sete al ; ret
0x0000000000544e43 : cmp dword ptr [rdi + 0x1c], eax ; je 0x544e57 ; xor eax, eax ; ret
0x000000000052b18b : cmp dword ptr [rdi + 0x20], ecx ; je 0x52b1a1 ; add rsp, 8 ; ret
0x00000000006a7e01 : cmp dword ptr [rdi + 0x28], 0 ; je 0x6a7e16 ; ret
0x000000000066d021 : cmp dword ptr [rdi + 0x28], 0 ; setne al ; ret
0x00000000005018d1 : cmp dword ptr [rdi + 0x38], 0 ; je 0x5018e6 ; ret
0x00000000006aaa87 : cmp dword ptr [rdi + 0x38], eax ; sete al ; ret
0x00000000006aaa7b : cmp dword ptr [rdi + 0x50], eax ; sete al ; ret
0x00000000006c6bfe : cmp dword ptr [rdi + 0xc], eax ; sete al ; ret
0x0000000000510011 : cmp dword ptr [rdi + 8], 0 ; je 0x510026 ; ret
0x000000000053ad41 : cmp dword ptr [rdi + 8], 0 ; sete al ; ret
0x000000000065cc31 : cmp dword ptr [rdi + 8], 0 ; setne al ; ret
0x0000000000519675 : cmp dword ptr [rdi + 8], eax ; je 0x519687 ; xor eax, eax ; ret
0x00000000005197f5 : cmp dword ptr [rdi + 8], eax ; je 0x519807 ; xor eax, eax ; ret
0x000000000053e483 : cmp dword ptr [rdi + 8], eax ; je 0x53e497 ; xor eax, eax ; ret
0x000000000053fc95 : cmp dword ptr [rdi + 8], eax ; je 0x53fca7 ; xor eax, eax ; ret
0x0000000000563b35 : cmp dword ptr [rdi + 8], eax ; je 0x563b47 ; xor eax, eax ; ret
0x0000000000584ea5 : cmp dword ptr [rdi + 8], eax ; je 0x584eb7 ; xor eax, eax ; ret
0x00000000005a7465 : cmp dword ptr [rdi + 8], eax ; je 0x5a7477 ; xor eax, eax ; ret
0x000000000050f683 : cmp dword ptr [rdi + 8], eax ; sete al ; ret
0x00000000005f7cab : cmp dword ptr [rdi + 8], eax ; setl al ; ret
0x00000000005fbc77 : cmp dword ptr [rdi + 8], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000549ed1 : cmp dword ptr [rdi + rax], edx ; setg al ; ret
0x00000000006d1397 : cmp dword ptr [rdi - 0x1a], esi ; sub rax, r8 ; mov byte ptr [rsi + rax], dl ; ret
0x0000000000434fa7 : cmp dword ptr [rdi - 0x76b7ffdc], esi ; ret
0x0000000000524429 : cmp dword ptr [rdi - 0x76b7ffeb], esi ; ret
0x00000000006c7de0 : cmp dword ptr [rdi], -1 ; je 0x6c7df5 ; ret
0x00000000006c7be0 : cmp dword ptr [rdi], -1 ; sete al ; ret
0x000000000067e8f1 : cmp dword ptr [rdi], 0 ; sete al ; ret
0x00000000006089d4 : cmp dword ptr [rdi], eax ; je 0x6089e6 ; xor eax, eax ; ret
0x000000000059bfe6 : cmp dword ptr [rdi], ecx ; add byte ptr [rax + 0x29], cl ; ret
0x000000000050c20e : cmp dword ptr [rdi], edx ; add bl, ch ; ret 0x8948
0x00000000006373db : cmp dword ptr [rdi], edx ; cmp eax, 0x9c8d4800 ; ret
0x00000000006cba06 : cmp dword ptr [rdi], esi ; jne 0x6cba00 ; add rsp, 8 ; ret
0x0000000000544ca5 : cmp dword ptr [rdx + 0x1c], edi ; setl al ; ret
0x000000000052b086 : cmp dword ptr [rdx + 0x20], edi ; setl al ; ret
0x00000000006cdd10 : cmp dword ptr [rdx - 8], 0 ; jne 0x6cdd0f ; ret
0x0000000000660710 : cmp dword ptr [rdx], 0xd ; je 0x660726 ; ret
0x000000000065d186 : cmp dword ptr [rdx], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004cd25d : cmp dword ptr [rdx], eax ; add byte ptr [rcx], bh ; ret
0x000000000045ef12 : cmp dword ptr [rdx], ebx ; call rax
0x000000000055cd2f : cmp dword ptr [rdx], edx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000045c188 : cmp dword ptr [rdx], esp ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e553f : cmp dword ptr [rdx], esp ; ret 0x3a
0x00000000005b66be : cmp dword ptr [rip + 0x1915ff00], ecx ; ret 0x44
0x0000000000676b71 : cmp dword ptr [rip + 0x38bce0], 0 ; je 0x676b89 ; ret
0x000000000079f075 : cmp dword ptr [rip - 0x17b78800], eax ; jmp qword ptr [rbx]
0x0000000000740471 : cmp dword ptr [rip - 0x1ab78000], eax ; call qword ptr [rax]
0x000000000062c12b : cmp dword ptr [rip - 0x6bf10000], edi ; ret
0x0000000000544e60 : cmp dword ptr [rsi + 0x1c], edi ; setl al ; ret
0x0000000000544bc5 : cmp dword ptr [rsi + 0x1c], edx ; setl al ; ret
0x000000000052b1d1 : cmp dword ptr [rsi + 0x20], edi ; setl al ; ret
0x000000000052afa6 : cmp dword ptr [rsi + 0x20], edx ; setl al ; ret
0x00000000006820ee : cmp dword ptr [rsi + 0xf], esp ; sub dl, al ; add rsp, 8 ; ret
0x0000000000503c84 : cmp dword ptr [rsi + 4], ecx ; jge 0x503c95 ; ret
0x00000000006d49f4 : cmp dword ptr [rsi + 8], ecx ; cmova eax, edx ; ret
0x00000000005f8515 : cmp dword ptr [rsi + 8], esi ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004261e3 : cmp dword ptr [rsi - 0x76b7ffd9], esp ; ret 0x858b
0x000000000044ea13 : cmp dword ptr [rsi - 0x76b7ffdb], edi ; ret
0x000000000055a74b : cmp dword ptr [rsi], 0x89480016 ; ret
0x00000000007dbe13 : cmp dword ptr [rsi], eax ; mov bh, 0xd ; add byte ptr [rdi + 5], al ; retf 0x309
0x000000000041efc3 : cmp dword ptr [rsi], ebx ; call rax
0x0000000000624d83 : cmp dword ptr [rsi], edi ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4847
0x000000000051d92b : cmp dword ptr [rsi], edx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f6e85 : cmp dword ptr [rsi], edx ; jle 0x4f6e94 ; ret
0x00000000007e77e5 : cmp dword ptr [rsi], edx ; ret
0x000000000045cd3d : cmp dword ptr [rsi], esp ; add cl, cl ; ret
0x000000000053d15b : cmp dword ptr gs:[rax + rax], edx ; nop ; ret
0x0000000000669713 : cmp dword ptr gs:[rax], eax ; add byte ptr [rbp + 7], dh ; ret
0x00000000006bc4f9 : cmp dx, ax ; jne 0x6bc4f5 ; ret
0x0000000000664189 : cmp eax, 0x100 ; jne 0x664161 ; ret
0x00000000007f500e : cmp eax, 0x10072c01 ; add byte ptr [rax], al ; and dword ptr [rsi], ebx ; retf 0x101
0x00000000004e13fb : cmp eax, 0x10bf ; add al, ch ; retf 0x1dd1
0x00000000007f6fd7 : cmp eax, 0x14159c00 ; retf
0x00000000006d6135 : cmp eax, 0x326175 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006ce071 : cmp eax, 0x33f2f6 ; ret
0x00000000006bfbe2 : cmp eax, 0x342ea1 ; ret
0x00000000006bea72 : cmp eax, 0x34e269 ; ret
0x00000000006bea62 : cmp eax, 0x34e271 ; ret
0x00000000006aa842 : cmp eax, 0x357e5b ; mfence ; ret
0x0000000000692141 : cmp eax, 0x3777c2 ; add rsp, 8 ; ret
0x0000000000692061 : cmp eax, 0x3778aa ; add rsp, 8 ; ret
0x0000000000692021 : cmp eax, 0x3778da ; add rsp, 8 ; ret
0x0000000000669a00 : cmp eax, 0x3962f3 ; call 0x675cc7
0x0000000000669711 : cmp eax, 0x3965d1 ; add byte ptr [rbp + 7], dh ; ret
0x00000000007465b1 : cmp eax, 0x3d000007 ; jmp qword ptr [rax]
0x000000000062c129 : cmp eax, 0x3d3979 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000007f0c43 : cmp eax, 0x3db805 ; retf
0x00000000005bfc81 : cmp eax, 0x43f5a7 ; add byte ptr [rbp + 7], dh ; ret
0x00000000005b767a : cmp eax, 0x44e4a9 ; ret
0x00000000005b76ab : cmp eax, 0x44e4d8 ; ret
0x00000000005b731a : cmp eax, 0x44e7a9 ; ret
0x00000000005b6d6b : cmp eax, 0x44ec38 ; ret
0x00000000005b697b : cmp eax, 0x44ef38 ; ret
0x00000000005b691b : cmp eax, 0x44ef68 ; ret
0x00000000005b694a : cmp eax, 0x44ef99 ; ret
0x00000000005b68ea : cmp eax, 0x44f029 ; ret
0x00000000005b688a : cmp eax, 0x44f0b9 ; ret
0x00000000005b5dea : cmp eax, 0x44fc79 ; ret
0x00000000005b5d2a : cmp eax, 0x44fd09 ; ret
0x00000000005b5dba : cmp eax, 0x44fd99 ; ret
0x00000000005b53ca : cmp eax, 0x450639 ; ret
0x00000000005b49db : cmp eax, 0x4511d8 ; ret
0x0000000000631bb3 : cmp eax, 0x48000001 ; mov edi, ebp ; call rax
0x000000000057e4a2 : cmp eax, 0x4802b9 ; ret
0x0000000000688fcf : cmp eax, 0x48ffffff ; add esp, 0x28 ; ret
0x0000000000549891 : cmp eax, 0x4b47ca ; mfence ; ret
0x000000000053da92 : cmp eax, 0x4c03f9 ; ret
0x00000000007f0bb8 : cmp eax, 0x537be00 ; jmp qword ptr [rax]
0x00000000007f6c3a : cmp eax, 0x538c100 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp dword ptr [rax], eax ; retf
0x00000000004071ff : cmp eax, 0x58002cd5 ; pop rbx ; pop rbp ; ret
0x0000000000631fc0 : cmp eax, 0x5bd88900 ; pop rbp ; pop r12 ; ret
0x000000000062c144 : cmp eax, 0x5bd88900 ; ret
0x000000000062c1a5 : cmp eax, 0x5be88900 ; pop rbp ; pop r12 ; ret
0x00000000005b0233 : cmp eax, 0x62 ; ja 0x5b0257 ; add rsp, 8 ; ret
0x00000000005b0273 : cmp eax, 0x62 ; ja 0x5b0297 ; add rsp, 8 ; ret
0x00000000005b02e3 : cmp eax, 0x62 ; ja 0x5b0307 ; add rsp, 8 ; ret
0x00000000005b0653 : cmp eax, 0x62 ; ja 0x5b0677 ; add rsp, 8 ; ret
0x00000000007f7347 : cmp eax, 0x63dbd00 ; retf
0x0000000000659718 : cmp eax, 0x68 ; sete al ; pop rbx ; ret
0x0000000000659738 : cmp eax, 0x6e ; sete al ; pop rbx ; ret
0x00000000006a4744 : cmp eax, 0x73c53 ; ret
0x00000000006a5348 : cmp eax, 0x7ff00000 ; setne al ; ret
0x00000000006a5e68 : cmp eax, 0x7fff ; setne al ; ret
0x0000000000501635 : cmp eax, 0x83000022 ; ret
0x0000000000642ff1 : cmp eax, 0x890003e5 ; ret
0x0000000000459613 : cmp eax, 0x89480000 ; ret 0x894c
0x00000000004489db : cmp eax, 0x89480000 ; ret 0x8b48
0x00000000006c097f : cmp eax, 0x89480001 ; ret
0x000000000068a89c : cmp eax, 0x89480003 ; ret
0x000000000062bd8f : cmp eax, 0x89480005 ; ret
0x00000000005fcd7e : cmp eax, 0x89480008 ; ret
0x000000000059a82a : cmp eax, 0x89480012 ; ret
0x000000000058a83e : cmp eax, 0x89480013 ; ret
0x000000000053a8b5 : cmp eax, 0x89480018 ; ret
0x00000000004ca883 : cmp eax, 0x8948001f ; ret
0x0000000000466afb : cmp eax, 0x89480024 ; ret
0x000000000056b848 : cmp eax, 0x89480070 ; ja 0x56b85e ; ret
0x00000000006846f9 : cmp eax, 0x93c9e ; add rsp, 0x38 ; ret
0x000000000062c12c : cmp eax, 0x940f0000 ; ret
0x000000000062e72d : cmp eax, 0x9c8d4800 ; ret
0x000000000068ed54 : cmp eax, 0xa09900 ; jne 0x68ed4f ; ret
0x000000000068fde4 : cmp eax, 0xa09900 ; jne 0x68fddf ; ret
0x00000000006a8514 : cmp eax, 0xa0a2c0 ; jne 0x6a850f ; ret
0x00000000006a8b54 : cmp eax, 0xa0a2c0 ; jne 0x6a8b4f ; ret
0x0000000000630fad : cmp eax, 0xac8d4800 ; ret
0x0000000000668b3b : cmp eax, 0xc ; je 0x668b4e ; add rsp, 8 ; ret
0x0000000000626251 : cmp eax, 0xc4834800 ; or byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000063182f : cmp eax, 0xc4834800 ; sbb byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000046006f : cmp eax, 0xc90025e8 ; ret
0x00000000004a1f67 : cmp eax, 0xc9ffff83 ; ret
0x000000000040eb24 : cmp eax, 0xd0ff005f ; leave ; ret
0x00000000006874f0 : cmp eax, 0xd8894800 ; jne 0x687544 ; call rax
0x0000000000631d61 : cmp eax, 0xd8894800 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006a48ea : cmp eax, 0xe8 ; jne 0x6a48d5 ; ret
0x00000000006a493e : cmp eax, 0xe8 ; jne 0x6a4925 ; ret
0x00000000006a53b2 : cmp eax, 0xe8 ; jne 0x6a539d ; ret
0x00000000006a540e : cmp eax, 0xe8 ; jne 0x6a53f5 ; ret
0x00000000005dc7bc : cmp eax, 0xe8000008 ; retf
0x00000000007af435 : cmp eax, 0xe8480006 ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000577f5f : cmp eax, 0xe8ffffbc ; retf 0x1095
0x00000000007af495 : cmp eax, 0xe9180006 ; in eax, dx ; jmp rbx
0x0000000000414211 : cmp eax, 0xeb0026b9 ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000006278cc : cmp eax, 0xebed3100 ; ret 0x41f0
0x00000000006ccc95 : cmp eax, 0xfe ; je 0x6ccca5 ; ret
0x00000000006ccd25 : cmp eax, 0xfe ; je 0x6ccd35 ; ret
0x000000000068e6de : cmp eax, 0xff ; je 0x68e6ee ; pop rbx ; ret
0x00000000006c82d2 : cmp eax, 0xff ; je 0x6c82f9 ; add rsp, 8 ; ret
0x00000000006c8319 : cmp eax, 0xff ; je 0x6c832c ; add rsp, 8 ; ret
0x00000000006c8441 : cmp eax, 0xff ; je 0x6c8454 ; add rsp, 8 ; ret
0x00000000006c84a9 : cmp eax, 0xff ; je 0x6c84bc ; add rsp, 8 ; ret
0x00000000006c9574 : cmp eax, 0xff ; je 0x6c9587 ; add rsp, 8 ; ret
0x00000000006cc496 : cmp eax, 0xff ; je 0x6cc4a5 ; ret
0x00000000006ccb55 : cmp eax, 0xff ; je 0x6ccb65 ; ret
0x00000000006ce9d6 : cmp eax, 0xff ; je 0x6ce9e5 ; ret
0x00000000006c70bb : cmp eax, 0xff ; jne 0x6c7095 ; pop rbx ; ret
0x00000000006ce4e0 : cmp eax, 0xff ; jne 0x6ce4cf ; mov dword ptr [rsi], eax ; ret
0x00000000006ce548 : cmp eax, 0xff ; jne 0x6ce537 ; mov dword ptr [rsi], eax ; ret
0x000000000048ebab : cmp eax, 0xff ; setne al ; nop ; pop rbp ; ret
0x00000000006c7c7a : cmp eax, 0xff ; setne al ; ret
0x0000000000689b23 : cmp eax, 1 ; je 0x689b37 ; xor eax, eax ; ret
0x00000000006aada6 : cmp eax, 1 ; jne 0x6aadb9 ; add rsp, 8 ; ret
0x000000000066c096 : cmp eax, 1 ; sete al ; ret
0x00000000006c7c54 : cmp eax, 2 ; setbe al ; ret
0x00000000006a1b05 : cmp eax, 4 ; jne 0x6a1af7 ; xor al, al ; ret
0x00000000005310ff : cmp eax, dword ptr [rax + rax] ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000658a9e : cmp eax, dword ptr [rax] ; add al, ch ; retf 0x4f2
0x000000000067cadb : cmp eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007f7793 : cmp eax, dword ptr [rax] ; add byte ptr [rdx + rax + 0x102d005], dh ; ret
0x000000000074f245 : cmp eax, dword ptr [rax] ; add byte ptr [rsp + rsi - 0x33], cl ; jmp qword ptr [rbx]
0x0000000000647b94 : cmp eax, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000647fd5 : cmp eax, dword ptr [rax] ; jmp rax
0x000000000052196d : cmp eax, dword ptr [rax] ; jne 0x521988 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000521a3d : cmp eax, dword ptr [rax] ; jne 0x521a58 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000057e6b9 : cmp eax, dword ptr [rax] ; jne 0x57e6d0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000648806 : cmp eax, dword ptr [rax] ; mov eax, ebx ; pop rbx ; ret
0x00000000007c6c0a : cmp eax, dword ptr [rax] ; ret
0x000000000051864d : cmp eax, dword ptr [rbp - 0x76b7ffea] ; ret
0x0000000000685fc4 : cmp eax, dword ptr [rbx + 8] ; jne 0x685fdb ; pop rbx ; ret
0x000000000065befd : cmp eax, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006bde2d : cmp eax, dword ptr [rbx] ; jg 0x6bde38 ; pop rbx ; ret
0x00000000004a05b1 : cmp eax, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; retf -0x76b8
0x000000000075f33d : cmp eax, dword ptr [rcx] ; add byte ptr [rdx], cl ; out 0xd2, al ; jmp qword ptr [rcx]
0x00000000005eed5a : cmp eax, dword ptr [rcx] ; call rax
0x0000000000746541 : cmp eax, dword ptr [rdi] ; add al, dl ; cmp esi, ebx ; call rax
0x0000000000736b19 : cmp eax, dword ptr [rdx] ; add byte ptr [rax], dh ; adc dl, dl ; jmp rax
0x000000000062d03b : cmp eax, dword ptr [rip - 0x157cb800] ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000079f215 : cmp eax, dword ptr [rip - 0x17af2200] ; call qword ptr [rcx]
0x00000000005210a3 : cmp eax, dword ptr [rsi + 0x10] ; je 0x5210b7 ; xor eax, eax ; ret
0x0000000000571513 : cmp eax, dword ptr [rsi + 0x10] ; je 0x571527 ; xor eax, eax ; ret
0x000000000058e553 : cmp eax, dword ptr [rsi + 0x10] ; je 0x58e567 ; xor eax, eax ; ret
0x000000000058e8d3 : cmp eax, dword ptr [rsi + 0x10] ; je 0x58e8e7 ; xor eax, eax ; ret
0x000000000054d6b3 : cmp eax, dword ptr [rsi + 0x18] ; je 0x54d6c7 ; xor eax, eax ; ret
0x0000000000522b43 : cmp eax, dword ptr [rsi + 0x20] ; je 0x522b57 ; xor eax, eax ; ret
0x0000000000528773 : cmp eax, dword ptr [rsi + 0x20] ; je 0x528787 ; xor eax, eax ; ret
0x0000000000544143 : cmp eax, dword ptr [rsi + 0x20] ; je 0x544157 ; xor eax, eax ; ret
0x0000000000567a33 : cmp eax, dword ptr [rsi + 0x20] ; je 0x567a47 ; xor eax, eax ; ret
0x00000000005aa073 : cmp eax, dword ptr [rsi + 0x20] ; je 0x5aa087 ; xor eax, eax ; ret
0x00000000005070f5 : cmp eax, dword ptr [rsi + 8] ; je 0x507107 ; xor eax, eax ; ret
0x0000000000555375 : cmp eax, dword ptr [rsi + 8] ; je 0x555387 ; xor eax, eax ; ret
0x0000000000626055 : cmp eax, dword ptr [rsi + 8] ; je 0x626067 ; xor eax, eax ; ret
0x00000000007af26d : cmp eax, dword ptr [rsi] ; add byte ptr [rax], dh ; in al, -0x13 ; call rax
0x00000000007af26c : cmp eax, dword ptr fs:[rsi] ; add byte ptr [rax], dh ; in al, -0x13 ; call rax
0x00000000005eeda6 : cmp eax, dword ptr ss:[rcx] ; call rax
0x0000000000664578 : cmp eax, eax ; jne 0x664569 ; mov eax, edi ; not eax ; pop rbx ; ret
0x00000000006c5791 : cmp eax, eax ; jne 0x6c5784 ; ret
0x000000000068d87f : cmp eax, ecx ; jne 0x68d878 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000066705e : cmp eax, edi ; setg cl ; cmp cl, dl ; jne 0x667071 ; ret
0x000000000066708e : cmp eax, edi ; setg cl ; cmp cl, dl ; jne 0x6670a1 ; ret
0x00000000006670be : cmp eax, edi ; setg cl ; cmp cl, dl ; jne 0x6670d1 ; ret
0x00000000006770ae : cmp eax, edi ; setg cl ; cmp cl, dl ; jne 0x6770c1 ; ret
0x0000000000666fcc : cmp eax, edi ; setl cl ; cmp cl, dl ; jne 0x666fdf ; ret
0x0000000000666ffc : cmp eax, edi ; setl cl ; cmp cl, dl ; jne 0x66700f ; ret
0x000000000066702c : cmp eax, edi ; setl cl ; cmp cl, dl ; jne 0x66703f ; ret
0x00000000005f9649 : cmp eax, edx ; ja 0x5f965c ; add esi, ecx ; mov dword ptr [rdi + 4], esi ; ret
0x000000000065d2ef : cmp eax, edx ; ja 0x65d305 ; add rsp, 8 ; ret
0x000000000065d34f : cmp eax, edx ; ja 0x65d365 ; add rsp, 8 ; ret
0x0000000000506ad0 : cmp eax, edx ; jb 0x506ae9 ; sub eax, edx ; add eax, 1 ; ret
0x00000000005081f0 : cmp eax, edx ; jb 0x508209 ; sub eax, edx ; add eax, 1 ; ret
0x0000000000554d10 : cmp eax, edx ; jb 0x554d29 ; sub eax, edx ; add eax, 1 ; ret
0x0000000000556570 : cmp eax, edx ; jb 0x556589 ; sub eax, edx ; add eax, 1 ; ret
0x0000000000625a40 : cmp eax, edx ; jb 0x625a59 ; sub eax, edx ; add eax, 1 ; ret
0x0000000000627280 : cmp eax, edx ; jb 0x627299 ; sub eax, edx ; add eax, 1 ; ret
0x00000000006a096c : cmp eax, edx ; jb 0x6a097b ; mov rax, rdi ; ret
0x0000000000509494 : cmp eax, edx ; je 0x5094ce ; add rsp, 8 ; ret
0x000000000060c3f6 : cmp eax, edx ; je 0x60c407 ; sub rax, 1 ; ret
0x0000000000628504 : cmp eax, edx ; je 0x62853e ; add rsp, 8 ; ret
0x000000000068f9c2 : cmp eax, edx ; je 0x68f9d4 ; ret
0x0000000000690872 : cmp eax, edx ; je 0x690883 ; add rsp, 8 ; ret
0x0000000000690e42 : cmp eax, edx ; je 0x690e53 ; add rsp, 8 ; ret
0x0000000000691973 : cmp eax, edx ; je 0x691984 ; add rsp, 8 ; ret
0x000000000069281d : cmp eax, edx ; je 0x692839 ; add rsp, 8 ; ret
0x00000000006d0afd : cmp eax, edx ; je 0x6d0b19 ; add rsp, 8 ; ret
0x000000000053ecbb : cmp eax, edx ; jne 0x53ecac ; ret
0x000000000066bd18 : cmp eax, edx ; jne 0x66bd04 ; ret
0x000000000066bfb0 : cmp eax, edx ; jne 0x66bf9c ; ret
0x0000000000673fa8 : cmp eax, edx ; jne 0x673f94 ; ret
0x0000000000673fd8 : cmp eax, edx ; jne 0x673fc4 ; ret
0x00000000006a07e5 : cmp eax, edx ; jne 0x6a07dc ; ret
0x00000000006bc52c : cmp eax, edx ; jne 0x6bc51c ; ret
0x00000000006c6d50 : cmp eax, edx ; jne 0x6c6d44 ; ret
0x00000000006cb745 : cmp eax, edx ; jne 0x6cb730 ; add rsp, 8 ; ret
0x00000000006cba85 : cmp eax, edx ; jne 0x6cba7c ; ret
0x00000000007a3ea9 : cmp eax, esi ; call qword ptr [rdx]
0x00000000006a1922 : cmp eax, esi ; jne 0x6a1914 ; ret
0x00000000006a19df : cmp eax, esi ; jne 0x6a19d4 ; ret
0x00000000006a1a22 : cmp eax, esi ; jne 0x6a1a14 ; ret
0x00000000006a1a62 : cmp eax, esi ; jne 0x6a1a54 ; ret
0x0000000000406703 : cmp eax, esp ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000053500a : cmp ebp, dword ptr [rdi] ; xor eax, eax ; call 0x681301
0x0000000000518f71 : cmp ebp, dword ptr [rdx + 0x17] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000054d5db : cmp ebp, eax ; jmp qword ptr [rbx]
0x0000000000573ab1 : cmp ebp, eax ; jne 0x573aa0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000057e976 : cmp ebp, eax ; jne 0x57e960 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000007aba21 : cmp ebp, ebp ; call qword ptr [rcx]
0x00000000007aba39 : cmp ebp, ebp ; jmp qword ptr [rcx]
0x000000000073ae15 : cmp ebp, ebx ; call qword ptr [rax]
0x00000000007a4d21 : cmp ebp, ebx ; call qword ptr [rbx]
0x00000000007a4cb9 : cmp ebp, ebx ; jmp qword ptr [rcx]
0x0000000000740395 : cmp ebp, esp ; call qword ptr [rax]
0x000000000057a1b4 : cmp ebx, 0x8948ffff ; ret
0x000000000047ed82 : cmp ebx, dword ptr [rax] ; call rax
0x000000000042ed32 : cmp ebx, dword ptr [rbp] ; call rax
0x000000000051da00 : cmp ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000005aae01 : cmp ebx, dword ptr [rcx - 0x76b7ffee] ; ret
0x000000000046ed9c : cmp ebx, dword ptr [rcx] ; call rax
0x0000000000494b91 : cmp ebx, dword ptr [rdx - 0x76b7ffde] ; ret 0x8948
0x0000000000620aa1 : cmp ebx, dword ptr [rsi] ; add bh, bh ; ror cl, 1 ; ret
0x000000000041ecf6 : cmp ebx, dword ptr [rsi] ; call rax
0x00000000004aa35f : cmp ebx, eax ; cmovge eax, ebx ; mov edi, eax ; call 0x4f6dc9
0x00000000006774aa : cmp ebx, eax ; jle 0x6774b5 ; pop rbx ; ret
0x000000000068e756 : cmp ebx, eax ; setg al ; pop rbx ; ret
0x000000000077bd69 : cmp ebx, ebp ; call qword ptr [rax]
0x000000000077bd51 : cmp ebx, ebp ; jmp qword ptr [rax]
0x000000000073a395 : cmp ebx, ebx ; jmp qword ptr [rax]
0x000000000052697d : cmp ebx, ecx ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x00000000007ce2d9 : cmp ebx, edi ; or al, 0 ; ret 0x1410
0x000000000073763d : cmp ebx, edx ; call qword ptr [rax]
0x00000000004bb918 : cmp ebx, esp ; je 0x4bb929 ; add ebx, 1 ; jmp 0x4bb8ec
0x00000000004bba3c : cmp ebx, esp ; je 0x4bba4d ; sub ebx, 1 ; jmp 0x4bba10
0x00000000005e92aa : cmp ebx, esp ; je 0x5e92bb ; add ebx, 1 ; jmp 0x5e9286
0x000000000073a715 : cmp ebx, esp ; jmp qword ptr [rax]
0x00000000006aa7ef : cmp ebx, esp ; jne 0x6aa7e8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004bb917 : cmp ebx, r12d ; je 0x4bb92a ; add ebx, 1 ; jmp 0x4bb8ed
0x00000000004bba3b : cmp ebx, r12d ; je 0x4bba4e ; sub ebx, 1 ; jmp 0x4bba11
0x00000000005e92a9 : cmp ebx, r12d ; je 0x5e92bc ; add ebx, 1 ; jmp 0x5e9287
0x0000000000677f4a : cmp ecx, dword ptr [rax + 1] ; ret
0x000000000068758a : cmp ecx, dword ptr [rax - 0x77] ; call 0xffffffffd167a20d
0x000000000040d53d : cmp ecx, dword ptr [rax - 0x77] ; ret
0x0000000000637f4b : cmp ecx, dword ptr [rax - 0x77] ; ret 0x16e9
0x0000000000534c20 : cmp ecx, dword ptr [rax - 0x77] ; ret 0x1e9
0x0000000000534aff : cmp ecx, dword ptr [rax - 0x77] ; ret 0x22e9
0x00000000006103bf : cmp ecx, dword ptr [rax - 0x77] ; ret 0x3ae9
0x0000000000632c38 : cmp ecx, dword ptr [rax - 0x77] ; ret 0x4de9
0x0000000000517538 : cmp ecx, dword ptr [rax - 0x77] ; ret 0x5ae9
0x0000000000632c23 : cmp ecx, dword ptr [rax - 0x77] ; ret 0x62e9
0x00000000005f9e10 : cmp ecx, dword ptr [rax - 0x77] ; ret 0x70e9
0x0000000000566548 : cmp ecx, dword ptr [rax - 0x77] ; ret 0x7ae9
0x00000000005f9dff : cmp ecx, dword ptr [rax - 0x77] ; ret 0x84eb
0x000000000056f238 : cmp ecx, dword ptr [rax - 0x77] ; ret 0x8de9
0x0000000000517503 : cmp ecx, dword ptr [rax - 0x77] ; ret 0x8fe9
0x000000000056d7a1 : cmp ecx, dword ptr [rax - 0x77] ; ret 0x90e9
0x000000000056ec08 : cmp ecx, dword ptr [rax - 0x77] ; ret 0x91e9
0x00000000006774f8 : cmp ecx, dword ptr [rax - 0x77] ; ret 0x93eb
0x000000000056f223 : cmp ecx, dword ptr [rax - 0x77] ; ret 0xa2e9
0x00000000006774e7 : cmp ecx, dword ptr [rax - 0x77] ; ret 0xa4eb
0x000000000056ebf3 : cmp ecx, dword ptr [rax - 0x77] ; ret 0xa6e9
0x0000000000610440 : cmp ecx, dword ptr [rax - 0x77] ; ret 0xb9e9
0x0000000000566007 : cmp ecx, dword ptr [rax - 0x77] ; ret 0xbbe9
0x000000000056d76f : cmp ecx, dword ptr [rax - 0x77] ; ret 0xc2e9
0x0000000000630458 : cmp ecx, dword ptr [rax - 0x77] ; ret 0xe4e9
0x0000000000637f72 : cmp ecx, dword ptr [rax - 0x77] ; ret 0xefe9
0x0000000000630447 : cmp ecx, dword ptr [rax - 0x77] ; ret 0xf5e9
0x000000000066b770 : cmp ecx, dword ptr [rax - 0x77] ; retf 0x12eb
0x00000000006c565a : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000068dbda : cmp ecx, dword ptr [rbp - 0x7b] ; in al, 0x48 ; mov eax, ebp ; jne 0x68dc08 ; call rax
0x000000000052ecea : cmp ecx, dword ptr [rbp] ; jmp rax
0x00000000005ebf90 : cmp ecx, dword ptr [rcx] ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000005ebf7c : cmp ecx, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000059bde2 : cmp ecx, dword ptr [rdi] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000005caa90 : cmp ecx, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007dc663 : cmp ecx, dword ptr [rdi] ; sbb byte ptr [rbx], 6 ; ret 0x3b
0x000000000055ed65 : cmp ecx, dword ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000007c355c : cmp ecx, dword ptr [rip + 0x190] ; ret
0x000000000066bcc1 : cmp ecx, eax ; jne 0x66bc5c ; ret
0x0000000000678b2e : cmp ecx, eax ; jne 0x678b28 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000067e8ca : cmp ecx, eax ; jne 0x67e8c1 ; mov eax, 1 ; ret
0x00000000006d08c9 : cmp ecx, eax ; jne 0x6d08b8 ; add rsp, 8 ; ret
0x000000000069f824 : cmp ecx, eax ; mov byte ptr [rdx + rsi], r9b ; jne 0x69f819 ; pop rbx ; ret
0x000000000069fe53 : cmp ecx, eax ; mov dword ptr [rdx + rsi*4], r9d ; jne 0x69fe49 ; pop rbx ; ret
0x000000000074f761 : cmp ecx, ebp ; call rsp
0x000000000050920a : cmp ecx, ecx ; je 0x509239 ; ret
0x000000000062827a : cmp ecx, ecx ; je 0x6282a9 ; ret
0x0000000000754961 : cmp ecx, edi ; call rsp
0x000000000054e8d1 : cmp ecx, edi ; sete al ; ret
0x0000000000677204 : cmp ecx, edx ; jge 0x6772e0 ; ret
0x0000000000689553 : cmp ecx, edx ; jge 0x689571 ; xor eax, eax ; ret
0x00000000006a981b : cmp ecx, edx ; mov byte ptr [rsi + rax], 0x2a ; jne 0x6a9808 ; ret
0x00000000006a981a : cmp ecx, edx ; mov byte ptr [rsi + rax], 0x2a ; jne 0x6a9809 ; ret
0x00000000005092a6 : cmp ecx, edx ; sete al ; add rsp, 8 ; ret
0x000000000053addd : cmp ecx, edx ; sete al ; ret
0x0000000000676e68 : cmp ecx, esi ; ja 0x676eb5 ; add rsp, 8 ; ret
0x0000000000595ca9 : cmp ecx, esp ; add byte ptr [rax - 0x7d], r9b ; ret
0x000000000073db0d : cmp ecx, esp ; call rax
0x000000000073db1d : cmp ecx, esp ; jmp qword ptr [rax]
0x0000000000414254 : cmp edi, 0xff ; leave ; ret
0x0000000000678414 : cmp edi, 0xff ; setle al ; ret
0x00000000006ce8b2 : cmp edi, 2 ; sete al ; ret
0x00000000006c887d : cmp edi, 3 ; jbe 0x6c8a99 ; ret
0x00000000006b3b29 : cmp edi, dword ptr [rax + 0x44c] ; jg 0x6b3b3a ; ret
0x00000000005c4327 : cmp edi, dword ptr [rax - 0x76b7fff5] ; ret
0x00000000006a82d2 : cmp edi, dword ptr [rax] ; jne 0x6a82cc ; ret
0x00000000006a8482 : cmp edi, dword ptr [rax] ; jne 0x6a8481 ; mov eax, 1 ; ret
0x00000000006a85d2 : cmp edi, dword ptr [rax] ; jne 0x6a85d0 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000006a8b02 : cmp edi, dword ptr [rax] ; jne 0x6a8b00 ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000544bf5 : cmp edi, dword ptr [rdx + 0x1c] ; setl al ; ret
0x000000000052afd6 : cmp edi, dword ptr [rdx + 0x20] ; setl al ; ret
0x0000000000544e70 : cmp edi, dword ptr [rsi + 0x1c] ; setl al ; ret
0x000000000052b1e1 : cmp edi, dword ptr [rsi + 0x20] ; setl al ; ret
0x0000000000677175 : cmp edi, eax ; ja 0x6771ab ; add rsp, 8 ; ret
0x0000000000680294 : cmp edi, eax ; jg 0x68026f ; add rsp, 8 ; ret
0x0000000000687457 : cmp edi, eax ; jne 0x68744c ; ret
0x0000000000688566 : cmp edi, eax ; jne 0x688544 ; ret
0x00000000006ce5cc : cmp edi, eax ; jne 0x6ce5c5 ; ret
0x0000000000676f5c : cmp edi, eax ; setg cl ; cmp cl, dl ; jne 0x676f6f ; ret
0x000000000067703e : cmp edi, eax ; setl cl ; cmp cl, dl ; jne 0x677051 ; ret
0x00000000007b3e59 : cmp edi, ebp ; call rsi
0x00000000006acac5 : cmp edi, ebp ; dec dword ptr [rax - 0x77] ; ret
0x00000000007451dd : cmp edi, ebp ; dec eax ; ret
0x000000000058276b : cmp edi, ecx ; jne 0x582741 ; mov eax, 1 ; ret
0x00000000005fa700 : cmp edi, ecx ; jne 0x5fa6d7 ; add rsp, 8 ; ret
0x00000000006a0e80 : cmp edi, ecx ; jne 0x6a0e59 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000687980 : cmp edi, edx ; jne 0x687974 ; ret
0x00000000006a1cc2 : cmp edi, edx ; jne 0x6a1c94 ; ret
0x00000000006a1d2f : cmp edi, edx ; jne 0x6a1cf4 ; ret
0x00000000006a1e12 : cmp edi, edx ; jne 0x6a1de4 ; ret
0x00000000006bf4e9 : cmp edi, esi ; cmova eax, edx ; ret
0x000000000051b900 : cmp edi, esi ; jl 0x51b8e4 ; ret
0x0000000000586550 : cmp edi, esi ; jl 0x586534 ; ret
0x0000000000586dbc : cmp edi, esi ; jl 0x586da4 ; ret
0x000000000052b111 : cmp edi, esi ; sete al ; ret
0x0000000000677131 : cmp edi, esi ; setg al ; ret
0x0000000000677141 : cmp edi, esi ; setge al ; ret
0x0000000000677111 : cmp edi, esi ; setl al ; ret
0x0000000000677121 : cmp edi, esi ; setle al ; ret
0x00000000006c9df4 : cmp edx, 0x10 ; jne 0x6c9dd9 ; ret
0x0000000000540f1b : cmp edx, 0x15ff0017 ; ret
0x00000000006a1c41 : cmp edx, 0x16 ; ja 0x6a1c58 ; lea eax, dword ptr [rdi + 0x20] ; ret
0x00000000006a1d91 : cmp edx, 0x16 ; ja 0x6a1da8 ; lea eax, dword ptr [rdi - 0x20] ; ret
0x00000000005fad81 : cmp edx, 0x1d ; jne 0x5fad41 ; add rsp, 8 ; ret
0x00000000006ce149 : cmp edx, 0x240c83 ; je 0x6ce161 ; ret
0x0000000000653675 : cmp edx, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b7f5f : cmp edx, 0xff ; leave ; ret
0x0000000000519f7e : cmp edx, 1 ; jle 0x519f98 ; sub edx, 1 ; ret
0x000000000056fcde : cmp edx, 1 ; jle 0x56fcf8 ; sub edx, 1 ; ret
0x000000000058531e : cmp edx, 1 ; jle 0x585338 ; sub edx, 1 ; ret
0x000000000058541e : cmp edx, 1 ; jle 0x585438 ; sub edx, 1 ; ret
0x000000000059c4ae : cmp edx, 1 ; jle 0x59c4c8 ; sub edx, 1 ; ret
0x00000000004aecfc : cmp edx, dword ptr [rbp] ; call rax
0x000000000058aa52 : cmp edx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000059a413 : cmp edx, dword ptr [rdi + 0xe] ; add bl, ch ; xchg byte ptr [rax - 0x77], cl ; ret
0x0000000000517f53 : cmp edx, dword ptr [rdi + rdx*8 + 8] ; setg al ; ret
0x00000000004d6927 : cmp edx, dword ptr [rdx - 0x76b7ffe6] ; ret
0x00000000005fd371 : cmp edx, dword ptr [rip - 0x76b3fff4] ; out -0x18, eax ; ret
0x0000000000544c75 : cmp edx, dword ptr [rsi + 0x1c] ; setl al ; ret
0x000000000052b056 : cmp edx, dword ptr [rsi + 0x20] ; setl al ; ret
0x000000000051d7d3 : cmp edx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000759041 : cmp edx, eax ; call rsp
0x000000000053adbc : cmp edx, eax ; je 0x53ae06 ; xor eax, eax ; ret
0x00000000005fac71 : cmp edx, eax ; jle 0x5fac2d ; add rsp, 0x38 ; ret
0x00000000006bc4fa : cmp edx, eax ; jne 0x6bc4f4 ; ret
0x00000000006c69da : cmp edx, eax ; jne 0x6c69a4 ; ret
0x0000000000507127 : cmp edx, eax ; sete al ; ret
0x000000000068808f : cmp edx, ebx ; jne 0x68804f ; pop rbx ; pop r14 ; ret
0x000000000075bdf9 : cmp edx, ecx ; call rsp
0x00000000005f9729 : cmp edx, ecx ; ja 0x5f973c ; add eax, esi ; mov dword ptr [rdi + 4], eax ; ret
0x000000000066714a : cmp edx, ecx ; ja 0x66716a ; add rsp, 8 ; ret
0x00000000006c6a65 : cmp edx, ecx ; jne 0x6c6a34 ; ret
0x00000000006a0e9e : cmp edx, ecx ; setbe al ; ret
0x0000000000688116 : cmp edx, edi ; jne 0x6880fc ; ret
0x00000000006d1486 : cmp edx, edi ; mov byte ptr [r8 + rax], 0x20 ; jne 0x6d1479 ; ret
0x00000000006a977b : cmp edx, edi ; mov byte ptr [rcx + rax], 0x20 ; jne 0x6a9768 ; ret
0x0000000000736e15 : cmp edx, edx ; call qword ptr [rax]
0x0000000000736e05 : cmp edx, edx ; call rax
0x0000000000736dc5 : cmp edx, edx ; dec eax ; add r8b, byte ptr [r8] ; retf -0x2dc7
0x0000000000689b52 : cmp edx, esi ; setle al ; ret
0x000000000073e69d : cmp edx, esp ; jmp qword ptr [rax]
0x00000000006a0e9d : cmp edx, r9d ; setbe al ; ret
0x00000000006609b2 : cmp esi, 0x18 ; je 0x6609e8 ; add rax, rcx ; ret
0x00000000006c0336 : cmp esi, 0xff ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005166cf : cmp esi, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x0000000000571990 : cmp esi, 1 ; setne al ; ret
0x00000000006bed04 : cmp esi, dword ptr [rax + rax] ; jmp rax
0x0000000000594a13 : cmp esi, dword ptr [rcx + 0x15ff000e] ; ret
0x000000000068f921 : cmp esi, dword ptr [rcx + rax*8 + 0x48] ; je 0x68f938 ; xor eax, eax ; ret
0x000000000053ed40 : cmp esi, dword ptr [rdi + 0x10] ; jg 0x53ed4b ; ret
0x000000000068f054 : cmp esi, dword ptr [rdi + rdx*8 + 0x48] ; sete al ; ret
0x0000000000509001 : cmp esi, dword ptr [rdi - 0x76b7ffe4] ; ret
0x0000000000522acd : cmp esi, dword ptr [rdx + 0x10] ; sete al ; ret
0x000000000052d585 : cmp esi, dword ptr [rip - 0x76b7ffeb] ; ret
0x00000000006d0920 : cmp esi, eax ; jg 0x6d0938 ; add rsp, 8 ; ret
0x000000000056fe82 : cmp esi, eax ; jge 0x56fe99 ; sub eax, esi ; mov dword ptr [rdi + 0x10], eax ; ret
0x0000000000586202 : cmp esi, eax ; jge 0x586219 ; sub eax, esi ; mov dword ptr [rdi + 0x10], eax ; ret
0x000000000054c2d3 : cmp esi, eax ; jl 0x54c2e8 ; test eax, eax ; jne 0x54c348 ; ret
0x000000000054c353 : cmp esi, eax ; jl 0x54c368 ; test eax, eax ; jne 0x54c3c8 ; ret
0x000000000059e05f : cmp esi, eax ; jl 0x59e035 ; pop rbx ; ret
0x00000000005c67db : cmp esi, eax ; jne 0x5c67ef ; mov rax, rsi ; ret
0x00000000005f8664 : cmp esi, eax ; jne 0x5f8651 ; mov eax, 1 ; ret
0x00000000006cda9c : cmp esi, eax ; jne 0x6cda95 ; ret
0x0000000000676fcc : cmp esi, eax ; setg cl ; cmp cl, dl ; jne 0x676fdf ; ret
0x0000000000746505 : cmp esi, ebx ; call qword ptr [rax]
0x0000000000746545 : cmp esi, ebx ; call rax
0x00000000007464f5 : cmp esi, ebx ; jmp rax
0x00000000006a1930 : cmp esi, ecx ; je 0x6a1946 ; xor eax, eax ; ret
0x00000000006682f8 : cmp esi, ecx ; jne 0x6682e5 ; pop rbx ; ret
0x00000000006a0a04 : cmp esi, ecx ; jne 0x6a0a00 ; add rsp, 8 ; ret
0x0000000000522b3a : cmp esi, ecx ; sete al ; ret
0x000000000066ccfa : cmp esi, edi ; jne 0x66ccf4 ; ret
0x000000000068818f : cmp esi, edi ; jne 0x688174 ; ret
0x00000000006ac170 : cmp esi, edx ; setb al ; ret
0x00000000006bf2b5 : cmp esp, 0x1e88348 ; jne 0x6bf2b8 ; ret
0x0000000000643eb9 : cmp esp, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x00000000007e55c0 : cmp esp, dword ptr [rax + r8*2 + 0x419f06] ; ret
0x00000000007e55c1 : cmp esp, dword ptr [rax + rax*2 + 0x419f06] ; ret
0x000000000063c011 : cmp esp, dword ptr [rcx - 0x76b70018] ; ret
0x00000000004aaa20 : cmp esp, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x2c7
0x00000000006206a1 : cmp esp, dword ptr [rdx] ; add bh, bh ; ror cl, 1 ; ret
0x000000000040994d : cmp esp, dword ptr [rsi] ; add byte ptr [rdi], cl ; mov bh, 5 ; retf
0x0000000000631782 : cmp esp, eax ; jg 0x6317a4 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000631f49 : cmp esp, eax ; setg al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000054c330 : cmp esp, ebp ; jne 0x54c308 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000054c3b0 : cmp esp, ebp ; jne 0x54c388 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005d007e : cmp esp, ebx ; dec dword ptr [rax + 0x63] ; ret
0x000000000064410a : cmp esp, ebx ; dec dword ptr [rax - 0x77] ; ret
0x000000000068151b : cmp esp, ebx ; jne 0x68150a ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000740d4d : cmp esp, esi ; call qword ptr [rax]
0x0000000000740d45 : cmp esp, esi ; jmp rax
0x000000000054e80d : cmp qword ptr [r9 + 0x10], 0 ; je 0x54e829 ; xor eax, eax ; ret
0x0000000000522a85 : cmp qword ptr [r9], 0 ; je 0x522a98 ; xor eax, eax ; ret
0x00000000005286b5 : cmp qword ptr [r9], 0 ; je 0x5286c8 ; xor eax, eax ; ret
0x0000000000544085 : cmp qword ptr [r9], 0 ; je 0x544098 ; xor eax, eax ; ret
0x0000000000567975 : cmp qword ptr [r9], 0 ; je 0x567988 ; xor eax, eax ; ret
0x00000000005916c5 : cmp qword ptr [r9], 0 ; je 0x5916d8 ; xor eax, eax ; ret
0x00000000005a9fb5 : cmp qword ptr [r9], 0 ; je 0x5a9fc8 ; xor eax, eax ; ret
0x00000000005632a1 : cmp qword ptr [rbx + 0x10], 0 ; setne al ; pop rbx ; ret
0x00000000005632b0 : cmp qword ptr [rdi + 0x10], 0 ; je 0x5632c7 ; ret
0x00000000006a4320 : cmp qword ptr [rdi + 0x10], 0 ; je 0x6a4337 ; ret
0x00000000006a32e0 : cmp qword ptr [rdi + 0x10], 0 ; setne al ; ret
0x000000000065ceb4 : cmp qword ptr [rdi + 0x18], 9 ; sete al ; ret
0x00000000005429f1 : cmp qword ptr [rdi + 0x18], rax ; sete al ; ret
0x00000000006a7e00 : cmp qword ptr [rdi + 0x28], 0 ; je 0x6a7e17 ; ret
0x000000000066d020 : cmp qword ptr [rdi + 0x28], 0 ; setne al ; ret
0x00000000005018d0 : cmp qword ptr [rdi + 0x38], 0 ; je 0x5018e7 ; ret
0x00000000006aaa86 : cmp qword ptr [rdi + 0x38], rax ; sete al ; ret
0x00000000006aaa7a : cmp qword ptr [rdi + 0x50], rax ; sete al ; ret
0x0000000000510010 : cmp qword ptr [rdi + 8], 0 ; je 0x510027 ; ret
0x000000000053ad40 : cmp qword ptr [rdi + 8], 0 ; sete al ; ret
0x000000000065cc30 : cmp qword ptr [rdi + 8], 0 ; setne al ; ret
0x0000000000519674 : cmp qword ptr [rdi + 8], rax ; je 0x519688 ; xor eax, eax ; ret
0x00000000005197f4 : cmp qword ptr [rdi + 8], rax ; je 0x519808 ; xor eax, eax ; ret
0x000000000053fc94 : cmp qword ptr [rdi + 8], rax ; je 0x53fca8 ; xor eax, eax ; ret
0x0000000000563b34 : cmp qword ptr [rdi + 8], rax ; je 0x563b48 ; xor eax, eax ; ret
0x0000000000584ea4 : cmp qword ptr [rdi + 8], rax ; je 0x584eb8 ; xor eax, eax ; ret
0x00000000005a7464 : cmp qword ptr [rdi + 8], rax ; je 0x5a7478 ; xor eax, eax ; ret
0x00000000005218f8 : cmp qword ptr [rdi + 8], rax ; sete al ; ret
0x0000000000549ed0 : cmp qword ptr [rdi + rax], rdx ; setg al ; ret
0x000000000067e8f0 : cmp qword ptr [rdi], 0 ; sete al ; ret
0x00000000006089d3 : cmp qword ptr [rdi], rax ; je 0x6089e7 ; xor eax, eax ; ret
0x00000000006cba05 : cmp qword ptr [rdi], rsi ; jne 0x6cba01 ; add rsp, 8 ; ret
0x000000000052b085 : cmp qword ptr [rdx + 0x20], rdi ; setl al ; ret
0x00000000006cdd0f : cmp qword ptr [rdx - 8], 0 ; jne 0x6cdd10 ; ret
0x000000000052b1d0 : cmp qword ptr [rsi + 0x20], rdi ; setl al ; ret
0x000000000052afa5 : cmp qword ptr [rsi + 0x20], rdx ; setl al ; ret
0x00000000006d49f3 : cmp qword ptr [rsi + 8], rcx ; cmova eax, edx ; ret
0x000000000068808e : cmp r10, r11 ; jne 0x688050 ; pop rbx ; pop r14 ; ret
0x00000000005fac70 : cmp r10d, r8d ; jle 0x5fac2e ; add rsp, 0x38 ; ret
0x0000000000631781 : cmp r12, rax ; jg 0x6317a5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000068151a : cmp r12, rbx ; jne 0x68150b ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000054c32f : cmp r12d, ebp ; jne 0x54c309 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000054c3af : cmp r12d, ebp ; jne 0x54c389 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000509493 : cmp r8, r10 ; je 0x5094cf ; add rsp, 8 ; ret
0x0000000000628503 : cmp r8, r10 ; je 0x62853f ; add rsp, 8 ; ret
0x00000000006c7c53 : cmp r8d, 2 ; setbe al ; ret
0x000000000054e8d0 : cmp r9, rdi ; sete al ; ret
0x00000000004ca882 : cmp rax, -0x76b7ffe1 ; ret
0x000000000068ed53 : cmp rax, 0xa09900 ; jne 0x68ed50 ; ret
0x000000000068fde3 : cmp rax, 0xa09900 ; jne 0x68fde0 ; ret
0x00000000006a8513 : cmp rax, 0xa0a2c0 ; jne 0x6a8510 ; ret
0x00000000006a8b53 : cmp rax, 0xa0a2c0 ; jne 0x6a8b50 ; ret
0x00000000006a48e9 : cmp rax, 0xe8 ; jne 0x6a48d6 ; ret
0x00000000006a493d : cmp rax, 0xe8 ; jne 0x6a4926 ; ret
0x00000000006a53b1 : cmp rax, 0xe8 ; jne 0x6a539e ; ret
0x00000000006a540d : cmp rax, 0xe8 ; jne 0x6a53f6 ; ret
0x00000000006ccc94 : cmp rax, 0xfe ; je 0x6ccca6 ; ret
0x00000000006ccd24 : cmp rax, 0xfe ; je 0x6ccd36 ; ret
0x000000000068e6dd : cmp rax, 0xff ; je 0x68e6ef ; pop rbx ; ret
0x00000000006ccb54 : cmp rax, 0xff ; je 0x6ccb66 ; ret
0x00000000006a1b04 : cmp rax, 4 ; jne 0x6a1af8 ; xor al, al ; ret
0x0000000000685fc3 : cmp rax, qword ptr [rbx + 8] ; jne 0x685fdc ; pop rbx ; ret
0x00000000005070f4 : cmp rax, qword ptr [rsi + 8] ; je 0x507108 ; xor eax, eax ; ret
0x0000000000555374 : cmp rax, qword ptr [rsi + 8] ; je 0x555388 ; xor eax, eax ; ret
0x0000000000626054 : cmp rax, qword ptr [rsi + 8] ; je 0x626068 ; xor eax, eax ; ret
0x00000000006c5790 : cmp rax, r8 ; jne 0x6c5785 ; ret
0x000000000068d87e : cmp rax, rcx ; jne 0x68d879 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000065d2ee : cmp rax, rdx ; ja 0x65d306 ; add rsp, 8 ; ret
0x000000000065d34e : cmp rax, rdx ; ja 0x65d366 ; add rsp, 8 ; ret
0x00000000006a096b : cmp rax, rdx ; jb 0x6a097c ; mov rax, rdi ; ret
0x000000000060c3f5 : cmp rax, rdx ; je 0x60c408 ; sub rax, 1 ; ret
0x000000000068f9c1 : cmp rax, rdx ; je 0x68f9d5 ; ret
0x000000000053ecba : cmp rax, rdx ; jne 0x53ecad ; ret
0x000000000066bd17 : cmp rax, rdx ; jne 0x66bd05 ; ret
0x000000000066bfaf : cmp rax, rdx ; jne 0x66bf9d ; ret
0x0000000000673fa7 : cmp rax, rdx ; jne 0x673f95 ; ret
0x0000000000673fd7 : cmp rax, rdx ; jne 0x673fc5 ; ret
0x00000000006a07e4 : cmp rax, rdx ; jne 0x6a07dd ; ret
0x00000000006bc52b : cmp rax, rdx ; jne 0x6bc51d ; ret
0x00000000006c6d4f : cmp rax, rdx ; jne 0x6c6d45 ; ret
0x00000000006cb744 : cmp rax, rdx ; jne 0x6cb731 ; add rsp, 8 ; ret
0x00000000006cba84 : cmp rax, rdx ; jne 0x6cba7d ; ret
0x00000000006a1921 : cmp rax, rsi ; jne 0x6a1915 ; ret
0x00000000006a19de : cmp rax, rsi ; jne 0x6a19d5 ; ret
0x00000000006a1a21 : cmp rax, rsi ; jne 0x6a1a15 ; ret
0x00000000006a1a61 : cmp rax, rsi ; jne 0x6a1a55 ; ret
0x0000000000573ab0 : cmp rbp, rax ; jne 0x573aa1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000057e975 : cmp rbp, rax ; jne 0x57e961 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046ed9b : cmp rbx, qword ptr [r9] ; call rax
0x00000000006aa7ee : cmp rbx, r12 ; jne 0x6aa7e9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006774a9 : cmp rbx, rax ; jle 0x6774b6 ; pop rbx ; ret
0x000000000068e755 : cmp rbx, rax ; setg al ; pop rbx ; ret
0x0000000000678b2d : cmp rcx, r8 ; jne 0x678b29 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000509209 : cmp rcx, r9 ; je 0x50923a ; ret
0x0000000000628279 : cmp rcx, r9 ; je 0x6282aa ; ret
0x000000000066bcc0 : cmp rcx, rax ; jne 0x66bc5d ; ret
0x00000000006d08c8 : cmp rcx, rax ; jne 0x6d08b9 ; add rsp, 8 ; ret
0x0000000000677203 : cmp rcx, rdx ; jge 0x6772e1 ; ret
0x000000000053addc : cmp rcx, rdx ; sete al ; ret
0x0000000000676e67 : cmp rcx, rsi ; ja 0x676eb6 ; add rsp, 8 ; ret
0x00000000006a82d1 : cmp rdi, qword ptr [rax] ; jne 0x6a82cd ; ret
0x00000000006a85d1 : cmp rdi, qword ptr [rax] ; jne 0x6a85d1 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000006a8b01 : cmp rdi, qword ptr [rax] ; jne 0x6a8b01 ; mov rax, qword ptr [rax + 8] ; ret
0x000000000052afd5 : cmp rdi, qword ptr [rdx + 0x20] ; setl al ; ret
0x000000000052b1e0 : cmp rdi, qword ptr [rsi + 0x20] ; setl al ; ret
0x0000000000688565 : cmp rdi, r8 ; jne 0x688545 ; ret
0x0000000000677174 : cmp rdi, rax ; ja 0x6771ac ; add rsp, 8 ; ret
0x0000000000687456 : cmp rdi, rax ; jne 0x68744d ; ret
0x00000000006ce5cb : cmp rdi, rax ; jne 0x6ce5c6 ; ret
0x00000000005fa6ff : cmp rdi, rcx ; jne 0x5fa6d8 ; add rsp, 8 ; ret
0x000000000068797f : cmp rdi, rdx ; jne 0x687975 ; ret
0x00000000006a1cc1 : cmp rdi, rdx ; jne 0x6a1c95 ; ret
0x00000000006a1d2e : cmp rdi, rdx ; jne 0x6a1cf5 ; ret
0x00000000006a1e11 : cmp rdi, rdx ; jne 0x6a1de5 ; ret
0x00000000006bf4e8 : cmp rdi, rsi ; cmova eax, edx ; ret
0x000000000052b110 : cmp rdi, rsi ; sete al ; ret
0x0000000000677130 : cmp rdi, rsi ; setg al ; ret
0x0000000000677140 : cmp rdi, rsi ; setge al ; ret
0x0000000000677110 : cmp rdi, rsi ; setl al ; ret
0x0000000000677120 : cmp rdi, rsi ; setle al ; ret
0x00000000006c9df3 : cmp rdx, 0x10 ; jne 0x6c9dda ; ret
0x000000000052b055 : cmp rdx, qword ptr [rsi + 0x20] ; setl al ; ret
0x00000000006c69d9 : cmp rdx, r8 ; jne 0x6c69a5 ; ret
0x000000000053adbb : cmp rdx, rax ; je 0x53ae07 ; xor eax, eax ; ret
0x0000000000667149 : cmp rdx, rcx ; ja 0x66716b ; add rsp, 8 ; ret
0x00000000006c6a64 : cmp rdx, rcx ; jne 0x6c6a35 ; ret
0x0000000000688115 : cmp rdx, rdi ; jne 0x6880fd ; ret
0x000000000068f920 : cmp rsi, qword ptr [rcx + rax*8 + 0x48] ; je 0x68f939 ; xor eax, eax ; ret
0x000000000068f053 : cmp rsi, qword ptr [rdi + rdx*8 + 0x48] ; sete al ; ret
0x0000000000522acc : cmp rsi, qword ptr [rdx + 0x10] ; sete al ; ret
0x0000000000522b39 : cmp rsi, r9 ; sete al ; ret
0x00000000005c67da : cmp rsi, rax ; jne 0x5c67f0 ; mov rax, rsi ; ret
0x00000000006cda9b : cmp rsi, rax ; jne 0x6cda96 ; ret
0x00000000006682f7 : cmp rsi, rcx ; jne 0x6682e6 ; pop rbx ; ret
0x00000000006a0a03 : cmp rsi, rcx ; jne 0x6a0a01 ; add rsp, 8 ; ret
0x000000000066ccf9 : cmp rsi, rdi ; jne 0x66ccf5 ; ret
0x000000000068818e : cmp rsi, rdi ; jne 0x688175 ; ret
0x00000000006ac16f : cmp rsi, rdx ; setb al ; ret
0x00000000006aaac8 : cmp sil, 3 ; jbe 0x6aaad6 ; ret
0x00000000006c6cd2 : cmp sil, dil ; je 0x6c6ce5 ; ret
0x000000000066b7b7 : cmp word ptr [rax], ax ; ret
0x000000000061823a : cmpsb byte ptr [rsi], byte ptr [rdi] ; add bh, bh ; ror cl, 1 ; ret
0x00000000004108a8 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000044c119 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [r8 - 0x77], r9b ; ret 0xbe
0x0000000000508228 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000040c758 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000061e0a3 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr ds:[rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4847
0x00000000005c64df : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; fmul dword ptr [rax + 0x63] ; retf -0x7cb8
0x0000000000734ba9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; ret 0xce7f
0x00000000007da181 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rdx], eax ; retf
0x00000000007fab21 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rip + 0x1401a6dc], eax ; ret
0x00000000007d5bf2 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rip - 0x3afafe4c], eax ; add al, byte ptr [rax] ; retf
0x00000000007c8050 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x179405 ; retf 0x505
0x00000000007419b1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xe76cc000 ; jmp rax
0x00000000007a5db5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xeb6bb800 ; jmp qword ptr [rdi]
0x00000000005e8256 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add r15b, dil ; ror cl, 1 ; ret
0x000000000047d2f6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; and al, 0 ; leave ; ret
0x00000000007e5169 : cmpsb byte ptr [rsi], byte ptr [rdi] ; and dword ptr [rax], eax ; ret
0x00000000004862b4 : cmpsb byte ptr [rsi], byte ptr [rdi] ; and eax, dword ptr [rax] ; leave ; ret
0x0000000000722993 : cmpsb byte ptr [rsi], byte ptr [rdi] ; call 0xffffffffc459fa91
0x00000000007f6c3f : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp dword ptr [rax], eax ; retf
0x00000000006481e0 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp eax, dword ptr [rax] ; jmp rax
0x0000000000769401 : cmpsb byte ptr [rsi], byte ptr [rdi] ; fdivr st(7) ; mov bh, 8 ; add byte ptr [rax], al ; add al, 0x64 ; ret
0x0000000000546b96 : cmpsb byte ptr [rsi], byte ptr [rdi] ; fistp dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000744245 : cmpsb byte ptr [rsi], byte ptr [rdi] ; in eax, dx ; call rax
0x000000000074b918 : cmpsb byte ptr [rsi], byte ptr [rdi] ; in eax, dx ; retf
0x00000000007561a1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; iretd ; call rsp
0x0000000000650696 : cmpsb byte ptr [rsi], byte ptr [rdi] ; je 0x65067a ; dec dword ptr [rax - 0x77] ; ret
0x00000000007fa52d : cmpsb byte ptr [rsi], byte ptr [rdi] ; jp 0x7fa53b ; fsub dword ptr [rbp] ; retf
0x000000000056be96 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov byte ptr [rsi], dl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f547e : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov dh, 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005d9f3e : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov dword ptr [rdx], eax ; call rax
0x0000000000585926 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov word ptr [rbx], ss ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000737d6c : cmpsb byte ptr [rsi], byte ptr [rdi] ; not ebx ; call rax
0x00000000007dd95a : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, 0 ; retf
0x000000000074b4a1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; nop ; salc ; stc ; call qword ptr [rax]
0x000000000063a073 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007ce24d : cmpsb byte ptr [rsi], byte ptr [rdi] ; or dword ptr [rsi], ebx ; retf
0x0000000000758760 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or edx, eax ; call rsp
0x00000000005897bc : cmpsb byte ptr [rsi], byte ptr [rdi] ; outsb dx, byte ptr [rsi] ; str word ptr [rax - 0x77] ; ret
0x0000000000597596 : cmpsb byte ptr [rsi], byte ptr [rdi] ; rcl dword ptr [rbx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005c78c6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000565050 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x11
0x0000000000721a1b : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x38d9
0x00000000005d5288 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xa
0x0000000000737a0c : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffd3
0x00000000005f3f1a : cmpsb byte ptr [rsi], byte ptr [rdi] ; retf
0x00000000006bb746 : cmpsb byte ptr [rsi], byte ptr [rdi] ; retf -4
0x00000000005230a6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; retf 0x15
0x0000000000505e3e : cmpsb byte ptr [rsi], byte ptr [rdi] ; retf 0x4f
0x00000000005e30a6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; retf 9
0x00000000004cce1e : cmpsb byte ptr [rsi], byte ptr [rdi] ; sal edi, 1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000007f7047 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb al, 6 ; retf 0x3e
0x00000000007d9200 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb al, byte ptr [rax] ; cli ; syscall
0x000000000074b17d : cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call rax
0x000000000058601a : cmpsb byte ptr [rsi], byte ptr [rdi] ; str word ptr [rax - 0x77] ; ret
0x00000000007d0356 : cmpsb byte ptr [rsi], byte ptr [rdi] ; syscall
0x0000000000738724 : cmpsb byte ptr [rsi], byte ptr [rdi] ; xor esi, edx ; push rax ; ret 2
0x00000000007561a0 : cmpsb byte ptr fs:[rsi], byte ptr [rdi] ; iretd ; call rsp
0x00000000007d927e : cmpsd dword ptr [rsi], dword ptr [rdi] ; adc al, 0x18 ; add byte ptr [rax], al ; retf
0x00000000007e7047 : cmpsd dword ptr [rsi], dword ptr [rdi] ; adc eax, 0x5149a07 ; retf
0x00000000007e8731 : cmpsd dword ptr [rsi], dword ptr [rdi] ; adc eax, dword ptr [rax] ; call qword ptr [rax]
0x00000000004f153d : cmpsd dword ptr [rsi], dword ptr [rdi] ; adc edx, dword ptr [rcx] ; call rax
0x00000000006b2435 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add al, 0x35 ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; jmp qword ptr [rdx]
0x00000000007fc02c : cmpsd dword ptr [rsi], dword ptr [rdi] ; add al, 4 ; add byte ptr [rax], al ; retf
0x00000000007f88f3 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add al, 4 ; ror byte ptr [rip + 0x304af00], 1 ; retf
0x0000000000516081 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000067bc47 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000006762ab : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; nop ; ret
0x00000000007f97e4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add dl, byte ptr [rdx] ; ret
0x0000000000783bcc : cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x7d
0x00000000007419d9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, 0xe771b000 ; call rax
0x0000000000532f7c : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000007eaa19 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, dword ptr [rax] ; jrcxz 0x7eaa26 ; push rcx ; ret
0x00000000007f7601 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, dword ptr [rax] ; jrcxz 0x7f760e ; push rcx ; ret
0x00000000007d5674 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, dword ptr [rcx] ; ret 0x1202
0x00000000007d1d5b : cmpsd dword ptr [rsi], dword ptr [rdi] ; add ecx, dword ptr [rbx] ; retf
0x000000000047419e : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; leave ; ret
0x00000000007e9ed0 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and byte ptr [rax + rbp*4], dl ; and dword ptr [rax], eax ; retf 0x520
0x00000000004861fa : cmpsd dword ptr [rsi], dword ptr [rdi] ; and eax, dword ptr [rax] ; leave ; ret
0x00000000007461d5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; call qword ptr [rax]
0x00000000007217f0 : cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x00000000005bfc82 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; add byte ptr [r8], al ; jne 0x5bfc97 ; ret
0x0000000000747f8d : cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rax
0x00000000005fcd7d : cmpsd dword ptr [rsi], dword ptr [rdi] ; cmp eax, 0x89480008 ; ret
0x00000000007461bd : cmpsd dword ptr [rsi], dword ptr [rdi] ; dec eax ; sub byte ptr [rdi], al ; add byte ptr [rax - 0x59], al ; jmp rax
0x0000000000582005 : cmpsd dword ptr [rsi], dword ptr [rdi] ; fst dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000577125 : cmpsd dword ptr [rsi], dword ptr [rdi] ; je 0x577142 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000722a83 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jl 0x722a72 ; pop rdx ; out 0x57, al ; retf
0x00000000007461c5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp rax
0x0000000000496b25 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jp 0x496b50 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000069fa5a : cmpsd dword ptr [rsi], dword ptr [rdi] ; nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x00000000004c3135 : cmpsd dword ptr [rsi], dword ptr [rdi] ; not dword ptr [rbx] ; call rax
0x00000000007f6703 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or al, 5 ; ret
0x00000000006d67ae : cmpsd dword ptr [rsi], dword ptr [rdi] ; or al, byte ptr [rbx + 0x4a] ; ret 0xf812
0x000000000074b4e1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or byte ptr [rax], al ; jo 0x74b4ce ; stc ; jmp qword ptr [rax]
0x00000000007c6506 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or byte ptr [rdx - 0x3bfffff9], al ; syscall
0x0000000000639fc3 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000005f1d35 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or eax, dword ptr [rcx] ; call rax
0x00000000007456a5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; out dx, eax ; call qword ptr [rax]
0x000000000053f4b6 : cmpsd dword ptr [rsi], dword ptr [rdi] ; outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000545fc6 : cmpsd dword ptr [rsi], dword ptr [rdi] ; outsd dx, dword ptr [rsi] ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000005b6535 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x0000000000721b79 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xd5ef
0x00000000006c4869 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfffb
0x00000000007f3f22 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 1
0x00000000004b5d3d : cmpsd dword ptr [rsi], dword ptr [rdi] ; retf
0x00000000007f4030 : cmpsd dword ptr [rsi], dword ptr [rdi] ; retf 0x501
0x000000000075a519 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sar bh, 1 ; ret 1
0x00000000007f5dea : cmpsd dword ptr [rsi], dword ptr [rdi] ; sbb al, 0 ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000451035 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sbb byte ptr [rbx], bl ; call rax
0x00000000005a7305 : cmpsd dword ptr [rsi], dword ptr [rdi] ; xchg byte ptr [rsi], cl ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000486237 : cmpsd dword ptr gs:[rsi], dword ptr [rdi] ; and eax, dword ptr [rax] ; leave ; ret
0x000000000075a518 : cmpsw word ptr [rsi], word ptr [rdi] ; sar bh, 1 ; ret 1
0x00000000006671b8 : cqo ; idiv rsi ; add rsp, 8 ; ret
0x00000000006a1852 : cqo ; xor rax, rdx ; sub rax, rdx ; ret
0x0000000000451908 : cvtdq2ps xmm0, xmmword ptr [rax] ; call rax
0x00000000006a45a0 : cvtdq2ps xmm1, xmmword ptr [rax - 0x75] ; add eax, 0x35e317 ; jmp rax
0x000000000057e860 : cvtdq2ps xmm3, xmmword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000521970 : cvtdq2ps xmm3, xmmword ptr [rbp + 0x41] ; pop rsp ; ret
0x000000000041cdd5 : cvtdq2ps xmm3, xmmword ptr [rsi] ; call rax
0x000000000054720c : cwde ; adc eax, dword ptr [rax] ; nop ; ret
0x00000000007d2811 : cwde ; add al, 0 ; mov al, byte ptr [rbx] ; add byte ptr [rax], al ; retf 0x504
0x00000000007dee27 : cwde ; add al, 5 ; retf 4
0x000000000061096a : cwde ; add al, byte ptr [rax] ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000006098e5 : cwde ; add byte ptr [rax], al ; add al, ch ; ret 0x806
0x000000000064c06c : cwde ; add byte ptr [rax], al ; add al, ch ; retf
0x00000000005dc8eb : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000059301a : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006cca98 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004d5638 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x72e8
0x00000000004d5c0a : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0xbf
0x000000000067e835 : cwde ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000007b30b8 : cwde ; add ch, bh ; call rbx
0x000000000045be34 : cwde ; add cl, cl ; ret
0x000000000078f638 : cwde ; add dl, ah ; jmp qword ptr [rbx]
0x00000000007e459e : cwde ; add dword ptr [rax], eax ; retf 0x501
0x00000000004fc5ac : cwde ; add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000073b1d1 : cwde ; add eax, dword ptr [rax] ; mov ebp, ebx ; jmp rax
0x0000000000784f5d : cwde ; add eax, dword ptr [rax] ; push rax ; rcr edi, cl ; call rax
0x00000000007c69e9 : cwde ; add ecx, ebp ; sbb al, byte ptr [rax] ; retf 0x508
0x000000000051934b : cwde ; add rsp, 0x18 ; ret
0x00000000007ed4e0 : cwde ; and eax, dword ptr [rax] ; out dx, al ; adc dword ptr [rcx], edx ; nop ; and eax, dword ptr [rax] ; ret
0x0000000000722d66 : cwde ; call qword ptr [rcx]
0x000000000073b200 : cwde ; cdq ; add eax, dword ptr [rax] ; nop ; mov ebp, ds ; call rax
0x0000000000610cee : cwde ; clc ; dec dword ptr [rax + 0x63] ; xor cl, byte ptr [rax - 0x77] ; ret
0x0000000000749e15 : cwde ; clc ; jmp qword ptr [rax]
0x00000000007391a0 : cwde ; cmc ; add al, byte ptr [rax] ; retf -0x280f
0x0000000000659020 : cwde ; cmp al, byte ptr [rax] ; jmp rax
0x000000000076acb9 : cwde ; fcos ; ret 0
0x0000000000438424 : cwde ; idiv bh ; jmp rax
0x00000000005c82e3 : cwde ; idiv edi ; dec dword ptr [rax + 0x63] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000007adbc1 : cwde ; in eax, dx ; jmp rdi
0x000000000074611d : cwde ; inc eax ; and eax, 0x98700007 ; jmp rax
0x00000000006d95f9 : cwde ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; retf 0x9f
0x00000000007c13b0 : cwde ; jge 0x7c142e ; add bh, bh ; add ebx, esp ; add dword ptr [rcx], eax ; ret
0x00000000007d4dd8 : cwde ; jge 0x7d4e56 ; add bh, bh ; inc dword ptr [rcx] ; xor eax, dword ptr [rcx] ; ret 2
0x00000000007d57a4 : cwde ; jge 0x7d5822 ; add bh, bh ; add esp, eax ; add dword ptr [rcx], eax ; retf 0x901
0x00000000007f0308 : cwde ; jge 0x7f0386 ; add bh, bh ; add edx, esp ; add dword ptr [rcx], eax ; ret 0x2c01
0x00000000007fb9dc : cwde ; jge 0x7fba5a ; add bh, bh ; add esi, eax ; add eax, dword ptr [rcx] ; retf
0x0000000000440b78 : cwde ; jmp qword ptr [rbx]
0x0000000000746125 : cwde ; jmp rax
0x00000000007a9728 : cwde ; lahf ; in al, dx ; call rbx
0x0000000000756770 : cwde ; mov al, 0xcf ; call rsp
0x0000000000739a14 : cwde ; mov bl, al ; jmp rax
0x000000000076b828 : cwde ; mov dl, 0xd9 ; jmp qword ptr [rbx]
0x00000000005f2834 : cwde ; mov ebp, 0x8948000c ; ret
0x00000000006ad4fa : cwde ; mov qword ptr [rdx + rax*8 - 8], rcx ; ret
0x000000000065e268 : cwde ; mov rax, qword ptr [rax*8 + 0x7207c0] ; ret
0x00000000005f6c5f : cwde ; mov rax, qword ptr [rip + 0x40bc81] ; call rax
0x00000000005f3256 : cwde ; mov rax, qword ptr [rip + 0x40f60a] ; call rax
0x00000000004f06e8 : cwde ; mov rax, qword ptr [rip + 0x5121f8] ; call rax
0x000000000042e9a3 : cwde ; mov rax, qword ptr [rip + 0x5d3f3d] ; call rax
0x000000000042e389 : cwde ; mov rax, qword ptr [rip + 0x5d4557] ; call rax
0x000000000040febd : cwde ; mov rax, qword ptr [rip + 0x5f2a23] ; call rax
0x000000000040f8a3 : cwde ; mov rax, qword ptr [rip + 0x5f303d] ; call rax
0x0000000000422042 : cwde ; mov rdi, rdx ; mov rsi, rax ; call 0x41ea63
0x000000000073b490 : cwde ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, dword ptr [rax] ; push rax ; ret 0xffdd
0x000000000074b141 : cwde ; or byte ptr [rax], al ; nop ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rax]
0x000000000063aec0 : cwde ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000061055e : cwde ; or eax, 0x89480007 ; ret
0x000000000078e998 : cwde ; out 0xe1, al ; jmp qword ptr [rdx]
0x00000000007b27f8 : cwde ; out 0xee, al ; jmp qword ptr [rsi]
0x00000000007b48f8 : cwde ; out dx, eax ; jmp qword ptr [rdi]
0x00000000004f36fb : cwde ; outsb dx, byte ptr [rsi] ; add al, ch ; int 0xc3
0x0000000000740eb0 : cwde ; outsb dx, byte ptr [rsi] ; add eax, 0xe64f2000 ; call rax
0x0000000000735344 : cwde ; outsb dx, byte ptr [rsi] ; iretd ; call rax
0x000000000053a073 : cwde ; outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000004048b4 : cwde ; outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x3c ; retf 0x27
0x000000000040481d : cwde ; outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0xd3 ; retf 0x27
0x0000000000722251 : cwde ; outsd dx, dword ptr [rsi] ; nop ; call rbx
0x0000000000743354 : cwde ; push 0xeb ; call qword ptr [rax]
0x00000000004340f2 : cwde ; push rax ; ret
0x00000000004024f8 : cwde ; ret
0x00000000005438b6 : cwde ; ret 0x13
0x0000000000714678 : cwde ; ret 0x5d
0x000000000076c258 : cwde ; ret 0xffd9
0x00000000007bad38 : cwde ; ret 0xfff0
0x0000000000748168 : cwde ; ret 7
0x0000000000483f28 : cwde ; retf
0x00000000007570e8 : cwde ; retf -0x31
0x0000000000750f48 : cwde ; retf -0x33
0x0000000000515e44 : cwde ; retf 0x4e
0x00000000006d90a0 : cwde ; retf 0x9f
0x0000000000742128 : cwde ; retf 5
0x00000000007f9a02 : cwde ; sahf ; add dword ptr [rax], eax ; retf
0x00000000004def18 : cwde ; sbb al, 0x1a ; add byte ptr [rcx], bh ; ret 0x127c
0x000000000072293d : cwde ; sbb al, 0xcf ; ret 0x5112
0x0000000000745e18 : cwde ; sbb byte ptr [rdi], al ; add byte ptr [rax + 0x63], dl ; jmp qword ptr [rax]
0x00000000007bd9e8 : cwde ; sbb dh, cl ; jmp qword ptr [rbx]
0x00000000004d0130 : cwde ; shr dword ptr [rsi], 1 ; jmp rax
0x000000000051941b : cwde ; shr rax, 0x10 ; add rsp, 0x18 ; ret
0x00000000006d144e : cwde ; sub rax, rcx ; mov byte ptr [rdx + rax], 0x2d ; ret
0x00000000007ddbbd : cwde ; syscall
0x0000000000745c68 : cwde ; sysret ; add al, dh ; stosb byte ptr [rdi], al ; int1 ; call rax
0x00000000007f3116 : cwde ; test dword ptr [rcx], 0x54e8400 ; ret
0x000000000050a4fe : cwde ; wait ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000072193e : cwde ; xchg dword ptr [rcx + 0x12], edx ; ret 0x104a
0x0000000000733ee8 : cwde ; xchg eax, edx ; add eax, 0xcd1a7c00 ; jmp qword ptr [rax]
0x00000000007dc553 : cwde ; xor al, byte ptr [rax] ; cdq ; syscall
0x00000000005811a4 : cwde ; xor eax, 0x89480015 ; ret
0x000000000041f544 : cwde ; xor ebx, dword ptr [rsi] ; call rax
0x0000000000518804 : dec byte ptr [rax + 0x63] ; ret
0x00000000006647cc : dec byte ptr [rax + 1] ; retf 0x148
0x00000000005d8d62 : dec byte ptr [rax + 9] ; int1 ; mov rdx, rcx ; nop ; pop rbp ; ret
0x00000000005bfd48 : dec byte ptr [rax - 0x73] ; push rdi ; dec dword ptr [rax - 0x7d] ; ret 0x4c01
0x00000000004e5dc9 : dec byte ptr [rax - 0x77] ; fimul dword ptr [rcx + rcx*4 - 1] ; call r11
0x000000000066a919 : dec byte ptr [rax - 0x77] ; ret 0x2bf
0x000000000048cfcd : dec byte ptr [rax - 0x77] ; ret 0x8948
0x00000000004ea156 : dec byte ptr [rax - 0x77] ; ret 0x894c
0x0000000000534658 : dec byte ptr [rax - 0x77] ; ret 0xa0bf
0x000000000067f44b : dec byte ptr [rax - 0x77] ; ret 0xabf
0x00000000006599c7 : dec byte ptr [rax - 0x77] ; retf -0x76b4
0x00000000006b52e0 : dec byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000006823c9 : dec byte ptr [rax] ; add al, bl ; ret 0x7cd9
0x000000000048fdce : dec byte ptr [rax] ; and eax, dword ptr [rax] ; leave ; ret
0x00000000006b1d8a : dec byte ptr [rcx + rcx*4 - 0x11] ; call 0x6cdfd6
0x00000000006336bb : dec byte ptr [rcx + rcx*4 - 0x19] ; call rax
0x00000000007f026c : dec byte ptr [rdi] ; add dh, al ; syscall
0x00000000006bd8cd : dec byte ptr [rdi] ; test byte ptr [rsi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc783
0x0000000000566c46 : dec byte ptr [rdi] ; test edx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000066b5fe : dec byte ptr [rdi] ; xchg eax, ebp ; ret
0x00000000005087f8 : dec byte ptr [rdx - 0x76b7ffe9] ; ret
0x00000000005ce7ba : dec byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000007f1050 : dec byte ptr [rsi] ; add eax, 0x88070ed8 ; syscall
0x00000000007d91eb : dec byte ptr [rsi] ; add eax, 0x9d0017cd ; syscall
0x00000000006d08a5 : dec dword ptr [r8 + 0x63] ; retf 0xf66
0x000000000068b2b5 : dec dword ptr [r8 - 0x77] ; ret 0xe4eb
0x000000000073a547 : dec dword ptr [rax + 0x10000355] ; retf
0x000000000073e1e7 : dec dword ptr [rax + 0x10000484] ; ret
0x0000000000748307 : dec dword ptr [rax + 0x200007c9] ; retf
0x000000000053ed7e : dec dword ptr [rax + 0x21] ; clc ; or rax, rdx ; ret
0x0000000000526bd4 : dec dword ptr [rax + 0x21] ; or rdx, rcx ; ret
0x000000000051c6b5 : dec dword ptr [rax + 0x21] ; ret
0x00000000006b846c : dec dword ptr [rax + 0x21] ; retf -0x3eb8
0x00000000006b078c : dec dword ptr [rax + 0x29] ; ret 0x14c
0x00000000006a3d41 : dec dword ptr [rax + 0x29] ; ret 0x2948
0x00000000005fffc4 : dec dword ptr [rax + 0x29] ; ret 0x2b48
0x0000000000579ab3 : dec dword ptr [rax + 0x29] ; ret 0x348
0x000000000040aacb : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000069e997 : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x0000000000538943 : dec dword ptr [rax + 0x29] ; retf
0x0000000000578da9 : dec dword ptr [rax + 0x29] ; retf -0x247b
0x0000000000580faa : dec dword ptr [rax + 0x29] ; retf -0x36cf
0x00000000005fbe58 : dec dword ptr [rax + 0x29] ; retf 0x148
0x00000000006b3c87 : dec dword ptr [rax + 0x29] ; retf 0x14c
0x000000000073ed4f : dec dword ptr [rax + 0x300004c3] ; jmp rdx
0x000000000074033f : dec dword ptr [rax + 0x32] ; add eax, 0xe532d000 ; jmp qword ptr [rax]
0x0000000000736a57 : dec dword ptr [rax + 0x38] ; add al, byte ptr [rax] ; retf -0x2df9
0x00000000005ae9f7 : dec dword ptr [rax + 0x39] ; ret
0x0000000000443193 : dec dword ptr [rax + 0x39] ; ret 0x1175
0x0000000000455b4c : dec dword ptr [rax + 0x39] ; ret 0x2874
0x00000000004691bd : dec dword ptr [rax + 0x39] ; ret 0x3d7c
0x00000000004506c0 : dec dword ptr [rax + 0x39] ; ret 0x4874
0x00000000004139e2 : dec dword ptr [rax + 0x39] ; ret 0x4e74
0x000000000061ba76 : dec dword ptr [rax + 0x39] ; ret 0x5074
0x000000000047ed94 : dec dword ptr [rax + 0x39] ; ret 0x5474
0x0000000000451ac2 : dec dword ptr [rax + 0x39] ; ret 0x5674
0x00000000005e878a : dec dword ptr [rax + 0x39] ; ret 0x5e74
0x0000000000537e7f : dec dword ptr [rax + 0x39] ; ret 0x6348
0x00000000004107d1 : dec dword ptr [rax + 0x39] ; ret 0x6474
0x00000000004410ec : dec dword ptr [rax + 0x39] ; ret 0x6475
0x0000000000414138 : dec dword ptr [rax + 0x39] ; ret 0x6674
0x0000000000420819 : dec dword ptr [rax + 0x39] ; ret 0x6c74
0x0000000000450a6a : dec dword ptr [rax + 0x39] ; ret 0x6e74
0x00000000005edfc0 : dec dword ptr [rax + 0x39] ; ret 0x7074
0x000000000043f084 : dec dword ptr [rax + 0x39] ; ret 0x7075
0x0000000000421c9f : dec dword ptr [rax + 0x39] ; ret 0x7274
0x000000000047f744 : dec dword ptr [rax + 0x39] ; ret 0x7474
0x000000000061be3c : dec dword ptr [rax + 0x39] ; ret 0x7674
0x000000000065de8e : dec dword ptr [rax + 0x39] ; ret 0x7a7f
0x0000000000411af2 : dec dword ptr [rax + 0x39] ; ret 0x840f
0x000000000050f160 : dec dword ptr [rax + 0x39] ; ret 0x870f
0x0000000000610f11 : dec dword ptr [rax + 0x39] ; ret 0x9975
0x00000000004feb59 : dec dword ptr [rax + 0x39] ; retf -0x78f1
0x000000000059e5a3 : dec dword ptr [rax + 0x39] ; retf 0x5e77
0x00000000005f9727 : dec dword ptr [rax + 0x39] ; retf 0x677
0x0000000000505f39 : dec dword ptr [rax + 0x39] ; retf 0x6e77
0x00000000006522e9 : dec dword ptr [rax + 0x39] ; retf 0xba
0x00000000005f94bb : dec dword ptr [rax + 0x39] ; retf 0xc77
0x000000000053ec17 : dec dword ptr [rax + 0x39] ; shl dword ptr [rsi - 0x77], 0x74 ; ret
0x000000000073bc6f : dec dword ptr [rax + 0x3cb] ; je 0x73bc5d ; call rax
0x000000000073d4cf : dec dword ptr [rax + 0x40000444] ; ret 0xffe0
0x0000000000738b37 : dec dword ptr [rax + 0x40002d6] ; ret
0x00000000007405bf : dec dword ptr [rax + 0x50000543] ; mov ah, ch ; jmp rax
0x00000000006b5d1d : dec dword ptr [rax + 0x63] ; add byte ptr [rax + 0x29], cl ; ret 0xf48
0x00000000004ce047 : dec dword ptr [rax + 0x63] ; enter -0x39c7, 0x7d ; adc al, 0xbe ; ret 9
0x000000000059ecf6 : dec dword ptr [rax + 0x63] ; fisttp word ptr [rax - 0x77] ; ret 0x2948
0x0000000000631d43 : dec dword ptr [rax + 0x63] ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b1d58 : dec dword ptr [rax + 0x63] ; push rbp ; mov byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000452b28 : dec dword ptr [rax + 0x63] ; ret
0x000000000048691e : dec dword ptr [rax + 0x63] ; ret 0x2b48
0x0000000000669629 : dec dword ptr [rax + 0x63] ; ret 0x8348
0x00000000006a395a : dec dword ptr [rax + 0x63] ; ret 0x8948
0x000000000058b6eb : dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00000000005c50e8 : dec dword ptr [rax + 0x63] ; ret 0xd139
0x00000000004bbbe8 : dec dword ptr [rax + 0x63] ; retf
0x00000000004b2e00 : dec dword ptr [rax + 0x63] ; retf -0x74b8
0x000000000040570f : dec dword ptr [rax + 0x63] ; retf -0xb8
0x00000000004cfae0 : dec dword ptr [rax + 0x63] ; retf 0x2948
0x000000000067bc21 : dec dword ptr [rax + 0x63] ; retf 0x6348
0x00000000006d08a6 : dec dword ptr [rax + 0x63] ; retf 0xf66
0x00000000004f6010 : dec dword ptr [rax + 0x63] ; ror byte ptr [rax + 0x63], 1 ; ret
0x00000000005ff422 : dec dword ptr [rax + 0x63] ; ror byte ptr [rax + 0x63], cl ; ret
0x00000000005c82a9 : dec dword ptr [rax + 0x63] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000067f7fc : dec dword ptr [rax + 0x63] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x480f
0x000000000064f0f1 : dec dword ptr [rax + 0x63] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4c01
0x00000000005ca6f4 : dec dword ptr [rax + 0x63] ; ror byte ptr [rax - 0x7d], 1 ; ret 0xe901
0x00000000005c82e6 : dec dword ptr [rax + 0x63] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000006867fa : dec dword ptr [rax + 0x63] ; ror dword ptr [rax - 0x7d], 1 ; ret 0x4c01
0x00000000006b0806 : dec dword ptr [rax + 0x63] ; ror dword ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000066e76b : dec dword ptr [rax + 0x63] ; ror dword ptr [rax - 0x7f], cl ; ret 0xda
0x0000000000610cf0 : dec dword ptr [rax + 0x63] ; xor cl, byte ptr [rax - 0x77] ; ret
0x0000000000741f77 : dec dword ptr [rax + 0x700005c1] ; retf
0x000000000074a137 : dec dword ptr [rax + 0x70000852] ; ret 0xfff8
0x00000000005528cc : dec dword ptr [rax + 0xf] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000677710 : dec dword ptr [rax + 0xf] ; ret 0xa2eb
0x00000000006a347b : dec dword ptr [rax + 1] ; ret
0x000000000053dff5 : dec dword ptr [rax + 1] ; ret 0x394d
0x00000000006bac30 : dec dword ptr [rax + 1] ; ret 0x458b
0x0000000000489f64 : dec dword ptr [rax + 1] ; ret 0x8b48
0x000000000068ceb4 : dec dword ptr [rax + 1] ; ret 0xb3e8
0x00000000006a37e1 : dec dword ptr [rax + 1] ; retf
0x00000000004890bb : dec dword ptr [rax + 1] ; retf -0x76b7
0x000000000048a96b : dec dword ptr [rax + 1] ; retf -0x76b8
0x00000000005172a1 : dec dword ptr [rax + 1] ; retf 0x3948
0x000000000066495b : dec dword ptr [rax + 1] ; ror byte ptr [rax + 1], 1 ; retf 0x149
0x00000000006b99ee : dec dword ptr [rax + 9] ; ret
0x00000000006b8462 : dec dword ptr [rax + 9] ; ret 0xb70f
0x0000000000738d5f : dec dword ptr [rax - 0x20] ; add al, byte ptr [rax] ; retf -0x2915
0x00000000005bed5e : dec dword ptr [rax - 0x39] ; add al, 0x24 ; call qword ptr [rdi]
0x000000000043414e : dec dword ptr [rax - 0x39] ; mov r8b, 0x2c ; ret
0x000000000041de67 : dec dword ptr [rax - 0x39] ; or al, spl ; retf 0x9f
0x0000000000437dbc : dec dword ptr [rax - 0x39] ; test dword ptr [rax + 0x70fffff5], edi ; ret
0x0000000000438464 : dec dword ptr [rax - 0x39] ; test dword ptr [rax + 0x70fffff6], ebp ; ret
0x0000000000435c6b : dec dword ptr [rax - 0x39] ; test dword ptr [rax + 0x70fffffa], ebp ; ret
0x00000000004347ff : dec dword ptr [rax - 0x39] ; test dword ptr [rax + 0x7ffffffa], esi ; ret
0x0000000000434d1b : dec dword ptr [rax - 0x39] ; test dword ptr [rax - 0x3b000005], ebx ; ret
0x0000000000434cb7 : dec dword ptr [rax - 0x39] ; test dword ptr [rax - 0x3b000005], ecx ; ret
0x0000000000436704 : dec dword ptr [rax - 0x39] ; test dword ptr [rax - 0x4b000009], ebx ; ret
0x00000000004366c7 : dec dword ptr [rax - 0x39] ; test dword ptr [rax - 0x4b000009], ecx ; ret
0x00000000004cb5cb : dec dword ptr [rax - 0x39] ; test dword ptr [rax - 0x4e000003], esi ; retf
0x0000000000434dcc : dec dword ptr [rax - 0x39] ; test dword ptr [rax - 0x68000005], esi ; ret
0x0000000000747467 : dec dword ptr [rax - 0x4ffff87c] ; ret
0x0000000000746b4f : dec dword ptr [rax - 0x4ffff8a9] ; sal bl, cl ; call rax
0x000000000073f527 : dec dword ptr [rax - 0x4ffffb16] ; ret
0x0000000000737e67 : dec dword ptr [rax - 0x69] ; add al, byte ptr [rax] ; retf -0x2bb3
0x000000000074825f : dec dword ptr [rax - 0x6ffff83a] ; ret
0x00000000006674d6 : dec dword ptr [rax - 0x73] ; add al, 0xe ; add rsp, 8 ; ret
0x0000000000734687 : dec dword ptr [rax - 0x73] ; add dword ptr [rax], eax ; cwde ; ret
0x000000000056ea3e : dec dword ptr [rax - 0x73] ; jne 0x56ea08 ; call rax
0x000000000056f1bd : dec dword ptr [rax - 0x73] ; jne 0x56f187 ; call rax
0x000000000056cdef : dec dword ptr [rax - 0x73] ; js 0x56ce5b ; call 0x6898f7
0x0000000000605a61 : dec dword ptr [rax - 0x73] ; pop rax ; dec dword ptr [rax - 0x7d] ; ret
0x000000000050a20c : dec dword ptr [rax - 0x73] ; pop rdx ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004f5b02 : dec dword ptr [rax - 0x73] ; push rbx ; add dword ptr [rax + 0x29], ecx ; ret 0xc085
0x0000000000542379 : dec dword ptr [rax - 0x73] ; push rcx ; add dword ptr [rax + 0x29], ecx ; ret 0x8ae9
0x00000000004c9f10 : dec dword ptr [rax - 0x73] ; ror byte ptr [r9 - 0x77], 1 ; ret 0x8948
0x0000000000499607 : dec dword ptr [rax - 0x73] ; ror byte ptr [r9 - 0x77], 1 ; ret 0x8ba
0x00000000004f025b : dec dword ptr [rax - 0x73] ; ror byte ptr [r9 - 0x77], 1 ; ret 0xa4e8
0x00000000004bddf0 : dec dword ptr [rax - 0x75] ; adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000005485ff : dec dword ptr [rax - 0x75] ; adc ebp, ebx ; ret
0x00000000004d012b : dec dword ptr [rax - 0x75] ; add al, 0xc5 ; cwde ; shr dword ptr [rsi], 1 ; jmp rax
0x000000000065de60 : dec dword ptr [rax - 0x75] ; add byte ptr [r8 - 0x77], r9b ; ret
0x00000000004ca36e : dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000004e2415 : dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x39], cl ; ret 0x1775
0x000000000061fe9c : dec dword ptr [rax - 0x75] ; add eax, 0x3e2a44 ; call rax
0x000000000061fd2e : dec dword ptr [rax - 0x75] ; add eax, 0x3e2bb2 ; call rax
0x000000000061f724 : dec dword ptr [rax - 0x75] ; add eax, 0x3e313c ; call rax
0x000000000061d68f : dec dword ptr [rax - 0x75] ; add eax, 0x3e5249 ; call rax
0x000000000061c851 : dec dword ptr [rax - 0x75] ; add eax, 0x3e6087 ; call rax
0x000000000061c3ed : dec dword ptr [rax - 0x75] ; add eax, 0x3e64eb ; call rax
0x000000000061be25 : dec dword ptr [rax - 0x75] ; add eax, 0x3e6abb ; call rax
0x000000000061bc01 : dec dword ptr [rax - 0x75] ; add eax, 0x3e6cd7 ; call rax
0x000000000061b261 : dec dword ptr [rax - 0x75] ; add eax, 0x3e767f ; call rax
0x000000000061b02b : dec dword ptr [rax - 0x75] ; add eax, 0x3e78ad ; call rax
0x000000000061a62f : dec dword ptr [rax - 0x75] ; add eax, 0x3e82a9 ; call rax
0x000000000061a441 : dec dword ptr [rax - 0x75] ; add eax, 0x3e8497 ; call rax
0x00000000006192ed : dec dword ptr [rax - 0x75] ; add eax, 0x3e95eb ; call rax
0x000000000061912b : dec dword ptr [rax - 0x75] ; add eax, 0x3e97ad ; call rax
0x0000000000617d87 : dec dword ptr [rax - 0x75] ; add eax, 0x3eab51 ; call rax
0x000000000061789d : dec dword ptr [rax - 0x75] ; add eax, 0x3eb03b ; call rax
0x0000000000617414 : dec dword ptr [rax - 0x75] ; add eax, 0x3eb4c4 ; call rax
0x0000000000616dcf : dec dword ptr [rax - 0x75] ; add eax, 0x3ebb09 ; call rax
0x0000000000616946 : dec dword ptr [rax - 0x75] ; add eax, 0x3ebf92 ; call rax
0x00000000006159bb : dec dword ptr [rax - 0x75] ; add eax, 0x3ecf1d ; call rax
0x00000000006146a5 : dec dword ptr [rax - 0x75] ; add eax, 0x3ee233 ; call rax
0x0000000000614439 : dec dword ptr [rax - 0x75] ; add eax, 0x3ee49f ; call rax
0x00000000006141fd : dec dword ptr [rax - 0x75] ; add eax, 0x3ee6db ; call rax
0x0000000000613c70 : dec dword ptr [rax - 0x75] ; add eax, 0x3eec68 ; call rax
0x00000000005f6525 : dec dword ptr [rax - 0x75] ; add eax, 0x40c3bb ; call rax
0x00000000005f454f : dec dword ptr [rax - 0x75] ; add eax, 0x40e311 ; call rax
0x00000000005f4486 : dec dword ptr [rax - 0x75] ; add eax, 0x40e45a ; call rax
0x00000000005f426e : dec dword ptr [rax - 0x75] ; add eax, 0x40e672 ; call rax
0x00000000005f4055 : dec dword ptr [rax - 0x75] ; add eax, 0x40e883 ; call rax
0x00000000005f3dc9 : dec dword ptr [rax - 0x75] ; add eax, 0x40eb0f ; call rax
0x00000000005f2f5d : dec dword ptr [rax - 0x75] ; add eax, 0x40f97b ; call rax
0x00000000005edfa9 : dec dword ptr [rax - 0x75] ; add eax, 0x414937 ; call rax
0x00000000005edcdc : dec dword ptr [rax - 0x75] ; add eax, 0x414bfc ; call rax
0x00000000005ec46f : dec dword ptr [rax - 0x75] ; add eax, 0x416469 ; call rax
0x00000000005ec00b : dec dword ptr [rax - 0x75] ; add eax, 0x4168cd ; call rax
0x00000000005eba8b : dec dword ptr [rax - 0x75] ; add eax, 0x416e55 ; call rax
0x00000000005eb88b : dec dword ptr [rax - 0x75] ; add eax, 0x41704d ; call rax
0x00000000005eb31b : dec dword ptr [rax - 0x75] ; add eax, 0x4175c5 ; call rax
0x00000000005eb0e5 : dec dword ptr [rax - 0x75] ; add eax, 0x4177f3 ; call rax
0x00000000005e9157 : dec dword ptr [rax - 0x75] ; add eax, 0x419781 ; call rax
0x00000000005e8cf3 : dec dword ptr [rax - 0x75] ; add eax, 0x419be5 ; call rax
0x00000000005e8773 : dec dword ptr [rax - 0x75] ; add eax, 0x41a16d ; call rax
0x00000000005e8573 : dec dword ptr [rax - 0x75] ; add eax, 0x41a365 ; call rax
0x00000000005e8003 : dec dword ptr [rax - 0x75] ; add eax, 0x41a8dd ; call rax
0x00000000005e7dcd : dec dword ptr [rax - 0x75] ; add eax, 0x41ab0b ; call rax
0x00000000005e6a37 : dec dword ptr [rax - 0x75] ; add eax, 0x41bea1 ; call rax
0x00000000005e6963 : dec dword ptr [rax - 0x75] ; add eax, 0x41bf75 ; call rax
0x00000000005e65c5 : dec dword ptr [rax - 0x75] ; add eax, 0x41c313 ; call rax
0x00000000005e56fd : dec dword ptr [rax - 0x75] ; add eax, 0x41d1db ; call rax
0x00000000005e54bf : dec dword ptr [rax - 0x75] ; add eax, 0x41d419 ; call rax
0x00000000005e51e3 : dec dword ptr [rax - 0x75] ; add eax, 0x41d6f5 ; call rax
0x00000000005e38ae : dec dword ptr [rax - 0x75] ; add eax, 0x41f032 ; call rax
0x00000000005e35a7 : dec dword ptr [rax - 0x75] ; add eax, 0x41f339 ; call rax
0x00000000005e266c : dec dword ptr [rax - 0x75] ; add eax, 0x420274 ; call rax
0x00000000005e2540 : dec dword ptr [rax - 0x75] ; add eax, 0x4203a0 ; call rax
0x00000000005e2443 : dec dword ptr [rax - 0x75] ; add eax, 0x42049d ; call rax
0x00000000005e234c : dec dword ptr [rax - 0x75] ; add eax, 0x420594 ; call rax
0x00000000005e2294 : dec dword ptr [rax - 0x75] ; add eax, 0x42064c ; call rax
0x00000000005e18cf : dec dword ptr [rax - 0x75] ; add eax, 0x421009 ; call rax
0x00000000005e170d : dec dword ptr [rax - 0x75] ; add eax, 0x4211cb ; call rax
0x00000000005e0265 : dec dword ptr [rax - 0x75] ; add eax, 0x422673 ; call rax
0x00000000005dc02f : dec dword ptr [rax - 0x75] ; add eax, 0x4268a9 ; call rax
0x00000000005dbd1b : dec dword ptr [rax - 0x75] ; add eax, 0x426bbd ; call rax
0x00000000005da2e4 : dec dword ptr [rax - 0x75] ; add eax, 0x4285f4 ; call rax
0x00000000005d943f : dec dword ptr [rax - 0x75] ; add eax, 0x429499 ; call rax
0x00000000005d936b : dec dword ptr [rax - 0x75] ; add eax, 0x42956d ; call rax
0x00000000005d8ff9 : dec dword ptr [rax - 0x75] ; add eax, 0x4298df ; call rax
0x00000000005d81ff : dec dword ptr [rax - 0x75] ; add eax, 0x42a6d9 ; call rax
0x00000000005d7fcd : dec dword ptr [rax - 0x75] ; add eax, 0x42a90b ; call rax
0x00000000005d7cff : dec dword ptr [rax - 0x75] ; add eax, 0x42abd9 ; call rax
0x00000000005d6524 : dec dword ptr [rax - 0x75] ; add eax, 0x42c3bc ; call rax
0x00000000005d6251 : dec dword ptr [rax - 0x75] ; add eax, 0x42c68f ; call rax
0x00000000005d5252 : dec dword ptr [rax - 0x75] ; add eax, 0x42d68e ; call rax
0x00000000005d5126 : dec dword ptr [rax - 0x75] ; add eax, 0x42d7ba ; call rax
0x00000000005d5029 : dec dword ptr [rax - 0x75] ; add eax, 0x42d8b7 ; call rax
0x00000000005d4f32 : dec dword ptr [rax - 0x75] ; add eax, 0x42d9ae ; call rax
0x00000000005d4e7a : dec dword ptr [rax - 0x75] ; add eax, 0x42da66 ; call rax
0x00000000005d4a03 : dec dword ptr [rax - 0x75] ; add eax, 0x42ded5 ; call rax
0x00000000005d4841 : dec dword ptr [rax - 0x75] ; add eax, 0x42e097 ; call rax
0x00000000005d33bf : dec dword ptr [rax - 0x75] ; add eax, 0x42f519 ; call rax
0x00000000005cf3c3 : dec dword ptr [rax - 0x75] ; add eax, 0x433515 ; call rax
0x00000000005cf0bd : dec dword ptr [rax - 0x75] ; add eax, 0x43381b ; call rax
0x00000000005cd78e : dec dword ptr [rax - 0x75] ; add eax, 0x43514a ; call rax
0x00000000004f2602 : dec dword ptr [rax - 0x75] ; add eax, 0x5102d6 ; call rax
0x00000000004f18e3 : dec dword ptr [rax - 0x75] ; add eax, 0x510ff5 ; call rax
0x00000000004f13c3 : dec dword ptr [rax - 0x75] ; add eax, 0x511515 ; call rax
0x00000000004f12d3 : dec dword ptr [rax - 0x75] ; add eax, 0x511605 ; call rax
0x00000000004ec83b : dec dword ptr [rax - 0x75] ; add eax, 0x51609d ; call rax
0x00000000004ec730 : dec dword ptr [rax - 0x75] ; add eax, 0x5161a8 ; call rax
0x00000000004ec2f4 : dec dword ptr [rax - 0x75] ; add eax, 0x5165e4 ; call rax
0x00000000004ebee2 : dec dword ptr [rax - 0x75] ; add eax, 0x5169f6 ; call rax
0x00000000004ebce4 : dec dword ptr [rax - 0x75] ; add eax, 0x516bf4 ; call rax
0x00000000004eba73 : dec dword ptr [rax - 0x75] ; add eax, 0x516e65 ; call rax
0x00000000004eabb3 : dec dword ptr [rax - 0x75] ; add eax, 0x517d2d ; call rax
0x00000000004e8c6b : dec dword ptr [rax - 0x75] ; add eax, 0x519c75 ; call rax
0x00000000004e89f0 : dec dword ptr [rax - 0x75] ; add eax, 0x519ef0 ; call rax
0x00000000004e8471 : dec dword ptr [rax - 0x75] ; add eax, 0x51a467 ; call rax
0x00000000004e7530 : dec dword ptr [rax - 0x75] ; add eax, 0x51b3b0 ; call rax
0x00000000004e7320 : dec dword ptr [rax - 0x75] ; add eax, 0x51b5b8 ; call rax
0x00000000004e69e9 : dec dword ptr [rax - 0x75] ; add eax, 0x51beef ; call rax
0x00000000004e3400 : dec dword ptr [rax - 0x75] ; add eax, 0x51f4e0 ; call rax
0x00000000004e30df : dec dword ptr [rax - 0x75] ; add eax, 0x51f801 ; call rax
0x00000000004e2e99 : dec dword ptr [rax - 0x75] ; add eax, 0x51fa3f ; call rax
0x00000000004e2d23 : dec dword ptr [rax - 0x75] ; add eax, 0x51fbb5 ; call rax
0x00000000004e15a8 : dec dword ptr [rax - 0x75] ; add eax, 0x521330 ; call rax
0x00000000004da39d : dec dword ptr [rax - 0x75] ; add eax, 0x528543 ; call rax
0x00000000004d9597 : dec dword ptr [rax - 0x75] ; add eax, 0x529341 ; call rax
0x00000000004d6569 : dec dword ptr [rax - 0x75] ; add eax, 0x52c377 ; call rax
0x00000000004d63d9 : dec dword ptr [rax - 0x75] ; add eax, 0x52c507 ; call rax
0x00000000004d5cfb : dec dword ptr [rax - 0x75] ; add eax, 0x52cbe5 ; call rax
0x00000000004d3ddd : dec dword ptr [rax - 0x75] ; add eax, 0x52eb03 ; call rax
0x00000000004d3cb3 : dec dword ptr [rax - 0x75] ; add eax, 0x52ec2d ; call rax
0x00000000004d3b8b : dec dword ptr [rax - 0x75] ; add eax, 0x52ed55 ; call rax
0x00000000004d3a5b : dec dword ptr [rax - 0x75] ; add eax, 0x52ee85 ; call rax
0x00000000004d3929 : dec dword ptr [rax - 0x75] ; add eax, 0x52efb7 ; call rax
0x00000000004d20a1 : dec dword ptr [rax - 0x75] ; add eax, 0x53083f ; call rax
0x00000000004cd5aa : dec dword ptr [rax - 0x75] ; add eax, 0x535336 ; call rax
0x00000000004cbbb8 : dec dword ptr [rax - 0x75] ; add eax, 0x536d28 ; call rax
0x00000000004cb6d6 : dec dword ptr [rax - 0x75] ; add eax, 0x53720a ; call rax
0x00000000004ca744 : dec dword ptr [rax - 0x75] ; add eax, 0x53819c ; call rax
0x00000000004ca21c : dec dword ptr [rax - 0x75] ; add eax, 0x5386c4 ; call rax
0x00000000004ca0a8 : dec dword ptr [rax - 0x75] ; add eax, 0x538830 ; call rax
0x00000000004c85e2 : dec dword ptr [rax - 0x75] ; add eax, 0x53a2fe ; call rax
0x00000000004c8392 : dec dword ptr [rax - 0x75] ; add eax, 0x53a54e ; call rax
0x00000000004c18b7 : dec dword ptr [rax - 0x75] ; add eax, 0x541021 ; call rax
0x00000000004c0f93 : dec dword ptr [rax - 0x75] ; add eax, 0x54194d ; call rax
0x00000000004c09ee : dec dword ptr [rax - 0x75] ; add eax, 0x541ef2 ; call rax
0x00000000004c0379 : dec dword ptr [rax - 0x75] ; add eax, 0x54255f ; call rax
0x00000000004bf986 : dec dword ptr [rax - 0x75] ; add eax, 0x542f5a ; call rax
0x00000000004bf4b8 : dec dword ptr [rax - 0x75] ; add eax, 0x543428 ; call rax
0x00000000004bed03 : dec dword ptr [rax - 0x75] ; add eax, 0x543bd5 ; call rax
0x00000000004be311 : dec dword ptr [rax - 0x75] ; add eax, 0x5445cf ; call rax
0x00000000004bdde0 : dec dword ptr [rax - 0x75] ; add eax, 0x544b00 ; call rax
0x00000000004b9199 : dec dword ptr [rax - 0x75] ; add eax, 0x54973f ; call rax
0x00000000004b8d35 : dec dword ptr [rax - 0x75] ; add eax, 0x549ba3 ; call rax
0x00000000004b8775 : dec dword ptr [rax - 0x75] ; add eax, 0x54a16b ; call rax
0x00000000004b8565 : dec dword ptr [rax - 0x75] ; add eax, 0x54a373 ; call rax
0x00000000004b7bf5 : dec dword ptr [rax - 0x75] ; add eax, 0x54aceb ; call rax
0x00000000004b79bf : dec dword ptr [rax - 0x75] ; add eax, 0x54af19 ; call rax
0x00000000004b6f33 : dec dword ptr [rax - 0x75] ; add eax, 0x54b9a5 ; call rax
0x00000000004b6acf : dec dword ptr [rax - 0x75] ; add eax, 0x54be09 ; call rax
0x00000000004b650f : dec dword ptr [rax - 0x75] ; add eax, 0x54c3d1 ; call rax
0x00000000004b62ff : dec dword ptr [rax - 0x75] ; add eax, 0x54c5d9 ; call rax
0x00000000004b598f : dec dword ptr [rax - 0x75] ; add eax, 0x54cf51 ; call rax
0x00000000004b5759 : dec dword ptr [rax - 0x75] ; add eax, 0x54d17f ; call rax
0x00000000004b1d0a : dec dword ptr [rax - 0x75] ; add eax, 0x550bce ; call rax
0x00000000004b1ba2 : dec dword ptr [rax - 0x75] ; add eax, 0x550d36 ; call rax
0x00000000004b1ac9 : dec dword ptr [rax - 0x75] ; add eax, 0x550e0f ; call rax
0x00000000004b12d1 : dec dword ptr [rax - 0x75] ; add eax, 0x551607 ; call rax
0x00000000004af66e : dec dword ptr [rax - 0x75] ; add eax, 0x553272 ; call rax
0x00000000004aefd7 : dec dword ptr [rax - 0x75] ; add eax, 0x553909 ; call rax
0x00000000004ada13 : dec dword ptr [rax - 0x75] ; add eax, 0x554ecd ; call rax
0x00000000004ad6fe : dec dword ptr [rax - 0x75] ; add eax, 0x5551e2 ; call rax
0x00000000004ad4fb : dec dword ptr [rax - 0x75] ; add eax, 0x5553e5 ; call rax
0x00000000004a33d1 : dec dword ptr [rax - 0x75] ; add eax, 0x55f507 ; call rax
0x00000000004a2f6d : dec dword ptr [rax - 0x75] ; add eax, 0x55f96b ; call rax
0x00000000004a29ad : dec dword ptr [rax - 0x75] ; add eax, 0x55ff33 ; call rax
0x00000000004a279d : dec dword ptr [rax - 0x75] ; add eax, 0x56013b ; call rax
0x00000000004a1e2d : dec dword ptr [rax - 0x75] ; add eax, 0x560ab3 ; call rax
0x00000000004a1bf7 : dec dword ptr [rax - 0x75] ; add eax, 0x560ce1 ; call rax
0x00000000004a1121 : dec dword ptr [rax - 0x75] ; add eax, 0x5617b7 ; call rax
0x000000000049fde3 : dec dword ptr [rax - 0x75] ; add eax, 0x562af5 ; call rax
0x000000000049fc21 : dec dword ptr [rax - 0x75] ; add eax, 0x562cb7 ; call rax
0x000000000049f1c5 : dec dword ptr [rax - 0x75] ; add eax, 0x563713 ; call rax
0x000000000049c1bb : dec dword ptr [rax - 0x75] ; add eax, 0x56671d ; call rax
0x000000000049bfe3 : dec dword ptr [rax - 0x75] ; add eax, 0x5668f5 ; call rax
0x000000000049bc06 : dec dword ptr [rax - 0x75] ; add eax, 0x566cd2 ; call rax
0x000000000049a869 : dec dword ptr [rax - 0x75] ; add eax, 0x56806f ; call rax
0x0000000000492322 : dec dword ptr [rax - 0x75] ; add eax, 0x5705be ; call rax
0x0000000000491fcf : dec dword ptr [rax - 0x75] ; add eax, 0x570911 ; call rax
0x0000000000491b04 : dec dword ptr [rax - 0x75] ; add eax, 0x570ddc ; call rax
0x0000000000491932 : dec dword ptr [rax - 0x75] ; add eax, 0x570fae ; call rax
0x0000000000491237 : dec dword ptr [rax - 0x75] ; add eax, 0x5716a9 ; call rax
0x000000000048dbc2 : dec dword ptr [rax - 0x75] ; add eax, 0x574d1e ; call rax
0x0000000000488391 : dec dword ptr [rax - 0x75] ; add eax, 0x57a54f ; call rax
0x00000000004880bb : dec dword ptr [rax - 0x75] ; add eax, 0x57a825 ; call rax
0x0000000000487db7 : dec dword ptr [rax - 0x75] ; add eax, 0x57ab29 ; call rax
0x000000000048703d : dec dword ptr [rax - 0x75] ; add eax, 0x57b8a3 ; call rax
0x0000000000486e4c : dec dword ptr [rax - 0x75] ; add eax, 0x57ba94 ; call rax
0x000000000048582c : dec dword ptr [rax - 0x75] ; add eax, 0x57d0b4 ; call rax
0x0000000000482ef7 : dec dword ptr [rax - 0x75] ; add eax, 0x57f9e9 ; call rax
0x0000000000482b26 : dec dword ptr [rax - 0x75] ; add eax, 0x57fdba ; call rax
0x000000000048233b : dec dword ptr [rax - 0x75] ; add eax, 0x5805a5 ; call rax
0x000000000047f72d : dec dword ptr [rax - 0x75] ; add eax, 0x5831b3 ; call rax
0x000000000047f4d0 : dec dword ptr [rax - 0x75] ; add eax, 0x583408 ; call rax
0x000000000047ed7d : dec dword ptr [rax - 0x75] ; add eax, 0x583b63 ; call rax
0x000000000047eb08 : dec dword ptr [rax - 0x75] ; add eax, 0x583dd0 ; call rax
0x000000000047e358 : dec dword ptr [rax - 0x75] ; add eax, 0x584580 ; call rax
0x000000000047cc64 : dec dword ptr [rax - 0x75] ; add eax, 0x585c74 ; call rax
0x000000000047a0c6 : dec dword ptr [rax - 0x75] ; add eax, 0x588812 ; call rax
0x0000000000479ebc : dec dword ptr [rax - 0x75] ; add eax, 0x588a1c ; call rax
0x0000000000479a97 : dec dword ptr [rax - 0x75] ; add eax, 0x588e41 ; call rax
0x00000000004788b0 : dec dword ptr [rax - 0x75] ; add eax, 0x58a028 ; call rax
0x0000000000473b47 : dec dword ptr [rax - 0x75] ; add eax, 0x58ed19 ; call rax
0x0000000000472d07 : dec dword ptr [rax - 0x75] ; add eax, 0x58fbd1 ; call rax
0x00000000004728a3 : dec dword ptr [rax - 0x75] ; add eax, 0x590035 ; call rax
0x00000000004722e3 : dec dword ptr [rax - 0x75] ; add eax, 0x5905fd ; call rax
0x00000000004720d3 : dec dword ptr [rax - 0x75] ; add eax, 0x590805 ; call rax
0x0000000000471763 : dec dword ptr [rax - 0x75] ; add eax, 0x59117d ; call rax
0x000000000047152d : dec dword ptr [rax - 0x75] ; add eax, 0x5913ab ; call rax
0x0000000000470b51 : dec dword ptr [rax - 0x75] ; add eax, 0x591d87 ; call rax
0x000000000046f9d1 : dec dword ptr [rax - 0x75] ; add eax, 0x592f07 ; call rax
0x000000000046f80f : dec dword ptr [rax - 0x75] ; add eax, 0x5930c9 ; call rax
0x000000000046edb3 : dec dword ptr [rax - 0x75] ; add eax, 0x593b25 ; call rax
0x000000000046be3f : dec dword ptr [rax - 0x75] ; add eax, 0x596a99 ; call rax
0x000000000046bc67 : dec dword ptr [rax - 0x75] ; add eax, 0x596c71 ; call rax
0x000000000046b88a : dec dword ptr [rax - 0x75] ; add eax, 0x59704e ; call rax
0x000000000046a4ed : dec dword ptr [rax - 0x75] ; add eax, 0x5983eb ; call rax
0x0000000000466e51 : dec dword ptr [rax - 0x75] ; add eax, 0x59ba87 ; call rax
0x0000000000465cd1 : dec dword ptr [rax - 0x75] ; add eax, 0x59cc07 ; call rax
0x0000000000465b0f : dec dword ptr [rax - 0x75] ; add eax, 0x59cdc9 ; call rax
0x00000000004650b3 : dec dword ptr [rax - 0x75] ; add eax, 0x59d825 ; call rax
0x000000000046213f : dec dword ptr [rax - 0x75] ; add eax, 0x5a0799 ; call rax
0x0000000000461f67 : dec dword ptr [rax - 0x75] ; add eax, 0x5a0971 ; call rax
0x0000000000461b8a : dec dword ptr [rax - 0x75] ; add eax, 0x5a0d4e ; call rax
0x00000000004607ed : dec dword ptr [rax - 0x75] ; add eax, 0x5a20eb ; call rax
0x000000000045f9df : dec dword ptr [rax - 0x75] ; add eax, 0x5a2ef9 ; call rax
0x000000000045e647 : dec dword ptr [rax - 0x75] ; add eax, 0x5a4299 ; call rax
0x000000000045e59f : dec dword ptr [rax - 0x75] ; add eax, 0x5a4341 ; call rax
0x000000000045d7b7 : dec dword ptr [rax - 0x75] ; add eax, 0x5a5121 ; call rax
0x000000000045d5f5 : dec dword ptr [rax - 0x75] ; add eax, 0x5a52e3 ; call rax
0x000000000045cb99 : dec dword ptr [rax - 0x75] ; add eax, 0x5a5d3f ; call rax
0x0000000000459345 : dec dword ptr [rax - 0x75] ; add eax, 0x5a9593 ; call rax
0x000000000045916d : dec dword ptr [rax - 0x75] ; add eax, 0x5a976b ; call rax
0x0000000000458d90 : dec dword ptr [rax - 0x75] ; add eax, 0x5a9b48 ; call rax
0x00000000004579f3 : dec dword ptr [rax - 0x75] ; add eax, 0x5aaee5 ; call rax
0x0000000000455323 : dec dword ptr [rax - 0x75] ; add eax, 0x5ad5bd ; call rax
0x000000000045481d : dec dword ptr [rax - 0x75] ; add eax, 0x5ae0bb ; call rax
0x00000000004543b9 : dec dword ptr [rax - 0x75] ; add eax, 0x5ae51f ; call rax
0x0000000000453df9 : dec dword ptr [rax - 0x75] ; add eax, 0x5aeae7 ; call rax
0x0000000000453be9 : dec dword ptr [rax - 0x75] ; add eax, 0x5aecef ; call rax
0x0000000000453279 : dec dword ptr [rax - 0x75] ; add eax, 0x5af667 ; call rax
0x0000000000453043 : dec dword ptr [rax - 0x75] ; add eax, 0x5af895 ; call rax
0x0000000000451aab : dec dword ptr [rax - 0x75] ; add eax, 0x5b0e35 ; call rax
0x0000000000451031 : dec dword ptr [rax - 0x75] ; add eax, 0x5b18a7 ; call rax
0x0000000000450a53 : dec dword ptr [rax - 0x75] ; add eax, 0x5b1e8d ; call rax
0x0000000000450843 : dec dword ptr [rax - 0x75] ; add eax, 0x5b2095 ; call rax
0x000000000044fed3 : dec dword ptr [rax - 0x75] ; add eax, 0x5b2a0d ; call rax
0x000000000044fc9d : dec dword ptr [rax - 0x75] ; add eax, 0x5b2c3b ; call rax
0x000000000044f123 : dec dword ptr [rax - 0x75] ; add eax, 0x5b37b5 ; call rax
0x000000000044dbcf : dec dword ptr [rax - 0x75] ; add eax, 0x5b4d11 ; call rax
0x000000000044daca : dec dword ptr [rax - 0x75] ; add eax, 0x5b4e16 ; call rax
0x000000000044cba1 : dec dword ptr [rax - 0x75] ; add eax, 0x5b5d37 ; call rax
0x000000000044c9df : dec dword ptr [rax - 0x75] ; add eax, 0x5b5ef9 ; call rax
0x000000000044bf83 : dec dword ptr [rax - 0x75] ; add eax, 0x5b6955 ; call rax
0x0000000000448691 : dec dword ptr [rax - 0x75] ; add eax, 0x5ba247 ; call rax
0x00000000004484b9 : dec dword ptr [rax - 0x75] ; add eax, 0x5ba41f ; call rax
0x00000000004480dc : dec dword ptr [rax - 0x75] ; add eax, 0x5ba7fc ; call rax
0x0000000000446d3f : dec dword ptr [rax - 0x75] ; add eax, 0x5bbb99 ; call rax
0x0000000000446687 : dec dword ptr [rax - 0x75] ; add eax, 0x5bc251 ; call rax
0x0000000000446481 : dec dword ptr [rax - 0x75] ; add eax, 0x5bc457 ; call rax
0x0000000000445f46 : dec dword ptr [rax - 0x75] ; add eax, 0x5bc992 ; call rax
0x0000000000444cf3 : dec dword ptr [rax - 0x75] ; add eax, 0x5bdbe5 ; call rax
0x0000000000444c1f : dec dword ptr [rax - 0x75] ; add eax, 0x5bdcb9 ; call rax
0x0000000000443ec2 : dec dword ptr [rax - 0x75] ; add eax, 0x5bea16 ; call rax
0x0000000000443561 : dec dword ptr [rax - 0x75] ; add eax, 0x5bf377 ; call rax
0x00000000004425ab : dec dword ptr [rax - 0x75] ; add eax, 0x5c032d ; call rax
0x00000000004423e9 : dec dword ptr [rax - 0x75] ; add eax, 0x5c04ef ; call rax
0x0000000000441a69 : dec dword ptr [rax - 0x75] ; add eax, 0x5c0e6f ; call rax
0x000000000044171f : dec dword ptr [rax - 0x75] ; add eax, 0x5c11b9 ; call rax
0x000000000043dbbb : dec dword ptr [rax - 0x75] ; add eax, 0x5c4d1d ; call rax
0x000000000043d6bf : dec dword ptr [rax - 0x75] ; add eax, 0x5c5219 ; call rax
0x000000000043d4e7 : dec dword ptr [rax - 0x75] ; add eax, 0x5c53f1 ; call rax
0x000000000043d10a : dec dword ptr [rax - 0x75] ; add eax, 0x5c57ce ; call rax
0x000000000043cd1a : dec dword ptr [rax - 0x75] ; add eax, 0x5c5bbe ; call rax
0x000000000043b65d : dec dword ptr [rax - 0x75] ; add eax, 0x5c727b ; call rax
0x00000000004390b6 : dec dword ptr [rax - 0x75] ; add eax, 0x5c9822 ; call rax
0x00000000004381bc : dec dword ptr [rax - 0x75] ; add eax, 0x5ca724 ; call rax
0x0000000000437f3f : dec dword ptr [rax - 0x75] ; add eax, 0x5ca9a1 ; call rax
0x0000000000437c49 : dec dword ptr [rax - 0x75] ; add eax, 0x5cac97 ; call rax
0x00000000004375a6 : dec dword ptr [rax - 0x75] ; add eax, 0x5cb33a ; call rax
0x00000000004374ad : dec dword ptr [rax - 0x75] ; add eax, 0x5cb3b3 ; call rax
0x0000000000436587 : dec dword ptr [rax - 0x75] ; add eax, 0x5cc359 ; call rax
0x0000000000436497 : dec dword ptr [rax - 0x75] ; add eax, 0x5cc3c9 ; call rax
0x0000000000435944 : dec dword ptr [rax - 0x75] ; add eax, 0x5ccf9c ; call rax
0x0000000000435759 : dec dword ptr [rax - 0x75] ; add eax, 0x5cd187 ; call rax
0x000000000043456e : dec dword ptr [rax - 0x75] ; add eax, 0x5ce372 ; call rax
0x0000000000434475 : dec dword ptr [rax - 0x75] ; add eax, 0x5ce3eb ; call rax
0x0000000000434409 : dec dword ptr [rax - 0x75] ; add eax, 0x5ce4d7 ; call rax
0x00000000004335cf : dec dword ptr [rax - 0x75] ; add eax, 0x5cf309 ; call rax
0x000000000043316b : dec dword ptr [rax - 0x75] ; add eax, 0x5cf76d ; call rax
0x0000000000432bb3 : dec dword ptr [rax - 0x75] ; add eax, 0x5cfd2d ; call rax
0x00000000004329ab : dec dword ptr [rax - 0x75] ; add eax, 0x5cff2d ; call rax
0x000000000043245d : dec dword ptr [rax - 0x75] ; add eax, 0x5d0483 ; call rax
0x0000000000432227 : dec dword ptr [rax - 0x75] ; add eax, 0x5d06b1 ; call rax
0x0000000000430b8d : dec dword ptr [rax - 0x75] ; add eax, 0x5d1d4b ; call rax
0x000000000043066a : dec dword ptr [rax - 0x75] ; add eax, 0x5d2276 ; call rax
0x00000000004303e6 : dec dword ptr [rax - 0x75] ; add eax, 0x5d24f2 ; call rax
0x000000000042f899 : dec dword ptr [rax - 0x75] ; add eax, 0x5d303f ; call rax
0x000000000042f5c3 : dec dword ptr [rax - 0x75] ; add eax, 0x5d3315 ; call rax
0x000000000042f29d : dec dword ptr [rax - 0x75] ; add eax, 0x5d3643 ; call rax
0x000000000042de79 : dec dword ptr [rax - 0x75] ; add eax, 0x5d4a5f ; call rax
0x000000000042dcb7 : dec dword ptr [rax - 0x75] ; add eax, 0x5d4c21 ; call rax
0x000000000042ca89 : dec dword ptr [rax - 0x75] ; add eax, 0x5d5e4f ; call rax
0x000000000042bdd7 : dec dword ptr [rax - 0x75] ; add eax, 0x5d6b01 ; call rax
0x000000000042b7b1 : dec dword ptr [rax - 0x75] ; add eax, 0x5d7127 ; call rax
0x000000000042ad06 : dec dword ptr [rax - 0x75] ; add eax, 0x5d7bd2 ; call rax
0x0000000000428ef5 : dec dword ptr [rax - 0x75] ; add eax, 0x5d99eb ; call rax
0x0000000000428dfc : dec dword ptr [rax - 0x75] ; add eax, 0x5d9a64 ; call rax
0x00000000004275c5 : dec dword ptr [rax - 0x75] ; add eax, 0x5db31b ; call rax
0x00000000004274c2 : dec dword ptr [rax - 0x75] ; add eax, 0x5db39e ; call rax
0x0000000000427456 : dec dword ptr [rax - 0x75] ; add eax, 0x5db48a ; call rax
0x0000000000427182 : dec dword ptr [rax - 0x75] ; add eax, 0x5db756 ; call rax
0x00000000004266db : dec dword ptr [rax - 0x75] ; add eax, 0x5dc205 ; call rax
0x00000000004263ef : dec dword ptr [rax - 0x75] ; add eax, 0x5dc4f1 ; call rax
0x0000000000426243 : dec dword ptr [rax - 0x75] ; add eax, 0x5dc61d ; call rax
0x0000000000425c63 : dec dword ptr [rax - 0x75] ; add eax, 0x5dcc7d ; call rax
0x0000000000425b6a : dec dword ptr [rax - 0x75] ; add eax, 0x5dccf6 ; call rax
0x0000000000424fc6 : dec dword ptr [rax - 0x75] ; add eax, 0x5dd91a ; call rax
0x0000000000424e5b : dec dword ptr [rax - 0x75] ; add eax, 0x5dda85 ; call rax
0x0000000000424cf0 : dec dword ptr [rax - 0x75] ; add eax, 0x5ddbf0 ; call rax
0x0000000000423faf : dec dword ptr [rax - 0x75] ; add eax, 0x5de929 ; call rax
0x0000000000423b4b : dec dword ptr [rax - 0x75] ; add eax, 0x5ded8d ; call rax
0x0000000000423593 : dec dword ptr [rax - 0x75] ; add eax, 0x5df34d ; call rax
0x000000000042338b : dec dword ptr [rax - 0x75] ; add eax, 0x5df54d ; call rax
0x0000000000422e3d : dec dword ptr [rax - 0x75] ; add eax, 0x5dfaa3 ; call rax
0x0000000000422c07 : dec dword ptr [rax - 0x75] ; add eax, 0x5dfcd1 ; call rax
0x000000000042211f : dec dword ptr [rax - 0x75] ; add eax, 0x5e07b9 ; call rax
0x0000000000421be6 : dec dword ptr [rax - 0x75] ; add eax, 0x5e0cfa ; call rax
0x0000000000421954 : dec dword ptr [rax - 0x75] ; add eax, 0x5e0f84 ; call rax
0x0000000000420e07 : dec dword ptr [rax - 0x75] ; add eax, 0x5e1ad1 ; call rax
0x0000000000420b2d : dec dword ptr [rax - 0x75] ; add eax, 0x5e1dab ; call rax
0x00000000004207ff : dec dword ptr [rax - 0x75] ; add eax, 0x5e20e1 ; call rax
0x000000000041fe65 : dec dword ptr [rax - 0x75] ; add eax, 0x5e2a7b ; call rax
0x000000000041fd6c : dec dword ptr [rax - 0x75] ; add eax, 0x5e2b74 ; call rax
0x000000000041f5b7 : dec dword ptr [rax - 0x75] ; add eax, 0x5e3329 ; call rax
0x000000000041f4be : dec dword ptr [rax - 0x75] ; add eax, 0x5e3422 ; call rax
0x000000000041eeb3 : dec dword ptr [rax - 0x75] ; add eax, 0x5e3a25 ; call rax
0x000000000041ecf1 : dec dword ptr [rax - 0x75] ; add eax, 0x5e3be7 ; call rax
0x000000000041dabb : dec dword ptr [rax - 0x75] ; add eax, 0x5e4e1d ; call rax
0x000000000041cded : dec dword ptr [rax - 0x75] ; add eax, 0x5e5aeb ; call rax
0x000000000041c7bf : dec dword ptr [rax - 0x75] ; add eax, 0x5e6119 ; call rax
0x000000000041bcfe : dec dword ptr [rax - 0x75] ; add eax, 0x5e6bda ; call rax
0x000000000041a624 : dec dword ptr [rax - 0x75] ; add eax, 0x5e82b4 ; call rax
0x000000000041972a : dec dword ptr [rax - 0x75] ; add eax, 0x5e91b6 ; call rax
0x00000000004194ad : dec dword ptr [rax - 0x75] ; add eax, 0x5e9433 ; call rax
0x00000000004191b7 : dec dword ptr [rax - 0x75] ; add eax, 0x5e9729 ; call rax
0x0000000000418b14 : dec dword ptr [rax - 0x75] ; add eax, 0x5e9dcc ; call rax
0x0000000000418a1b : dec dword ptr [rax - 0x75] ; add eax, 0x5e9e45 ; call rax
0x0000000000417af5 : dec dword ptr [rax - 0x75] ; add eax, 0x5eadeb ; call rax
0x0000000000417a05 : dec dword ptr [rax - 0x75] ; add eax, 0x5eae5b ; call rax
0x0000000000416fc3 : dec dword ptr [rax - 0x75] ; add eax, 0x5eb91d ; call rax
0x0000000000416cc7 : dec dword ptr [rax - 0x75] ; add eax, 0x5ebc19 ; call rax
0x0000000000415adc : dec dword ptr [rax - 0x75] ; add eax, 0x5ece04 ; call rax
0x00000000004159e3 : dec dword ptr [rax - 0x75] ; add eax, 0x5ece7d ; call rax
0x0000000000415977 : dec dword ptr [rax - 0x75] ; add eax, 0x5ecf69 ; call rax
0x0000000000414b3d : dec dword ptr [rax - 0x75] ; add eax, 0x5edd9b ; call rax
0x00000000004146d9 : dec dword ptr [rax - 0x75] ; add eax, 0x5ee1ff ; call rax
0x0000000000414121 : dec dword ptr [rax - 0x75] ; add eax, 0x5ee7bf ; call rax
0x0000000000413f19 : dec dword ptr [rax - 0x75] ; add eax, 0x5ee9bf ; call rax
0x00000000004139cb : dec dword ptr [rax - 0x75] ; add eax, 0x5eef15 ; call rax
0x0000000000413795 : dec dword ptr [rax - 0x75] ; add eax, 0x5ef143 ; call rax
0x00000000004120a7 : dec dword ptr [rax - 0x75] ; add eax, 0x5f0831 ; call rax
0x0000000000411b84 : dec dword ptr [rax - 0x75] ; add eax, 0x5f0d5c ; call rax
0x0000000000411900 : dec dword ptr [rax - 0x75] ; add eax, 0x5f0fd8 ; call rax
0x0000000000410db3 : dec dword ptr [rax - 0x75] ; add eax, 0x5f1b25 ; call rax
0x0000000000410add : dec dword ptr [rax - 0x75] ; add eax, 0x5f1dfb ; call rax
0x00000000004107b7 : dec dword ptr [rax - 0x75] ; add eax, 0x5f2129 ; call rax
0x000000000040f393 : dec dword ptr [rax - 0x75] ; add eax, 0x5f3545 ; call rax
0x000000000040f1d1 : dec dword ptr [rax - 0x75] ; add eax, 0x5f3707 ; call rax
0x000000000040dfa3 : dec dword ptr [rax - 0x75] ; add eax, 0x5f4935 ; call rax
0x000000000040d2f1 : dec dword ptr [rax - 0x75] ; add eax, 0x5f55e7 ; call rax
0x000000000040cccb : dec dword ptr [rax - 0x75] ; add eax, 0x5f5c0d ; call rax
0x000000000040c220 : dec dword ptr [rax - 0x75] ; add eax, 0x5f66b8 ; call rax
0x00000000006253e7 : dec dword ptr [rax - 0x75] ; clc ; leave ; ret
0x00000000006b8621 : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; retf -0x76b8
0x00000000005495f4 : dec dword ptr [rax - 0x75] ; cmp cl, byte ptr [rax - 0x77] ; ret
0x00000000005a23b0 : dec dword ptr [rax - 0x75] ; je 0x5a23e1 ; or byte ptr [rax - 0x77], cl ; ret
0x00000000004f5574 : dec dword ptr [rax - 0x75] ; jl 0x4f55a5 ; sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000503960 : dec dword ptr [rax - 0x75] ; jl 0x503991 ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000524dd1 : dec dword ptr [rax - 0x75] ; jl 0x524e02 ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000005309ad : dec dword ptr [rax - 0x75] ; jl 0x5309de ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000534ee4 : dec dword ptr [rax - 0x75] ; jl 0x534f15 ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000056a291 : dec dword ptr [rax - 0x75] ; jl 0x56a2c2 ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000005947a1 : dec dword ptr [rax - 0x75] ; jl 0x5947d2 ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000005ac264 : dec dword ptr [rax - 0x75] ; jl 0x5ac295 ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000005b9f47 : dec dword ptr [rax - 0x75] ; jl 0x5b9f78 ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000004e6b3e : dec dword ptr [rax - 0x75] ; jo 0x4e6ad8 ; add al, 0x39 ; ret 0x9e0f
0x00000000004e6b8c : dec dword ptr [rax - 0x75] ; jo 0x4e6b26 ; add al, 0x89 ; ret 0x8b48
0x00000000004e6c4e : dec dword ptr [rax - 0x75] ; jo 0x4e6be8 ; add al, 0x89 ; ret 0x8b48
0x00000000004e9356 : dec dword ptr [rax - 0x75] ; jo 0x4e92f0 ; add al, 0x39 ; ret 0x9f0f
0x00000000004e93a4 : dec dword ptr [rax - 0x75] ; jo 0x4e933e ; add al, 0x89 ; ret 0x858b
0x00000000005e6ec4 : dec dword ptr [rax - 0x75] ; loopne 0x5e6e5e ; jo 0x5e6e5f ; ret 0x8b48
0x0000000000661821 : dec dword ptr [rax - 0x75] ; mov ecx, dword ptr [rax - 0x77000000] ; ret 0xf631
0x000000000067aa98 : dec dword ptr [rax - 0x75] ; or byte ptr [r15], cl ; mov dh, 0 ; pop rbx ; ret
0x00000000004e242b : dec dword ptr [rax - 0x75] ; or byte ptr [rax + 0x39], cl ; ret 0x7074
0x00000000006b7d7d : dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax + 0x29] ; retf 0xf44
0x00000000006cd78a : dec dword ptr [rax - 0x75] ; pop rbp ; clc ; leave ; ret
0x00000000004a845a : dec dword ptr [rax - 0x75] ; push rbp ; mov byte ptr [rax + 1], cl ; retf -0x7cb8
0x0000000000615574 : dec dword ptr [rax - 0x75] ; push rbp ; mov byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000005d1920 : dec dword ptr [rax - 0x75] ; push rdx ; or byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000005d1a9a : dec dword ptr [rax - 0x75] ; push rdx ; or byte ptr [rax - 0x7d], cl ; ret 0x4908
0x0000000000690b89 : dec dword ptr [rax - 0x75] ; push rsp ; and al, 0x30 ; jmp 0x690b5b
0x0000000000690bd9 : dec dword ptr [rax - 0x75] ; push rsp ; and al, 0x30 ; jmp 0x690bab
0x0000000000691159 : dec dword ptr [rax - 0x75] ; push rsp ; and al, 0x30 ; jmp 0x69112b
0x00000000006911a9 : dec dword ptr [rax - 0x75] ; push rsp ; and al, 0x30 ; jmp 0x69117b
0x000000000048fb3a : dec dword ptr [rax - 0x75] ; test dword ptr [rax - 0x16000002], ecx ; ret
0x000000000063472c : dec dword ptr [rax - 0x75] ; xor ecx, dword ptr [rax - 0x7b] ; test byte ptr [rdi], 0x84 ; retf
0x00000000007382cf : dec dword ptr [rax - 0x75fffd54] ; ret 0xffd4
0x0000000000455b76 : dec dword ptr [rax - 0x77] ; adc cl, cl ; ret
0x0000000000606e79 : dec dword ptr [rax - 0x77] ; call 0xffffffffd15fbffc
0x0000000000614a9f : dec dword ptr [rax - 0x77] ; clc ; leave ; ret
0x0000000000526bec : dec dword ptr [rax - 0x77] ; clc ; ret
0x00000000006bfbdf : dec dword ptr [rax - 0x77] ; cmp eax, 0x342ea1 ; ret
0x00000000005c38e2 : dec dword ptr [rax - 0x77] ; fbstp dword ptr [rcx] ; shr al, 0x79 ; ret 0xb
0x00000000005c30c7 : dec dword ptr [rax - 0x77] ; fbstp dword ptr [rcx] ; shr al, 0x94 ; retf 0xb
0x0000000000571f34 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000006b60d6 : dec dword ptr [rax - 0x77] ; fimul dword ptr [rax + 0x63] ; add byte ptr [rax + 0x29], cl ; ret 0x8b48
0x000000000048d7dc : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; ret 0x8948
0x00000000006c193d : dec dword ptr [rax - 0x77] ; fisttp word ptr [rcx + rcx*4 - 0x1a] ; call rax
0x0000000000646676 : dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 0x77] ; ret
0x000000000063b810 : dec dword ptr [rax - 0x77] ; fsubp st(0) ; ret
0x00000000005584e7 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; push rax ; ret 0x17
0x0000000000629974 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret
0x0000000000693345 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xffd2
0x000000000059ccc5 : dec dword ptr [rax - 0x77] ; or byte ptr [r8 - 0x7d], r9b ; ret
0x000000000045070a : dec dword ptr [rax - 0x77] ; or cl, cl ; ret
0x00000000006bf1a5 : dec dword ptr [rax - 0x77] ; out -0x18, eax ; ret 0xd44a
0x00000000006ca067 : dec dword ptr [rax - 0x77] ; out 0x89, al ; ret 0xdf89
0x00000000006a7ccb : dec dword ptr [rax - 0x77] ; out dx, eax ; call 0x6d4746
0x00000000005c3946 : dec dword ptr [rax - 0x77] ; out dx, eax ; xor eax, eax ; call 0x67fb6e
0x000000000068e80c : dec dword ptr [rax - 0x77] ; pop r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000403ff5 : dec dword ptr [rax - 0x77] ; ret
0x0000000000605125 : dec dword ptr [rax - 0x77] ; ret 0x1b8
0x00000000005c8da3 : dec dword ptr [rax - 0x77] ; ret 0x1ebf
0x0000000000608acd : dec dword ptr [rax - 0x77] ; ret 0x2348
0x00000000006b5636 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000579afb : dec dword ptr [rax - 0x77] ; ret 0x2b48
0x0000000000415a3a : dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000004c6d9e : dec dword ptr [rax - 0x77] ; ret 0x894c
0x00000000004107c7 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000006cbc0f : dec dword ptr [rax - 0x77] ; ret 0x8b9
0x0000000000411c2b : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000006b98bb : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x00000000005125ef : dec dword ptr [rax - 0x77] ; ret 0xb8
0x0000000000509e58 : dec dword ptr [rax - 0x77] ; ret 0xc031
0x000000000059a68a : dec dword ptr [rax - 0x77] ; ret 0xc148
0x00000000006beabd : dec dword ptr [rax - 0x77] ; ret 0xc7
0x00000000006cb9a9 : dec dword ptr [rax - 0x77] ; ret 0xc748
0x00000000006bd943 : dec dword ptr [rax - 0x77] ; ret 0xc783
0x0000000000651e80 : dec dword ptr [rax - 0x77] ; ret 0xc7e8
0x00000000004c8469 : dec dword ptr [rax - 0x77] ; ret 0xce89
0x000000000045da7a : dec dword ptr [rax - 0x77] ; ret 0xe283
0x000000000068b2b6 : dec dword ptr [rax - 0x77] ; ret 0xe4eb
0x000000000056d411 : dec dword ptr [rax - 0x77] ; retf -0x3eb8
0x0000000000623790 : dec dword ptr [rax - 0x77] ; retf -0x74b8
0x0000000000442f47 : dec dword ptr [rax - 0x77] ; retf -0x76b8
0x00000000005b80b7 : dec dword ptr [rax - 0x77] ; retf 0x10e8
0x00000000006bd669 : dec dword ptr [rax - 0x77] ; retf 0x148
0x00000000006b8447 : dec dword ptr [rax - 0x77] ; ror byte ptr [rax - 0x77], 1 ; retf -0x46b8
0x000000000062d5b0 : dec dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x39], 1 ; add al, 0x24 ; call qword ptr [rdi]
0x00000000004a48f8 : dec dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x77], 1 ; ret 0x3ce8
0x00000000004a43d2 : dec dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x77], 1 ; ret 0x62e8
0x000000000060d417 : dec dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x77], 1 ; ret 0x87e9
0x00000000005eeb92 : dec dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x77], 1 ; ret 0x8948
0x00000000004cd664 : dec dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x77], 1 ; ret 0xd0e8
0x00000000004a4681 : dec dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x77], 1 ; ret 0xd3e8
0x000000000041aac3 : dec dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x77], 1 ; ret 0xe283
0x00000000004b1c69 : dec dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x77], 1 ; retf -0x76b8
0x00000000004a8982 : dec dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x77], 1 ; retf 0x23c
0x000000000065bafa : dec dword ptr [rax - 0x77] ; salc ; mov rdi, rax ; call 0x407d39
0x00000000004d6871 : dec dword ptr [rax - 0x77] ; test dword ptr [rax - 0x16000006], esp ; ret
0x000000000057c55d : dec dword ptr [rax - 0x77] ; vpand xmm13, xmm9, xmm0 ; retf 0x104f
0x000000000063bab8 : dec dword ptr [rax - 0x77] ; xchg eax, ebp ; mov eax, 0xe8fffffd ; retf
0x000000000043f3ae : dec dword ptr [rax - 0x77] ; xlatb ; mov rsi, rax ; call 0x43be3f
0x0000000000516e27 : dec dword ptr [rax - 0x77] ; xor al, al ; or rax, rcx ; ret
0x0000000000642f2e : dec dword ptr [rax - 0x7b] ; dec dword ptr [rdi] ; test byte ptr [rdi], al ; ret 0xffff
0x000000000063bf94 : dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x8548
0x00000000006446f1 : dec dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0x18] ; ret 0xe84b
0x0000000000642de8 : dec dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0x18] ; retf
0x00000000006a4476 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0x5584
0x000000000050d38b : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0x1ae9
0x00000000006696b8 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdx + rsi + 0x48], 0x39 ; ret
0x00000000006a7c16 : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0x8548
0x00000000005ba5d3 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rdi] ; pushfq ; ret 0xbd80
0x00000000006a65ae : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0x3941
0x000000000063cbf0 : dec dword ptr [rax - 0x7d] ; cli ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000060f753 : dec dword ptr [rax - 0x7d] ; cli ; adc cl, byte ptr [rax - 0x77] ; ret
0x000000000060f5ad : dec dword ptr [rax - 0x7d] ; cli ; adc ecx, dword ptr [rax - 0x77] ; ret
0x00000000004f6ce2 : dec dword ptr [rax - 0x7d] ; cli ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000004fd6ef : dec dword ptr [rax - 0x7d] ; cli ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000004f8c23 : dec dword ptr [rax - 0x7d] ; cli ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000645e5f : dec dword ptr [rax - 0x7d] ; cli ; and byte ptr [rax - 0x77], cl ; ret
0x0000000000645f78 : dec dword ptr [rax - 0x7d] ; cli ; and cl, byte ptr [rax - 0x77] ; ret
0x0000000000698d45 : dec dword ptr [rax - 0x7d] ; cli ; cmp cl, byte ptr [rax - 0x77] ; ret
0x000000000069a162 : dec dword ptr [rax - 0x7d] ; cli ; cmp dword ptr [rax - 0x77], ecx ; ret
0x0000000000514b21 : dec dword ptr [rax - 0x7d] ; cli ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000566f8e : dec dword ptr [rax - 0x7d] ; cli ; or cl, byte ptr [rax - 0x77] ; ret
0x000000000060f8df : dec dword ptr [rax - 0x7d] ; cli ; or dword ptr [rax - 0x77], ecx ; ret
0x0000000000566d60 : dec dword ptr [rax - 0x7d] ; cli ; or ecx, dword ptr [rax - 0x77] ; ret
0x00000000005b2ddd : dec dword ptr [rax - 0x7d] ; cli ; sbb cl, byte ptr [rax - 0x77] ; ret
0x00000000005b16bd : dec dword ptr [rax - 0x7d] ; cli ; sbb dword ptr [rax - 0x77], ecx ; ret
0x00000000006458e8 : dec dword ptr [rax - 0x7d] ; cli ; sbb ecx, dword ptr [rax - 0x77] ; ret
0x0000000000698910 : dec dword ptr [rax - 0x7d] ; cli ; xor cl, byte ptr [rax - 0x77] ; ret
0x0000000000699a90 : dec dword ptr [rax - 0x7d] ; cli ; xor ecx, dword ptr [rax - 0x77] ; ret
0x0000000000607268 : dec dword ptr [rax - 0x7d] ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000050a210 : dec dword ptr [rax - 0x7d] ; ret
0x00000000005815a7 : dec dword ptr [rax - 0x7d] ; ret 0x3901
0x00000000004f590c : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000005d1a67 : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x000000000045e71f : dec dword ptr [rax - 0x7d] ; ret 0x4818
0x00000000004b16f3 : dec dword ptr [rax - 0x7d] ; ret 0x4820
0x00000000004a6b3b : dec dword ptr [rax - 0x7d] ; ret 0x4828
0x00000000004da4fa : dec dword ptr [rax - 0x7d] ; ret 0x4860
0x00000000006432f6 : dec dword ptr [rax - 0x7d] ; ret 0x4980
0x00000000005bfd4c : dec dword ptr [rax - 0x7d] ; ret 0x4c01
0x00000000005fffb3 : dec dword ptr [rax - 0x7d] ; ret 0x8901
0x00000000005f501b : dec dword ptr [rax - 0x7d] ; ret 0x8908
0x000000000045e5b3 : dec dword ptr [rax - 0x7d] ; ret 0x8918
0x00000000004830f3 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rax + 0x48], 0x39 ; ret 0x840f
0x0000000000482f07 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rax + 0x48], 0x89 ; ret 0x8948
0x0000000000582493 : dec dword ptr [rax - 0x7d] ; ror byte ptr [rax], 0x5b ; ret
0x0000000000477e64 : dec dword ptr [rax - 0x7f] ; ret 0x148
0x00000000004da593 : dec dword ptr [rax - 0x7f] ; ret 0x198
0x000000000047808c : dec dword ptr [rax - 0x7f] ; ret 0xc8
0x0000000000478022 : dec dword ptr [rax - 0x7f] ; ret 0xd8
0x0000000000477fe5 : dec dword ptr [rax - 0x7f] ; ret 0xe8
0x0000000000477fa8 : dec dword ptr [rax - 0x7f] ; ret 0xf8
0x000000000074a17f : dec dword ptr [rax - 0x7ffff7ad] ; ret
0x0000000000735e0f : dec dword ptr [rax - 2] ; add dword ptr [rax], eax ; pop rax ; retf -0x30
0x000000000073f91f : dec dword ptr [rax] ; add dword ptr [rip - 0x1bbbd000], eax ; jmp qword ptr [rax]
0x0000000000740cd7 : dec dword ptr [rax] ; add eax, 0xe6351000 ; jmp qword ptr [rax]
0x000000000074963f : dec dword ptr [rax] ; and byte ptr [rax], cl ; add al, ah ; xchg bh, dh ; jmp qword ptr [rax]
0x0000000000740417 : dec dword ptr [rax] ; cmp byte ptr [rip - 0x1abc9000], al ; jmp qword ptr [rax]
0x00000000007465af : dec dword ptr [rax] ; cmp eax, 0x3d000007 ; jmp qword ptr [rax]
0x000000000074b13f : dec dword ptr [rax] ; cwde ; or byte ptr [rax], al ; nop ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rax]
0x000000000074a697 : dec dword ptr [rax] ; insb byte ptr [rdi], dx ; or byte ptr [rax], al ; and byte ptr [rax], ah ; stc ; jmp qword ptr [rax]
0x000000000074a837 : dec dword ptr [rax] ; jb 0x74a84b ; add byte ptr [rax], dh ; xor al, 0xf9 ; jmp qword ptr [rax]
0x00000000007470ef : dec dword ptr [rax] ; je 0x747102 ; add al, ah ; push rsp ; hlt ; jmp qword ptr [rax]
0x0000000000747297 : dec dword ptr [rax] ; jge 0x7472aa ; add byte ptr [rax - 0x52], al ; hlt ; jmp qword ptr [rax]
0x0000000000747127 : dec dword ptr [rax] ; jne 0x74713a ; add al, al ; push rdi ; hlt ; jmp qword ptr [rax]
0x0000000000747fe7 : dec dword ptr [rax] ; mov ebp, 0xaa100007 ; cmc ; jmp qword ptr [rax]
0x0000000000745027 : dec dword ptr [rax] ; mov ebx, 0x21400006 ; out dx, eax ; jmp qword ptr [rax]
0x00000000007450df : dec dword ptr [rax] ; mov edi, 0x26a00006 ; out dx, eax ; jmp qword ptr [rax]
0x000000000074a047 : dec dword ptr [rax] ; or byte ptr [r8], r8b ; nop ; mov cl, 0xf8 ; jmp qword ptr [rax]
0x0000000000749ec7 : dec dword ptr [rax] ; or byte ptr [rax], al ; loopne 0x749e7f ; clc ; jmp qword ptr [rax]
0x0000000000749ff7 : dec dword ptr [rax] ; or byte ptr [rax], r8b ; push rax ; mov al, 0xf8 ; jmp qword ptr [rax]
0x0000000000745b7f : dec dword ptr [rax] ; or byte ptr [rdi], al ; add byte ptr [rax + 0x38], dh ; int1 ; jmp qword ptr [rax]
0x000000000074a567 : dec dword ptr [rax] ; or byte ptr gs:[rax], al ; mov al, 1 ; stc ; jmp qword ptr [rax]
0x000000000074a707 : dec dword ptr [rax] ; outsb dx, byte ptr [rsi] ; or byte ptr [rax], al ; shr byte ptr [rcx + rdi*8], 1 ; jmp qword ptr [rax]
0x000000000074b2cf : dec dword ptr [rax] ; popfq ; or byte ptr [rax], al ; loopne 0x74b28b ; stc ; jmp qword ptr [rax]
0x000000000073ed47 : dec dword ptr [rax] ; ret
0x0000000000748137 : dec dword ptr [rax] ; ret 7
0x000000000073bd7f : dec dword ptr [rax] ; rol byte ptr [rbx], 1 ; add byte ptr [rax], dl ; jl 0x73bd6d ; jmp qword ptr [rax]
0x0000000000745407 : dec dword ptr [rax] ; rol dword ptr [rsi], 1 ; add al, dh ; jno 0x745406 ; jmp qword ptr [rax]
0x000000000073feb7 : dec dword ptr [rax] ; sbb al, 5 ; add al, dh ; or ebp, esp ; jmp qword ptr [rax]
0x000000000073fd7f : dec dword ptr [rax] ; sbb byte ptr [rip - 0x1afa6000], al ; jmp qword ptr [rax]
0x000000000073fdc7 : dec dword ptr [rax] ; sbb dword ptr [rip - 0x1af8e000], eax ; jmp qword ptr [rax]
0x0000000000734c7f : dec dword ptr [rax] ; stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; ret 0xce90
0x000000000074989f : dec dword ptr [rax] ; sub al, 8 ; add al, ah ; mov bl, 0xf7 ; jmp qword ptr [rax]
0x0000000000746247 : dec dword ptr [rax] ; sub eax, dword ptr [rdi] ; add byte ptr [rax - 0x54], dh ; jmp qword ptr [rax]
0x000000000074afe7 : dec dword ptr [rax] ; xchg eax, ebx ; or byte ptr [rax], al ; jo 0x74af94 ; stc ; jmp qword ptr [rax]
0x00000000007414df : dec dword ptr [rax] ; xchg eax, ecx ; add eax, 0xe714f000 ; jmp qword ptr [rax]
0x000000000073b03f : dec dword ptr [rax] ; xchg eax, ecx ; add eax, dword ptr [rax] ; and byte ptr [rax - 0x23], dh ; jmp qword ptr [rax]
0x000000000074b027 : dec dword ptr [rax] ; xchg eax, esp ; or byte ptr [rax], al ; mov al, 0x9f ; stc ; jmp qword ptr [rax]
0x0000000000742337 : dec dword ptr [rax] ; xlatb ; add eax, 0xe8974000 ; jmp qword ptr [rax]
0x00000000007463b7 : dec dword ptr [rax] ; xor eax, 0x11e00007 ; jmp qword ptr [rax]
0x0000000000579ac2 : dec dword ptr [rbp + 0x39ff1344] ; ret 0x8f0f
0x00000000006c2610 : dec dword ptr [rbp + 0x63] ; in eax, dx ; call rax
0x0000000000654b82 : dec dword ptr [rbp + 0x63] ; retf 0xe7c
0x00000000004f60b2 : dec dword ptr [rbp + rcx*4 + 0x7b] ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004d23c0 : dec dword ptr [rbp - 0x77] ; cli ; call 0x4ce6bc
0x000000000069ae18 : dec dword ptr [rbp - 0x77] ; imul ecx ; retf -0x2c
0x00000000004e769e : dec dword ptr [rbp - 0x77] ; ret
0x00000000004b2e54 : dec dword ptr [rbp - 0x77] ; ret 0x894d
0x00000000006affed : dec dword ptr [rbp - 0x7afdfdbc] ; ror byte ptr [rdi], 0x48 ; ret
0x00000000006b61c6 : dec dword ptr [rbp - 0x7cb7fead] ; ret
0x0000000000692532 : dec dword ptr [rbx + 0x3706ef15] ; add byte ptr [rcx], bh ; ret 0xe375
0x00000000005f4231 : dec dword ptr [rbx + 0x408b3850] ; xor al, 0x29 ; ret 0xd089
0x000000000068b239 : dec dword ptr [rbx + 0x458b0455] ; add byte ptr [rcx], bh ; ret 0x447d
0x0000000000677cee : dec dword ptr [rbx + 0x48042444] ; add esp, 0x28 ; ret
0x00000000006cfe61 : dec dword ptr [rbx + 0x48042444] ; add esp, 0x38 ; ret
0x00000000006ab052 : dec dword ptr [rbx + 0x48082444] ; add esp, 0x18 ; ret
0x0000000000677cce : dec dword ptr [rbx + 0x48082444] ; add esp, 0x28 ; ret
0x00000000006cfab1 : dec dword ptr [rbx + 0x48082444] ; add esp, 0x38 ; ret
0x00000000006aaf16 : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x18 ; ret
0x000000000069436e : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x28 ; ret
0x00000000006cfad1 : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x000000000069438e : dec dword ptr [rbx + 0x48102444] ; add esp, 0x28 ; ret
0x00000000006cfe41 : dec dword ptr [rbx + 0x48102444] ; add esp, 0x38 ; ret
0x00000000006943ae : dec dword ptr [rbx + 0x48142444] ; add esp, 0x28 ; ret
0x00000000006cfe80 : dec dword ptr [rbx + 0x48142444] ; add esp, 0x38 ; ret
0x00000000006a5644 : dec dword ptr [rbx + 0x48202444] ; add esp, 0x38 ; ret
0x00000000004e6be7 : dec dword ptr [rbx + 0x63482852] ; ror byte ptr [rax + 0x29], cl ; retf -0x74b8
0x0000000000431e0b : dec dword ptr [rbx + 0x6348ec55] ; retf 0x558b
0x00000000005dcb67 : dec dword ptr [rbx + 0x63491070] ; ret 0x8948
0x0000000000686385 : dec dword ptr [rbx + rcx*4 + 0x34] ; and al, 0x83 ; ret
0x0000000000531064 : dec dword ptr [rbx + rcx*4 + 0x64] ; ret
0x00000000005cb14c : dec dword ptr [rbx + rcx*4 + 0x65] ; and byte ptr [rax - 0x77], cl ; ret
0x00000000006a3d3b : dec dword ptr [rbx - 0x103f73] ; dec dword ptr [rax + 0x29] ; ret 0x2948
0x000000000066fdf3 : dec dword ptr [rbx - 0x14f3db84] ; retf 0xf66
0x000000000048f967 : dec dword ptr [rbx - 0x177c37bb] ; add dword ptr [rcx], edi ; ret
0x000000000043ad78 : dec dword ptr [rbx - 0x366f03bb] ; ret
0x00000000004cc907 : dec dword ptr [rbx - 0x366f07bb] ; ret
0x00000000005cf8ba : dec dword ptr [rbx - 0x3f7cefc0] ; add dword ptr [rcx], edi ; ret 0x2b7e
0x000000000065184f : dec dword ptr [rbx - 0x44b7b] ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x8539
0x000000000066497a : dec dword ptr [rbx - 0x760bdbbc] ; ret 0xe883
0x00000000006a964e : dec dword ptr [rbx - 0x76dfdbb4] ; retf -0x3777
0x00000000006c6100 : dec dword ptr [rbx - 0x76f3dbb4] ; ret
0x00000000006a6af7 : dec dword ptr [rbx - 0x77bbdfbb] ; ret 0x8589
0x000000000064b4b9 : dec dword ptr [rbx - 0x7abafbbe] ; in al, 0xf ; sahf ; ret 0x3941
0x00000000005f4f7f : dec dword ptr [rbx - 0x9b7b] ; ljmp ptr [rcx] ; ret 0xd089
0x00000000004adcad : dec dword ptr [rbx - 0xa37b] ; ljmp ptr [rcx] ; ret 0xd089
0x0000000000610d28 : dec dword ptr [rbx - 0xf37b] ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000006c6b32 : dec dword ptr [rbx] ; setne al ; ret
0x00000000004871b4 : dec dword ptr [rcx + 0x39c889f2] ; ret 0x287c
0x00000000007693d3 : dec dword ptr [rcx + 0x400000c] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x7c
0x000000000066e7c0 : dec dword ptr [rcx + 0x415d5bd8] ; pop rsp ; ret
0x000000000043adcd : dec dword ptr [rcx + 0x458bfc45] ; cld ; nop ; leave ; ret
0x00000000005a13e6 : dec dword ptr [rcx + 0x63] ; fisttp qword ptr [rax - 0x77] ; ret 0x2948
0x0000000000579a76 : dec dword ptr [rcx + 0x63] ; ret 0x6348
0x000000000064e085 : dec dword ptr [rcx + 0x63] ; ret 0xd989
0x0000000000677fe9 : dec dword ptr [rcx + 1] ; ret 0x10e9
0x0000000000677dfe : dec dword ptr [rcx + 1] ; ret 0x8944
0x000000000067804d : dec dword ptr [rcx + 1] ; ret 0xace9
0x0000000000677e31 : dec dword ptr [rcx + 1] ; ret 0xd285
0x000000000054913b : dec dword ptr [rcx + rcx*4 + 0x60] ; or byte ptr [rax - 0x77], cl ; ret
0x00000000006cd718 : dec dword ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000068d998 : dec dword ptr [rcx + rcx*4 - 0x18] ; jne 0x68d9bc ; call rax
0x00000000006cd615 : dec dword ptr [rcx + rcx*4 - 0x19] ; call r14
0x000000000052ced9 : dec dword ptr [rcx + rcx*4 - 0x19] ; call rax
0x000000000068725a : dec dword ptr [rcx + rcx*4 - 0x1a] ; call 0x403c76
0x000000000060c505 : dec dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005c8f18 : dec dword ptr [rcx + rcx*4 - 0x60] ; pop rax ; add al, 0 ; add al, ch ; retf
0x00000000006c26e3 : dec dword ptr [rcx + rcx*4 - 1] ; mov rsi, rbx ; call rax
0x00000000005d7ca3 : dec dword ptr [rcx + rcx*4 - 8] ; mov rdi, rax ; call 0x6d4749
0x000000000069e987 : dec dword ptr [rcx - 0x1fb6b] ; dec dword ptr [rax - 0x7d] ; ret 0x8901
0x0000000000678702 : dec dword ptr [rcx - 0x39b7f008] ; ret
0x00000000006928a1 : dec dword ptr [rcx - 0x3b7cb718] ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000005b80b1 : dec dword ptr [rcx - 0x4bb63] ; dec dword ptr [rax - 0x77] ; retf 0x10e8
0x0000000000699d46 : dec dword ptr [rcx - 0x77] ; fsubp st(1) ; ret 0xfffe
0x00000000005665ab : dec dword ptr [rcx - 0x77] ; in eax, -0x77 ; ret
0x0000000000435672 : dec dword ptr [rcx - 0x77] ; mov byte ptr [rcx - 0x41], 0x70 ; ret
0x0000000000431781 : dec dword ptr [rcx - 0x77] ; mov byte ptr [rcx - 0x41], 0xc0 ; ret 0x6d
0x00000000004ce082 : dec dword ptr [rcx - 0x77] ; ret
0x00000000004ca91f : dec dword ptr [rcx - 0x77] ; ret 0x10e8
0x00000000004ed164 : dec dword ptr [rcx - 0x77] ; ret 0x11e8
0x0000000000488745 : dec dword ptr [rcx - 0x77] ; ret 0x14e8
0x00000000005f14b4 : dec dword ptr [rcx - 0x77] ; ret 0x15e8
0x00000000005f27fd : dec dword ptr [rcx - 0x77] ; ret 0x16e8
0x0000000000418183 : dec dword ptr [rcx - 0x77] ; ret 0x18e8
0x0000000000418c26 : dec dword ptr [rcx - 0x77] ; ret 0x19e8
0x00000000004d3c1d : dec dword ptr [rcx - 0x77] ; ret 0x1ae8
0x00000000004770e9 : dec dword ptr [rcx - 0x77] ; ret 0x1be
0x000000000040b8d2 : dec dword ptr [rcx - 0x77] ; ret 0x1be8
0x00000000004d3a44 : dec dword ptr [rcx - 0x77] ; ret 0x1bf
0x00000000004cb47b : dec dword ptr [rcx - 0x77] ; ret 0x1ce8
0x00000000004ca7ec : dec dword ptr [rcx - 0x77] ; ret 0x1e8
0x000000000049020e : dec dword ptr [rcx - 0x77] ; ret 0x21e8
0x0000000000488259 : dec dword ptr [rcx - 0x77] ; ret 0x22e8
0x0000000000485e5a : dec dword ptr [rcx - 0x77] ; ret 0x23e8
0x00000000004ad797 : dec dword ptr [rcx - 0x77] ; ret 0x24e8
0x0000000000473eec : dec dword ptr [rcx - 0x77] ; ret 0x29e8
0x0000000000416401 : dec dword ptr [rcx - 0x77] ; ret 0x2ae8
0x00000000004a818c : dec dword ptr [rcx - 0x77] ; ret 0x2be8
0x00000000004d3c9c : dec dword ptr [rcx - 0x77] ; ret 0x2bf
0x0000000000427cb0 : dec dword ptr [rcx - 0x77] ; ret 0x2de8
0x0000000000425061 : dec dword ptr [rcx - 0x77] ; ret 0x2e8
0x00000000004adaac : dec dword ptr [rcx - 0x77] ; ret 0x2fe8
0x0000000000417c07 : dec dword ptr [rcx - 0x77] ; ret 0x30e8
0x00000000004d2b52 : dec dword ptr [rcx - 0x77] ; ret 0x33e8
0x00000000004cbee7 : dec dword ptr [rcx - 0x77] ; ret 0x34e8
0x000000000048ae68 : dec dword ptr [rcx - 0x77] ; ret 0x35e8
0x00000000004be459 : dec dword ptr [rcx - 0x77] ; ret 0x36e8
0x00000000004bface : dec dword ptr [rcx - 0x77] ; ret 0x37e8
0x0000000000429017 : dec dword ptr [rcx - 0x77] ; ret 0x38e8
0x00000000004294fc : dec dword ptr [rcx - 0x77] ; ret 0x39e8
0x0000000000487f08 : dec dword ptr [rcx - 0x77] ; ret 0x3ab9
0x00000000004e4bc9 : dec dword ptr [rcx - 0x77] ; ret 0x3ae8
0x00000000004a6bfc : dec dword ptr [rcx - 0x77] ; ret 0x3be8
0x00000000004d3dc6 : dec dword ptr [rcx - 0x77] ; ret 0x3bf
0x0000000000426508 : dec dword ptr [rcx - 0x77] ; ret 0x3e8
0x000000000047e6cb : dec dword ptr [rcx - 0x77] ; ret 0x3ee8
0x000000000048e52e : dec dword ptr [rcx - 0x77] ; ret 0x41e8
0x0000000000418e22 : dec dword ptr [rcx - 0x77] ; ret 0x43e8
0x0000000000418f44 : dec dword ptr [rcx - 0x77] ; ret 0x45e8
0x0000000000491b9d : dec dword ptr [rcx - 0x77] ; ret 0x46e8
0x0000000000416d60 : dec dword ptr [rcx - 0x77] ; ret 0x47e8
0x000000000044dc63 : dec dword ptr [rcx - 0x77] ; ret 0x48e8
0x00000000004adb6e : dec dword ptr [rcx - 0x77] ; ret 0x49e8
0x00000000004163d5 : dec dword ptr [rcx - 0x77] ; ret 0x4ae8
0x00000000004c0c21 : dec dword ptr [rcx - 0x77] ; ret 0x4ce8
0x00000000005cfe33 : dec dword ptr [rcx - 0x77] ; ret 0x4ee8
0x0000000000622b1a : dec dword ptr [rcx - 0x77] ; ret 0x4fe8
0x0000000000498f15 : dec dword ptr [rcx - 0x77] ; ret 0x50e8
0x0000000000443415 : dec dword ptr [rcx - 0x77] ; ret 0x52e8
0x00000000005f0b6c : dec dword ptr [rcx - 0x77] ; ret 0x53e8
0x00000000004c842e : dec dword ptr [rcx - 0x77] ; ret 0x55e8
0x000000000045e7a6 : dec dword ptr [rcx - 0x77] ; ret 0x57e8
0x00000000004359dd : dec dword ptr [rcx - 0x77] ; ret 0x58e8
0x00000000004d2136 : dec dword ptr [rcx - 0x77] ; ret 0x5be8
0x00000000004292fb : dec dword ptr [rcx - 0x77] ; ret 0x5ce8
0x00000000004912d2 : dec dword ptr [rcx - 0x77] ; ret 0x5de8
0x0000000000473e72 : dec dword ptr [rcx - 0x77] ; ret 0x5e8
0x00000000004f2410 : dec dword ptr [rcx - 0x77] ; ret 0x5fe8
0x000000000041f555 : dec dword ptr [rcx - 0x77] ; ret 0x60e8
0x00000000004e34a5 : dec dword ptr [rcx - 0x77] ; ret 0x62e8
0x0000000000417dfa : dec dword ptr [rcx - 0x77] ; ret 0x63e8
0x00000000004348fd : dec dword ptr [rcx - 0x77] ; ret 0x64e8
0x00000000004281a6 : dec dword ptr [rcx - 0x77] ; ret 0x65e8
0x000000000048f8fb : dec dword ptr [rcx - 0x77] ; ret 0x66e8
0x0000000000487512 : dec dword ptr [rcx - 0x77] ; ret 0x67e8
0x00000000004bf61b : dec dword ptr [rcx - 0x77] ; ret 0x68e8
0x0000000000417f18 : dec dword ptr [rcx - 0x77] ; ret 0x69e8
0x00000000004de445 : dec dword ptr [rcx - 0x77] ; ret 0x6ae8
0x0000000000419546 : dec dword ptr [rcx - 0x77] ; ret 0x6be8
0x00000000004b3c59 : dec dword ptr [rcx - 0x77] ; ret 0x6ce8
0x00000000005eee46 : dec dword ptr [rcx - 0x77] ; ret 0x6de8
0x00000000004c8679 : dec dword ptr [rcx - 0x77] ; ret 0x6e8
0x000000000041f6a3 : dec dword ptr [rcx - 0x77] ; ret 0x6ee8
0x000000000044db5e : dec dword ptr [rcx - 0x77] ; ret 0x6fe8
0x0000000000425215 : dec dword ptr [rcx - 0x77] ; ret 0x70e8
0x0000000000424ef4 : dec dword ptr [rcx - 0x77] ; ret 0x73e8
0x00000000004de0f1 : dec dword ptr [rcx - 0x77] ; ret 0x74e8
0x00000000005dd53c : dec dword ptr [rcx - 0x77] ; ret 0x77e8
0x000000000041f45c : dec dword ptr [rcx - 0x77] ; ret 0x7be8
0x00000000004dcdd3 : dec dword ptr [rcx - 0x77] ; ret 0x7ce8
0x00000000004d39be : dec dword ptr [rcx - 0x77] ; ret 0x7de8
0x000000000048eda4 : dec dword ptr [rcx - 0x77] ; ret 0x7e8
0x0000000000482657 : dec dword ptr [rcx - 0x77] ; ret 0x7ee8
0x00000000005f6714 : dec dword ptr [rcx - 0x77] ; ret 0x7fe8
0x0000000000498c99 : dec dword ptr [rcx - 0x77] ; ret 0x80e8
0x0000000000499e97 : dec dword ptr [rcx - 0x77] ; ret 0x84e8
0x00000000004e8e68 : dec dword ptr [rcx - 0x77] ; ret 0x87e8
0x00000000004276e7 : dec dword ptr [rcx - 0x77] ; ret 0x88e8
0x00000000004b2a56 : dec dword ptr [rcx - 0x77] ; ret 0x8944
0x0000000000483b92 : dec dword ptr [rcx - 0x77] ; ret 0x8948
0x00000000004e4ba2 : dec dword ptr [rcx - 0x77] ; ret 0x894c
0x000000000044134e : dec dword ptr [rcx - 0x77] ; ret 0x89e8
0x0000000000445b9b : dec dword ptr [rcx - 0x77] ; ret 0x8ae8
0x0000000000484254 : dec dword ptr [rcx - 0x77] ; ret 0x8b9
0x000000000045ddec : dec dword ptr [rcx - 0x77] ; ret 0x8ba
0x000000000042937c : dec dword ptr [rcx - 0x77] ; ret 0x8be8
0x000000000043f359 : dec dword ptr [rcx - 0x77] ; ret 0x8ce8
0x0000000000473f18 : dec dword ptr [rcx - 0x77] ; ret 0x8de8
0x000000000042817a : dec dword ptr [rcx - 0x77] ; ret 0x8fe8
0x000000000045fd07 : dec dword ptr [rcx - 0x77] ; ret 0x90e8
0x00000000004831a2 : dec dword ptr [rcx - 0x77] ; ret 0x91e8
0x0000000000467177 : dec dword ptr [rcx - 0x77] ; ret 0x92e8
0x0000000000445a6a : dec dword ptr [rcx - 0x77] ; ret 0x93e8
0x00000000004e949f : dec dword ptr [rcx - 0x77] ; ret 0x94e8
0x00000000004924a4 : dec dword ptr [rcx - 0x77] ; ret 0x95e8
0x00000000004c11ad : dec dword ptr [rcx - 0x77] ; ret 0x96e8
0x0000000000415bee : dec dword ptr [rcx - 0x77] ; ret 0x97e8
0x00000000004bfbcb : dec dword ptr [rcx - 0x77] ; ret 0x98e8
0x0000000000426776 : dec dword ptr [rcx - 0x77] ; ret 0x99e8
0x00000000005f48b3 : dec dword ptr [rcx - 0x77] ; ret 0x9ae8
0x0000000000491330 : dec dword ptr [rcx - 0x77] ; ret 0x9be8
0x000000000048deae : dec dword ptr [rcx - 0x77] ; ret 0x9de8
0x00000000004d60ff : dec dword ptr [rcx - 0x77] ; ret 0x9ee8
0x0000000000415d0c : dec dword ptr [rcx - 0x77] ; ret 0x9fe8
0x00000000004be019 : dec dword ptr [rcx - 0x77] ; ret 0xa0e8
0x00000000004b2b74 : dec dword ptr [rcx - 0x77] ; ret 0xa1e8
0x00000000004cb36e : dec dword ptr [rcx - 0x77] ; ret 0xa3e8
0x00000000004afb27 : dec dword ptr [rcx - 0x77] ; ret 0xa4e8
0x00000000004870d6 : dec dword ptr [rcx - 0x77] ; ret 0xa5e8
0x0000000000419cfe : dec dword ptr [rcx - 0x77] ; ret 0xa7e8
0x000000000061d989 : dec dword ptr [rcx - 0x77] ; ret 0xa8e8
0x00000000004267b1 : dec dword ptr [rcx - 0x77] ; ret 0xaae8
0x00000000004df26a : dec dword ptr [rcx - 0x77] ; ret 0xabe8
0x00000000004de011 : dec dword ptr [rcx - 0x77] ; ret 0xace8
0x00000000004af2d6 : dec dword ptr [rcx - 0x77] ; ret 0xade8
0x000000000044dd23 : dec dword ptr [rcx - 0x77] ; ret 0xae8
0x000000000040e445 : dec dword ptr [rcx - 0x77] ; ret 0xaee8
0x000000000040ea73 : dec dword ptr [rcx - 0x77] ; ret 0xb0e8
0x00000000004cbc68 : dec dword ptr [rcx - 0x77] ; ret 0xb1e8
0x0000000000468699 : dec dword ptr [rcx - 0x77] ; ret 0xb2e8
0x00000000004c8814 : dec dword ptr [rcx - 0x77] ; ret 0xb3e8
0x0000000000419025 : dec dword ptr [rcx - 0x77] ; ret 0xb4e8
0x000000000041acb2 : dec dword ptr [rcx - 0x77] ; ret 0xb5e8
0x000000000048acc2 : dec dword ptr [rcx - 0x77] ; ret 0xb7e8
0x00000000005d3f2e : dec dword ptr [rcx - 0x77] ; ret 0xb9e8
0x00000000004cd754 : dec dword ptr [rcx - 0x77] ; ret 0xba
0x00000000004e7967 : dec dword ptr [rcx - 0x77] ; ret 0xbae8
0x000000000040af40 : dec dword ptr [rcx - 0x77] ; ret 0xbbe8
0x00000000005d07be : dec dword ptr [rcx - 0x77] ; ret 0xbe8
0x000000000062284f : dec dword ptr [rcx - 0x77] ; ret 0xbf
0x0000000000416010 : dec dword ptr [rcx - 0x77] ; ret 0xbfe8
0x0000000000487797 : dec dword ptr [rcx - 0x77] ; ret 0xc0e8
0x0000000000486a74 : dec dword ptr [rcx - 0x77] ; ret 0xc1e8
0x00000000004ee5cd : dec dword ptr [rcx - 0x77] ; ret 0xc6e8
0x00000000004eea5a : dec dword ptr [rcx - 0x77] ; ret 0xc7e8
0x00000000004a00d3 : dec dword ptr [rcx - 0x77] ; ret 0xc8e8
0x00000000004bdf43 : dec dword ptr [rcx - 0x77] ; ret 0xcae8
0x0000000000489e22 : dec dword ptr [rcx - 0x77] ; ret 0xcbe8
0x00000000005d025f : dec dword ptr [rcx - 0x77] ; ret 0xce8
0x00000000004278c7 : dec dword ptr [rcx - 0x77] ; ret 0xcee8
0x00000000004cdb0c : dec dword ptr [rcx - 0x77] ; ret 0xcfe8
0x0000000000421d36 : dec dword ptr [rcx - 0x77] ; ret 0xd1e8
0x00000000004dd487 : dec dword ptr [rcx - 0x77] ; ret 0xd689
0x0000000000425d85 : dec dword ptr [rcx - 0x77] ; ret 0xd6e8
0x00000000004ecd2b : dec dword ptr [rcx - 0x77] ; ret 0xd789
0x00000000004b0a2e : dec dword ptr [rcx - 0x77] ; ret 0xd7e8
0x0000000000417ff9 : dec dword ptr [rcx - 0x77] ; ret 0xd8e8
0x000000000048f130 : dec dword ptr [rcx - 0x77] ; ret 0xd9e8
0x0000000000623cc9 : dec dword ptr [rcx - 0x77] ; ret 0xdce8
0x0000000000426074 : dec dword ptr [rcx - 0x77] ; ret 0xde8
0x0000000000426117 : dec dword ptr [rcx - 0x77] ; ret 0xdee8
0x000000000048302a : dec dword ptr [rcx - 0x77] ; ret 0xdfe8
0x0000000000484cb5 : dec dword ptr [rcx - 0x77] ; ret 0xe0e8
0x000000000049894e : dec dword ptr [rcx - 0x77] ; ret 0xe1e8
0x0000000000424d89 : dec dword ptr [rcx - 0x77] ; ret 0xe2e8
0x000000000048a3ea : dec dword ptr [rcx - 0x77] ; ret 0xe3e8
0x00000000004192c9 : dec dword ptr [rcx - 0x77] ; ret 0xe4e8
0x0000000000478188 : dec dword ptr [rcx - 0x77] ; ret 0xe5e8
0x00000000005e27a4 : dec dword ptr [rcx - 0x77] ; ret 0xe7e8
0x00000000004d5999 : dec dword ptr [rcx - 0x77] ; ret 0xe8e8
0x000000000049206a : dec dword ptr [rcx - 0x77] ; ret 0xe9e8
0x0000000000408d23 : dec dword ptr [rcx - 0x77] ; ret 0xeae8
0x000000000045deb4 : dec dword ptr [rcx - 0x77] ; ret 0xebe8
0x00000000004db5ed : dec dword ptr [rcx - 0x77] ; ret 0xece8
0x00000000004d3d45 : dec dword ptr [rcx - 0x77] ; ret 0xf0e8
0x00000000004172ff : dec dword ptr [rcx - 0x77] ; ret 0xf4e8
0x0000000000411cbe : dec dword ptr [rcx - 0x77] ; ret 0xf5e8
0x0000000000622b75 : dec dword ptr [rcx - 0x77] ; ret 0xf66
0x00000000005f4bea : dec dword ptr [rcx - 0x77] ; ret 0xf7e8
0x00000000005eee32 : dec dword ptr [rcx - 0x77] ; ret 0xf9e8
0x00000000004b195a : dec dword ptr [rcx - 0x77] ; ret 0xfbe8
0x0000000000443309 : dec dword ptr [rcx - 0x77] ; ret 0xfce8
0x00000000004da61c : dec dword ptr [rcx - 0x77] ; ret 0xfde8
0x0000000000427aaa : dec dword ptr [rcx - 0x77] ; ret 0xfe8
0x0000000000622afe : dec dword ptr [rcx - 0x77] ; ret 0xffe8
0x000000000044d1da : dec dword ptr [rcx - 0x77] ; retf -0x2977
0x000000000048ed86 : dec dword ptr [rcx - 0x77] ; retf -0x76b8
0x0000000000467f44 : dec dword ptr [rcx - 0x77] ; retf 0x8b9
0x0000000000431ec8 : dec dword ptr [rcx - 0x77] ; rol byte ptr [rcx - 0x47], 0xd0 ; ret 0x6d
0x00000000006a96a6 : dec dword ptr [rcx - 0x7c1a8a32] ; ret
0x00000000006b62c0 : dec dword ptr [rcx - 0x7d] ; ret 0x4c02
0x00000000005fd002 : dec dword ptr [rcx - 9] ; fmul dword ptr [rbp + 1] ; ret
0x0000000000678435 : dec dword ptr [rcx] ; setbe al ; ret
0x00000000007d3233 : dec dword ptr [rdi] ; add ch, dh ; syscall
0x00000000006cce33 : dec dword ptr [rdi] ; mov dh, 0x43 ; add al, 0x5b ; ret
0x00000000006be25d : dec dword ptr [rdi] ; popfq ; ret
0x0000000000604d00 : dec dword ptr [rdi] ; popfq ; ret 0xf685
0x00000000005fc328 : dec dword ptr [rdi] ; pushfq ; ret 0x8545
0x00000000005ba5d7 : dec dword ptr [rdi] ; pushfq ; ret 0xbd80
0x000000000060b788 : dec dword ptr [rdi] ; ret
0x0000000000666c1b : dec dword ptr [rdi] ; ret 0x3eba
0x000000000064b51c : dec dword ptr [rdi] ; sahf ; ret
0x00000000005c7c21 : dec dword ptr [rdi] ; sahf ; ret 0x3941
0x00000000005c8cac : dec dword ptr [rdi] ; sahf ; ret 0x3944
0x00000000005fa8bd : dec dword ptr [rdi] ; sahf ; ret 0x8440
0x00000000005787ef : dec dword ptr [rdi] ; sahf ; ret 0xc839
0x00000000004f5d6c : dec dword ptr [rdi] ; sahf ; ret 0xdf39
0x0000000000452c7c : dec dword ptr [rdi] ; test byte ptr [rcx - 0x7d000000], cl ; ret
0x0000000000642f31 : dec dword ptr [rdi] ; test byte ptr [rdi], al ; ret 0xffff
0x000000000057f88c : dec dword ptr [rdi] ; test byte ptr [rdx - 0x76ffffff], cl ; ret
0x000000000051c59e : dec dword ptr [rdi] ; test dword ptr [rbx + 0x39000000], ecx ; ret
0x0000000000656aab : dec dword ptr [rdi] ; test ebp, ebp ; sldt word ptr [rax] ; call rax
0x0000000000651855 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x8539
0x000000000057515d : dec dword ptr [rdi] ; xchg eax, edi ; ret 0xb60f
0x00000000006a65b2 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x3941
0x00000000006671a6 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd184
0x00000000006c6b22 : dec dword ptr [rdx] ; setne al ; ret
0x00000000007e110c : dec dword ptr [rsi] ; add eax, 0xa1000f94 ; syscall
0x000000000059ccc4 : dec dword ptr gs:[rax - 0x77] ; or byte ptr [r8 - 0x7d], r9b ; ret
0x00000000007492df : dec eax ; adc dword ptr [rax], ecx ; add byte ptr [rax], dl ; push 0xf7 ; jmp rax
0x0000000000745ab7 : dec eax ; add byte ptr [rdi], al ; add byte ptr [rax], dh ; je 0x745ab7 ; call qword ptr [rax]
0x0000000000736dc7 : dec eax ; add r8b, byte ptr [r8] ; retf -0x2dc7
0x000000000074079f : dec eax ; add rax, -0x1a3f6000 ; jmp rax
0x0000000000740687 : dec eax ; add rax, -0x1a4cc000 ; jmp rax
0x0000000000740647 : dec eax ; add rax, -0x1a4d5000 ; jmp qword ptr [rax]
0x0000000000748eb7 : dec eax ; inc byte ptr [rdi] ; add al, al ; and al, 0xf7 ; jmp rax
0x000000000074709f : dec eax ; jb 0x7470b2 ; add al, al ; push rdx ; hlt ; jmp rax
0x000000000073ab1f : dec eax ; jbe 0x73ab2e ; add al, dh ; adc al, 0xdd ; jmp rax
0x000000000074aaff : dec eax ; jg 0x74ab13 ; add byte ptr [rax + 0x6d], dh ; stc ; jmp rax
0x000000000073acb7 : dec eax ; jge 0x73acc6 ; add al, dh ; xor ch, bl ; jmp rax
0x00000000007410df : dec eax ; jns 0x7410f0 ; add al, al ; mov esi, esp ; jmp rax
0x000000000074180f : dec eax ; lahf ; add eax, 0xe7505000 ; jmp rax
0x000000000074765f : dec eax ; mov eax, dword ptr [rdi] ; add byte ptr [rsi], cl ; sal ah, cl ; jmp rax
0x000000000074b44f : dec eax ; movsb byte ptr [rdi], byte ptr [rsi] ; or byte ptr [rax], al ; adc dl, dl ; stc ; call qword ptr [rax]
0x0000000000749d77 : dec eax ; or byte ptr [r8], al ; xor al, 0xf8 ; jmp rax
0x000000000073fb17 : dec eax ; or eax, dword ptr [rip - 0x1b4f5000] ; jmp rax
0x0000000000740eff : dec eax ; outsd dx, dword ptr [rsi] ; add eax, 0xe6516000 ; jmp rax
0x00000000007409a7 : dec eax ; pop rax ; add eax, 0xe5fd9000 ; jmp rax
0x000000000073d9e7 : dec eax ; pop rsp ; add al, 0 ; nop ; sub ah, cl ; jmp rax
0x000000000073d767 : dec eax ; push rcx ; add al, 0 ; adc byte ptr [rcx], cl ; call qword ptr [rax]
0x0000000000740887 : dec eax ; push rcx ; add eax, 0xe5d53000 ; jmp rax
0x000000000073d807 : dec eax ; push rsp ; add al, 0 ; adc byte ptr [rbx], 0xe1 ; jmp rax
0x0000000000741787 : dec eax ; pushfq ; add eax, 0xe7405000 ; jmp rax
0x000000000073ed5f : dec eax ; ret
0x000000000074816f : dec eax ; ret 7
0x000000000073eed7 : dec eax ; retf
0x000000000073bdff : dec eax ; rol byte ptr [rbx], cl ; add al, dh ; test esi, ebx ; jmp rax
0x0000000000745497 : dec eax ; rol dword ptr [rsi], cl ; add al, al ; ja 0x745496 ; jmp rax
0x00000000007461bf : dec eax ; sub byte ptr [rdi], al ; add byte ptr [rax - 0x59], al ; jmp rax
0x000000000073cf67 : dec eax ; sub eax, dword ptr [rax + rax] ; push rax ; ja 0x73cf57 ; jmp rax
0x00000000007415f7 : dec eax ; xchg eax, ebp ; add eax, 0xe7343000 ; jmp rax
0x000000000074151f : dec eax ; xchg eax, ecx ; add eax, 0xe715f000 ; jmp rax
0x0000000000733d47 : dec eax ; xchg eax, edx ; add al, 0 ; adc cl, ch ; jmp rax
0x0000000000741557 : dec eax ; xchg eax, edx ; add eax, 0xe71a8000 ; jmp rax
0x00000000007517a9 : dec ebp ; jmp qword ptr [rbx]
0x000000000074ba51 : dec ebx ; call rax
0x000000000040bd00 : dec ecx ; ret
0x000000000074ea71 : dec esp ; call qword ptr [rdx]
0x00000000004a8459 : dec qword ptr [rax - 0x75] ; push rbp ; mov byte ptr [rax + 1], cl ; retf -0x7cb8
0x00000000006a96a5 : dec qword ptr [rcx - 0x7c1a8a32] ; ret
0x00000000007478cd : div ah ; call qword ptr [rax]
0x00000000007dc581 : div byte ptr [rax] ; add bh, ch ; syscall
0x000000000068e123 : div byte ptr [rbp + 0x20] ; mov eax, 0xffffffff ; ret
0x00000000006a3312 : div byte ptr [rbp + 0xb] ; ret
0x000000000056fe71 : div byte ptr [rbp + 4] ; ret
0x00000000006cb682 : div byte ptr [rbp + rax + 0x48] ; lea eax, dword ptr [rsi + rdi*8] ; ret
0x000000000052b1f2 : div byte ptr [rbp + rax + 0x48] ; mov eax, dword ptr [rsi + 0x20] ; ret
0x000000000052b102 : div byte ptr [rbp + rax + 0x48] ; mov eax, dword ptr [rsi + 0x28] ; ret
0x00000000006a0ef8 : div byte ptr [rbp + rdx + 0x48] ; add esp, 8 ; ret
0x000000000069f67d : div byte ptr [rbp - 0x10] ; mov eax, 1 ; ret
0x0000000000549546 : div byte ptr [rcx - 0x76b7ffe8] ; ret
0x000000000053ec15 : div byte ptr [rcx] ; dec dword ptr [rax + 0x39] ; shl dword ptr [rsi - 0x77], 0x74 ; ret
0x00000000006c4665 : div byte ptr [rcx] ; ror byte ptr [rcx - 0x77], cl ; ret
0x0000000000576367 : div byte ptr [rdi + rcx*2 - 0x18] ; ret
0x0000000000660431 : div byte ptr [rsi + rcx + 0x48] ; mov edi, dword ptr [rdi + 0x50] ; call rdx
0x000000000054db22 : div byte ptr [rsp + rax + 0x48] ; mov eax, dword ptr [rsi] ; ret
0x0000000000748c3d : div dh ; jmp qword ptr [rax]
0x00000000006ce072 : div dl ; xor eax, dword ptr [rax] ; ret
0x00000000005b38e8 : div dword ptr [rcx] ; ror byte ptr [rax - 0x77], 0xd3 ; call 0x67fb5a
0x00000000005b2fc4 : div dword ptr [rcx] ; shr al, 0x86 ; retf
0x00000000006d42f6 : div dword ptr [rdi + rax - 0x18] ; ret 0xd2f0
0x0000000000467775 : div dword ptr [rip - 0x76b7ffde] ; ret
0x00000000007bbf19 : div eax ; call qword ptr [rax]
0x00000000007bbd61 : div eax ; call qword ptr [rbx]
0x00000000007bbe61 : div eax ; call qword ptr [rdi]
0x00000000005b95e0 : div ebx ; dec dword ptr [rax - 0x77] ; ret
0x0000000000508652 : div ecx ; mov eax, edx ; pop rbx ; ret
0x000000000043db73 : div esi ; mov ecx, edx ; mov eax, ecx ; nop ; leave ; ret
0x00000000006a1868 : div esi ; mov rax, rdx ; ret
0x00000000006a1828 : div esi ; ret
0x00000000005b95df : div r11 ; dec dword ptr [rax - 0x77] ; ret
0x00000000006a1867 : div rsi ; mov rax, rdx ; ret
0x00000000006a1827 : div rsi ; ret
0x00000000007478cc : div spl ; call qword ptr [rax]
0x00000000006825a3 : divps xmm0, xmm1 ; add rsp, 0x38 ; ret
0x0000000000421938 : divps xmm0, xmmword ptr [rax] ; call rax
0x00000000006825a2 : divsd xmm0, xmm1 ; add rsp, 0x38 ; ret
0x00000000007b5ce8 : enter -0x1097, -1 ; retf 0
0x000000000068d880 : enter -0x128b, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000696323 : enter -0x1509, 1 ; retf -0x63f
0x00000000005584e5 : enter -0x16, 0x48 ; mov edi, ebx ; call 0x6d4748
0x0000000000662c83 : enter -0x1d09, 0x29 ; rcl ecx, 1 ; jmp 0xffffffff8baef697
0x00000000006c96d0 : enter -0x1d3f, 0x18 ; or eax, edx ; ret
0x0000000000736624 : enter -0x2e36, -1 ; mov eax, 0x3a000225 ; retf
0x00000000006aecbb : enter -0x2e77, -0x77 ; ret 0x5be8
0x0000000000467899 : enter -0x2fff, -0x77 ; ret 0xeac1
0x00000000006a42f5 : enter -0x3177, -0x77 ; retf -0x193f
0x000000000049e156 : enter -0x33, -1 ; leave ; ret
0x00000000007c6803 : enter -0x37e9, 5 ; retf 0x2a
0x000000000042437b : enter -0x38b8, 0x40 ; or al, ah ; retf 0x9f
0x00000000006940be : enter -0x38d7, -0x77 ; clc ; ret
0x00000000004ce04a : enter -0x39c7, 0x7d ; adc al, 0xbe ; ret 9
0x000000000069d67e : enter -0x3f2f, -0x77 ; or byte ptr [rax + 0x39], cl ; retf -0x188b
0x000000000040c154 : enter -0x3f7b, -0x70 ; pop rbp ; ret
0x00000000006a4a7b : enter -0x3fcf, 0x66 ; movaps xmm0, xmm1 ; ret
0x0000000000621ebc : enter -0x49f1, 0x45 ; mov al, 0x88 ; fxch st(0), st(1) ; ret
0x0000000000554457 : enter -0x5f5e, 0 ; call 0x6c06d6
0x00000000006632e2 : enter -0x6415, 0x29 ; ret 0x348
0x000000000066b50a : enter -0x6f77, -8 ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004f83e0 : enter -0x72b4, 0x65 ; or byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000059c17e : enter -0x72b8, 0x5d ; or byte ptr [rax - 0x77], cl ; retf -0x76b4
0x0000000000599b24 : enter -0x72b8, 0x5f ; add dword ptr [rax + 0x29], ecx ; retf
0x00000000005199cd : enter -0x72b8, 0x6b ; or byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000062525a : enter -0x72b8, 0x79 ; add ecx, dword ptr [rax + 0x63] ; retf 0x3948
0x00000000006bf646 : enter -0x72b8, 4 ; or byte ptr [rax - 0x73], 4 ; ret 0x8b48
0x000000000068decc : enter -0x73f1, -0x51 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; retf
0x000000000043c6de : enter -0x74b8, 0x14 ; ret 0x8b48
0x00000000005079d3 : enter -0x74b8, 0x1c ; ret 0x1aeb
0x00000000005096cf : enter -0x74b8, 0x1c ; ret 0x8548
0x000000000048e3b4 : enter -0x74b8, 0x1c ; ret 0xb60f
0x000000000040cf21 : enter -0x74b8, 0x40 ; or byte ptr [rax + 0x39], cl ; ret 0x2675
0x000000000040ef87 : enter -0x74b8, 0x55 ; call 0xffffffffc39e4b28
0x000000000040f0f1 : enter -0x74b8, 0x55 ; call 0xffffffffc39e4c92
0x000000000041eaa7 : enter -0x74b8, 0x55 ; call 0xffffffffc39f4648
0x000000000041ec11 : enter -0x74b8, 0x55 ; call 0xffffffffc39f47b2
0x000000000042da6d : enter -0x74b8, 0x55 ; call 0xffffffffc3a0360e
0x000000000042dbd7 : enter -0x74b8, 0x55 ; call 0xffffffffc3a03778
0x000000000043ed3a : enter -0x74b8, 0x55 ; fmul dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000614d7c : enter -0x74b8, 0x55 ; fmul dword ptr [rax - 0x7d] ; ret 0x4819
0x000000000047b8ce : enter -0x74b8, 0x55 ; fmul dword ptr [rax - 0x7d] ; ret 0x4d08
0x0000000000480384 : enter -0x74b8, 4 ; ret 0x8548
0x000000000043b8d1 : enter -0x74b8, 4 ; ret 0x8948
0x00000000004e8b85 : enter -0x74b8, 4 ; ret 0x8b4c
0x0000000000483787 : enter -0x74b8, 4 ; ret 0xb60f
0x000000000044d25e : enter -0x76b4, 0x60 ; adc al, ch ; retf 0x2342
0x0000000000440b2b : enter -0x76b8, -0x39 ; call 0x43d582
0x0000000000440b2a : enter -0x76b8, -0x39 ; call 0x43d583
0x00000000006a3048 : enter -0x76b8, -0x7d ; add dword ptr [rax], eax ; add cl, ch ; retf
0x00000000006d0a5b : enter -0x77c0, 0x34 ; add al, byte ptr [rcx + rcx*4 - 0x40] ; ret
0x00000000004a0623 : enter -0x7cb8, -0x3c ; pop rbx ; pop rbp ; ret
0x00000000004b1c78 : enter -0x7cb8, -0x3c ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000722d63 : enter -0x8ed, -0x68 ; call qword ptr [rcx]
0x00000000006c7544 : enter -3, -1 ; add rsp, 8 ; ret
0x00000000005c8810 : enter -4, -1 ; call rax
0x00000000005c86c8 : enter -4, -1 ; call rbx
0x00000000005c8685 : enter -4, -1 ; mov rdi, rbx ; call rax
0x000000000043492c : enter -6, -1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004368bb : enter -9, -1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000006c6a5f : enter 0, 0 ; add byte ptr [rax + 0x39], cl ; retf -0x388b
0x0000000000528496 : enter 0, 0 ; mov rdi, rax ; call 0x6d4749
0x00000000006ce24a : enter 0, 0 ; ret
0x000000000051345f : enter 0, 0 ; test al, 1 ; jne 0x513471 ; jmp rax
0x00000000007f4c3c : enter 0x10, -0x1b ; add al, 6 ; ret
0x00000000007dfa25 : enter 0x103, -0x4e ; add cl, byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x000000000063695c : enter 0x12, 0 ; add byte ptr [rdi - 0x18], dh ; retf 0x4ab
0x0000000000533273 : enter 0x14, -0x17 ; retf
0x00000000007d91f4 : enter 0x17, -0x44 ; syscall
0x0000000000734670 : enter 0x18c, 0 ; ret 0xffcd
0x00000000007eb553 : enter 0x1c, -0x77 ; sbb al, 6 ; ret
0x00000000005e6f20 : enter 0x22, 0 ; leave ; ret
0x0000000000736dc8 : enter 0x247, 0 ; retf -0x2dc7
0x00000000006b22f6 : enter 0x2948, -0x30 ; mov qword ptr [rax - 8], rsi ; pop rbx ; ret
0x00000000007380b8 : enter 0x2a2, 0 ; ret 0xd498
0x00000000007f48a2 : enter 0x2d7e, -0x3b ; jle 0x7f48dc ; ret 0x2f7e
0x0000000000738ba8 : enter 0x2d8, 0 ; retf -0x292f
0x00000000007df311 : enter 0x301, -0x26 ; or byte ptr [rax], al ; retf
0x00000000007e6166 : enter 0x30c, -0x28 ; or al, 6 ; retf 0xf
0x00000000006a6055 : enter 0x35, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000007f6f6a : enter 0x38, -0x3a ; sldt word ptr [rax] ; add cl, cl ; syscall
0x000000000068797e : enter 0x3948, -0x29 ; jne 0x687976 ; ret
0x0000000000688564 : enter 0x394c, -0x39 ; jne 0x688546 ; ret
0x000000000062561c : enter 0x3dd2, 0 ; call rax
0x00000000006d1252 : enter 0x40c6, 0xa ; xor dword ptr [rcx - 0x77], ecx ; ret 0xf889
0x000000000073cb90 : enter 0x416, 0 ; push rax ; in eax, -0x21 ; jmp rax
0x000000000073ccd0 : enter 0x41e, 0 ; xor byte ptr [rdx], 0xe0 ; jmp rax
0x000000000073cf68 : enter 0x42b, 0 ; push rax ; ja 0x73cf56 ; jmp rax
0x000000000073d348 : enter 0x43d, 0 ; nop ; mov ch, 0xe0 ; jmp rax
0x000000000073d768 : enter 0x451, 0 ; adc byte ptr [rcx], cl ; call qword ptr [rax]
0x000000000073d808 : enter 0x454, 0 ; adc byte ptr [rbx], 0xe1 ; jmp rax
0x000000000043abe5 : enter 0x458b, -4 ; nop ; leave ; ret
0x000000000073d9e8 : enter 0x45c, 0 ; nop ; sub ah, cl ; jmp rax
0x0000000000617b39 : enter 0x4808, 0x39 ; ret 0x775
0x0000000000733d48 : enter 0x492, 0 ; adc cl, ch ; jmp rax
0x0000000000740688 : enter 0x549, 0 ; mov bl, 0xe5 ; jmp rax
0x00000000004af01c : enter 0x5538, 0 ; call rax
0x0000000000740b30 : enter 0x560, 0 ; and al, 0xe6 ; jmp rax
0x00000000005870ad : enter 0x57f, -0x73 ; push rcx ; add dword ptr [rcx], ebp ; ret 0xc189
0x0000000000741558 : enter 0x592, 0 ; sbb byte ptr [rdx], 0xe7 ; jmp rax
0x00000000007415f8 : enter 0x595, 0 ; xor byte ptr [rdi], dh ; jmp rax
0x0000000000741860 : enter 0x5a0, 0 ; and byte ptr [rdx - 0x19], dl ; jmp rax
0x0000000000441e94 : enter 0x5c09, 0 ; call rax
0x00000000004364a4 : enter 0x5cc3, 0 ; call rax
0x00000000006b35cf : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000004048fa : enter 0x5d5b, 0x41 ; pop rsp ; ret
0x000000000040ec14 : enter 0x5f3c, 0 ; call rax
0x00000000007441a0 : enter 0x676, 0 ; mov al, 0x89 ; in eax, dx ; jmp rax
0x00000000007451e0 : enter 0x6c3, 0 ; cmp bpl, dil ; push rax ; ret
0x0000000000745590 : enter 0x6d7, 0 ; mov al, 0x84 ; out dx, eax ; jmp rax
0x00000000007d341a : enter 0x7213, -0x47 ; and al, byte ptr [rax] ; retf
0x00000000007461c0 : enter 0x728, 0 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp rax
0x00000000007466d0 : enter 0x741, 0 ; and byte ptr [rbp - 0xd], dl ; jmp rax
0x0000000000746f40 : enter 0x76d, 0 ; hlt ; jmp rax
0x0000000000686d56 : enter 0x777c, -0x77 ; ret 0xca29
0x00000000007472f8 : enter 0x77e, 0 ; retf -0xb49
0x00000000007473e0 : enter 0x782, 0 ; rol al, 1 ; hlt ; jmp rax
0x0000000000747cf0 : enter 0x7aa, 0 ; xor byte ptr [rdx - 0xb], bl ; jmp rax
0x00000000007491a8 : enter 0x80b, 0 ; and byte ptr [rcx - 9], dl ; jmp rax
0x00000000007492e0 : enter 0x811, 0 ; adc byte ptr [rdx - 9], ch ; jmp rax
0x00000000007493d0 : enter 0x815, 0 ; and byte ptr [rcx - 9], dh ; jmp rax
0x0000000000749478 : enter 0x817, 0 ; nop ; jb 0x74947d ; jmp rax
0x0000000000749890 : enter 0x82b, 0 ; mov bl, 0xf7 ; jmp rax
0x0000000000749d78 : enter 0x843, 0 ; xor al, 0xf8 ; jmp rax
0x000000000074a4a8 : enter 0x862, 0 ; sar bh, 1 ; clc ; jmp rax
0x000000000074ab00 : enter 0x87f, 0 ; jo 0x74ab7a ; stc ; jmp rax
0x000000000074b450 : enter 0x8a4, 0 ; adc dl, dl ; stc ; call qword ptr [rax]
0x00000000004737fd : enter 0x8b, 0x29 ; ret 0xd089
0x00000000004737ee : enter 0x8b, 0x39 ; ret 0x147c
0x00000000006a1761 : enter 0x948, -0x10 ; ret
0x00000000006a241c : enter 0x948, -0x30 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000006a26d0 : enter 0x948, -0x30 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000006a206b : enter 0x948, -0x30 ; pop rbx ; ret
0x0000000000668011 : enter 0xd, 0 ; ret
0x00000000006d3861 : enter 0xf41, -0x61 ; ret
0x00000000006d3870 : enter 0xf41, -0x62 ; ret
0x00000000006d3852 : enter 0xf41, -0x63 ; ret
0x00000000006d387f : enter 0xf41, -0x64 ; ret
0x00000000006d388e : enter 0xf41, -0x6b ; ret
0x00000000006d3843 : enter 0xf41, -0x6c ; ret
0x000000000048cf3f : enter 0xf48, 0x47 ; ret 0x8348
0x000000000048cfbf : enter 0xf48, 0x47 ; ret 0x8d48
0x0000000000681c31 : enter 0xf66, 0x28 ; ret 0x8348
0x000000000068282b : enter 0xf66, 0x28 ; ror dword ptr [rax - 0x7d], -0x3c ; ret
0x00000000006a4f83 : enter 0xf66, 0x2e ; retf
0x0000000000681f87 : enter 0xf66, 0x2e ; retf -0x78f1
0x00000000006a4c29 : enter 0xf66, 0x2e ; retf -0x79f1
0x00000000006bc567 : enter 0xfc3, 0x1f ; add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x00000000006a52f0 : enter 0xff2, 0x58 ; retf
0x0000000000681d58 : enter 0xff2, 0x5c ; retf 0xff2
0x00000000007352f1 : enter 1, -0x40 ; pop rdi ; iretd ; jmp qword ptr [rax]
0x000000000060b463 : enter 1, 0 ; ret
0x00000000007f0538 : enter 2, -0x60 ; add cl, byte ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000000000777f8d : enter 2, 0x44 ; retf -0x38
0x0000000000777f75 : enter 2, 0x46 ; retf -0x38
0x0000000000777f5d : enter 2, 0x48 ; retf -0x38
0x0000000000777f45 : enter 2, 0x4e ; retf -0x38
0x00000000005af79b : enter 3, 0 ; ret
0x0000000000797f5d : enter 4, -0x7c ; ret 0xffe5
0x00000000005b88c7 : enter 4, 0 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000007db9a6 : enter 5, -0x15 ; add al, byte ptr [rbx] ; ret
0x00000000007420c9 : enter 5, 0x60 ; sbb ebp, eax ; call rax
0x00000000005b02ac : enter 6, 0 ; ret
0x00000000007b7fa5 : enter 6, 0x78 ; sbb al, dh ; jmp rdi
0x00000000007482d9 : enter 7, -0x40 ; retf -0xb
0x00000000007482d1 : enter 7, -0x60 ; retf -0xb
0x00000000007482c9 : enter 7, -0x70 ; retf -0xb
0x00000000007482c1 : enter 7, -0x80 ; retf -0xb
0x00000000007482b1 : enter 7, 0 ; retf -0xb
0x00000000005f7f5f : enter 7, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000007482b9 : enter 7, 0x70 ; retf -0xb
0x0000000000647e99 : enter 8, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000006b2cec : enter 9, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000006b2d34 : enter 9, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000005f9024 : enter 9, 0 ; pop rbx ; pop rbp ; ret
0x00000000006b2f1f : enter 9, 0 ; ret
0x00000000006c90f3 : fadd dword ptr [r11 - 0x7bf00006] ; ret 1
0x00000000006cec99 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000050f9dc : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000758fc5 : fadd dword ptr [rax] ; add byte ptr [rax], ch ; cmp dl, al ; call qword ptr [rdi]
0x000000000075903d : fadd dword ptr [rax] ; add byte ptr [rdx], bl ; cmp edx, eax ; call rsp
0x00000000005f505c : fadd dword ptr [rax] ; call rax
0x00000000006ad9f9 : fadd dword ptr [rbx + 0x14101c0] ; ret 0x634d
0x00000000006c90f4 : fadd dword ptr [rbx - 0x7bf00006] ; ret 1
0x000000000069c865 : fadd dword ptr [rcx + 0x29] ; retf 0x148
0x00000000004f5fea : fadd dword ptr [rcx + 0x39] ; ret
0x0000000000664a47 : fadd dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x00000000007f6904 : fadd dword ptr [rcx + 9] ; ret 0x308
0x000000000069cec8 : fadd dword ptr [rcx - 0x3f] ; ret 0x4505
0x0000000000676086 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000006760fc : fadd dword ptr [rcx] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000676063 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; ret
0x0000000000666b60 : fadd dword ptr [rdi + rcx - 0x49] ; retf
0x0000000000748691 : fadd dword ptr [rdi] ; add byte ptr [rax], dh ; or dh, dh ; call qword ptr [rax]
0x000000000065320c : fadd dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005bf083 : fadd dword ptr [rdx] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000005af67c : fadd dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000000005d502e : fadd dword ptr [rdx] ; call rax
0x00000000007b0568 : fadd dword ptr [rdx] ; out dx, al ; call qword ptr [rdx]
0x00000000007443c4 : fadd dword ptr [rdx] ; out dx, al ; call rax
0x00000000007a8fa5 : fadd dword ptr [rip - 0x13976800] ; call qword ptr [rcx]
0x00000000007ac478 : fadd dword ptr [rsi - 0x13] ; call qword ptr [rbx]
0x00000000007455d1 : fadd dword ptr [rsi] ; add al, al ; xchg edi, ebp ; jmp qword ptr [rax]
0x00000000007b8f7d : fadd dword ptr [rsi] ; add byte ptr [rax], dh ; je 0x7b8f79 ; call qword ptr [rax]
0x000000000068c264 : fadd dword ptr [rsp + rax - 0x14321500] ; retf
0x00000000005d4ca3 : fadd qword ptr [r10] ; call rax
0x0000000000753be4 : fadd qword ptr [rax + rax - 0x3123e800] ; call rdi
0x00000000005e64f0 : fadd qword ptr [rax - 0x76b7fff3] ; ret 0x8948
0x00000000006b0918 : fadd qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x000000000064367b : fadd qword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006436c3 : fadd qword ptr [rbx] ; add byte ptr [rax - 0x7d], cl ; cli ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000007f5099 : fadd qword ptr [rbx] ; add byte ptr [rdx + 0x503], ch ; ret 0x503
0x00000000007d731d : fadd qword ptr [rcx] ; retf 0x10
0x000000000077930d : fadd qword ptr [rdx] ; add al, ah ; ret 0xffdc
0x000000000051a6a8 : fadd qword ptr [rdx] ; add byte ptr [rax], al ; mov esi, 1 ; call rax
0x0000000000738c81 : fadd qword ptr [rdx] ; add byte ptr [rax], ch ; jrcxz 0x738c63 ; call rax
0x00000000005d4ca4 : fadd qword ptr [rdx] ; call rax
0x00000000007d1d58 : fadd qword ptr [rip + 0xb03a701] ; retf
0x0000000000742411 : fadd qword ptr [rip - 0x173e2000] ; call qword ptr [rax]
0x00000000007ac460 : fadd qword ptr [rsi - 0x13] ; call qword ptr [rbx]
0x0000000000722d13 : fadd qword ptr [rsi] ; retf
0x0000000000517b74 : fadd st(0) ; add byte ptr [rax + 0xf], r9b ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000789a98 : fadd st(1) ; loopne 0x789a9f ; retf
0x00000000006a5b4b : fadd st(3) ; nop dword ptr [rax] ; fstp st(1) ; fchs ; ret
0x00000000006a59a5 : faddp st(1) ; add rsp, 0x48 ; ret
0x0000000000684c2a : faddp st(1) ; fmul dword ptr [rip + 0xa3ce2] ; ret
0x0000000000684024 : faddp st(1) ; fscale ; fstp st(1) ; ret
0x0000000000547f2d : faddp st(4) ; add byte ptr [r8], al ; setne al ; ret
0x00000000007227b0 : fbld dword ptr [rax - 0x11] ; ret
0x00000000005aa35d : fbld dword ptr [rbx - 0x76b7ffee] ; ret
0x000000000059b017 : fbld dword ptr [rdx + 0xe] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000451b8c : fbld dword ptr [rdx] ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000005a84c3 : fbstp dword ptr [rbp - 0x40] ; call 0x6d4745
0x000000000062d5a9 : fbstp dword ptr [rcx] ; call 0x4d982d
0x000000000062d5a8 : fbstp dword ptr [rcx] ; call 0x4d982e
0x000000000064b061 : fbstp dword ptr [rcx] ; rol dh, 0x45 ; ret 0xe801
0x00000000006be67f : fbstp dword ptr [rcx] ; ror byte ptr [rax - 0x77], 0xeb ; call 0x6aa8e8
0x000000000054067b : fbstp dword ptr [rcx] ; sar byte ptr [rbx + 1], 0xe8 ; retf 0x13f4
0x000000000059312a : fbstp dword ptr [rcx] ; shr al, 0x20 ; retf 0xe
0x0000000000643820 : fbstp dword ptr [rcx] ; shr al, 0x2a ; ret
0x00000000005c3001 : fbstp dword ptr [rcx] ; shr al, 0x49 ; retf
0x00000000005730f2 : fbstp dword ptr [rcx] ; shr al, 0x58 ; retf 0x10
0x00000000006387ef : fbstp dword ptr [rcx] ; shr al, 0x5b ; jae 0x638803 ; add cl, ch ; ret
0x00000000006437e7 : fbstp dword ptr [rcx] ; shr al, 0x63 ; ret
0x00000000005438e0 : fbstp dword ptr [rcx] ; shr al, 0x6a ; ret 0x13
0x00000000005938e0 : fbstp dword ptr [rcx] ; shr al, 0x6a ; ret 0xe
0x000000000052a960 : fbstp dword ptr [rcx] ; shr al, 0x78 ; call qword ptr [rdi]
0x00000000005c38e5 : fbstp dword ptr [rcx] ; shr al, 0x79 ; ret 0xb
0x00000000005c30ca : fbstp dword ptr [rcx] ; shr al, 0x94 ; retf 0xb
0x0000000000593086 : fbstp dword ptr [rcx] ; shr al, 0xc4 ; retf 0xe
0x000000000054fb7a : fbstp dword ptr [rcx] ; shr al, 0xd0 ; call qword ptr [rdx]
0x00000000005a2f7a : fbstp dword ptr [rcx] ; shr al, 0xd0 ; retf
0x0000000000580b75 : fbstp dword ptr [rcx] ; shr al, 0xd5 ; out dx, eax ; verw cx ; ret 0xfff7
0x00000000005b2f58 : fbstp dword ptr [rcx] ; shr al, 0xf2 ; retf
0x00000000006a5e58 : fchs ; add rsp, 0x28 ; ret
0x0000000000684b24 : fchs ; add rsp, 0x38 ; ret
0x00000000006a5a88 : fchs ; add rsp, 0x48 ; ret
0x000000000078a739 : fchs ; jmp qword ptr [rax]
0x00000000006a552b : fchs ; mov dword ptr [rax + 0x10], edx ; fstp xword ptr [rax] ; ret
0x00000000006a5b52 : fchs ; ret
0x000000000053216d : fcmovb st(0), st(3) ; nop ; ret
0x0000000000724ea8 : fcmove st(0), st(3) ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, bl ; retf
0x0000000000724ee0 : fcmove st(0), st(3) ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; retf
0x000000000073570d : fcmove st(0), st(7) ; call rax
0x0000000000757901 : fcmove st(0), st(7) ; jmp qword ptr [rbx]
0x000000000066c03c : fcmovnb st(0), st(3) ; nop ; ret
0x000000000073678d : fcmovnbe st(0), st(1) ; jmp rax
0x0000000000753b79 : fcmovne st(0), st(6) ; call rsp
0x00000000007579b1 : fcmovne st(0), st(7) ; jmp rdi
0x000000000070699b : fcmovnu st(0), st(4) ; fstp st(6) ; jmp qword ptr [rdx]
0x0000000000785109 : fcmovnu st(0), st(7) ; jmp rcx
0x00000000006a57b9 : fcmovu st(0), st(6) ; leave ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000757b38 : fcmovu st(0), st(7) ; iretd ; call qword ptr [rbx]
0x0000000000512317 : fcom dword ptr [r14] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040d279 : fcom dword ptr [rax + 0x18c48348] ; pop rbx ; pop rbp ; ret
0x0000000000491739 : fcom dword ptr [rax + 0x28c48348] ; pop rbx ; pop rbp ; ret
0x00000000007902e8 : fcom dword ptr [rax - 0x1e] ; jmp qword ptr [rdx]
0x00000000007a7ba8 : fcom dword ptr [rax] ; in al, dx ; call qword ptr [rbx]
0x00000000004c50e0 : fcom dword ptr [rbx] ; call rax
0x00000000005b6e72 : fcom dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040d40c : fcom dword ptr [rdi + rbx*2] ; call rax
0x00000000004850b0 : fcom dword ptr [rdi] ; call rax
0x000000000056b464 : fcom dword ptr [rdx - 0x76b7ffea] ; ret
0x000000000062cb43 : fcom dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000000007e5ee5 : fcom dword ptr [rdx] ; add byte ptr [rdi + rcx - 0x62fffffb], cl ; syscall
0x0000000000512318 : fcom dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007d9c73 : fcom dword ptr [rsi] ; or ebp, esi ; sub al, 3 ; call qword ptr [rsi]
0x0000000000413250 : fcom qword ptr [r8 + 0x38c48348] ; pop rbx ; pop rbp ; ret
0x0000000000413251 : fcom qword ptr [rax + 0x38c48348] ; pop rbx ; pop rbp ; ret
0x00000000005b6a52 : fcom qword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005036d0 : fcom qword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000735e95 : fcom st(0), st(0) ; call rax
0x000000000075d881 : fcom st(0), st(1) ; jmp rdi
0x0000000000738be5 : fcom st(0), st(6) ; jmp qword ptr [rax]
0x0000000000407564 : fcom st(1) ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000742310 : fcom st(5) ; add eax, 0xe8632000 ; call qword ptr [rax]
0x00000000007234e9 : fcomi st(6) ; ret
0x000000000046509b : fcomp dword ptr [r9] ; call rax
0x00000000007a7ed8 : fcomp dword ptr [rax] ; in al, dx ; call qword ptr [rdi]
0x000000000042500e : fcomp dword ptr [rbp] ; call rax
0x0000000000527baf : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000508491 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000006cd459 : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000682044 : fcomp dword ptr [rcx + 9] ; add byte ptr [rsi + 0xf], ah ; push rsp ; retf 0xf66
0x000000000046509c : fcomp dword ptr [rcx] ; call rax
0x0000000000737218 : fcomp dword ptr [rdx + rax] ; ret 0xffd2
0x00000000004550a8 : fcomp dword ptr [rdx] ; call rax
0x0000000000415042 : fcomp dword ptr [rsi] ; call rax
0x00000000004b5b8a : fcomp qword ptr [rax] ; cli ; dec ecx ; ret
0x0000000000424bfc : fcomp qword ptr [rbp] ; call rax
0x0000000000444c08 : fcomp qword ptr [rbx] ; call rax
0x0000000000761724 : fcomp qword ptr [rdi + 1] ; add byte ptr [rbp + rax - 0x2c], ah ; call qword ptr [rax]
0x00000000004c2aa1 : fcomp qword ptr [rdi] ; add cl, cl ; ret
0x0000000000526a71 : fcomp qword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005108f7 : fcomp qword ptr [rdx] ; add byte ptr [rbp + rcx*4 + 0x68], cl ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000539c72 : fcomp qword ptr [rsi + 0x14] ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0x19aa
0x00000000006d69f9 : fcomp qword ptr [rsi + 0x25b1075b] ; retf -0x365b
0x0000000000769899 : fcomp st(0), st(0) ; call qword ptr [rdx]
0x0000000000769999 : fcomp st(0), st(0) ; jmp qword ptr [rcx]
0x00000000007591e4 : fcomp st(0), st(2) ; add byte ptr [rax], al ; rol byte ptr [rcx - 0x30], 1 ; call qword ptr [rbx]
0x0000000000737b65 : fcomp st(0), st(3) ; jmp rax
0x0000000000738c25 : fcomp st(0), st(6) ; jmp qword ptr [rax]
0x0000000000757af8 : fcomp st(0), st(7) ; iretd ; call qword ptr [rcx]
0x00000000006a5d39 : fcomp st(1) ; loopne 0x6a5d8c ; add esp, 0x38 ; ret
0x00000000006a5db9 : fcomp st(1) ; loopne 0x6a5e0c ; add esp, 0x38 ; ret
0x0000000000684801 : fcomp st(1) ; ret 0x7e72
0x00000000007aa8d8 : fcomp st(2) ; in al, dx ; jmp qword ptr [rcx]
0x00000000006a5e49 : fcomp st(3) ; insb byte ptr [rdi], dx ; and al, 0x30 ; add rsp, 0x28 ; ret
0x00000000006a5b47 : fcomp st(3) ; insb byte ptr [rdi], dx ; and al, 0xd8 ; ret
0x00000000006a5b43 : fcomp st(3) ; jl 0x6a5b74 ; fcomp st(3) ; insb byte ptr [rdi], dx ; and al, 0xd8 ; ret
0x00000000007821a9 : fcomp st(6) ; call qword ptr [rbx]
0x00000000007822d9 : fcomp st(6) ; call qword ptr [rdi]
0x0000000000782471 : fcomp st(6) ; jmp qword ptr [rcx]
0x0000000000782181 : fcomp st(6) ; jmp qword ptr [rdi]
0x00000000004231fd : fcompi st(6) ; pop rbp ; add bh, bh ; ror cl, 1 ; ret
0x00000000007499e5 : fcompi st(7) ; call rax
0x0000000000669037 : fcos ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000684298 : fcos ; add rsp, 0x38 ; ret
0x0000000000739e6e : fcos ; mov al, 0x32 ; add eax, dword ptr [rax] ; call 0xffffffffe17377d8
0x0000000000671625 : fcos ; mov edi, r13d ; call 0x6ce0f7
0x000000000066ae47 : fcos ; mov qword ptr [rbp - 8], rax ; leave ; ret
0x0000000000668c6a : fcos ; nop dword ptr [rax] ; ret
0x0000000000668a98 : fcos ; nop word ptr [rax + rax] ; ret
0x000000000076acba : fcos ; ret 0
0x000000000076ccc2 : fcos ; retf 1
0x000000000073a00e : fcos ; sbb byte ptr [rbx], bh ; add eax, dword ptr [rax] ; pop rsp ; ret
0x0000000000739d86 : fcos ; shr byte ptr [rip + 0x1b360003], 0xd9 ; jmp rax
0x0000000000688bff : fdiv dword ptr [rbp + 0x40] ; call rax
0x00000000006874f4 : fdiv dword ptr [rbp + 0x46] ; call rax
0x000000000057000e : fdiv dword ptr [rbp + 0x47] ; call r12
0x00000000005702c3 : fdiv dword ptr [rbp + 0x4a] ; call r12
0x0000000000773bc8 : fdiv dword ptr [rbx - 0x25] ; jmp qword ptr [rdx]
0x00000000006bef0a : fdiv dword ptr [rcx] ; ror byte ptr [rax + 0x63], cl ; ret
0x00000000006aa4a1 : fdiv dword ptr [rcx] ; shr bl, cl ; retf 0x2e66
0x00000000006847d7 : fdiv dword ptr [rdi + 0xe] ; fsin ; add rsp, 0x38 ; ret
0x000000000051601e : fdiv dword ptr [rdx - 0x76b7ffea] ; ret
0x000000000054c576 : fdiv dword ptr [rip - 0x76b7ffed] ; ret
0x000000000043c196 : fdiv qword ptr [r14 + rax - 0x7d] ; cld ; add ebx, ebp ; ret
0x000000000049c504 : fdiv qword ptr [rax + rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000005503f6 : fdiv qword ptr [rbp + 0x11] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000550716 : fdiv qword ptr [rbp + 0x12] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005597b7 : fdiv qword ptr [rbp + 5] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000068151c : fdiv qword ptr [rbp - 0x1d] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000792ae4 : fdiv qword ptr [rbx + 4] ; add byte ptr [rbp + rax*8 - 0x1d], dh ; jmp qword ptr [rdx]
0x0000000000786be4 : fdiv qword ptr [rbx + rax - 0x20020800] ; jmp qword ptr [rdi]
0x00000000007388e4 : fdiv qword ptr [rdi - 0x2a] ; lcall ptr [rax] ; retf
0x00000000007629e4 : fdiv qword ptr [rdx + 1] ; add byte ptr [rcx + rbx*4 - 0x2c], bl ; jmp rax
0x00000000007b6be4 : fdiv qword ptr [rsi + rax - 0x105a0800] ; jmp rdx
0x000000000043c197 : fdiv qword ptr [rsi + rax - 0x7d] ; cld ; add ebx, ebp ; ret
0x000000000074a3ad : fdiv st(0), st(0) ; jmp rax
0x00000000007ab224 : fdiv st(2), st(0) ; add eax, 0xecf71800 ; jmp qword ptr [rdi]
0x000000000066b4aa : fdiv st(7), st(0) ; dec dword ptr [rax - 0x77] ; ret
0x00000000004d21e9 : fdiv st(7), st(0) ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000073a70e : fdiv st(7), st(0) ; or byte ptr [rdi + 3], bl ; add al, ah ; cmp ebx, esp ; jmp qword ptr [rax]
0x0000000000776b82 : fdiv st(7), st(0) ; retf 1
0x00000000004b95cf : fdivp st(2) ; dec ecx ; ret
0x000000000055369f : fdivp st(3) ; dec dword ptr [rax - 0x77] ; ret
0x00000000006451f6 : fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret
0x00000000004d1f6a : fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000449081 : fdivp st(7) ; dec ecx ; ret
0x000000000073bd0e : fdivp st(7) ; mov eax, 0xa00003ce ; jp 0x73bcfe ; call rax
0x000000000073c04e : fdivp st(7) ; mov eax, 0xd00003e2 ; in eax, -0x22 ; call rax
0x000000000073c146 : fdivp st(7) ; nop ; out 3, al ; add al, dl ; neg dh ; jmp rax
0x000000000073bae6 : fdivp st(7) ; nop ; ret 3
0x000000000073c0be : fdivp st(7) ; or ah, ah ; add eax, dword ptr [rax] ; out -0x22, eax ; jmp qword ptr [rax]
0x000000000073bf6e : fdivp st(7) ; push rax ; fld qword ptr [rbx] ; add byte ptr [rax], ah ; ret
0x000000000073bb16 : fdivp st(7) ; push rax ; ret
0x000000000073bad6 : fdivp st(7) ; push rax ; ret 3
0x0000000000781c1a : fdivp st(7) ; ret
0x000000000077f612 : fdivp st(7) ; ret 0xb
0x000000000073bc66 : fdivp st(7) ; retf
0x000000000077ff62 : fdivp st(7) ; retf 0
0x000000000073bf76 : fdivp st(7) ; test al, 0xdd ; add eax, dword ptr [rax] ; ret
0x00000000005969f4 : fdivr dword ptr [rbx + 0x12] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000777e58 : fdivr dword ptr [rbx - 0x24] ; jmp qword ptr [rdx]
0x00000000005b1c0e : fdivr dword ptr [rcx] ; ret
0x000000000048c5ae : fdivr dword ptr [rcx] ; ret 0x167c
0x000000000048c5d3 : fdivr dword ptr [rcx] ; ret 0x1a7c
0x000000000048c582 : fdivr dword ptr [rcx] ; ret 0x237c
0x00000000004f10b9 : fdivr dword ptr [rcx] ; ret 0x2674
0x00000000005b6514 : fdivr dword ptr [rdx] ; or eax, 0xc215ff00 ; ret
0x00000000006a4743 : fdivr dword ptr [rip + 0x73c53] ; ret
0x00000000005d1b09 : fdivr qword ptr [r9] ; ret 0x840f
0x0000000000757124 : fdivr qword ptr [rcx - 0x357e0000] ; iretd ; call rsp
0x00000000005d1b0a : fdivr qword ptr [rcx] ; ret 0x840f
0x0000000000407c72 : fdivr qword ptr [rsi + 0x27] ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0x2cca
0x00000000007b0118 : fdivr st(4) ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000739956 : fdivr st(7) ; adc byte ptr [rax], bl ; add eax, dword ptr [rax] ; retf -0x2789
0x0000000000769cf2 : fdivr st(7) ; add dword ptr es:[rax], eax ; add byte ptr [rsp + rbp*8], al ; retf 0x7c
0x000000000067641c : fdivr st(7) ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000007392be : fdivr st(7) ; clc ; cli ; add al, byte ptr [rax] ; push rax ; sbb ebx, eax ; jmp qword ptr [rax]
0x000000000043414c : fdivr st(7) ; dec dword ptr [rax - 0x39] ; mov r8b, 0x2c ; ret
0x000000000064575a : fdivr st(7) ; dec dword ptr [rax - 0x7d] ; cli ; sbb dword ptr [rax - 0x77], ecx ; ret
0x00000000005744f9 : fdivr st(7) ; dec dword ptr [rax - 0x7d] ; ret
0x000000000047fc72 : fdivr st(7) ; dec ecx ; ret
0x000000000073969e : fdivr st(7) ; fmul dword ptr [rbx] ; add eax, dword ptr [rax] ; retf -0x27ba
0x00000000007695ca : fdivr st(7) ; fmul dword ptr [rip - 0x2bfc0000] ; ret
0x00000000007397b6 : fdivr st(7) ; loopne 0x7397d3 ; add eax, dword ptr [rax] ; mov ss, word ptr [rdi - 0x28] ; call qword ptr [rax]
0x0000000000739976 : fdivr st(7) ; mov al, 0x18 ; add eax, dword ptr [rax] ; pop rsi ; jp 0x739960 ; jmp rax
0x0000000000739a0e : fdivr st(7) ; mov al, 0x1b ; add eax, dword ptr [rax] ; cwde ; mov bl, al ; jmp rax
0x0000000000739b66 : fdivr st(7) ; mov al, 0x22 ; add eax, dword ptr [rax] ; lodsb al, byte ptr [rsi] ; fstp st(0) ; jmp rax
0x0000000000769402 : fdivr st(7) ; mov bh, 8 ; add byte ptr [rax], al ; add al, 0x64 ; ret
0x00000000007693d2 : fdivr st(7) ; mov dword ptr [rax + rax], ecx ; add byte ptr [rsp], al ; ret 0x7c
0x0000000000739b36 : fdivr st(7) ; mov eax, 0x42000321 ; retf -0x28
0x000000000067f4c4 : fdivr st(7) ; mov eax, ebx ; pop rbx ; ret
0x0000000000769d2a : fdivr st(7) ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax + rdx*2], al ; retf
0x0000000000681477 : fdivr st(7) ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000739a76 : fdivr st(7) ; rcr byte ptr [rip - 0x6b3bfffd], 0xd8 ; jmp rax
0x000000000074ba98 : fdivr st(7) ; retf
0x0000000000769d8a : fdivr st(7) ; rol dword ptr [rax + rax], cl ; add byte ptr [rax + rdi*2], al ; retf
0x0000000000769c0a : fdivr st(7) ; salc ; add al, byte ptr [rax] ; add byte ptr [rsp + rbx], al ; retf 0x7c
0x0000000000739586 : fdivr st(7) ; sub byte ptr [rdi], al ; add eax, dword ptr [rax] ; retf -0x27c5
0x000000000079aee4 : fdivr st(7), st(0) ; add al, 0 ; clc ; add al, 0xe7 ; jmp qword ptr [rcx]
0x0000000000768870 : fdivr st(7), st(0) ; xlatb ; jmp qword ptr [rbx]
0x00000000007bb421 : fdivrp st(0) ; jmp qword ptr [rcx]
0x0000000000684b22 : fdivrp st(1) ; fchs ; add rsp, 0x38 ; ret
0x0000000000684c98 : fdivrp st(1) ; fsubp st(1) ; add rsp, 0x28 ; ret
0x00000000007477b5 : fdivrp st(4) ; call rax
0x000000000074777d : fdivrp st(4) ; jmp qword ptr [rax]
0x00000000006849bc : ffree st(0) ; fincstp ; add rsp, 0x38 ; ret
0x00000000007faee4 : ffree st(2) ; add dword ptr [rax + 0x65d801], eax ; in eax, dx ; ret
0x00000000006d79e8 : fiadd dword ptr [rax + 0x41] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x00000000004055e6 : fiadd dword ptr [rcx + 0x29] ; rol byte ptr [rcx - 1], cl ; ret 0x8545
0x000000000069ccbf : fiadd dword ptr [rcx - 0x3f] ; retf 0x470a
0x00000000005288e6 : fiadd dword ptr [rcx - 0x76b7ffeb] ; ret
0x0000000000578c3b : fiadd dword ptr [rcx - 0x7d] ; ret 0x8501
0x00000000006d94c1 : fiadd dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; cld ; ret
0x00000000007356a1 : fiadd dword ptr [rcx] ; add byte ptr [rdx], al ; leave ; iretd ; call rax
0x00000000007f2d9f : fiadd dword ptr [rcx] ; pop rbp ; jmp qword ptr [rdi]
0x00000000007f2d8a : fiadd dword ptr [rcx] ; pop rdx ; retf 0x627
0x00000000007486c9 : fiadd dword ptr [rdi] ; add byte ptr [rax], dh ; adc esi, esi ; jmp qword ptr [rax]
0x0000000000738c11 : fiadd dword ptr [rdx] ; add dh, dl ; fst st(6) ; jmp rax
0x00000000005d4e7f : fiadd dword ptr [rdx] ; call rax
0x00000000007423d1 : fiadd dword ptr [rip - 0x174f6000] ; call qword ptr [rax]
0x00000000007423c9 : fiadd dword ptr [rip - 0x1750a000] ; call rax
0x00000000006d94c0 : fiadd dword ptr fs:[rcx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; cld ; ret
0x00000000006bb682 : fiadd word ptr [rax - 0x80] ; jmp qword ptr [rax]
0x0000000000735781 : fiadd word ptr [rcx] ; add ah, al ; out 0xcf, al ; call qword ptr [rax]
0x00000000007ede75 : fiadd word ptr [rcx] ; add byte ptr [rax], al ; ret
0x000000000065341d : fiadd word ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000738d01 : fiadd word ptr [rdx] ; add byte ptr [rsi - 0x19], dl ; salc ; jmp rax
0x00000000005d49ec : fiadd word ptr [rdx] ; call rax
0x000000000079f1f8 : ficom dword ptr [rax - 0x18] ; jmp qword ptr [rbx]
0x0000000000581f22 : ficom dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000445672 : ficom dword ptr [rcx + 0x26] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e60b6 : ficom dword ptr [rcx] ; add byte ptr [rcx + 0x511], dh ; ret
0x00000000007d4954 : ficom word ptr [r9] ; add ch, bh ; syscall
0x000000000055aa84 : ficom word ptr [rax + 0x12] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000079f218 : ficom word ptr [rax - 0x18] ; call qword ptr [rcx]
0x00000000004c49ea : ficom word ptr [rbx] ; call rax
0x00000000007d4955 : ficom word ptr [rcx] ; add ch, bh ; syscall
0x0000000000502da8 : ficom word ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004ec633 : ficom word ptr [rip - 0x70410000] ; ret 0x6e
0x000000000051e962 : ficomp dword ptr [rbp + 0x1b] ; add bl, ch ; retf -0x76b8
0x0000000000424e60 : ficomp dword ptr [rbp] ; call rax
0x00000000005497ad : ficomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000051bec2 : ficomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000502932 : ficomp dword ptr [rbx + 0x5d] ; pop r12 ; xor ecx, ecx ; jmp r8
0x00000000005012e4 : ficomp dword ptr [rbx + 0x5d] ; pop r12 ; xor ecx, ecx ; jmp rax
0x000000000068b91c : ficomp dword ptr [rcx - 1] ; dec dword ptr [rax - 0x77] ; ret
0x00000000005b85f2 : ficomp dword ptr [rdi + 0x10] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c0bc2 : ficomp dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000007f7094 : ficomp dword ptr [rdi] ; xchg dword ptr [rcx], eax ; ret
0x000000000049cc02 : ficomp dword ptr [rsi + rdx*2] ; call rax
0x000000000051ee5e : ficomp word ptr [rax + 0x1b] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000546848 : ficomp word ptr [rax] ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x0000000000424ab8 : ficomp word ptr [rbp] ; call rax
0x00000000006875a1 : ficomp word ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000057e979 : ficomp word ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000007217fe : ficomp word ptr [rbx - 0x50] ; ret 0x9b64
0x0000000000519fce : ficomp word ptr [rcx + 0x17] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000072238e : ficomp word ptr [rdi + 0x52] ; mov cs, word ptr [rcx] ; ret 0xe937
0x0000000000629b84 : ficomp word ptr [rdi + 5] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000454a00 : ficomp word ptr [rdx] ; call rax
0x0000000000688090 : fidiv dword ptr [rbp - 0x4b] ; pop rbx ; pop r14 ; ret
0x00000000005971f2 : fidiv dword ptr [rbx + 0x12] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050ac50 : fidiv word ptr [rcx] ; sal byte ptr [rcx], 0xd2 ; pop rbx ; ret
0x00000000006344d0 : fidiv word ptr [rsi - 0x76b3fffc] ; out dx, eax ; call 0x6806ed
0x00000000007cb455 : fidivr dword ptr [rax] ; add byte ptr [rax], al ; xchg eax, edx ; jns 0x7cb46a ; ret 0x79
0x0000000000686d54 : fidivr dword ptr [rcx] ; enter 0x777c, -0x77 ; ret 0xca29
0x000000000065e381 : fidivr dword ptr [rcx] ; ret 0x5589
0x00000000004169d2 : fidivr dword ptr [rsi + 0x2a] ; add cl, cl ; ret
0x00000000006b20be : fidivr word ptr [rcx + rax + 0x14694800] ; and al, 0 ; retf 0x3b9a
0x00000000006c2554 : fidivr word ptr [rdx + 0x730f20] ; mov rdi, r15 ; call rax
0x00000000007abb48 : fidivr word ptr [rdx] ; in eax, dx ; jmp qword ptr [rbx]
0x00000000006d6d6e : fidivr word ptr [rdx] ; retf -0x454c
0x0000000000799265 : fild dword ptr [rax + rax] ; clc ; and al, 0xe6 ; call rdi
0x00000000007d85a5 : fild dword ptr [rax + rax] ; ret
0x00000000007e0edb : fild dword ptr [rax + rax] ; ret 0x504
0x00000000007cb1d3 : fild dword ptr [rax + rax] ; retf 0x3e04
0x0000000000677406 : fild dword ptr [rax] ; retf 0x3b9a
0x000000000056bc14 : fild dword ptr [rbx + 0x15ff01f5] ; ret 0x496c
0x000000000054060b : fild dword ptr [rbx + 0x15ff01f5] ; retf
0x000000000064379c : fild dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e4d79 : fild dword ptr [rcx] ; call rax
0x00000000005a71d1 : fild dword ptr [rdi + 0x2948000e] ; ret
0x000000000050e946 : fild dword ptr [rdi + rcx + 0x4f] ; ret
0x0000000000677dd2 : fild dword ptr [rdi - 0x1f] ; jne 0x677da0 ; add dword ptr [rcx + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xba49
0x00000000004fc8d5 : fild dword ptr [rdx + 0x18] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000779335 : fild dword ptr [rdx] ; add al, bh ; ret 0xffdc
0x000000000077929d : fild dword ptr [rdx] ; add byte ptr [rax], al ; ret 0xffdc
0x0000000000779285 : fild dword ptr [rdx] ; add byte ptr [rax], cl ; ret 0xffdc
0x00000000007d4b6d : fild dword ptr [rdx] ; add byte ptr [rcx + 0x901], bl ; ret
0x0000000000738c49 : fild dword ptr [rdx] ; add byte ptr [rdx - 0x20], ch ; salc ; call rax
0x0000000000738c21 : fild dword ptr [rdx] ; add byte ptr [rsi + rbx*8 - 0x2a], bl ; jmp qword ptr [rax]
0x00000000005d4cde : fild dword ptr [rdx] ; call rax
0x0000000000406798 : fild qword ptr [rax + rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000004206be : fild qword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000054f968 : fild qword ptr [rdi] ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000004ca031 : fild qword ptr [rdx + 0x1b] ; add cl, cl ; ret
0x0000000000410676 : fild qword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000052d14c : fild word ptr [rax] ; add byte ptr [rax], al ; mov esi, 1 ; call rax
0x00000000004b73cd : fild word ptr [rbp + 0x2948001d] ; ret
0x00000000006433a2 : fild word ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000789735 : fild word ptr [rbx] ; add byte ptr [rax], ch ; mov ah, 0xe0 ; jmp rcx
0x000000000051c501 : fild word ptr [rcx + 0x16] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a429b : fild word ptr [rcx - 0x77] ; add al, 0xe8 ; retf
0x00000000007357a9 : fild word ptr [rcx] ; add byte ptr [rax - 0x17], bl ; iretd ; call rax
0x00000000007456a1 : fild word ptr [rsi] ; add byte ptr [rax], dl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; out dx, eax ; call qword ptr [rax]
0x0000000000606f5c : fimul dword ptr [r8 + 0x39] ; ret
0x00000000006b3747 : fimul dword ptr [rax + 0x29] ; ret 0x148b
0x00000000006b3a80 : fimul dword ptr [rax + 0x29] ; retf
0x00000000005056fa : fimul dword ptr [rax + 0x29] ; retf -0x7cb8
0x000000000065de83 : fimul dword ptr [rax + 0x29] ; retf 0x788b
0x0000000000606f5d : fimul dword ptr [rax + 0x39] ; ret
0x000000000059ecff : fimul dword ptr [rax + 0x39] ; ret 0x870f
0x00000000006b60d9 : fimul dword ptr [rax + 0x63] ; add byte ptr [rax + 0x29], cl ; ret 0x8b48
0x00000000006210e4 : fimul dword ptr [rax + 0x63] ; retf -0x74b8
0x0000000000561d83 : fimul dword ptr [rax + 0x63] ; retf 0x148
0x0000000000689f76 : fimul dword ptr [rax + 1] ; ret 0x4d8d
0x00000000006c7ad2 : fimul dword ptr [rax + 1] ; ret 0x67e9
0x0000000000562033 : fimul dword ptr [rax + 1] ; ret 0x8b48
0x000000000065d4e2 : fimul dword ptr [rax + 1] ; ret 0x8beb
0x000000000052b991 : fimul dword ptr [rax + 1] ; ret 0x8d49
0x00000000006a2019 : fimul dword ptr [rax + 1] ; ret 0xa6eb
0x0000000000689ee8 : fimul dword ptr [rax + 1] ; ret 0xc583
0x0000000000524496 : fimul dword ptr [rax - 0x77] ; ret
0x0000000000500d20 : fimul dword ptr [rax - 0x7d] ; cli ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000578c82 : fimul dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004cdf3a : fimul dword ptr [rax - 0x7d] ; ret 0x490e
0x0000000000501e21 : fimul dword ptr [rax - 0x7d] ; ret 0xeb01
0x000000000051c6bb : fimul dword ptr [rax - 0x7d] ; retf 0x3101
0x00000000006cb1f2 : fimul dword ptr [rax - 4] ; dec dword ptr [rax - 0x77] ; ret
0x000000000065061c : fimul dword ptr [rbx + rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005136f6 : fimul dword ptr [rcx + rcx*4 - 0x12] ; call r8
0x00000000004e5dcc : fimul dword ptr [rcx + rcx*4 - 1] ; call r11
0x000000000047c7bd : fimul dword ptr [rcx - 0x2876b73a] ; call 0x4791e8
0x00000000006871c9 : fimul dword ptr [rdi] ; pop rax ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x0000000000626ca6 : fimul dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004d84e0 : fimul dword ptr [rip - 0x70410000] ; ret 0x6e
0x00000000005a1f6f : fimul dword ptr [rsi] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000059388e : fimul dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; cli ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000005a1f6e : fimul dword ptr ds:[rsi] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000005c1d1f : fimul word ptr [r11] ; add bl, ch ; mov dword ptr [rax - 0x77], ecx ; ret
0x0000000000690296 : fimul word ptr [rax + 0x29] ; ret
0x00000000005f9db0 : fimul word ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000006c46ad : fimul word ptr [rax + 1] ; retf
0x00000000006cb6a7 : fimul word ptr [rax - 0x73] ; add al, 0xf7 ; ret
0x000000000053a3a1 : fimul word ptr [rax - 0x77] ; ret
0x0000000000449abc : fimul word ptr [rax - 0x77] ; ret 0x8948
0x00000000005222ad : fimul word ptr [rax - 0x77] ; ret 0x8b48
0x000000000066a8d9 : fimul word ptr [rax - 0x77] ; ror dword ptr [rax - 0x77], 1 ; ret 0x7be8
0x000000000058a006 : fimul word ptr [rax - 0x7cb7ffb9] ; ret
0x0000000000517ae6 : fimul word ptr [rax - 0x7f] ; ret 0x107
0x0000000000684369 : fimul word ptr [rax] ; add al, bl ; ret 0x7cd9
0x00000000005f2d89 : fimul word ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x00000000005ca1e4 : fimul word ptr [rbp - 0x72bbfeba] ; outsb dx, byte ptr [rsi] ; add bh, byte ptr [rcx] ; retf -0x71f1
0x000000000051969b : fimul word ptr [rbx + 0x468b2457] ; and al, 0x39 ; ret 0xd475
0x000000000068bb5e : fimul word ptr [rbx - 0x76b7fffc] ; ret
0x00000000005c1d20 : fimul word ptr [rbx] ; add bl, ch ; mov dword ptr [rax - 0x77], ecx ; ret
0x0000000000660089 : fimul word ptr [rcx + 0x29c189cb] ; ret
0x00000000005025de : fimul word ptr [rcx + rcx*4 - 0x11] ; call 0x6be8b6
0x0000000000501dac : fimul word ptr [rcx + rcx*4 - 0x11] ; mov rsp, r14 ; call 0x6be8b9
0x00000000004fcf7a : fimul word ptr [rcx + rcx*4 - 0x16] ; call rax
0x00000000004e84ed : fimul word ptr [rcx + rcx*4 - 0x18] ; mov rdi, rax ; call 0x6d4749
0x000000000051110d : fimul word ptr [rcx + rcx*4 - 0x19] ; call rax
0x0000000000501e30 : fimul word ptr [rcx + rcx*4 - 0xc] ; call 0x6be8b6
0x00000000004ff9d3 : fimul word ptr [rcx + rcx*4 - 0xe] ; call rax
0x000000000052ba30 : fimul word ptr [rcx + rcx*4 - 1] ; call rax
0x0000000000503148 : fimul word ptr [rcx + rcx*4 - 6] ; call rax
0x0000000000487c4f : fimul word ptr [rcx + rcx*4 - 8] ; mov rdi, rax ; call 0x6d4749
0x0000000000587003 : fimul word ptr [rcx - 0x17157622] ; ret
0x0000000000693a74 : fimul word ptr [rcx - 0x17f3dbbc] ; ret 0x308
0x0000000000734264 : fimul word ptr [rcx - 0x33] ; jmp qword ptr [rax]
0x0000000000688089 : fimul word ptr [rcx - 0x7d] ; ret 0x4d01
0x0000000000552fb8 : fimul word ptr [rcx] ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x0000000000564a3c : fimul word ptr [rcx] ; call 0x681537
0x00000000007e8a0a : fimul word ptr [rcx] ; sbb byte ptr [rdi + 0x9fc0011], bh ; retf 0x12
0x00000000007d96cc : fimul word ptr [rdi] ; add eax, 0xf90014f1 ; syscall
0x00000000007f57a2 : fimul word ptr [rdx] ; or bl, dl ; and dword ptr [rax], eax ; std ; or cl, byte ptr [rcx] ; ret 0x1e
0x00000000004d85a5 : fimul word ptr [rip - 0x70410000] ; ret 0x6e
0x00000000007d4941 : fimul word ptr [rsi] ; add eax, 0x90000ef5 ; syscall
0x00000000006849be : fincstp ; add rsp, 0x38 ; ret
0x0000000000596b40 : fist dword ptr [rbx] ; add bl, ch ; mov byte ptr [rax - 0x77], cl ; ret
0x0000000000596bd7 : fist dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c4d38 : fist dword ptr [rbx] ; call rax
0x00000000005b6c32 : fist dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004510eb : fist dword ptr [rdi - 1] ; dec ecx ; ret
0x0000000000502ee1 : fist dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007ea115 : fist dword ptr [rdi] ; add dl, dl ; or byte ptr [rdx], al ; ret 0x16
0x000000000055378d : fist dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c4d77 : fist dword ptr gs:[rbx] ; call rax
0x0000000000572795 : fist word ptr [r8] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000581a76 : fist word ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000572744 : fist word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c49aa : fist word ptr [rbx] ; call rax
0x0000000000484985 : fist word ptr [rdi] ; call rax
0x00000000005927a7 : fist word ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004dce82 : fist word ptr [rip - 0x70410000] ; ret 0x6e
0x00000000004470bf : fist word ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000005927a6 : fist word ptr es:[rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000546b97 : fistp dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000424cf5 : fistp dword ptr [rbp] ; call rax
0x0000000000516bd4 : fistp dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000444cf8 : fistp dword ptr [rbx] ; call rax
0x00000000006736b1 : fistp dword ptr [rdx - 1] ; dec dword ptr [rax - 0x77] ; ret
0x000000000052b41b : fistp dword ptr [rsi + 0x15] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000424d78 : fistp dword ptr fs:[rbp] ; call rax
0x000000000047abfd : fistp qword ptr [rax + rbx*2] ; call rax
0x00000000006390fc : fistp qword ptr [rcx + rdx*2] ; jne 0x6390fe ; add rsp, 0x18 ; ret
0x000000000072322e : fistp qword ptr [rcx + rdx*8] ; ret 0x85e7
0x000000000053e457 : fistp qword ptr [rdx + 0x6fa4c0] ; call rax
0x00000000006c1de7 : fistp qword ptr [rdx + 0x730f50] ; call rax
0x00000000006c2b94 : fistp qword ptr [rdx + 0x730fe0] ; call rax
0x0000000000517bfa : fistp qword ptr [rsi + 1] ; call rax
0x00000000005524e8 : fistp qword ptr [rsi + 2] ; call rax
0x00000000005498bf : fistp qword ptr [rsi + 2] ; pop rbx ; pop rbp ; jmp rax
0x0000000000657817 : fistp word ptr [rdx - 0x76b7fffe] ; ret
0x00000000006c7b6f : fisttp dword ptr [rax + 0x29] ; retf 0x148
0x00000000006d385e : fisttp dword ptr [rax + 0x39] ; enter 0xf41, -0x61 ; ret
0x00000000006d386d : fisttp dword ptr [rax + 0x39] ; enter 0xf41, -0x62 ; ret
0x00000000006d384f : fisttp dword ptr [rax + 0x39] ; enter 0xf41, -0x63 ; ret
0x00000000006d387c : fisttp dword ptr [rax + 0x39] ; enter 0xf41, -0x64 ; ret
0x00000000006d388b : fisttp dword ptr [rax + 0x39] ; enter 0xf41, -0x6b ; ret
0x00000000006d3840 : fisttp dword ptr [rax + 0x39] ; enter 0xf41, -0x6c ; ret
0x00000000006b5382 : fisttp dword ptr [rax + 0x63] ; ret 0x2b48
0x00000000005fb8b1 : fisttp dword ptr [rax + 0x63] ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000006af451 : fisttp dword ptr [rax + 0x63] ; ror byte ptr [rax - 0x7d], cl ; ret 0x480f
0x0000000000677ec4 : fisttp dword ptr [rax + 0x69] ; fild dword ptr [rax] ; retf 0x3b9a
0x0000000000562583 : fisttp dword ptr [rax + 0x69] ; ret
0x0000000000511ac9 : fisttp dword ptr [rax + 0xf] ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000530f4c : fisttp dword ptr [rax + 0xf] ; ret
0x000000000057ca9c : fisttp dword ptr [rax - 0x73] ; jl 0x57cacd ; call 0x4c94f6
0x00000000005084b7 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000050842f : fisttp dword ptr [rax - 0x77] ; fmul dword ptr [rax - 0x77] ; retf -0x3ca5
0x000000000050b553 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000069f708 : fisttp dword ptr [rax - 0x77] ; ret 0xc7
0x000000000054e838 : fisttp dword ptr [rax - 0x7b] ; rol byte ptr [rcx + 0xf], cl ; xchg eax, esp ; ret 0x3948
0x00000000005109a8 : fisttp dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004064f5 : fisttp dword ptr [rax - 1] ; retf -0x76b8
0x00000000006d5239 : fisttp dword ptr [rbp - 0x77] ; retf 0x34c
0x0000000000533b1f : fisttp dword ptr [rbp - 0x7b] ; in al, 0x74 ; retf
0x00000000004d35c3 : fisttp dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000065be2f : fisttp dword ptr [rcx + 0x3acfca1d] ; add byte ptr [rdi], cl ; ret
0x000000000063220d : fisttp dword ptr [rcx + 0x415d5bd8] ; pop rsp ; ret
0x000000000050ed2f : fisttp dword ptr [rcx - 0x77] ; fisttp qword ptr [rax + 0xf] ; ret
0x0000000000687281 : fisttp dword ptr [rcx - 0x7c6f8a28] ; ret
0x00000000006c4662 : fisttp dword ptr [rcx - 9] ; div byte ptr [rcx] ; ror byte ptr [rcx - 0x77], cl ; ret
0x0000000000621f01 : fisttp dword ptr [rcx] ; add bh, bh ; ror cl, 1 ; ret
0x00000000005e2b48 : fisttp dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007ee676 : fisttp dword ptr [rdi] ; add byte ptr [rax], al ; add ah, bh ; syscall
0x00000000007d91fd : fisttp dword ptr [rdi] ; add eax, 0xfa001aa6 ; syscall
0x000000000051a833 : fisttp dword ptr [rdi] ; mov ch, bl ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf
0x0000000000469272 : fisttp dword ptr [rdi] ; ret
0x000000000063bb81 : fisttp dword ptr [rdi] ; sahf ; ret 0x3944
0x000000000059e6b4 : fisttp dword ptr [rdi] ; sahf ; ret 0x840
0x00000000004fe914 : fisttp dword ptr [rdi] ; sahf ; ret 0xdd39
0x000000000057fcae : fisttp dword ptr [rdi] ; test dword ptr [rbx], ecx ; add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000006c914c : fisttp dword ptr [rdi] ; xchg eax, esp ; ret
0x00000000006a4b09 : fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x2174
0x000000000063bf97 : fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x8548
0x0000000000506ed1 : fisttp dword ptr [rdx + 0x29480018] ; ret
0x0000000000592036 : fisttp dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050ed32 : fisttp qword ptr [rax + 0xf] ; ret
0x0000000000512e89 : fisttp qword ptr [rax - 0x77] ; ret
0x00000000005a13e9 : fisttp qword ptr [rax - 0x77] ; ret 0x2948
0x00000000005705e9 : fisttp qword ptr [rax - 0x7d] ; ret
0x00000000005a05e8 : fisttp qword ptr [rbp - 0x77] ; ret 0x294d
0x00000000005a0956 : fisttp qword ptr [rbp - 0x77] ; retf 0x294d
0x00000000005c1d6c : fisttp qword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005aca65 : fisttp qword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000504b6a : fisttp qword ptr [rdi] ; jmp rax
0x00000000006a6572 : fisttp qword ptr [rdi] ; test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000006269e4 : fisttp qword ptr [rdx] ; add bl, ch ; retf -0x3715
0x00000000004d8577 : fisttp qword ptr [rip - 0x70410000] ; ret 0x6e
0x000000000069f328 : fisttp word ptr [rax + 0x63] ; ret 0xea83
0x00000000005c124b : fisttp word ptr [rax - 0x77] ; ret
0x000000000059ecf9 : fisttp word ptr [rax - 0x77] ; ret 0x2948
0x0000000000525bf6 : fisttp word ptr [rax - 0x77] ; ret 0x8948
0x0000000000573a9d : fisttp word ptr [rax - 0x7d] ; ret
0x0000000000549d9b : fisttp word ptr [rax - 0x7d] ; ret 0x4801
0x0000000000549df2 : fisttp word ptr [rax - 0x7d] ; ret 0x4c01
0x00000000006d53be : fisttp word ptr [rax - 0x7d] ; ret 0xe808
0x0000000000512f28 : fisttp word ptr [rax - 0x7f] ; ret 0x2a1
0x00000000005c1c0b : fisttp word ptr [rbx] ; add bl, ch ; fimul word ptr [rax - 0x77] ; ret
0x00000000005c1be8 : fisttp word ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006c1940 : fisttp word ptr [rcx + rcx*4 - 0x1a] ; call rax
0x00000000004a143f : fisttp word ptr [rcx + rcx*4 - 0x32] ; call rax
0x0000000000664703 : fisttp word ptr [rcx - 0x77] ; ret
0x00000000007f56be : fisttp word ptr [rdi] ; add eax, 0xfa000eb0 ; syscall
0x000000000050543f : fisttp word ptr [rdi] ; pushfq ; ret 0xc238
0x00000000006a5c4a : fisttp word ptr [rdi] ; xchg eax, esp ; ret 0x6cdb
0x00000000006d6b7e : fisttp word ptr [rdx + 0x4d] ; scasd eax, dword ptr [rdi] ; ret 0xf8ed
0x000000000061be03 : fisttp word ptr [rdx] ; add byte ptr [rax], al ; leave ; ret
0x00000000005926cc : fisttp word ptr [rsi] ; add byte ptr [rax + 0x1847b60f], dl ; ret
0x00000000005d2715 : fisttp word ptr [rsi] ; add cl, cl ; ret
0x00000000004a0bc8 : fisub dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000007f57a5 : fisub dword ptr [rcx] ; add ch, bh ; or cl, byte ptr [rcx] ; ret 0x1e
0x00000000007f571b : fisub dword ptr [rcx] ; add cl, ah ; add dword ptr [rax], ebp ; retf 0x21
0x0000000000492beb : fisub dword ptr [rdx] ; add cl, cl ; ret
0x0000000000722e90 : fisub word ptr [r11 - 4] ; sbb al, 9 ; retf
0x0000000000722e91 : fisub word ptr [rbx - 4] ; sbb al, 9 ; retf
0x0000000000490aa2 : fisub word ptr [rdx] ; add cl, cl ; ret
0x0000000000639e62 : fisubr dword ptr [rax + 0x5b580009] ; pop rbp ; ret
0x0000000000406ccc : fisubr dword ptr [rax + rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000742b84 : fisubr dword ptr [rbp - 0x16] ; jmp qword ptr [rax]
0x000000000047e992 : fisubr dword ptr [rcx] ; and al, 0 ; leave ; ret
0x0000000000722fc9 : fisubr dword ptr [rdx] ; jle 0x722f9b ; sbb byte ptr [rax + 0x49], al ; ret 0x5657
0x00000000004068c0 : fisubr word ptr [rax + rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000004fa308 : fisubr word ptr [rsi] ; call rax
0x00000000004fdac0 : fisubr word ptr [rsi] ; mov rdi, rbx ; call r8
0x00000000004f8495 : fisubr word ptr [rsi] ; mov rdi, rbx ; call rax
0x00000000007990f5 : fld dword ptr [rax + rax] ; or byte ptr [rsi], bl ; jmp rax
0x000000000066b89b : fld dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000665e04 : fld dword ptr [rbp + 9] ; ret
0x000000000069eba6 : fld dword ptr [rbp - 0x77] ; ret
0x0000000000643998 : fld dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000060ce10 : fld dword ptr [rcx + 0x39] ; retf
0x00000000006a0bdd : fld dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0xc748
0x00000000004ae851 : fld dword ptr [rcx] ; add byte ptr [rax], al ; nop ; leave ; ret
0x00000000005e4f03 : fld dword ptr [rcx] ; call rax
0x000000000067f48e : fld dword ptr [rcx] ; ret
0x00000000006bcb17 : fld dword ptr [rdi + rcx + 0x49] ; sal dword ptr [rcx], 1 ; ror byte ptr [rcx + 0x63], cl ; ret 0x8348
0x00000000007d62c6 : fld dword ptr [rdx] ; add byte ptr [rax + 4], dl ; retf
0x00000000006531a1 : fld dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000738be1 : fld dword ptr [rdx] ; add byte ptr [rdx], cl ; fcom st(0), st(6) ; jmp qword ptr [rax]
0x00000000005d4f37 : fld dword ptr [rdx] ; call rax
0x00000000007e120c : fld dword ptr [rdx] ; test byte ptr [rip + 0x4103a900], r8b ; retf 5
0x00000000007cbf5e : fld dword ptr [rip + 0xe038a03] ; ret 6
0x00000000007455f1 : fld dword ptr [rsi] ; add al, ah ; mov edi, gs ; jmp qword ptr [rax]
0x00000000005d4fb6 : fld dword ptr es:[rdx] ; call rax
0x0000000000535376 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c14
0x0000000000474263 : fld qword ptr [rax] ; add cl, cl ; ret
0x000000000073bf71 : fld qword ptr [rbx] ; add byte ptr [rax], ah ; ret
0x00000000006bb488 : fld qword ptr [rcx - 0x77] ; ret
0x00000000007cbbb7 : fld qword ptr [rcx] ; add dword ptr [rax + 5], ebp ; ret
0x00000000007ca0ff : fld qword ptr [rcx] ; add dword ptr [rcx + 0x29], ebx ; ret
0x00000000005e4b0e : fld qword ptr [rcx] ; call rax
0x00000000006c52ba : fld qword ptr [rcx] ; retf
0x00000000004c6532 : fld qword ptr [rip - 0x70410000] ; ret 0x6e
0x000000000065a5d3 : fld qword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000006a4858 : fld st(0) ; fmul st(1) ; fmulp st(1) ; ret
0x000000000069d790 : fld st(1) ; leave ; add al, byte ptr [rcx - 0x77] ; retf
0x000000000069d400 : fld st(1) ; ret 0x10a
0x0000000000406ba4 : fld xword ptr [rax + rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000004a3cf1 : fld xword ptr [rax - 0x76b7ffdf] ; ret
0x00000000006b6e36 : fld xword ptr [rcx] ; retf
0x00000000007e8484 : fld xword ptr [rdi] ; add byte ptr [rdi + 0x16], ah ; ret 0x516
0x0000000000584ad1 : fld xword ptr [rsi + 0x29480010] ; ret
0x00000000006a5665 : fld xword ptr [rsp + 0x10] ; add rsp, 0x38 ; ret
0x00000000006a5e4a : fld xword ptr [rsp + 0x30] ; add rsp, 0x28 ; ret
0x0000000000684030 : fld xword ptr [rsp + 8] ; fucompi st(0) ; setp al ; ret
0x00000000006a56d8 : fld xword ptr [rsp - 0x18] ; ret
0x00000000006a5b48 : fld xword ptr [rsp - 0x28] ; ret
0x00000000006c0f8e : fld xword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000006c505f : fld xword ptr [rsp] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000005775ae : fld1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000684022 : fld1 ; faddp st(1) ; fscale ; fstp st(1) ; ret
0x00000000006a484a : fld1 ; ret
0x0000000000406df3 : fldcw word ptr [r8 + rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000406d60 : fldcw word ptr [rax + rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000005e7b03 : fldcw word ptr [rbp - 0x2f00ffbf] ; leave ; ret
0x00000000007217fa : fldcw word ptr [rbx - 0x4fa42152] ; ret 0x9b64
0x0000000000721c7d : fldenv dword ptr [rax + 0x7ef3ec06] ; pop rsi ; lodsd eax, dword ptr [rsi] ; ret 0x4765
0x000000000060fd13 : fldenv dword ptr [rdx + 0x15ff0007] ; ret
0x0000000000694bd5 : fldl2t ; ret 0xfffd
0x000000000052697e : fldln2 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000684044 : fldln2 ; fxch st(1) ; fyl2x ; ret
0x000000000041351e : fmul dword ptr [r8 + 0x29] ; ret 0x8948
0x0000000000411264 : fmul dword ptr [r8 - 0x75] ; adc byte ptr [rax + 0x39], cl ; ret 0x2275
0x00000000004111b3 : fmul dword ptr [r8 - 0x75] ; or byte ptr [rax + 0x39], cl ; ret 0x2275
0x000000000041124f : fmul dword ptr [r8 - 0x75] ; or byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000623337 : fmul dword ptr [r8 - 0x75] ; pop rbp ; clc ; leave ; ret
0x0000000000614d13 : fmul dword ptr [r8 - 0x75] ; push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4808
0x000000000047aa94 : fmul dword ptr [r8 - 0x77] ; ret 0x8b48
0x0000000000519dff : fmul dword ptr [r8 - 0x7d] ; ret
0x0000000000478fbd : fmul dword ptr [r9 - 0x77] ; retf -0x76b8
0x000000000041351f : fmul dword ptr [rax + 0x29] ; ret 0x8948
0x00000000004e81d7 : fmul dword ptr [rax + 0x29] ; ror dword ptr [rax - 0x77], 1 ; retf -0x7eb8
0x0000000000513a46 : fmul dword ptr [rax + 0x39] ; ret
0x0000000000426406 : fmul dword ptr [rax + 0x39] ; ret 0x7c74
0x0000000000482f11 : fmul dword ptr [rax + 0x39] ; ret 0x840f
0x000000000067425d : fmul dword ptr [rax + 0x39] ; retf -0x38b8
0x00000000005067e6 : fmul dword ptr [rax + 0x63] ; retf
0x0000000000559b3f : fmul dword ptr [rax + 0x63] ; retf -0x40bf
0x0000000000559c0f : fmul dword ptr [rax + 0x63] ; retf -0x41bf
0x0000000000599bce : fmul dword ptr [rax + 0x63] ; retf -0x7cb8
0x000000000060704c : fmul dword ptr [rax + 1] ; ret 0x2948
0x0000000000590481 : fmul dword ptr [rax + 1] ; ret 0x3948
0x0000000000677741 : fmul dword ptr [rax + 1] ; ror dword ptr [rax + 0x39], 1 ; retf
0x00000000006168fb : fmul dword ptr [rax - 0x74b7efb0] ; fmul st(1) ; ret
0x0000000000411265 : fmul dword ptr [rax - 0x75] ; adc byte ptr [rax + 0x39], cl ; ret 0x2275
0x00000000004f113a : fmul dword ptr [rax - 0x75] ; add eax, 0x5117a6 ; call rax
0x00000000004111b4 : fmul dword ptr [rax - 0x75] ; or byte ptr [rax + 0x39], cl ; ret 0x2275
0x0000000000411250 : fmul dword ptr [rax - 0x75] ; or byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000623338 : fmul dword ptr [rax - 0x75] ; pop rbp ; clc ; leave ; ret
0x0000000000614d14 : fmul dword ptr [rax - 0x75] ; push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4808
0x00000000006cbaf8 : fmul dword ptr [rax - 0x75] ; push rsp ; and al, 0xe0 ; ret
0x000000000043eda1 : fmul dword ptr [rax - 0x75] ; ror byte ptr [r8 + 0x39], 1 ; ret 0x1175
0x0000000000442336 : fmul dword ptr [rax - 0x75] ; ror byte ptr [r8 + 0x39], 1 ; ret 0x775
0x0000000000478ff7 : fmul dword ptr [rax - 0x75] ; ror byte ptr [r8 + 0x39], 1 ; ret 0x7d74
0x0000000000440eb3 : fmul dword ptr [rax - 0x75] ; ror byte ptr [r8 + 0x39], 1 ; ret 0x840f
0x0000000000464535 : fmul dword ptr [rax - 0x77] ; ret
0x00000000004f11a4 : fmul dword ptr [rax - 0x77] ; ret 0x8948
0x000000000047aa95 : fmul dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004ad387 : fmul dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000004154b7 : fmul dword ptr [rax - 0x77] ; ret 0xb60f
0x0000000000664936 : fmul dword ptr [rax - 0x77] ; ret 0xf41
0x000000000050840c : fmul dword ptr [rax - 0x77] ; retf -0x3ca5
0x00000000005f8361 : fmul dword ptr [rax - 0x77] ; retf -0x7cb8
0x0000000000511acd : fmul dword ptr [rax - 0x7d] ; ret
0x000000000043ed3e : fmul dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000614d80 : fmul dword ptr [rax - 0x7d] ; ret 0x4819
0x000000000066aa6e : fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x00000000004ae810 : fmul dword ptr [rax - 0x7d] ; ret 0x4928
0x000000000047b8d2 : fmul dword ptr [rax - 0x7d] ; ret 0x4d08
0x00000000005b007c : fmul dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000686877 : fmul dword ptr [rbp + 0x3941ff48] ; retf
0x000000000066d399 : fmul dword ptr [rbp + 0x63] ; retf 0x1ba
0x00000000005fd005 : fmul dword ptr [rbp + 1] ; ret
0x00000000007acc38 : fmul dword ptr [rbp - 0x13] ; jmp qword ptr [rax]
0x00000000006a0f90 : fmul dword ptr [rbp - 0x77] ; ret
0x00000000004ae80a : fmul dword ptr [rbx + 0x558b4800] ; fmul dword ptr [rax - 0x7d] ; ret 0x4928
0x00000000007396a0 : fmul dword ptr [rbx] ; add eax, dword ptr [rax] ; retf -0x27ba
0x00000000006d373c : fmul dword ptr [rcx + 0x31] ; ret
0x00000000006a0f8a : fmul dword ptr [rcx + 0x31] ; ror byte ptr [rbp + 0x29], 1 ; fmul dword ptr [rbp - 0x77] ; ret
0x000000000066893a : fmul dword ptr [rcx + 0x4f890] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000057015c : fmul dword ptr [rcx + rcx*4 - 0x1e] ; jne 0x5701ae ; call rdx
0x0000000000571bf8 : fmul dword ptr [rcx + rcx*4 - 0x1e] ; jne 0x571c46 ; call rdx
0x00000000005600d1 : fmul dword ptr [rcx + rcx*4 - 0x1e] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000478fbe : fmul dword ptr [rcx - 0x77] ; retf -0x76b8
0x00000000006a5c44 : fmul dword ptr [rcx - 0x83c7639] ; fisttp word ptr [rdi] ; xchg eax, esp ; ret 0x6cdb
0x00000000006c90f1 : fmul dword ptr [rdi] ; fadd dword ptr [r11 - 0x7bf00006] ; ret 1
0x00000000005dc6e1 : fmul dword ptr [rdi] ; mov cs, word ptr [rax - 0x7d000000] ; ret
0x00000000005e67ad : fmul dword ptr [rdi] ; mov es, word ptr [rcx - 0x7d000000] ; ret
0x0000000000607fc2 : fmul dword ptr [rdi] ; pushfq ; ret 0xdb85
0x000000000064bd48 : fmul dword ptr [rdi] ; test dword ptr [rdi + 6], esp ; add byte ptr [rax], al ; call 0x6487d9
0x00000000005a268c : fmul dword ptr [rdi] ; test ebp, ebp ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x1f7c
0x0000000000480664 : fmul dword ptr [rdx - 0x76b7ffe0] ; ror dword ptr [rax - 0x77], 1 ; ret 0x8d48
0x0000000000684c2c : fmul dword ptr [rip + 0xa3ce2] ; ret
0x0000000000684bea : fmul dword ptr [rip + 0xa3d24] ; ret
0x0000000000684bac : fmul dword ptr [rip + 0xa3d62] ; ret
0x0000000000684b6a : fmul dword ptr [rip + 0xa3da4] ; ret
0x00000000007695cc : fmul dword ptr [rip - 0x2bfc0000] ; ret
0x00000000007e6169 : fmul dword ptr [rsi + rax] ; retf 0xf
0x000000000045d6f4 : fmul dword ptr [rsi] ; add byte ptr es:[rax - 0x77], cl ; ret 0x8948
0x00000000006807ca : fmul qword ptr [r8 + 0x63] ; ror dword ptr [rax - 0x7d], cl ; ret 0x480f
0x000000000069d54f : fmul qword ptr [rax + 0x29] ; ret 0x8348
0x000000000043bea8 : fmul qword ptr [rax + 0x29] ; retf -0x74b8
0x0000000000440af5 : fmul qword ptr [rax + 0x29] ; retf -0x76b8
0x00000000006807cb : fmul qword ptr [rax + 0x63] ; ror dword ptr [rax - 0x7d], cl ; ret 0x480f
0x00000000005669e2 : fmul qword ptr [rax - 0x77] ; ret
0x0000000000523800 : fmul qword ptr [rax - 0x77] ; retf
0x00000000005a0f6a : fmul qword ptr [rax - 0x7d] ; ret
0x00000000005f2a8d : fmul qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005c2f1a : fmul qword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007502e4 : fmul qword ptr [rbx] ; add byte ptr [rdx], dh ; mov ch, cl ; jmp qword ptr [rbx]
0x00000000005e1ee3 : fmul qword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e61a9 : fmul qword ptr [rdi] ; adc eax, 0xf60010bf ; syscall
0x00000000007e8a60 : fmul qword ptr [rdi] ; add ah, cl ; syscall
0x00000000007d7396 : fmul qword ptr [rdi] ; add dl, dl ; syscall
0x00000000007ec248 : fmul qword ptr [rdi] ; add eax, 0xe80930ca ; syscall
0x00000000007e6409 : fmul qword ptr [rdi] ; add eax, 0xf8000fbe ; syscall
0x0000000000600129 : fmul qword ptr [rdi] ; pop rax ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000549c85 : fmul qword ptr [rdi] ; sahf ; ret 0x8545
0x00000000006bd5b6 : fmul qword ptr [rdi] ; test byte ptr [rbx], bh ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; ret
0x0000000000632382 : fmul qword ptr [rdi] ; xchg eax, ebp ; ret 0xd084
0x00000000004d854a : fmul qword ptr [rip - 0x70410000] ; ret 0x6e
0x00000000007ac3e4 : fmul qword ptr [rsi + rax] ; add al, dh ; in eax, dx ; call qword ptr [rbx]
0x0000000000734c7c : fmul qword ptr [rsi - 0x55f70032] ; add dword ptr [rax], eax ; ret 0xce90
0x00000000006a4850 : fmul st(0) ; fmul st(0) ; ret
0x00000000006a4852 : fmul st(0) ; ret
0x00000000007420f8 : fmul st(1) ; add eax, 0xe8228000 ; jmp qword ptr [rax]
0x00000000006a485a : fmul st(1) ; fmulp st(1) ; ret
0x000000000078e278 : fmul st(1) ; loope 0x78e27f ; retf 1
0x000000000061322b : fmul st(1) ; ret
0x00000000006a471c : fmul st(1) ; sar edi, 1 ; jne 0x6a4718 ; fstp st(1) ; ret
0x0000000000669d7e : fmul st(1), st(0) ; ret
0x0000000000753ba9 : fmul st(6), st(0) ; call qword ptr [rdi]
0x0000000000753be9 : fmul st(6), st(0) ; call rdi
0x0000000000757861 : fmul st(7) ; call rsp
0x000000000073571d : fmul st(7), st(0) ; jmp qword ptr [rax]
0x00000000006a57ba : fmulp st(1) ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000006a485c : fmulp st(1) ; ret
0x0000000000734735 : fmulp st(5) ; call rax
0x0000000000751391 : fmulp st(5) ; call rcx
0x0000000000722c7e : fnop ; pop rsi ; jle 0x722c7e ; in al, dx ; ret 0x6cad
0x00000000006bf47b : fnsave dword ptr [rax + rax] ; add byte ptr [rax - 0x75], cl ; pop rbp ; clc ; leave ; ret
0x00000000006bf4cb : fnsave dword ptr [rax + rax] ; add dword ptr [rax - 0x75], ecx ; pop rbp ; clc ; leave ; ret
0x00000000007e76bb : fnsave dword ptr [rax + rax] ; xchg eax, edi ; xor al, byte ptr [rdx] ; ret 0x34
0x00000000005a3b78 : fnsave dword ptr [rax] ; jne 0x5a3b5d ; ret
0x00000000005a3bad : fnsave dword ptr [rax] ; jne 0x5a3b95 ; ret
0x0000000000539f6a : fnsave dword ptr [rbp + 5] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004071d5 : fnsave dword ptr [rbx + rbp - 0x42] ; retf
0x000000000040f98f : fnsave dword ptr [rbx - 0x76b7ffd9] ; ret
0x0000000000634047 : fnsave dword ptr [rcx] ; call 0x680ac9
0x0000000000634026 : fnsave dword ptr [rcx] ; xor eax, eax ; call 0x680acb
0x00000000006bed03 : fnstcw word ptr [rbx] ; xor al, 0 ; jmp rax
0x0000000000512e64 : fnstenv dword ptr [rbp + 0x19] ; mov rdi, r12 ; call rcx
0x0000000000515d1d : fnstenv dword ptr [rbp - 0x76b7ffea] ; ret
0x00000000007dc565 : fnstenv dword ptr [rcx] ; add byte ptr [rbp + 0xf], dh ; retf 0x50f
0x0000000000684295 : fnstenv dword ptr [rdi + 8] ; fcos ; add rsp, 0x38 ; ret
0x000000000054d1f3 : fnstenv dword ptr [rdi + rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000634b1f : fnstsw dword ptr [rax + rax] ; call 0x681537
0x0000000000534d0b : fnstsw dword ptr [rbp - 0x76b7ffec] ; ret
0x0000000000496aef : fnstsw dword ptr [rdx + 0x22] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000453611 : fnstsw dword ptr [rdx - 2] ; dec ecx ; ret
0x000000000074a33d : fprem ; jmp qword ptr [rax]
0x000000000074a32d : fprem ; jmp rax
0x000000000072224f : fprem1 ; cwde ; outsd dx, dword ptr [rsi] ; nop ; call rbx
0x0000000000482937 : frstor dword ptr [rbx] ; add cl, cl ; ret
0x0000000000492957 : frstor dword ptr [rdx] ; add cl, cl ; ret
0x00000000005cbfef : frstor dword ptr [rip - 0x76b7fff1] ; ret
0x0000000000452fb2 : frstor dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000045389a : frstor dword ptr [rsi] ; add cl, cl ; ret
0x0000000000684026 : fscale ; fstp st(1) ; ret
0x00000000006847da : fsin ; add rsp, 0x38 ; ret
0x00000000006841ce : fsqrt ; add rsp, 8 ; ret
0x0000000000581fe6 : fst dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004fbd1d : fst dword ptr [rbp + 0x18] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c4eed : fst dword ptr [rbx] ; call rax
0x0000000000556d74 : fst dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007d9768 : fst dword ptr [rip + 0x5168b00] ; retf
0x00000000004dce03 : fst dword ptr [rip - 0x70410000] ; ret 0x6e
0x0000000000513970 : fst dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000581d65 : fst qword ptr [eax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006fdd29 : fst qword ptr [rax + rax] ; add byte ptr [rax], al ; add al, dl ; ret
0x0000000000581d66 : fst qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000057bb01 : fst qword ptr [rbx - 0x76b70018] ; ret
0x000000000059697f : fst qword ptr [rbx] ; add bl, ch ; mov word ptr [rax - 0x77], cs ; ret
0x00000000004c4b50 : fst qword ptr [rbx] ; call rax
0x0000000000484b53 : fst qword ptr [rdi] ; call rax
0x0000000000551d71 : fst qword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000735ea5 : fst st(0) ; jmp qword ptr [rax]
0x00000000006b2885 : fst st(2) ; cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000737b35 : fst st(3) ; jmp qword ptr [rax]
0x0000000000738c15 : fst st(6) ; jmp rax
0x0000000000768649 : fst st(7) ; jmp qword ptr [rbx]
0x0000000000424ee4 : fstp dword ptr [rbp] ; call rax
0x0000000000516df3 : fstp dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000464faf : fstp dword ptr [rcx] ; call rax
0x00000000007f6077 : fstp dword ptr [rsi] ; add bl, bh ; syscall
0x00000000007f606b : fstp dword ptr [rsi] ; add cl, ch ; syscall
0x0000000000464fae : fstp dword ptr ss:[rcx] ; call rax
0x0000000000424aed : fstp qword ptr [rbp] ; call rax
0x000000000063ad5f : fstp qword ptr [rcx + 0x5b580009] ; pop rbp ; ret
0x00000000005b700b : fstp qword ptr [rdx - 0x76b7fff4] ; ret
0x0000000000414b1e : fstp qword ptr [rsi] ; call rax
0x00000000006c49dd : fstp st(0) ; add rsp, 0x20 ; pop rbx ; ret
0x00000000006a5ba0 : fstp st(0) ; add rsp, 0x28 ; ret
0x00000000006a5d1a : fstp st(0) ; add rsp, 0x38 ; ret
0x00000000006a5931 : fstp st(0) ; add rsp, 0x48 ; ret
0x0000000000769a51 : fstp st(0) ; call qword ptr [rdx]
0x00000000006a5d38 : fstp st(0) ; fchs ; add rsp, 0x38 ; ret
0x00000000006a4848 : fstp st(0) ; fld1 ; ret
0x00000000006c49db : fstp st(0) ; fstp st(0) ; add rsp, 0x20 ; pop rbx ; ret
0x00000000006a5e14 : fstp st(0) ; fstp st(0) ; add rsp, 0x28 ; ret
0x00000000006a5d18 : fstp st(0) ; fstp st(0) ; add rsp, 0x38 ; ret
0x00000000006a592f : fstp st(0) ; fstp st(0) ; add rsp, 0x48 ; ret
0x00000000006a56b0 : fstp st(0) ; fstp st(0) ; ret
0x00000000006a5b28 : fstp st(0) ; fstp st(1) ; ret
0x0000000000739b6d : fstp st(0) ; jmp rax
0x00000000006a56b2 : fstp st(0) ; ret
0x00000000006a5b98 : fstp st(1) ; add rsp, 0x28 ; ret
0x000000000068456a : fstp st(1) ; add rsp, 0x38 ; ret
0x000000000076cb61 : fstp st(1) ; call qword ptr [rcx]
0x00000000006a5b50 : fstp st(1) ; fchs ; ret
0x00000000006a4741 : fstp st(1) ; fdivr dword ptr [rip + 0x73c53] ; ret
0x0000000000684be8 : fstp st(1) ; fmul dword ptr [rip + 0xa3d24] ; ret
0x0000000000684b68 : fstp st(1) ; fmul dword ptr [rip + 0xa3da4] ; ret
0x0000000000684568 : fstp st(1) ; fstp st(1) ; add rsp, 0x38 ; ret
0x0000000000684028 : fstp st(1) ; ret
0x0000000000406d5f : fstp st(1) ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000771701 : fstp st(2) ; call rsi
0x0000000000760df9 : fstp st(3), st(0) ; call rax
0x0000000000737b75 : fstp st(3), st(0) ; jmp qword ptr [rax]
0x0000000000738355 : fstp st(4), st(0) ; call qword ptr [rax]
0x0000000000738345 : fstp st(4), st(0) ; call rax
0x0000000000779f39 : fstp st(4), st(0) ; jmp qword ptr [rsi]
0x000000000073b56d : fstp st(5), st(0) ; call rax
0x000000000077ebd9 : fstp st(5), st(0) ; call rdi
0x000000000070699d : fstp st(6) ; jmp qword ptr [rdx]
0x00000000006a9a29 : fstp xword ptr [r10] ; add rsp, 8 ; ret
0x00000000006a5545 : fstp xword ptr [rax] ; mov dword ptr [rax + 0x10], edx ; ret
0x00000000006a5530 : fstp xword ptr [rax] ; ret
0x000000000066f84f : fstp xword ptr [rcx] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000006b6fa0 : fstp xword ptr [rcx] ; ret 0x57f
0x00000000006a9a2a : fstp xword ptr [rdx] ; add rsp, 8 ; ret
0x00000000006a56d4 : fstp xword ptr [rsp - 0x18] ; fld xword ptr [rsp - 0x18] ; ret
0x00000000006a5b44 : fstp xword ptr [rsp - 0x28] ; fld xword ptr [rsp - 0x28] ; ret
0x000000000066f84e : fstp xword ptr ds:[rcx] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000006a4742 : fstpnce st(0), st(0) ; cmp eax, 0x73c53 ; ret
0x0000000000675e53 : fstpnce st(0), st(0) ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000684be9 : fstpnce st(0), st(0) ; or eax, 0xa3d24 ; ret
0x0000000000684b69 : fstpnce st(0), st(0) ; or eax, 0xa3da4 ; ret
0x00000000006d68f6 : fstpnce st(0), st(0) ; sub ecx, ebx ; ret 0xf764
0x0000000000684c8f : fstpnce st(1), st(0) ; call 0xfffffffff3450f76
0x0000000000706999 : fstpnce st(2), st(0) ; fcmovnu st(0), st(4) ; fstp st(6) ; jmp qword ptr [rdx]
0x0000000000684c29 : fstpnce st(6), st(0) ; rcr eax, 0xd ; loop 0x684c75 ; or al, byte ptr [rax] ; ret
0x0000000000581654 : fsub dword ptr [rax + rdx] ; add rsp, 0x28 ; ret
0x0000000000648804 : fsub dword ptr [rax - 0x2776ffc5] ; pop rbx ; ret
0x00000000004b0ced : fsub dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000079f448 : fsub dword ptr [rbp - 0x18] ; call qword ptr [rax]
0x000000000074b470 : fsub dword ptr [rbp - 0x2b7ffff8] ; stc ; jmp qword ptr [rax]
0x00000000007faee9 : fsub dword ptr [rbp] ; in eax, dx ; ret
0x00000000007fa0b9 : fsub dword ptr [rbp] ; mov ecx, 0x50f80552 ; retf
0x00000000007fa4a4 : fsub dword ptr [rbp] ; ret
0x00000000007faf8b : fsub dword ptr [rbp] ; ret 0x1c8
0x00000000007f9c32 : fsub dword ptr [rbp] ; ret 0x51d
0x00000000007f9f37 : fsub dword ptr [rbp] ; retf
0x00000000007fac7a : fsub dword ptr [rbp] ; retf 0x1af
0x00000000007fa347 : fsub dword ptr [rbp] ; retf 0x568
0x000000000059ac1e : fsub dword ptr [rsi + 0xe] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000068222a : fsub dword ptr [rsi + 0xf] ; sub bl, al ; add rsp, 0x18 ; ret
0x0000000000755ae4 : fsub qword ptr [rbx - 0x632c0000] ; iretd ; jmp qword ptr [rbx]
0x00000000004a092f : fsub qword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000492aa3 : fsub qword ptr [rdx] ; add cl, cl ; ret
0x0000000000450954 : fsub qword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000075de24 : fsub qword ptr [rsi] ; add dword ptr [rax], eax ; pop rax ; not ecx ; call rdx
0x000000000078a639 : fsub st(0) ; call qword ptr [rax]
0x000000000078a621 : fsub st(0) ; jmp qword ptr [rax]
0x00000000007a6f09 : fsub st(3), st(0) ; call qword ptr [rsi]
0x0000000000524494 : fsub st(3), st(0) ; fimul dword ptr [rax - 0x77] ; ret
0x0000000000500d1e : fsub st(3), st(0) ; fimul dword ptr [rax - 0x7d] ; cli ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000743e7d : fsub st(4), st(0) ; call rax
0x0000000000798161 : fsub st(5) ; call rbx
0x0000000000526656 : fsub st(5), st(0) ; dec dword ptr [rax - 0x77] ; ret
0x00000000007af0a1 : fsub st(5), st(0) ; jmp qword ptr [rdx]
0x0000000000744dad : fsub st(6), st(0) ; jmp qword ptr [rax]
0x000000000063b813 : fsubp st(0) ; ret
0x0000000000545e00 : fsubp st(0) ; retf -0x2f
0x000000000057dd80 : fsubp st(0) ; retf 0x1082
0x0000000000684c9a : fsubp st(1) ; add rsp, 0x28 ; ret
0x0000000000684baa : fsubp st(1) ; fmul dword ptr [rip + 0xa3d62] ; ret
0x000000000063532d : fsubp st(1) ; psllw mm7, mm7 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000699d49 : fsubp st(1) ; ret 0xfffe
0x000000000062feb2 : fsubp st(3) ; mov dh, 0xe9 ; retf -2
0x0000000000744365 : fsubp st(5) ; jmp rax
0x0000000000406e88 : fsubr dword ptr [rax + rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000790a38 : fsubr dword ptr [rax - 0x1e] ; jmp qword ptr [rdx]
0x00000000006d68f7 : fsubr dword ptr [rbx] ; retf
0x00000000004f27de : fsubr dword ptr [rsi] ; jmp rax
0x0000000000406a7c : fsubr qword ptr [rax + rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000721d10 : fsubr qword ptr [rax - 0x3d14f8f7] ; retf
0x000000000079e024 : fsubr qword ptr [rax] ; add eax, 0xe7f34400 ; call rax
0x0000000000413751 : fsubr qword ptr [rdx] ; add cl, cl ; ret
0x00000000004f50b8 : fsubr qword ptr [rsi] ; xor eax, eax ; call 0x681301
0x000000000074c678 : fsubr qword ptr [rsp + rcx*8] ; call rsp
0x0000000000575b1d : fsubr st(0) ; lodsd eax, dword ptr [rsi] ; ret 0xffff
0x000000000064e3b4 : fsubr st(1) ; retf
0x0000000000742ded : fsubr st(2) ; call qword ptr [rax]
0x00000000007af5d8 : fsubr st(2) ; in eax, dx ; call qword ptr [rcx]
0x00000000006580f7 : fsubr st(3) ; mov dword ptr [rax - 0x77], ecx ; ret
0x000000000073fb9d : fsubr st(4), st(0) ; jmp qword ptr [rax]
0x00000000005168f7 : fsubr st(6) ; dec dword ptr [rax - 0x77] ; ret
0x000000000079d421 : fsubr st(7), st(0) ; call qword ptr [rax]
0x00000000006a5a65 : fsubrp st(1) ; add rsp, 0x48 ; ret
0x0000000000757e50 : fsubrp st(2) ; iretd ; jmp qword ptr [rax]
0x00000000004f05ce : fsubrp st(2) ; sbb al, 0 ; leave ; ret
0x000000000073f5fd : fsubrp st(3) ; jmp qword ptr [rax]
0x0000000000798281 : fsubrp st(5) ; jmp qword ptr [rsi]
0x000000000073fbbd : fucom st(4) ; call rax
0x0000000000798231 : fucom st(5) ; jmp qword ptr [rbx]
0x00000000007412cd : fucom st(6) ; call rax
0x00000000005773ae : fucomi st(0) ; dec dword ptr [rax - 0x77] ; ret
0x0000000000683ffc : fucomi st(0) ; jp 0x68400d ; add rsp, 8 ; ret
0x0000000000683ffb : fucomi st(0) ; jp 0x68400e ; add rsp, 8 ; ret
0x0000000000684206 : fucomi st(0) ; jp 0x68421e ; add rsp, 8 ; ret
0x0000000000684262 : fucomi st(0) ; jp 0x68427c ; add rsp, 8 ; ret
0x0000000000684261 : fucomi st(0) ; jp 0x68427d ; add rsp, 8 ; ret
0x000000000058d174 : fucomi st(0) ; mov eax, 0x89000f43 ; ret
0x0000000000694708 : fucomi st(0) ; ret 0xfffa
0x000000000060f761 : fucomi st(0) ; retf
0x000000000057c562 : fucomi st(0) ; retf 0x104f
0x00000000007427bd : fucomi st(1) ; jmp rax
0x00000000006a5b24 : fucomi st(2) ; jbe 0x6a5b38 ; fstp st(0) ; fstp st(1) ; ret
0x000000000060238d : fucomi st(3) ; mov cs, word ptr [rax - 0x7d] ; cli ; or byte ptr [rax - 0x77], cl ; ret
0x000000000060a719 : fucomi st(3) ; ret
0x0000000000606462 : fucomi st(3) ; ret 0x2e66
0x0000000000570be1 : fucomi st(3) ; ret 0x35be
0x00000000007aaaa1 : fucomi st(4) ; call qword ptr [rdx]
0x00000000007442e5 : fucomi st(5) ; call rax
0x0000000000744d9d : fucomi st(6) ; call rax
0x00000000005771a2 : fucomp st(0) ; dec dword ptr [rax - 0x77] ; ret
0x000000000064c29c : fucomp st(0) ; mov eax, 0x8948ffdb ; ret
0x0000000000508187 : fucomp st(0) ; ret
0x0000000000527b18 : fucomp st(0) ; ret 0xfff6
0x000000000064411c : fucomp st(1) ; ret 0xffee
0x0000000000742e4d : fucomp st(2) ; call rax
0x00000000007a7041 : fucomp st(3) ; call rsi
0x00000000005232eb : fucompi st(0) ; adc al, 0x1b ; add bl, ch ; retf -0x76b8
0x000000000051ec28 : fucompi st(0) ; adc bl, byte ptr [rbx + 0x1b] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054da2a : fucompi st(0) ; adc byte ptr [rbp + 0x18], ch ; add byte ptr [rax - 0x77], cl ; ret
0x000000000062ac2a : fucompi st(0) ; adc byte ptr [rbx - 0x76b7fff6], bl ; ret
0x000000000051232a : fucompi st(0) ; adc byte ptr [rsp + rbx], ah ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a3b28 : fucompi st(0) ; adc cl, byte ptr [rbx + rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058b428 : fucompi st(0) ; adc dl, byte ptr [rbx - 0x76b7ffec] ; ret
0x000000000051f128 : fucompi st(0) ; adc dl, byte ptr [rsi + 0x1b] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000559829 : fucompi st(0) ; adc dword ptr [rdi - 0x76b7ffe9], ebp ; ret
0x000000000055ed29 : fucompi st(0) ; adc dword ptr [rdx + 0x17], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000407325 : fucompi st(0) ; adc eax, 0x58002cd4 ; pop rbx ; pop rbp ; ret
0x00000000004073b9 : fucompi st(0) ; adc ebx, 0x5b58002c ; pop rbp ; ret
0x0000000000406829 : fucompi st(0) ; adc edi, ebx ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000405427 : fucompi st(0) ; adc esi, ebx ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000004046fa : fucompi st(0) ; add byte ptr [rip + 0x5d5b5800], bpl ; ret
0x00000000006af138 : fucompi st(0) ; add dl, byte ptr [rsi + 2] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000628a39 : fucompi st(0) ; add dword ptr [rbp - 0x76b7fff6], edi ; ret
0x0000000000406c35 : fucompi st(0) ; add eax, 0x58002cdb ; pop rbx ; pop rbp ; ret
0x00000000005722ee : fucompi st(0) ; and al, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000405216 : fucompi st(0) ; and al, 0xf5 ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000064f218 : fucompi st(0) ; and dl, byte ptr [rbp + 8] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058df19 : fucompi st(0) ; and dword ptr [rax + 0x14], ebp ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058cc19 : fucompi st(0) ; and dword ptr [rbx + 0x14], edi ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000520b19 : fucompi st(0) ; and dword ptr [rbx + rbx], edi ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000406f19 : fucompi st(0) ; and eax, ebx ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000005b9a09 : fucompi st(0) ; and edi, 0x15fffff3 ; retf
0x000000000057f017 : fucompi st(0) ; and edx, dword ptr [rdi + 0x15] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000406ba1 : fucompi st(0) ; cdq ; fld xword ptr [rax + rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000054c03e : fucompi st(0) ; cld ; xchg byte ptr [rax], bl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000574645 : fucompi st(0) ; cmc ; add byte ptr [rsi], dl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000652545 : fucompi st(0) ; cmc ; and dword ptr [rax], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000406545 : fucompi st(0) ; cmc ; loope 0x40657f ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x0000000000555045 : fucompi st(0) ; cmc ; not byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054c245 : fucompi st(0) ; cmc ; test byte ptr [rax], bl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000544302 : fucompi st(0) ; cmp byte ptr [rcx + rbx], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000052f900 : fucompi st(0) ; cmp cl, byte ptr [rsi + 0x1a] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004071fd : fucompi st(0) ; cmp eax, 0x58002cd5 ; pop rbx ; pop rbp ; ret
0x0000000000406701 : fucompi st(0) ; cmp eax, esp ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000005aadff : fucompi st(0) ; cmp ebx, dword ptr [rcx - 0x76b7ffee] ; ret
0x0000000000508fff : fucompi st(0) ; cmp esi, dword ptr [rdi - 0x76b7ffe4] ; ret
0x0000000000546b94 : fucompi st(0) ; cmpsb byte ptr [rsi], byte ptr [rdi] ; fistp dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000056be94 : fucompi st(0) ; cmpsb byte ptr [rsi], byte ptr [rdi] ; mov byte ptr [rsi], dl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000597594 : fucompi st(0) ; cmpsb byte ptr [rsi], byte ptr [rdi] ; rcl dword ptr [rbx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000549544 : fucompi st(0) ; div byte ptr [rcx - 0x76b7ffe8] ; ret
0x0000000000407562 : fucompi st(0) ; fcom st(1) ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000051ee5c : fucompi st(0) ; ficomp word ptr [rax + 0x1b] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000068bb5c : fucompi st(0) ; fimul word ptr [rbx - 0x76b7fffc] ; ret
0x0000000000596bd4 : fucompi st(0) ; fist dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000406df1 : fucompi st(0) ; fldcw word ptr [r8 + rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000516df0 : fucompi st(0) ; fstp dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000406d5d : fucompi st(0) ; fstp st(1) ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000054fb58 : fucompi st(0) ; hlt ; call qword ptr [rdx]
0x0000000000535f46 : fucompi st(0) ; hlt ; out 0x19, eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a2f58 : fucompi st(0) ; hlt ; retf
0x000000000050c944 : fucompi st(0) ; idiv byte ptr [rbp + 0x1c] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000516bd1 : fucompi st(0) ; imul ebx, ebx, 0x8948001b ; ret
0x00000000006271cf : fucompi st(0) ; imul edx, ebp, 0xa ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000405843 : fucompi st(0) ; imul esi ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000005b54cf : fucompi st(0) ; imul esi, edx, 0x11 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000053bc4e : fucompi st(0) ; in al, dx ; mov bl, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004061fa : fucompi st(0) ; in eax, 0x2c ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x0000000000404555 : fucompi st(0) ; in eax, 1 ; sub eax, 0x5d5b5800 ; ret
0x000000000057634d : fucompi st(0) ; in eax, dx ; jrcxz 0x57636f ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040744d : fucompi st(0) ; in eax, dx ; shr byte ptr [rax + rax], cl ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000005721ce : fucompi st(0) ; insb byte ptr [rdi], dx ; and eax, 0x89480016 ; ret
0x0000000000543ece : fucompi st(0) ; insb byte ptr [rdi], dx ; or byte ptr [rcx], bl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005325cd : fucompi st(0) ; insd dword ptr [rdi], dx ; and dword ptr [rdx], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000518449 : fucompi st(0) ; int1 ; ret 0x1b
0x0000000000404dbd : fucompi st(0) ; jge 0x404dc3 ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000004068bd : fucompi st(0) ; jge 0x4068a8 ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000006b243b : fucompi st(0) ; jmp qword ptr [rdx]
0x000000000050b1db : fucompi st(0) ; jmp rsi
0x0000000000406cc9 : fucompi st(0) ; jno 0x406cb0 ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000405fc2 : fucompi st(0) ; js 0x405fb6 ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000005447f7 : fucompi st(0) ; lcall ptr [r8] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000556d71 : fucompi st(0) ; leave ; fst dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000528b71 : fucompi st(0) ; leave ; mov ebx, 0x8948001a ; ret
0x0000000000528471 : fucompi st(0) ; leave ; ret 0x1a
0x00000000005582f5 : fucompi st(0) ; les r10d, ptr [r15] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000587c8e : fucompi st(0) ; lodsb al, byte ptr [rsi] ; retf 0x14
0x0000000000522e8e : fucompi st(0) ; lodsb al, byte ptr [rsi] ; sbb byte ptr [rbx], bl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000057d58d : fucompi st(0) ; lodsd eax, dword ptr [rsi] ; jno 0x57d5af ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005966f4 : fucompi st(0) ; loopne 0x596714 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006266f5 : fucompi st(0) ; loopne 0x62670c ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040798a : fucompi st(0) ; mov al, 0xcd ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000528fd4 : fucompi st(0) ; mov bh, 0x1a ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004fc9b2 : fucompi st(0) ; mov byte ptr [rbp + 0x1d], bh ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000406e85 : fucompi st(0) ; mov ch, 0xd8 ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000005ac0b1 : fucompi st(0) ; mov dword ptr [rsi - 0x76b7ffee], eax ; ret
0x0000000000528a04 : fucompi st(0) ; mov ebp, 0x8948001a ; ret
0x000000000040477f : fucompi st(0) ; mov ebx, 0x58002cff ; pop rbx ; pop rbp ; ret
0x00000000005a94ed : fucompi st(0) ; mov r10b, 0x12 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000508bf7 : fucompi st(0) ; mov r11d, 0x8948001c ; ret
0x000000000054b6ae : fucompi st(0) ; mov word ptr [rax - 0x76b7ffe8], ss ; ret
0x00000000005abb04 : fucompi st(0) ; mov word ptr ss:[rdx], ss ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006a6096 : fucompi st(0) ; movsb byte ptr [rdi], byte ptr [rsi] ; out 2, al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000406795 : fucompi st(0) ; movsd dword ptr [rdi], dword ptr [rsi] ; fild qword ptr [rax + rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000056e443 : fucompi st(0) ; mul dword ptr [rdx + 0x16] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005693aa : fucompi st(0) ; nop ; mov bl, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005984aa : fucompi st(0) ; nop ; ret 0x13
0x000000000062f644 : fucompi st(0) ; not byte ptr [rax + 0xa] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000051f732 : fucompi st(0) ; or byte ptr [rax + 0x1b], dl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005ac132 : fucompi st(0) ; or byte ptr [rsi - 0x76b7ffee], al ; ret
0x000000000062882f : fucompi st(0) ; or edi, dword ptr [rdi - 0x76b7fff6] ; ret
0x000000000050a72f : fucompi st(0) ; or esp, dword ptr [rax - 0x76b7ffe4] ; ret
0x000000000057244c : fucompi st(0) ; out dx, al ; and dl, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054394c : fucompi st(0) ; out dx, al ; or eax, 0x89480019 ; ret
0x000000000068cedc : fucompi st(0) ; out dx, al ; retf
0x00000000005a87cb : fucompi st(0) ; outsd dx, dword ptr [rsi] ; mov edi, 0x89480012 ; ret
0x0000000000522dcb : fucompi st(0) ; outsd dx, dword ptr [rsi] ; sbb dword ptr [rbx], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005564dd : fucompi st(0) ; pop rbp ; loop 0x556501 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006269e1 : fucompi st(0) ; pop rcx ; fisttp qword ptr [rdx] ; add bl, ch ; retf -0x3715
0x000000000054d3db : fucompi st(0) ; pop rdi ; jae 0x54d400 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058d4db : fucompi st(0) ; pop rdi ; jb 0x58d4fc ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000545dac : fucompi st(0) ; pop rsi ; idiv edi ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x000000000054cddc : fucompi st(0) ; pop rsi ; jns 0x54ce00 ; add bl, ch ; retf 0x41f0
0x00000000004060de : fucompi st(0) ; pop rsp ; out 0x2c, al ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x0000000000404f9d : fucompi st(0) ; popfq ; imul dword ptr [rax + rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000051cf9d : fucompi st(0) ; popfq ; ja 0x51cfc5 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000057123b : fucompi st(0) ; push qword ptr [rsi + rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054d0ea : fucompi st(0) ; push rax ; jbe 0x54d10f ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000523eea : fucompi st(0) ; push rax ; or byte ptr [rbx], bl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005584ea : fucompi st(0) ; push rax ; ret 0x17
0x000000000059442a : fucompi st(0) ; push rax ; retf
0x00000000005461e7 : fucompi st(0) ; push rbx ; in eax, 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000523ce9 : fucompi st(0) ; push rcx ; or bl, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005714e9 : fucompi st(0) ; push rcx ; xor dl, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005721e3 : fucompi st(0) ; push rdi ; and eax, 0x89480016 ; ret
0x00000000005243e6 : fucompi st(0) ; push rsp ; add ebx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058d1e6 : fucompi st(0) ; push rsp ; jne 0x58d207 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000571e9e : fucompi st(0) ; pushfq ; sub byte ptr [rsi], dl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000569d9e : fucompi st(0) ; pushfq ; test eax, 0x89480016 ; ret
0x000000000058b668 : fucompi st(0) ; rcl byte ptr [rax - 0x76b7ffec], cl ; ret
0x0000000000407169 : fucompi st(0) ; rcl ebp, 1 ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000056ae67 : fucompi st(0) ; rcr dword ptr [rax - 0x76b7ffea], cl ; ret
0x0000000000406a79 : fucompi st(0) ; rcr esp, 0x2c ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000041f1d3 : fucompi st(0) ; ret
0x0000000000593578 : fucompi st(0) ; ret 0x1411
0x0000000000539c78 : fucompi st(0) ; ret 0x19aa
0x0000000000535978 : fucompi st(0) ; ret 0x19ed
0x0000000000407c78 : fucompi st(0) ; ret 0x2cca
0x000000000055e1a8 : fucompi st(0) ; ret 0xea5a
0x0000000000693348 : fucompi st(0) ; ret 0xffd2
0x00000000006bdf18 : fucompi st(0) ; ret 0xfffb
0x00000000004f81a8 : fucompi st(0) ; ret 0xfffd
0x0000000000676758 : fucompi st(0) ; ret 0xfffe
0x0000000000636fb8 : fucompi st(0) ; ret 0xffff
0x000000000051d96f : fucompi st(0) ; retf
0x00000000006579c0 : fucompi st(0) ; retf -0x15f9
0x0000000000671780 : fucompi st(0) ; retf -0x26dc
0x00000000005c1030 : fucompi st(0) ; retf -0x38
0x0000000000631160 : fucompi st(0) ; retf -0x825
0x00000000005d8ecc : fucompi st(0) ; retf 0x10d
0x00000000005bfc70 : fucompi st(0) ; retf 0x114a
0x00000000005a2c70 : fucompi st(0) ; retf 0x131a
0x0000000000597f70 : fucompi st(0) ; retf 0x13c7
0x0000000000572f70 : fucompi st(0) ; retf 0x1617
0x0000000000570570 : fucompi st(0) ; retf 0x1641
0x0000000000547370 : fucompi st(0) ; retf 0x18d3
0x000000000052ee70 : fucompi st(0) ; retf 0x1a58
0x0000000000515810 : fucompi st(0) ; retf 0x1ae2
0x0000000000514240 : fucompi st(0) ; retf 0x1af8
0x0000000000504f70 : fucompi st(0) ; retf 0x1cf7
0x0000000000503a70 : fucompi st(0) ; retf 0x1d0c
0x0000000000685f70 : fucompi st(0) ; retf 0x4e7
0x00000000005fd270 : fucompi st(0) ; retf 0xd74
0x000000000040466a : fucompi st(0) ; rol byte ptr [rax], 1 ; sub eax, 0x5d5b5800 ; ret
0x00000000005b4269 : fucompi st(0) ; rol dword ptr [rdx + rdx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000550c9c : fucompi st(0) ; sahf ; cmp bl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040529c : fucompi st(0) ; sahf ; hlt ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000403d9c : fucompi st(0) ; sahf ; or dword ptr [rip + 0x5d5b5800], ebp ; ret
0x0000000000598f68 : fucompi st(0) ; sal byte ptr [rdi - 0x76b7ffed], cl ; ret
0x0000000000573564 : fucompi st(0) ; salc ; adc dword ptr [rsi], edx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000679464 : fucompi st(0) ; salc ; mov dl, 5 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000528a64 : fucompi st(0) ; salc ; mov esp, 0x8948001a ; ret
0x0000000000573a64 : fucompi st(0) ; salc ; or al, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004070d5 : fucompi st(0) ; salc ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000403e22 : fucompi st(0) ; sbb byte ptr [rcx], cl ; sub eax, 0x5d5b5800 ; ret
0x00000000005fd122 : fucompi st(0) ; sbb byte ptr [rsi + 0xd], dh ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005abd21 : fucompi st(0) ; sbb dword ptr [rdx - 0x76b7ffee], ecx ; ret
0x00000000005a2a04 : fucompi st(0) ; sbb eax, 0x89480013 ; ret
0x0000000000570b1f : fucompi st(0) ; sbb edi, dword ptr [rsi + rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000405021 : fucompi st(0) ; sbb edi, esi ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000040531f : fucompi st(0) ; sbb esi, esp ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000005f948b : fucompi st(0) ; scasd eax, dword ptr [rdi] ; mov dl, 0xd ; add byte ptr [rax - 0x77], cl ; ret
0x000000000055b17b : fucompi st(0) ; scasd eax, dword ptr [rdi] ; ret 0xffff
0x0000000000684034 : fucompi st(0) ; setp al ; ret
0x000000000040627a : fucompi st(0) ; shl ah, 0x2c ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000005fdf67 : fucompi st(0) ; shl dword ptr [rdi + 0xd], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000060dc68 : fucompi st(0) ; shr byte ptr [rdx + 0xc], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004074d5 : fucompi st(0) ; shr byte ptr gs:[rax + rax], cl ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000058dc69 : fucompi st(0) ; shr dword ptr [rdx + 0x14], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004075ee : fucompi st(0) ; shr qword ptr [rax + rax], 1 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000005acf41 : fucompi st(0) ; stc ; ja 0x5acf60 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f9641 : fucompi st(0) ; stc ; mov al, 0x1d ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000407041 : fucompi st(0) ; stc ; salc ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000558f3d : fucompi st(0) ; std ; mov bh, 0x17 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000407c3f : fucompi st(0) ; sti ; retf 0x2c
0x0000000000604190 : fucompi st(0) ; stosb byte ptr [rdi], al ; add eax, 0x8948000d ; ret
0x0000000000659590 : fucompi st(0) ; stosb byte ptr [rdi], al ; mov cl, 7 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000056848f : fucompi st(0) ; stosd dword ptr [rdi], eax ; ret 0x16
0x0000000000407a10 : fucompi st(0) ; sub cl, ch ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000068c711 : fucompi st(0) ; sub dword ptr [rax - 0x3214fffc], eax ; jmp 0x68c6ef
0x000000000056a711 : fucompi st(0) ; sub dword ptr [rax - 0x76b7ffea], esp ; ret
0x0000000000406b0d : fucompi st(0) ; sub eax, 0x58002cdc ; pop rbx ; pop rbp ; ret
0x00000000005319f4 : fucompi st(0) ; sub eax, 0x8948001a ; ret
0x00000000004057b7 : fucompi st(0) ; sub edi, 0x2c ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000005bcab3 : fucompi st(0) ; sub edi, dword ptr [rsp + rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000539eef : fucompi st(0) ; test al, 0x19 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000051a5b6 : fucompi st(0) ; test byte ptr [rcx - 0x76b7ffe5], ah ; ret
0x0000000000598544 : fucompi st(0) ; test cl, 0x13 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050b5b5 : fucompi st(0) ; test dword ptr [rcx - 0x76b7ffe4], edx ; ret
0x0000000000407291 : fucompi st(0) ; test eax, 0x58002cd4 ; pop rbx ; pop rbp ; ret
0x0000000000627e43 : fucompi st(0) ; test eax, 0x8948000a ; ret
0x000000000052359f : fucompi st(0) ; wait ; adc dword ptr [rbx], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000538b9f : fucompi st(0) ; wait ; mov ebx, 0x63480019 ; ret
0x00000000005ad5b4 : fucompi st(0) ; xchg byte ptr [rcx + 0x12], dh ; add byte ptr [rax - 0x77], cl ; ret
0x000000000062bdb4 : fucompi st(0) ; xchg byte ptr [rcx - 0x76b7fff6], cl ; ret
0x000000000058f3b3 : fucompi st(0) ; xchg dword ptr [rbx + 0x14], edx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000508db3 : fucompi st(0) ; xchg dword ptr [rcx - 0x76b7ffe4], edi ; ret
0x00000000005942a7 : fucompi st(0) ; xchg eax, ebx ; add al, 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005650a7 : fucompi st(0) ; xchg eax, ebx ; not byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000626ca3 : fucompi st(0) ; xchg eax, edi ; fimul dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004053a3 : fucompi st(0) ; xchg eax, edi ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000053d0a8 : fucompi st(0) ; xchg eax, edx ; jbe 0x53d0ce ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006791a8 : fucompi st(0) ; xchg eax, edx ; mov ch, 5 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000403ea8 : fucompi st(0) ; xchg eax, edx ; or byte ptr [rip + 0x5d5b5800], ch ; ret
0x00000000006525a4 : fucompi st(0) ; xchg eax, esi ; and dword ptr [rax], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000531ea4 : fucompi st(0) ; xchg eax, esi ; sub byte ptr [rdx], bl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006c0a63 : fucompi st(0) ; xlatb ; cmp al, 1 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000052466a : fucompi st(0) ; xor bh, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000005716f5 : fucompi st(0) ; xor byte ptr [r14], r10b ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054d908 : fucompi st(0) ; xor ch, byte ptr [rsi + 0x18] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a9208 : fucompi st(0) ; xor dh, byte ptr [rbp - 0x76b7ffee] ; ret
0x0000000000408605 : fucompi st(0) ; xor eax, 0x58002cc1 ; pop rbx ; pop rbp ; ret
0x00000000006a5b32 : fucompi st(2) ; ja 0x6a5b56 ; fstp st(0) ; ret
0x0000000000512d62 : fucompi st(3) ; retf 0x6690
0x00000000007aad71 : fucompi st(4) ; jmp qword ptr [rcx]
0x00000000005263ae : fucompi st(5) ; dec dword ptr [rax - 0x77] ; ret
0x00000000006b1683 : fucompi st(7) ; cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000621ec3 : fxch st(0), st(1) ; ret
0x0000000000753c69 : fxch st(0), st(6) ; call rsp
0x0000000000757b39 : fxch st(0), st(7) ; call qword ptr [rbx]
0x0000000000757ad9 : fxch st(0), st(7) ; call qword ptr [rcx]
0x0000000000757a99 : fxch st(0), st(7) ; jmp qword ptr [rax]
0x0000000000684046 : fxch st(1) ; fyl2x ; ret
0x00000000006a5b30 : fxch st(2) ; fucompi st(2) ; ja 0x6a5b58 ; fstp st(0) ; ret
0x0000000000747705 : fxtract ; call qword ptr [rax]
0x0000000000684048 : fyl2x ; ret
0x000000000078fbfc : hlt ; add al, 0 ; push rax ; or edx, esp ; jmp qword ptr [rdx]
0x000000000079ab2d : hlt ; add al, 0 ; xor cl, 0xe6 ; jmp qword ptr [rcx]
0x0000000000583258 : hlt ; add al, byte ptr [rax] ; add byte ptr [rcx], ch ; ret
0x00000000005eb836 : hlt ; add bh, bh ; dec ecx ; ret
0x00000000005bc207 : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000075ab3c : hlt ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000000006867d0 : hlt ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x634801c2], al ; ret 0x6348
0x000000000075e63c : hlt ; add dword ptr cs:[rax], eax ; xor al, 0x14 ; sar bh, cl ; retf
0x000000000078ab35 : hlt ; add eax, dword ptr [rax] ; in al, -0x20 ; jmp qword ptr [rax]
0x00000000007c7be7 : hlt ; add eax, dword ptr [rax] ; ret 0x2c02
0x00000000007d7401 : hlt ; add eax, dword ptr [rcx] ; retf
0x00000000007cddc3 : hlt ; add eax, dword ptr [rip - 0x6fae839] ; add eax, dword ptr [rsi] ; ret 0x17
0x0000000000639100 : hlt ; add rsp, 0x18 ; ret
0x0000000000501db2 : hlt ; call 0x6be8b3
0x0000000000746c86 : hlt ; call qword ptr [rax]
0x000000000054fb5a : hlt ; call qword ptr [rdx]
0x0000000000746ca6 : hlt ; call rax
0x000000000060aa49 : hlt ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000056be6e : hlt ; cmp al, 0x11 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005bd602 : hlt ; cmp al, 0xc ; add byte ptr [rax - 0x77], cl ; ret
0x000000000075f33c : hlt ; cmp eax, dword ptr [rcx] ; add byte ptr [rdx], cl ; out 0xd2, al ; jmp qword ptr [rcx]
0x0000000000747466 : hlt ; dec dword ptr [rax - 0x4ffff87c] ; ret
0x000000000057c062 : hlt ; dec dword ptr [rax - 0x77] ; ret
0x00000000007470ee : hlt ; dec dword ptr [rax] ; je 0x747103 ; add al, ah ; push rsp ; hlt ; jmp qword ptr [rax]
0x0000000000747296 : hlt ; dec dword ptr [rax] ; jge 0x7472ab ; add byte ptr [rax - 0x52], al ; hlt ; jmp qword ptr [rax]
0x0000000000747126 : hlt ; dec dword ptr [rax] ; jne 0x74713b ; add al, al ; push rdi ; hlt ; jmp qword ptr [rax]
0x000000000074709e : hlt ; dec eax ; jb 0x7470b3 ; add al, al ; push rdx ; hlt ; jmp rax
0x000000000074765e : hlt ; dec eax ; mov eax, dword ptr [rdi] ; add byte ptr [rsi], cl ; sal ah, cl ; jmp rax
0x000000000075903c : hlt ; fadd dword ptr [rax] ; add byte ptr [rdx], bl ; cmp edx, eax ; call rsp
0x0000000000653904 : hlt ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000006a49e8 : hlt ; imul ecx, dword ptr [rax], 0x2e0f6600 ; retf 0x1372
0x00000000007ac3d0 : hlt ; in eax, dx ; call qword ptr [rbx]
0x00000000006dcb08 : hlt ; inc dword ptr [rax + rax] ; add byte ptr [rax], al ; add al, cl ; retf 0x6d
0x0000000000746eae : hlt ; inc dword ptr [rax] ; imul eax, dword ptr [rdi], 0 ; and byte ptr [rdi], dh ; hlt ; jmp qword ptr [rax]
0x000000000074743e : hlt ; inc dword ptr [rax] ; test byte ptr [rdi], al ; add ah, ch ; ret 0xfff4
0x00000000007358a5 : hlt ; iretd ; call qword ptr [rax]
0x0000000000746cb6 : hlt ; jmp qword ptr [rax]
0x0000000000746c76 : hlt ; jmp rax
0x00000000005d90d8 : hlt ; jne 0x5d90ee ; add cl, cl ; ret
0x00000000007b28fc : hlt ; jno 0x7b290c ; add byte ptr [rax - 0x12], al ; out dx, al ; jmp qword ptr [rsi]
0x00000000005a2ce8 : hlt ; jo 0x5a2cf2 ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000004515b8 : hlt ; jrcxz 0x4515e4 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004d78d8 : hlt ; lea ebx, dword ptr [rsi] ; add cl, cl ; ret
0x00000000007474de : hlt ; ljmp ptr [rax + 0x38000786] ; retf
0x00000000005a2830 : hlt ; loop 0x5a2846 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f9248 : hlt ; mov ah, 0x1d ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000756afc : hlt ; mov bl, 0 ; add byte ptr [rsi], bl ; ret 0xffcf
0x000000000061a59c : hlt ; mov byte ptr [rax + 0x18], dl ; pop rbp ; ret
0x00000000007b6cfc : hlt ; mov ch, 6 ; add byte ptr [rax], dl ; stosd dword ptr [rdi], eax ; out dx, eax ; call qword ptr [rcx]
0x00000000007b68fc : hlt ; mov cl, 6 ; add al, dh ; mov edi, gs ; call rsi
0x0000000000622112 : hlt ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000007670fc : hlt ; mov ecx, 0x521a0001 ; salc ; jmp qword ptr [rbx]
0x00000000007b773c : hlt ; mov edi, 0xbcf00006 ; out dx, eax ; call rax
0x000000000047f3fc : hlt ; mov qword ptr [rbp - 0x18], r10 ; pop rbp ; ret
0x0000000000496fbc : hlt ; mov rax, qword ptr [rax*8 + 0x6e9330] ; jmp rax
0x00000000007a5bfc : hlt ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0xeb6b8000 ; jmp qword ptr [rax]
0x00000000006d4ce5 : hlt ; movsxd rax, dword ptr [r9 + r8*4] ; add r9, rax ; jmp r9
0x000000000066ae6c : hlt ; nop ; pop rbp ; ret
0x00000000004c30f0 : hlt ; not dword ptr [rbx] ; call rax
0x00000000007ed07a : hlt ; or al, 5 ; ret 0xd
0x00000000007ac3fc : hlt ; or al, 6 ; add ah, ch ; in eax, dx ; call qword ptr [rbx]
0x0000000000722f70 : hlt ; or dword ptr [rcx - 0x6c], eax ; cmc ; retf
0x000000000064fc83 : hlt ; or eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret 0x187c
0x000000000076c33c : hlt ; or eax, dword ptr [rdx] ; add al, al ; ret
0x0000000000535f48 : hlt ; out 0x19, eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000045071c : hlt ; pop rbp ; ret
0x00000000006868f3 : hlt ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004534cc : hlt ; pop rdx ; add bh, bh ; ror cl, 1 ; ret
0x00000000004134cc : hlt ; pop rsi ; add bh, bh ; ror cl, 1 ; ret
0x000000000063ff22 : hlt ; pop rsi ; call 0xffffffffc3ed482e
0x000000000075553c : hlt ; popfq ; add byte ptr [rax], al ; and dh, byte ptr [rsi - 0x31] ; call rsp
0x000000000074705e : hlt ; push qword ptr [rax + 0x10000771] ; push rax ; hlt ; jmp rax
0x00000000007471a6 : hlt ; push qword ptr [rax + 0x10000777] ; jo 0x7471ac ; call rax
0x0000000000746c9e : hlt ; push qword ptr [rax - 0x4ffff8a1] ; or esp, esi ; call rax
0x00000000007471fe : hlt ; push qword ptr [rax - 0x6ffff887] ; mov dh, ah ; call rax
0x00000000007472ce : hlt ; push rax ; jge 0x7472e3 ; add byte ptr [rax], dl ; mov ah, 0xf4 ; jmp qword ptr [rax]
0x0000000000747256 : hlt ; push rax ; jnp 0x74726b ; add byte ptr [rax - 0x5c], dl ; hlt ; call qword ptr [rax]
0x00000000007476fe : hlt ; push rax ; lea eax, dword ptr [rdi] ; add byte ptr [rcx + rbx*8 - 0xc], bl ; call qword ptr [rax]
0x0000000000722b76 : hlt ; push rdi ; out dx, eax ; ret 0x94a7
0x0000000000766450 : hlt ; rcl ebp, 1 ; call rsp
0x00000000005021d8 : hlt ; ret
0x0000000000787a3c : hlt ; ret 3
0x00000000007979fc : hlt ; ret 4
0x00000000007a79fc : hlt ; ret 5
0x0000000000414702 : hlt ; retf
0x00000000007386ec : hlt ; salc ; jmp rax
0x000000000045ebd8 : hlt ; sbb ah, byte ptr [rsi] ; add cl, cl ; ret
0x00000000005279e8 : hlt ; sbb byte ptr cs:[rax], al ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000007ad2fc : hlt ; sbb eax, dword ptr [rsi] ; add al, al ; je 0x7ad2f7 ; call rsi
0x00000000007e51f9 : hlt ; sbb ebx, dword ptr [rdi] ; ret 0x60d
0x000000000040529f : hlt ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000047fee8 : hlt ; sub dword ptr [rax], ebx ; call rax
0x00000000007dc6ea : hlt ; sub eax, dword ptr [rax] ; ret
0x00000000007dcba9 : hlt ; syscall
0x00000000005da2e8 : hlt ; test dword ptr [rdx], eax ; call rax
0x00000000007baf3c : hlt ; test dword ptr [rsi], 0xf0c85000 ; call rsi
0x000000000059756e : hlt ; test dword ptr [rsi], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000723228 : hlt ; test eax, 0x154c59b8 ; fistp qword ptr [rcx + rdx*8] ; ret 0x85e7
0x00000000004d0287 : idiv bh ; call qword ptr [rax]
0x00000000004d013a : idiv bh ; call rax
0x000000000074868e : idiv bh ; clc ; fadd dword ptr [rdi] ; add byte ptr [rax], dh ; or dh, dh ; call qword ptr [rax]
0x00000000005495f2 : idiv bh ; dec dword ptr [rax - 0x75] ; cmp cl, byte ptr [rax - 0x77] ; ret
0x0000000000614a9d : idiv bh ; dec dword ptr [rax - 0x77] ; clc ; leave ; ret
0x00000000004c2f89 : idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c7782 : idiv bh ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000006b8787 : idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000477e62 : idiv bh ; dec dword ptr [rax - 0x7f] ; ret 0x148
0x000000000047808a : idiv bh ; dec dword ptr [rax - 0x7f] ; ret 0xc8
0x0000000000478020 : idiv bh ; dec dword ptr [rax - 0x7f] ; ret 0xd8
0x0000000000477fe3 : idiv bh ; dec dword ptr [rax - 0x7f] ; ret 0xe8
0x0000000000477fa6 : idiv bh ; dec dword ptr [rax - 0x7f] ; ret 0xf8
0x00000000004770e7 : idiv bh ; dec dword ptr [rcx - 0x77] ; ret 0x1be
0x0000000000478186 : idiv bh ; dec dword ptr [rcx - 0x77] ; ret 0xe5e8
0x00000000006153d7 : idiv bh ; dec ecx ; ret
0x00000000004cbeed : idiv bh ; inc dword ptr [rbx - 0x7bf0fe05] ; retf 1
0x00000000004d037e : idiv bh ; jmp qword ptr [rax]
0x0000000000438279 : idiv bh ; jmp rax
0x0000000000748b6e : idiv bh ; mov eax, 0x300007f0 ; loope 0x748b76 ; call rax
0x0000000000748bb6 : idiv bh ; mov eax, 0xa00007f1 ; in al, -0xa ; call rax
0x00000000004ebee1 : idiv bh ; mov rax, qword ptr [rip + 0x5169f6] ; call rax
0x00000000004eba72 : idiv bh ; mov rax, qword ptr [rip + 0x516e65] ; call rax
0x0000000000503a9c : idiv byte ptr [rax + 3] ; cmove eax, edi ; ret
0x000000000050c946 : idiv byte ptr [rbp + 0x1c] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000589500 : idiv byte ptr [rbp + 0xf] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000693d29 : idiv byte ptr [rcx] ; retf 0x57c
0x0000000000554455 : idiv byte ptr [rdi + 0xa0a2c8] ; call 0x6c06d8
0x000000000067f902 : idiv byte ptr [rdi - 0x3a] ; ret
0x000000000060322b : idiv byte ptr [rdi] ; add al, ch ; jmp rdx
0x00000000006c1868 : idiv byte ptr [rdx + 0x730f30] ; mov rdi, rbx ; call rax
0x000000000062806c : idiv byte ptr [rdx + 5] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006a1786 : idiv byte ptr [rsi + 0x17] ; add rsp, 8 ; ret
0x00000000005bce09 : idiv dil ; dec dword ptr [rax - 0x77] ; ret
0x00000000006153d6 : idiv dil ; dec ecx ; ret
0x0000000000438278 : idiv dil ; jmp rax
0x0000000000534d91 : idiv dword ptr [rbp - 0x76b7ffec] ; ret
0x000000000052c2d8 : idiv dword ptr [rbx] ; call rax
0x00000000006c0691 : idiv ebx ; imul rax, rbx ; pop rbx ; ret
0x000000000060bc82 : idiv edi ; add rsp, 8 ; ret
0x0000000000436abb : idiv edi ; call qword ptr [rax - 0x3d]
0x00000000004d05e6 : idiv edi ; call qword ptr [rax]
0x00000000004d061f : idiv edi ; call rax
0x0000000000749936 : idiv edi ; clc ; or byte ptr cs:[rax], al ; ret
0x000000000074984e : idiv edi ; clc ; sub cl, byte ptr [rax] ; add al, al ; mov cl, 0xf7 ; call qword ptr [rax]
0x0000000000749a4e : idiv edi ; clc ; xor al, 8 ; add al, dh ; in eax, -9 ; call qword ptr [rax]
0x00000000006b43dd : idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x00000000005c82e4 : idiv edi ; dec dword ptr [rax + 0x63] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004c2ee2 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000052466d : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000006a6d21 : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0xc148
0x00000000004cda74 : idiv edi ; dec dword ptr [rcx - 0x77] ; ret 0x8948
0x00000000004cd79a : idiv edi ; dec dword ptr [rcx - 0x77] ; ret 0x8ba
0x00000000004cd752 : idiv edi ; dec dword ptr [rcx - 0x77] ; ret 0xba
0x00000000004cda0e : idiv edi ; dec dword ptr [rcx - 0x77] ; ret 0xbfe8
0x00000000004cdd59 : idiv edi ; dec dword ptr [rcx - 0x77] ; ret 0xc0e8
0x00000000004cdb0a : idiv edi ; dec dword ptr [rcx - 0x77] ; ret 0xcfe8
0x0000000000615215 : idiv edi ; dec ecx ; ret
0x00000000007491a6 : idiv edi ; enter 0x80b, 0 ; and byte ptr [rcx - 9], dl ; jmp rax
0x00000000007492de : idiv edi ; enter 0x811, 0 ; adc byte ptr [rdx - 9], ch ; jmp rax
0x00000000007493ce : idiv edi ; enter 0x815, 0 ; and byte ptr [rcx - 9], dh ; jmp rax
0x0000000000749476 : idiv edi ; enter 0x817, 0 ; nop ; jb 0x74947f ; jmp rax
0x000000000074988e : idiv edi ; enter 0x82b, 0 ; mov bl, 0xf7 ; jmp rax
0x00000000004c881a : idiv edi ; inc dword ptr [rbx - 0x7bf0fe05] ; ret
0x000000000074992e : idiv edi ; loopne 0x749967 ; or byte ptr [rax], al ; ret 0xfff7
0x0000000000748f96 : idiv edi ; mov al, 3 ; or byte ptr [rax], al ; cmp byte ptr [rsi], 0xf7 ; jmp rax
0x0000000000748d76 : idiv edi ; mov eax, 0x500007f9 ; adc edi, esi ; call rax
0x00000000007497a6 : idiv edi ; mov eax, 0x50000827 ; test al, 0xf7 ; call rax
0x00000000007499de : idiv edi ; mov eax, 0x50000832 ; fcompi st(7) ; call rax
0x00000000007494b6 : idiv edi ; mov eax, 0x818 ; je 0x7494bf ; call rax
0x000000000074941e : idiv edi ; mov eax, 0xc0000816 ; jno 0x749427 ; call rax
0x0000000000748dee : idiv edi ; mov eax, 0xd00007fb ; sbb edi, esi ; call rax
0x00000000004e2e98 : idiv edi ; mov rax, qword ptr [rip + 0x51fa3f] ; call rax
0x00000000004e2d22 : idiv edi ; mov rax, qword ptr [rip + 0x51fbb5] ; call rax
0x00000000004e15a7 : idiv edi ; mov rax, qword ptr [rip + 0x521330] ; call rax
0x000000000074989e : idiv edi ; or byte ptr [rax + rcx], ch ; add al, ah ; mov bl, 0xf7 ; jmp qword ptr [rax]
0x000000000074901e : idiv edi ; or byte ptr [rsi], al ; or byte ptr [rax], al ; add byte ptr [rbx - 9], al ; jmp qword ptr [rax]
0x00000000004f0107 : idiv edi ; pop rbp ; ret
0x0000000000607096 : idiv edi ; ror byte ptr [rbp + rcx*4 + 0x3c], 1 ; sbb byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000749a0e : idiv edi ; test al, 0x33 ; or byte ptr [rax], al ; push rax ; loop 0x749a17 ; call rax
0x00000000006671bb : idiv esi ; add rsp, 8 ; ret
0x00000000005ea193 : idiv esi ; dec ecx ; ret
0x000000000060bc81 : idiv r15 ; add rsp, 8 ; ret
0x0000000000653aad : idiv r15b ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c7781 : idiv r15b ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000006c0690 : idiv rbx ; imul rax, rbx ; pop rbx ; ret
0x00000000006539ae : idiv rdi ; dec dword ptr [rax - 0x77] ; ret
0x00000000006671ba : idiv rsi ; add rsp, 8 ; ret
0x00000000007a2381 : imul al ; call rdi
0x000000000066c878 : imul al ; ret 0xd972
0x0000000000599828 : imul al ; ret 0xf07
0x00000000006a696f : imul al ; retf
0x0000000000561120 : imul al ; retf 0x128b
0x0000000000514a97 : imul al ; xchg eax, ebp ; retf 0x16
0x000000000050b6b8 : imul al ; xchg eax, edx ; ret 0x17
0x0000000000528f8d : imul bl ; ret 0x8348
0x0000000000524f6c : imul byte ptr [rbx - 0x76b7ffeb] ; ret
0x0000000000735354 : imul byte ptr [rdi - 0x31] ; lcall ptr [rax] ; retf
0x0000000000610916 : imul byte ptr [rdi] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000006876d6 : imul byte ptr [rsi + 3] ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x00000000007afe49 : imul ch ; call qword ptr [rax]
0x00000000005190b5 : imul dword ptr [rax + 0x17] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000404fa0 : imul dword ptr [rax + rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000584bb5 : imul dword ptr [rbp + 0x29480010] ; ret
0x000000000041edf1 : imul dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000006593d4 : imul eax ; mov bl, 7 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006295a7 : imul eax ; ret
0x000000000065b038 : imul eax ; ret 0xeb4c
0x0000000000549a28 : imul eax ; ret 0xfc86
0x000000000053081f : imul eax ; retf
0x00000000005fb7f3 : imul eax ; xlatb ; sub eax, 0x8948000c ; ret
0x0000000000529a71 : imul eax, dword ptr [rax + rax], 0 ; mov rdi, rbx ; call rax
0x000000000063ac1b : imul eax, dword ptr [rax + rax], 0x15ffc589 ; ret 0x3c7c
0x0000000000639206 : imul eax, dword ptr [rax + rax], 0x89489ceb ; ret
0x0000000000752295 : imul eax, dword ptr [rax], 0 ; ret 0xce19
0x00000000005fbd2c : imul eax, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000061570c : imul eax, dword ptr [rax], 0x58b4800 ; retf 0x3ed1
0x0000000000783d3c : imul eax, dword ptr [rax], 0x84040000 ; ret
0x000000000068e09d : imul eax, dword ptr [rax], 0x8c48348 ; ret
0x0000000000783d6c : imul eax, dword ptr [rax], 0xa4040000 ; ret
0x0000000000752135 : imul eax, dword ptr [rax], 0xce167000 ; call rdx
0x00000000005ae199 : imul eax, dword ptr [rbp], 0x31 ; ror byte ptr [rax - 0x77], 0x15 ; ret
0x00000000007820b5 : imul eax, dword ptr [rbx], 0xded78800 ; call qword ptr [rdi]
0x00000000007622ed : imul eax, dword ptr [rcx], 0 ; shl byte ptr [rsi], 0xd4 ; jmp qword ptr [rbx]
0x000000000053f841 : imul eax, dword ptr [rcx], 0x15 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000679267 : imul eax, dword ptr [rcx], 0x1f0f6600 ; add byte ptr [rax], r8b ; ret
0x000000000068e574 : imul eax, dword ptr [rcx], 0xeb038b48 ; ret 0x1f0f
0x000000000064fc7f : imul eax, dword ptr [rdi + rcx], -0x71 ; hlt ; or eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret 0x187c
0x0000000000746eb1 : imul eax, dword ptr [rdi], 0 ; and byte ptr [rdi], dh ; hlt ; jmp qword ptr [rax]
0x00000000004f6a5c : imul eax, dword ptr [rdx], -0x7d ; ret
0x000000000064fbf4 : imul eax, dword ptr [rdx], 0 ; add byte ptr [rax + 0x63], cl ; ret
0x00000000007374c9 : imul eax, dword ptr [rdx], 0xd30be200 ; call rax
0x00000000007374d9 : imul eax, dword ptr [rdx], 0xd30eb800 ; jmp qword ptr [rax]
0x000000000077207d : imul eax, dword ptr [rdx], 0xdb08e000 ; jmp rax
0x00000000005bfcda : imul eax, dword ptr [rsp + rax*2], 0x2944318b ; jrcxz 0x5bfc6f ; ret
0x00000000006c0694 : imul eax, ebx ; pop rbx ; ret
0x00000000005a7fd1 : imul eax, edi, 0x12 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000667701 : imul eax, edi, 0x3b9aca00 ; add rax, rsi ; ret
0x00000000006a1815 : imul eax, esi ; ret
0x0000000000744395 : imul ebp ; jmp rax
0x0000000000433ae5 : imul ebp ; pop rsp ; add bh, bh ; ror cl, 1 ; ret
0x000000000055e991 : imul ebp, eax, -1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000451b77 : imul ebp, ebx, 0x89480022 ; ret
0x000000000064bf01 : imul ebp, esi, 3 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007437ed : imul ebx ; jmp qword ptr [rax]
0x0000000000521071 : imul ebx, dword ptr [rax], 0x4e ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x00000000004c9fc3 : imul ebx, dword ptr [rbx], 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000046ce79 : imul ebx, dword ptr [rdx + 0x59], 0 ; call rax
0x00000000004d7dad : imul ebx, dword ptr [rsi], 0 ; leave ; ret
0x00000000005771a1 : imul ebx, ebp, 0x8948ffe8 ; ret
0x0000000000516bd3 : imul ebx, ebx, 0x8948001b ; ret
0x000000000069ae1b : imul ecx ; retf -0x2c
0x0000000000511676 : imul ecx, dword ptr [rax - 0x73], 0x894cd055 ; out dx, al ; call rax
0x00000000006a49e9 : imul ecx, dword ptr [rax], 0x2e0f6600 ; retf 0x1372
0x00000000004d6f4d : imul ecx, dword ptr [rbx], 0x8fbf0000 ; ret 0x6e
0x00000000004980a1 : imul ecx, dword ptr [rdi], 0x1f ; add byte ptr [rcx], bh ; ret
0x00000000005ab097 : imul ecx, dword ptr [rdi], 0x78c08500 ; ret 0x8b48
0x00000000005a1e71 : imul ecx, dword ptr [rdx], 0x46 ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x00000000005edc1d : imul ecx, dword ptr [rsi], 0 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004499e3 : imul ecx, dword ptr [rsi], 0x89480026 ; ret
0x000000000073532d : imul ecx, edi, -1 ; push rax ; retf 1
0x00000000004077d1 : imul ecx, edi, 0x2c ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000451963 : imul ecx, esp, 0x89480026 ; ret 0x8948
0x0000000000779e02 : imul edi, dword ptr [rbp], 0x83100e41 ; add al, byte ptr [rbx] ; retf 0xa01
0x0000000000630fab : imul edi, dword ptr [rbx + 0x3d], 0xac8d4800 ; ret
0x000000000059be41 : imul edi, dword ptr [rbx], 0xf ; add byte ptr [rax + 0x29], cl ; ret
0x000000000065388d : imul edi, eax, -1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000051622a : imul edi, ebp, 0x8948ffff ; ret
0x0000000000451801 : imul edi, ebx, 0x26 ; add cl, cl ; ret
0x000000000050e3ca : imul edi, edi, -1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000056fa41 : imul edi, edi, 0x11 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000577a41 : imul edi, edi, 0x8948ffff ; ret
0x0000000000677316 : imul edi, edi, 0xc031ffff ; ret
0x00000000004b701a : imul edi, edx, -1 ; leave ; ret
0x00000000004f8908 : imul edi, esi, -1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004fe4fa : imul edi, esi, 0x8948ffff ; ret
0x0000000000499841 : imul edx, dword ptr [rax + 0x22], 0 ; leave ; ret
0x000000000047d879 : imul edx, dword ptr [rax + 0x58], 0 ; call rax
0x0000000000577cc0 : imul edx, dword ptr [rax + rax], 0x48 ; mov edi, ebx ; call 0x6d4748
0x00000000004e0be0 : imul edx, dword ptr [rax], 0x8fbf0000 ; ret 0x6e
0x00000000004e7410 : imul edx, dword ptr [rbx], 0x8fbf0000 ; ret 0x6e
0x000000000049e9f7 : imul edx, dword ptr [rcx], 0x1e ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004d9141 : imul edx, dword ptr [rdi + 0x1e], 0 ; leave ; ret
0x00000000004cd179 : imul edx, dword ptr [rdi + 0x53], 0 ; call rax
0x00000000004f13a6 : imul edx, dword ptr [rdi], 0x8fbf0000 ; ret 0x6e
0x000000000051902d : imul edx, dword ptr [rdi], 0xc4834800 ; or byte ptr [rax + 0x29], cl ; ret
0x0000000000667361 : imul edx, eax, 0xc4653600 ; add rdx, rdi ; ret
0x00000000006271d1 : imul edx, ebp, 0xa ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000744eb5 : imul esi ; call qword ptr [rax]
0x00000000005149d1 : imul esi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000405845 : imul esi ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000058d563 : imul esi, dword ptr [rcx], 0x89480013 ; ret
0x000000000047ae63 : imul esi, dword ptr [rdi], 0x89480024 ; ret 0x8948
0x00000000006785b8 : imul esi, dword ptr [rdx], 0x8302e8c0 ; loopne 0x6785cb ; ret
0x00000000006783f8 : imul esi, dword ptr [rdx], 0x8303e8c0 ; loopne 0x67840b ; ret
0x0000000000678458 : imul esi, dword ptr [rdx], 0x8304e8c0 ; loopne 0x67846b ; ret
0x0000000000678548 : imul esi, dword ptr [rdx], 0x8306e8c0 ; loopne 0x67855b ; ret
0x00000000006b9e28 : imul esi, dword ptr [rdx], 0x950f4126 ; ret 0x8041
0x00000000006784c7 : imul esi, dword ptr [rdx], 0xc0950f06 ; ret
0x00000000006783e7 : imul esi, dword ptr [rdx], 0xc0950f26 ; ret
0x0000000000678447 : imul esi, dword ptr [rdx], 0xc0950f66 ; ret
0x000000000069cced : imul esi, edi ; mov r8d, dword ptr [rcx - 0x3f] ; ret 0x4707
0x00000000004c2ee1 : imul esi, edi, -1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005b54d1 : imul esi, edx, 0x11 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006c9698 : imul esi, esi, 0x3e8 ; add rax, rsi ; ret
0x00000000007ab229 : imul esp ; jmp qword ptr [rdi]
0x00000000006d0f5c : imul esp, dword ptr [rax + 1], 0x5b ; ret
0x0000000000524541 : imul esp, dword ptr [rax], 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000722a82 : imul esp, dword ptr [rdi - 0x19a51984], 0x57 ; retf
0x000000000043af68 : imul esp, dword ptr [rsi], 0xc4834800 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000639205 : imul rax, qword ptr [r8 + rax], -0x76b76315 ; ret
0x00000000006c0693 : imul rax, rbx ; pop rbx ; ret
0x00000000006a1814 : imul rax, rsi ; ret
0x00000000007437ec : imul rbx ; jmp qword ptr [rax]
0x00000000007bb661 : in al, -0x10 ; call rsp
0x0000000000744dd5 : in al, -0x12 ; jmp rax
0x000000000074436d : in al, -0x13 ; call qword ptr [rax]
0x00000000007af271 : in al, -0x13 ; call rax
0x000000000076a3ec : in al, -0x14 ; add dword ptr [rax], eax ; pop rdx ; pushfq ; leave ; call qword ptr [rdx]
0x00000000007ab059 : in al, -0x14 ; jmp rbx
0x000000000063b36a : in al, -0x15 ; ret 0x1f0f
0x00000000006c7bad : in al, -0x15 ; test dil, dil ; jne 0x6c7bbe ; ret
0x00000000006776f6 : in al, -0x16 ; ret 0x4841
0x00000000004fc942 : in al, -0x17 ; retf
0x000000000069f01a : in al, -0x17 ; retf -5
0x0000000000564a93 : in al, -0x18 ; cdq ; retf 0x11
0x000000000058ba6e : in al, -0x18 ; mov esi, 0x89000f5a ; ret
0x000000000051ea6e : in al, -0x18 ; mov esi, 0x8900162a ; ret
0x00000000005b4c6a : in al, -0x18 ; ret 0xcc8
0x00000000005b466a : in al, -0x18 ; ret 0xcce
0x0000000000741fc5 : in al, -0x19 ; push qword ptr [rax] ; ret
0x000000000073fc75 : in al, -0x1c ; call qword ptr [rax]
0x000000000078e911 : in al, -0x1f ; jmp rcx
0x000000000078ab39 : in al, -0x20 ; jmp qword ptr [rax]
0x0000000000681e01 : in al, -0x22 ; in al, -0x27 ; ret
0x000000000073b575 : in al, -0x23 ; jmp qword ptr [rax]
0x0000000000681e03 : in al, -0x27 ; ret
0x0000000000769cf1 : in al, -0x28 ; jmp qword ptr [rsi]
0x00000000007889ec : in al, -0x2e ; add eax, dword ptr [rax] ; and byte ptr [rdi - 0x20], bh ; jmp qword ptr [rcx]
0x000000000073736d : in al, -0x2e ; call qword ptr [rax]
0x0000000000583868 : in al, -0x2e ; str word ptr [rax - 0x77] ; ret
0x0000000000757418 : in al, -0x2f ; iretd ; call rcx
0x000000000073574d : in al, -0x31 ; jmp qword ptr [rax]
0x0000000000751459 : in al, -0x33 ; call rsp
0x000000000044b168 : in al, -0x39 ; and eax, dword ptr [rax] ; nop ; leave ; ret
0x000000000076772c : in al, -0x41 ; add dword ptr [rax], eax ; jl 0x76772e ; salc ; jmp qword ptr [rax]
0x0000000000668c68 : in al, -0x51 ; fcos ; nop dword ptr [rax] ; ret
0x000000000079542c : in al, -0x64 ; add al, 0 ; push rax ; add ch, ah ; call rsp
0x000000000079512c : in al, -0x67 ; add al, 0 ; rcr bh, 0xe4 ; jmp rsi
0x00000000007848ec : in al, -0x6f ; add eax, dword ptr [rax] ; or ch, 0xdf ; jmp qword ptr [rax]
0x00000000007a47ec : in al, -0x70 ; add eax, 0xc6335000 ; call qword ptr [rdx]
0x000000000066457b : in al, -0x77 ; clc ; not eax ; pop rbx ; ret
0x0000000000650a9d : in al, -0x77 ; ret
0x0000000000748bbd : in al, -0xa ; call rax
0x000000000060aa48 : in al, -0xc ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000073fc06 : in al, -1 ; add byte ptr [rcx], dl ; add eax, 0xe4dff000 ; jmp qword ptr [rax]
0x000000000073fc6e : in al, -1 ; clc ; adc al, byte ptr [rip - 0x1b1b9000] ; call qword ptr [rax]
0x000000000073face : in al, -1 ; clc ; or dword ptr [rip - 0x1b540000], eax ; call qword ptr [rax]
0x000000000073f93e : in al, -1 ; mov al, 1 ; add eax, 0xe4493000 ; call rax
0x000000000073fa1e : in al, -1 ; mov al, 5 ; add eax, 0xe4923000 ; call qword ptr [rax]
0x000000000073f84e : in al, -1 ; mov eax, 0x4fb ; or al, 0xe4 ; call rax
0x00000000005c3945 : in al, -1 ; mov rdi, rbp ; xor eax, eax ; call 0x67fb6f
0x00000000005c38e1 : in al, -1 ; mov rdi, rbx ; xor eax, eax ; call 0x67fb6f
0x000000000073f91e : in al, -1 ; or byte ptr [rcx], al ; add eax, 0xe4443000 ; jmp qword ptr [rax]
0x000000000073fba6 : in al, -1 ; push rax ; syscall
0x000000000073f826 : in al, -1 ; sar dl, 1 ; add al, 0 ; push rax ; or ah, ah ; call qword ptr [rax]
0x0000000000733a24 : in al, -2 ; stc ; call rsi
0x000000000075b32c : in al, -5 ; add byte ptr [rax], al ; clc ; or cl, dl ; call rsp
0x0000000000539109 : in al, 0 ; add byte ptr [rax], al ; add al, ch ; pop rbp ; ret
0x000000000067f0a9 : in al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000006802ae : in al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc085
0x00000000007f0272 : in al, 0x10 ; add ah, ah ; syscall
0x000000000079caec : in al, 0x13 ; add eax, 0xe7c26200 ; call qword ptr [rdx]
0x000000000075cbec : in al, 0x14 ; add dword ptr [rax], eax ; retf -0x2e9e
0x0000000000560128 : in al, 0x15 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007daa8d : in al, 0x19 ; add dl, dh ; adc bh, byte ptr [rdi] ; add byte ptr [rax], al ; retf
0x000000000049048a : in al, 0x22 ; add cl, cl ; ret
0x00000000004514bf : in al, 0x23 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004416ab : in al, 0x23 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005cec1b : in al, 0x29 ; ret 0xd089
0x000000000040627d : in al, 0x2c ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000048d3e8 : in al, 0x32 ; and eax, dword ptr [rax] ; leave ; ret
0x00000000005bab1a : in al, 0x39 ; ret 0x6f7e
0x00000000005baba4 : in al, 0x39 ; ret 0x717e
0x00000000006b0010 : in al, 0x39 ; ret 0x8c0f
0x000000000075f6ec : in al, 0x3f ; add dword ptr [rax], eax ; xchg eax, esp ; adc edx, ebx ; jmp qword ptr [rbx]
0x000000000079fdec : in al, 0x46 ; add eax, 0xe8748000 ; jmp qword ptr [rbx]
0x00000000007ac430 : in al, 0x46 ; in eax, dx ; call qword ptr [rbx]
0x000000000068dbdd : in al, 0x48 ; mov eax, ebp ; jne 0x68dc05 ; call rax
0x00000000005badfc : in al, 0x49 ; mov esp, eax ; jmp 0x5badca
0x000000000053a234 : in al, 0x4c ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000005c308d : in al, 0x4c ; mov edi, esp ; xor eax, eax ; call 0x67fb5a
0x00000000007a082c : in al, 0x50 ; add eax, 0xe894e000 ; call qword ptr [rcx]
0x00000000007a0eec : in al, 0x57 ; add eax, 0xe8a46000 ; jmp qword ptr [rax]
0x00000000006682fb : in al, 0x5b ; ret
0x00000000004244c6 : in al, 0x5d ; add bh, bh ; ror cl, 1 ; ret
0x00000000007a18ec : in al, 0x61 ; add eax, 0xc649b800 ; call qword ptr [rdx]
0x00000000007a1cec : in al, 0x65 ; add eax, 0xe8cdb000 ; jmp rsi
0x0000000000781eec : in al, 0x67 ; add eax, dword ptr [rax] ; rcl bh, 0xde ; jmp qword ptr [rbx]
0x00000000007622ec : in al, 0x6b ; add dword ptr [rax], eax ; shl byte ptr [rsi], 0xd4 ; jmp qword ptr [rbx]
0x0000000000404064 : in al, 0x6e ; add byte ptr [rcx], dh ; shr al, 0x56 ; retf 0x27
0x0000000000404052 : in al, 0x6e ; add byte ptr [rcx], dh ; shr al, 0x58 ; retf
0x0000000000792bec : in al, 0x74 ; add al, 0 ; retf -0x1d
0x0000000000533b22 : in al, 0x74 ; retf
0x0000000000752f2c : in al, 0x77 ; add byte ptr [rax], al ; ret 0xce87
0x00000000006262c8 : in al, 0xa ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000007ed077 : in al, 0xc ; add ah, dh ; or al, 5 ; ret 0xd
0x00000000007351c4 : in al, 0xc ; iretd ; jmp rax
0x0000000000510fc8 : in al, 0xf ; lahf ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000006a6f77 : in al, 0xf ; mov dh, 0x5d ; ret
0x000000000054a4a3 : in al, 0xf ; mov es, eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x2948
0x000000000057f6ca : in al, 0xf ; mov fs, esi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000005c8d8b : in al, 0xf ; sahf ; ret
0x000000000064b4bf : in al, 0xf ; sahf ; ret 0x3941
0x0000000000559d92 : in al, 0xf ; xchg eax, esp ; ret
0x0000000000693b0d : in al, 0xf ; xchg eax, esp ; ret 0xc284
0x0000000000769bbd : in al, 1 ; add byte ptr [rbx], dh ; leave ; call qword ptr [rdx]
0x000000000068f072 : in al, 1 ; sete al ; ret
0x0000000000738e51 : in al, 2 ; add byte ptr [rsi], bl ; cli ; salc ; jmp rax
0x00000000007cbf5b : in al, 2 ; add eax, 0x8a0305d9 ; add ecx, dword ptr [rsi] ; ret 6
0x000000000060ca8b : in al, 4 ; add byte ptr [rax], al ; call rax
0x00000000007f070d : in al, 4 ; add eax, 0xf30744f1 ; add al, 6 ; jmp qword ptr [rax]
0x00000000007a9b2d : in al, 5 ; add byte ptr [rax], dh ; stosd dword ptr [rdi], eax ; in al, dx ; call qword ptr [rax]
0x00000000007e5c28 : in al, 5 ; lea eax, dword ptr [rcx] ; ret
0x000000000053468f : in al, 6 ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x0000000000551252 : in al, 7 ; add byte ptr [rax], al ; call rax
0x00000000007cd294 : in al, 9 ; add byte ptr [rbx + 0x509], dh ; retf 0x509
0x000000000052e996 : in al, dx ; adc al, ch ; ret
0x00000000005f7631 : in al, dx ; adc byte ptr [rax - 0x75], cl ; add eax, 0x40b2ae ; call rax
0x000000000040b99f : in al, dx ; adc byte ptr [rax - 0x75], cl ; add eax, 0x5f6f40 ; call rax
0x00000000007dd113 : in al, dx ; adc dword ptr [rax], eax ; retf
0x000000000064a101 : in al, dx ; add al, 0 ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000007904f4 : in al, dx ; add al, 0 ; mov byte ptr [rax - 0x1e], bl ; jmp qword ptr [rdx]
0x000000000079a30d : in al, dx ; add al, 0 ; nop ; ret 0xffe6
0x00000000007e320e : in al, dx ; add al, 1 ; retf 0x203
0x000000000049e134 : in al, dx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; clc ; leave ; ret
0x0000000000593c0f : in al, dx ; add bl, r13b ; mov dword ptr [rax - 0x77], ecx ; ret
0x00000000006116ea : in al, dx ; add byte ptr [rcx + 0x5c], 0x41 ; pop rbp ; pop rbp ; ret
0x000000000062de1a : in al, dx ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x000000000076a38d : in al, dx ; add dword ptr [rax], eax ; and byte ptr [rsi - 0x27], ch ; jmp qword ptr [rax]
0x000000000076a3ed : in al, dx ; add dword ptr [rax], eax ; pop rdx ; pushfq ; leave ; call qword ptr [rdx]
0x000000000076a405 : in al, dx ; add dword ptr [rax], eax ; push rsp ; pushfq ; leave ; call qword ptr [rdx]
0x00000000007838f4 : in al, dx ; add dword ptr [rbx], 0xdf2d7800 ; jmp qword ptr [rdi]
0x00000000004c66ca : in al, dx ; add eax, 0x8fbf0000 ; ret 0x6e
0x000000000079f9f4 : in al, dx ; add eax, 0xe8676800 ; call qword ptr [rbx]
0x0000000000742689 : in al, dx ; add eax, 0xe9a23800 ; jmp rax
0x00000000007aa9f4 : in al, dx ; add eax, 0xecdae800 ; call qword ptr [rcx]
0x000000000067fc13 : in al, dx ; add eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000004791ce : in al, dx ; add ebx, ebp ; ret
0x00000000005086d3 : in al, dx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000056bc8d : in al, dx ; and al, ch ; in al, dx ; ret
0x00000000005add4d : in al, dx ; and byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x00000000006a4bfa : in al, dx ; and byte ptr [rsi + 0xf], ah ; retf
0x000000000068edfb : in al, dx ; and edx, 0x3f ; lea eax, dword ptr [rdx + 1] ; ret
0x0000000000743a7e : in al, dx ; call qword ptr [rax]
0x00000000007a7baa : in al, dx ; call qword ptr [rbx]
0x00000000007a8b9a : in al, dx ; call qword ptr [rcx]
0x00000000007a7eda : in al, dx ; call qword ptr [rdi]
0x00000000007a78d2 : in al, dx ; call qword ptr [rdx]
0x00000000007a794a : in al, dx ; call qword ptr [rsi]
0x00000000007439b6 : in al, dx ; call rax
0x00000000007a972a : in al, dx ; call rbx
0x00000000007a9e7a : in al, dx ; call rdx
0x0000000000748515 : in al, dx ; cmc ; call qword ptr [rax]
0x000000000079f1f4 : in al, dx ; cmp al, byte ptr [rip - 0x17af2600] ; jmp qword ptr [rbx]
0x000000000073a394 : in al, dx ; cmp ebx, ebx ; jmp qword ptr [rax]
0x000000000074f760 : in al, dx ; cmp ecx, ebp ; call rsp
0x000000000053bfcf : in al, dx ; dec dword ptr [rax - 0x77] ; ret
0x0000000000779334 : in al, dx ; fild dword ptr [rdx] ; add al, bh ; ret 0xffdc
0x0000000000789734 : in al, dx ; fild word ptr [rbx] ; add byte ptr [rax], ch ; mov ah, 0xe0 ; jmp rcx
0x00000000007990f4 : in al, dx ; fld dword ptr [rax + rax] ; or byte ptr [rsi], bl ; jmp rax
0x0000000000752134 : in al, dx ; imul eax, dword ptr [rax], 0xce167000 ; call rdx
0x00000000007ac400 : in al, dx ; in eax, dx ; call qword ptr [rbx]
0x00000000007af801 : in al, dx ; in eax, dx ; jmp qword ptr [rax]
0x0000000000743e76 : in al, dx ; inc dword ptr [rax + 0x20000664] ; fsub st(4), st(0) ; call rax
0x000000000053ae0f : in al, dx ; inc dword ptr [rbp - 0x3f6bf040] ; pop rdx ; ret
0x0000000000721c80 : in al, dx ; jle 0x721ce7 ; lodsd eax, dword ptr [rsi] ; ret 0x4765
0x00000000007439f6 : in al, dx ; jmp qword ptr [rax]
0x00000000007a8232 : in al, dx ; jmp qword ptr [rcx]
0x00000000007aae32 : in al, dx ; jmp qword ptr [rdi]
0x00000000007a7e92 : in al, dx ; jmp qword ptr [rdx]
0x00000000007a7a8a : in al, dx ; jmp qword ptr [rsi]
0x00000000007439ee : in al, dx ; jmp rax
0x00000000007ab05a : in al, dx ; jmp rbx
0x00000000007a7902 : in al, dx ; jmp rdi
0x00000000007a9caa : in al, dx ; jmp rsp
0x0000000000512da4 : in al, dx ; jne 0x512db3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005321c8 : in al, dx ; jne 0x5321d7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000054c331 : in al, dx ; jne 0x54c307 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000054c3b1 : in al, dx ; jne 0x54c387 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005596f7 : in al, dx ; jne 0x559706 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000588069 : in al, dx ; jne 0x58808c ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000593878 : in al, dx ; jne 0x593887 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000593e08 : in al, dx ; jne 0x593e17 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005bd382 : in al, dx ; jne 0x5bd391 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005fdb51 : in al, dx ; jne 0x5fdb60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000062e895 : in al, dx ; jne 0x62e8a4 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000063a2fc : in al, dx ; jne 0x63a32b ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000647fb7 : in al, dx ; jne 0x647fe0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006481b2 : in al, dx ; jne 0x6481f4 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000648339 : in al, dx ; jne 0x648369 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006484b5 : in al, dx ; jne 0x648501 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000678fa8 : in al, dx ; jne 0x678fb7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000679068 : in al, dx ; jne 0x679077 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000007b2ff4 : in al, dx ; js 0x7b3004 ; add byte ptr [rax + 1], cl ; out dx, eax ; jmp qword ptr [rdi]
0x00000000007663f4 : in al, dx ; lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; ret 0xd5d0
0x0000000000722a58 : in al, dx ; loope 0x722a5b ; sal ch, cl ; cli ; retf
0x0000000000473006 : in al, dx ; loopne 0x47300d ; dec ecx ; ret
0x000000000053bc50 : in al, dx ; mov bl, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000767f34 : in al, dx ; mov dword ptr [rcx], 0xd72f3600 ; call qword ptr [rdx]
0x000000000068f363 : in al, dx ; mov eax, 1 ; ret
0x00000000006d6b7a : in al, dx ; mov esp, 0x4adfc5eb ; scasq rax, qword ptr [rdi] ; ret 0xf8ed
0x0000000000496952 : in al, dx ; mov rax, qword ptr [rax*8 + 0x6e9278] ; jmp rax
0x00000000005da9a4 : in al, dx ; mov rax, qword ptr [rip + 0x427f3c] ; call rax
0x00000000005cde02 : in al, dx ; mov rax, qword ptr [rip + 0x434ade] ; call rax
0x0000000000507dc9 : in al, dx ; mov rax, qword ptr [rsp - 0x18] ; mov qword ptr [rdi], rax ; ret
0x00000000004d549c : in al, dx ; nop ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000066ae5e : in al, dx ; nop ; pop rbp ; ret
0x000000000068f2fb : in al, dx ; nop dword ptr [rax] ; lea rax, qword ptr [rdi - 0x20] ; ret
0x00000000007fbb48 : in al, dx ; or al, byte ptr [rax] ; retf 0x52c
0x00000000006813c0 : in al, dx ; or al, ch ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000053e85b : in al, dx ; or al, ch ; out dx, al ; mov edi, 0x89480016 ; ret
0x0000000000681338 : in al, dx ; or al, ch ; pop rbx ; out -1, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000006b2ba7 : in al, dx ; or al, ch ; ret 0xfffd
0x000000000056fa12 : in al, dx ; or al, ch ; xchg eax, edi ; call qword ptr [rcx]
0x00000000005a0042 : in al, dx ; or byte ptr [rax + 0x39], cl ; inc byte ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8548
0x000000000052246a : in al, dx ; or byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 + 0x39], r9b ; ret
0x0000000000509237 : in al, dx ; or byte ptr [rax - 0x75], cl ; xor cl, byte ptr [rax - 0x77] ; retf -0x4318
0x00000000006282a7 : in al, dx ; or byte ptr [rax - 0x75], cl ; xor cl, byte ptr [rax - 0x77] ; retf 0x4ce8
0x0000000000658b8b : in al, dx ; or byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x000000000052fb12 : in al, dx ; or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; ret 0xff73
0x00000000005594d2 : in al, dx ; or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; ret 0xffe7
0x000000000050ca22 : in al, dx ; or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; ret 0xffed
0x00000000005a4c3e : in al, dx ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000005d6af6 : in al, dx ; or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000061fc71 : in al, dx ; or dword ptr [rax], eax ; leave ; ret
0x00000000007c672a : in al, dx ; or eax, 0x148505 ; ret 0x3e0e
0x00000000007c143b : in al, dx ; or eax, 0x169f34 ; ret 0x50e
0x00000000004d87e3 : in al, dx ; or eax, 0x8fbf0000 ; ret 0x6e
0x0000000000750ff4 : in al, dx ; pop rax ; add byte ptr [rax], al ; xchg eax, edx ; retf
0x000000000064032a : in al, dx ; pop rbp ; add byte ptr [rax], al ; call rax
0x0000000000455ad0 : in al, dx ; pop rbp ; ret
0x0000000000413c1e : in al, dx ; pop rsi ; add bh, bh ; ror cl, 1 ; ret
0x0000000000674017 : in al, dx ; pop rsp ; jb 0x674021 ; jne 0x673ffe ; ret
0x00000000007907f4 : in al, dx ; push rax ; add al, 0 ; call 0x2378ea64
0x00000000004ce980 : in al, dx ; ret
0x0000000000722c83 : in al, dx ; ret 0x6cad
0x0000000000747444 : in al, dx ; ret 0xfff4
0x00000000007679f4 : in al, dx ; ret 1
0x00000000007b79f4 : in al, dx ; ret 6
0x0000000000543a76 : in al, dx ; retf
0x0000000000769cf9 : in al, dx ; retf 0x7c
0x00000000007b81f4 : in al, dx ; retf 6
0x00000000007677f4 : in al, dx ; rol byte ptr [rcx], 0 ; retf -0x2901
0x000000000075db31 : in al, dx ; sar edi, 1 ; ret
0x000000000054e6fd : in al, dx ; sbb byte ptr [rax + 0x39], cl ; retf
0x000000000060726b : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000686284 : in al, dx ; sbb byte ptr [rcx], bh ; retf 0x667e
0x0000000000682db6 : in al, dx ; sbb byte ptr [rsi + 0xf], ah ; out dx, eax ; shl byte ptr [rsi + 0xf], 0x2e ; ret 0x5e77
0x000000000078d4f4 : in al, dx ; sbb eax, 0x9fb80004 ; loope 0x78d503 ; retf 0
0x00000000007bd2f4 : in al, dx ; sbb eax, dword ptr [rdi] ; add byte ptr [rax + 0xd], bl ; int1 ; call qword ptr [rax]
0x00000000006cbc0d : in al, dx ; std ; dec dword ptr [rax - 0x77] ; ret 0x8b9
0x00000000005bfc6b : in al, dx ; str word ptr [rax - 0x77] ; fucompi st(0) ; retf 0x114a
0x0000000000581a12 : in al, dx ; str word ptr [rax - 0x77] ; ret
0x0000000000686c61 : in al, dx ; sub byte ptr [rbx + 0x3c894806], cl ; and al, 0x39 ; ret 0x8c0f
0x000000000041fbe7 : in al, dx ; sub dword ptr [rax], eax ; leave ; ret
0x00000000007cdaa4 : in al, dx ; syscall
0x0000000000721a5b : in al, dx ; xchg eax, ebx ; retf
0x0000000000794a34 : in al, dx ; xchg eax, edx ; add al, 0 ; ret 0xe4b8
0x0000000000797681 : in ax, -1 ; ret 1
0x00000000007f2e0e : in eax, -0x10 ; add dword ptr [rax], eax ; retf
0x00000000007bb691 : in eax, -0x10 ; call rbx
0x0000000000515c2b : in eax, -0x12 ; dec dword ptr [rax - 0x77] ; ret
0x00000000007af369 : in eax, -0x13 ; call qword ptr [rsi]
0x00000000006075d2 : in eax, -0x15 ; fisttp dword ptr [rax - 0x77] ; ret
0x00000000006d6e36 : in eax, -0x15 ; hlt ; ret
0x0000000000583d05 : in eax, -0x18 ; jmp rdi
0x00000000004f0103 : in eax, -0x18 ; push rdi ; xchg eax, esi ; idiv edi ; pop rbp ; ret
0x000000000073cba5 : in eax, -0x21 ; call qword ptr [rax]
0x000000000073cb95 : in eax, -0x21 ; jmp rax
0x000000000073c015 : in eax, -0x22 ; call qword ptr [rax]
0x000000000073c055 : in eax, -0x22 ; call rax
0x0000000000737c2d : in eax, -0x2d ; call qword ptr [rax]
0x0000000000737c1d : in eax, -0x2d ; call rax
0x0000000000753e99 : in eax, -0x32 ; call rsp
0x0000000000647d57 : in eax, -0x37 ; or byte ptr [rax], al ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000066ac41 : in eax, -0x70 ; pop rbp ; ret
0x00000000005665ae : in eax, -0x77 ; ret
0x00000000006a96aa : in eax, -0x7d ; ret
0x0000000000748bc5 : in eax, -0xa ; jmp qword ptr [rax]
0x000000000074847d : in eax, -0xb ; jmp rax
0x0000000000721bb0 : in eax, -0xd ; mov dl, 2 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x1ba9
0x0000000000740166 : in eax, -1 ; add byte ptr [rcx], ch ; add eax, 0xe51b1000 ; jmp qword ptr [rax]
0x00000000007407ae : in eax, -1 ; and byte ptr [rsi + 5], cl ; add al, ah ; ret
0x0000000000740696 : in eax, -1 ; clc ; add rax, -0x1a4ca000 ; call qword ptr [rax]
0x000000000074048e : in eax, -1 ; clc ; cmp al, byte ptr [rip - 0x1ab08000] ; call qword ptr [rax]
0x000000000074046e : in eax, -1 ; clc ; cmp dword ptr [rip - 0x1ab78000], eax ; call qword ptr [rax]
0x00000000007409b6 : in eax, -1 ; clc ; pop rax ; add eax, 0xe5fdb000 ; call qword ptr [rax]
0x000000000073fe06 : in eax, -1 ; clc ; sbb dword ptr [rip - 0x1af7a000], eax ; call qword ptr [rax]
0x0000000000740686 : in eax, -1 ; enter 0x549, 0 ; mov bl, 0xe5 ; jmp rax
0x00000000007407a6 : in eax, -1 ; loopne 0x740800 ; add eax, 0xe5c14000 ; jmp qword ptr [rax]
0x000000000073fdf6 : in eax, -1 ; mov al, 0x19 ; add eax, 0xe5084000 ; jmp rax
0x000000000073ff46 : in eax, -1 ; mov eax, 0x1000051d ; or esp, ebp ; call rax
0x000000000074014e : in eax, -1 ; mov eax, 0x90000528 ; sbb ah, ch ; call rax
0x0000000000740906 : in eax, -1 ; mov eax, 0xa0000554 ; jrcxz 0x7408fd ; call rax
0x0000000000740836 : in eax, -1 ; mov eax, 0xc0000550 ; shl ch, cl ; call rax
0x00000000007401d6 : in eax, -1 ; mov eax, 0xd000052b ; and ebp, esp ; call rax
0x000000000073fe46 : in eax, -1 ; mov eax, 0xe000051a ; or ch, ah ; call rax
0x00000000007406d6 : in eax, -1 ; mov eax, 0xf000054a ; mov bl, 0xe5 ; call rax
0x000000000074060e : in eax, -1 ; nop ; add eax, 0xe59cd000 ; jmp rax
0x00000000005a8adc : in eax, -1 ; nop ; lock sub dword ptr [rdi], 1 ; ret
0x000000000074097e : in eax, -1 ; nop ; push rdi ; add eax, 0xe5f8d000 ; jmp rax
0x000000000073feb6 : in eax, -1 ; or byte ptr [rax - 0x1af61000], bl ; jmp qword ptr [rax]
0x0000000000740416 : in eax, -1 ; or byte ptr [rax], bh ; add eax, 0xe5437000 ; jmp qword ptr [rax]
0x000000000073fd7e : in eax, -1 ; or byte ptr [rax], bl ; add eax, 0xe505a000 ; jmp qword ptr [rax]
0x000000000073fdc6 : in eax, -1 ; or byte ptr [rcx], bl ; add eax, 0xe5072000 ; jmp qword ptr [rax]
0x0000000000797682 : in eax, -1 ; ret 1
0x00000000007966da : in eax, -1 ; retf
0x0000000000797972 : in eax, -1 ; retf 1
0x0000000000797e32 : in eax, -1 ; retf 2
0x00000000007400ee : in eax, -1 ; sbb byte ptr [rsi], ah ; add eax, 0xe517f000 ; jmp qword ptr [rax]
0x000000000074033e : in eax, -1 ; xor al, byte ptr [rip - 0x1acd3000] ; jmp qword ptr [rax]
0x0000000000749a55 : in eax, -9 ; call qword ptr [rax]
0x0000000000749a45 : in eax, -9 ; jmp rax
0x0000000000562d2c : in eax, 0x11 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000586178 : in eax, 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000053c25d : in eax, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000512dba : in eax, 0x16 ; add byte ptr [rax - 0x7d], cl ; cli ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000005461ea : in eax, 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000536223 : in eax, 0x19 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004e0078 : in eax, 0x1d ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000047c348 : in eax, 0x22 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000451440 : in eax, 0x23 ; add byte ptr [rax + 0x29], cl ; ret
0x000000000040616f : in eax, 0x2c ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000005beba7 : in eax, 0x39 ; retf 0x4c7f
0x0000000000408eb7 : in eax, 0x46 ; pop rdi ; add byte ptr [rdi], cl ; mov bh, 5 ; ret 0x5f56
0x000000000066ac35 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; nop ; pop rbp ; ret
0x000000000040ba69 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x00000000006258a1 : in eax, 0x48 ; mov eax, dword ptr [rip + 0x3dcfc7] ; call rax
0x00000000006116f5 : in eax, 0x48 ; mov eax, dword ptr [rip + 0x3f11eb] ; call rax
0x00000000005a84c0 : in eax, 0x48 ; mov edi, ebx ; jne 0x5a848e ; call 0x6d4748
0x000000000051a164 : in eax, 0x4e ; add byte ptr [rax - 0x7f], cl ; ret 0x2a1
0x000000000069fe5a : in eax, 0x5b ; ret
0x00000000004567a1 : in eax, 0x5d ; ret
0x0000000000589169 : in eax, 0x69 ; str word ptr [rax - 0x77] ; fucompi st(0) ; retf
0x0000000000503d5f : in eax, 0x6e ; add byte ptr [rcx + rcx*4 - 1], cl ; call rcx
0x00000000005232e6 : in eax, 0x75 ; ret
0x000000000060b563 : in eax, 0x75 ; retf 0x18b
0x000000000059cb57 : in eax, 0x7b ; adc eax, dword ptr [rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007ca478 : in eax, 0xc ; add byte ptr [rsp + rax + 0x50bfc16], ah ; ret 0xa004
0x00000000007ed0b6 : in eax, 0xe ; add eax, 0x80000f8a ; syscall
0x000000000050ef33 : in eax, 0xf ; popfq ; ret 0x854d
0x0000000000538246 : in eax, 0xf ; sahf ; ret 0xed85
0x00000000007358f9 : in eax, 1 ; add ah, al ; sti ; iretd ; jmp rax
0x00000000007f443a : in eax, 1 ; add eax, 0x1e5f5 ; ret 0x1e5
0x0000000000404557 : in eax, 1 ; sub eax, 0x5d5b5800 ; ret
0x0000000000738e61 : in eax, 2 ; add ah, dl ; cli ; salc ; jmp qword ptr [rax]
0x00000000007eaf40 : in eax, 2 ; add byte ptr [rbx + 0x502], dh ; retf
0x0000000000799c75 : in eax, 4 ; add byte ptr [rax + 0x51], bl ; out 0xff, al ; ret 0
0x00000000007d0fff : in eax, 4 ; add esi, ecx ; add al, 0x3a ; add byte ptr [rax], al ; ret 0x505
0x00000000007a9ca5 : in eax, 5 ; add byte ptr [rax], ch ; scasd eax, dword ptr [rdi] ; in al, dx ; jmp rsp
0x00000000007457b9 : in eax, 6 ; add byte ptr [rax], al ; retf
0x00000000007457c1 : in eax, 6 ; add byte ptr [rax], dl ; retf
0x0000000000602d74 : in eax, 7 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007cb71d : in eax, dx ; adc byte ptr [rax], al ; retf 0x911
0x00000000004acfdf : in eax, dx ; adc eax, 0x89480021 ; ret
0x00000000007d6cae : in eax, dx ; add al, 0x3e ; add byte ptr [rax], al ; ret 0x505
0x00000000007cca57 : in eax, dx ; add al, 0x69 ; ret 4
0x00000000005a268f : in eax, dx ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x1f7c
0x000000000075a515 : in eax, dx ; add byte ptr [rax], al ; cmpsw word ptr [rsi], word ptr [rdi] ; sar bh, 1 ; ret 1
0x00000000005705e5 : in eax, dx ; add dword ptr [rax + 0x63], ecx ; fisttp qword ptr [rax - 0x7d] ; ret
0x00000000007f4563 : in eax, dx ; add dword ptr [rip + 0x1eef9], eax ; retf 0x1ed
0x00000000007d4cc4 : in eax, dx ; add eax, dword ptr [rax] ; ret 0x302
0x00000000006a0c12 : in eax, dx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000007d0926 : in eax, dx ; and al, 5 ; ret 0x25
0x0000000000517213 : in eax, dx ; and byte ptr [rax], al ; add byte ptr [rax], al ; call 0x403c77
0x000000000048198f : in eax, dx ; and eax, dword ptr [rax] ; leave ; ret
0x0000000000743ec6 : in eax, dx ; call qword ptr [rax]
0x00000000007abe92 : in eax, dx ; call qword ptr [rbx]
0x00000000007aba22 : in eax, dx ; call qword ptr [rcx]
0x00000000007ad50a : in eax, dx ; call qword ptr [rdi]
0x00000000007ac2ea : in eax, dx ; call qword ptr [rdx]
0x0000000000515e41 : in eax, dx ; call qword ptr [rip + 0x4eca98]
0x00000000007ac262 : in eax, dx ; call qword ptr [rsi]
0x00000000006c2613 : in eax, dx ; call rax
0x00000000007ac0f2 : in eax, dx ; call rcx
0x00000000007ad302 : in eax, dx ; call rsi
0x000000000056be5f : in eax, dx ; cmp al, 0x11 ; add al, ch ; retf 0x1156
0x000000000062a8df : in eax, dx ; cmp al, 9 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005256b3 : in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x0000000000684045 : in eax, dx ; fxch st(1) ; fyl2x ; ret
0x0000000000577cbf : in eax, dx ; imul edx, dword ptr [rax + rax], 0x48 ; mov edi, ebx ; call 0x6d4749
0x000000000074439e : in eax, dx ; inc dword ptr [rax] ; add dword ptr [rsi], 0xedf8fc00 ; jmp qword ptr [rax]
0x000000000074435e : in eax, dx ; inc eax ; jg 0x744372 ; add dl, dh ; fsubp st(5) ; jmp rax
0x000000000073582d : in eax, dx ; iretd ; jmp rax
0x00000000006a1c02 : in eax, dx ; jbe 0x6a1c1e ; mov eax, 1 ; ret
0x00000000005541cf : in eax, dx ; jmp 0x554197
0x000000000059eea5 : in eax, dx ; jmp 0x59ee75
0x000000000074400e : in eax, dx ; jmp qword ptr [rax]
0x00000000007abb4a : in eax, dx ; jmp qword ptr [rbx]
0x00000000007aba3a : in eax, dx ; jmp qword ptr [rcx]
0x00000000007abaca : in eax, dx ; jmp qword ptr [rdi]
0x00000000007acafa : in eax, dx ; jmp qword ptr [rdx]
0x00000000007abeca : in eax, dx ; jmp qword ptr [rsi]
0x0000000000743ebe : in eax, dx ; jmp rax
0x00000000007aed6a : in eax, dx ; jmp rbx
0x00000000007adbc2 : in eax, dx ; jmp rdi
0x00000000007b00d2 : in eax, dx ; jmp rdx
0x000000000054bdb5 : in eax, dx ; jne 0x54bd89 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000721b90 : in eax, dx ; jns 0x721c01 ; retf 0x48ac
0x000000000057634f : in eax, dx ; jrcxz 0x57636d ; add byte ptr [rax - 0x77], cl ; ret
0x000000000070cb91 : in eax, dx ; lahf ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; retf
0x0000000000475a1f : in eax, dx ; mov bl, 0x22 ; add byte ptr [rcx - 0x77], cl ; ret 0x8949
0x00000000006a1b55 : in eax, dx ; mov eax, 1 ; ret
0x00000000006928b1 : in eax, dx ; mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005b4dfb : in eax, dx ; mov esp, 0x8948000c ; ret
0x00000000007e2b60 : in eax, dx ; or byte ptr [rax], al ; mov bh, 2 ; add al, 0xde ; or byte ptr [rax], al ; ret
0x00000000005e00af : in eax, dx ; or byte ptr [rsi], cl ; add cl, cl ; ret
0x00000000004d8811 : in eax, dx ; or eax, 0x8fbf0000 ; ret 0x6e
0x0000000000562275 : in eax, dx ; or eax, ebp ; push rsp ; ret
0x00000000007b7d01 : in eax, dx ; out dx, eax ; jmp qword ptr [rax]
0x000000000068d882 : in eax, dx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000433ae6 : in eax, dx ; pop rsp ; add bh, bh ; ror cl, 1 ; ret
0x00000000005619d1 : in eax, dx ; psubsb mm7, mm0 ; retf
0x00000000007441e6 : in eax, dx ; push rax ; ja 0x7441fa ; add al, dl ; mov ebp, gs ; jmp qword ptr [rax]
0x0000000000404275 : in eax, dx ; ret
0x0000000000405009 : in eax, dx ; ret 0x27
0x00000000004d23c5 : in eax, dx ; ret 0xffff
0x000000000074b8f9 : in eax, dx ; retf
0x00000000007ebcfe : in eax, dx ; sbb al, byte ptr [rax] ; lock add dword ptr [rbx - 0x7e], ecx ; adc eax, dword ptr [rax] ; retf
0x000000000040744f : in eax, dx ; shr byte ptr [rax + rax], cl ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000656aae : in eax, dx ; sldt word ptr [rax] ; call rax
0x000000000074b515 : in eax, dx ; stc ; jmp rax
0x00000000005abb4c : in eax, dx ; str word ptr [rax - 0x77] ; ret
0x0000000000405977 : in eax, dx ; sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000007ed611 : in eax, dx ; sub dword ptr [rax], eax ; retf 0x51b
0x0000000000562316 : in eax, dx ; sub r13, 0xf ; call 0x6be5d7
0x000000000059755f : in eax, dx ; test dword ptr [rsi], ecx ; add al, ch ; retf 0xe9f
0x000000000046f7f7 : in eax, dx ; xor byte ptr [rcx], bl ; call rax
0x00000000007e54ae : in eax, dx ; xor byte ptr [rsi], al ; retf
0x00000000006d4c35 : in eax, dx ; xor eax, eax ; add rsp, 8 ; ret
0x000000000068ed82 : in eax, dx ; xor eax, eax ; ret
0x0000000000575e8f : in eax, dx ; xor ebx, 1 ; call qword ptr [rip + 0x48ca47]
0x0000000000626684 : in eax, dx ; xor r12d, 1 ; call qword ptr [rip + 0x3dc251]
0x000000000059660c : in eax, dx ; xor r12d, 1 ; call qword ptr [rip + 0x46c2c9]
0x0000000000526675 : in eax, dx ; xor r12d, 1 ; call qword ptr [rip + 0x4dc260]
0x000000000055666c : in eax, dx ; xor r13d, 1 ; call qword ptr [rip + 0x4ac269]
0x00000000006cf5f5 : inc byte ptr [rax] ; retf 0x3b9a
0x0000000000685cc8 : inc byte ptr [rbx - 0x73ef81f] ; add eax, dword ptr [rcx - 0x7d] ; ret
0x000000000052cbd6 : inc byte ptr [rbx] ; add byte ptr [rax], al ; call rax
0x00000000006aaaca : inc byte ptr [rbx] ; jbe 0x6aaad4 ; ret
0x00000000005a0046 : inc byte ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8548
0x0000000000735e29 : inc byte ptr [rcx] ; add ah, dh ; retf
0x00000000007c3695 : inc byte ptr [rcx] ; add byte ptr [rax], al ; ret 0x2802
0x0000000000571991 : inc byte ptr [rcx] ; setne al ; ret
0x0000000000748eb9 : inc byte ptr [rdi] ; add al, al ; and al, 0xf7 ; jmp rax
0x00000000007f2980 : inc byte ptr [rdx] ; add byte ptr [rsi + 0x3d03], al ; ret
0x00000000007bb59d : inc byte ptr [rsi] ; add al, dh ; loopne 0x7bb599 ; call qword ptr [rdx]
0x0000000000611424 : inc byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007bb5cd : inc byte ptr [rsi] ; add byte ptr [rax], ah ; loope 0x7bb5c9 ; jmp rbx
0x0000000000685bd0 : inc cl ; clc ; add eax, dword ptr [rbx - 0x7cbef81f] ; ret
0x0000000000685c58 : inc cl ; clc ; add eax, dword ptr [rbx - 0x7cbef81f] ; ret 0x4801
0x0000000000743e77 : inc dword ptr [rax + 0x20000664] ; fsub st(4), st(0) ; call rax
0x0000000000747bff : inc dword ptr [rax + 0x400007a6] ; cmc ; call rax
0x000000000073a33f : inc dword ptr [rax + 0x4b] ; add eax, dword ptr [rax] ; ret 0xdb27
0x0000000000747df7 : inc dword ptr [rax + 0x500007ae] ; movsxd rsi, ebp ; call rax
0x0000000000733ce7 : inc dword ptr [rax + 0x58000470] ; adc ch, cl ; call rax
0x00000000007402c7 : inc dword ptr [rax + 0x7000052f] ; sub ebp, esp ; call rax
0x0000000000745427 : inc dword ptr [rax + 0x700006d1] ; jae 0x745426 ; call rax
0x00000000007482b7 : inc dword ptr [rax + 0x700007c8] ; retf -0xb
0x000000000074a22f : inc dword ptr [rax + 0x856] ; iretd ; clc ; call rax
0x00000000005291ac : inc dword ptr [rax + rax*8 + 0x5d5b0f75] ; pop r12 ; ret
0x00000000006dcb09 : inc dword ptr [rax + rax] ; add byte ptr [rax], al ; add al, cl ; retf 0x6d
0x00000000004f49a9 : inc dword ptr [rax + rax] ; add byte ptr [rbx - 0x7cb7fe3d], al ; ret 0x3901
0x000000000073f50f : inc dword ptr [rax - 0x16] ; add al, 0 ; push rax ; ret
0x00000000007359c7 : inc dword ptr [rax - 0x17] ; add dword ptr [rax], eax ; ret 0xd004
0x000000000073655f : inc dword ptr [rax - 0x31fffdde] ; ret
0x000000000073eb77 : inc dword ptr [rax - 0x4ffffb47] ; ret
0x0000000000737a07 : inc dword ptr [rax - 0x59fffd7d] ; ret 0xffd3
0x000000000074852f : inc dword ptr [rax - 0x5ffff82e] ; out dx, al ; cmc ; call rax
0x00000000007412c7 : inc dword ptr [rax - 0x5ffffa7a] ; fucom st(6) ; call rax
0x00000000007369b7 : inc dword ptr [rax - 0x5ffffdcb] ; call rcx
0x0000000000737def : inc dword ptr [rax - 0x6b] ; add al, byte ptr [rax] ; retf -0x2bf9
0x00000000005991f7 : inc dword ptr [rax - 0x76b7fff2] ; ret
0x000000000064a972 : inc dword ptr [rax - 0x7af0f206] ; ret
0x00000000006ba206 : inc dword ptr [rax - 0x80] ; jmp qword ptr [rax]
0x000000000074b3b7 : inc dword ptr [rax - 0xffff75f] ; ret
0x0000000000749d8f : inc dword ptr [rax - 0xffff7bc] ; clc ; call rax
0x000000000073fc07 : inc dword ptr [rax] ; adc dword ptr [rip - 0x1b201000], eax ; jmp qword ptr [rax]
0x0000000000739127 : inc dword ptr [rax] ; add al, byte ptr [rax] ; out dx, al ; retf -0x29
0x00000000007390f7 : inc dword ptr [rax] ; add al, byte ptr [rax] ; xor al, 0xae ; xlatb ; jmp qword ptr [rax]
0x00000000007369d7 : inc dword ptr [rax] ; add al, byte ptr ss:[rax] ; xchg eax, esi ; add dl, dl ; jmp qword ptr [rax]
0x000000000065f5a3 : inc dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000065f9f2 : inc dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0x894c
0x0000000000640e19 : inc dword ptr [rax] ; add byte ptr [rax], al ; add al, ch ; call qword ptr [rax]
0x0000000000642855 : inc dword ptr [rax] ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000063602b : inc dword ptr [rax] ; add byte ptr [rax], al ; add al, ch ; retf
0x0000000000602682 : inc dword ptr [rax] ; add byte ptr [rax], al ; add bl, ch ; fmul qword ptr [rax - 0x77] ; ret
0x00000000006581c0 : inc dword ptr [rax] ; add byte ptr [rax], al ; add bl, ch ; ret 0xd0e9
0x000000000061e992 : inc dword ptr [rax] ; add byte ptr [rax], al ; add bl, ch ; retf -0x74b4
0x0000000000604fe0 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0x3941
0x0000000000678590 : inc dword ptr [rax] ; add byte ptr [rax], al ; jle 0x678588 ; xor eax, eax ; ret
0x00000000006786f5 : inc dword ptr [rax] ; add byte ptr [rax], al ; mov eax, edi ; cmovg eax, esi ; ret
0x0000000000678416 : inc dword ptr [rax] ; add byte ptr [rax], al ; setle al ; ret
0x000000000075b715 : inc dword ptr [rax] ; add dl, dl ; sbb ecx, edx ; jmp rbx
0x000000000073c647 : inc dword ptr [rax] ; add dword ptr [rax + rax], eax ; add byte ptr [rbp - 0x21], dh ; jmp qword ptr [rax]
0x0000000000735b87 : inc dword ptr [rax] ; add dword ptr [rax], eax ; jne 0x735b67 ; jmp qword ptr [rax]
0x000000000074439f : inc dword ptr [rax] ; add dword ptr [rsi], 0xedf8fc00 ; jmp qword ptr [rax]
0x000000000073a187 : inc dword ptr [rax] ; add eax, dword ptr [rax] ; test byte ptr [rsi - 0x26], dl ; jmp qword ptr [rax]
0x000000000073a2d7 : inc dword ptr [rax] ; add rax, qword ptr [r8] ; ret 0xdaf1
0x0000000000738c1f : inc dword ptr [rax] ; fild dword ptr [rdx] ; add byte ptr [rsi + rbx*8 - 0x2a], bl ; jmp qword ptr [rax]
0x0000000000746eaf : inc dword ptr [rax] ; imul eax, dword ptr [rdi], 0 ; and byte ptr [rdi], dh ; hlt ; jmp qword ptr [rax]
0x0000000000738e5f : inc dword ptr [rax] ; in eax, 2 ; add ah, dl ; cli ; salc ; jmp qword ptr [rax]
0x000000000073753f : inc dword ptr [rax] ; insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; push rax ; sbb dl, bl ; jmp qword ptr [rax]
0x0000000000669268 : inc dword ptr [rax] ; je 0x669274 ; ret
0x000000000068f999 : inc dword ptr [rax] ; jne 0x68f997 ; lea eax, dword ptr [rdx - 1] ; ret
0x000000000074a9a7 : inc dword ptr [rax] ; js 0x74a9bb ; add byte ptr [rax + 0x4c], dl ; stc ; jmp qword ptr [rax]
0x0000000000737b6f : inc dword ptr [rax] ; mov al, byte ptr [rdx] ; add byte ptr [rsi], bl ; fstp st(3), st(0) ; jmp qword ptr [rax]
0x000000000074135f : inc dword ptr [rax] ; mov al, byte ptr [rip - 0x190e9000] ; jmp qword ptr [rax]
0x000000000074463f : inc dword ptr [rax] ; mov es, word ptr [rsi] ; add byte ptr [rax + 0x47], bh ; out dx, al ; jmp qword ptr [rax]
0x0000000000747f9f : inc dword ptr [rax] ; mov esp, 0xa8700007 ; cmc ; jmp qword ptr [rax]
0x000000000061f8d8 : inc dword ptr [rax] ; mov rax, qword ptr [rip + 0x3e3007] ; call rax
0x000000000061f7aa : inc dword ptr [rax] ; mov rax, qword ptr [rip + 0x3e3135] ; call rax
0x00000000005f5056 : inc dword ptr [rax] ; mov rax, qword ptr [rip + 0x40d889] ; call rax
0x00000000005f3b4a : inc dword ptr [rax] ; mov rax, qword ptr [rip + 0x40ed95] ; call rax
0x00000000004c8cab : inc dword ptr [rax] ; mov rax, qword ptr [rip + 0x539c34] ; call rax
0x0000000000468c47 : inc dword ptr [rax] ; mov rax, qword ptr [rip + 0x599c98] ; call rax
0x000000000042e9e8 : inc dword ptr [rax] ; mov rax, qword ptr [rip + 0x5d3ef7] ; call rax
0x000000000042e3ce : inc dword ptr [rax] ; mov rax, qword ptr [rip + 0x5d4511] ; call rax
0x000000000040ff02 : inc dword ptr [rax] ; mov rax, qword ptr [rip + 0x5f29dd] ; call rax
0x000000000040f8e8 : inc dword ptr [rax] ; mov rax, qword ptr [rip + 0x5f2ff7] ; call rax
0x0000000000742caf : inc dword ptr [rax] ; or al, 6 ; add al, bh ; test al, 0xea ; jmp qword ptr [rax]
0x0000000000735907 : inc dword ptr [rax] ; out 1, al ; add byte ptr [rsp + rdi*8], bl ; iretd ; jmp qword ptr [rax]
0x0000000000744677 : inc dword ptr [rax] ; pop qword ptr [rsi] ; add byte ptr [rsi], bh ; out dx, al ; jmp qword ptr [rax]
0x000000000074a337 : inc dword ptr [rax] ; pop rbx ; or byte ptr [rax], al ; nop ; fprem ; jmp qword ptr [rax]
0x000000000074a2b7 : inc dword ptr [rax] ; pop rcx ; or byte ptr [rax], al ; and ch, dl ; clc ; jmp qword ptr [rax]
0x000000000074a377 : inc dword ptr [rax] ; pop rsp ; or byte ptr [rax], al ; xor bl, bl ; clc ; jmp qword ptr [rax]
0x000000000073a41f : inc dword ptr [rax] ; push rax ; add eax, dword ptr [rax] ; xchg eax, esp ; xchg ebx, ebx ; jmp qword ptr [rax]
0x0000000000736fdf : inc dword ptr [rax] ; push rdx ; add al, byte ptr [rax] ; jp 0x736fc1 ; jmp qword ptr [rax]
0x000000000074a20f : inc dword ptr [rax] ; push rsi ; or byte ptr [rax], al ; nop ; retf
0x00000000007351cf : inc dword ptr [rax] ; ret
0x000000000073518f : inc dword ptr [rax] ; ret 1
0x00000000007386f7 : inc dword ptr [rax] ; ret 2
0x0000000000741f97 : inc dword ptr [rax] ; ret 5
0x000000000074516f : inc dword ptr [rax] ; ret 6
0x000000000073ee97 : inc dword ptr [rax] ; retf
0x00000000005fc973 : inc dword ptr [rax] ; retf 0x3b9a
0x000000000073531f : inc dword ptr [rax] ; retf 1
0x000000000074832f : inc dword ptr [rax] ; retf 7
0x0000000000748487 : inc dword ptr [rax] ; rol byte ptr [rdi], 1 ; add byte ptr [rax - 0x1a], al ; cmc ; jmp qword ptr [rax]
0x0000000000668038 : inc dword ptr [rax] ; setne al ; ret
0x0000000000740167 : inc dword ptr [rax] ; sub dword ptr [rip - 0x1ae4f000], eax ; jmp qword ptr [rax]
0x00000000007381cf : inc dword ptr [rax] ; test al, 2 ; add byte ptr [rsi], ah ; mov ch, 0xd4 ; jmp qword ptr [rax]
0x000000000074743f : inc dword ptr [rax] ; test byte ptr [rdi], al ; add ah, ch ; ret 0xfff4
0x000000000074ac2f : inc dword ptr [rax] ; test dword ptr [rax], ecx ; add al, al ; jge 0x74ac38 ; jmp qword ptr [rax]
0x000000000074449f : inc dword ptr [rax] ; xchg byte ptr [rsi], al ; add byte ptr [rax + 0x19], dl ; out dx, al ; jmp qword ptr [rax]
0x00000000006a55f7 : inc dword ptr [rbp + 0x246cdbdb] ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2574
0x00000000006ab1ee : inc dword ptr [rbp + 0x480575c0] ; add esp, 8 ; ret
0x00000000006a6974 : inc dword ptr [rbp + 0x5b0275c0] ; ret
0x00000000006a7957 : inc dword ptr [rbp + 0x5b0775c0] ; ret
0x00000000006b62bc : inc dword ptr [rbp + rcx*4 + 0x50] ; dec dword ptr [rcx - 0x7d] ; ret 0x4c02
0x000000000053ae10 : inc dword ptr [rbp - 0x3f6bf040] ; pop rdx ; ret
0x00000000006cd9e7 : inc dword ptr [rbp - 0x76db8740] ; ret 0xe083
0x0000000000650a9a : inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret
0x00000000006cd1bd : inc dword ptr [rbp - 0x9d68a40] ; ret
0x000000000063237c : inc dword ptr [rbx + 0x394101f0] ; fmul qword ptr [rdi] ; xchg eax, ebp ; ret 0xd084
0x00000000006d0f5a : inc dword ptr [rbx + 0x5b01606b] ; ret
0x00000000006b4280 : inc dword ptr [rbx + 0x634801c3] ; ret
0x00000000005b3fb1 : inc dword ptr [rbx + 0x634c14c0] ; retf -0x2c77
0x00000000006a1c40 : inc dword ptr [rbx + 0xa7716fa] ; lea eax, dword ptr [rdi + 0x20] ; ret
0x00000000006a1d90 : inc dword ptr [rbx + 0xa7716fa] ; lea eax, dword ptr [rdi - 0x20] ; ret
0x00000000004294b9 : inc dword ptr [rbx - 0x14fe33bb] ; retf
0x0000000000651cd7 : inc dword ptr [rbx - 0x2f17fe0d] ; retf
0x00000000006946b7 : inc dword ptr [rbx - 0x60f0e305] ; ret 0x8341
0x00000000006c9901 : inc dword ptr [rbx - 0x7bf00008] ; ret
0x00000000004c881c : inc dword ptr [rbx - 0x7bf0fe05] ; ret
0x00000000004cbeef : inc dword ptr [rbx - 0x7bf0fe05] ; retf 1
0x000000000078b6a5 : inc dword ptr [rbx] ; add al, bh ; adc ah, cl ; call qword ptr [rbx]
0x000000000078b6bd : inc dword ptr [rbx] ; add byte ptr [rax], al ; adc esp, ecx ; call qword ptr [rbx]
0x00000000006d0853 : inc dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000007e320c : inc dword ptr [rbx] ; in al, dx ; add al, 1 ; retf 0x203
0x00000000006c887e : inc dword ptr [rbx] ; jbe 0x6c8a98 ; ret
0x00000000005ae2e2 : inc dword ptr [rbx] ; setne al ; ret
0x0000000000578c38 : inc dword ptr [rcx + 0x29] ; fiadd dword ptr [rcx - 0x7d] ; ret 0x8501
0x00000000004fff41 : inc dword ptr [rcx + 0x29] ; ret 0x8d45
0x000000000068687a : inc dword ptr [rcx + 0x39] ; retf
0x00000000006bef06 : inc dword ptr [rcx + 0xf] ; fdiv dword ptr [rcx] ; ror byte ptr [rax + 0x63], cl ; ret
0x00000000006bc1b8 : inc dword ptr [rcx + 0xf] ; mov dh, 0x53 ; add dword ptr [rcx - 0x7d], ecx ; ret
0x000000000069c8a4 : inc dword ptr [rcx + rax - 0x35] ; mov dword ptr [rdi + 4], ebx ; pop rbx ; ret
0x00000000006c95b1 : inc dword ptr [rcx + rcx*4 + 0x68] ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000671626 : inc dword ptr [rcx + rcx*4 - 0x11] ; call 0x6ce0f6
0x000000000066dc80 : inc dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006c7a50 : inc dword ptr [rcx + rcx*4 - 5] ; call 0x403c76
0x000000000069cd14 : inc dword ptr [rcx - 0x3f] ; ret 0x430c
0x000000000069a1d6 : inc dword ptr [rcx - 0x41] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x696c4c
0x000000000069ac4f : inc dword ptr [rcx - 0x41] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x69775b
0x00000000004a2a37 : inc dword ptr [rcx - 0x44] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x6bed09
0x00000000004341ae : inc dword ptr [rcx - 0x44] ; ret
0x00000000005623e6 : inc dword ptr [rcx - 0x73] ; or qword ptr [r9], r15 ; retf -0x71f1
0x000000000068c4a8 : inc dword ptr [rcx - 0x77] ; pop rsi ; or cl, ch ; retf
0x00000000004082dd : inc dword ptr [rcx - 0x77] ; ret
0x00000000006b8550 : inc dword ptr [rcx - 0x77] ; ret 0xb60f
0x0000000000694946 : inc dword ptr [rcx - 0x77] ; retf -0x76b4
0x00000000006d327c : inc dword ptr [rcx - 0x7d] ; call qword ptr [rcx]
0x00000000005a1a25 : inc dword ptr [rcx - 0x7d] ; cld ; add cl, byte ptr [rdi] ; lahf ; ret 0x854d
0x00000000006bd0bf : inc dword ptr [rcx - 0x7d] ; ret 0x4801
0x00000000006d36cd : inc dword ptr [rcx - 0x80] ; clc ; adc byte ptr [rbp + 0xf], cl ; retf 0x14d
0x0000000000651c5d : inc dword ptr [rcx - 0x80] ; std ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8348
0x000000000069e667 : inc dword ptr [rcx] ; add byte ptr [rax - 0x73], cl ; pop rax ; or byte ptr [rax - 0x77], cl ; ret 0xc7
0x000000000069e5e7 : inc dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x0000000000410c33 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000004fb2a4 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add al, ch ; ret 0x18fa
0x000000000064a8de : inc dword ptr [rcx] ; add byte ptr [rax], al ; add dh, al ; ret 0xf00
0x0000000000539ddc : inc dword ptr [rcx] ; add byte ptr [rax], al ; and rax, 0xffffffffffffffc0 ; ret
0x00000000007ca1d3 : inc dword ptr [rcx] ; and al, 0xd ; add al, 0 ; add byte ptr [rdi + rbx], dh ; retf
0x00000000006ced51 : inc dword ptr [rcx] ; mov eax, 3 ; je 0x6ced69 ; ret
0x0000000000654ee5 : inc dword ptr [rcx] ; ret 0xd039
0x0000000000566333 : inc dword ptr [rcx] ; retf
0x00000000006aa9d2 : inc dword ptr [rcx] ; seta al ; ret
0x00000000005218d2 : inc dword ptr [rcx] ; setne al ; ret
0x00000000007d4ddd : inc dword ptr [rcx] ; xor eax, dword ptr [rcx] ; ret 2
0x00000000005b36a1 : inc dword ptr [rdi + rcx + 0x49] ; retf
0x00000000006a702f : inc dword ptr [rdi + rcx - 0x42] ; ret 0x85c7
0x0000000000600704 : inc dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005ae332 : inc dword ptr [rdi] ; setne al ; ret
0x00000000006ce8b3 : inc dword ptr [rdx] ; sete al ; ret
0x00000000005ae2f2 : inc dword ptr [rdx] ; setne al ; ret
0x000000000068ced9 : inc dword ptr [rip - 0x111720ff] ; retf
0x0000000000500cf7 : inc dword ptr [rip - 0x76b7ffe8] ; ret
0x00000000007bb6d5 : inc dword ptr [rsi] ; add al, cl ; out 0xf0, al ; jmp qword ptr [rdx]
0x00000000006596ed : inc dword ptr [rsi] ; add byte ptr [rax - 1], bh ; ret
0x00000000007bb68d : inc dword ptr [rsi] ; add byte ptr [rax], dh ; in eax, -0x10 ; call rbx
0x00000000005ae322 : inc dword ptr [rsi] ; setne al ; ret
0x000000000073745f : inc eax ; add al, byte ptr [eax] ; pop rsi ; call rdx
0x0000000000735bb7 : inc eax ; add dword ptr [rax], eax ; push rdx ; jbe 0x735b97 ; jmp rax
0x00000000007427b7 : inc eax ; add eax, 0xe9db0e00 ; jmp rax
0x000000000073a40f : inc eax ; add r8, qword ptr [r8] ; xchg ebx, ebx ; jmp rax
0x000000000074611f : inc eax ; and eax, 0x98700007 ; jmp rax
0x0000000000742d6f : inc eax ; clts ; add byte ptr [rsi], al ; retf -0x16
0x0000000000736b17 : inc eax ; cmp eax, dword ptr [rdx] ; add byte ptr [rax], dh ; adc dl, dl ; jmp rax
0x00000000007419af : inc eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xe76cc000 ; jmp rax
0x000000000074240f : inc eax ; fadd qword ptr [rip - 0x173e2000] ; call qword ptr [rax]
0x0000000000738c0f : inc eax ; fiadd dword ptr [rdx] ; add dh, dl ; fst st(6) ; jmp rax
0x0000000000738cff : inc eax ; fiadd word ptr [rdx] ; add byte ptr [rsi - 0x19], dl ; salc ; jmp rax
0x0000000000738e4f : inc eax ; in al, 2 ; add byte ptr [rsi], bl ; cli ; salc ; jmp rax
0x000000000074435f : inc eax ; jg 0x744371 ; add dl, dh ; fsubp st(5) ; jmp rax
0x000000000074aa1f : inc eax ; jp 0x74aa33 ; add al, ah ; pop rbx ; stc ; jmp rax
0x0000000000744ea7 : inc eax ; mov ah, 6 ; add byte ptr [rdx], dl ; cmc ; out dx, al ; jmp rax
0x0000000000744dcf : inc eax ; mov al, 6 ; add byte ptr [rsi], ah ; in al, -0x12 ; jmp rax
0x00000000007352b7 : inc eax ; mov dword ptr [rcx], 0xcf4d6a00 ; jmp rax
0x000000000073882f : inc eax ; mov dword ptr [rdx], 0xd6689a00 ; jmp rax
0x0000000000737b5f : inc eax ; mov dword ptr [rdx], eax ; add ah, dl ; fcomp st(0), st(3) ; jmp rax
0x0000000000747f17 : inc eax ; mov eax, 0xa0600007 ; cmc ; call qword ptr [rax]
0x00000000007445ff : inc eax ; mov word ptr [rsi], es ; add byte ptr [rsi + 0x41], dl ; out dx, al ; jmp rax
0x0000000000739087 : inc eax ; out dx, eax ; add al, byte ptr [rax] ; call 0xffffffffe1736827
0x000000000074a2a7 : inc eax ; pop rax ; or byte ptr [rax], al ; adc ah, 0xf8 ; jmp rax
0x000000000074a367 : inc eax ; pop rbx ; or byte ptr [rax], al ; rcr dl, 1 ; clc ; jmp rax
0x000000000074a2e7 : inc eax ; pop rcx ; or byte ptr [rax], al ; add bh, dl ; clc ; jmp rax
0x000000000074a327 : inc eax ; pop rdx ; or byte ptr [rax], al ; xor cl, bl ; clc ; jmp rax
0x000000000074a3a7 : inc eax ; pop rsp ; or byte ptr [rax], al ; push rax ; fdiv st(0), st(0) ; jmp rax
0x000000000074a1ff : inc eax ; push rbp ; or byte ptr [rax], al ; adc bl, cl ; clc ; jmp rax
0x00000000007351bf : inc eax ; ret 1
0x00000000007451af : inc eax ; ret 6
0x0000000000738907 : inc eax ; retf
0x0000000000745307 : inc eax ; retf 6
0x0000000000748357 : inc eax ; retf 7
0x0000000000735147 : inc eax ; rol byte ptr [rcx], 0 ; call 0xffffffffe173205f
0x000000000073635f : inc eax ; sbb byte ptr [rdx], al ; add byte ptr [rax], ah ; mov ecx, edx ; jmp rax
0x0000000000740197 : inc eax ; sub dword ptr [rip - 0x1ae20000], eax ; call qword ptr [rax]
0x00000000007381ff : inc eax ; test al, 2 ; add dh, al ; mov dh, 0xd4 ; jmp rax
0x000000000073920f : inc eax ; test dword ptr [rdx], 0xd8075a00 ; jmp rax
0x000000000074235f : inc eax ; xlatb ; add eax, 0xe89c6000 ; call qword ptr [rax]
0x000000000066097c : inc ebx ; nop ; mov eax, 0xfffffffe ; ret
0x000000000068e12a : inc ebx ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000068f99f : inc ebx ; xor eax, eax ; ret
0x000000000067800f : inc ecx ; cli ; add eax, 0x6bd22944 ; ret 0x3964
0x0000000000785089 : inc edi ; call qword ptr [rdx]
0x0000000000530f1e : inc edi ; ret
0x00000000006cc8fd : inc esi ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000006a72f7 : inc esi ; ret
0x0000000000434b19 : inc esp ; ret
0x0000000000686879 : inc qword ptr [rcx + 0x39] ; retf
0x00000000005f1778 : insb byte ptr [rdi], dx ; adc dword ptr [rcx], eax ; call rax
0x0000000000790374 : insb byte ptr [rdi], dx ; add al, 0 ; mov byte ptr [rdx - 0x1e], dl ; jmp qword ptr [rdi]
0x0000000000737541 : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; push rax ; sbb dl, bl ; jmp qword ptr [rax]
0x00000000006c6e3f : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000536ccc : insb byte ptr [rdi], dx ; add byte ptr [rcx], r8b ; pop rbx ; ret
0x00000000007fa3c2 : insb byte ptr [rdi], dx ; add byte ptr [rsi - 0x7376f994], bh ; add dword ptr [rax], eax ; retf
0x000000000050ef2d : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; in eax, 0xf ; popfq ; ret 0x854d
0x000000000057d137 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004c3e6d : insb byte ptr [rdi], dx ; add eax, 0x8fbf0000 ; ret 0x6e
0x00000000007a231d : insb byte ptr [rdi], dx ; add eax, 0xe8f58000 ; call qword ptr [rax]
0x00000000007a237d : insb byte ptr [rdi], dx ; add eax, 0xe8f60000 ; call rdi
0x00000000005ae260 : insb byte ptr [rdi], dx ; add edx, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x000000000076fe74 : insb byte ptr [rdi], dx ; add r8b, byte ptr [r8] ; mov dl, 0x43 ; leave ; call qword ptr [rdx]
0x00000000006a5666 : insb byte ptr [rdi], dx ; and al, 0x10 ; add rsp, 0x38 ; ret
0x00000000006a59a2 : insb byte ptr [rdi], dx ; and al, 0x10 ; faddp st(1) ; add rsp, 0x48 ; ret
0x00000000006a5a62 : insb byte ptr [rdi], dx ; and al, 0x10 ; fsubrp st(1) ; add rsp, 0x48 ; ret
0x00000000006a5e4b : insb byte ptr [rdi], dx ; and al, 0x30 ; add rsp, 0x28 ; ret
0x00000000006a5b49 : insb byte ptr [rdi], dx ; and al, 0xd8 ; ret
0x00000000006a56d9 : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000684041 : insb byte ptr [rdi], dx ; and al, 8 ; fldln2 ; fxch st(1) ; fyl2x ; ret
0x0000000000684031 : insb byte ptr [rdi], dx ; and al, 8 ; fucompi st(0) ; setp al ; ret
0x0000000000404121 : insb byte ptr [rdi], dx ; and byte ptr [rdi], ch ; xor eax, eax ; call 0x680b94
0x00000000005721d0 : insb byte ptr [rdi], dx ; and eax, 0x89480016 ; ret
0x000000000063eedf : insb byte ptr [rdi], dx ; call 0xffffffffc3ed37e9
0x000000000063eede : insb byte ptr [rdi], dx ; call 0xffffffffc3ed37ea
0x000000000063f186 : insb byte ptr [rdi], dx ; call 0xffffffffc3ed3a90
0x0000000000534630 : insb byte ptr [rdi], dx ; call qword ptr [rbx]
0x00000000007a5074 : insb byte ptr [rdi], dx ; cdq ; add eax, 0xeb405800 ; jmp qword ptr [rdi]
0x000000000079f074 : insb byte ptr [rdi], dx ; cmp dword ptr [rip - 0x17b78800], eax ; jmp qword ptr [rbx]
0x00000000007a3ec0 : insb byte ptr [rdi], dx ; cmp eax, esi ; call qword ptr [rdx]
0x0000000000777f74 : insb byte ptr [rdi], dx ; enter 2, 0x46 ; retf -0x38
0x00000000005e4d78 : insb byte ptr [rdi], dx ; fild dword ptr [rcx] ; call rax
0x000000000065398c : insb byte ptr [rdi], dx ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000060bc80 : insb byte ptr [rdi], dx ; idiv r15 ; add rsp, 8 ; ret
0x00000000007820b4 : insb byte ptr [rdi], dx ; imul eax, dword ptr [rbx], 0xded78800 ; call qword ptr [rdi]
0x0000000000799c74 : insb byte ptr [rdi], dx ; in eax, 4 ; add byte ptr [rax + 0x51], bl ; out 0xff, al ; ret 0
0x00000000007552a1 : insb byte ptr [rdi], dx ; iretd ; call rsp
0x00000000007636b4 : insb byte ptr [rdi], dx ; jg 0x7636bf ; add byte ptr [rsi], dh ; and ebp, edx ; call qword ptr [rax]
0x00000000006a1b53 : insb byte ptr [rdi], dx ; jle 0x6a1b4b ; mov eax, 1 ; ret
0x00000000004aed90 : insb byte ptr [rdi], dx ; jmp qword ptr [rax]
0x0000000000792c74 : insb byte ptr [rdi], dx ; jne 0x792c80 ; add byte ptr [rax], cl ; retf
0x00000000007b2c74 : insb byte ptr [rdi], dx ; jne 0x7b2c84 ; add al, cl ; out dx, al ; jmp rsp
0x000000000042a070 : insb byte ptr [rdi], dx ; mov byte ptr [rbp], bl ; call rax
0x0000000000433ce0 : insb byte ptr [rdi], dx ; mov dl, 0xff ; dec ecx ; ret
0x0000000000433f40 : insb byte ptr [rdi], dx ; mov edx, 0x29480025 ; ret
0x0000000000794574 : insb byte ptr [rdi], dx ; mov es, word ptr [rax + rax] ; xor bh, byte ptr [rsi - 0x1c] ; call qword ptr [rax]
0x0000000000541944 : insb byte ptr [rdi], dx ; mov qword ptr [rdi + 0x28], rsi ; add rsp, 8 ; ret
0x000000000074a699 : insb byte ptr [rdi], dx ; or byte ptr [rax], al ; and byte ptr [rax], ah ; stc ; jmp qword ptr [rax]
0x000000000074a6c9 : insb byte ptr [rdi], dx ; or byte ptr [rax], al ; and byte ptr [rdx], ah ; stc ; call rax
0x000000000074a6d9 : insb byte ptr [rdi], dx ; or byte ptr [rax], al ; sub byte ptr [rbx], 0xf9 ; jmp qword ptr [rax]
0x0000000000543ed0 : insb byte ptr [rdi], dx ; or byte ptr [rcx], bl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007ac474 : insb byte ptr [rdi], dx ; or eax, 0x46d80006 ; in eax, dx ; call qword ptr [rbx]
0x00000000005300c8 : insb byte ptr [rdi], dx ; outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ja 0x5300de ; ret
0x000000000074473c : insb byte ptr [rdi], dx ; pop rsi ; out dx, al ; call rax
0x00000000004c5678 : insb byte ptr [rdi], dx ; rcl byte ptr [rbx], cl ; call rax
0x0000000000767a74 : insb byte ptr [rdi], dx ; ret
0x0000000000777974 : insb byte ptr [rdi], dx ; ret 2
0x000000000041b230 : insb byte ptr [rdi], dx ; retf
0x0000000000524ac2 : insb byte ptr [rdi], dx ; retf 0x15
0x0000000000515e70 : insb byte ptr [rdi], dx ; retf 0x4e
0x00000000006a7cd0 : insb byte ptr [rdi], dx ; retf 2
0x0000000000758ab4 : insb byte ptr [rdi], dx ; rol dword ptr [rax], cl ; add byte ptr [rax + 0x19], dh ; sar bh, 1 ; ret
0x00000000005c391c : insb byte ptr [rdi], dx ; ror byte ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005edee2 : insb byte ptr [rdi], dx ; sbb al, 9 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000004b330b : insb byte ptr [rdi], dx ; sbb eax, 0x58b4800 ; retf
0x000000000079d274 : insb byte ptr [rdi], dx ; sbb eax, dword ptr [rip - 0x1825f600] ; jmp qword ptr [rdi]
0x0000000000589a63 : insb byte ptr [rdi], dx ; str word ptr [rax - 0x77] ; ret
0x000000000079e074 : insb byte ptr [rdi], dx ; sub dword ptr [rip - 0x180b2600], eax ; call qword ptr [rsi]
0x00000000004d8260 : insb byte ptr [rdi], dx ; test byte ptr [rsi], bl ; add cl, cl ; ret
0x00000000004b6060 : insb byte ptr [rdi], dx ; test dword ptr [rax], esp ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000049f5f0 : insb byte ptr [rdi], dx ; xor dl, byte ptr [rsi] ; call rax
0x00000000004db856 : insd dword ptr [rdi], dx ; adc eax, 0x8fbf0000 ; ret 0x6e
0x000000000056045f : insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x00000000006160d1 : insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; clc ; leave ; ret
0x00000000004f3b30 : insd dword ptr [rdi], dx ; add al, ch ; cdq ; mov edi, 0x40bf0019 ; retf 0x6d
0x00000000004f3c07 : insd dword ptr [rdi], dx ; add al, ch ; ret 0x19be
0x00000000004f41fe : insd dword ptr [rdi], dx ; add al, ch ; retf
0x00000000004f3b44 : insd dword ptr [rdi], dx ; add al, ch ; test dword ptr [rdi - 0x3f40ffe7], edi ; retf
0x00000000006d110b : insd dword ptr [rdi], dx ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004340ed : insd dword ptr [rdi], dx ; add byte ptr [rax - 0x39], cl ; cwde ; push rax ; ret
0x0000000000434121 : insd dword ptr [rdi], dx ; add byte ptr [rax - 0x39], cl ; test al, 0x58 ; ret
0x00000000004be4fd : insd dword ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x0000000000571eec : insd dword ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006d95fa : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; retf 0x9f
0x00000000006d9692 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; retf 0x9f
0x00000000006d9712 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; retf
0x00000000006dc97a : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; retf
0x000000000075248d : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; retf -0x31e5
0x00000000004348b5 : insd dword ptr [rdi], dx ; add byte ptr [rax], bh ; call 0x680b95
0x0000000000425041 : insd dword ptr [rdi], dx ; add byte ptr [rax], bh ; call 0x681303
0x0000000000434187 : insd dword ptr [rdi], dx ; add byte ptr [rcx - 0x41], al ; pop rax ; ret
0x00000000004c3ee7 : insd dword ptr [rdi], dx ; add eax, 0x8fbf0000 ; ret 0x6e
0x0000000000572a5b : insd dword ptr [rdi], dx ; and al, 0xe9 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005325cf : insd dword ptr [rdi], dx ; and dword ptr [rdx], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000487b5c : insd dword ptr [rdi], dx ; and eax, dword ptr [rax] ; leave ; ret
0x000000000063ee1c : insd dword ptr [rdi], dx ; call 0xffffffffc3ed3726
0x0000000000653489 : insd dword ptr [rdi], dx ; fiadd word ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000069d54e : insd dword ptr [rdi], dx ; fmul qword ptr [rax + 0x29] ; ret 0x8348
0x0000000000653a8b : insd dword ptr [rdi], dx ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000045143f : insd dword ptr [rdi], dx ; in eax, 0x23 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000496c3f : insd dword ptr [rdi], dx ; jl 0x496c69 ; add cl, cl ; ret
0x00000000004289af : insd dword ptr [rdi], dx ; jle 0x4289df ; add byte ptr [rax - 0x77], cl ; ret 0x858b
0x0000000000581dd9 : insd dword ptr [rdi], dx ; jo 0x581de2 ; mov rdi, rbx ; call rax
0x0000000000582040 : insd dword ptr [rdi], dx ; jo 0x582049 ; mov rdi, rbx ; call rax
0x00000000004445f5 : insd dword ptr [rdi], dx ; mov ch, 0x23 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b587b : insd dword ptr [rdi], dx ; mov dl, 0xc ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000592d5f : insd dword ptr [rdi], dx ; mov eax, 0x89480012 ; ret
0x0000000000721b1b : insd dword ptr [rdi], dx ; mov word ptr [rsi], cs ; ret 0x4374
0x00000000005a0f66 : insd dword ptr [rdi], dx ; or byte ptr [rcx - 0x77], cl ; fmul qword ptr [rax - 0x7d] ; ret
0x00000000007f47fd : insd dword ptr [rdi], dx ; or ch, byte ptr [rbx - 0x36] ; add byte ptr [rax + 0xb], ch ; retf
0x00000000005aa889 : insd dword ptr [rdi], dx ; push 0xd ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047f8a1 : insd dword ptr [rdi], dx ; ret
0x00000000005185bf : insd dword ptr [rdi], dx ; ret 0x15
0x000000000050856f : insd dword ptr [rdi], dx ; sbb byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000074ab05 : insd dword ptr [rdi], dx ; stc ; jmp rax
0x000000000058990b : insd dword ptr [rdi], dx ; str word ptr [rax - 0x77] ; ret
0x000000000067fb0f : insd dword ptr [rdi], dx ; sub eax, 0x89480038 ; ret
0x000000000050b45f : insd dword ptr [rdi], dx ; xor dword ptr [rbx], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006cbba8 : insd dword ptr [rdi], dx ; xor eax, dword ptr [rax] ; add rsp, 8 ; jmp rax
0x00000000006772d1 : insd dword ptr [rdi], dx ; xor eax, eax ; ret
0x0000000000522572 : int 0x80
0x00000000004f36ff : int 0xc3
0x00000000007d96cf : int1 ; adc al, 0 ; stc ; syscall
0x000000000049e671 : int1 ; adc al, 0x1e ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e872e : int1 ; adc byte ptr [rdx], al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; adc eax, dword ptr [rax] ; call qword ptr [rax]
0x000000000053daba : int1 ; adc dword ptr [rax], eax ; add rsp, 8 ; ret
0x00000000007d1002 : int1 ; add al, 0x3a ; add byte ptr [rax], al ; ret 0x505
0x00000000007bf45e : int1 ; add al, 5 ; ret 7
0x00000000007390e9 : int1 ; add al, byte ptr [rax] ; cmp al, 0xad ; xlatb ; jmp rax
0x00000000007f833d : int1 ; add al, byte ptr [rax] ; retf 0x2702
0x00000000007f45df : int1 ; add dword ptr [rax], eax ; ret
0x0000000000742781 : int1 ; add eax, 0xe9bce000 ; call rax
0x0000000000742791 : int1 ; add eax, 0xe9bd6600 ; call qword ptr [rax]
0x00000000007aa86d : int1 ; add eax, 0xecda5000 ; call qword ptr [rdi]
0x00000000007aa89d : int1 ; add eax, 0xecda6000 ; jmp qword ptr [rcx]
0x00000000007aa8d5 : int1 ; add eax, 0xecdad800 ; jmp qword ptr [rcx]
0x00000000007aa905 : int1 ; add eax, 0xecdae800 ; call qword ptr [rdx]
0x00000000007f7f50 : int1 ; add eax, dword ptr [rax] ; int1 ; add ebp, dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x00000000007f7f53 : int1 ; add ebp, dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x00000000007bc932 : int1 ; call qword ptr [rax]
0x00000000007bcbba : int1 ; call qword ptr [rbx]
0x00000000007bde42 : int1 ; call qword ptr [rcx]
0x00000000007bcf2a : int1 ; call qword ptr [rdi]
0x00000000007bc76a : int1 ; call qword ptr [rsi]
0x0000000000745c6e : int1 ; call rax
0x00000000007be102 : int1 ; call rsp
0x0000000000635c23 : int1 ; cmp eax, 0x9c8d4800 ; ret
0x0000000000745b7e : int1 ; dec dword ptr [rax] ; or byte ptr [rdi], al ; add byte ptr [rax + 0x38], dh ; int1 ; jmp qword ptr [rax]
0x0000000000684b23 : int1 ; fchs ; add rsp, 0x38 ; ret
0x00000000006a592e : int1 ; fstp st(0) ; fstp st(0) ; add rsp, 0x48 ; ret
0x0000000000684c99 : int1 ; fsubp st(1) ; add rsp, 0x28 ; ret
0x0000000000680f01 : int1 ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000064e45f : int1 ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000676e69 : int1 ; ja 0x676eb4 ; add rsp, 8 ; ret
0x00000000005f8699 : int1 ; je 0x5f86c1 ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000631623 : int1 ; je 0x63166a ; add byte ptr [rax - 0x73], cl ; pushfq ; ret
0x00000000004889ef : int1 ; jl 0x488a17 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000745b86 : int1 ; jmp qword ptr [rax]
0x00000000007bd9ea : int1 ; jmp qword ptr [rbx]
0x00000000007bed4a : int1 ; jmp qword ptr [rcx]
0x00000000007bcf12 : int1 ; jmp qword ptr [rdx]
0x00000000006653a0 : int1 ; jne 0x665353 ; pop rbx ; ret
0x0000000000686168 : int1 ; jne 0x686169 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000745c66 : int1 ; lcall ptr [rax - 0xffff8f1] ; stosb byte ptr [rdi], al ; int1 ; call rax
0x00000000005815b2 : int1 ; lea rdi, qword ptr [rcx + 1] ; jmp 0x581582
0x000000000041465d : int1 ; mov ah, 0x26 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000444571 : int1 ; mov ch, 0x23 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004553ef : int1 ; mov dl, 0x22 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006915ce : int1 ; mov eax, 1 ; ret
0x0000000000508653 : int1 ; mov eax, edx ; pop rbx ; ret
0x0000000000433fbb : int1 ; mov ecx, 0x29480025 ; ret
0x00000000006164ec : int1 ; mov qword ptr [rcx + rsi*8 + 8], rdx ; leave ; ret
0x00000000005c86c4 : int1 ; mov rdi, qword ptr [rbp - 0x338] ; call rbx
0x00000000005cf66d : int1 ; mov rdx, rcx ; nop ; leave ; ret
0x00000000005d8d65 : int1 ; mov rdx, rcx ; nop ; pop rbp ; ret
0x000000000054809f : int1 ; mov rsi, rbx ; call rax
0x00000000006164f0 : int1 ; or cl, cl ; ret
0x00000000006123f3 : int1 ; or eax, 0x89480000 ; ret 0x8b48
0x00000000004d8869 : int1 ; or eax, 0x8fbf0000 ; ret 0x6e
0x0000000000721993 : int1 ; out -0x30, eax ; call 0xffffffffc4509cc8
0x0000000000505d06 : int1 ; outsb dx, byte ptr [rsi] ; add al, ch ; ret 0x1893
0x00000000004c6b49 : int1 ; push -0x76b70004 ; ret 0x8b48
0x00000000005ed2eb : int1 ; push rbp ; add r15b, dil ; ror cl, 1 ; ret
0x0000000000408b09 : int1 ; push rbp ; mov rbp, rsp ; call rax
0x0000000000722f6c : int1 ; push rdi ; adc esp, esi ; or dword ptr [rcx - 0x6c], eax ; cmc ; retf
0x00000000004d56f3 : int1 ; rcl dword ptr [rdx], 1 ; call rax
0x000000000046557b : int1 ; rcr byte ptr [rcx], cl ; call rax
0x00000000004ed571 : int1 ; ret
0x000000000051844b : int1 ; ret 0x1b
0x00000000004b56bb : int1 ; ret 0x1c
0x00000000004065f3 : int1 ; ret 0x5f
0x00000000005b5005 : int1 ; ret 0xc
0x000000000056c87b : int1 ; retf
0x00000000007f4048 : int1 ; retf 0x501
0x00000000004b5d7b : int1 ; retf 0x54
0x0000000000738ddd : int1 ; salc ; push qword ptr [rax - 0x1e] ; add al, byte ptr [rax] ; retf -0x290f
0x00000000007f5d4a : int1 ; sbb al, byte ptr [rax] ; ret
0x0000000000568dbb : int1 ; scasb al, byte ptr [rdi] ; add eax, dword ptr [rax] ; jmp 0x568d91
0x00000000006c0a4f : int1 ; sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000006d6d1f : int1 ; sub ah, bh ; retf
0x00000000004321e3 : int1 ; sub byte ptr [rax], al ; leave ; ret
0x000000000041feeb : int1 ; sub dword ptr [rsi], ebx ; call rax
0x00000000004861bb : int1 ; xchg byte ptr [rbx], ah ; add cl, cl ; ret
0x00000000004551db : int1 ; xchg eax, ebx ; add byte ptr es:[rax - 0x77], cl ; ret 0x8948
0x00000000006784ae : int1 ; xor eax, eax ; ret
0x000000000057d2ef : int1 ; xor edx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000471515 : iretd ; adc ebx, dword ptr [rcx] ; call rax
0x0000000000534b6d : iretd ; add al, 0 ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000048dc18 : iretd ; add byte ptr [rax - 0x75], cl ; add eax, 0x574cc7 ; call rax
0x00000000007586fd : iretd ; add byte ptr [rax], al ; or dl, al ; call rsp
0x0000000000742229 : iretd ; add eax, 0xe83c0000 ; call qword ptr [rax]
0x00000000005d7a01 : iretd ; call 0x403c73
0x0000000000735156 : iretd ; call qword ptr [rax]
0x000000000075544a : iretd ; call qword ptr [rbx]
0x0000000000560b19 : iretd ; call qword ptr [rcx]
0x000000000075522a : iretd ; call qword ptr [rdi]
0x000000000075540a : iretd ; call qword ptr [rdx]
0x00000000007558e2 : iretd ; call qword ptr [rsi]
0x000000000040a502 : iretd ; call rax
0x0000000000754c9a : iretd ; call rbx
0x000000000075636a : iretd ; call rcx
0x000000000040aafd : iretd ; call rdx
0x00000000007542ca : iretd ; call rsp
0x000000000074a235 : iretd ; clc ; call rax
0x000000000074756d : iretd ; hlt ; call rax
0x00000000007352b6 : iretd ; inc eax ; mov dword ptr [rcx], 0xcf4d6a00 ; jmp rax
0x0000000000735146 : iretd ; inc eax ; rol byte ptr [rcx], 0 ; call 0xffffffffe1732060
0x0000000000735196 : iretd ; jmp qword ptr [rax]
0x0000000000755aea : iretd ; jmp qword ptr [rbx]
0x00000000007559a2 : iretd ; jmp qword ptr [rsi]
0x000000000073514e : iretd ; jmp rax
0x0000000000754a8a : iretd ; jmp rcx
0x00000000007579b2 : iretd ; jmp rdi
0x00000000007557b2 : iretd ; jmp rsi
0x0000000000735706 : iretd ; ljmp ptr [rax - 0x73fffe24] ; fcmove st(0), st(7) ; call rax
0x00000000005125e5 : iretd ; mov qword ptr [rbp - 0x58], r9 ; call rax
0x0000000000617d2e : iretd ; mov rax, rbx ; mov rdi, rax ; call 0x6d4749
0x00000000004a00c2 : iretd ; mov rsi, r8 ; call rax
0x00000000004e8a47 : iretd ; mov rsi, rax ; call 0x4554d2
0x00000000004e8a9d : iretd ; mov rsi, rax ; call 0x455540
0x00000000004cb33f : iretd ; mov rsi, rax ; call 0x6875d6
0x000000000042ea8a : iretd ; mov rsi, rax ; call 0x68ad76
0x00000000006155ac : iretd ; mov rsi, rax ; call 0x6a1896
0x00000000004a7863 : iretd ; mov rsi, rax ; call 0x6c42c6
0x00000000004385b3 : iretd ; mov rsi, rax ; call 0x6c5026
0x00000000004427a0 : iretd ; mov rsi, rdx ; call rax
0x00000000004d05df : iretd ; outsb dx, byte ptr [rsi] ; add byte ptr [rax - 0x39], cl ; test dword ptr [rax], ebp ; idiv edi ; call qword ptr [rax]
0x00000000004d0477 : iretd ; outsb dx, byte ptr [rsi] ; add byte ptr [rax - 0x39], cl ; test eax, ebx ; idiv bh ; call qword ptr [rax]
0x0000000000735456 : iretd ; push qword ptr [rax + 0x20001cf] ; xchg bh, cl ; call rax
0x0000000000735256 : iretd ; push qword ptr [rax - 0x3bfffe3b] ; xor ecx, edi ; jmp rax
0x000000000073576e : iretd ; push qword ptr [rax - 0x65fffe22] ; out 0xcf, al ; call rax
0x000000000073577e : iretd ; push rax ; fiadd word ptr [rcx] ; add ah, al ; out 0xcf, al ; call qword ptr [rax]
0x00000000007dc573 : iretd ; sldt word ptr [rax] ; add dh, dl ; syscall
0x000000000074b425 : iretd ; stc ; jmp rax
0x00000000007e6857 : iretd ; syscall
0x000000000045f815 : iretd ; xor byte ptr [rdx], bl ; call rax
0x00000000007352c5 : iretq ; call qword ptr [rax]
0x0000000000754ce9 : iretq ; call rsp
0x0000000000735295 : iretq ; jmp qword ptr [rax]
0x00000000007352bd : iretq ; jmp rax
0x000000000047d152 : ja 0x47d1a4 ; mov eax, dword ptr [rip + 0x58570e] ; call rax
0x00000000004a6e51 : ja 0x4a6e79 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004a6e87 : ja 0x4a6eaf ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004a6e86 : ja 0x4a6eb0 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004b8215 : ja 0x4b81b0 ; and byte ptr [rax], al ; leave ; ret
0x00000000004d8f83 : ja 0x4d8fa7 ; add cl, cl ; ret
0x00000000004d8f82 : ja 0x4d8fa8 ; add cl, cl ; ret
0x0000000000503422 : ja 0x503436 ; ret
0x0000000000503792 : ja 0x5037a7 ; ret
0x000000000050b5d2 : ja 0x50b5ee ; ret
0x000000000050bd5d : ja 0x50bd69 ; ret
0x000000000050bded : ja 0x50bdf9 ; ret
0x000000000050f732 : ja 0x50f746 ; ret
0x000000000050fbfc : ja 0x50fc08 ; ret
0x0000000000517f35 : ja 0x517f50 ; mov rax, rdi ; mov edx, esi ; jg 0x517f49 ; ret
0x0000000000518444 : ja 0x518464 ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; int1 ; ret 0x1b
0x000000000051cfa0 : ja 0x51cfc2 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000525e6d : ja 0x525e3f ; add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000526082 : ja 0x52609e ; ret
0x00000000005260b2 : ja 0x5260c6 ; ret
0x0000000000526b76 : ja 0x526b8d ; setge al ; ret
0x0000000000526f48 : ja 0x526f5e ; jl 0x526f54 ; ret
0x000000000052b672 : ja 0x52b68e ; ret
0x000000000052b6a2 : ja 0x52b6b6 ; ret
0x000000000052db8d : ja 0x52db99 ; ret
0x000000000052dc1d : ja 0x52dc29 ; ret
0x000000000052edfd : ja 0x52ee09 ; ret
0x000000000052ee8d : ja 0x52ee99 ; ret
0x000000000053003d : ja 0x530049 ; ret
0x00000000005300cd : ja 0x5300d9 ; ret
0x000000000053ed41 : ja 0x53ed57 ; jg 0x53ed4a ; ret
0x0000000000541947 : ja 0x541977 ; add rsp, 8 ; ret
0x0000000000545312 : ja 0x54532e ; ret
0x0000000000545342 : ja 0x545356 ; ret
0x000000000054649d : ja 0x5464a9 ; ret
0x000000000054652d : ja 0x546539 ; ret
0x0000000000546e98 : ja 0x546eb6 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000549356 : ja 0x549370 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054cf8d : ja 0x54cfac ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054f8dd : ja 0x54f8e9 ; ret
0x000000000054f96d : ja 0x54f979 ; ret
0x0000000000558312 : ja 0x558336 ; ret
0x0000000000558a4d : ja 0x558a59 ; ret
0x0000000000558add : ja 0x558ae9 ; ret
0x0000000000558e8f : ja 0x558ea8 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000056b592 : ja 0x56b5ae ; ret
0x000000000056b5c2 : ja 0x56b5d6 ; ret
0x000000000056b7bd : ja 0x56b7c9 ; ret
0x000000000056b84d : ja 0x56b859 ; ret
0x000000000056cd47 : ja 0x56cd54 ; add rsp, 8 ; ret
0x000000000056f775 : ja 0x56f790 ; mov rax, rdi ; mov edx, esi ; jg 0x56f789 ; ret
0x0000000000571d48 : ja 0x571d5e ; jl 0x571d54 ; ret
0x0000000000572efd : ja 0x572f09 ; ret
0x0000000000572f8d : ja 0x572f99 ; ret
0x0000000000573fff : ja 0x574019 ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000584025 : ja 0x584040 ; mov rax, rdi ; mov edx, esi ; jg 0x584039 ; ret
0x00000000005841a5 : ja 0x5841c0 ; mov rax, rdi ; mov edx, esi ; jg 0x5841b9 ; ret
0x0000000000584472 : ja 0x58447e ; ret
0x000000000058fa88 : ja 0x58fa9e ; jl 0x58fa94 ; ret
0x0000000000590946 : ja 0x59095d ; setge al ; ret
0x0000000000590d28 : ja 0x590d3e ; jl 0x590d34 ; ret
0x0000000000595eb2 : ja 0x595ece ; ret
0x0000000000595ee2 : ja 0x595ef6 ; ret
0x00000000005960ad : ja 0x5960b9 ; ret
0x000000000059613d : ja 0x596149 ; ret
0x0000000000596f0d : ja 0x596f19 ; ret
0x0000000000596f9d : ja 0x596fa9 ; ret
0x0000000000597e6d : ja 0x597e79 ; ret
0x0000000000597efd : ja 0x597f09 ; ret
0x000000000059c0d5 : ja 0x59c0f0 ; mov rax, rdi ; mov edx, esi ; jg 0x59c0e9 ; ret
0x00000000005a2ced : ja 0x5a2cf9 ; ret
0x00000000005a2d7d : ja 0x5a2d89 ; ret
0x00000000005a4b26 : ja 0x5a4b3d ; setge al ; ret
0x00000000005a5018 : ja 0x5a502e ; jl 0x5a5024 ; ret
0x00000000005a5ea7 : ja 0x5a5ed7 ; add rsp, 8 ; ret
0x00000000005a8cad : ja 0x5a8cb9 ; ret
0x00000000005a8d3d : ja 0x5a8d49 ; ret
0x00000000005acf44 : ja 0x5acf5d ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005ae002 : ja 0x5ae01e ; ret
0x00000000005ae032 : ja 0x5ae046 ; ret
0x00000000005b0236 : ja 0x5b0254 ; add rsp, 8 ; ret
0x00000000005b0276 : ja 0x5b0294 ; add rsp, 8 ; ret
0x00000000005b02e6 : ja 0x5b0304 ; add rsp, 8 ; ret
0x00000000005b0656 : ja 0x5b0674 ; add rsp, 8 ; ret
0x00000000005f8c9d : ja 0x5f8ca9 ; ret
0x00000000005f9650 : ja 0x5f9658 ; ret
0x00000000005f964b : ja 0x5f965a ; add esi, ecx ; mov dword ptr [rdi + 4], esi ; ret
0x00000000005f972b : ja 0x5f973a ; add eax, esi ; mov dword ptr [rdi + 4], eax ; ret
0x00000000006016c5 : ja 0x601749 ; or byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000061e165 : ja 0x61e1b5 ; add bh, bh ; ror cl, 1 ; ret
0x000000000062aa52 : ja 0x62aa6e ; ret
0x000000000062b1cd : ja 0x62b1d9 ; ret
0x000000000062b25d : ja 0x62b269 ; ret
0x0000000000630f20 : ja 0x630f64 ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000006313a4 : ja 0x6313e9 ; add byte ptr [rax - 0x73], cl ; pushfq ; ret
0x0000000000638fdc : ja 0x638fe7 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006483f1 : ja 0x6483fe ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x00000000006492ff : ja 0x649309 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000064940b : ja 0x649415 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000658f32 : ja 0x658f3b ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006593a9 : ja 0x6593b2 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000065d2f1 : ja 0x65d303 ; add rsp, 8 ; ret
0x000000000065d351 : ja 0x65d363 ; add rsp, 8 ; ret
0x000000000065e1f2 : ja 0x65e211 ; mov dword ptr [rdi + 0x20], edx ; ret
0x000000000066714c : ja 0x667168 ; add rsp, 8 ; ret
0x0000000000667a41 : ja 0x667aa9 ; ret
0x0000000000676e6a : ja 0x676eb3 ; add rsp, 8 ; ret
0x0000000000677177 : ja 0x6771a9 ; add rsp, 8 ; ret
0x0000000000678374 : ja 0x678395 ; add rsp, 8 ; ret
0x000000000067b49e : ja 0x67b4e0 ; add byte ptr [rbx - 0x60f0fd05], al ; ret 0x8843
0x0000000000681475 : ja 0x6814a3 ; fdivr st(7) ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000068372c : ja 0x683756 ; add rsp, 0x28 ; ret
0x00000000006841cc : ja 0x6841dd ; fsqrt ; add rsp, 8 ; ret
0x0000000000684296 : ja 0x6842a8 ; fcos ; add rsp, 0x38 ; ret
0x00000000006847d8 : ja 0x6847f0 ; fsin ; add rsp, 0x38 ; ret
0x0000000000686d58 : ja 0x686ce5 ; ret 0xca29
0x0000000000690535 : ja 0x69059a ; add dword ptr [rax], eax ; mov eax, dword ptr [rbx + 0x60] ; pop rbx ; ret
0x00000000006920a4 : ja 0x692110 ; add rsp, 8 ; ret
0x0000000000692184 : ja 0x6921f4 ; add rsp, 8 ; ret
0x00000000006a0e9b : ja 0x6a0eb0 ; cmp edx, r9d ; setbe al ; ret
0x00000000006a1c44 : ja 0x6a1c55 ; lea eax, dword ptr [rdi + 0x20] ; ret
0x00000000006a1d94 : ja 0x6a1da5 ; lea eax, dword ptr [rdi - 0x20] ; ret
0x00000000006a5529 : ja 0x6a554e ; fchs ; mov dword ptr [rax + 0x10], edx ; fstp xword ptr [rax] ; ret
0x00000000006a5b34 : ja 0x6a5b54 ; fstp st(0) ; ret
0x00000000006a5d2c : ja 0x6a5d40 ; fstp st(1) ; add rsp, 0x38 ; ret
0x00000000006a5dac : ja 0x6a5dc0 ; fstp st(1) ; add rsp, 0x38 ; ret
0x00000000006a60cd : ja 0x6a60df ; add rsp, 8 ; ret
0x00000000006a7da2 : ja 0x6a7db6 ; ret
0x00000000006a7e12 : ja 0x6a7e3e ; ret
0x00000000006a89e2 : ja 0x6a89f6 ; ret
0x00000000006c03bd : ja 0x6c03c9 ; ret
0x00000000006c57d1 : ja 0x6c57de ; add rsp, 8 ; ret
0x00000000006cbb61 : ja 0x6cbb69 ; ret
0x00000000006cbb82 : ja 0x6cbb88 ; ret
0x00000000006cf607 : ja 0x6cf622 ; mov rax, rdi ; add rsp, 8 ; ret
0x00000000006d11b2 : ja 0x6d1172 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000006d1398 : ja 0x6d1388 ; sub rax, r8 ; mov byte ptr [rsi + rax], dl ; ret
0x00000000006d6b0c : ja 0x6d6b3b ; xchg eax, ebx ; retf 0x69bc
0x0000000000722a3c : ja 0x722a22 ; push rbx ; retf -0x4446
0x00000000007234a5 : ja 0x7234b9 ; mov dl, 0xb9 ; ret 0x5ca1
0x0000000000734385 : ja 0x734356 ; jmp qword ptr [rax]
0x00000000007388e5 : ja 0x7388c1 ; lcall ptr [rax] ; retf
0x0000000000739955 : ja 0x739931 ; call qword ptr [rax]
0x000000000073c6d5 : ja 0x73c6b8 ; call rax
0x000000000073cf6d : ja 0x73cf51 ; jmp rax
0x000000000073cf75 : ja 0x73cf59 ; call qword ptr [rax]
0x00000000007419fd : ja 0x7419e8 ; jmp rax
0x0000000000741a05 : ja 0x7419f0 ; jmp qword ptr [rax]
0x00000000007441e9 : ja 0x7441f7 ; add al, dl ; mov ebp, gs ; jmp qword ptr [rax]
0x000000000074549d : ja 0x745490 ; jmp rax
0x00000000007471a9 : ja 0x7471b8 ; add byte ptr [rax], dl ; jo 0x7471a9 ; call rax
0x0000000000749535 : ja 0x749530 ; call rax
0x0000000000752efd : ja 0x752f05 ; add byte ptr [rsi], bl ; xchg esi, ecx ; call rsp
0x0000000000772ea5 : ja 0x772eaf ; add al, cl ; cmp al, 0xdb ; call qword ptr [rbx]
0x0000000000772eed : ja 0x772ef7 ; add al, dh ; cmp al, 0xdb ; jmp qword ptr [rax]
0x0000000000777751 : ja 0x777731 ; call qword ptr [rcx]
0x0000000000777750 : ja 0x777732 ; call qword ptr [rcx]
0x00000000007777b1 : ja 0x777791 ; call qword ptr [rcx]
0x0000000000799f91 : ja 0x799f7b ; call qword ptr [rbx]
0x0000000000799f90 : ja 0x799f7c ; call qword ptr [rbx]
0x000000000079bbc9 : ja 0x79bbb4 ; jmp rdx
0x000000000079ffe1 : ja 0x79ffcd ; call rdi
0x00000000007cb328 : ja 0x7cb32c ; retf
0x00000000007fa49f : ja 0x7fa4a9 ; cdq ; jbe 0x7fa4ba ; fsub dword ptr [rbp] ; ret
0x00000000007fa4c1 : ja 0x7fa4cd ; fsub dword ptr [rbp] ; retf
0x000000000040410f : jae 0x40412f ; outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x9a ; retf 0x27
0x0000000000412639 : jae 0x412602 ; sub al, byte ptr [rax] ; leave ; ret
0x0000000000412c39 : jae 0x412bfc ; sub al, byte ptr [rax] ; leave ; ret
0x0000000000429449 : jae 0x429477 ; add byte ptr [rax - 0x77], cl ; ret 0x858b
0x0000000000437239 : jae 0x4372b6 ; sub byte ptr [rax], al ; leave ; ret
0x0000000000438823 : jae 0x43884e ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000438822 : jae 0x43884f ; add byte ptr [rax - 0x77], cl ; ret
0x000000000045bd29 : jae 0x45bd7c ; add cl, cl ; ret
0x0000000000488815 : jae 0x48883b ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000488814 : jae 0x48883c ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000499369 : jae 0x499391 ; add cl, cl ; ret
0x0000000000499368 : jae 0x499392 ; add cl, cl ; ret
0x00000000004e7233 : jae 0x4e7257 ; add byte ptr [rax - 0x77], cl ; ret 0x2c7
0x00000000004f987f : jae 0x4f989e ; add byte ptr [rax - 0x77], cl ; ret
0x000000000051cf8b : jae 0x51cf80 ; dec dword ptr [rax - 0x77] ; ret
0x000000000051cf8a : jae 0x51cf81 ; dec dword ptr [rax - 0x77] ; ret
0x000000000051d362 : jae 0x51d384 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005296c2 : jae 0x5296de ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054d3de : jae 0x54d3fd ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000551185 : jae 0x551203 ; outsb dx, byte ptr gs:[rsi] ; and byte ptr [rdi + rcx], dh ; ret 0x8d48
0x0000000000579fa3 : jae 0x579fba ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000586e96 : jae 0x586ea4 ; lea rdi, qword ptr [r15 + 4] ; call 0x4038f8
0x000000000059584f : jae 0x595879 ; mov rdi, qword ptr [rbp + 0x20] ; call 0x6a1a98
0x00000000005971f3 : jae 0x59720c ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005987ee : jae 0x598802 ; add bl, ch ; ret 0x8948
0x00000000005bb560 : jae 0x5bb5aa ; add al, ch ; retf 0xc5f
0x00000000005dc938 : jae 0x5dc921 ; dec dword ptr [rax + 0x63] ; ret
0x00000000005eb56e : jae 0x5eb5b7 ; add bh, bh ; ror cl, 1 ; ret
0x00000000005f3139 : jae 0x5f30f7 ; or al, 0 ; leave ; ret
0x00000000005f97bd : jae 0x5f97cc ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000611c20 : jae 0x611c27 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000006387f4 : jae 0x6387fe ; add cl, ch ; ret
0x000000000067b8ed : jae 0x67b92f ; add byte ptr [rbx + 0x480f02c0], al ; ret 0x9848
0x00000000006bfc1a : jae 0x6bfc1e ; ret
0x00000000006bfc69 : jae 0x6bfc9b ; xor al, 0 ; jmp rax
0x00000000006c03b9 : jae 0x6c03c1 ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000006c0d04 : jae 0x6c0d08 ; call rax
0x00000000006c0d54 : jae 0x6c0d58 ; call rax
0x00000000006c0da6 : jae 0x6c0daa ; call rax
0x00000000006c0df6 : jae 0x6c0dfa ; call rax
0x00000000006c0e44 : jae 0x6c0e48 ; call rax
0x00000000006c0e94 : jae 0x6c0e98 ; call rax
0x00000000006c0ee4 : jae 0x6c0ee8 ; call rax
0x00000000006c0f34 : jae 0x6c0f38 ; call rax
0x00000000006c0f84 : jae 0x6c0f88 ; call rax
0x00000000006c0fd4 : jae 0x6c0fd8 ; call rax
0x00000000006c1024 : jae 0x6c1028 ; call rax
0x00000000006c1074 : jae 0x6c1078 ; call rax
0x00000000006c10c4 : jae 0x6c10c8 ; call rax
0x00000000006c1114 : jae 0x6c1118 ; call rax
0x00000000006c1166 : jae 0x6c116a ; call rax
0x00000000006c11b6 : jae 0x6c11ba ; call rax
0x00000000006c1204 : jae 0x6c1208 ; call rax
0x00000000006c1254 : jae 0x6c1258 ; call rax
0x00000000006c12a4 : jae 0x6c12a8 ; call rax
0x00000000006c12f4 : jae 0x6c12f8 ; call rax
0x00000000006c134e : jae 0x6c1352 ; call rax
0x00000000006c1389 : jae 0x6c138d ; call rax
0x00000000006c13bc : jae 0x6c13c0 ; call rax
0x00000000006c13ec : jae 0x6c13f0 ; call rax
0x00000000006c141a : jae 0x6c141e ; call rax
0x00000000006c1448 : jae 0x6c144c ; call rax
0x00000000006c147a : jae 0x6c147e ; call rax
0x00000000006c14a9 : jae 0x6c14ad ; call rax
0x00000000006c14f1 : jae 0x6c14f5 ; call rax
0x00000000006c1529 : jae 0x6c152d ; call rax
0x00000000006c1559 : jae 0x6c155d ; call rax
0x00000000006c1589 : jae 0x6c158d ; call rax
0x00000000006c15ba : jae 0x6c15be ; call rax
0x00000000006c15e9 : jae 0x6c15ed ; call rax
0x00000000006c161c : jae 0x6c1620 ; call rax
0x00000000006c164c : jae 0x6c1650 ; call rax
0x00000000006c1679 : jae 0x6c167d ; call rax
0x00000000006c16a8 : jae 0x6c16ac ; call rax
0x00000000006c16d9 : jae 0x6c16dd ; call rax
0x00000000006c1708 : jae 0x6c170c ; call rax
0x00000000006c1798 : jae 0x6c179f ; mov rdi, rbx ; call rax
0x00000000006c186c : jae 0x6c1873 ; mov rdi, rbx ; call rax
0x00000000006c1a38 : jae 0x6c1a3f ; mov rdi, r13 ; call rax
0x00000000006c1a63 : jae 0x6c1a6a ; mov rdi, r13 ; call rax
0x00000000006c1bc3 : jae 0x6c1bca ; mov rdi, r14 ; call rcx
0x00000000006c1c4e : jae 0x6c1c56 ; mov rdi, r14 ; call r9
0x00000000006c1dc7 : jae 0x6c1dce ; mov rdi, rbx ; call rax
0x00000000006c1deb : jae 0x6c1def ; call rax
0x00000000006c1eb8 : jae 0x6c1ebf ; mov rdi, rbx ; call rax
0x00000000006c1f8c : jae 0x6c1f93 ; mov rdi, rbx ; call rax
0x00000000006c2158 : jae 0x6c215f ; mov rdi, r13 ; call rax
0x00000000006c2183 : jae 0x6c218a ; mov rdi, r13 ; call rax
0x00000000006c22e6 : jae 0x6c22ed ; mov rdi, rbp ; call rax
0x00000000006c237e : jae 0x6c2385 ; mov rdi, rbp ; call rcx
0x00000000006c2467 : jae 0x6c246e ; mov rdi, rbx ; call rax
0x00000000006c248b : jae 0x6c248f ; call rax
0x00000000006c2558 : jae 0x6c255f ; mov rdi, r15 ; call rax
0x00000000006c260c : jae 0x6c2616 ; mov rdi, r15 ; movsxd r13, r13d ; call rax
0x00000000006c27e8 : jae 0x6c27ef ; mov rdi, r13 ; call rax
0x00000000006c2813 : jae 0x6c281a ; mov rdi, r13 ; call rax
0x00000000006c2982 : jae 0x6c2989 ; mov rdi, r15 ; call rax
0x00000000006c29f2 : jae 0x6c29f9 ; mov rdi, r15 ; call rax
0x00000000006c2b75 : jae 0x6c2b7c ; mov rdi, rbx ; call rax
0x00000000006c2b98 : jae 0x6c2b9c ; call rax
0x00000000006c2c68 : jae 0x6c2c6f ; mov rdi, rbx ; call rax
0x00000000006c2d14 : jae 0x6c2d1b ; mov rdi, rbx ; call rax
0x00000000006c2ef8 : jae 0x6c2eff ; mov rdi, r13 ; call rax
0x00000000006c2f23 : jae 0x6c2f2a ; mov rdi, r13 ; call rax
0x00000000006c3083 : jae 0x6c308a ; mov rdi, r15 ; call rax
0x00000000006c30ef : jae 0x6c30f6 ; mov rdi, r15 ; call rax
0x00000000006c3245 : jae 0x6c324c ; mov rdi, rbx ; call rax
0x00000000006c3268 : jae 0x6c326c ; call rax
0x00000000006c3338 : jae 0x6c333f ; mov rdi, rbx ; call rax
0x00000000006c33dc : jae 0x6c33e3 ; mov rdi, rbx ; call rax
0x00000000006c35c8 : jae 0x6c35cf ; mov rdi, r13 ; call rax
0x00000000006c35f3 : jae 0x6c35fa ; mov rdi, r13 ; call rax
0x00000000006c3751 : jae 0x6c3758 ; mov rdi, r15 ; call rax
0x00000000006c37bf : jae 0x6c37c6 ; mov rdi, r15 ; call rax
0x00000000006c3905 : jae 0x6c390c ; mov rdi, rbx ; call rax
0x00000000006c3928 : jae 0x6c392c ; call rax
0x00000000006c4864 : jae 0x6c486c ; xor eax, eax ; call 0x680b1a
0x00000000006c6eca : jae 0x6c6ece ; ret
0x00000000006c6f4a : jae 0x6c6f4e ; ret
0x00000000006c8a95 : jae 0x6c8a99 ; ret
0x00000000006c9674 : jae 0x6c967c ; mov dword ptr [rax + 8], ebx ; pop rbx ; ret
0x00000000006ca87a : jae 0x6ca890 ; mov rdx, rax ; mov rax, rsi ; ret
0x00000000006cb5aa : jae 0x6cb5e8 ; add byte ptr [rbp - 0x3f6af025], al ; pop rbx ; ret
0x00000000006cbb79 : jae 0x6cbb7d ; ret
0x00000000006cc565 : jae 0x6cc56f ; mov dword ptr [rdi], 2 ; ret
0x00000000006cc575 : jae 0x6cc57f ; mov dword ptr [rdi], 0 ; ret
0x00000000006cc574 : jae 0x6cc580 ; mov dword ptr [rdi], 0 ; ret
0x00000000006cc585 : jae 0x6cc58f ; mov dword ptr [rdi], 0 ; ret
0x00000000006cc584 : jae 0x6cc590 ; mov dword ptr [rdi], 0 ; ret
0x00000000006d6e80 : jae 0x6d6ea2 ; jmp 0x6d6e52
0x000000000073de7d : jae 0x73de62 ; call qword ptr [rax]
0x000000000073de91 : jae 0x73de9d ; add al, al ; jp 0x73de7e ; call qword ptr [rax]
0x000000000073f0d5 : jae 0x73f0bc ; call rax
0x00000000007440e1 : jae 0x7440ef ; add byte ptr [rax], al ; js 0x7440da ; call rax
0x000000000074542d : jae 0x745420 ; call rax
0x000000000074d5d1 : jae 0x74d5a1 ; call rcx
0x000000000074d5d0 : jae 0x74d5a2 ; call rcx
0x0000000000755409 : jae 0x7553dc ; call qword ptr [rdx]
0x0000000000755449 : jae 0x75541c ; call qword ptr [rbx]
0x0000000000755489 : jae 0x75545c ; call qword ptr [rcx]
0x0000000000762701 : jae 0x7626d9 ; jmp rdi
0x0000000000773bc9 : jae 0x773ba8 ; jmp qword ptr [rdx]
0x0000000000773be1 : jae 0x773bc0 ; jmp qword ptr [rdx]
0x0000000000792a6d : jae 0x792a77 ; add dh, dl ; ret 0xffe3
0x0000000000792a6c : jae 0x792a78 ; add dh, dl ; ret 0xffe3
0x0000000000792ae5 : jae 0x792af1 ; add byte ptr [rbp + rax*8 - 0x1d], dh ; jmp qword ptr [rdx]
0x00000000007ad419 : jae 0x7ad42d ; ret
0x00000000007b2a3d : jae 0x7b2a4b ; add byte ptr [rax - 0x12], dl ; out dx, al ; jmp qword ptr [rcx]
0x00000000007b2a5d : jae 0x7b2a6b ; add byte ptr [rax - 0x12], ah ; out dx, al ; jmp qword ptr [rcx]
0x00000000007d302c : jae 0x7d3038 ; stosd dword ptr [rdi], eax ; add eax, dword ptr [rax] ; ret
0x0000000000413eaa : jb 0x413eff ; add cl, cl ; ret
0x00000000004994b7 : jb 0x4994df ; add cl, cl ; ret
0x00000000004b886e : jb 0x4b8893 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000004c3aaf : jb 0x4c3ad2 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000503a6a : jb 0x503a62 ; add byte ptr [r8 - 0x77], r9b ; fucompi st(0) ; retf 0x1d0c
0x0000000000504f6a : jb 0x504f4d ; add byte ptr [r8 - 0x77], r9b ; fucompi st(0) ; retf 0x1cf7
0x0000000000506ad2 : jb 0x506ae7 ; sub eax, edx ; add eax, 1 ; ret
0x00000000005081f2 : jb 0x508207 ; sub eax, edx ; add eax, 1 ; ret
0x000000000051d4d2 : jb 0x51d4f4 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000522ace : jb 0x522ae5 ; sete al ; ret
0x00000000005286fe : jb 0x528715 ; sete al ; ret
0x000000000052949e : jb 0x529454 ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x000000000052b918 : jb 0x52b921 ; add byte ptr [rax], al ; call rax
0x000000000052ee6a : jb 0x52eeae ; add byte ptr [r8 - 0x77], r9b ; fucompi st(0) ; retf 0x1a58
0x000000000053d4ad : jb 0x53d4cd ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005440ce : jb 0x5440e5 ; sete al ; ret
0x0000000000554d12 : jb 0x554d27 ; sub eax, edx ; add eax, 1 ; ret
0x0000000000556572 : jb 0x556587 ; sub eax, edx ; add eax, 1 ; ret
0x000000000055bfa0 : jb 0x55bfa6 ; call 0x6881f4
0x000000000055f005 : jb 0x55f032 ; ret
0x000000000055f965 : jb 0x55f992 ; ret
0x00000000005679be : jb 0x5679d5 ; sete al ; ret
0x0000000000572f6a : jb 0x572f6d ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf 0x1617
0x0000000000577332 : jb 0x57734d ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058a0d1 : jb 0x58a0e7 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058a0d0 : jb 0x58a0e8 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058d4de : jb 0x58d4f9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000059170e : jb 0x591725 ; sete al ; ret
0x00000000005973a5 : jb 0x5973be ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000597f6a : jb 0x597f1d ; add byte ptr [rax - 0x77], r9b ; fucompi st(0) ; retf 0x13c7
0x00000000005a2c6a : jb 0x5a2c70 ; add byte ptr [r8 - 0x77], r9b ; fucompi st(0) ; retf 0x131a
0x00000000005a943f : jb 0x5a9453 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a9ffe : jb 0x5aa015 ; sete al ; ret
0x00000000005b999a : jb 0x5b99ad ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e885c : jb 0x5e886e ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000005e885b : jb 0x5e886f ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000005eb6dc : jb 0x5eb725 ; add bh, bh ; ror cl, 1 ; ret
0x00000000005fd26a : jb 0x5fd2ca ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf 0xd74
0x0000000000611ce1 : jb 0x611ce8 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000061b622 : jb 0x61b668 ; add bh, bh ; ror cl, 1 ; ret
0x0000000000625a42 : jb 0x625a57 ; sub eax, edx ; add eax, 1 ; ret
0x0000000000627282 : jb 0x627297 ; sub eax, edx ; add eax, 1 ; ret
0x000000000065e243 : jb 0x65e247 ; ret
0x000000000065e26f : jb 0x65e273 ; ret
0x00000000006642c3 : jb 0x6642c7 ; ret
0x000000000066bbdf : jb 0x66bbe3 ; ret
0x000000000066bbde : jb 0x66bbe4 ; ret
0x000000000066c039 : jb 0x66c03f ; jne 0x66c01c ; ret
0x000000000066c038 : jb 0x66c040 ; jne 0x66c01d ; ret
0x0000000000674019 : jb 0x67401f ; jne 0x673ffc ; ret
0x00000000006740b8 : jb 0x6740bc ; ret
0x000000000067440f : jb 0x67441a ; mov edi, 0xa029c0 ; call 0x68066f
0x000000000067443a : jb 0x674445 ; mov edi, 0xa029c0 ; call 0x68066f
0x00000000006783e8 : jb 0x6783f0 ; setne al ; ret
0x00000000006783f9 : jb 0x678403 ; shr al, 3 ; and eax, 1 ; ret
0x0000000000678429 : jb 0x678430 ; and eax, 1 ; ret
0x0000000000678448 : jb 0x678450 ; setne al ; ret
0x0000000000678459 : jb 0x678463 ; shr al, 4 ; and eax, 1 ; ret
0x00000000006784d9 : jb 0x6784e0 ; shr al, 7 ; ret
0x00000000006784e9 : jb 0x6784f2 ; shr al, 1 ; and eax, 1 ; ret
0x0000000000678549 : jb 0x678553 ; shr al, 6 ; and eax, 1 ; ret
0x00000000006785b9 : jb 0x6785c3 ; shr al, 2 ; and eax, 1 ; ret
0x00000000006785d9 : jb 0x6785dd ; ret
0x0000000000678617 : jb 0x678621 ; mov byte ptr [rdi + rcx], sil ; jne 0x678608 ; ret
0x00000000006787b9 : jb 0x6787bd ; ret
0x00000000006787f7 : jb 0x678801 ; mov byte ptr [rdi + rcx], sil ; jne 0x6787e8 ; ret
0x0000000000678999 : jb 0x67899d ; ret
0x00000000006789d7 : jb 0x6789e1 ; mov byte ptr [rdi + rcx], sil ; jne 0x6789c8 ; ret
0x0000000000678dbb : jb 0x678dbf ; ret
0x0000000000678e2a : jb 0x678e31 ; mov rdi, rbx ; call rax
0x0000000000678f31 : jb 0x678f38 ; mov rdi, rbx ; call rax
0x000000000067e68d : jb 0x67e6ba ; ret
0x00000000006819fa : jb 0x6819fe ; ret
0x0000000000681a3a : jb 0x681a3e ; ret
0x0000000000685f0a : jb 0x685f0e ; ret
0x000000000068904a : jb 0x689051 ; mov rdi, rbx ; call rax
0x0000000000689941 : jb 0x689948 ; mov rdi, rbx ; call rax
0x0000000000689b7a : jb 0x689b84 ; xor eax, eax ; add rsp, 8 ; ret
0x000000000069fa31 : jb 0x69faac ; in al, 0x5b ; ret
0x000000000069fc42 : jb 0x69fcbd ; jrcxz 0x69fca5 ; ret
0x00000000006a096e : jb 0x6a0979 ; mov rax, rdi ; ret
0x00000000006a1b41 : jb 0x6a1b5d ; mov eax, 0xffffffff ; ret
0x00000000006a5f7a : jb 0x6a5f7e ; ret
0x00000000006a8c6a : jb 0x6a8c6e ; ret
0x00000000006af5e5 : jb 0x6af5ed ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006b234a : jb 0x6b234e ; ret
0x00000000006b37aa : jb 0x6b37b1 ; mov rdi, rbx ; call rax
0x00000000006b4f91 : jb 0x6b4f98 ; mov rdi, rbx ; call rax
0x00000000006b5084 : jb 0x6b504e ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000006b507f : jb 0x6b5087 ; xor eax, eax ; call 0x681300
0x00000000006bb743 : jb 0x6bb749 ; call 0x6881f4
0x00000000006bd352 : jb 0x6bd35c ; test byte ptr [rdi + rsi], al ; setne al ; ret
0x00000000006be43d : jb 0x6be447 ; movzx eax, al ; or byte ptr [rdi + rax], dl ; ret
0x00000000006cb3df : jb 0x6cb3fb ; add rsp, 8 ; ret
0x00000000006cddb5 : jb 0x6cddc1 ; ret
0x0000000000722cff : jb 0x722d07 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x376a
0x0000000000735294 : jb 0x7352e3 ; iretd ; jmp qword ptr [rax]
0x0000000000737785 : jb 0x73775c ; jmp qword ptr [rax]
0x0000000000737784 : jb 0x73775d ; jmp qword ptr [rax]
0x000000000073aa19 : jb 0x73aa24 ; add al, ah ; or ebx, ebp ; call rax
0x000000000074485d : jb 0x74484f ; call qword ptr [rax]
0x00000000007470a1 : jb 0x7470b0 ; add al, al ; push rdx ; hlt ; jmp rax
0x00000000007470b1 : jb 0x7470c0 ; add byte ptr [rax + 0x53], al ; hlt ; call qword ptr [rax]
0x000000000074947d : jb 0x749478 ; jmp rax
0x000000000074948d : jb 0x749488 ; call qword ptr [rax]
0x000000000074a839 : jb 0x74a849 ; add byte ptr [rax], dh ; xor al, 0xf9 ; jmp qword ptr [rax]
0x00000000007529f1 : jb 0x7529c3 ; jmp rbx
0x00000000007626b9 : jb 0x762691 ; call rdi
0x00000000007629e5 : jb 0x7629ee ; add byte ptr [rcx + rbx*4 - 0x2c], bl ; jmp rax
0x0000000000769001 : jb 0x768fdd ; jmp qword ptr [rbx]
0x0000000000788811 : jb 0x7887f5 ; call qword ptr [rbx]
0x00000000007a2975 : jb 0x7a2982 ; add byte ptr [rax], ch ; or ecx, ebp ; call qword ptr [rsi]
0x00000000007a29ad : jb 0x7a29ba ; add byte ptr [rax], dl ; or ch, cl ; call qword ptr [rsi]
0x00000000007a29ac : jb 0x7a29bb ; add byte ptr [rax], dl ; or ch, cl ; call qword ptr [rsi]
0x00000000007b2935 : jb 0x7b2943 ; add byte ptr [rax - 0x12], bh ; out dx, al ; jmp qword ptr [rcx]
0x00000000007d341c : jb 0x7d33db ; and al, byte ptr [rax] ; retf
0x00000000007e901c : jb 0x7e9025 ; retf 0x703
0x00000000007e9084 : jb 0x7e908d ; retf 0x703
0x0000000000404ac6 : jbe 0x404acc ; sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040e56a : jbe 0x40e5bc ; mov eax, dword ptr [rip + 0x5f42f6] ; call rax
0x000000000040eb9a : jbe 0x40ebec ; mov eax, dword ptr [rip + 0x5f3cc6] ; call rax
0x000000000041e082 : jbe 0x41e0d4 ; mov eax, dword ptr [rip + 0x5e47de] ; call rax
0x000000000041e6b2 : jbe 0x41e704 ; mov eax, dword ptr [rip + 0x5e41ae] ; call rax
0x000000000042d050 : jbe 0x42d0a2 ; mov eax, dword ptr [rip + 0x5d5810] ; call rax
0x000000000042d680 : jbe 0x42d6d2 ; mov eax, dword ptr [rip + 0x5d51e0] ; call rax
0x0000000000435504 : jbe 0x4354cc ; test eax, 0xbf000000 ; scasb al, byte ptr [rdi] ; ret 0x6d
0x0000000000437217 : jbe 0x437245 ; add cl, cl ; ret
0x000000000043723a : jbe 0x437268 ; add cl, cl ; ret
0x0000000000441f14 : jbe 0x441f66 ; mov eax, dword ptr [rip + 0x5c094c] ; call rax
0x000000000044c42e : jbe 0x44c480 ; mov eax, dword ptr [rip + 0x5b6432] ; call rax
0x000000000045d044 : jbe 0x45d096 ; mov eax, dword ptr [rip + 0x5a581c] ; call rax
0x000000000046555e : jbe 0x4655b0 ; mov eax, dword ptr [rip + 0x59d302] ; call rax
0x000000000046f25e : jbe 0x46f2b0 ; mov eax, dword ptr [rip + 0x593602] ; call rax
0x00000000004782ee : jbe 0x4782f6 ; add byte ptr [rax], al ; leave ; ret
0x0000000000492956 : jbe 0x49293a ; and al, byte ptr [rax] ; leave ; ret
0x0000000000499556 : jbe 0x4995ce ; and al, byte ptr [rax] ; leave ; ret
0x000000000049f670 : jbe 0x49f6c2 ; mov eax, dword ptr [rip + 0x5631f0] ; call rax
0x00000000004a6f25 : jbe 0x4a6f4d ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004a6f5b : jbe 0x4a6f83 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004b9588 : jbe 0x4b955a ; cli ; dec ecx ; ret
0x00000000004c92b8 : jbe 0x4c92dd ; add cl, cl ; ret
0x00000000004d8fd3 : jbe 0x4d8ff7 ; add cl, cl ; ret
0x00000000004dc13e : jbe 0x4dc13d ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004ec501 : jbe 0x4ec4c9 ; leave ; adc eax, 0x8fbf0000 ; ret 0x6e
0x00000000004ec631 : jbe 0x4ec5f9 ; ficom word ptr [rip - 0x70410000] ; ret 0x6e
0x00000000004f952d : jbe 0x4f954c ; add byte ptr [rax - 0x77], cl ; ret
0x000000000051ed21 : jbe 0x51ed9a ; add byte ptr [rax - 0x77], cl ; sbb r8b, bpl ; ret
0x000000000053650e : jbe 0x536583 ; add al, ch ; retf 0x1596
0x000000000053a66e : jbe 0x53a5fa ; add bl, r13b ; ror byte ptr [rax - 0x77], 1 ; ret
0x000000000053d0ab : jbe 0x53d0cb ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054d0ed : jbe 0x54d10c ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054ed66 : jbe 0x54eda8 ; add r8b, bpl ; ret
0x000000000056847d : jbe 0x568495 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000056848a : jbe 0x5684a5 ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; stosd dword ptr [rdi], eax ; ret 0x16
0x000000000056d7ff : jbe 0x56d7ef ; dec dword ptr [rax - 0x77] ; ret
0x000000000056d7fe : jbe 0x56d7f0 ; dec dword ptr [rax - 0x77] ; ret
0x000000000057851e : jbe 0x578538 ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x6d4748
0x0000000000589c21 : jbe 0x589c37 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058d059 : jbe 0x58d074 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005984a5 : jbe 0x5984bd ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; nop ; ret 0x13
0x00000000005984ba : jbe 0x5984d2 ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x6d4748
0x000000000059851f : jbe 0x598534 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000059851e : jbe 0x598535 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a8520 : jbe 0x5a8537 ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x6d4748
0x00000000005c94b8 : jbe 0x5c94ca ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005d39be : jbe 0x5d3a10 ; mov eax, dword ptr [rip + 0x42eea2] ; call rax
0x00000000005d405e : jbe 0x5d40b0 ; mov eax, dword ptr [rip + 0x42e802] ; call rax
0x00000000005e0864 : jbe 0x5e08b6 ; mov eax, dword ptr [rip + 0x421ffc] ; call rax
0x00000000005e0f04 : jbe 0x5e0f56 ; mov eax, dword ptr [rip + 0x42195c] ; call rax
0x00000000005f6f1e : jbe 0x5f6f31 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005f8516 : jbe 0x5f8525 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005fbab4 : jbe 0x5fba5b ; add al, ch ; retf
0x00000000005fc5f3 : jbe 0x5fc66b ; add al, ch ; xchg eax, ebp ; retf 0xa
0x00000000005fd125 : jbe 0x5fd139 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000612e9c : jbe 0x612ea3 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000006182b0 : jbe 0x618302 ; mov eax, dword ptr [rip + 0x3ea5b0] ; call rax
0x000000000061894c : jbe 0x61899e ; mov eax, dword ptr [rip + 0x3e9f14] ; call rax
0x00000000006390ca : jbe 0x6390d5 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000063c0d6 : jbe 0x63c07e ; call 0xffffffffc3ed09e2
0x00000000006a1c03 : jbe 0x6a1c1d ; mov eax, 1 ; ret
0x00000000006a4fb8 : jbe 0x6a4fc6 ; movapd xmm0, xmm2 ; ret
0x00000000006a51b1 : jbe 0x6a51c6 ; add rsp, 0x18 ; ret
0x00000000006a5241 : jbe 0x6a5256 ; add rsp, 0x18 ; ret
0x00000000006a52d5 : jbe 0x6a5317 ; add rsp, 0x18 ; ret
0x00000000006a5b26 : jbe 0x6a5b36 ; fstp st(0) ; fstp st(1) ; ret
0x00000000006aaacc : jbe 0x6aaad2 ; ret
0x00000000006aaac6 : jbe 0x6aaae8 ; cmp sil, 3 ; jbe 0x6aaad8 ; ret
0x00000000006bdac6 : jbe 0x6bdad2 ; ret
0x00000000006c8880 : jbe 0x6c8a96 ; ret
0x00000000006c9046 : jbe 0x6c9048 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000722212 : jbe 0x72222c ; push gs ; retf -0x1e54
0x000000000072248a : jbe 0x72250c ; salc ; out dx, al ; retf 0x6fc4
0x0000000000723211 : jbe 0x7231e6 ; push 0xac ; retf 0xfa8
0x0000000000723489 : jbe 0x723418 ; mov bl, 0xc4 ; retf -0x2912
0x0000000000735bbd : jbe 0x735b91 ; jmp rax
0x0000000000735bcd : jbe 0x735ba1 ; jmp qword ptr [rax]
0x00000000007362c5 : jbe 0x73629a ; jmp rax
0x00000000007362c4 : jbe 0x73629b ; jmp rax
0x0000000000737781 : jbe 0x73778b ; add byte ptr [rsi], ah ; jb 0x737760 ; jmp qword ptr [rax]
0x0000000000739584 : jbe 0x7395c9 ; fdivr st(7) ; sub byte ptr [rdi], al ; add eax, dword ptr [rax] ; retf -0x27c5
0x000000000073ab21 : jbe 0x73ab2c ; add al, dh ; adc al, 0xdd ; jmp rax
0x000000000073c69d : jbe 0x73c680 ; jmp qword ptr [rax]
0x000000000073f125 : jbe 0x73f10c ; call qword ptr [rax]
0x0000000000743c05 : jbe 0x743bf5 ; call rax
0x00000000007441b1 : jbe 0x7441bf ; add al, ah ; mov ebp, ebp ; call qword ptr [rax]
0x000000000074a961 : jbe 0x74a971 ; add byte ptr [rax + 0x48], dh ; stc ; call rax
0x000000000074d709 : jbe 0x74d6d9 ; call rdx
0x0000000000755541 : jbe 0x755514 ; call rsp
0x0000000000777619 : jbe 0x7775f9 ; jmp qword ptr [rax]
0x0000000000791fb1 : jbe 0x791f98 ; jmp rsi
0x000000000079fee1 : jbe 0x79fecd ; call qword ptr [rax]
0x00000000007fa4a2 : jbe 0x7fa4b7 ; fsub dword ptr [rbp] ; ret
0x00000000007fa73f : jbe 0x7fa743 ; retf
0x00000000007fa87a : jbe 0x7fa87e ; retf 0x194
0x0000000000408a6d : je 0x408a88 ; pop rbp ; mov edi, 0xa02ca8 ; jmp rax
0x0000000000408abb : je 0x408ad0 ; pop rbp ; mov edi, 0xa02ca8 ; jmp rax
0x0000000000408b08 : je 0x408b01 ; push rbp ; mov rbp, rsp ; call rax
0x000000000040e569 : je 0x40e5ea ; mov rax, qword ptr [rip + 0x5f42f6] ; call rax
0x000000000040eb99 : je 0x40ec1a ; mov rax, qword ptr [rip + 0x5f3cc6] ; call rax
0x000000000041e081 : je 0x41e102 ; mov rax, qword ptr [rip + 0x5e47de] ; call rax
0x000000000041e6b1 : je 0x41e732 ; mov rax, qword ptr [rip + 0x5e41ae] ; call rax
0x000000000041f2ee : je 0x41f2fe ; add byte ptr es:[rax - 0x77], cl ; ret
0x000000000041f338 : je 0x41f334 ; sub dword ptr [rax], eax ; leave ; ret
0x00000000004293d2 : je 0x429400 ; add byte ptr [rax - 0x77], cl ; ret 0x858b
0x00000000004293d1 : je 0x429401 ; add byte ptr [rax - 0x77], cl ; ret 0x858b
0x000000000042d04f : je 0x42d0d0 ; mov rax, qword ptr [rip + 0x5d5810] ; call rax
0x000000000042d67f : je 0x42d700 ; mov rax, qword ptr [rip + 0x5d51e0] ; call rax
0x000000000043c198 : je 0x43c1a7 ; add dword ptr [rbp - 4], 1 ; jmp 0x43c16a
0x0000000000441f13 : je 0x441f94 ; mov rax, qword ptr [rip + 0x5c094c] ; call rax
0x000000000044787a : je 0x447889 ; add dword ptr [rbp - 4], 1 ; jmp 0x44784c
0x00000000004484ea : je 0x4484fb ; mov rdi, rax ; call 0x6d4747
0x000000000044c42d : je 0x44c4ae ; mov rax, qword ptr [rip + 0x5b6432] ; call rax
0x000000000045852e : je 0x45853d ; add dword ptr [rbp - 4], 1 ; jmp 0x458500
0x000000000045d043 : je 0x45d0c4 ; mov rax, qword ptr [rip + 0x5a581c] ; call rax
0x000000000045f658 : je 0x45f66f ; add cl, cl ; ret
0x0000000000461328 : je 0x461337 ; add dword ptr [rbp - 4], 1 ; jmp 0x4612fa
0x0000000000463438 : je 0x463463 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046555d : je 0x4655de ; mov rax, qword ptr [rip + 0x59d302] ; call rax
0x000000000046b028 : je 0x46b037 ; add dword ptr [rbp - 4], 1 ; jmp 0x46affa
0x000000000046f25d : je 0x46f2de ; mov rax, qword ptr [rip + 0x593602] ; call rax
0x0000000000477e20 : je 0x477e48 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004791ca : je 0x4791d9 ; add dword ptr [rbp - 0x14], 1 ; jmp 0x47919c
0x000000000047d151 : je 0x47d1d3 ; mov rax, qword ptr [rip + 0x58570e] ; call rax
0x000000000049b3a4 : je 0x49b3b3 ; add dword ptr [rbp - 4], 1 ; jmp 0x49b376
0x000000000049f66f : je 0x49f6f0 ; mov rax, qword ptr [rip + 0x5631f0] ; call rax
0x00000000004bb91a : je 0x4bb927 ; add ebx, 1 ; jmp 0x4bb8ea
0x00000000004bba3e : je 0x4bba4b ; sub ebx, 1 ; jmp 0x4bba0e
0x00000000004c94e8 : je 0x4c950d ; add cl, cl ; ret
0x00000000004d391d : je 0x4d393f ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004d7cbd : je 0x4d7cce ; mov rdi, rax ; call 0x6d4747
0x00000000004d7d21 : je 0x4d7d32 ; mov rdi, rax ; call 0x6d4747
0x00000000004e1b44 : je 0x4e1b89 ; mov edi, 0x10 ; call 0x6be5d9
0x00000000004e84a2 : je 0x4e84b3 ; mov rdi, rax ; call 0x6d4747
0x00000000004f11ce : je 0x4f11dd ; add dword ptr [rbp - 0x34], 1 ; jmp 0x4f11a0
0x00000000004f45a7 : je 0x4f45b8 ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004f7c6b : je 0x4f7c78 ; mov byte ptr [rdx + 4], 1 ; ret
0x00000000005018d5 : je 0x5018e2 ; ret
0x0000000000503386 : je 0x5033b1 ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000503a83 : je 0x503a95 ; mov qword ptr [rdi], 0x6ee5a0 ; ret
0x0000000000504343 : je 0x504350 ; movzx eax, byte ptr [rdi + 8] ; ret
0x0000000000504673 : je 0x504685 ; mov qword ptr [rdi], 0x6ee7a0 ; ret
0x0000000000505467 : je 0x505492 ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000506b20 : je 0x506b15 ; mov rax, rdi ; ret
0x0000000000506b70 : je 0x506b62 ; ret
0x0000000000506c97 : je 0x506ca5 ; lock sub dword ptr [rax + 0x24], 1 ; ret
0x0000000000506ca7 : je 0x506cb5 ; lock sub dword ptr [rax + 0x24], 1 ; ret
0x0000000000506cb7 : je 0x506cc5 ; lock sub dword ptr [rax + 0x24], 1 ; ret
0x0000000000506fc3 : je 0x506fd2 ; lock sub dword ptr [rax + 0x24], 1 ; pop rbx ; ret
0x0000000000507010 : je 0x507003 ; pop rbx ; ret
0x00000000005070f8 : je 0x507104 ; xor eax, eax ; ret
0x00000000005083d5 : je 0x5083c3 ; pop rbx ; ret
0x0000000000508408 : je 0x508421 ; mov rax, rbx ; mov rdx, rcx ; pop rbx ; ret
0x000000000050848d : je 0x5084a9 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005085f0 : je 0x5085e2 ; ret
0x00000000005086e7 : je 0x5086f2 ; ret
0x000000000050920c : je 0x509237 ; ret
0x00000000005092d0 : je 0x5092f8 ; xor eax, eax ; add rsp, 8 ; ret
0x00000000005093cd : je 0x5093f8 ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000509496 : je 0x5094cc ; add rsp, 8 ; ret
0x000000000050a773 : je 0x50a780 ; add rsp, 0x38 ; ret
0x000000000050abdd : je 0x50abee ; mov rax, rbx ; pop rbx ; ret
0x000000000050ac2d : je 0x50ac46 ; mov rax, rbx ; pop rbx ; ret
0x000000000050f7df : je 0x50f7f8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000050f9d7 : je 0x50f9ea ; movzx eax, byte ptr [rax + 0xd8] ; ret
0x000000000050fd27 : je 0x50fd36 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000510015 : je 0x510022 ; ret
0x00000000005134e9 : je 0x5134f4 ; movzx eax, byte ptr [rax] ; ret
0x0000000000513d9d : je 0x513d34 ; push rax ; add dword ptr [rax + 0x69], ecx ; rol byte ptr [rax], cl ; retf 0x3b9a
0x0000000000518307 : je 0x518315 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x0000000000518317 : je 0x518325 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x0000000000518327 : je 0x518335 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x00000000005183a7 : je 0x5183b5 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x00000000005183b7 : je 0x5183c5 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x00000000005183c7 : je 0x5183d5 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x0000000000519063 : je 0x519072 ; lock sub dword ptr [rax + 0x2c], 1 ; pop rbx ; ret
0x00000000005190a3 : je 0x5190b2 ; lock sub dword ptr [rax + 0x2c], 1 ; pop rbx ; ret
0x00000000005190c7 : je 0x5190d3 ; pop rbx ; ret
0x00000000005190f7 : je 0x519103 ; pop rbx ; ret
0x0000000000519125 : je 0x519135 ; mov edx, edx ; pop rbx ; ret
0x0000000000519165 : je 0x519175 ; mov edx, edx ; pop rbx ; ret
0x00000000005191a7 : je 0x5191b3 ; pop rbx ; ret
0x00000000005191d7 : je 0x5191e3 ; pop rbx ; ret
0x0000000000519678 : je 0x519684 ; xor eax, eax ; ret
0x00000000005197f8 : je 0x519804 ; xor eax, eax ; ret
0x0000000000519847 : je 0x51985a ; mov rax, qword ptr [rax + 0x30] ; mov rax, qword ptr [rax] ; ret
0x0000000000519877 : je 0x51988a ; mov rax, qword ptr [rax + 0x30] ; mov rax, qword ptr [rax] ; ret
0x00000000005198a7 : je 0x5198b4 ; mov rax, qword ptr [rax + 0x28] ; ret
0x00000000005198d7 : je 0x5198e4 ; mov rax, qword ptr [rax + 0x20] ; ret
0x0000000000519907 : je 0x519914 ; mov rax, qword ptr [rax + 0x28] ; ret
0x0000000000519937 : je 0x519944 ; mov rax, qword ptr [rax + 0x20] ; ret
0x000000000051a67c : je 0x51a6aa ; adc byte ptr [rax + 0x63], cl ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000051aefb : je 0x51af02 ; ret
0x000000000051af1b : je 0x51af22 ; ret
0x000000000051af3b : je 0x51af42 ; ret
0x000000000051af5b : je 0x51af62 ; ret
0x00000000005210a6 : je 0x5210b4 ; xor eax, eax ; ret
0x00000000005218e5 : je 0x5218f4 ; xor eax, eax ; ret
0x0000000000522a89 : je 0x522a94 ; xor eax, eax ; ret
0x0000000000522b01 : je 0x522aaf ; ret
0x0000000000522aca : je 0x522ae1 ; cmp rsi, qword ptr [rdx + 0x10] ; sete al ; ret
0x0000000000522b46 : je 0x522b54 ; xor eax, eax ; ret
0x0000000000523d10 : je 0x523d37 ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x0000000000524fc3 : je 0x524fd0 ; add rsp, 0x38 ; ret
0x0000000000525988 : je 0x525992 ; ret
0x0000000000526b4e : je 0x526b53 ; ret
0x0000000000526b73 : je 0x526b88 ; cmp dword ptr [rdi + 0x10], esi ; setge al ; ret
0x0000000000526f45 : je 0x526f57 ; cmp dword ptr [rdi + 0x10], esi ; jl 0x526f57 ; ret
0x0000000000526ffd : je 0x526fcb ; adc byte ptr [rax - 0x77], cl ; ret 0x6348
0x00000000005280d0 : je 0x5280dd ; add rsp, 0x28 ; ret
0x00000000005286b9 : je 0x5286c4 ; xor eax, eax ; ret
0x0000000000528731 : je 0x5286df ; ret
0x00000000005286fa : je 0x528711 ; cmp rsi, qword ptr [rdx + 0x10] ; sete al ; ret
0x0000000000528776 : je 0x528784 ; xor eax, eax ; ret
0x0000000000529218 : je 0x529230 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000052afa3 : je 0x52afb6 ; cmp qword ptr [rsi + 0x20], rdx ; setl al ; ret
0x000000000052afd3 : je 0x52afe6 ; cmp rdi, qword ptr [rdx + 0x20] ; setl al ; ret
0x000000000052b053 : je 0x52b066 ; cmp rdx, qword ptr [rsi + 0x20] ; setl al ; ret
0x000000000052b083 : je 0x52b096 ; cmp qword ptr [rdx + 0x20], rdi ; setl al ; ret
0x000000000052b103 : je 0x52b110 ; mov rax, qword ptr [rsi + 0x28] ; ret
0x000000000052b168 : je 0x52b172 ; ret
0x000000000052b18e : je 0x52b19e ; add rsp, 8 ; ret
0x000000000052b1f3 : je 0x52b200 ; mov rax, qword ptr [rsi + 0x20] ; ret
0x000000000052b490 : je 0x52b4e4 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000536dd3 : je 0x536de5 ; mov qword ptr [rdi], 0x6f9020 ; ret
0x00000000005382e1 : je 0x53830c ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000539273 : je 0x539285 ; mov qword ptr [rdi], 0x6f9660 ; ret
0x000000000053adbe : je 0x53ae04 ; xor eax, eax ; ret
0x000000000053d339 : je 0x53d359 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000053da3e : je 0x53da5e ; test al, 1 ; jne 0x53da51 ; call rax
0x000000000053e486 : je 0x53e494 ; xor eax, eax ; ret
0x000000000053f5fd : je 0x53f618 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000053f727 : je 0x53f735 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x000000000053f737 : je 0x53f745 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x000000000053f747 : je 0x53f755 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x000000000053f933 : je 0x53f942 ; lock sub dword ptr [rax + 0x2c], 1 ; pop rbx ; ret
0x000000000053f9b7 : je 0x53f9c3 ; pop rbx ; ret
0x000000000053f9e7 : je 0x53f9f3 ; pop rbx ; ret
0x000000000053fa07 : je 0x53fa12 ; mov eax, dword ptr [rax + 0x1c] ; ret
0x000000000053fa37 : je 0x53fa42 ; mov eax, dword ptr [rax + 0x1c] ; ret
0x000000000053fc98 : je 0x53fca4 ; xor eax, eax ; ret
0x000000000053fceb : je 0x53fcf2 ; ret
0x000000000053fd0b : je 0x53fd12 ; ret
0x0000000000540fe4 : je 0x541006 ; add rsp, 8 ; ret
0x00000000005429c5 : je 0x5429d4 ; xor eax, eax ; ret
0x0000000000543a5f : je 0x543a6c ; add rsp, 0x28 ; ret
0x0000000000544089 : je 0x544094 ; xor eax, eax ; ret
0x0000000000544101 : je 0x5440af ; ret
0x00000000005440ca : je 0x5440e1 ; cmp rsi, qword ptr [rdx + 0x10] ; sete al ; ret
0x0000000000544146 : je 0x544154 ; xor eax, eax ; ret
0x0000000000544bc3 : je 0x544bd4 ; cmp dword ptr [rsi + 0x1c], edx ; setl al ; ret
0x0000000000544bf3 : je 0x544c04 ; cmp edi, dword ptr [rdx + 0x1c] ; setl al ; ret
0x0000000000544c73 : je 0x544c84 ; cmp edx, dword ptr [rsi + 0x1c] ; setl al ; ret
0x0000000000544ca3 : je 0x544cb4 ; cmp dword ptr [rdx + 0x1c], edi ; setl al ; ret
0x0000000000544e28 : je 0x544e32 ; ret
0x0000000000544e46 : je 0x544e54 ; xor eax, eax ; ret
0x0000000000544e83 : je 0x544e8e ; mov eax, dword ptr [rsi + 0x1c] ; ret
0x0000000000547876 : je 0x547883 ; pop rbx ; ret
0x0000000000547c58 : je 0x547ce0 ; adc al, 0 ; nop dword ptr [rax] ; ret
0x0000000000547f18 : je 0x547f27 ; mov eax, 1 ; ret
0x00000000005482e7 : je 0x5482f3 ; pop rbx ; ret
0x0000000000548377 : je 0x548383 ; pop rbx ; ret
0x000000000054a227 : je 0x54a235 ; lock sub dword ptr [rax + 0x1c], 1 ; ret
0x000000000054a237 : je 0x54a245 ; lock sub dword ptr [rax + 0x1c], 1 ; ret
0x000000000054a247 : je 0x54a255 ; lock sub dword ptr [rax + 0x1c], 1 ; ret
0x000000000054a773 : je 0x54a782 ; lock sub dword ptr [rax + 0x1c], 1 ; pop rbx ; ret
0x000000000054a827 : je 0x54a833 ; pop rbx ; ret
0x000000000054a867 : je 0x54a873 ; pop rbx ; ret
0x000000000054a8b7 : je 0x54a8c2 ; mov rax, qword ptr [rax] ; ret
0x000000000054a8d7 : je 0x54a8e2 ; mov rax, qword ptr [rax] ; ret
0x000000000054b70b : je 0x54b712 ; ret
0x000000000054b72b : je 0x54b732 ; ret
0x000000000054ceb5 : je 0x54cec8 ; mov eax, ecx ; add rsp, 8 ; ret
0x000000000054d6b6 : je 0x54d6c4 ; xor eax, eax ; ret
0x000000000054db23 : je 0x54db2e ; mov rax, qword ptr [rsi] ; ret
0x000000000054e12c : je 0x54e13d ; mov rax, rdi ; ret
0x000000000054e17c : je 0x54e18d ; mov rax, rdi ; ret
0x000000000054e812 : je 0x54e824 ; xor eax, eax ; ret
0x0000000000551186 : je 0x5511f4 ; outsb dx, byte ptr [rsi] ; and byte ptr [rdi + rcx], dh ; ret 0x8d48
0x0000000000554389 : je 0x554396 ; add rsp, 8 ; ret
0x0000000000554d60 : je 0x554d55 ; mov rax, rdi ; ret
0x0000000000554db0 : je 0x554da2 ; ret
0x0000000000554ed7 : je 0x554ee5 ; lock sub dword ptr [rax + 0x24], 1 ; ret
0x0000000000554ee7 : je 0x554ef5 ; lock sub dword ptr [rax + 0x24], 1 ; ret
0x0000000000554ef7 : je 0x554f05 ; lock sub dword ptr [rax + 0x24], 1 ; ret
0x0000000000555243 : je 0x555252 ; lock sub dword ptr [rax + 0x24], 1 ; pop rbx ; ret
0x0000000000555290 : je 0x555283 ; pop rbx ; ret
0x0000000000555378 : je 0x555384 ; xor eax, eax ; ret
0x0000000000556755 : je 0x556743 ; pop rbx ; ret
0x0000000000556788 : je 0x5567a1 ; mov rax, rbx ; mov rdx, rcx ; pop rbx ; ret
0x000000000055680d : je 0x556829 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000556970 : je 0x556962 ; ret
0x0000000000556a67 : je 0x556a72 ; ret
0x00000000005578dd : je 0x5578ee ; mov rax, rbx ; pop rbx ; ret
0x000000000055792d : je 0x557946 ; mov rax, rbx ; pop rbx ; ret
0x00000000005584d4 : je 0x5584ff ; call 0x6d4744
0x000000000055920f : je 0x559228 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000559db3 : je 0x559dde ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000055b086 : je 0x55b093 ; add rsp, 0x38 ; ret
0x000000000055ba43 : je 0x55ba6e ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000055bc43 : je 0x55bc6e ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000055be43 : je 0x55be6e ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000055c043 : je 0x55c06e ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000055c38e : je 0x55c3b9 ; and byte ptr [rax - 0x77], cl ; ret
0x000000000055c5b3 : je 0x55c5de ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000055eab5 : je 0x55eac4 ; xor eax, eax ; ret
0x0000000000562f87 : je 0x562f95 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x0000000000562f97 : je 0x562fa5 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x0000000000562fa7 : je 0x562fb5 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x0000000000563283 : je 0x563292 ; lock sub dword ptr [rax + 0x2c], 1 ; pop rbx ; ret
0x00000000005632b5 : je 0x5632c2 ; ret
0x00000000005636f5 : je 0x563720 ; cmp byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000056380e : je 0x563839 ; or byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000005639b7 : je 0x5639c3 ; pop rbx ; ret
0x00000000005639e7 : je 0x5639f3 ; pop rbx ; ret
0x0000000000563b38 : je 0x563b44 ; xor eax, eax ; ret
0x0000000000563b87 : je 0x563b98 ; mov rax, qword ptr [rax + 0x30] ; mov eax, dword ptr [rax] ; ret
0x0000000000563bb7 : je 0x563bc8 ; mov rax, qword ptr [rax + 0x30] ; mov eax, dword ptr [rax] ; ret
0x0000000000563deb : je 0x563df2 ; ret
0x0000000000563e0b : je 0x563e12 ; ret
0x00000000005652ef : je 0x56531a ; sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000567979 : je 0x567984 ; xor eax, eax ; ret
0x00000000005679f1 : je 0x56799f ; ret
0x00000000005679ba : je 0x5679d1 ; cmp rsi, qword ptr [rdx + 0x10] ; sete al ; ret
0x0000000000567a36 : je 0x567a44 ; xor eax, eax ; ret
0x0000000000567c5d : je 0x567c7d ; call 0x6d4744
0x0000000000567c6e : je 0x567c95 ; call 0x6d4744
0x0000000000567cfb : je 0x567d3d ; call 0x6d4744
0x0000000000567d32 : je 0x567d58 ; call 0x6d4744
0x0000000000567d0c : je 0x567db2 ; call 0x6d4748
0x0000000000568c00 : je 0x568c25 ; mov eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000056a483 : je 0x56a490 ; add rsp, 0x38 ; ret
0x000000000056ae98 : je 0x56aea2 ; ret
0x000000000056fb85 : je 0x56fb95 ; mov edx, edx ; pop rbx ; ret
0x000000000056fbc5 : je 0x56fbd5 ; mov edx, edx ; pop rbx ; ret
0x0000000000571516 : je 0x571524 ; xor eax, eax ; ret
0x0000000000571988 : je 0x571992 ; ret
0x0000000000571d45 : je 0x571d57 ; cmp dword ptr [rdi + 0x10], esi ; jl 0x571d57 ; ret
0x0000000000577126 : je 0x577141 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000578495 : je 0x5784a4 ; xor eax, eax ; ret
0x00000000005786f5 : je 0x57870e ; add bl, ch ; mov dword ptr [rax - 0x77], ecx ; ret
0x0000000000579ed0 : je 0x579ee7 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000057e635 : je 0x57e644 ; xor eax, eax ; ret
0x000000000057ee21 : je 0x57ede9 ; sbb byte ptr [rax + 0x63], cl ; ret 0x8948
0x000000000058170f : je 0x581728 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000581897 : je 0x5818a4 ; mov eax, dword ptr [rax] ; ret
0x00000000005820b7 : je 0x5820cb ; test al, 1 ; jne 0x5820db ; mov rdi, rsi ; jmp rax
0x00000000005845a7 : je 0x5845b5 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x00000000005845b7 : je 0x5845c5 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x00000000005845c7 : je 0x5845d5 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x0000000000584c03 : je 0x584c12 ; lock sub dword ptr [rax + 0x2c], 1 ; pop rbx ; ret
0x0000000000584c25 : je 0x584c35 ; mov edx, edx ; pop rbx ; ret
0x0000000000584c65 : je 0x584c75 ; mov edx, edx ; pop rbx ; ret
0x0000000000584ca5 : je 0x584cb5 ; mov edx, edx ; pop rbx ; ret
0x0000000000584ce5 : je 0x584cf5 ; mov edx, edx ; pop rbx ; ret
0x0000000000584d27 : je 0x584d33 ; pop rbx ; ret
0x0000000000584d57 : je 0x584d63 ; pop rbx ; ret
0x0000000000584ea8 : je 0x584eb4 ; xor eax, eax ; ret
0x0000000000584f15 : je 0x584f28 ; mov rax, qword ptr [rdi + 8] ; mov eax, dword ptr [rax + 4] ; ret
0x0000000000584f46 : je 0x584f59 ; mov rdx, qword ptr [rdi + 8] ; mov eax, dword ptr [rdx + rax*4] ; ret
0x000000000058553b : je 0x585542 ; ret
0x000000000058555b : je 0x585562 ; ret
0x000000000058e556 : je 0x58e564 ; xor eax, eax ; ret
0x000000000058e8d6 : je 0x58e8e4 ; xor eax, eax ; ret
0x000000000058f6c8 : je 0x58f6d2 ; ret
0x000000000058fa85 : je 0x58fa97 ; cmp dword ptr [rdi + 0x10], esi ; jl 0x58fa97 ; ret
0x000000000059091e : je 0x590923 ; ret
0x0000000000590943 : je 0x590958 ; cmp dword ptr [rdi + 0x10], esi ; setge al ; ret
0x0000000000590d25 : je 0x590d37 ; cmp dword ptr [rdi + 0x10], esi ; jl 0x590d37 ; ret
0x00000000005916c9 : je 0x5916d4 ; xor eax, eax ; ret
0x0000000000591741 : je 0x5916ef ; ret
0x000000000059170a : je 0x591721 ; cmp rsi, qword ptr [rdx + 0x10] ; sete al ; ret
0x0000000000591937 : je 0x591944 ; xor eax, eax ; ret
0x0000000000592db8 : je 0x592de5 ; push rax ; mov rdx, rax ; call r8
0x0000000000594aa3 : je 0x594ab0 ; add rsp, 0x38 ; ret
0x00000000005957c8 : je 0x5957d2 ; ret
0x0000000000599e6e : je 0x599e83 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000599ee0 : je 0x599ef5 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000059c447 : je 0x59c456 ; lock sub dword ptr [rax + 0x14], 1 ; ret
0x000000000059d467 : je 0x59d492 ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000005a1efd : je 0x5a1f49 ; add edx, 1 ; add rsp, 8 ; ret
0x00000000005a23b3 : je 0x5a23de ; or byte ptr [rax - 0x77], cl ; ret
0x00000000005a2596 : je 0x5a25a4 ; xor eax, eax ; ret
0x00000000005a4ae3 : je 0x5a4b12 ; add rsp, 8 ; ret
0x00000000005a4b23 : je 0x5a4b38 ; cmp dword ptr [rdi + 0x10], esi ; setge al ; ret
0x00000000005a4b53 : je 0x5a4b6d ; lea edx, dword ptr [rsi + 1] ; ret
0x00000000005a5015 : je 0x5a5027 ; cmp dword ptr [rdi + 0x10], esi ; jl 0x5a5027 ; ret
0x00000000005a5535 : je 0x5a5544 ; xor eax, eax ; ret
0x00000000005a55c4 : je 0x5a55e6 ; add rsp, 8 ; ret
0x00000000005a70b7 : je 0x5a70c5 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x00000000005a70c7 : je 0x5a70d5 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x00000000005a70d7 : je 0x5a70e5 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x00000000005a72c3 : je 0x5a72d2 ; lock sub dword ptr [rax + 0x2c], 1 ; pop rbx ; ret
0x00000000005a72e7 : je 0x5a72f3 ; pop rbx ; ret
0x00000000005a7317 : je 0x5a7323 ; pop rbx ; ret
0x00000000005a7468 : je 0x5a7474 ; xor eax, eax ; ret
0x00000000005a78db : je 0x5a78e2 ; ret
0x00000000005a78fb : je 0x5a7902 ; ret
0x00000000005a9fb9 : je 0x5a9fc4 ; xor eax, eax ; ret
0x00000000005aa031 : je 0x5a9fdf ; ret
0x00000000005a9ffa : je 0x5aa011 ; cmp rsi, qword ptr [rdx + 0x10] ; sete al ; ret
0x00000000005aa076 : je 0x5aa084 ; xor eax, eax ; ret
0x00000000005ac4d6 : je 0x5ac4e3 ; add rsp, 0x38 ; ret
0x00000000005ad828 : je 0x5ad832 ; ret
0x00000000005ae345 : je 0x5ae354 ; xor eax, eax ; ret
0x00000000005b21cb : je 0x5b223d ; outsd dx, dword ptr [rsi] ; outsb dx, byte ptr [rsi] ; and byte ptr [rdi], cl ; ret 0x894c
0x00000000005bb460 : je 0x5bb4aa ; add al, ch ; retf 0xc60
0x00000000005c66e3 : je 0x5c670e ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000005c81bb : je 0x5c81c6 ; dec dword ptr [rax + 0x63] ; ret
0x00000000005d39bd : je 0x5d3a3e ; mov rax, qword ptr [rip + 0x42eea2] ; call rax
0x00000000005d405d : je 0x5d40de ; mov rax, qword ptr [rip + 0x42e802] ; call rax
0x00000000005d7d30 : je 0x5d7d41 ; mov rdi, rax ; call 0x6d4747
0x00000000005d850c : je 0x5d851d ; mov rdi, rax ; call 0x6d4747
0x00000000005e0863 : je 0x5e08e4 ; mov rax, qword ptr [rip + 0x421ffc] ; call rax
0x00000000005e0f03 : je 0x5e0f84 ; mov rax, qword ptr [rip + 0x42195c] ; call rax
0x00000000005e92ac : je 0x5e92b9 ; add ebx, 1 ; jmp 0x5e9284
0x00000000005f5d38 : je 0x5f5cca ; or al, 0 ; leave ; ret
0x00000000005f8477 : je 0x5f8482 ; ret
0x00000000005f869a : je 0x5f86c0 ; xor eax, eax ; add rsp, 8 ; ret
0x00000000005f96dd : je 0x5f96ec ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005f9a68 : je 0x5f9aac ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005fb299 : je 0x5fb2c4 ; cmp byte ptr [rdi], cl ; popfq ; ret 0xf685
0x00000000005fb568 : je 0x5fb593 ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000005fc7b5 : je 0x5fc7bf ; mov byte ptr [rdi], 1 ; ret
0x00000000005fd5e5 : je 0x5fd620 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005fd750 : je 0x5fd77b ; or byte ptr [rax - 0x77], cl ; ret
0x00000000005fe795 : je 0x5fe7a9 ; dec dword ptr [rax - 0x7d] ; ret
0x000000000060658b : je 0x60654c ; xor eax, eax ; ret
0x00000000006089d6 : je 0x6089e4 ; xor eax, eax ; ret
0x000000000060a6d8 : je 0x60a693 ; stc ; dec dword ptr [rax - 0x77] ; ret
0x000000000060c3f8 : je 0x60c405 ; sub rax, 1 ; ret
0x000000000060c62e : je 0x60c65a ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000610144 : je 0x61016f ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000611a5a : je 0x611a61 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000006182af : je 0x618330 ; mov rax, qword ptr [rip + 0x3ea5b0] ; call rax
0x000000000061894b : je 0x6189cc ; mov rax, qword ptr [rip + 0x3e9f14] ; call rax
0x000000000061b4b4 : je 0x61b4fa ; add bh, bh ; ror cl, 1 ; ret
0x0000000000625a90 : je 0x625a85 ; mov rax, rdi ; ret
0x0000000000625ae0 : je 0x625ad2 ; ret
0x0000000000625c07 : je 0x625c15 ; lock sub dword ptr [rax + 0x24], 1 ; ret
0x0000000000625c17 : je 0x625c25 ; lock sub dword ptr [rax + 0x24], 1 ; ret
0x0000000000625c27 : je 0x625c35 ; lock sub dword ptr [rax + 0x24], 1 ; ret
0x0000000000625d83 : je 0x625d92 ; lock sub dword ptr [rax + 0x24], 1 ; pop rbx ; ret
0x0000000000625dd0 : je 0x625dc3 ; pop rbx ; ret
0x0000000000626058 : je 0x626064 ; xor eax, eax ; ret
0x0000000000627465 : je 0x627453 ; pop rbx ; ret
0x0000000000627498 : je 0x6274b1 ; mov rax, rbx ; mov rdx, rcx ; pop rbx ; ret
0x000000000062751d : je 0x627539 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000627680 : je 0x627672 ; ret
0x0000000000627777 : je 0x627782 ; ret
0x0000000000627c73 : je 0x627c9c ; call 0x6d4744
0x000000000062827c : je 0x6282a7 ; ret
0x0000000000628340 : je 0x628368 ; xor eax, eax ; add rsp, 8 ; ret
0x000000000062843d : je 0x628468 ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000628506 : je 0x62853c ; add rsp, 8 ; ret
0x0000000000629be6 : je 0x629bf3 ; add rsp, 0x38 ; ret
0x000000000062a06d : je 0x62a07e ; mov rax, rbx ; pop rbx ; ret
0x000000000062a0bd : je 0x62a0d6 ; mov rax, rbx ; pop rbx ; ret
0x000000000062cea4 : je 0x62ceb7 ; mov qword ptr [rdi + 0x12d0], rsi ; ret
0x000000000062e1b3 : je 0x62e1c5 ; mov qword ptr [rdi], 0x71e500 ; ret
0x000000000062ed62 : je 0x62ed78 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000062ef3d : je 0x62ef4e ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000631624 : je 0x631669 ; add byte ptr [rax - 0x73], cl ; pushfq ; ret
0x0000000000632ecc : je 0x632ed3 ; pop rbx ; ret
0x0000000000650697 : je 0x650679 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000651566 : je 0x65157d ; add byte ptr [rax], al ; call rax
0x0000000000657102 : je 0x65710f ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000658823 : je 0x658828 ; ret
0x000000000065970b : je 0x659713 ; pop rbx ; ret
0x000000000065972b : je 0x659733 ; pop rbx ; ret
0x000000000065c3df : je 0x65c3f8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000660432 : je 0x660448 ; mov rdi, qword ptr [rdi + 0x50] ; call rdx
0x0000000000660713 : je 0x660723 ; ret
0x00000000006609b5 : je 0x6609e5 ; add rax, rcx ; ret
0x0000000000662790 : je 0x662817 ; lea rax, qword ptr [rdx + rax + 5] ; ret
0x000000000066789e : je 0x6678e8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000066798e : je 0x6679d8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000668ae1 : je 0x668b1c ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000668b3e : je 0x668b4b ; add rsp, 8 ; ret
0x000000000066919c : je 0x6691a2 ; ret
0x00000000006691cc : je 0x6691d2 ; ret
0x00000000006691ec : je 0x6691f2 ; ret
0x000000000066926a : je 0x669272 ; ret
0x000000000066af28 : je 0x66af40 ; mov eax, dword ptr [rip + 0x396e50] ; ret
0x000000000066b0ec : je 0x66b100 ; xor eax, eax ; add rsp, 8 ; ret
0x000000000066b12e : je 0x66b149 ; add dword ptr [rax + 0xc90], 1 ; ret
0x000000000066b16e : je 0x66b188 ; add rax, 0x1e0 ; ret
0x000000000066b246 : je 0x66b256 ; add rsp, 8 ; ret
0x000000000066b478 : je 0x66b483 ; pop rbx ; ret
0x000000000066b5b5 : je 0x66b5c6 ; add rsp, 8 ; ret
0x000000000066b693 : je 0x66b6a7 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000066b7d2 : je 0x66b7da ; ret
0x000000000066b7f7 : je 0x66b802 ; ret
0x000000000066b815 : je 0x66b823 ; pop rbx ; ret
0x000000000066c0be : je 0x66c0ca ; ret
0x000000000066dc60 : je 0x66dc79 ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000066de64 : je 0x66de76 ; add rsp, 0x18 ; ret
0x000000000066e7a5 : je 0x66e7b8 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000067071e : je 0x670738 ; mov eax, dword ptr [rax + 0xc78] ; ret
0x000000000067075e : je 0x670779 ; add dword ptr [rax + 0xc78], 1 ; ret
0x0000000000671252 : je 0x671268 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000067134c : je 0x671360 ; mov rax, qword ptr [rip + 0x39155b] ; call rax
0x0000000000671bd7 : je 0x671be3 ; pop rbx ; ret
0x0000000000672725 : je 0x672736 ; add rsp, 0x28 ; ret
0x0000000000672f13 : je 0x672f29 ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000673a2d : je 0x673a48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000673b1c : je 0x673b30 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000067449b : je 0x6744e0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000674763 : je 0x67476e ; call 0x680a68
0x00000000006757ef : je 0x675806 ; add rsp, 0x18 ; ret
0x0000000000675cc7 : je 0x675cd2 ; ret
0x000000000067605e : je 0x676079 ; mov qword ptr [rax + 0x1d8], rdi ; ret
0x000000000067609e : je 0x6760b8 ; add rax, 0x1b8 ; ret
0x00000000006760de : je 0x6760f9 ; mov rax, qword ptr [rax + 0x1d8] ; ret
0x000000000067611e : je 0x676139 ; mov qword ptr [rax + 0x1d0], rdi ; ret
0x000000000067615e : je 0x676179 ; mov rax, qword ptr [rax + 0x1d0] ; ret
0x0000000000676217 : je 0x676222 ; ret
0x0000000000676b78 : je 0x676b82 ; ret
0x0000000000677600 : je 0x677610 ; and edi, 3 ; sete al ; ret
0x0000000000678154 : je 0x678168 ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000678b7c : je 0x678b82 ; ret
0x000000000067aa82 : je 0x67aa95 ; movzx eax, byte ptr [rax] ; ret
0x000000000067c623 : je 0x67c630 ; movzx eax, byte ptr [rdi + 0x28] ; ret
0x00000000006819f3 : je 0x681a05 ; mov qword ptr [rdi], 0x727f80 ; ret
0x0000000000681a33 : je 0x681a45 ; mov qword ptr [rdi], 0x727e20 ; ret
0x0000000000684e1a : je 0x684e45 ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000685f03 : je 0x685f15 ; mov qword ptr [rdi], 0x728cc0 ; ret
0x000000000068717e : je 0x6871a9 ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000068828a : je 0x688294 ; xor eax, 1 ; ret
0x0000000000688ccb : je 0x688c9a ; ret
0x0000000000688f3d : je 0x688f32 ; ret
0x00000000006894f2 : je 0x6894fa ; ret
0x0000000000689b26 : je 0x689b34 ; xor eax, eax ; ret
0x000000000068c4a6 : je 0x68c487 ; inc dword ptr [rcx - 0x77] ; pop rsi ; or cl, ch ; retf
0x000000000068c4a5 : je 0x68c488 ; inc dword ptr [rcx - 0x77] ; pop rsi ; or cl, ch ; retf
0x000000000068d0b1 : je 0x68d119 ; mov esi, ebp ; mov rdi, r13 ; call 0x689b29
0x000000000068de23 : je 0x68de38 ; or ecx, dword ptr [rax + 0x63] ; shr eax, cl ; ret 0xd75a
0x000000000068e363 : je 0x68e370 ; movzx eax, byte ptr [rdi + 0x38] ; ret
0x000000000068e6e1 : je 0x68e6eb ; pop rbx ; ret
0x000000000068ed81 : je 0x68ed74 ; xor eax, eax ; ret
0x000000000068f055 : je 0x68f034 ; sete al ; ret
0x000000000068f922 : je 0x68f8ec ; je 0x68f937 ; xor eax, eax ; ret
0x000000000068f925 : je 0x68f934 ; xor eax, eax ; ret
0x000000000068f924 : je 0x68f935 ; xor eax, eax ; ret
0x000000000068f9c4 : je 0x68f9d2 ; ret
0x000000000068fa1d : je 0x68fa2e ; mov rax, qword ptr [rax + 0x50] ; ret
0x0000000000690874 : je 0x690881 ; add rsp, 8 ; ret
0x0000000000690e44 : je 0x690e51 ; add rsp, 8 ; ret
0x00000000006917bd : je 0x6917d5 ; mov eax, dword ptr [rdi + 0x64] ; add rsp, 8 ; ret
0x00000000006917f4 : je 0x69180c ; mov eax, dword ptr [rax + 0x64] ; add rsp, 8 ; ret
0x0000000000691823 : je 0x691830 ; movzx eax, byte ptr [rdi + 0x38] ; ret
0x00000000006918fd : je 0x691915 ; mov eax, dword ptr [rdi + 0x68] ; add rsp, 8 ; ret
0x0000000000691934 : je 0x69194c ; mov eax, dword ptr [rax + 0x68] ; add rsp, 8 ; ret
0x0000000000691975 : je 0x691982 ; add rsp, 8 ; ret
0x00000000006920a1 : je 0x6920c5 ; mov dword ptr [rdi + 0x64], esi ; add rsp, 8 ; ret
0x00000000006920f8 : je 0x69211c ; mov dword ptr [rax + 0x64], edi ; add rsp, 8 ; ret
0x0000000000692181 : je 0x6921a5 ; mov dword ptr [rdi + 0x68], esi ; add rsp, 8 ; ret
0x00000000006921d8 : je 0x6921fc ; mov dword ptr [rax + 0x68], edi ; add rsp, 8 ; ret
0x000000000069281f : je 0x692837 ; add rsp, 8 ; ret
0x000000000069d249 : je 0x69d273 ; ror byte ptr [rcx], 1 ; ret 0xf741
0x000000000069f727 : je 0x69f73b ; or byte ptr [rax - 0x7d], cl ; rol dword ptr [rcx], 0x39 ; retf
0x000000000069f916 : je 0x69f96a ; or byte ptr [rax - 0x7d], cl ; rol dword ptr [rcx], 0x39 ; retf
0x000000000069fb27 : je 0x69fb7b ; or byte ptr [rax - 0x7d], cl ; rol dword ptr [rcx], 0x39 ; retf
0x000000000069fd35 : je 0x69fcc9 ; or byte ptr [rax - 0x7d], cl ; rol dword ptr [rcx], 0x39 ; retf
0x00000000006a0ef9 : je 0x6a0f16 ; add rsp, 8 ; ret
0x00000000006a1932 : je 0x6a1944 ; xor eax, eax ; ret
0x00000000006a1b52 : je 0x6a1bc9 ; jle 0x6a1b4c ; mov eax, 1 ; ret
0x00000000006a1c01 : je 0x6a1bf9 ; jbe 0x6a1c1f ; mov eax, 1 ; ret
0x00000000006a1c12 : je 0x6a1c29 ; jg 0x6a1c0e ; mov eax, 0xffffffff ; ret
0x00000000006a41e1 : je 0x6a41d4 ; xor eax, eax ; ret
0x00000000006a4325 : je 0x6a4332 ; ret
0x00000000006a46a5 : je 0x6a46b2 ; add rsp, 8 ; ret
0x00000000006a5f73 : je 0x6a5f85 ; mov qword ptr [rdi], 0x72bd60 ; ret
0x00000000006a60b3 : je 0x6a60b8 ; ret
0x00000000006a60fd : je 0x6a610f ; add rsp, 8 ; ret
0x00000000006a6823 : je 0x6a6830 ; movzx eax, byte ptr [rdi + 0x38] ; ret
0x00000000006a6954 : je 0x6a6962 ; ret
0x00000000006a7e05 : je 0x6a7e12 ; ret
0x00000000006a82cf : je 0x6a82dd ; cmp rdi, qword ptr [rax] ; jne 0x6a82cf ; ret
0x00000000006a8c63 : je 0x6a8c75 ; mov qword ptr [rdi], 0x72c1a0 ; ret
0x00000000006aa9f5 : je 0x6aaa04 ; xor eax, eax ; ret
0x00000000006b16ee : je 0x6b1719 ; cmp byte ptr [rax - 0x77], cl ; ret
0x00000000006b2259 : je 0x6b2270 ; mov eax, dword ptr [rip + 0x3509cb] ; ret
0x00000000006b227e : je 0x6b228e ; mov eax, dword ptr [rip + 0x3509a6] ; ret
0x00000000006b2343 : je 0x6b2355 ; mov qword ptr [rdi], 0x72cf60 ; ret
0x00000000006b6b78 : je 0x6b6b84 ; xor eax, eax ; ret
0x00000000006b6f00 : je 0x6b6f0c ; xor eax, eax ; ret
0x00000000006b7add : je 0x6b7b1d ; adc byte ptr [rsi + 0x39], ah ; ret 0xf41
0x00000000006bdabf : je 0x6bdae1 ; sub eax, 0x14 ; cmp al, 2 ; jbe 0x6bdad9 ; ret
0x00000000006bed17 : je 0x6bed22 ; ret
0x00000000006bfc13 : je 0x6bfc25 ; mov qword ptr [rdi], 0x730220 ; ret
0x00000000006c14eb : je 0x6c1519 ; adc byte ptr [rdx + 0x730d00], bh ; call rax
0x00000000006c56bf : je 0x6c56d9 ; mov dword ptr [rdx], r9d ; add rsp, 8 ; ret
0x00000000006c6817 : je 0x6c6822 ; ret
0x00000000006c6b55 : je 0x6c6b64 ; xor eax, eax ; ret
0x00000000006c6cd5 : je 0x6c6ce2 ; ret
0x00000000006c6ec3 : je 0x6c6ed5 ; mov qword ptr [rdi], 0x731820 ; ret
0x00000000006c6f43 : je 0x6c6f55 ; mov qword ptr [rdi], 0x731b00 ; ret
0x00000000006c7de3 : je 0x6c7df2 ; ret
0x00000000006c82d5 : je 0x6c82f6 ; add rsp, 8 ; ret
0x00000000006c831c : je 0x6c8329 ; add rsp, 8 ; ret
0x00000000006c8444 : je 0x6c8451 ; add rsp, 8 ; ret
0x00000000006c84ac : je 0x6c84b9 ; add rsp, 8 ; ret
0x00000000006c9577 : je 0x6c9584 ; add rsp, 8 ; ret
0x00000000006c97aa : je 0x6c97cf ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000006c9b9a : je 0x6c9bb0 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000006ca078 : je 0x6ca087 ; add rsp, 0x40 ; pop rbx ; ret
0x00000000006cb673 : je 0x6cb680 ; lea rax, qword ptr [rdi + rsi*8] ; ret
0x00000000006cb683 : je 0x6cb690 ; lea rax, qword ptr [rsi + rdi*8] ; ret
0x00000000006cb6a3 : je 0x6cb6b6 ; neg rsi ; lea rax, qword ptr [rdi + rsi*8] ; ret
0x00000000006cb863 : je 0x6cb870 ; lea rax, qword ptr [rdi - 8] ; ret
0x00000000006cb873 : je 0x6cb880 ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000006cba94 : je 0x6cbaa2 ; ret
0x00000000006cc499 : je 0x6cc4a2 ; ret
0x00000000006ccb58 : je 0x6ccb62 ; ret
0x00000000006ccc98 : je 0x6ccca2 ; ret
0x00000000006ccd28 : je 0x6ccd32 ; ret
0x00000000006cce16 : je 0x6cce22 ; ret
0x00000000006cceb6 : je 0x6ccec2 ; ret
0x00000000006ccf26 : je 0x6ccf32 ; ret
0x00000000006ccfb6 : je 0x6ccfc2 ; ret
0x00000000006cd046 : je 0x6cd052 ; ret
0x00000000006cd1cf : je 0x6cd1f9 ; sbb dh, dh ; ret
0x00000000006cd2d6 : je 0x6cd2e2 ; ret
0x00000000006ce14f : je 0x6ce15b ; ret
0x00000000006ce9d9 : je 0x6ce9e2 ; ret
0x00000000006ced58 : je 0x6ced62 ; ret
0x00000000006d0aa7 : je 0x6d0a96 ; add rsp, 8 ; ret
0x00000000006d0aff : je 0x6d0b17 ; add rsp, 8 ; ret
0x00000000006d11b1 : je 0x6d1231 ; mov eax, 3 ; ret
0x00000000006d41b0 : je 0x6d41c8 ; xor eax, eax ; add rsp, 0x18 ; ret
0x00000000006d42b8 : je 0x6d429a ; add rsp, 8 ; ret
0x00000000006d6083 : je 0x6d6093 ; mov edx, dword ptr [rdi] ; test edx, edx ; jne 0x6d6098 ; ret
0x00000000006d633f : je 0x6d6360 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000007267ec : je 0x7267c2 ; xchg eax, edx ; add byte ptr [rax], al ; lahf ; push rbx ; retf 0x7cee
0x00000000007267eb : je 0x7267c3 ; xchg eax, edx ; add byte ptr [rax], al ; lahf ; push rbx ; retf 0x7cee
0x0000000000735b7d : je 0x735b51 ; jmp rax
0x00000000007388ad : je 0x738887 ; jmp qword ptr [rax]
0x000000000073bc75 : je 0x73bc57 ; call rax
0x0000000000744131 : je 0x74413f ; add byte ptr [rax - 0x7f], dh ; in eax, dx ; call qword ptr [rax]
0x0000000000745435 : je 0x745428 ; jmp qword ptr [rax]
0x0000000000745abd : je 0x745ab1 ; call qword ptr [rax]
0x00000000007470f1 : je 0x747100 ; add al, ah ; push rsp ; hlt ; jmp qword ptr [rax]
0x00000000007494bd : je 0x7494b8 ; call rax
0x000000000074efbc : je 0x74effd ; add byte ptr [rax], al ; sbb ecx, ebp ; call rsp
0x0000000000753d7c : je 0x753d08 ; add byte ptr [rax], al ; retf -0x311e
0x00000000007549bc : je 0x754957 ; add byte ptr [rax], al ; xchg eax, edx ; cmp al, 0xcf ; call rsp
0x00000000007554e1 : je 0x7554b4 ; call rsp
0x000000000075d4bc : je 0x75d4e0 ; add dword ptr [rax], eax ; xchg eax, edx ; retf -0x2f
0x000000000075ecb9 : je 0x75ec8f ; jmp qword ptr [rbx]
0x000000000075f1bc : je 0x75f1fc ; add dword ptr [rax], eax ; ret 0xd2d7
0x000000000075fee9 : je 0x75fec0 ; jmp qword ptr [rbx]
0x000000000076277c : je 0x7627f5 ; add dword ptr [rax], eax ; cmp byte ptr [rdx - 0x2c], bh ; call qword ptr [rdx]
0x0000000000762bd5 : je 0x762bde ; add al, cl ; test al, 0xd4 ; jmp qword ptr [rbx]
0x000000000076c57c : je 0x76c591 ; add al, byte ptr [rax] ; nop ; retf -0x27
0x000000000076ccbc : je 0x76ccdb ; add al, byte ptr [rax] ; shl al, 1 ; fcos ; retf 1
0x0000000000770c7c : je 0x770cda ; add al, byte ptr [rax] ; mov cl, 0xda ; jmp qword ptr [rdi]
0x0000000000772bfd : je 0x772c07 ; add byte ptr [rax], dh ; xor bl, bl ; jmp rax
0x0000000000773c19 : je 0x773bf8 ; jmp qword ptr [rdx]
0x0000000000773c31 : je 0x773c10 ; jmp qword ptr [rdx]
0x0000000000773c81 : je 0x773c60 ; call qword ptr [rax]
0x0000000000773ce1 : je 0x773cc0 ; call qword ptr [rdi]
0x0000000000781dbc : je 0x781e2b ; add eax, dword ptr [rax] ; rcl cl, 0xde ; jmp rcx
0x0000000000791a7c : je 0x791ae8 ; add al, 0 ; shl byte ptr [rax], 0xe3 ; jmp qword ptr [rax]
0x0000000000792bed : je 0x792bf7 ; add byte ptr [rsi], ch ; retf -0x1d
0x0000000000797c7c : je 0x797c4a ; add al, 0 ; pushfq ; mov ah, 0xe5 ; jmp qword ptr [rbx]
0x000000000079b77c : je 0x79b785 ; add eax, 0xe751d000 ; jmp qword ptr [rcx]
0x000000000079fdf1 : je 0x79fddd ; jmp qword ptr [rbx]
0x00000000007a687c : je 0x7a6836 ; add eax, 0xeba95000 ; call rax
0x00000000007a837c : je 0x7a8351 ; add eax, 0xec2ad000 ; call qword ptr [rdx]
0x00000000007aa97c : je 0x7aa977 ; add eax, 0xecdad000 ; call qword ptr [rdx]
0x00000000007ad301 : je 0x7ad2f2 ; call rsi
0x00000000007b8f81 : je 0x7b8f75 ; call qword ptr [rax]
0x00000000007c4feb : je 0x7c4fac ; add eax, dword ptr [rax] ; retf 0x1403
0x00000000007c56bf : je 0x7c5680 ; add eax, dword ptr [rax] ; retf 0x1403
0x00000000007fa62a : je 0x7fa62e ; retf
0x0000000000407c11 : jg 0x407c41 ; add bl, ch ; xchg dword ptr [rax - 0x77], ecx ; ret
0x0000000000407c10 : jg 0x407c42 ; add bl, ch ; xchg dword ptr [rax - 0x77], ecx ; ret
0x0000000000407c3a : jg 0x407c6b ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; sti ; retf 0x2c
0x0000000000428db5 : jg 0x428de3 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000431f5d : jg 0x431f6f ; pop rbp ; add bh, bh ; ror cl, 1 ; ret
0x0000000000466699 : jg 0x4666c5 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000468cd7 : jg 0x468d5b ; adc al, 0xbe ; ret
0x000000000049805e : jg 0x497ff3 ; mov r12d, 0x39489848 ; ret 0x147d
0x00000000004a62ec : jg 0x4a6281 ; mov r8d, 0x39489848 ; ret 0x147d
0x00000000004a695e : jg 0x4a6985 ; add cl, cl ; ret
0x00000000004a695d : jg 0x4a6986 ; add cl, cl ; ret
0x00000000004a7348 : jg 0x4a73cc ; adc al, 0xbe ; retf 2
0x00000000004a7417 : jg 0x4a749b ; adc al, 0xbe ; retf
0x00000000004a743b : jg 0x4a74bf ; adc al, 0xbe ; retf
0x00000000004c6669 : jg 0x4c668f ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c6668 : jg 0x4c6690 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f8400 : jg 0x4f840f ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004f8be0 : jg 0x4f8c03 ; add byte ptr [rax - 0x7d], cl ; cli ; add cl, byte ptr [rax - 0x77] ; ret
0x0000000000503d32 : jg 0x503d4b ; test byte ptr [rbx - 0x7d000000], bl ; ret
0x00000000005058ee : jg 0x5058fc ; xor eax, eax ; ret
0x0000000000517f3c : jg 0x517f42 ; ret
0x0000000000517f3b : jg 0x517f43 ; ret
0x000000000051c0bc : jg 0x51c136 ; or al, 0x89 ; retf 0x708d
0x000000000051c291 : jg 0x51c27e ; mov dword ptr [rbx + 0x10], eax ; pop rbx ; ret
0x0000000000526b98 : jg 0x526bb1 ; xor eax, eax ; mov edx, 1 ; ret
0x0000000000536f74 : jg 0x536f87 ; add byte ptr [rbp + 4], dh ; movzx eax, byte ptr [rdi + 0x1f] ; ret
0x000000000053ed43 : jg 0x53ed48 ; ret
0x0000000000549375 : jg 0x54938f ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054db39 : jg 0x54db49 ; jne 0x54db46 ; xor eax, eax ; ret
0x000000000055ba0b : jg 0x55b9d3 ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; outsd dx, dword ptr [rsi] ; add byte ptr [rax + 0x29], cl ; retf -0x7eb8
0x000000000055bc0b : jg 0x55bbd3 ; mov al, 0xf5 ; outsd dx, dword ptr [rsi] ; add byte ptr [rax + 0x29], cl ; retf -0x7eb8
0x000000000055be0b : jg 0x55bdd3 ; mov dh, 0xf5 ; outsd dx, dword ptr [rsi] ; add byte ptr [rax + 0x29], cl ; retf -0x7eb8
0x000000000055c57b : jg 0x55c543 ; sal ebp, 0x6f ; add byte ptr [rax + 0x29], cl ; retf -0x7eb8
0x0000000000563dad : jg 0x563d8e ; adc al, byte ptr [rax] ; pop rbx ; ret
0x000000000056cd46 : jg 0x56cdc6 ; add eax, 0x8c48348 ; ret
0x000000000056f77c : jg 0x56f782 ; ret
0x000000000056f77b : jg 0x56f783 ; ret
0x00000000005719a8 : jg 0x5719c1 ; xor eax, eax ; mov edx, 1 ; ret
0x0000000000574756 : jg 0x574783 ; retf -0x2fc7
0x000000000058402c : jg 0x584032 ; ret
0x000000000058402b : jg 0x584033 ; ret
0x00000000005841ac : jg 0x5841b2 ; ret
0x00000000005841ab : jg 0x5841b3 ; ret
0x0000000000586e9a : jg 0x586ea4 ; call 0x4038f4
0x000000000058785c : jg 0x5878d6 ; or al, 0x89 ; retf 0x708d
0x0000000000587e51 : jg 0x587e3e ; mov dword ptr [rbx + 0x10], eax ; pop rbx ; ret
0x0000000000589391 : jg 0x5893a7 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000589390 : jg 0x5893a8 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058f6e8 : jg 0x58f701 ; xor eax, eax ; mov edx, 1 ; ret
0x0000000000590968 : jg 0x590981 ; xor eax, eax ; mov edx, 1 ; ret
0x000000000059944e : jg 0x599468 ; test byte ptr [rcx + rax], dl ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000059c0dc : jg 0x59c0e2 ; ret
0x000000000059c0db : jg 0x59c0e3 ; ret
0x000000000059eba8 : jg 0x59eb63 ; pop rbx ; ret
0x00000000005a4b4f : jg 0x5a4ba2 ; mov eax, edi ; je 0x5a4b71 ; lea edx, dword ptr [rsi + 1] ; ret
0x00000000005ad03c : jg 0x5ad04d ; mov rsi, rbx ; call 0x5a9b37
0x00000000005ad06c : jg 0x5ad07d ; mov rsi, rbx ; call 0x5a9b37
0x00000000005c67d9 : jg 0x5c682c ; cmp esi, eax ; jne 0x5c67f1 ; mov rax, rsi ; ret
0x00000000005f860d : jg 0x5f865c ; add esp, 8 ; ret
0x00000000005ff9f1 : jg 0x5ffa0a ; test byte ptr [rsi - 0x7cfffff2], al ; ret
0x0000000000604142 : jg 0x6041bc ; add byte ptr [rcx], dh ; shr al, 0x40 ; retf 7
0x0000000000604505 : jg 0x60451e ; test byte ptr [rsi - 0x7cfffffe], al ; ret
0x0000000000604799 : jg 0x604813 ; add byte ptr [rcx], dh ; shr al, 0xe9 ; ret
0x00000000006047aa : jg 0x604824 ; add byte ptr [rcx], dh ; shr al, 0xd8 ; ret
0x00000000006047bb : jg 0x604835 ; add byte ptr [rcx], dh ; shr al, 0xef ; ret
0x00000000006047cc : jg 0x604846 ; add byte ptr [rcx], dh ; shr al, 0xde ; ret
0x00000000006047f7 : jg 0x604871 ; add byte ptr [rcx], dh ; shr al, 0xb3 ; ret
0x0000000000604861 : jg 0x6048db ; add byte ptr [rcx], dh ; shr al, 0x8f ; retf 7
0x000000000060c72d : jg 0x60c751 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000631784 : jg 0x6317a2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000660436 : jg 0x66048a ; call rdx
0x0000000000678532 : jg 0x67857c ; cmp bh, 0x20 ; sete al ; ret
0x00000000006793df : jg 0x6793ea ; add byte ptr [rax - 0x7d], cl ; cli ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000067f903 : jg 0x67f8cd ; ret
0x0000000000680296 : jg 0x68026d ; add rsp, 8 ; ret
0x00000000006819f9 : jg 0x681a74 ; add bl, al ; nop dword ptr [rax] ; ret
0x0000000000693160 : jg 0x693158 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000693410 : jg 0x693408 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006a17c8 : jg 0x6a17cd ; ret
0x00000000006a1c14 : jg 0x6a1c0c ; mov eax, 0xffffffff ; ret
0x00000000006a60ca : jg 0x6a610d ; add dword ptr [rdi + 0xa], esi ; add rsp, 8 ; ret
0x00000000006a60fa : jg 0x6a613d ; add byte ptr [rdx + rcx + 0x48], dh ; add esp, 8 ; ret
0x00000000006a696c : jg 0x6a697c ; xor esi, esi ; call 0x403446
0x00000000006b24ea : jg 0x6b2532 ; ret
0x00000000006b3b2f : jg 0x6b3b34 ; ret
0x00000000006bb4f2 : jg 0x6bb47f ; ret 0x850f
0x00000000006bde2f : jg 0x6bde36 ; pop rbx ; ret
0x00000000006ce0db : jg 0x6ce0e3 ; ret
0x00000000006d0922 : jg 0x6d0936 ; add rsp, 8 ; ret
0x00000000006d1d72 : jg 0x6d1dc5 ; add byte ptr [rbp + 9], dh ; mov rax, rbx ; pop rbx ; ret
0x0000000000721f64 : jg 0x721eeb ; ret 0x26f2
0x0000000000721f63 : jg 0x721eec ; ret 0x26f2
0x0000000000722482 : jg 0x72245e ; pop rbp ; ret
0x0000000000722481 : jg 0x72245f ; pop rbp ; ret
0x0000000000723219 : jg 0x723226 ; loope 0x723227 ; ret
0x0000000000733604 : jg 0x733603 ; stc ; jmp rdx
0x00000000007343a5 : jg 0x734376 ; call rax
0x00000000007343a1 : jg 0x7343aa ; add dh, al ; jg 0x73437a ; call rax
0x00000000007434ad : jg 0x74349c ; call qword ptr [rax]
0x0000000000743c2d : jg 0x743c1d ; call qword ptr [rax]
0x0000000000744361 : jg 0x74436f ; add dl, dh ; fsubp st(5) ; jmp rax
0x0000000000744369 : jg 0x744377 ; add byte ptr [rsi - 0x1c], al ; in eax, dx ; call qword ptr [rax]
0x000000000074498d : jg 0x74497f ; jmp qword ptr [rax]
0x000000000074ab01 : jg 0x74ab11 ; add byte ptr [rax + 0x6d], dh ; stc ; jmp rax
0x000000000074ac55 : jg 0x74ac52 ; jmp rax
0x000000000074ac54 : jg 0x74ac53 ; jmp rax
0x00000000007636b5 : jg 0x7636be ; add byte ptr [rsi], dh ; and ebp, edx ; call qword ptr [rax]
0x000000000076eea1 : jg 0x76ee7f ; jmp qword ptr [rax]
0x000000000076eeb9 : jg 0x76ee97 ; call qword ptr [rcx]
0x000000000076eed1 : jg 0x76eeaf ; jmp rsp
0x000000000077cd59 : jg 0x77cd25 ; call qword ptr [rdx]
0x00000000007889f1 : jg 0x7889d5 ; jmp qword ptr [rcx]
0x0000000000788a09 : jg 0x7889ed ; call qword ptr [rbx]
0x0000000000788a51 : jg 0x788a35 ; jmp qword ptr [rax]
0x00000000007b61d1 : jg 0x7b61c4 ; call qword ptr [rbx]
0x0000000000404dbf : jge 0x404dc1 ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000004068bf : jge 0x4068a6 ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000040ba6c : jge 0x40ba69 ; pop rbp ; ret
0x00000000004136c8 : jge 0x4136ca ; mov eax, 0x80 ; pop rbp ; ret
0x0000000000413bd2 : jge 0x413bd4 ; mov eax, 0x80 ; pop rbp ; ret
0x0000000000413d40 : jge 0x413d42 ; mov eax, 0x80 ; pop rbp ; ret
0x0000000000413ed0 : jge 0x413ed2 ; mov eax, 0x140 ; pop rbp ; ret
0x0000000000414310 : jge 0x41430d ; pop rbp ; ret
0x0000000000414774 : jge 0x414771 ; pop rbp ; ret
0x0000000000414c30 : jge 0x414c2d ; pop rbp ; ret
0x0000000000415008 : jge 0x41500a ; mov eax, 0x100 ; pop rbp ; ret
0x000000000041b38c : jge 0x41b389 ; pop rbp ; ret
0x0000000000422b3a : jge 0x422b3c ; mov eax, 0x80 ; pop rbp ; ret
0x0000000000423044 : jge 0x423046 ; mov eax, 0x80 ; pop rbp ; ret
0x00000000004231b2 : jge 0x4231b4 ; mov eax, 0x80 ; pop rbp ; ret
0x0000000000423342 : jge 0x423344 ; mov eax, 0x140 ; pop rbp ; ret
0x0000000000423782 : jge 0x42377f ; pop rbp ; ret
0x0000000000423be6 : jge 0x423be3 ; pop rbp ; ret
0x00000000004240a2 : jge 0x42409f ; pop rbp ; ret
0x000000000042447a : jge 0x42447c ; mov eax, 0x100 ; pop rbp ; ret
0x000000000042a552 : jge 0x42a54f ; pop rbp ; ret
0x000000000043215a : jge 0x43215c ; mov eax, 0x80 ; pop rbp ; ret
0x0000000000432664 : jge 0x432666 ; mov eax, 0x80 ; pop rbp ; ret
0x00000000004327d2 : jge 0x4327d4 ; mov eax, 0x80 ; pop rbp ; ret
0x0000000000432962 : jge 0x432964 ; mov eax, 0x140 ; pop rbp ; ret
0x0000000000432da2 : jge 0x432d9f ; pop rbp ; ret
0x0000000000433206 : jge 0x433203 ; pop rbp ; ret
0x00000000004336c2 : jge 0x4336bf ; pop rbp ; ret
0x0000000000433a9a : jge 0x433a9c ; mov eax, 0x100 ; pop rbp ; ret
0x0000000000440b53 : jge 0x440b1b ; add byte ptr [rdx + rax - 0x15], dh ; ret 0x8b48
0x00000000004451a9 : jge 0x445171 ; add byte ptr [rdx + rax - 0x15], dh ; ret 0x8b48
0x000000000044b759 : jge 0x44b721 ; add byte ptr [rdx + rax - 0x15], dh ; ret 0x8b48
0x000000000044fbd0 : jge 0x44fbd2 ; mov eax, 0x80 ; pop rbp ; ret
0x00000000004500da : jge 0x4500dc ; mov eax, 0x80 ; pop rbp ; ret
0x0000000000450248 : jge 0x45024a ; mov eax, 0x80 ; pop rbp ; ret
0x00000000004503f8 : jge 0x4503fa ; mov eax, 0x140 ; pop rbp ; ret
0x0000000000450716 : jge 0x450718 ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x0000000000450726 : jge 0x450728 ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x00000000004507fa : jge 0x4507fc ; mov eax, 0x180 ; pop rbp ; ret
0x0000000000450c4a : jge 0x450c47 ; pop rbp ; ret
0x00000000004511da : jge 0x4511dc ; mov eax, 0xc0 ; pop rbp ; ret
0x000000000045173f : jge 0x45174c ; add cl, cl ; ret
0x000000000045174a : jge 0x45174c ; mov eax, 0xc0 ; pop rbp ; ret
0x0000000000451d50 : jge 0x451d52 ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x0000000000452f76 : jge 0x452f78 ; mov eax, 0x80 ; pop rbp ; ret
0x000000000045314f : jge 0x45310b ; add byte ptr es:[rax - 0x77], cl ; ret 0x8948
0x0000000000453480 : jge 0x453482 ; mov eax, 0x80 ; pop rbp ; ret
0x00000000004535ee : jge 0x4535f0 ; mov eax, 0x80 ; pop rbp ; ret
0x000000000045379e : jge 0x4537a0 ; mov eax, 0x140 ; pop rbp ; ret
0x0000000000453abc : jge 0x453abe ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x0000000000453acc : jge 0x453ace ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x0000000000453ba0 : jge 0x453ba2 ; mov eax, 0x180 ; pop rbp ; ret
0x0000000000453ff0 : jge 0x453fed ; pop rbp ; ret
0x0000000000454454 : jge 0x454451 ; pop rbp ; ret
0x00000000004549c6 : jge 0x4549c8 ; mov eax, 0xc0 ; pop rbp ; ret
0x0000000000454fc2 : jge 0x454fc4 ; mov eax, 0xc0 ; pop rbp ; ret
0x0000000000455ab8 : jge 0x455aba ; mov eax, 0x40 ; pop rbp ; ret
0x0000000000455b82 : jge 0x455b84 ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x0000000000455b92 : jge 0x455b94 ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x0000000000455c22 : jge 0x455c24 ; mov eax, 0x40 ; pop rbp ; ret
0x0000000000455cec : jge 0x455cee ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x0000000000455cfc : jge 0x455cfe ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x0000000000455dce : jge 0x455dcb ; pop rbp ; ret
0x0000000000456154 : jge 0x456156 ; mov eax, 0x40 ; pop rbp ; ret
0x000000000045621e : jge 0x456220 ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x000000000045622e : jge 0x456230 ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x0000000000456376 : jge 0x456373 ; pop rbp ; ret
0x00000000004567aa : jge 0x4567a7 ; pop rbp ; ret
0x000000000045c39f : jge 0x45c367 ; add byte ptr [rdx + rax - 0x15], dh ; ret 0x8b48
0x000000000045c91f : jge 0x45c966 ; add cl, cl ; ret
0x0000000000464a83 : jge 0x464a4b ; add byte ptr [rdx + rax - 0x15], dh ; ret 0x8b48
0x000000000046e783 : jge 0x46e74b ; add byte ptr [rdx + rax - 0x15], dh ; ret 0x8b48
0x0000000000471460 : jge 0x471462 ; mov eax, 0x80 ; pop rbp ; ret
0x000000000047196a : jge 0x47196c ; mov eax, 0x80 ; pop rbp ; ret
0x0000000000471ad8 : jge 0x471ada ; mov eax, 0x80 ; pop rbp ; ret
0x0000000000471c88 : jge 0x471c8a ; mov eax, 0x140 ; pop rbp ; ret
0x0000000000471fa6 : jge 0x471fa8 ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x0000000000471fb6 : jge 0x471fb8 ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x000000000047208a : jge 0x47208c ; mov eax, 0x180 ; pop rbp ; ret
0x00000000004724da : jge 0x4724d7 ; pop rbp ; ret
0x000000000047293e : jge 0x47293b ; pop rbp ; ret
0x0000000000472eb0 : jge 0x472eb2 ; mov eax, 0xc0 ; pop rbp ; ret
0x000000000048362f : jge 0x4835e8 ; and eax, dword ptr [rax] ; leave ; ret
0x000000000049eb57 : jge 0x49eb1f ; add byte ptr [rdx + rax - 0x15], dh ; ret 0x8b48
0x00000000004a1b2a : jge 0x4a1b2c ; mov eax, 0x80 ; pop rbp ; ret
0x00000000004a2034 : jge 0x4a2036 ; mov eax, 0x80 ; pop rbp ; ret
0x00000000004a21a2 : jge 0x4a21a4 ; mov eax, 0x80 ; pop rbp ; ret
0x00000000004a2352 : jge 0x4a2354 ; mov eax, 0x140 ; pop rbp ; ret
0x00000000004a2670 : jge 0x4a2672 ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x00000000004a2680 : jge 0x4a2682 ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x00000000004a2754 : jge 0x4a2756 ; mov eax, 0x180 ; pop rbp ; ret
0x00000000004a2ba4 : jge 0x4a2ba1 ; pop rbp ; ret
0x00000000004a3008 : jge 0x4a3005 ; pop rbp ; ret
0x00000000004a357a : jge 0x4a357c ; mov eax, 0xc0 ; pop rbp ; ret
0x00000000004b220a : jge 0x4b220a ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b4408 : jge 0x4b440a ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x00000000004b50a0 : jge 0x4b50a2 ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x00000000004b568c : jge 0x4b568e ; mov eax, 0x80 ; pop rbp ; ret
0x00000000004b5b96 : jge 0x4b5b98 ; mov eax, 0x80 ; pop rbp ; ret
0x00000000004b5d04 : jge 0x4b5d06 ; mov eax, 0x80 ; pop rbp ; ret
0x00000000004b5eb4 : jge 0x4b5eb6 ; mov eax, 0x140 ; pop rbp ; ret
0x00000000004b61d2 : jge 0x4b61d4 ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x00000000004b61e2 : jge 0x4b61e4 ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x00000000004b62b6 : jge 0x4b62b8 ; mov eax, 0x180 ; pop rbp ; ret
0x00000000004b6706 : jge 0x4b6703 ; pop rbp ; ret
0x00000000004b6b6a : jge 0x4b6b67 ; pop rbp ; ret
0x00000000004b70dc : jge 0x4b70de ; mov eax, 0xc0 ; pop rbp ; ret
0x00000000004b78f2 : jge 0x4b78f4 ; mov eax, 0x80 ; pop rbp ; ret
0x00000000004b7dfc : jge 0x4b7dfe ; mov eax, 0x80 ; pop rbp ; ret
0x00000000004b7f6a : jge 0x4b7f6c ; mov eax, 0x80 ; pop rbp ; ret
0x00000000004b811a : jge 0x4b811c ; mov eax, 0x140 ; pop rbp ; ret
0x00000000004b8438 : jge 0x4b843a ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x00000000004b8448 : jge 0x4b844a ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x00000000004b851c : jge 0x4b851e ; mov eax, 0x180 ; pop rbp ; ret
0x00000000004b896c : jge 0x4b8969 ; pop rbp ; ret
0x00000000004b8dd0 : jge 0x4b8dcd ; pop rbp ; ret
0x00000000004b9342 : jge 0x4b9344 ; mov eax, 0xc0 ; pop rbp ; ret
0x00000000004b9f04 : jge 0x4b9f01 ; pop rbp ; ret
0x00000000004babbe : jge 0x4babbb ; pop rbp ; ret
0x00000000004bb266 : jge 0x4bb263 ; pop rbp ; ret
0x00000000004bbe48 : jge 0x4bbe45 ; pop rbp ; ret
0x00000000004bc3e8 : jge 0x4bc3e5 ; pop rbp ; ret
0x00000000004bc9cc : jge 0x4bc9c9 ; pop rbp ; ret
0x00000000004bd19c : jge 0x4bd199 ; pop rbp ; ret
0x00000000004c6879 : jge 0x4c689f ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004d6ba9 : jge 0x4d6bcd ; add cl, cl ; ret
0x00000000004f21c6 : jge 0x4f21c2 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004fc9b5 : jge 0x4fc9d9 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000503c87 : jge 0x503c92 ; ret
0x0000000000509205 : jge 0x509230 ; xor eax, eax ; cmp rcx, r9 ; je 0x50923e ; ret
0x000000000050c947 : jge 0x50c96a ; add byte ptr [rax - 0x77], cl ; ret
0x000000000051135c : jge 0x511318 ; call rax
0x000000000052681f : jge 0x52683f ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000546895 : jge 0x5468b3 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054c97c : jge 0x54c99b ; add byte ptr [rax - 0x77], cl ; ret
0x000000000056fe84 : jge 0x56fe97 ; sub eax, esi ; mov dword ptr [rdi + 0x10], eax ; ret
0x0000000000583f40 : jge 0x583f5b ; add byte ptr [rax - 0x75], cl ; pop rbp ; clc ; leave ; ret
0x0000000000586204 : jge 0x586217 ; sub eax, esi ; mov dword ptr [rdi + 0x10], eax ; ret
0x0000000000589501 : jge 0x589517 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000595853 : jge 0x595879 ; call 0x6a1a94
0x0000000000596863 : jge 0x59687c ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b652f : jge 0x5b6572 ; or eax, 0xa715ff00 ; ret
0x00000000005b8dea : jge 0x5b8dfd ; add al, ch ; pop rsp ; retf -0x1c
0x00000000005bb45f : jge 0x5bb4da ; add al, r13b ; retf 0xc60
0x00000000005bb55f : jge 0x5bb5d9 ; add al, r13b ; retf 0xc5f
0x00000000005cf736 : jge 0x5cf739 ; mov eax, 1 ; nop ; pop rbp ; ret
0x00000000005dc3b0 : jge 0x5dc3b3 ; mov eax, 1 ; nop ; pop rbp ; ret
0x00000000005e687f : jge 0x5e6893 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000005e687e : jge 0x5e6894 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000005e71bc : jge 0x5e71be ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x00000000005e7d00 : jge 0x5e7d02 ; mov eax, 0x80 ; pop rbp ; ret
0x00000000005e820a : jge 0x5e820c ; mov eax, 0x80 ; pop rbp ; ret
0x00000000005e8378 : jge 0x5e837a ; mov eax, 0x80 ; pop rbp ; ret
0x00000000005e852a : jge 0x5e852c ; mov eax, 0x100 ; pop rbp ; ret
0x00000000005e892a : jge 0x5e8927 ; pop rbp ; ret
0x00000000005e8d8e : jge 0x5e8d8b ; pop rbp ; ret
0x00000000005e9a7a : jge 0x5e9a77 ; pop rbp ; ret
0x00000000005e9f06 : jge 0x5e9f08 ; mov eax, 0x100 ; pop rbp ; ret
0x00000000005ea628 : jge 0x5ea62a ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x00000000005eb018 : jge 0x5eb01a ; mov eax, 0x80 ; pop rbp ; ret
0x00000000005eb522 : jge 0x5eb524 ; mov eax, 0x80 ; pop rbp ; ret
0x00000000005eb690 : jge 0x5eb692 ; mov eax, 0x80 ; pop rbp ; ret
0x00000000005eb842 : jge 0x5eb844 ; mov eax, 0x100 ; pop rbp ; ret
0x00000000005ebc42 : jge 0x5ebc3f ; pop rbp ; ret
0x00000000005ec0a6 : jge 0x5ec0a3 ; pop rbp ; ret
0x00000000005ece14 : jge 0x5ece11 ; pop rbp ; ret
0x00000000005ed2a0 : jge 0x5ed2a2 ; mov eax, 0x100 ; pop rbp ; ret
0x00000000005ed8ba : jge 0x5ed8b7 ; pop rbp ; ret
0x00000000005edc2e : jge 0x5edc30 ; mov eax, 0x140 ; pop rbp ; ret
0x00000000005ee132 : jge 0x5ee134 ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x0000000000601c5f : jge 0x601c72 ; add al, bpl ; retf 0x7f8
0x000000000061af5e : jge 0x61af60 ; mov eax, 0x80 ; pop rbp ; ret
0x000000000061b468 : jge 0x61b46a ; mov eax, 0x80 ; pop rbp ; ret
0x000000000061b5d6 : jge 0x61b5d8 ; mov eax, 0x80 ; pop rbp ; ret
0x000000000061b748 : jge 0x61b74a ; mov eax, 0x180 ; pop rbp ; ret
0x000000000061bad4 : jge 0x61bad6 ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x000000000061bae4 : jge 0x61bae6 ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x000000000061bbb8 : jge 0x61bbba ; mov eax, 0x1c0 ; pop rbp ; ret
0x000000000061c024 : jge 0x61c021 ; pop rbp ; ret
0x000000000061c488 : jge 0x61c485 ; pop rbp ; ret
0x000000000061ca66 : jge 0x61ca68 ; mov eax, 0x100 ; pop rbp ; ret
0x000000000061d080 : jge 0x61d07d ; pop rbp ; ret
0x000000000062210e : jge 0x622111 ; mov dword ptr [rbp - 0xc], esi ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000006265a3 : jge 0x6265f1 ; mov esi, esp ; call rax
0x0000000000628275 : jge 0x6282a0 ; xor eax, eax ; cmp rcx, r9 ; je 0x6282ae ; ret
0x0000000000630d44 : jge 0x630d89 ; add byte ptr [rax - 0x73], cl ; pushfq ; ret
0x000000000063aebf : jge 0x63ae60 ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000647f76 : jge 0x647f3c ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x00000000006595de : jge 0x6595e7 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000066ab75 : jge 0x66ab7b ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x000000000066ac38 : jge 0x66ac36 ; nop ; pop rbp ; ret
0x000000000066ae68 : jge 0x66ae69 ; mov dword ptr [rbp - 0xc], esi ; nop ; pop rbp ; ret
0x0000000000677206 : jge 0x6772de ; ret
0x0000000000679571 : jge 0x679578 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000067e013 : jge 0x67dfa9 ; call 0x67aa74
0x0000000000689555 : jge 0x68956f ; xor eax, eax ; ret
0x000000000068c9d4 : jge 0x68c9df ; add byte ptr [rax - 0x77], cl ; ret
0x000000000068d891 : jge 0x68d89f ; call 0x689ad4
0x000000000068e346 : jge 0x68e351 ; add byte ptr [rax - 0x75], cl ; pop r8 ; pop rbx ; ret
0x000000000068e345 : jge 0x68e352 ; add byte ptr [rax - 0x75], cl ; pop r8 ; pop rbx ; ret
0x00000000006a4078 : jge 0x6a4076 ; nop ; pop rbp ; ret
0x00000000006a408c : jge 0x6a408a ; nop ; pop rbp ; ret
0x00000000006a761f : jge 0x6a7627 ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x00000000006d10a7 : jge 0x6d10cd ; xor eax, dword ptr [rax] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000006d45aa : jge 0x6d45a7 ; leave ; ret
0x00000000006d464a : jge 0x6d464d ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000006d46db : jge 0x6d46d8 ; leave ; ret
0x00000000006d472a : jge 0x6d472d ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000006d47f3 : jge 0x6d47f6 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000006d487f : jge 0x6d487c ; leave ; ret
0x00000000006d48d3 : jge 0x6d48d6 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000073700d : jge 0x736fe3 ; call rax
0x000000000073701d : jge 0x736ff3 ; call qword ptr [rax]
0x000000000073acb9 : jge 0x73acc4 ; add al, dh ; xor ch, bl ; jmp rax
0x000000000073acc9 : jge 0x73acd4 ; add byte ptr [rax], dl ; xor ebp, ebx ; call qword ptr [rax]
0x000000000073d005 : jge 0x73cfe9 ; call rax
0x000000000073dec5 : jge 0x73deaa ; call qword ptr [rax]
0x000000000073f1e5 : jge 0x73f1cc ; jmp rax
0x000000000073f1f5 : jge 0x73f1dc ; call qword ptr [rax]
0x0000000000742c0d : jge 0x742bfb ; jmp rax
0x00000000007442e1 : jge 0x7442ef ; add byte ptr [rax], bl ; fucomi st(5) ; call rax
0x0000000000747299 : jge 0x7472a8 ; add byte ptr [rax - 0x52], al ; hlt ; jmp qword ptr [rax]
0x00000000007472d1 : jge 0x7472e0 ; add byte ptr [rax], dl ; mov ah, 0xf4 ; jmp qword ptr [rax]
0x000000000074ac35 : jge 0x74ac32 ; jmp qword ptr [rax]
0x00000000007627e1 : jge 0x7627b9 ; jmp qword ptr [rbx]
0x0000000000778051 : jge 0x778031 ; call qword ptr [rbx]
0x0000000000778069 : jge 0x778049 ; call qword ptr [rbx]
0x0000000000793425 : jge 0x793431 ; add byte ptr [rdx], al ; adc ah, ah ; jmp qword ptr [rdi]
0x00000000007934d5 : jge 0x7934e1 ; add byte ptr [rdx], ch ; adc esp, esp ; call rsp
0x00000000007a6291 : jge 0x7a6280 ; call qword ptr [rsi]
0x00000000007b34ad : jge 0x7b34bb ; add al, ah ; sbb bh, ch ; jmp qword ptr [rcx]
0x00000000007c13b1 : jge 0x7c142d ; add bh, bh ; add ebx, esp ; add dword ptr [rcx], eax ; ret
0x00000000007d4dd9 : jge 0x7d4e55 ; add bh, bh ; inc dword ptr [rcx] ; xor eax, dword ptr [rcx] ; ret 2
0x00000000007d57a5 : jge 0x7d5821 ; add bh, bh ; add esp, eax ; add dword ptr [rcx], eax ; retf 0x901
0x00000000007f0309 : jge 0x7f0385 ; add bh, bh ; add edx, esp ; add dword ptr [rcx], eax ; ret 0x2c01
0x00000000007f3570 : jge 0x7f357a ; lodsb al, byte ptr [rsi] ; retf -0x27ff
0x00000000007fb0d3 : jge 0x7fb0eb ; out 0x7d, eax ; ret
0x00000000007fb9dd : jge 0x7fba59 ; add bh, bh ; add esi, eax ; add eax, dword ptr [rcx] ; retf
0x000000000040de50 : jl 0x40de7f ; sub eax, dword ptr [rax] ; leave ; ret
0x0000000000424830 : jl 0x4247e9 ; add byte ptr es:[rax + 0x29], cl ; ret
0x0000000000438ac7 : jl 0x438af2 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000442c01 : jl 0x442c2e ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000442c00 : jl 0x442c2f ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000453394 : jl 0x453398 ; dec ecx ; ret
0x00000000004533b4 : jl 0x4533b8 ; dec ecx ; ret
0x0000000000453475 : jl 0x453479 ; dec ecx ; ret
0x00000000004534a4 : jl 0x4534a8 ; dec ecx ; ret
0x0000000000466932 : jl 0x46695e ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004889f0 : jl 0x488a16 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000496964 : jl 0x49698d ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004969a0 : jl 0x4969c9 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000496c40 : jl 0x496c68 ; add cl, cl ; ret
0x00000000004a68d0 : jl 0x4a68f8 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a8d67 : jl 0x4a8d8e ; add cl, cl ; ret
0x00000000004a8d66 : jl 0x4a8d8f ; add cl, cl ; ret
0x00000000004b1519 : jl 0x4b1540 ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x8d48
0x00000000004cdf2e : jl 0x4cdfa6 ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x485f
0x00000000004cee8f : jl 0x4cef07 ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4c5f
0x00000000004cef7c : jl 0x4ceff4 ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4c5f
0x00000000004f5577 : jl 0x4f55a2 ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000004f6c72 : jl 0x4f6ca1 ; and al, ch ; xor ebx, dword ptr ss:[rcx] ; add bl, ch ; ret
0x00000000004f7670 : jl 0x4f760f ; or byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004f8efe : jl 0x4f8f1d ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004fd37d : jl 0x4fd3a8 ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000004fe3b8 : jl 0x4fe3e3 ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000004ff1e8 : jl 0x4ff213 ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000004ffdff : jl 0x4ffe0a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000500c6c : jl 0x500c97 ; sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000502eb9 : jl 0x502ee4 ; and byte ptr [rax - 0x77], cl ; ret
0x0000000000503963 : jl 0x50398e ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000050b6b3 : jl 0x50b6e1 ; or byte ptr [rcx + rcx*4 - 0xa], cl ; call 0x687958
0x000000000050edc1 : jl 0x50ede3 ; jmp qword ptr [rsi]
0x00000000005136f3 : jl 0x513745 ; mov edx, ebx ; mov rsi, r13 ; call r8
0x00000000005185bb : jl 0x518585 ; sbb al, ch ; insd dword ptr [rdi], dx ; ret 0x15
0x000000000051b902 : jl 0x51b8e2 ; ret
0x0000000000520026 : jl 0x520051 ; adc al, ch ; xchg eax, edx ; ret 0xffff
0x0000000000524c73 : jl 0x524c9e ; and byte ptr [rax - 0x77], cl ; ret
0x0000000000524dd4 : jl 0x524dff ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000005251e6 : jl 0x525210 ; or al, ch ; ret 0xffed
0x0000000000526f4a : jl 0x526f52 ; ret
0x0000000000527fdd : jl 0x528008 ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000005285fd : jl 0x528628 ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000005309b0 : jl 0x5309db ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000534ee7 : jl 0x534f12 ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000005438a4 : jl 0x5438d1 ; adc byte ptr [rcx], dh ; shr al, 0xa2 ; ret 0x13
0x00000000005438b0 : jl 0x5438dd ; adc byte ptr [rcx], dh ; shr al, 0x98 ; ret 0x13
0x000000000054393d : jl 0x543968 ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000543fcd : jl 0x543ff8 ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000545d06 : jl 0x545d30 ; or al, ch ; ret 0xfffb
0x0000000000547cd2 : jl 0x547d5b ; adc eax, dword ptr [rax] ; mov rdi, rbp ; call 0x6d4749
0x000000000054c2d5 : jl 0x54c2e6 ; test eax, eax ; jne 0x54c346 ; ret
0x000000000054c355 : jl 0x54c366 ; test eax, eax ; jne 0x54c3c6 ; ret
0x00000000005633fa : jl 0x563424 ; or byte ptr [rcx], bh ; ret 0x2f7d
0x000000000056374f : jl 0x56377a ; and byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000056a133 : jl 0x56a15e ; and byte ptr [rax - 0x77], cl ; ret
0x000000000056a294 : jl 0x56a2bf ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000056a6a6 : jl 0x56a6d0 ; or al, ch ; ret 0xffed
0x000000000057015a : jl 0x570166 ; fmul dword ptr [rcx + rcx*4 - 0x1e] ; jne 0x5701b0 ; call rdx
0x0000000000571bf6 : jl 0x571c02 ; fmul dword ptr [rcx + rcx*4 - 0x1e] ; jne 0x571c48 ; call rdx
0x0000000000571d4a : jl 0x571d52 ; ret
0x0000000000575b1b : jl 0x575b24 ; fsubr st(0) ; lodsd eax, dword ptr [rsi] ; ret 0xffff
0x000000000057ca9f : jl 0x57caca ; call 0x4c94f3
0x0000000000582bdf : jl 0x582c0a ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000586552 : jl 0x586532 ; ret
0x0000000000586dbe : jl 0x586da2 ; ret
0x000000000058969f : jl 0x5896b5 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058b37a : jl 0x58b3e1 ; str word ptr [rax - 0x77] ; ret
0x000000000058fa8a : jl 0x58fa92 ; ret
0x0000000000590d2a : jl 0x590d32 ; ret
0x0000000000594643 : jl 0x59466e ; and byte ptr [rax - 0x77], cl ; ret
0x00000000005947a4 : jl 0x5947cf ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000059cab8 : jl 0x59cad3 ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000059d761 : jl 0x59d78c ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000059e061 : jl 0x59e033 ; pop rbx ; ret
0x00000000005a501a : jl 0x5a5022 ; ret
0x00000000005ac106 : jl 0x5ac131 ; and byte ptr [rax - 0x77], cl ; ret
0x00000000005ac267 : jl 0x5ac292 ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000005acb27 : jl 0x5acb40 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b9f4a : jl 0x5b9f75 ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000005c5660 : jl 0x5c568b ; xor byte ptr [rax - 0x77], cl ; ret
0x00000000005c74ea : jl 0x5c7515 ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000005d8add : jl 0x5d8aee ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006030da : jl 0x6030e9 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006032d0 : jl 0x6032fb ; sbb byte ptr [rdi], cl ; pushfq ; ret 0x8545
0x000000000060bb54 : jl 0x60bb7f ; xor byte ptr [rax - 0x77], cl ; ret
0x000000000061accc : jl 0x61ad12 ; add bh, bh ; ror cl, 1 ; ret
0x0000000000632ec8 : jl 0x632ed8 ; xor dword ptr [rcx], eax ; je 0x632ed7 ; pop rbx ; ret
0x0000000000651c5b : jl 0x651c55 ; inc dword ptr [rcx - 0x80] ; std ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8348
0x0000000000658718 : jl 0x658743 ; sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000658a26 : jl 0x658a2f ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006612a0 : jl 0x6612cd ; ret 0xd189
0x00000000006675bc : jl 0x6675e7 ; or byte ptr [rax - 0x77], cl ; ret
0x000000000066b39a : jl 0x66b3b0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000066fdf5 : jl 0x66fe1f ; or al, 0xeb ; retf 0xf66
0x000000000067663f : jl 0x676656 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006772c1 : jl 0x677332 ; ret
0x00000000006772d0 : jl 0x677343 ; xor eax, eax ; ret
0x0000000000678db9 : jl 0x678e29 ; jb 0x678dc1 ; ret
0x000000000067ae3a : jl 0x67ae68 ; or byte ptr [rbx + 0x4c0f08f8], al ; ret 0x9848
0x000000000067caf5 : jl 0x67cb04 ; add byte ptr [rax - 0x77], cl ; fmul qword ptr [rax - 0x77] ; ret
0x000000000067caf4 : jl 0x67cb05 ; add byte ptr [rax - 0x77], cl ; fmul qword ptr [rax - 0x77] ; ret
0x0000000000687258 : jl 0x687280 ; dec dword ptr [rcx + rcx*4 - 0x1a] ; call 0x403c78
0x00000000006874ef : jl 0x687536 ; add byte ptr [rax - 0x77], cl ; fdiv dword ptr [rbp + 0x46] ; call rax
0x000000000068cde8 : jl 0x68ce13 ; or byte ptr [rax + 0x29], cl ; retf -0xfd7
0x0000000000691503 : jl 0x6914d1 ; jnp 0x69150e ; pop rbx ; ret
0x0000000000691502 : jl 0x6914d2 ; jnp 0x69150f ; pop rbx ; ret
0x00000000006a5b45 : jl 0x6a5b72 ; fcomp st(3) ; insb byte ptr [rdi], dx ; and al, 0xd8 ; ret
0x00000000006ac97d : jl 0x6ac9a8 ; and byte ptr [rax - 0x7d], cl ; ret
0x00000000006b1298 : jl 0x6b12c3 ; sub al, 0xe8 ; retf -1
0x00000000006b3ba8 : jl 0x6b3bd4 ; adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x148
0x00000000006b970e : jl 0x6b9739 ; adc byte ptr [rdi], cl ; ret 0x8d41
0x00000000006c45d1 : jl 0x6c45fd ; sub ecx, dword ptr [rax - 0x73] ; pop rsi ; retf 0x1ba
0x00000000006c7a4e : jl 0x6c7a70 ; inc dword ptr [rcx + rcx*4 - 5] ; call 0x403c78
0x00000000006d2a4a : jl 0x6d2a75 ; cmp byte ptr [rax - 0x7d], cl ; ret
0x00000000006d6e76 : jl 0x6d6ed3 ; retf 0x381a
0x000000000072248b : jl 0x722466 ; out dx, al ; retf 0x6fc4
0x0000000000722a84 : jl 0x722a71 ; pop rdx ; out 0x57, al ; retf
0x0000000000722aeb : jl 0x722abb ; retf
0x00000000007334b4 : jl 0x7334a7 ; stc ; jmp qword ptr [rdi + 0x16fff9eb]
0x0000000000735405 : jl 0x7353d8 ; jmp qword ptr [rax]
0x0000000000739094 : jl 0x73902c ; xlatb ; call qword ptr [rax]
0x000000000073bd85 : jl 0x73bd67 ; jmp qword ptr [rax]
0x000000000073deb5 : jl 0x73de9a ; call rax
0x000000000073f1a5 : jl 0x73f18c ; call qword ptr [rax]
0x000000000074494d : jl 0x74493f ; jmp qword ptr [rax]
0x000000000074aa81 : jl 0x74aa91 ; add byte ptr [rax], dh ; stc ; call rax
0x000000000074aa89 : jl 0x74aa99 ; add byte ptr [rax + 0x65], al ; stc ; call qword ptr [rax]
0x000000000074b8c4 : jl 0x74b8cd ; add byte ptr [rax], al ; sahf ; jmp 0x74b89c
0x000000000074b9c4 : jl 0x74b9ce ; add byte ptr [rax], al ; jp 0x74b9c8 ; retf
0x000000000074cfc4 : jl 0x74cfe5 ; add byte ptr [rax], al ; mov fs, word ptr [rdi - 0x34] ; call rsp
0x00000000007542c4 : jl 0x754258 ; add byte ptr [rax], al ; sbb byte ptr [rcx], cl ; iretd ; call rsp
0x0000000000754884 : jl 0x75481b ; add byte ptr [rax], al ; retf -0x30d2
0x0000000000755484 : jl 0x75542a ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; jae 0x755461 ; call qword ptr [rcx]
0x0000000000755cc4 : jl 0x755c72 ; add byte ptr [rax], al ; xchg eax, esi ; lahf ; iretd ; call rsp
0x0000000000757084 : jl 0x757044 ; add byte ptr [rax], al ; retf -0x31
0x000000000075a784 : jl 0x75a77d ; add byte ptr [rax], al ; mov cl, 0xd0 ; call qword ptr [rbx]
0x00000000007627b1 : jl 0x762789 ; call qword ptr [rdx]
0x0000000000767484 : jl 0x76744a ; add dword ptr [rax], eax ; pop rsi ; jo 0x767468 ; call rax
0x0000000000767730 : jl 0x76772a ; salc ; jmp qword ptr [rax]
0x000000000077c739 : jl 0x77c71a ; call qword ptr [rsi]
0x000000000078339d : jl 0x7833a8 ; add byte ptr [rax], al ; or bh, bl ; jmp qword ptr [rsi]
0x0000000000785084 : jl 0x785026 ; add eax, dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; inc edi ; call qword ptr [rdx]
0x0000000000789b84 : jl 0x789b6f ; add eax, dword ptr [rax] ; pop rax ; ret
0x0000000000790f41 : jl 0x790f27 ; jmp qword ptr [rcx]
0x000000000079e884 : jl 0x79e8be ; add eax, 0xe81ece00 ; call qword ptr [rdi]
0x00000000007a13c4 : jl 0x7a1429 ; add eax, 0xe8ae9800 ; call rsi
0x00000000007a42c4 : jl 0x7a4258 ; add eax, 0xea304800 ; jmp rsi
0x00000000007a7a84 : jl 0x7a7a50 ; add eax, 0xec10a800 ; jmp qword ptr [rsi]
0x00000000007c47ed : jl 0x7c47e4 ; add eax, 0x5059e00 ; retf
0x00000000007d4b65 : jl 0x7d4b6f ; retf
0x00000000007fa52b : jl 0x7fa535 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jp 0x7fa53d ; fsub dword ptr [rbp] ; retf
0x0000000000407c73 : jle 0x407ca3 ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0x2cca
0x00000000004169d3 : jle 0x416a03 ; add cl, cl ; ret
0x00000000004169f6 : jle 0x416a26 ; add cl, cl ; ret
0x00000000004289b0 : jle 0x4289de ; add byte ptr [rax - 0x77], cl ; ret 0x858b
0x00000000004388b8 : jle 0x4388e3 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000442967 : jle 0x442994 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004888aa : jle 0x4888d0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b7cce : jle 0x4b7cf3 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000004b885a : jle 0x4b887d ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b9336 : jle 0x4b92ea ; cli ; dec ecx ; ret
0x00000000004c9f0e : jle 0x4c9f11 ; dec dword ptr [rax - 0x73] ; ror byte ptr [r9 - 0x77], 1 ; ret 0x8948
0x00000000004f6e87 : jle 0x4f6e92 ; ret
0x000000000051828a : jle 0x518292 ; ret
0x0000000000519f01 : jle 0x519f15 ; add edx, 1 ; ret
0x0000000000519f81 : jle 0x519f95 ; sub edx, 1 ; ret
0x0000000000526be8 : jle 0x526c00 ; lea edx, dword ptr [rsi - 1] ; mov rax, rdi ; ret
0x000000000052b1d2 : jle 0x52b1f9 ; setl al ; ret
0x000000000052b1e2 : jle 0x52b209 ; setl al ; ret
0x000000000052c05a : jle 0x52c023 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rax
0x000000000053e601 : jle 0x53e5e8 ; mov eax, esi ; add rsp, 8 ; ret
0x000000000053e6c3 : jle 0x53e6cf ; mov dword ptr [rax], edx ; add rsp, 8 ; ret
0x0000000000544e61 : jle 0x544e84 ; setl al ; ret
0x0000000000544e71 : jle 0x544e94 ; setl al ; ret
0x0000000000547cd3 : jle 0x547cf0 ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x6d4748
0x0000000000547d4a : jle 0x547d64 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054f26a : jle 0x54f233 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rax
0x000000000056fc61 : jle 0x56fc75 ; add edx, 1 ; ret
0x000000000056fce1 : jle 0x56fcf5 ; sub edx, 1 ; ret
0x00000000005719f8 : jle 0x571a10 ; lea edx, dword ptr [rsi - 1] ; mov rax, rdi ; ret
0x00000000005852a1 : jle 0x5852b5 ; add edx, 1 ; ret
0x0000000000585321 : jle 0x585335 ; sub edx, 1 ; ret
0x00000000005853a1 : jle 0x5853b5 ; add edx, 1 ; ret
0x0000000000585421 : jle 0x585435 ; sub edx, 1 ; ret
0x0000000000587c7c : jle 0x587c92 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000587c89 : jle 0x587ca2 ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; lodsb al, byte ptr [rsi] ; retf 0x14
0x000000000058c927 : jle 0x58c941 ; add bl, ch ; retf -0x74b8
0x000000000058f738 : jle 0x58f750 ; lea edx, dword ptr [rsi - 1] ; mov rax, rdi ; ret
0x00000000005909b8 : jle 0x5909d0 ; lea edx, dword ptr [rsi - 1] ; mov rax, rdi ; ret
0x000000000059102e : jle 0x59101f ; str word ptr [rax + 0x29] ; ret
0x000000000059c4b1 : jle 0x59c4c5 ; sub edx, 1 ; ret
0x00000000005a4bd8 : jle 0x5a4bf0 ; lea edx, dword ptr [rsi - 1] ; mov rax, rdi ; ret
0x00000000005a8876 : jle 0x5a888e ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005ae277 : jle 0x5ae2ca ; lea eax, dword ptr [rax + 8] ; add rsp, 8 ; ret
0x00000000005af85a : jle 0x5af8a8 ; add rsp, 8 ; ret
0x00000000005af8f5 : jle 0x5af940 ; add rsp, 8 ; ret
0x00000000005e6700 : jle 0x5e6714 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000005e8848 : jle 0x5e8858 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005fac73 : jle 0x5fac2b ; add rsp, 0x38 ; ret
0x00000000005febbe : jle 0x5feb6d ; or byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000005ff4d5 : jle 0x5ff4da ; ret
0x0000000000602e7f : jle 0x602e8e ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006188af : jle 0x6188bf ; add cl, cl ; ret
0x0000000000618aef : jle 0x618aff ; add cl, cl ; ret
0x000000000062676e : jle 0x62677e ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000647cb1 : jle 0x647cbe ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x6d4748
0x000000000065e18e : jle 0x65e1c3 ; add al, 0 ; add rsp, 8 ; ret
0x000000000066078e : jle 0x6607e7 ; mov esi, 1 ; call rax
0x0000000000662791 : jle 0x6627e1 ; lea eax, dword ptr [rdx + rax + 5] ; ret
0x000000000066d40b : jle 0x66d41a ; pop rbx ; pop r14 ; ret
0x00000000006774ac : jle 0x6774b3 ; pop rbx ; ret
0x0000000000678594 : jle 0x678584 ; xor eax, eax ; ret
0x0000000000681a39 : jle 0x681ab4 ; add bl, al ; nop dword ptr [rax] ; ret
0x0000000000689551 : jle 0x689568 ; cmp ecx, edx ; jge 0x689573 ; xor eax, eax ; ret
0x000000000068c161 : jle 0x68c0ee ; ret 0xf229
0x00000000006a1787 : jle 0x6a17a6 ; add rsp, 8 ; ret
0x00000000006a1b54 : jle 0x6a1b4a ; mov eax, 1 ; ret
0x00000000006a7cc9 : jle 0x6a7cd0 ; dec dword ptr [rax - 0x77] ; out dx, eax ; call 0x6d4748
0x00000000006a8a51 : jle 0x6a8a60 ; mov qword ptr [rdi], rsi ; ret
0x00000000006bce3c : jle 0x6bce46 ; movsx edi, di ; call 0x6a9097
0x00000000006c0e9c : jle 0x6c0eb9 ; mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000006c0f8c : jle 0x6c0fa9 ; fld xword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000006c125c : jle 0x6c1279 ; mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000006c12fc : jle 0x6c1319 ; mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000006c9db9 : jle 0x6c9dd3 ; movzx eax, al ; mov dword ptr [rsi + 0xc], eax ; ret
0x00000000006d11cb : jle 0x6d11df ; xchg eax, edi ; ret 0x8441
0x0000000000721c82 : jle 0x721ce5 ; lodsd eax, dword ptr [rsi] ; ret 0x4765
0x0000000000721c81 : jle 0x721ce6 ; lodsd eax, dword ptr [rsi] ; ret 0x4765
0x000000000072247f : jle 0x7224c0 ; jg 0x722461 ; pop rbp ; ret
0x0000000000722a06 : jle 0x722a4e ; ret 0x2d4f
0x0000000000722c81 : jle 0x722c7b ; in al, dx ; ret 0x6cad
0x0000000000722fcb : jle 0x722f99 ; sbb byte ptr [rax + 0x49], al ; ret 0x5657
0x0000000000723235 : jle 0x7231bb ; loopne 0x7232b8 ; retf
0x0000000000734371 : jle 0x73437a ; add byte ptr [rbp + rsi*2 - 0x33], ah ; call rax
0x0000000000738a14 : jle 0x7389bd ; salc ; jmp qword ptr [rax]
0x0000000000738dfc : jle 0x738df4 ; salc ; jmp qword ptr [rax]
0x000000000073ad09 : jle 0x73ad14 ; add al, al ; xor ebp, ebx ; call rax
0x000000000073d015 : jle 0x73cff9 ; jmp qword ptr [rax]
0x00000000007434a5 : jle 0x743494 ; jmp rax
0x000000000074497d : jle 0x74496f ; jmp rax
0x0000000000753595 : jle 0x75359d ; add al, cl ; mov cl, 0xce ; call rsp
0x0000000000753594 : jle 0x75359e ; add al, cl ; mov cl, 0xce ; call rsp
0x0000000000766b70 : jle 0x766b81 ; salc ; call rsp
0x0000000000783f89 : jle 0x783f6c ; call qword ptr [rax]
0x0000000000794579 : jle 0x794561 ; call qword ptr [rax]
0x00000000007966d8 : jle 0x79671c ; in eax, -1 ; retf
0x00000000007a6431 : jle 0x7a6420 ; call qword ptr [rdx]
0x00000000007c5d79 : jle 0x7c5d7d ; ret 0x31e
0x00000000007c5d78 : jle 0x7c5d7e ; ret 0x31e
0x00000000007ebbbf : jle 0x7ebbc6 ; ret
0x00000000007f358d : jle 0x7f3597 ; sti ; retf -0x23ff
0x00000000007f489d : jle 0x7f48cc ; retf
0x00000000007f48a0 : jle 0x7f48d6 ; enter 0x2d7e, -0x3b ; jle 0x7f48de ; ret 0x2f7e
0x00000000007f48a6 : jle 0x7f48d8 ; ret 0x2f7e
0x000000000069d265 : jmp 0x170952d
0x000000000040ce5c : jmp 0x40ce22
0x000000000040d56c : jmp 0x40d532
0x0000000000410d58 : jmp 0x410d1e
0x000000000041390f : jmp 0x4138d5
0x00000000004140af : jmp 0x414075
0x000000000041c950 : jmp 0x41c916
0x000000000041d06b : jmp 0x41d031
0x0000000000420dab : jmp 0x420d71
0x0000000000422d81 : jmp 0x422d47
0x0000000000423521 : jmp 0x4234e7
0x00000000004294be : jmp 0x42948c
0x000000000042b942 : jmp 0x42b908
0x000000000042c052 : jmp 0x42c018
0x000000000042f83e : jmp 0x42f804
0x00000000004323a1 : jmp 0x432367
0x0000000000432b41 : jmp 0x432b07
0x000000000043c19e : jmp 0x43c164
0x000000000043cf82 : jmp 0x43cf50
0x000000000043d372 : jmp 0x43d340
0x000000000043d886 : jmp 0x43d854
0x0000000000447880 : jmp 0x447846
0x0000000000448344 : jmp 0x448312
0x0000000000448858 : jmp 0x448826
0x000000000044fe17 : jmp 0x44fddd
0x00000000004509e1 : jmp 0x4509a7
0x00000000004519d9 : jmp 0x45199f
0x00000000004531bd : jmp 0x453183
0x0000000000453d87 : jmp 0x453d4d
0x0000000000455251 : jmp 0x455217
0x0000000000458534 : jmp 0x4584fa
0x0000000000458ff8 : jmp 0x458fc6
0x000000000045950c : jmp 0x4594da
0x000000000046132e : jmp 0x4612f4
0x0000000000461df2 : jmp 0x461dc0
0x0000000000462306 : jmp 0x4622d4
0x000000000046b02e : jmp 0x46aff4
0x000000000046baf2 : jmp 0x46bac0
0x000000000046c006 : jmp 0x46bfd4
0x00000000004716a7 : jmp 0x47166d
0x0000000000472271 : jmp 0x472237
0x0000000000478a47 : jmp 0x478a0d
0x00000000004791d0 : jmp 0x479196
0x0000000000479d2a : jmp 0x479cf8
0x000000000048d35d : jmp 0x48d32b
0x000000000049b3aa : jmp 0x49b370
0x000000000049be6e : jmp 0x49be3c
0x000000000049c382 : jmp 0x49c350
0x00000000004a1d71 : jmp 0x4a1d37
0x00000000004a293b : jmp 0x4a2901
0x00000000004b58d3 : jmp 0x4b5899
0x00000000004b649d : jmp 0x4b6463
0x00000000004b7b39 : jmp 0x4b7aff
0x00000000004b7b51 : jmp 0x4b7b1f
0x00000000004b8703 : jmp 0x4b86c9
0x00000000004bb91f : jmp 0x4bb8e5
0x00000000004bba43 : jmp 0x4bba09
0x00000000004c23fd : jmp 0x4c23c3
0x00000000004c3619 : jmp 0x4c35df
0x00000000004f11d4 : jmp 0x4f119a
0x00000000004f6c7a : jmp 0x4f6c40
0x00000000004f6c94 : jmp 0x4f6c62
0x00000000004fbaa9 : jmp 0x4fba77
0x00000000004fd553 : jmp 0x4fd521
0x0000000000509a08 : jmp 0x5099ce
0x000000000051d77e : jmp 0x51d74c
0x0000000000523f19 : jmp 0x523edf
0x00000000005305ad : jmp 0x53057b
0x0000000000538bbd : jmp 0x538b8b
0x0000000000546aad : jmp 0x546a7b
0x0000000000548603 : jmp 0x5485c9
0x000000000054d9f4 : jmp 0x54d9ba
0x0000000000553b53 : jmp 0x553b19
0x00000000005541d0 : jmp 0x554196
0x000000000055cd93 : jmp 0x55cd61
0x0000000000561706 : jmp 0x5616cc
0x0000000000568dbf : jmp 0x568d8d
0x00000000005693d9 : jmp 0x56939f
0x000000000057c6bc : jmp 0x57c68a
0x000000000057c8b2 : jmp 0x57c878
0x00000000005815b7 : jmp 0x58157d
0x00000000005898ee : jmp 0x5898bc
0x000000000059931f : jmp 0x5992ed
0x000000000059eea6 : jmp 0x59ee74
0x00000000005a4e6e : jmp 0x5a4e3c
0x00000000005bae00 : jmp 0x5badc6
0x00000000005cd08f : jmp 0x5cd055
0x00000000005cd2bd : jmp 0x5cd283
0x00000000005cd4eb : jmp 0x5cd4b1
0x00000000005cd710 : jmp 0x5cd6d6
0x00000000005cf368 : jmp 0x5cf32e
0x00000000005cf589 : jmp 0x5cf54f
0x00000000005d4bd9 : jmp 0x5d4b9f
0x00000000005d4be8 : jmp 0x5d4bb6
0x00000000005d7f72 : jmp 0x5d7f38
0x00000000005d8194 : jmp 0x5d815a
0x00000000007fa17a : jmp 0x5d86382
0x00000000005d9be5 : jmp 0x5d9bab
0x00000000005d9e13 : jmp 0x5d9dd9
0x00000000005da041 : jmp 0x5da007
0x00000000005da266 : jmp 0x5da22c
0x00000000005dbfd3 : jmp 0x5dbf99
0x00000000005dc202 : jmp 0x5dc1c8
0x00000000005e1ab2 : jmp 0x5e1a78
0x00000000005e1ac1 : jmp 0x5e1a8f
0x00000000005e5463 : jmp 0x5e5429
0x00000000005e5693 : jmp 0x5e5659
0x00000000005e7f47 : jmp 0x5e7f0d
0x00000000005e8701 : jmp 0x5e86c7
0x00000000005e92b1 : jmp 0x5e927f
0x00000000005e9341 : jmp 0x5e9307
0x00000000005eb25f : jmp 0x5eb225
0x00000000005eba19 : jmp 0x5eb9df
0x00000000005fadac : jmp 0x5fad7a
0x0000000000602db2 : jmp 0x602d78
0x000000000060a71a : jmp 0x60a6e0
0x00000000006143ce : jmp 0x614394
0x0000000000614876 : jmp 0x61483c
0x0000000000615b62 : jmp 0x615b28
0x000000000061b1a5 : jmp 0x61b16b
0x000000000061bdb3 : jmp 0x61bd79
0x0000000000628a68 : jmp 0x628a2e
0x000000000062c2f4 : jmp 0x62c2c2
0x00000000006304b2 : jmp 0x630478
0x0000000000642f6c : jmp 0x63f1f1
0x0000000000644f0b : jmp 0x644ed1
0x0000000000646f21 : jmp 0x646eef
0x00000000006499c8 : jmp 0x649996
0x00000000006560b6 : jmp 0x656084
0x000000000067d953 : jmp 0x67d921
0x000000000068d8cc : jmp 0x689ba2
0x000000000068b0ba : jmp 0x68b088
0x000000000068c26a : jmp 0x68c238
0x000000000068c719 : jmp 0x68c6e7
0x000000000068cb58 : jmp 0x68cb26
0x0000000000690b8f : jmp 0x690b55
0x0000000000690bdf : jmp 0x690ba5
0x000000000069115f : jmp 0x691125
0x00000000006911af : jmp 0x691175
0x000000000069a1dd : jmp 0x696c45
0x000000000069ac56 : jmp 0x697754
0x00000000006a4ba4 : jmp 0x6a4b6a
0x00000000006a513c : jmp 0x6a5102
0x00000000006cb2de : jmp 0x6a7db2
0x00000000006a96de : jmp 0x6a96ac
0x00000000006aa6de : jmp 0x6aa6ac
0x000000000059de5c : jmp 0x6aa8e2
0x00000000006b50fa : jmp 0x6b50c0
0x00000000006c5794 : jmp 0x6c575a
0x00000000006c8f43 : jmp 0x6c8f11
0x00000000006cdf23 : jmp 0x6cdee9
0x00000000006d6e82 : jmp 0x6d6e50
0x000000000074b8a9 : jmp 0x74b877
0x000000000074b8c9 : jmp 0x74b897
0x00000000007a2c92 : jmp 0x7aef98
0x00000000007a2c91 : jmp 0x7aef99
0x00000000007a40ba : jmp 0x7d0bc0
0x00000000007f4070 : jmp 0x7f403e
0x00000000004fefd1 : jmp 0xffffffff899cb261
0x0000000000662c89 : jmp 0xffffffff8baef691
0x000000000073f4f1 : jmp 0xffffffffc373f4fe
0x000000000073f4f9 : jmp 0xffffffffc393f506
0x00000000005f9c8e : jmp 0xffffffffc398e4d6
0x00000000006a52e3 : jmp 0xffffffffc3c362de
0x000000000056abc3 : jmp 0xffffffffc3dff4cb
0x000000000056d800 : jmp 0xffffffffc3e02108
0x000000000056e4f8 : jmp 0xffffffffc3e02e00
0x0000000000572a5d : jmp 0xffffffffc3e07365
0x0000000000642bbe : jmp 0xffffffffc3ed2bca
0x000000000048ff57 : jmp 0xffffffffc411ff82
0x00000000005ed2c4 : jmp 0xffffffffc428d2cb
0x00000000005ed2c3 : jmp 0xffffffffc428d2cc
0x00000000006a0d8e : jmp 0xffffffffc4340d96
0x000000000057fd5f : jmp 0xffffffffcc40fd67
0x000000000057fd5e : jmp 0xffffffffcc40fd68
0x0000000000413f02 : jmp 0xffffffffd1403f68
0x0000000000413f1e : jmp 0xffffffffd1403f84
0x0000000000413fda : jmp 0xffffffffd1404040
0x0000000000423f90 : jmp 0xffffffffd1413ff5
0x0000000000423fb4 : jmp 0xffffffffd1414019
0x00000000004f3f05 : jmp 0xffffffffd14e3f5d
0x00000000005d3fd6 : jmp 0xffffffffd15c4020
0x000000000051d9d0 : jmp 0xffffffffd251114d
0x000000000051dbb7 : jmp 0xffffffffd2512234
0x00000000005405ee : jmp 0xffffffffd253386b
0x000000000054c649 : jmp 0xffffffffd253fec6
0x0000000000589cf7 : jmp 0xffffffffd257e374
0x000000000060ae18 : jmp 0xfffffffff7df7107
0x00000000007336a3 : jmp qword ptr [rax - 0x2f000603]
0x00000000007388f7 : jmp qword ptr [rax - 0x35]
0x00000000007451cf : jmp qword ptr [rax - 0x3d]
0x000000000041ac41 : jmp qword ptr [rax]
0x0000000000440b79 : jmp qword ptr [rbx]
0x00000000004b479c : jmp qword ptr [rcx]
0x00000000007334b7 : jmp qword ptr [rdi + 0x16fff9eb]
0x000000000043e66a : jmp qword ptr [rdi]
0x00000000006acdfb : jmp qword ptr [rdx*8 + 0x72ca00]
0x0000000000451a50 : jmp qword ptr [rdx]
0x00000000004092c8 : jmp qword ptr [rsi]
0x0000000000502939 : jmp r8
0x00000000006d4ced : jmp r9
0x0000000000408a75 : jmp rax
0x00000000004d14d3 : jmp rbx
0x000000000040aed3 : jmp rcx
0x0000000000583d08 : jmp rdi
0x00000000005569ed : jmp rdx
0x0000000000425f27 : jmp rsi
0x0000000000425efb : jmp rsp
0x0000000000408567 : jne 0x408597 ; add bl, ch ; mov word ptr [rax - 0x77], cs ; ret
0x0000000000428b37 : jne 0x428b9b ; sub dword ptr [rax], eax ; leave ; ret
0x00000000004292d7 : jne 0x429305 ; add byte ptr [rax - 0x77], cl ; ret 0x858b
0x00000000004292d6 : jne 0x429306 ; add byte ptr [rax - 0x77], cl ; ret 0x858b
0x000000000043abe4 : jne 0x43abb5 ; mov eax, dword ptr [rbp - 4] ; nop ; leave ; ret
0x000000000043cf7c : jne 0x43cf8b ; add dword ptr [rbp - 0x34], 1 ; jmp 0x43cf56
0x000000000043d36c : jne 0x43d37b ; add dword ptr [rbp - 0x34], 1 ; jmp 0x43d346
0x000000000044833e : jne 0x44834d ; add dword ptr [rbp - 0x34], 1 ; jmp 0x448318
0x0000000000455acc : jne 0x455ac4 ; mov dword ptr [rbp - 0x14], edx ; pop rbp ; ret
0x0000000000455ade : jne 0x455ad6 ; mov dword ptr [rbp - 0x14], edx ; pop rbp ; ret
0x0000000000455b1c : jne 0x455b16 ; mov eax, 1 ; pop rbp ; ret
0x0000000000455c36 : jne 0x455c2e ; mov dword ptr [rbp - 0x14], edx ; pop rbp ; ret
0x0000000000455c48 : jne 0x455c40 ; mov dword ptr [rbp - 0x14], edx ; pop rbp ; ret
0x0000000000455c86 : jne 0x455c80 ; mov eax, 1 ; pop rbp ; ret
0x0000000000456168 : jne 0x456160 ; mov dword ptr [rbp - 0x14], edx ; pop rbp ; ret
0x000000000045617a : jne 0x456172 ; mov dword ptr [rbp - 0x14], edx ; pop rbp ; ret
0x00000000004561b8 : jne 0x4561b2 ; mov eax, 1 ; pop rbp ; ret
0x0000000000458ff2 : jne 0x459001 ; add dword ptr [rbp - 0x34], 1 ; jmp 0x458fcc
0x0000000000461dec : jne 0x461dfb ; add dword ptr [rbp - 0x34], 1 ; jmp 0x461dc6
0x000000000046baec : jne 0x46bafb ; add dword ptr [rbp - 0x34], 1 ; jmp 0x46bac6
0x0000000000479d24 : jne 0x479d33 ; add dword ptr [rbp - 0x34], 1 ; jmp 0x479cfe
0x0000000000493427 : jne 0x493403 ; and al, byte ptr [rax] ; leave ; ret
0x00000000004973aa : jne 0x4973d2 ; add cl, cl ; ret
0x000000000049be68 : jne 0x49be77 ; add dword ptr [rbp - 0x34], 1 ; jmp 0x49be42
0x00000000004b5ea7 : jne 0x4b5edc ; sbb al, 0 ; leave ; ret
0x00000000004d911f : jne 0x4d9143 ; add cl, cl ; ret
0x00000000004e31c9 : jne 0x4e3219 ; mov rax, qword ptr [rip + 0x51f716] ; call rax
0x00000000004f786a : jne 0x4f79f8 ; call rax
0x00000000004f7fcf : jne 0x4f813b ; call rax
0x00000000004f802d : jne 0x4f8155 ; call rax
0x00000000004f81d9 : jne 0x4f81e6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004faa79 : jne 0x4fae7b ; xor ecx, ecx ; call r8
0x00000000004fbf31 : jne 0x4fc814 ; mov rdi, r12 ; call rax
0x00000000004fbf51 : jne 0x4fc898 ; mov rdi, r12 ; call rax
0x00000000004fc5aa : jne 0x4fc951 ; mov rdi, r12 ; call rax
0x00000000004fc7aa : jne 0x4fcb5a ; mov rdi, r12 ; call rax
0x00000000004fc75a : jne 0x4fcb6c ; mov rdi, r12 ; call rax
0x00000000005011bd : jne 0x5011cd ; mov esi, 1 ; jmp rax
0x00000000005019dd : jne 0x501ae3 ; call rax
0x0000000000501aa9 : jne 0x501b39 ; call rax
0x0000000000503adf : jne 0x503bbb ; mov rdi, rbx ; call rax
0x0000000000503b29 : jne 0x503bf7 ; mov rdi, rbx ; call rax
0x0000000000503c5d : jne 0x503c63 ; jmp rax
0x0000000000503cb4 : jne 0x503cc9 ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005043f2 : jne 0x504417 ; mov rdi, rbx ; call rax
0x0000000000504432 : jne 0x504454 ; mov rdi, rbx ; call rax
0x0000000000504472 : jne 0x504494 ; mov rdi, rbx ; call rax
0x00000000005044ae : jne 0x5044b4 ; jmp rax
0x00000000005053cf : jne 0x5053db ; pop rbx ; ret
0x0000000000505567 : jne 0x5057ab ; mov rdx, rsp ; call rax
0x000000000050762d : jne 0x50767b ; mov esi, esp ; call rcx
0x000000000050762c : jne 0x5076a8 ; mov rsi, rsp ; call rcx
0x00000000005079e6 : jne 0x507a3f ; mov rdi, rbp ; mov rsi, rbx ; call rax
0x0000000000507d84 : jne 0x507d89 ; ret
0x0000000000507d95 : jne 0x507d9a ; ret
0x000000000050845f : jne 0x50847e ; add byte ptr [rax + 0x29], cl ; ret
0x000000000050845e : jne 0x50847f ; add byte ptr [rax + 0x29], cl ; ret
0x00000000005086d2 : jne 0x5086c8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000050ac4f : jne 0x50ac36 ; xor eax, eax ; xor edx, edx ; pop rbx ; ret
0x000000000050adfd : jne 0x50ae51 ; mov rsi, rsp ; call rax
0x000000000050bd3d : jne 0x50bd4d ; mov esi, 1 ; jmp rax
0x000000000050be9c : jne 0x50be8a ; ret
0x000000000050beed : jne 0x50befd ; mov esi, 1 ; jmp rax
0x000000000050bf5d : jne 0x50bf6d ; mov esi, 1 ; jmp rax
0x000000000050f57d : jne 0x50f58d ; mov esi, 1 ; jmp rax
0x000000000050f60d : jne 0x50f61d ; mov esi, 1 ; jmp rax
0x000000000050f6bd : jne 0x50f6cd ; mov esi, 1 ; jmp rax
0x000000000050f8ad : jne 0x50f8c8 ; test al, 1 ; jne 0x50f8e2 ; xor esi, esi ; jmp rax
0x000000000050f8b1 : jne 0x50f8de ; xor esi, esi ; jmp rax
0x000000000050fad0 : jne 0x50fb37 ; call rax
0x000000000050fbdf : jne 0x50fbd2 ; ret
0x000000000050fd3c : jne 0x50fdcd ; mov rdi, rbx ; call rax
0x0000000000510182 : jne 0x5102a7 ; mov rdi, rbx ; call rax
0x00000000005101c4 : jne 0x5102b4 ; mov rdi, rbx ; call rax
0x00000000005101e2 : jne 0x5102c1 ; mov rdi, r13 ; call rdx
0x0000000000510223 : jne 0x51038b ; mov rdi, rbx ; call rdx
0x0000000000510206 : jne 0x5103fd ; mov rdi, r13 ; call rax
0x0000000000510568 : jne 0x5106e6 ; mov rdi, rbx ; call rax
0x0000000000510620 : jne 0x510777 ; mov rdi, rbx ; call rax
0x0000000000510aa5 : jne 0x510b4e ; mov rdi, rbx ; call rax
0x0000000000510c05 : jne 0x510cae ; mov rdi, rbx ; call rax
0x0000000000511032 : jne 0x511053 ; add rsp, 8 ; ret
0x0000000000511122 : jne 0x5112ff ; mov rdi, r12 ; call rax
0x00000000005115b6 : jne 0x5115f9 ; mov rdi, rbp ; call rcx
0x0000000000511675 : jne 0x5116e9 ; lea rdx, qword ptr [rbp - 0x30] ; mov rsi, r13 ; call rax
0x0000000000511aa1 : jne 0x511ca5 ; mov rdi, rbp ; call rax
0x0000000000512525 : jne 0x51283b ; call rax
0x0000000000512b8d : jne 0x512b9d ; mov esi, 1 ; jmp rax
0x0000000000512da5 : jne 0x512db2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000512e65 : jne 0x512e85 ; mov rdi, r12 ; call rcx
0x0000000000513280 : jne 0x51329f ; add rsp, 8 ; jmp rax
0x0000000000513305 : jne 0x513335 ; add rsp, 8 ; jmp rax
0x00000000005133a9 : jne 0x5133c5 ; call rax
0x00000000005133e2 : jne 0x5133e8 ; jmp rax
0x0000000000513425 : jne 0x51342b ; jmp rax
0x0000000000513465 : jne 0x51346b ; jmp rax
0x00000000005134a5 : jne 0x5134ab ; jmp rax
0x0000000000513516 : jne 0x513532 ; call rax
0x0000000000513555 : jne 0x51355b ; jmp rax
0x0000000000513592 : jne 0x513598 ; jmp rax
0x00000000005135d6 : jne 0x5135dc ; jmp rax
0x00000000005136f2 : jne 0x513779 ; mov rdx, rbx ; mov rsi, r13 ; call r8
0x000000000051385d : jne 0x513923 ; call rax
0x0000000000513cef : jne 0x513de9 ; call rax
0x0000000000514d67 : jne 0x514d49 ; add al, r13b ; ret 0x16c7
0x0000000000516e0d : jne 0x516e1d ; mov esi, 1 ; jmp rax
0x0000000000516e86 : jne 0x516ea5 ; mov esi, 1 ; call rax
0x0000000000517acd : jne 0x517cdc ; call rax
0x0000000000517dc0 : jne 0x517da0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000517db2 : jne 0x517dce ; mov rsi, rbx ; call rax
0x0000000000517e50 : jne 0x517e30 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000517e42 : jne 0x517e5e ; mov rsi, rbx ; call rax
0x0000000000517ff0 : jne 0x517fd0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000517fe2 : jne 0x517ffe ; mov rsi, rbx ; call rax
0x0000000000518080 : jne 0x518060 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000518072 : jne 0x51808e ; mov rsi, rbx ; call rax
0x0000000000518865 : jne 0x5188fd ; mov esi, ebx ; call rax
0x00000000005187cf : jne 0x51892a ; call rax
0x00000000005189e0 : jne 0x518a88 ; call rdx
0x0000000000518a41 : jne 0x518ab3 ; call rax
0x0000000000519312 : jne 0x519325 ; jmp rax
0x0000000000519346 : jne 0x519364 ; call rax
0x0000000000519386 : jne 0x5193ae ; call rax
0x00000000005193d6 : jne 0x5193f5 ; call rax
0x0000000000519416 : jne 0x519438 ; call rax
0x0000000000519452 : jne 0x519458 ; jmp rax
0x0000000000519498 : jne 0x51949e ; jmp rax
0x00000000005194d2 : jne 0x5194d8 ; jmp rax
0x0000000000519512 : jne 0x519525 ; jmp rax
0x0000000000519dd8 : jne 0x519ead ; call rax
0x000000000051a0af : jne 0x51a2db ; mov rdi, rbx ; call rax
0x000000000051a1ee : jne 0x51a2e8 ; mov rdi, rbx ; call rax
0x000000000051a03b : jne 0x51a335 ; mov rdi, rbx ; call rax
0x000000000051a210 : jne 0x51a342 ; mov rdi, rbx ; call rax
0x000000000051a5f9 : jne 0x51a8ce ; call rax
0x000000000051a6e3 : jne 0x51a99b ; call rax
0x000000000051abf6 : jne 0x51ac2b ; mov esi, ebx ; call rax
0x000000000051ab29 : jne 0x51ac96 ; call rax
0x000000000051ad81 : jne 0x51ae18 ; mov rdi, rbx ; call rax
0x000000000051b45f : jne 0x51b4b6 ; call rdx
0x000000000051d1f2 : jne 0x51d214 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000051d1f1 : jne 0x51d215 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000051d733 : jne 0x51d782 ; call rdx
0x000000000051d890 : jne 0x51d8da ; call rdx
0x000000000051d9d1 : jne 0x51da0c ; call rcx
0x000000000051dbb8 : jne 0x51dc02 ; call rcx
0x000000000051df51 : jne 0x51dfbd ; mov rsi, rsp ; call rcx
0x000000000051f807 : jne 0x51f851 ; mov rdi, r12 ; call rax
0x000000000051f998 : jne 0x51f9e3 ; mov rdi, r12 ; call rax
0x00000000005210b2 : jne 0x5210c7 ; mov eax, 1 ; ret
0x000000000052196f : jne 0x521986 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000521a3f : jne 0x521a56 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000522004 : jne 0x522009 ; ret
0x0000000000522015 : jne 0x52201a ; ret
0x0000000000522084 : jne 0x522089 ; ret
0x0000000000522095 : jne 0x52209a ; ret
0x0000000000522104 : jne 0x522109 ; ret
0x0000000000522115 : jne 0x52211a ; ret
0x0000000000522242 : jne 0x52223a ; ret
0x0000000000522262 : jne 0x52225a ; ret
0x000000000052228a : jne 0x522282 ; ret
0x00000000005222b7 : jne 0x5222aa ; ret
0x000000000052235a : jne 0x522352 ; ret
0x0000000000522387 : jne 0x52237a ; ret
0x0000000000522b52 : jne 0x522b67 ; mov eax, 1 ; ret
0x00000000005230a1 : jne 0x5230f0 ; xor eax, eax ; call 0x67fb56
0x00000000005244d6 : jne 0x5244e8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000525026 : jne 0x525000 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000525ea5 : jne 0x525f0d ; mov rsi, rsp ; call rax
0x0000000000526ddb : jne 0x526e22 ; call rdx
0x0000000000527242 : jne 0x52723a ; ret
0x0000000000527262 : jne 0x52725a ; ret
0x000000000052728a : jne 0x527282 ; ret
0x00000000005272b7 : jne 0x5272aa ; ret
0x000000000052735a : jne 0x527352 ; ret
0x0000000000527387 : jne 0x52737a ; ret
0x000000000052812f : jne 0x528110 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000528782 : jne 0x528797 ; mov eax, 1 ; ret
0x00000000005291af : jne 0x5291c6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005293b1 : jne 0x5294d2 ; mov rdi, rbx ; call rax
0x00000000005293d3 : jne 0x5294ec ; mov rdi, rbx ; call rax
0x0000000000529388 : jne 0x5294f9 ; mov rdi, rbx ; call rax
0x000000000052928a : jne 0x529539 ; mov rdi, rbx ; call rax
0x0000000000529301 : jne 0x529546 ; mov rdi, rbx ; call rax
0x0000000000529420 : jne 0x529553 ; mov rdi, rbx ; call rax
0x0000000000529861 : jne 0x529e4c ; mov rdi, rbx ; call rax
0x0000000000529b2c : jne 0x529ea1 ; mov rdi, rbx ; call rax
0x0000000000529a6f : jne 0x529ee9 ; mov rdi, rbx ; call rax
0x00000000005299b7 : jne 0x529f19 ; mov rdi, rbx ; call rax
0x000000000052993f : jne 0x529f55 ; mov rdi, rbx ; call rax
0x0000000000529c42 : jne 0x529f64 ; mov rdi, rbx ; call rax
0x0000000000529b4e : jne 0x529fc0 ; mov rdi, rbx ; call rax
0x000000000052a49f : jne 0x52a48a ; ret
0x000000000052a4d6 : jne 0x52a4e8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000052b4b6 : jne 0x52b4ec ; call rdx
0x000000000052b754 : jne 0x52bc29 ; mov rdi, r15 ; call rax
0x000000000052b785 : jne 0x52bc6a ; mov rdi, rax ; call rdx
0x000000000052b916 : jne 0x52bc94 ; call rax
0x000000000052b8d8 : jne 0x52bcf6 ; call rax
0x000000000052ba45 : jne 0x52bf79 ; mov rdi, rbx ; call rax
0x000000000052c44b : jne 0x52c4cc ; mov esi, 1 ; call rax
0x000000000052cbd4 : jne 0x52cfde ; call rax
0x000000000052c988 : jne 0x52d1c6 ; mov rdi, r13 ; call rax
0x000000000052cc01 : jne 0x52d1e4 ; mov esi, r12d ; call rax
0x000000000052db6d : jne 0x52db7d ; mov esi, 1 ; jmp rax
0x000000000052dced : jne 0x52dcfd ; mov esi, 1 ; jmp rax
0x000000000052dd6d : jne 0x52dd7d ; mov esi, 1 ; jmp rax
0x000000000052eddd : jne 0x52eded ; mov esi, 1 ; jmp rax
0x000000000052ef7d : jne 0x52ef8d ; mov esi, 1 ; jmp rax
0x000000000052f9df : jne 0x52f9d2 ; ret
0x000000000052fa0f : jne 0x52fa02 ; ret
0x000000000052fbff : jne 0x52fbf2 ; ret
0x000000000053001d : jne 0x53002d ; mov esi, 1 ; jmp rax
0x000000000053019d : jne 0x5301ad ; mov esi, 1 ; jmp rax
0x000000000053021d : jne 0x53022d ; mov esi, 1 ; jmp rax
0x00000000005306dd : jne 0x53088b ; mov rdi, rbx ; call rax
0x00000000005306c0 : jne 0x530898 ; mov rdi, rbx ; call rax
0x000000000053113c : jne 0x531416 ; call rax
0x00000000005312b2 : jne 0x531423 ; call rax
0x0000000000530fb3 : jne 0x531430 ; call rax
0x00000000005310fd : jne 0x531547 ; mov rdi, r12 ; call rax
0x0000000000530cdb : jne 0x531906 ; mov rdi, r12 ; call rax
0x000000000053216c : jne 0x53214a ; ret
0x00000000005321c9 : jne 0x5321d6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000532f7a : jne 0x533330 ; mov rdi, r12 ; call rax
0x0000000000532fa0 : jne 0x53333d ; mov rdi, r12 ; call rax
0x0000000000532f50 : jne 0x53334a ; mov rdi, r12 ; call rax
0x000000000053468d : jne 0x534d80 ; mov rdi, r13 ; call rax
0x0000000000534b6b : jne 0x535049 ; mov rdi, rbp ; call rax
0x0000000000535696 : jne 0x5356ca ; call rax
0x000000000053574e : jne 0x5357af ; call rax
0x00000000005358f3 : jne 0x53594a ; mov rsi, r14 ; mov rdi, rbx ; call rax
0x00000000005359b2 : jne 0x535a08 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000005359cc : jne 0x535a12 ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x0000000000535a73 : jne 0x535aca ; mov rsi, r14 ; mov rdi, rbx ; call rax
0x0000000000536dbd : jne 0x536dcd ; mov esi, 1 ; jmp rax
0x0000000000536f77 : jne 0x536f83 ; movzx eax, byte ptr [rdi + 0x1f] ; ret
0x000000000053722e : jne 0x537272 ; mov rdx, rsp ; call rax
0x000000000053743f : jne 0x5375bc ; mov rdx, rsp ; call rax
0x000000000053880d : jne 0x53881d ; mov esi, 1 ; jmp rax
0x000000000053928d : jne 0x53929d ; mov esi, 1 ; jmp rax
0x0000000000539f6b : jne 0x539f78 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000053acad : jne 0x53acbd ; mov esi, 1 ; jmp rax
0x000000000053ae53 : jne 0x53af16 ; call rax
0x000000000053afc5 : jne 0x53b089 ; call rax
0x000000000053c7ed : jne 0x53c7fd ; mov esi, 1 ; jmp rax
0x000000000053c86d : jne 0x53c87d ; mov esi, 1 ; jmp rax
0x000000000053d40b : jne 0x53d445 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000053da42 : jne 0x53da4d ; call rax
0x000000000053ecbd : jne 0x53ecaa ; ret
0x000000000053ed1d : jne 0x53ed2d ; mov esi, 1 ; jmp rax
0x000000000053ef00 : jne 0x53eee0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000053eef2 : jne 0x53ef0e ; mov rsi, rbx ; call rax
0x000000000053ef90 : jne 0x53ef70 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000053ef82 : jne 0x53ef9e ; mov rsi, rbx ; call rax
0x00000000005405ef : jne 0x540625 ; call rcx
0x0000000000542a04 : jne 0x5429ce ; test rdx, rdx ; jne 0x5429f4 ; ret
0x0000000000542a09 : jne 0x5429ef ; ret
0x0000000000542a8d : jne 0x542a9d ; mov esi, 1 ; jmp rax
0x0000000000542ad4 : jne 0x542ad9 ; ret
0x0000000000542ae5 : jne 0x542aea ; ret
0x0000000000542c12 : jne 0x542c0a ; ret
0x0000000000542c32 : jne 0x542c2a ; ret
0x0000000000542c5a : jne 0x542c52 ; ret
0x0000000000542c87 : jne 0x542c7a ; ret
0x0000000000542d2a : jne 0x542d22 ; ret
0x0000000000542d57 : jne 0x542d4a ; ret
0x00000000005438d5 : jne 0x54389b ; xor eax, eax ; call 0x67fb56
0x0000000000543abe : jne 0x543aa0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000544152 : jne 0x544167 ; mov eax, 1 ; ret
0x0000000000544b5e : jne 0x544b4a ; ret
0x0000000000545156 : jne 0x54518c ; call rdx
0x0000000000545836 : jne 0x545848 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000054647d : jne 0x54648d ; mov esi, 1 ; jmp rax
0x00000000005465fd : jne 0x54660d ; mov esi, 1 ; jmp rax
0x000000000054667d : jne 0x54668d ; mov esi, 1 ; jmp rax
0x0000000000547ea4 : jne 0x547ec8 ; mov rsi, rbp ; call rax
0x0000000000548949 : jne 0x548aa2 ; mov rdi, rbx ; call rax
0x000000000054a0f7 : jne 0x54a0d8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000054a2bc : jne 0x54a365 ; call rcx
0x000000000054a31c : jne 0x54a390 ; call rax
0x000000000054a476 : jne 0x54a516 ; mov esi, r12d ; call rax
0x000000000054a3e0 : jne 0x54a541 ; call rax
0x000000000054a912 : jne 0x54a925 ; jmp rax
0x000000000054a946 : jne 0x54a964 ; call rax
0x000000000054a986 : jne 0x54a9a2 ; call rax
0x000000000054a9c6 : jne 0x54a9e5 ; call rax
0x000000000054aa06 : jne 0x54aa28 ; call rax
0x000000000054aa42 : jne 0x54aa48 ; jmp rax
0x000000000054aa88 : jne 0x54aa8e ; jmp rax
0x000000000054aac2 : jne 0x54aac8 ; jmp rax
0x000000000054ab02 : jne 0x54ab15 ; jmp rax
0x000000000054ab8b : jne 0x54ac5c ; call rax
0x000000000054ae59 : jne 0x54b12e ; call rax
0x000000000054af39 : jne 0x54b1fb ; call rax
0x000000000054b452 : jne 0x54b487 ; mov esi, ebx ; call rax
0x000000000054b386 : jne 0x54b4f6 ; call rax
0x000000000054b5e1 : jne 0x54b678 ; mov rdi, rbx ; call rax
0x000000000054b753 : jne 0x54b77a ; mov qword ptr [rdx], rcx ; add rsp, 8 ; ret
0x000000000054bae2 : jne 0x54baf5 ; jmp rax
0x000000000054bc5f : jne 0x54bcb6 ; call rdx
0x000000000054bdb6 : jne 0x54bd88 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000054bf25 : jne 0x54bf32 ; ret
0x000000000054c085 : jne 0x54c092 ; ret
0x000000000054c332 : jne 0x54c306 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000054c2d9 : jne 0x54c342 ; ret
0x000000000054c3b2 : jne 0x54c386 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000054c359 : jne 0x54c3c2 ; ret
0x000000000054c5f0 : jne 0x54c5c0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000054c64a : jne 0x54c686 ; call rcx
0x000000000054cf0e : jne 0x54cf58 ; mov rdi, rbp ; mov rsi, rbx ; call rax
0x000000000054d06e : jne 0x54d0b8 ; mov rdi, rbp ; mov rsi, rbx ; call rax
0x000000000054d6c2 : jne 0x54d6d7 ; mov eax, 1 ; ret
0x000000000054dac4 : jne 0x54dac9 ; ret
0x000000000054dad5 : jne 0x54dada ; ret
0x000000000054db3b : jne 0x54db44 ; xor eax, eax ; ret
0x000000000054dd9c : jne 0x54dd88 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000054e302 : jne 0x54e338 ; call rdx
0x000000000054e994 : jne 0x54ee42 ; mov rdi, r15 ; call rax
0x000000000054e9c4 : jne 0x54ee83 ; mov rdi, rax ; call rdx
0x000000000054eb47 : jne 0x54eead ; call rax
0x000000000054eb0a : jne 0x54ef0f ; call rax
0x000000000054ec76 : jne 0x54f196 ; mov rdi, r13 ; call rax
0x000000000054f65a : jne 0x54f6db ; mov esi, 1 ; call rax
0x000000000054f8bd : jne 0x54f8cd ; mov esi, 1 ; jmp rax
0x000000000054fa35 : jne 0x54fa42 ; ret
0x000000000054fa5d : jne 0x54fa6d ; mov esi, 1 ; jmp rax
0x00000000005503b1 : jne 0x55039a ; ret
0x00000000005503f7 : jne 0x550410 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000550717 : jne 0x550731 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000550802 : jne 0x55080f ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005514b1 : jne 0x5518aa ; xor edi, edi ; call rax
0x00000000005515fc : jne 0x5518c9 ; mov rdi, r14 ; call rax
0x00000000005514d3 : jne 0x551a08 ; mov rdi, rax ; call rdx
0x00000000005516e3 : jne 0x551a12 ; call rax
0x000000000055115b : jne 0x551a22 ; mov rdi, r12 ; call rax
0x0000000000551250 : jne 0x551a40 ; call rax
0x0000000000551d95 : jne 0x551da2 ; ret
0x0000000000551f2c : jne 0x55206c ; mov rdi, rbp ; call rax
0x00000000005521e5 : jne 0x552356 ; mov rdi, r12 ; call rax
0x00000000005524bb : jne 0x552513 ; call rsi
0x000000000055270f : jne 0x55347e ; call rax
0x00000000005527ce : jne 0x55348b ; call rax
0x00000000005529b8 : jne 0x55349b ; mov rdi, rbx ; call rax
0x000000000055287f : jne 0x5534c2 ; mov rdi, r13 ; call rax
0x0000000000552f9a : jne 0x553868 ; xor edi, edi ; call rax
0x000000000055314e : jne 0x55391a ; mov rdi, r13 ; call rax
0x0000000000552fb6 : jne 0x5539a3 ; mov rdi, r12 ; call rax
0x0000000000552682 : jne 0x553e63 ; call rax
0x0000000000552bc4 : jne 0x553ed9 ; call rax
0x0000000000552640 : jne 0x554039 ; call rax
0x00000000005543dd : jne 0x55458a ; xor edi, edi ; call rax
0x0000000000554535 : jne 0x554594 ; mov rdi, rbp ; call rax
0x00000000005543f6 : jne 0x55469e ; mov rdi, r12 ; call rax
0x00000000005549a8 : jne 0x554b3d ; call rax
0x0000000000555c76 : jne 0x555ccf ; mov rdi, rbp ; mov rsi, rbx ; call rax
0x0000000000556014 : jne 0x556019 ; ret
0x0000000000556025 : jne 0x55602a ; ret
0x0000000000556a52 : jne 0x556a48 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000055794f : jne 0x557936 ; xor eax, eax ; xor edx, edx ; pop rbx ; ret
0x0000000000558a2d : jne 0x558a3d ; mov esi, 1 ; jmp rax
0x0000000000558b8c : jne 0x558b7a ; ret
0x0000000000558bdd : jne 0x558bed ; mov esi, 1 ; jmp rax
0x0000000000558c4d : jne 0x558c5d ; mov esi, 1 ; jmp rax
0x00000000005596f8 : jne 0x559705 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005597b8 : jne 0x5597c5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000055eb61 : jne 0x55eb78 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000055ebe1 : jne 0x55ebf8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000056224a : jne 0x562277 ; ret
0x0000000000562dc0 : jne 0x562da0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000562db2 : jne 0x562dce ; mov rsi, rbx ; call rax
0x0000000000562e50 : jne 0x562e30 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000562e42 : jne 0x562e5e ; mov rsi, rbx ; call rax
0x00000000005646b0 : jne 0x56471b ; mov rsi, rsp ; call rcx
0x0000000000566ff4 : jne 0x566ff9 ; ret
0x0000000000567005 : jne 0x56700a ; ret
0x0000000000567132 : jne 0x56712a ; ret
0x0000000000567152 : jne 0x56714a ; ret
0x000000000056717a : jne 0x567172 ; ret
0x00000000005671a7 : jne 0x56719a ; ret
0x000000000056724a : jne 0x567242 ; ret
0x0000000000567277 : jne 0x56726a ; ret
0x0000000000567a42 : jne 0x567a57 ; mov eax, 1 ; ret
0x0000000000569996 : jne 0x5699a8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000056a4e5 : jne 0x56a4c0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000056b37e : jne 0x56b3ce ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000056b37d : jne 0x56b3cf ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000056b3b4 : jne 0x56b41c ; mov rsi, rsp ; call rax
0x000000000056b79d : jne 0x56b7ad ; mov esi, 1 ; jmp rax
0x000000000056b91d : jne 0x56b92d ; mov esi, 1 ; jmp rax
0x000000000056b99d : jne 0x56b9ad ; mov esi, 1 ; jmp rax
0x000000000056ea41 : jne 0x56ea05 ; call rax
0x000000000056f1c0 : jne 0x56f184 ; call rax
0x000000000056f3a1 : jne 0x56f3ae ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000056fda5 : jne 0x56fdb8 ; mov dword ptr [rdi + 0x10], 0 ; ret
0x000000000056fe72 : jne 0x56fe7a ; ret
0x000000000057000f : jne 0x57005b ; call r12
0x0000000000570160 : jne 0x5701aa ; call rdx
0x00000000005702c4 : jne 0x570313 ; call r12
0x0000000000570d37 : jne 0x570d81 ; mov rdi, r12 ; call rax
0x0000000000570ec8 : jne 0x570f13 ; mov rdi, r12 ; call rax
0x0000000000571522 : jne 0x571537 ; mov eax, 1 ; ret
0x0000000000571904 : jne 0x571909 ; ret
0x0000000000571915 : jne 0x57191a ; ret
0x0000000000571bfc : jne 0x571c42 ; call rdx
0x0000000000571e04 : jne 0x571e11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000572131 : jne 0x57213e ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000572edd : jne 0x572eed ; mov esi, 1 ; jmp rax
0x000000000057306d : jne 0x57307d ; mov esi, 1 ; jmp rax
0x00000000005730c3 : jne 0x573103 ; xor eax, eax ; call 0x67fb56
0x0000000000573937 : jne 0x573991 ; xor eax, eax ; call 0x67fb56
0x0000000000573ab3 : jne 0x573a9e ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000573fba : jne 0x573ff0 ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000057413d : jne 0x574150 ; mov dword ptr [rdi + 0x10], 0 ; ret
0x00000000005768ed : jne 0x576916 ; add rsp, 8 ; ret
0x000000000057860a : jne 0x578621 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000057e3fd : jne 0x57e40d ; mov esi, 1 ; jmp rax
0x000000000057e660 : jne 0x57e680 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000057e6bb : jne 0x57e6ce ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000057e978 : jne 0x57e95e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000058167d : jne 0x58168d ; mov esi, 1 ; jmp rax
0x0000000000581bc5 : jne 0x581c6e ; mov rdi, rbx ; call rax
0x00000000005820bb : jne 0x5820d7 ; mov rdi, rsi ; jmp rax
0x00000000005826ed : jne 0x5826fd ; mov esi, 1 ; jmp rax
0x000000000058276d : jne 0x58273f ; mov eax, 1 ; ret
0x0000000000584230 : jne 0x584210 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000584222 : jne 0x58423e ; mov rsi, rbx ; call rax
0x00000000005842c0 : jne 0x5842a0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005842b2 : jne 0x5842ce ; mov rsi, rbx ; call rax
0x0000000000585c55 : jne 0x585c68 ; mov dword ptr [rdi + 0x10], 0 ; ret
0x0000000000585ea8 : jne 0x585eaf ; pop rbx ; ret
0x00000000005861f2 : jne 0x5861fa ; ret
0x0000000000586c2a : jne 0x586c60 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000586d5d : jne 0x586d70 ; mov dword ptr [rdi + 0x10], 0 ; ret
0x000000000058736d : jne 0x587396 ; add rsp, 8 ; ret
0x000000000058806a : jne 0x58808b ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000589617 : jne 0x589662 ; call rdx
0x0000000000589758 : jne 0x5897a2 ; call rdx
0x00000000005898a3 : jne 0x5898f2 ; call rdx
0x0000000000589a00 : jne 0x589a4a ; call rdx
0x0000000000589b6d : jne 0x589bba ; call rcx
0x0000000000589cf8 : jne 0x589d42 ; call rcx
0x0000000000589dbb : jne 0x589dd1 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058a03e : jne 0x58a08c ; mov esi, esp ; call rcx
0x000000000058a03d : jne 0x58a0b9 ; mov rsi, rsp ; call rcx
0x000000000058ccb7 : jne 0x58cd01 ; mov rdi, r12 ; call rax
0x000000000058ce47 : jne 0x58ce91 ; mov rdi, r12 ; call rax
0x000000000058cfd8 : jne 0x58d023 ; mov rdi, r12 ; call rax
0x000000000058d168 : jne 0x58d1b3 ; mov rdi, r12 ; call rax
0x000000000058d1e9 : jne 0x58d204 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058e562 : jne 0x58e577 ; mov eax, 1 ; ret
0x000000000058e8e2 : jne 0x58e8f7 ; mov eax, 1 ; ret
0x000000000058ed74 : jne 0x58ed79 ; ret
0x000000000058ed85 : jne 0x58ed8a ; ret
0x000000000058edf4 : jne 0x58edf9 ; ret
0x000000000058ee05 : jne 0x58ee0a ; ret
0x000000000058ee74 : jne 0x58ee79 ; ret
0x000000000058ee85 : jne 0x58ee8a ; ret
0x000000000058f933 : jne 0x58f97a ; call rdx
0x0000000000590bbb : jne 0x590c02 ; call rdx
0x0000000000590e82 : jne 0x590e7a ; ret
0x0000000000590ea2 : jne 0x590e9a ; ret
0x0000000000590eca : jne 0x590ec2 ; ret
0x0000000000590ef7 : jne 0x590eea ; ret
0x0000000000590f9a : jne 0x590f92 ; ret
0x0000000000590fc7 : jne 0x590fba ; ret
0x0000000000593051 : jne 0x593005 ; mov rdi, rax ; xor eax, eax ; call 0x67fb59
0x0000000000593078 : jne 0x5930b4 ; mov rdi, rax ; xor eax, eax ; call 0x67fb59
0x0000000000593879 : jne 0x593886 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000059389b : jne 0x5938f1 ; xor eax, eax ; call 0x67fb56
0x0000000000593c76 : jne 0x593c88 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000593e09 : jne 0x593e16 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000594b03 : jne 0x594ae0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000595816 : jne 0x595840 ; mov rdi, qword ptr [rbx + 0x20] ; call 0x6a1a98
0x0000000000595cde : jne 0x595d32 ; mov rsi, rsp ; call rax
0x000000000059608d : jne 0x59609d ; mov esi, 1 ; jmp rax
0x000000000059621d : jne 0x59622d ; mov esi, 1 ; jmp rax
0x0000000000596eed : jne 0x596efd ; mov esi, 1 ; jmp rax
0x000000000059708d : jne 0x59709d ; mov esi, 1 ; jmp rax
0x0000000000597aef : jne 0x597ae2 ; ret
0x0000000000597b1f : jne 0x597b12 ; ret
0x0000000000597e4d : jne 0x597e5d ; mov esi, 1 ; jmp rax
0x0000000000597fcd : jne 0x597fdd ; mov esi, 1 ; jmp rax
0x000000000059804d : jne 0x59805d ; mov esi, 1 ; jmp rax
0x0000000000598470 : jne 0x5983fc ; call 0x6d4744
0x0000000000598f8d : jne 0x598f9d ; mov esi, 1 ; jmp rax
0x0000000000598fe5 : jne 0x598fc2 ; ret
0x000000000059e6e9 : jne 0x59e733 ; call r12
0x000000000059e896 : jne 0x59e8e3 ; call r12
0x000000000059f1f2 : jne 0x59f1fa ; ret
0x00000000005a025f : jne 0x5a02a9 ; mov rdi, r12 ; call rax
0x00000000005a0418 : jne 0x5a0463 ; mov rdi, r12 ; call rax
0x00000000005a125e : jne 0x5a12ab ; call r12
0x00000000005a2b44 : jne 0x5a2b49 ; ret
0x00000000005a2b55 : jne 0x5a2b5a ; ret
0x00000000005a2ccd : jne 0x5a2cdd ; mov esi, 1 ; jmp rax
0x00000000005a2e6d : jne 0x5a2e7d ; mov esi, 1 ; jmp rax
0x00000000005a3b7b : jne 0x5a3b5a ; ret
0x00000000005a3bb0 : jne 0x5a3b92 ; ret
0x00000000005a4e22 : jne 0x5a4e73 ; call r12
0x00000000005a5574 : jne 0x5a553e ; test rdx, rdx ; jne 0x5a5564 ; ret
0x00000000005a5579 : jne 0x5a555f ; ret
0x00000000005a6fd0 : jne 0x5a6fb0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005a6fc2 : jne 0x5a6fde ; mov rsi, rbx ; call rax
0x00000000005a7060 : jne 0x5a7040 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005a7052 : jne 0x5a706e ; mov rsi, rbx ; call rax
0x00000000005a84c4 : jne 0x5a848a ; call 0x6d4744
0x00000000005a8ac4 : jne 0x5a8ac9 ; ret
0x00000000005a8ad5 : jne 0x5a8ada ; ret
0x00000000005a8c8d : jne 0x5a8c9d ; mov esi, 1 ; jmp rax
0x00000000005a8e0d : jne 0x5a8e1d ; mov esi, 1 ; jmp rax
0x00000000005a8e7d : jne 0x5a8e8d ; mov esi, 1 ; jmp rax
0x00000000005a90bf : jne 0x5a90d3 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a9772 : jne 0x5a976a ; ret
0x00000000005a9792 : jne 0x5a978a ; ret
0x00000000005a97ba : jne 0x5a97b2 ; ret
0x00000000005a97e7 : jne 0x5a97da ; ret
0x00000000005a988a : jne 0x5a9882 ; ret
0x00000000005a98b7 : jne 0x5a98aa ; ret
0x00000000005aa082 : jne 0x5aa097 ; mov eax, 1 ; ret
0x00000000005ac547 : jne 0x5ac520 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005acc06 : jne 0x5acc18 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000005af017 : jne 0x5af028 ; mov eax, dword ptr [rdi + 0x4e8] ; ret
0x00000000005af0d7 : jne 0x5af0ea ; movzx eax, byte ptr [rdi + 0xa88] ; ret
0x00000000005af137 : jne 0x5af14a ; movzx eax, byte ptr [rdi + 0x308] ; ret
0x00000000005af167 : jne 0x5af17a ; movzx eax, byte ptr [rdi + 0xa58] ; ret
0x00000000005af1c7 : jne 0x5af1da ; mov rax, qword ptr [rdi + 0x788] ; ret
0x00000000005af1f7 : jne 0x5af20a ; mov rax, qword ptr [rdi + 0x758] ; ret
0x00000000005af227 : jne 0x5af23a ; mov rax, qword ptr [rdi + 0x7b8] ; ret
0x00000000005af257 : jne 0x5af26a ; mov rax, qword ptr [rdi + 0x728] ; ret
0x00000000005af557 : jne 0x5af56a ; mov rax, qword ptr [rip + 0x456658] ; ret
0x00000000005af677 : jne 0x5af68a ; movzx eax, byte ptr [rdi + 0x2d8] ; ret
0x00000000005af6a7 : jne 0x5af6ba ; mov rax, qword ptr [rdi + 0x848] ; ret
0x00000000005af6d7 : jne 0x5af6ea ; mov rax, qword ptr [rdi + 0x818] ; ret
0x00000000005af707 : jne 0x5af71a ; mov rax, qword ptr [rdi + 0x878] ; ret
0x00000000005af737 : jne 0x5af74a ; mov rax, qword ptr [rdi + 0x7e8] ; ret
0x00000000005af767 : jne 0x5af778 ; mov eax, dword ptr [rdi + 0x458] ; ret
0x00000000005af797 : jne 0x5af7a8 ; mov eax, dword ptr [rdi + 0x3c8] ; ret
0x00000000005af7c7 : jne 0x5af7d8 ; mov eax, dword ptr [rip + 0x456239] ; ret
0x00000000005af7f7 : jne 0x5af80a ; movzx eax, byte ptr [rip + 0x4562f8] ; ret
0x00000000005af987 : jne 0x5af998 ; mov eax, dword ptr [rdi + 0x9f8] ; ret
0x00000000005afa47 : jne 0x5afa58 ; mov eax, dword ptr [rdi + 0x5d8] ; ret
0x00000000005afad7 : jne 0x5afae8 ; mov eax, dword ptr [rip + 0x455f59] ; ret
0x00000000005afb07 : jne 0x5afb18 ; mov eax, dword ptr [rdi + 0x3f8] ; ret
0x00000000005afb27 : jne 0x5afb38 ; mov eax, dword ptr [rdi + 0xab8] ; ret
0x00000000005afb57 : jne 0x5afb68 ; mov eax, dword ptr [rip + 0x455ff9] ; ret
0x00000000005afb87 : jne 0x5afb98 ; mov eax, dword ptr [rip + 0x455ed9] ; ret
0x00000000005afc23 : jne 0x5afc38 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005b0077 : jne 0x5b008a ; mov rax, qword ptr [rdi + 0x8d8] ; ret
0x00000000005b00a7 : jne 0x5b00ba ; movzx eax, byte ptr [rdi + 0xa28] ; ret
0x00000000005b00d7 : jne 0x5b00ea ; movzx eax, byte ptr [rdi + 0x1b8] ; ret
0x00000000005b0137 : jne 0x5b0148 ; mov eax, dword ptr [rdi + 0x428] ; ret
0x00000000005b0167 : jne 0x5b017a ; mov rax, qword ptr [rdi + 0x8a8] ; ret
0x00000000005b01f7 : jne 0x5b0208 ; mov eax, dword ptr [rdi + 0x158] ; ret
0x00000000005b02a7 : jne 0x5b02ba ; movzx eax, byte ptr [rdi + 0x6c8] ; ret
0x00000000005b0317 : jne 0x5b032a ; mov rax, qword ptr [rip + 0x455568] ; ret
0x00000000005b0347 : jne 0x5b0358 ; mov eax, dword ptr [rip + 0x455599] ; ret
0x00000000005b0377 : jne 0x5b038a ; mov rax, qword ptr [rip + 0x455538] ; ret
0x00000000005b03d7 : jne 0x5b03e8 ; mov eax, dword ptr [rdi + 0x398] ; ret
0x00000000005b0437 : jne 0x5b044a ; movzx eax, byte ptr [rdi + 0x2a8] ; ret
0x00000000005b0467 : jne 0x5b047a ; mov rax, qword ptr [rip + 0x455538] ; ret
0x00000000005b0497 : jne 0x5b04aa ; mov rax, qword ptr [rip + 0x455538] ; ret
0x00000000005b0557 : jne 0x5b0568 ; mov eax, dword ptr [rdi + 0x698] ; ret
0x00000000005b0587 : jne 0x5b0598 ; mov eax, dword ptr [rip + 0x455539] ; ret
0x00000000005b0687 : jne 0x5b069a ; mov rax, qword ptr [rip + 0x4554f8] ; ret
0x00000000005b3fe7 : jne 0x5b3ff8 ; mov dword ptr [rdi + 0x4e8], esi ; ret
0x00000000005b4377 : jne 0x5b438a ; mov byte ptr [rdi + 0xa88], sil ; ret
0x00000000005b4557 : jne 0x5b456a ; mov byte ptr [rdi + 0x308], sil ; ret
0x00000000005b4587 : jne 0x5b459a ; mov byte ptr [rdi + 0xa58], sil ; ret
0x00000000005b4767 : jne 0x5b477a ; mov qword ptr [rdi + 0x788], rsi ; ret
0x00000000005b4797 : jne 0x5b47aa ; mov qword ptr [rdi + 0x758], rsi ; ret
0x00000000005b47c7 : jne 0x5b47da ; mov qword ptr [rdi + 0x7b8], rsi ; ret
0x00000000005b47f7 : jne 0x5b480a ; mov qword ptr [rdi + 0x728], rsi ; ret
0x00000000005b49d7 : jne 0x5b49ea ; mov qword ptr [rip + 0x4511d8], rdi ; ret
0x00000000005b5277 : jne 0x5b528a ; mov byte ptr [rdi + 0x2d8], sil ; ret
0x00000000005b52a7 : jne 0x5b52ba ; mov qword ptr [rdi + 0x848], rsi ; ret
0x00000000005b52d7 : jne 0x5b52ea ; mov qword ptr [rdi + 0x818], rsi ; ret
0x00000000005b5307 : jne 0x5b531a ; mov qword ptr [rdi + 0x878], rsi ; ret
0x00000000005b5337 : jne 0x5b534a ; mov qword ptr [rdi + 0x7e8], rsi ; ret
0x00000000005b5367 : jne 0x5b5378 ; mov dword ptr [rdi + 0x458], esi ; ret
0x00000000005b5397 : jne 0x5b53a8 ; mov dword ptr [rdi + 0x3c8], esi ; ret
0x00000000005b53c7 : jne 0x5b53d8 ; mov dword ptr [rip + 0x450639], edi ; ret
0x00000000005b53f7 : jne 0x5b5408 ; mov dword ptr [rdi + 0x488], esi ; ret
0x00000000005b55d7 : jne 0x5b55e8 ; mov dword ptr [rdi + 0x9f8], esi ; ret
0x00000000005b5997 : jne 0x5b59a8 ; mov dword ptr [rdi + 0x5d8], esi ; ret
0x00000000005b5d27 : jne 0x5b5d38 ; mov dword ptr [rip + 0x44fd09], edi ; ret
0x00000000005b5d57 : jne 0x5b5d68 ; mov dword ptr [rdi + 0x3f8], esi ; ret
0x00000000005b5d87 : jne 0x5b5d98 ; mov dword ptr [rdi + 0xab8], esi ; ret
0x00000000005b5db7 : jne 0x5b5dc8 ; mov dword ptr [rip + 0x44fd99], edi ; ret
0x00000000005b5de7 : jne 0x5b5df8 ; mov dword ptr [rip + 0x44fc79], edi ; ret
0x00000000005b6237 : jne 0x5b624a ; mov qword ptr [rdi + 0x8d8], rsi ; ret
0x00000000005b6267 : jne 0x5b627a ; mov byte ptr [rdi + 0xa28], sil ; ret
0x00000000005b6297 : jne 0x5b62aa ; mov byte ptr [rdi + 0x1b8], sil ; ret
0x00000000005b6477 : jne 0x5b6488 ; mov dword ptr [rdi + 0x428], esi ; ret
0x00000000005b64a7 : jne 0x5b64ba ; mov qword ptr [rdi + 0x8a8], rsi ; ret
0x00000000005b6827 : jne 0x5b6838 ; mov dword ptr [rdi + 0x158], esi ; ret
0x00000000005b6857 : jne 0x5b6868 ; mov dword ptr [rdi + 0x188], esi ; ret
0x00000000005b6887 : jne 0x5b6898 ; mov dword ptr [rip + 0x44f0b9], edi ; ret
0x00000000005b68b7 : jne 0x5b68ca ; mov byte ptr [rdi + 0x6c8], sil ; ret
0x00000000005b68e7 : jne 0x5b68f8 ; mov dword ptr [rip + 0x44f029], edi ; ret
0x00000000005b6917 : jne 0x5b692a ; mov qword ptr [rip + 0x44ef68], rdi ; ret
0x00000000005b6947 : jne 0x5b6958 ; mov dword ptr [rip + 0x44ef99], edi ; ret
0x00000000005b6977 : jne 0x5b698a ; mov qword ptr [rip + 0x44ef38], rdi ; ret
0x00000000005b6b57 : jne 0x5b6b68 ; mov dword ptr [rdi + 0x398], esi ; ret
0x00000000005b6d37 : jne 0x5b6d4a ; mov byte ptr [rdi + 0x2a8], sil ; ret
0x00000000005b6d67 : jne 0x5b6d7a ; mov qword ptr [rip + 0x44ec38], rdi ; ret
0x00000000005b6d97 : jne 0x5b6daa ; mov qword ptr [rip + 0x44ec38], rdi ; ret
0x00000000005b72e7 : jne 0x5b72f8 ; mov dword ptr [rdi + 0x698], esi ; ret
0x00000000005b7317 : jne 0x5b7328 ; mov dword ptr [rip + 0x44e7a9], edi ; ret
0x00000000005b7677 : jne 0x5b7688 ; mov dword ptr [rip + 0x44e4a9], edi ; ret
0x00000000005b76a7 : jne 0x5b76ba ; mov qword ptr [rip + 0x44e4d8], rdi ; ret
0x00000000005b8a3c : jne 0x5b8a47 ; call rax
0x00000000005b8c1e : jne 0x5b8dd5 ; call rax
0x00000000005b949b : jne 0x5b99d5 ; mov rsi, r12 ; call rax
0x00000000005bd235 : jne 0x5bd242 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005bd383 : jne 0x5bd390 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005bd9bc : jne 0x5bd9c9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005bfc87 : jne 0x5bfc92 ; ret
0x00000000005c67dd : jne 0x5c67ed ; mov rax, rsi ; ret
0x00000000005c6899 : jne 0x5c68c3 ; mov esi, 2 ; call rax
0x00000000005c72fa : jne 0x5c74ba ; call rax
0x00000000005d5281 : jne 0x5d5659 ; call 0x68153a
0x00000000005d90d9 : jne 0x5d90ed ; add cl, cl ; ret
0x00000000005ee5b5 : jne 0x5ee55b ; add al, ch ; ret
0x00000000005f59a9 : jne 0x5f59b0 ; add byte ptr [rax], al ; leave ; ret
0x00000000005f7c46 : jne 0x5f7c4c ; jmp rax
0x00000000005f7c86 : jne 0x5f7c8c ; jmp rax
0x00000000005f85dc : jne 0x5f85eb ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005f8666 : jne 0x5f864f ; mov eax, 1 ; ret
0x00000000005f8ca6 : jne 0x5f8cac ; jmp rax
0x00000000005f8f4d : jne 0x5f8f5d ; mov esi, 1 ; jmp rax
0x00000000005f9dca : jne 0x5f9e43 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005fa702 : jne 0x5fa6d5 ; add rsp, 8 ; ret
0x00000000005fad84 : jne 0x5fad3e ; add rsp, 8 ; ret
0x00000000005fad51 : jne 0x5fad68 ; xor eax, eax ; add rsp, 8 ; ret
0x00000000005fae5c : jne 0x5fae05 ; add rsp, 8 ; ret
0x00000000005fb0f8 : jne 0x5fb109 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005fd914 : jne 0x5fd921 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005fdb52 : jne 0x5fdb5f ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005fe348 : jne 0x5fe31c ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000606c61 : jne 0x606dd4 ; call rax
0x0000000000606e6f : jne 0x606ec8 ; call rax
0x0000000000606e7d : jne 0x606ed2 ; call rax
0x000000000060706c : jne 0x60715e ; mov rdi, r14 ; call rax
0x00000000006070ee : jne 0x6071a7 ; mov rdi, r14 ; call rax
0x0000000000607381 : jne 0x60745e ; call rax
0x00000000006078eb : jne 0x607916 ; mov r12d, edx ; mov rbp, rax ; call rcx
0x00000000006089c0 : jne 0x6089b2 ; ret
0x00000000006089f9 : jne 0x608a10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000608d72 : jne 0x608d7f ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000609182 : jne 0x60918f ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000060c6b0 : jne 0x60c769 ; call rdx
0x000000000060ca89 : jne 0x60cf79 ; call rax
0x000000000060ca68 : jne 0x60cf86 ; call rax
0x000000000060fb85 : jne 0x60fb98 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006109c6 : jne 0x610aa5 ; mov rdi, rbx ; call rcx
0x0000000000612f9f : jne 0x612fa6 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000622067 : jne 0x622078 ; add bh, bh ; ror cl, 1 ; ret
0x0000000000622111 : jne 0x62210d ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x00000000006262c7 : jne 0x6262b4 ; or al, byte ptr [rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000006265a2 : jne 0x626626 ; mov rsi, rsp ; call rax
0x0000000000626956 : jne 0x6269af ; mov rdi, rbp ; mov rsi, rbx ; call rax
0x0000000000626e04 : jne 0x626e09 ; ret
0x0000000000626e15 : jne 0x626e1a ; ret
0x0000000000627762 : jne 0x627758 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000062a0df : jne 0x62a0c6 ; xor eax, eax ; xor edx, edx ; pop rbx ; ret
0x000000000062a298 : jne 0x62a2ec ; mov rsi, rsp ; call rax
0x000000000062b1ad : jne 0x62b1bd ; mov esi, 1 ; jmp rax
0x000000000062b30c : jne 0x62b2fa ; ret
0x000000000062b35d : jne 0x62b36d ; mov esi, 1 ; jmp rax
0x000000000062b3cd : jne 0x62b3dd ; mov esi, 1 ; jmp rax
0x000000000062c2bf : jne 0x62c2f1 ; mov rdi, rbx ; call rdx
0x000000000062c955 : jne 0x62c968 ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000062dd92 : jne 0x62df41 ; call rax
0x000000000062de32 : jne 0x62e006 ; mov rdi, r13 ; call rax
0x000000000062de18 : jne 0x62e013 ; mov rdi, r14 ; call rax
0x000000000062e296 : jne 0x62e2a3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000062e896 : jne 0x62e8a3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006300cf : jne 0x6300c2 ; ret
0x000000000063068f : jne 0x630682 ; ret
0x0000000000631a8a : jne 0x631abb ; call rax
0x0000000000631bb1 : jne 0x631cfd ; mov rdi, rbp ; call rax
0x0000000000631c29 : jne 0x631d0a ; mov rdi, rbp ; call rax
0x000000000063391b : jne 0x6341f6 ; mov rdi, r12 ; call rax
0x000000000063396e : jne 0x634219 ; mov rdi, r12 ; call rax
0x0000000000633a03 : jne 0x6342c2 ; mov rdi, r12 ; call rax
0x00000000006339bc : jne 0x6342e5 ; mov rdi, r12 ; call rax
0x00000000006359fa : jne 0x63622b ; mov rdi, rbx ; call rax
0x0000000000636a31 : jne 0x636f23 ; call rax
0x0000000000636b1b : jne 0x636f3d ; call rax
0x000000000063702c : jne 0x637039 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000637f5d : jne 0x6382c8 ; call rax
0x00000000006377af : jne 0x6385c9 ; mov rdi, r14 ; call rax
0x00000000006377c9 : jne 0x6385d6 ; mov rdi, r12 ; call rax
0x00000000006390ff : jne 0x6390fb ; add rsp, 0x18 ; ret
0x000000000063a2fd : jne 0x63a32a ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000063a2e8 : jne 0x63a33c ; mov esi, 1 ; call rax
0x000000000063b0d1 : jne 0x63b123 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000063b355 : jne 0x63b3a3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000063b398 : jne 0x63b3dc ; add bh, bh ; loopne 0x63b362 ; ret
0x000000000063b397 : jne 0x63b3dd ; add bh, bh ; loopne 0x63b363 ; ret
0x000000000063d601 : jne 0x63d7a2 ; mov rdi, rbp ; call rax
0x000000000063d6c8 : jne 0x63d7c0 ; mov rdi, r12 ; call rax
0x000000000063da4e : jne 0x63dae9 ; mov rdi, r15 ; call rax
0x000000000063d983 : jne 0x63db87 ; mov rdi, rbp ; call rax
0x000000000063de1e : jne 0x63deb9 ; mov rdi, r15 ; call rax
0x000000000063dd53 : jne 0x63df57 ; mov rdi, rbp ; call rax
0x000000000063e0c7 : jne 0x63e0da ; movzx eax, byte ptr [rdi + 0x538] ; ret
0x000000000063e0e7 : jne 0x63e0fa ; movzx eax, byte ptr [rdi + 0xa48] ; ret
0x000000000063e24e : jne 0x63e2e9 ; mov rdi, r15 ; call rax
0x000000000063e183 : jne 0x63e387 ; mov rdi, rbp ; call rax
0x000000000063e8cf : jne 0x63ea41 ; mov rdi, rbp ; call rax
0x0000000000640328 : jne 0x646120 ; call rax
0x000000000064024a : jne 0x646264 ; mov rdi, r13 ; call rax
0x0000000000647fb8 : jne 0x647fdf ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000647f97 : jne 0x647ff1 ; mov esi, 1 ; call rax
0x0000000000647f75 : jne 0x647ffb ; mov esi, 1 ; call rax
0x00000000006481b3 : jne 0x6481f3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000064833a : jne 0x648368 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000648318 : jne 0x64837a ; mov esi, 1 ; call rax
0x00000000006484b6 : jne 0x648500 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000649477 : jne 0x64986e ; call rax
0x0000000000649511 : jne 0x649960 ; mov rdi, r12 ; call rax
0x000000000064a064 : jne 0x64a50d ; call rax
0x000000000064a0ff : jne 0x64a5fa ; mov rdi, r13 ; call rax
0x000000000064bd49 : jne 0x64c3be ; call 0x6487d8
0x000000000064f99d : jne 0x650646 ; mov rdi, r12 ; call rax
0x000000000064f8fd : jne 0x65068e ; call rax
0x00000000006512a6 : jne 0x6514a8 ; mov rdi, r12 ; call rax
0x0000000000651564 : jne 0x6526e4 ; call rax
0x0000000000651601 : jne 0x65271f ; mov rdi, r14 ; call rax
0x0000000000652956 : jne 0x652967 ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00000000006528b9 : jne 0x6530c6 ; call rax
0x0000000000652954 : jne 0x6531d8 ; mov rdi, r13 ; call rax
0x0000000000653dbc : jne 0x6557ef ; call rax
0x0000000000653dbb : jne 0x6557f0 ; call rax
0x0000000000653dda : jne 0x655af1 ; mov rdi, r12 ; call rax
0x0000000000654059 : jne 0x6560b2 ; mov rdi, r13 ; call rax
0x0000000000653fbe : jne 0x656144 ; call rax
0x0000000000656893 : jne 0x6574df ; call rax
0x0000000000656aac : jne 0x657aa5 ; call rax
0x00000000006566ae : jne 0x657e9f ; mov rdi, rbx ; call rax
0x000000000065919a : jne 0x6591a3 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000659199 : jne 0x6591a4 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000065993d : jne 0x65994d ; mov esi, 1 ; jmp rax
0x000000000065bdf6 : jne 0x65be05 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000065c78d : jne 0x65c79d ; mov esi, 1 ; jmp rax
0x000000000065e306 : jne 0x65e2e3 ; mov dword ptr [rdi], r8d ; ret
0x00000000006625f2 : jne 0x662608 ; mov qword ptr [rax + 0x30], rsi ; xor eax, eax ; ret
0x000000000066418f : jne 0x66415b ; ret
0x000000000066457a : jne 0x664567 ; mov eax, edi ; not eax ; pop rbx ; ret
0x00000000006653a1 : jne 0x665352 ; pop rbx ; ret
0x0000000000666173 : jne 0x66615e ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000666fd3 : jne 0x666fd8 ; ret
0x0000000000667003 : jne 0x667008 ; ret
0x0000000000667033 : jne 0x667038 ; ret
0x0000000000667065 : jne 0x66706a ; ret
0x0000000000667095 : jne 0x66709a ; ret
0x00000000006670c5 : jne 0x6670ca ; ret
0x00000000006670f5 : jne 0x6670fa ; ret
0x00000000006682fa : jne 0x6682e3 ; pop rbx ; ret
0x0000000000668fd3 : jne 0x668fe2 ; ret
0x0000000000669717 : jne 0x669722 ; ret
0x0000000000669773 : jne 0x669788 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000669cb8 : jne 0x669cc2 ; ret
0x000000000066ab79 : jne 0x66ab6f ; nop ; pop rbp ; ret
0x000000000066ae5a : jne 0x66ae53 ; mov dword ptr [rbp - 0x14], edx ; nop ; pop rbp ; ret
0x000000000066ae6b : jne 0x66ae65 ; nop ; pop rbp ; ret
0x000000000066b432 : jne 0x66b446 ; add rsp, 8 ; ret
0x000000000066b792 : jne 0x66b782 ; ret
0x000000000066b850 : jne 0x66b85a ; ret
0x000000000066b870 : jne 0x66b87a ; ret
0x000000000066ba93 : jne 0x66ba4e ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000066ba78 : jne 0x66ba9e ; call rax
0x000000000066bcc3 : jne 0x66bc5a ; ret
0x000000000066bd1a : jne 0x66bd02 ; ret
0x000000000066bfb2 : jne 0x66bf9a ; ret
0x000000000066bfef : jne 0x66bfe2 ; ret
0x000000000066c03b : jne 0x66c01a ; ret
0x000000000066ccfc : jne 0x66ccf2 ; ret
0x000000000066d10d : jne 0x66d271 ; mov esi, ebp ; call rax
0x000000000066d0ed : jne 0x66d27e ; mov esi, ebp ; call rax
0x000000000066d217 : jne 0x66d287 ; mov esi, ebp ; call rax
0x000000000066d234 : jne 0x66d291 ; mov esi, ebp ; call rax
0x000000000066fde1 : jne 0x66fde1 ; mov rax, qword ptr [rdx] ; add rsp, 0x18 ; ret
0x0000000000671bfa : jne 0x671c00 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000672a90 : jne 0x672c05 ; call rax
0x00000000006735c7 : jne 0x6735d2 ; ret
0x0000000000673faa : jne 0x673f92 ; ret
0x0000000000673fda : jne 0x673fc2 ; ret
0x000000000067401b : jne 0x673ffa ; ret
0x000000000067442b : jne 0x674438 ; add rsp, 8 ; ret
0x0000000000674c28 : jne 0x67503b ; mov esi, ebp ; call rax
0x0000000000674c09 : jne 0x675048 ; mov esi, ebp ; call rax
0x0000000000674d4e : jne 0x675055 ; mov edx, ebp ; call rax
0x0000000000674d2b : jne 0x675062 ; mov esi, ebp ; call rax
0x000000000067516f : jne 0x6753a8 ; mov edx, r12d ; call rax
0x0000000000675149 : jne 0x6753b5 ; mov esi, r12d ; call rax
0x0000000000675ba1 : jne 0x675bab ; pop rbx ; ret
0x0000000000675fd6 : jne 0x676045 ; mov rcx, r12 ; mov rdx, rbx ; call rax
0x0000000000676537 : jne 0x676542 ; ret
0x0000000000676bc5 : jne 0x676c0e ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000676c68 : jne 0x676cb1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000676dc3 : jne 0x676dd0 ; add rsp, 8 ; ret
0x0000000000676f63 : jne 0x676f68 ; ret
0x0000000000676fd3 : jne 0x676fd8 ; ret
0x0000000000677045 : jne 0x67704a ; ret
0x00000000006770b5 : jne 0x6770ba ; ret
0x0000000000677dd5 : jne 0x677d9d ; add dword ptr [rcx + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xba49
0x000000000067861d : jne 0x678602 ; ret
0x00000000006787fd : jne 0x6787e2 ; ret
0x00000000006789dd : jne 0x6789c2 ; ret
0x0000000000678b30 : jne 0x678b26 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000678d47 : jne 0x678cec ; cmp byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000678fa9 : jne 0x678fb6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000679069 : jne 0x679076 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000067924d : jne 0x67925d ; mov esi, 1 ; jmp rax
0x00000000006792ba : jne 0x6792c7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006793ca : jne 0x6793d7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000679502 : jne 0x6794bf ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000067dcc5 : jne 0x67dd34 ; lea rdi, qword ptr [rsp + 0x20] ; call rax
0x000000000067e88d : jne 0x67e884 ; xor eax, eax ; ret
0x000000000067e8cc : jne 0x67e8bf ; mov eax, 1 ; ret
0x000000000067ec77 : jne 0x67ec3f ; add rbx, 1 ; call rax
0x000000000067f9e6 : jne 0x67f9cd ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000068151d : jne 0x681508 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000681a1d : jne 0x681a2d ; mov esi, 1 ; jmp rax
0x0000000000685f9d : jne 0x685fa8 ; call rax
0x0000000000685fbc : jne 0x685fd0 ; mov rdx, rbx ; call rax
0x0000000000685fc7 : jne 0x685fd8 ; pop rbx ; ret
0x0000000000686009 : jne 0x68600f ; jmp rax
0x0000000000686169 : jne 0x686168 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000687459 : jne 0x68744a ; ret
0x00000000006874f5 : jne 0x68753f ; call rax
0x000000000068758e : jne 0x6875be ; call rax
0x0000000000687982 : jne 0x687972 ; ret
0x0000000000688091 : jne 0x68804d ; pop rbx ; pop r14 ; ret
0x0000000000688118 : jne 0x6880fa ; ret
0x0000000000688191 : jne 0x688172 ; ret
0x00000000006884bb : jne 0x688504 ; call rax
0x0000000000688568 : jne 0x688542 ; ret
0x0000000000688c00 : jne 0x688c44 ; call rax
0x0000000000688b40 : jne 0x688c52 ; call rax
0x0000000000689aad : jne 0x689abd ; mov esi, 1 ; jmp rax
0x000000000068d83d : jne 0x68d84e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000068d881 : jne 0x68d876 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000068d99c : jne 0x68d9b8 ; call rax
0x000000000068dbe1 : jne 0x68dc01 ; call rax
0x000000000068db74 : jne 0x68dc0f ; call rax
0x000000000068e0ed : jne 0x68e0fa ; add rsp, 8 ; ret
0x000000000068e124 : jne 0x68e14d ; mov eax, 0xffffffff ; ret
0x000000000068e96f : jne 0x68e962 ; ret
0x000000000068e9c2 : jne 0x68e9aa ; ret
0x000000000068e9f4 : jne 0x68e9e2 ; ret
0x000000000068ea5f : jne 0x68ea52 ; ret
0x000000000068ea9f : jne 0x68ea92 ; ret
0x000000000068eb00 : jne 0x68eaf2 ; ret
0x000000000068eb30 : jne 0x68eb22 ; ret
0x000000000068eb9f : jne 0x68eb92 ; ret
0x000000000068ed59 : jne 0x68ed4a ; ret
0x000000000068edfa : jne 0x68edf0 ; and edx, 0x3f ; lea eax, dword ptr [rdx + 1] ; ret
0x000000000068ee6d : jne 0x68ee33 ; pop rbx ; ret
0x000000000068f2e6 : jne 0x68f2f7 ; mov rdi, rbx ; call rax
0x000000000068f362 : jne 0x68f357 ; mov eax, 1 ; ret
0x000000000068f99b : jne 0x68f995 ; lea eax, dword ptr [rdx - 1] ; ret
0x000000000068fa02 : jne 0x68fa08 ; jmp rax
0x000000000068fb25 : jne 0x68fb19 ; mov rax, qword ptr [rdx] ; add rsp, 8 ; ret
0x000000000068fde9 : jne 0x68fdda ; ret
0x00000000006903e4 : jne 0x69040d ; mov eax, 0xffffffff ; ret
0x0000000000692676 : jne 0x692683 ; pop rbx ; ret
0x0000000000697b67 : jne 0x697b1b ; add al, ch ; ret 0xfe99
0x000000000069c913 : jne 0x69c8d2 ; ret
0x000000000069f508 : jne 0x69f512 ; ret
0x000000000069f595 : jne 0x69f58f ; mov eax, 1 ; ret
0x000000000069f5de : jne 0x69f5d7 ; mov eax, 1 ; ret
0x000000000069f62e : jne 0x69f627 ; mov eax, 1 ; ret
0x000000000069f67e : jne 0x69f677 ; mov eax, 1 ; ret
0x000000000069f730 : jne 0x69f728 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000069f82a : jne 0x69f813 ; pop rbx ; ret
0x000000000069f91f : jne 0x69f918 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000069fa32 : jne 0x69fa1b ; pop rbx ; ret
0x000000000069fb30 : jne 0x69fb28 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000069fc43 : jne 0x69fc2b ; pop rbx ; ret
0x000000000069fd3e : jne 0x69fd38 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000069fe59 : jne 0x69fe43 ; pop rbx ; ret
0x00000000006a07e7 : jne 0x6a07da ; ret
0x00000000006a0803 : jne 0x6a0814 ; xor eax, eax ; ret
0x00000000006a08e5 : jne 0x6a08da ; ret
0x00000000006a0918 : jne 0x6a0912 ; ret
0x00000000006a0a06 : jne 0x6a09fe ; add rsp, 8 ; ret
0x00000000006a0c11 : jne 0x6a0c08 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006a0e82 : jne 0x6a0e57 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000006a1924 : jne 0x6a1912 ; ret
0x00000000006a19e1 : jne 0x6a19d2 ; ret
0x00000000006a1a24 : jne 0x6a1a12 ; ret
0x00000000006a1a64 : jne 0x6a1a52 ; ret
0x00000000006a1b08 : jne 0x6a1af4 ; xor al, al ; ret
0x00000000006a1cc4 : jne 0x6a1c92 ; ret
0x00000000006a1d31 : jne 0x6a1cf2 ; ret
0x00000000006a1e14 : jne 0x6a1de2 ; ret
0x00000000006a1e38 : jne 0x6a1e47 ; lea rax, qword ptr [rdi + rsi - 1] ; ret
0x00000000006a3073 : jne 0x6a30da ; xor eax, eax ; call 0x67fb56
0x00000000006a3313 : jne 0x6a3322 ; ret
0x00000000006a416f : jne 0x6a4162 ; ret
0x00000000006a41ad : jne 0x6a419a ; ret
0x00000000006a4720 : jne 0x6a4714 ; fstp st(1) ; ret
0x00000000006a4897 : jne 0x6a4882 ; ret
0x00000000006a48ed : jne 0x6a48d2 ; ret
0x00000000006a4941 : jne 0x6a4922 ; ret
0x00000000006a4ba3 : jne 0x6a4b92 ; ret
0x00000000006a4df7 : jne 0x6a4dee ; movapd xmm0, xmm1 ; ret
0x00000000006a53b5 : jne 0x6a539a ; ret
0x00000000006a5411 : jne 0x6a53f2 ; ret
0x00000000006a66b6 : jne 0x6a66e2 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006a6977 : jne 0x6a697e ; pop rbx ; ret
0x00000000006a69aa : jne 0x6a6ab6 ; call rax
0x00000000006a7564 : jne 0x6a756d ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x00000000006a761d : jne 0x6a76a8 ; xor esi, esi ; call rax
0x00000000006a7562 : jne 0x6a76e5 ; xor esi, esi ; call rax
0x00000000006a795a : jne 0x6a7966 ; pop rbx ; ret
0x00000000006a829f : jne 0x6a8292 ; ret
0x00000000006a82d4 : jne 0x6a82ca ; ret
0x00000000006a8484 : jne 0x6a847f ; mov eax, 1 ; ret
0x00000000006a84cf : jne 0x6a84c2 ; ret
0x00000000006a8519 : jne 0x6a850a ; ret
0x00000000006a85d4 : jne 0x6a85ce ; mov rax, qword ptr [rax + 8] ; ret
0x00000000006a87c7 : jne 0x6a8876 ; mov rdi, rbx ; call rax
0x00000000006a8951 : jne 0x6a8948 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006a8b04 : jne 0x6a8afe ; mov rax, qword ptr [rax + 8] ; ret
0x00000000006a8b59 : jne 0x6a8b4a ; ret
0x00000000006a8c7d : jne 0x6a8c8d ; mov esi, 1 ; jmp rax
0x00000000006a8f0b : jne 0x6a8f08 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000006a9263 : jne 0x6a9260 ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000006a96d3 : jne 0x6a96d0 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000006a9781 : jne 0x6a9762 ; ret
0x00000000006a9821 : jne 0x6a9802 ; ret
0x00000000006aa6d3 : jne 0x6aa6d0 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000006aa7af : jne 0x6aa7a8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006aa7f1 : jne 0x6aa7e6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006aada9 : jne 0x6aadb6 ; add rsp, 8 ; ret
0x00000000006ab1f1 : jne 0x6ab1fe ; add rsp, 8 ; ret
0x00000000006ad5a0 : jne 0x6ad598 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006b17dd : jne 0x6b17f4 ; call rax
0x00000000006b3475 : jne 0x6b34bb ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006b6acd : jne 0x6b6add ; mov esi, 1 ; jmp rax
0x00000000006bc4fc : jne 0x6bc4f2 ; ret
0x00000000006bc52e : jne 0x6bc51a ; ret
0x00000000006bf2bb : jne 0x6bf2b2 ; ret
0x00000000006bfca9 : jne 0x6bfcaf ; jmp rax
0x00000000006bfcc9 : jne 0x6bfccf ; jmp rax
0x00000000006bfd1d : jne 0x6bfd23 ; jmp rax
0x00000000006bfd90 : jne 0x6bfdbd ; mov rdi, rbp ; call rax
0x00000000006bfddd : jne 0x6bfde3 ; jmp rax
0x00000000006bfdfd : jne 0x6bfe03 ; jmp rax
0x00000000006c02be : jne 0x6c02cb ; call rdx
0x00000000006c03cd : jne 0x6c03d3 ; jmp rax
0x00000000006c04b0 : jne 0x6c04b6 ; jmp rax
0x00000000006c0856 : jne 0x6c0967 ; mov rdi, r12 ; call rax
0x00000000006c5793 : jne 0x6c5782 ; ret
0x00000000006c59ee : jne 0x6c5a2b ; mov eax, edx ; pop rbx ; ret
0x00000000006c6977 : jne 0x6c695a ; ret
0x00000000006c69dc : jne 0x6c69a2 ; ret
0x00000000006c6a67 : jne 0x6c6a32 ; ret
0x00000000006c6d52 : jne 0x6c6d42 ; ret
0x00000000006c70be : jne 0x6c7092 ; pop rbx ; ret
0x00000000006c7bb3 : jne 0x6c7bb8 ; ret
0x00000000006c9df7 : jne 0x6c9dd6 ; ret
0x00000000006cb747 : jne 0x6cb72e ; add rsp, 8 ; ret
0x00000000006cb787 : jne 0x6cb76e ; add rsp, 8 ; ret
0x00000000006cba08 : jne 0x6cb9fe ; add rsp, 8 ; ret
0x00000000006cba87 : jne 0x6cba7a ; ret
0x00000000006cbd18 : jne 0x6cbd0d ; mov byte ptr [rdi], 0 ; ret
0x00000000006cc280 : jne 0x6cc261 ; mov byte ptr [rsi], 0 ; ret
0x00000000006cda9e : jne 0x6cda93 ; ret
0x00000000006cdd14 : jne 0x6cdd0b ; ret
0x00000000006ce0fd : jne 0x6ce10b ; ret
0x00000000006ce4e3 : jne 0x6ce4cc ; mov dword ptr [rsi], eax ; ret
0x00000000006ce54b : jne 0x6ce534 ; mov dword ptr [rsi], eax ; ret
0x00000000006ce5ce : jne 0x6ce5c3 ; ret
0x00000000006cf483 : jne 0x6cf494 ; xor eax, eax ; ret
0x00000000006d08cb : jne 0x6d08b6 ; add rsp, 8 ; ret
0x00000000006d10e8 : jne 0x6d10f9 ; mov rsi, rsp ; call rax
0x00000000006d1228 : jne 0x6d11ba ; mov eax, 2 ; ret
0x00000000006d148d : jne 0x6d1472 ; ret
0x00000000006d1d75 : jne 0x6d1d86 ; mov rax, rbx ; pop rbx ; ret
0x00000000006d1dbf : jne 0x6d1dd4 ; mov rsi, rbx ; xor ebx, ebx ; call rax
0x00000000006d45a6 : jne 0x6d459f ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x00000000006d46d7 : jne 0x6d46d0 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x00000000006d487b : jne 0x6d4874 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x00000000006d4c34 : jne 0x6d4c2b ; xor eax, eax ; add rsp, 8 ; ret
0x00000000006d4c94 : jne 0x6d4c8b ; xor eax, eax ; add rsp, 8 ; ret
0x00000000006d6089 : jne 0x6d6092 ; ret
0x00000000006d606b : jne 0x6d60a8 ; add byte ptr [rax - 0x77], cl ; sub bl, r14b ; ret
0x00000000006d6114 : jne 0x6d6122 ; ret
0x00000000006d6136 : jne 0x6d61a0 ; xor al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006d63b4 : jne 0x6d63c3 ; ret
0x0000000000722e8e : jne 0x722f12 ; fisub word ptr [r11 - 4] ; sbb al, 9 ; retf
0x0000000000722f5f : jne 0x722f59 ; add cl, ch ; ret 0x7f83
0x0000000000722f5f : jne 0x722f5a ; add cl, ch ; ret 0x7f83
0x0000000000734375 : jne 0x734346 ; call rax
0x0000000000734374 : jne 0x734347 ; call rax
0x0000000000735b8d : jne 0x735b61 ; jmp qword ptr [rax]
0x0000000000735b8c : jne 0x735b62 ; jmp qword ptr [rax]
0x0000000000737741 : jne 0x73774b ; add dl, ah ; push 0xd3 ; jmp rax
0x000000000073c64d : jne 0x73c630 ; jmp qword ptr [rax]
0x0000000000745acd : jne 0x745ac1 ; jmp qword ptr [rax]
0x0000000000747129 : jne 0x747138 ; add al, al ; push rdi ; hlt ; jmp qword ptr [rax]
0x000000000074a931 : jne 0x74a941 ; add byte ptr [rax], dh ; stc ; call qword ptr [rax]
0x000000000075ed99 : jne 0x75ed6f ; jmp qword ptr [rsi]
0x0000000000768031 : jne 0x76800c ; jmp qword ptr [rbx]
0x0000000000792c35 : jne 0x792c3f ; add al, bh ; retf -0x1d
0x0000000000792c55 : jne 0x792c5f ; add al, ch ; retf -0x1d
0x0000000000792c54 : jne 0x792c60 ; add al, ch ; retf -0x1d
0x0000000000792c75 : jne 0x792c7f ; add byte ptr [rax], cl ; retf
0x0000000000792c95 : jne 0x792c9f ; add byte ptr [rsi], bl ; retf
0x00000000007a2c8d : jne 0x7a2c9b ; add al, ah ; jmp 0x7aef9d
0x00000000007a2c8c : jne 0x7a2c9c ; add al, ah ; jmp 0x7aef9e
0x00000000007b2c75 : jne 0x7b2c83 ; add al, cl ; out dx, al ; jmp rsp
0x00000000007bed49 : jne 0x7bed3e ; jmp qword ptr [rcx]
0x00000000007ecc24 : jne 0x7ecc30 ; lodsd eax, dword ptr [rsi] ; or al, 0 ; ret 0x501
0x00000000007f0e7f : jne 0x7f0e74 ; or eax, dword ptr [rbx] ; retf
0x00000000007f3496 : jne 0x7f349f ; retf
0x00000000007fa623 : jne 0x7fa62e ; mov edx, 0xcd050183 ; je 0x7fa635 ; retf
0x0000000000406ccb : jno 0x406cae ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000499507 : jno 0x49952f ; add cl, cl ; ret
0x0000000000499557 : jno 0x49957f ; add cl, cl ; ret
0x00000000004c385b : jno 0x4c38b8 ; sbb dword ptr [rax], eax ; leave ; ret
0x00000000004c896a : jno 0x4c898f ; add byte ptr [rbx - 0x7bf0fe05], al ; retf
0x0000000000513a7d : jno 0x513a14 ; push rax ; add dword ptr [rax + 0x69], ecx ; rol byte ptr [rax], cl ; retf 0x3b9a
0x0000000000530fb5 : jno 0x530fbf ; add byte ptr [rax], al ; call rax
0x000000000057d590 : jno 0x57d5ac ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000598a0f : jno 0x598a24 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a8ca9 : jno 0x5a8cb1 ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000005a8d39 : jno 0x5a8d41 ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000005ad5b7 : jno 0x5ad5d0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b3ff9 : jno 0x5b4001 ; xor eax, eax ; call 0x680af2
0x00000000005b40a6 : jno 0x5b40ae ; xor eax, eax ; call 0x680af2
0x00000000005b480a : jno 0x5b4812 ; xor eax, eax ; call 0x680af2
0x00000000005b48be : jno 0x5b48c6 ; xor eax, eax ; call 0x680af2
0x00000000005b5000 : jno 0x5b5008 ; xor eax, eax ; call 0x681300
0x00000000005b507b : jno 0x5b5083 ; xor eax, eax ; call 0x681300
0x00000000005c416f : jno 0x5c4177 ; xor eax, eax ; call 0x680b92
0x00000000005c4890 : jno 0x5c4898 ; xor eax, eax ; call 0x680b92
0x00000000005c6f70 : jno 0x5c6f76 ; call 0x403a04
0x00000000005d37f5 : jno 0x5d37fe ; mov rdi, rax ; call 0x68fa47
0x00000000005d4862 : jno 0x5d486d ; mov eax, 0 ; call 0x681303
0x00000000005d509e : jno 0x5d50a9 ; mov eax, 0 ; call 0x681303
0x00000000005ee5aa : jno 0x5ee5ae ; jmp rax
0x00000000005f4035 : jno 0x5f4040 ; mov eax, 0 ; call 0x680acd
0x00000000005f50a1 : jno 0x5f50ac ; mov eax, 0 ; call 0x681303
0x00000000005f7296 : jno 0x5f729a ; jmp rax
0x00000000005f8c99 : jno 0x5f8ca1 ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000005fc5f4 : jno 0x5fc5fa ; call 0x6a9094
0x0000000000604143 : jno 0x60414b ; xor eax, eax ; call 0x680b92
0x0000000000604862 : jno 0x60486a ; xor eax, eax ; call 0x681300
0x0000000000607092 : jno 0x607099 ; mov rdi, r14 ; call rax
0x000000000061d5ef : jno 0x61d5f4 ; pop rbp ; ret
0x000000000061d61d : jno 0x61d622 ; pop rbp ; ret
0x000000000061df3b : jno 0x61df4b ; or al, byte ptr [rax] ; leave ; ret
0x0000000000625189 : jno 0x62518d ; jmp rax
0x0000000000625f1a : jno 0x625f21 ; mov rdi, rbx ; call rax
0x0000000000625fae : jno 0x625fb5 ; mov rdi, rbx ; call rax
0x0000000000625fcc : jno 0x625fd3 ; mov rdi, rbx ; call rax
0x0000000000625fea : jno 0x625ff1 ; mov rdi, rbx ; call rax
0x0000000000626008 : jno 0x62600f ; mov rdi, rbx ; call rax
0x0000000000626201 : jno 0x626208 ; mov rdi, rbx ; call rax
0x00000000006263b2 : jno 0x6263b9 ; mov rdi, rbx ; call rax
0x00000000006263e5 : jno 0x6263ec ; mov rdi, rbx ; call rax
0x000000000062640e : jno 0x626415 ; mov rdi, rbx ; call rax
0x0000000000626434 : jno 0x62643b ; mov rdi, rbx ; call rax
0x00000000006276aa : jno 0x6276b4 ; xor eax, eax ; add rsp, 8 ; ret
0x000000000062a563 : jno 0x62a56a ; mov rdi, r12 ; call rax
0x000000000062a58c : jno 0x62a593 ; mov rdi, r12 ; call rax
0x000000000062a6f4 : jno 0x62a6fb ; mov rdi, rbp ; call rax
0x000000000062ad0a : jno 0x62ad11 ; mov rdi, rbx ; call rax
0x000000000062ad26 : jno 0x62ad2d ; mov rdi, rbx ; call rax
0x000000000062ad7e : jno 0x62ad85 ; mov rdi, rbp ; call rax
0x000000000062ae3e : jno 0x62ae45 ; mov rdi, rbp ; call rax
0x000000000062aefe : jno 0x62af05 ; mov rdi, rbp ; call rax
0x000000000062afbe : jno 0x62afc5 ; mov rdi, rbp ; call rax
0x000000000062b1c9 : jno 0x62b1d1 ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000062b259 : jno 0x62b261 ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000062d5aa : jno 0x62d5b0 ; call 0x4d982c
0x000000000062d5a5 : jno 0x62d5b0 ; mov esi, 0x71df48 ; call 0x4d9831
0x000000000062e1ba : jno 0x62e1be ; ret
0x00000000006313a3 : jno 0x631423 ; cmp eax, 0x9c8d4800 ; ret
0x0000000000634027 : jno 0x63402f ; xor eax, eax ; call 0x680aca
0x0000000000634048 : jno 0x63404e ; call 0x680ac8
0x0000000000634071 : jno 0x634077 ; call 0x680ac8
0x0000000000634082 : jno 0x63408a ; xor eax, eax ; call 0x680aca
0x00000000006340a2 : jno 0x6340aa ; xor eax, eax ; call 0x680aca
0x00000000006340b8 : jno 0x6340c0 ; xor eax, eax ; call 0x680aca
0x000000000063ed57 : jno 0x63ed46 ; dec dword ptr [rax - 0x77] ; ret
0x000000000063ed56 : jno 0x63ed47 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000644093 : jno 0x64409b ; xor eax, eax ; call 0x680af2
0x00000000006440a4 : jno 0x6440ac ; xor eax, eax ; call 0x680af2
0x000000000064412a : jno 0x644132 ; xor eax, eax ; call 0x680b42
0x0000000000644828 : jno 0x644830 ; xor eax, eax ; call 0x681300
0x0000000000644855 : jno 0x64485d ; xor eax, eax ; call 0x681300
0x0000000000644894 : jno 0x64489c ; xor eax, eax ; call 0x681300
0x000000000064502e : jno 0x645036 ; xor eax, eax ; call 0x681300
0x0000000000645079 : jno 0x645081 ; xor eax, eax ; call 0x681300
0x00000000006450dc : jno 0x6450e4 ; xor eax, eax ; call 0x681300
0x00000000006568c7 : jno 0x6568cb ; call rax
0x00000000006568c6 : jno 0x6568cc ; call rax
0x000000000065909a : jno 0x6590a1 ; mov rdi, rbx ; call rax
0x0000000000659621 : jno 0x659628 ; mov rdi, rbx ; call rax
0x000000000065969d : jno 0x6596a8 ; add rsp, 0x98 ; ret
0x000000000065c11a : jno 0x65c121 ; mov rdi, rbx ; call rax
0x000000000065c13a : jno 0x65c141 ; mov rdi, rbx ; call rax
0x000000000065c4e1 : jno 0x65c4e8 ; mov rdi, rbx ; call rax
0x000000000065c508 : jno 0x65c50f ; mov rdi, rbx ; call rax
0x0000000000663b39 : jno 0x663b4d ; xchg eax, ebp ; ret 0xd184
0x00000000006bea63 : jno 0x6bea4b ; xor al, 0 ; ret
0x0000000000720d96 : jno 0x720da0 ; add byte ptr [rax], cl ; xor dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0x1000
0x0000000000721196 : jno 0x7211a0 ; add byte ptr [rax], cl ; xor dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret
0x0000000000721df2 : jno 0x721e23 ; ret
0x0000000000739925 : jno 0x739901 ; call qword ptr [rax]
0x000000000073a9e1 : jno 0x73a9ec ; add byte ptr [rax], dh ; or bl, ch ; call qword ptr [rax]
0x000000000073b06d : jno 0x73b04e ; call rax
0x00000000007419dd : jno 0x7419c8 ; call rax
0x000000000074338d : jno 0x74337c ; jmp qword ptr [rax]
0x0000000000744081 : jno 0x74408f ; add byte ptr [rax], ah ; in eax, dx ; call rax
0x000000000074484d : jno 0x74483f ; call rax
0x000000000074540d : jno 0x745400 ; jmp qword ptr [rax]
0x0000000000747061 : jno 0x747070 ; add byte ptr [rax], dl ; push rax ; hlt ; jmp rax
0x00000000007493d5 : jno 0x7493d0 ; jmp rax
0x00000000007493e5 : jno 0x7493e0 ; call qword ptr [rax]
0x00000000007493e4 : jno 0x7493e1 ; call qword ptr [rax]
0x0000000000749425 : jno 0x749420 ; call rax
0x000000000074a821 : jno 0x74a831 ; add byte ptr [rax + 0x33], dl ; stc ; call rax
0x000000000075cfa1 : jno 0x75cf76 ; jmp qword ptr [rbx]
0x000000000075fe19 : jno 0x75fdf0 ; jmp qword ptr [rcx]
0x000000000075fe39 : jno 0x75fe10 ; jmp qword ptr [rsi]
0x000000000076285d : jno 0x762866 ; add al, bh ; mov ah, dl ; jmp qword ptr [rbx]
0x00000000007628ad : jno 0x7628b6 ; add byte ptr [rbp + rcx*4 - 0x2c], bl ; jmp qword ptr [rbx]
0x0000000000773b21 : jno 0x773b00 ; jmp rcx
0x0000000000797809 : jno 0x7977f2 ; jmp rax
0x0000000000797808 : jno 0x7977f3 ; jmp rax
0x000000000079fca9 : jno 0x79fc95 ; call qword ptr [rdi]
0x00000000007b28fd : jno 0x7b290b ; add byte ptr [rax - 0x12], al ; out dx, al ; jmp qword ptr [rsi]
0x00000000007cb40c : jno 0x7cb412 ; add byte ptr [rax], al ; ret
0x00000000007cb409 : jno 0x7cb412 ; test eax, 0x71 ; ret
0x00000000007e5be6 : jno 0x7e5c1a ; ret
0x00000000005f5703 : jnp 0x43ea8f64 ; xor al, 0x29 ; ret 0xd089
0x00000000004535e3 : jnp 0x4535e7 ; dec ecx ; ret
0x000000000045a251 : jnp 0x45a29c ; add byte ptr es:[rax - 0x77], cl ; ret 0x8948
0x00000000004969d8 : jnp 0x496a01 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000496a14 : jnp 0x496a3d ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000496a4a : jnp 0x496a73 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000496a80 : jnp 0x496aa9 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000496a7f : jnp 0x496aaa ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000496ab8 : jnp 0x496ae1 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000509776 : jnp 0x509794 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050adc9 : jnp 0x50ae1f ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000052edf8 : jnp 0x52ee70 ; add byte ptr [rax - 0x77], cl ; ja 0x52ee0e ; ret
0x0000000000546a3a : jnp 0x546a58 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054cc2f : jnp 0x54cc4d ; add bl, ch ; retf 0x41f0
0x000000000055970d : jnp 0x55972a ; add byte ptr [rax - 0x7d], cl ; cli ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000055d0dd : jnp 0x55d06a ; ret 0xbc80
0x0000000000568a8c : jnp 0x568aa7 ; add byte ptr [rax + 0x1847b60f], dl ; ret
0x00000000005897e1 : jnp 0x5897f7 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058cc1c : jnp 0x58cc37 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058cd7b : jnp 0x58cdca ; verw bx ; test dword ptr [rax - 0x77], ecx ; ret
0x000000000058e4e7 : jnp 0x58e505 ; str word ptr [rax - 0x77] ; ret
0x000000000059581a : jnp 0x595840 ; call 0x6a1a94
0x00000000005969f5 : jnp 0x596a0e ; add byte ptr [rax - 0x77], cl ; ret
0x000000000059cb58 : jnp 0x59cb73 ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000005c904f : jnp 0x5c9061 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005d8b6c : jnp 0x5d8b7d ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e6d02 : jnp 0x5e6d15 ; add cl, cl ; ret
0x00000000005f0ee3 : jnp 0x5f0eb8 ; std ; dec ecx ; ret
0x00000000005f7f96 : jnp 0x5f7fa5 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005f8018 : jnp 0x5f8027 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005f8502 : jnp 0x5f851b ; mov rsi, rax ; call 0x6747e7
0x00000000005f85c7 : jnp 0x5f85e0 ; mov rsi, rax ; call 0x6747e7
0x00000000006031dd : jnp 0x6031ec ; add byte ptr [rax - 0x77], cl ; ret
0x000000000061adaa : jnp 0x61adf0 ; add bh, bh ; ror cl, 1 ; ret
0x000000000061f021 : jnp 0x61f041 ; or al, byte ptr [rax] ; leave ; ret
0x000000000062c0b0 : jnp 0x62c0c6 ; call 0x628b74
0x0000000000630fac : jnp 0x630ff1 ; add byte ptr [rax - 0x73], cl ; lodsb al, byte ptr [rsi] ; ret
0x0000000000660444 : jnp 0x66049b ; mov rsi, rax ; call rdx
0x0000000000667975 : jnp 0x6679b3 ; call 0x403b94
0x00000000006794ff : jnp 0x679512 ; add byte ptr [rbp - 0x4b], dh ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000068fec6 : jnp 0x68fece ; add rsp, 8 ; ret
0x000000000068fec5 : jnp 0x68fecf ; add rsp, 8 ; ret
0x000000000069049b : jnp 0x69049f ; ret
0x000000000069049a : jnp 0x6904a0 ; ret
0x00000000006913ba : jnp 0x6913c8 ; call 0x6cde64
0x0000000000691506 : jnp 0x69150b ; pop rbx ; ret
0x0000000000691505 : jnp 0x69150c ; pop rbx ; ret
0x0000000000692551 : jnp 0x692556 ; pop rbx ; ret
0x0000000000692550 : jnp 0x692557 ; pop rbx ; ret
0x0000000000693300 : jnp 0x693308 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006932ff : jnp 0x693309 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000698b23 : jnp 0x698b28 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000698b22 : jnp 0x698b29 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000722e3c : jnp 0x722e06 ; retf 0x6cfd
0x0000000000738475 : jnp 0x73844e ; call rax
0x000000000073b0c5 : jnp 0x73b0a6 ; call rax
0x000000000073b0c4 : jnp 0x73b0a7 ; call rax
0x0000000000740575 : jnp 0x74055e ; jmp qword ptr [rax]
0x0000000000741131 : jnp 0x74113e ; add al, ah ; mov fs, esi ; call rax
0x0000000000741a35 : jnp 0x741a20 ; jmp rax
0x0000000000744291 : jnp 0x74429d ; add byte ptr [rax], dl ; ret 0xffed
0x0000000000747259 : jnp 0x747268 ; add byte ptr [rax - 0x5c], dl ; hlt ; call qword ptr [rax]
0x0000000000749565 : jnp 0x749560 ; call rax
0x0000000000777c39 : jnp 0x777c19 ; jmp qword ptr [rdi]
0x0000000000777c61 : jnp 0x777c41 ; call qword ptr [rbx]
0x0000000000777e41 : jnp 0x777e21 ; jmp qword ptr [rdx]
0x0000000000777e59 : jnp 0x777e39 ; jmp qword ptr [rdx]
0x0000000000790e39 : jnp 0x790e1f ; call qword ptr [rax]
0x0000000000790e51 : jnp 0x790e37 ; call qword ptr [rax]
0x00000000007944a9 : jnp 0x794491 ; call rsp
0x00000000007944a8 : jnp 0x794492 ; call rsp
0x0000000000418216 : jns 0x418243 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000418215 : jns 0x418244 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000426fa9 : jns 0x426fd8 ; add cl, cl ; ret
0x0000000000428235 : jns 0x428261 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000428234 : jns 0x428262 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000450953 : jns 0x450937 ; add byte ptr es:[rax - 0x77], cl ; ret 0x8948
0x0000000000458cfa : jns 0x458d23 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000496be2 : jns 0x496c0b ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004b6669 : jns 0x4b66be ; cli ; dec ecx ; ret
0x00000000004f920e : jns 0x4f922d ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005263ad : jns 0x526394 ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x0000000000526c7c : jns 0x526c9c ; add byte ptr [rax - 0x77], cl ; ret
0x000000000053924e : jns 0x539269 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005491e8 : jns 0x549202 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054cddf : jns 0x54cdfd ; add bl, ch ; retf 0x41f0
0x0000000000559925 : jns 0x55993e ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005815b5 : jns 0x5815bb ; jmp 0x58157f
0x0000000000589943 : jns 0x589959 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005eaefa : jns 0x5eaf43 ; add bh, bh ; ror cl, 1 ; ret
0x00000000005f9246 : jns 0x5f9259 ; add byte ptr [rax - 0x7d], cl ; cli ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000006033dc : jns 0x6033eb ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006281d8 : jns 0x6281e4 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000062999a : jns 0x6299a6 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000062c12a : jns 0x62c16c ; cmp eax, 0x940f0000 ; ret
0x0000000000646c7d : jns 0x646c8b ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006784ad : jns 0x6784a4 ; xor eax, eax ; ret
0x0000000000690494 : jns 0x69049f ; mov byte ptr [rdi + 0x7a], al ; mov byte ptr [rdi + 0x7b], 0 ; ret
0x0000000000690da4 : jns 0x690dad ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000690da3 : jns 0x690dae ; add rsp, 0x10 ; pop rbx ; ret
0x00000000006914f5 : jns 0x6914ff ; mov eax, 0xa ; pop rbx ; ret
0x00000000006914f4 : jns 0x691500 ; mov eax, 0xa ; pop rbx ; ret
0x00000000006915cd : jns 0x6915c7 ; mov eax, 1 ; ret
0x000000000069276a : jns 0x692774 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000692769 : jns 0x692775 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006927f4 : jns 0x6927f9 ; pop rbx ; ret
0x00000000006927f3 : jns 0x6927fa ; pop rbx ; ret
0x0000000000692bd9 : jns 0x692be3 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000692bd8 : jns 0x692be4 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000006a3332 : jns 0x6a3339 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000721b91 : jns 0x721c00 ; retf 0x48ac
0x0000000000722a01 : jns 0x722a59 ; add eax, 0x447e62e9 ; ret 0x2d4f
0x0000000000722e8f : jns 0x722ee8 ; fisub word ptr [rbx - 4] ; sbb al, 9 ; retf
0x00000000007388f5 : jns 0x7388d1 ; jmp qword ptr [rax - 0x35]
0x000000000073bce5 : jns 0x73bcc7 ; jmp qword ptr [rax]
0x00000000007410e1 : jns 0x7410ee ; add al, al ; mov esi, esp ; jmp rax
0x00000000007410f1 : jns 0x7410fe ; add al, ah ; mov esi, esp ; call qword ptr [rax]
0x0000000000744241 : jns 0x74424f ; add byte ptr [rax], ah ; cmpsb byte ptr [rsi], byte ptr [rdi] ; in eax, dx ; call rax
0x00000000007448fd : jns 0x7448ef ; call rax
0x00000000007468f5 : jns 0x7468ec ; call rax
0x000000000074a9e9 : jns 0x74a9f9 ; add byte ptr [rax], al ; pop rdx ; stc ; jmp rax
0x0000000000783db4 : jns 0x783dbc ; add byte ptr [rax], al ; add al, 0xc4 ; ret
0x00000000007930a5 : jns 0x7930b1 ; add al, al ; add ah, ah ; call qword ptr [rdi]
0x00000000007ad399 : jns 0x7ad38a ; jmp qword ptr [rcx]
0x00000000007b30ed : jns 0x7b30fb ; add byte ptr [rax + 0xf], al ; out dx, eax ; jmp qword ptr [rcx]
0x00000000007b3105 : jns 0x7b3113 ; add byte ptr [rdx + 0xf], cl ; out dx, eax ; jmp qword ptr [rax]
0x00000000007cb45b : jns 0x7cb464 ; ret 0x79
0x00000000007fa510 : jns 0x7fa519 ; retf 0x7c
0x0000000000405004 : jo 0x40500c ; xor eax, eax ; call 0x681300
0x0000000000405003 : jo 0x40500d ; xor eax, eax ; call 0x681301
0x000000000040994c : jo 0x409990 ; add byte ptr es:[rdi], cl ; mov bh, 5 ; retf
0x0000000000429624 : jo 0x429650 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043411f : jo 0x4340ef ; insd dword ptr [rdi], dx ; add byte ptr [rax - 0x39], cl ; test al, 0x58 ; ret
0x00000000004408e7 : jo 0x44094d ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000045cd30 : jo 0x45cd82 ; add byte ptr [rax - 0x77], cl ; ret 0xbe
0x000000000045cf9a : jo 0x45cfec ; add byte ptr [rax - 0x77], cl ; ret 0xbe
0x0000000000471c7c : jo 0x471ca2 ; add cl, cl ; ret
0x00000000004782c6 : jo 0x4782ce ; add byte ptr [rax], al ; leave ; ret
0x000000000047c7f5 : jo 0x47c857 ; pop r12 ; pop rbp ; ret
0x00000000004a5f47 : jo 0x4a5f5c ; mov dh, 0x45 ; retf
0x00000000004b7df0 : jo 0x4b7d7b ; cli ; dec ecx ; ret
0x00000000004b95ce : jo 0x4b95b3 ; cli ; dec ecx ; ret
0x00000000004e6b42 : jo 0x4e6ad4 ; add al, 0x39 ; ret 0x9e0f
0x00000000004e6b41 : jo 0x4e6ad5 ; add al, 0x39 ; ret 0x9e0f
0x00000000004e6b90 : jo 0x4e6b22 ; add al, 0x89 ; ret 0x8b48
0x00000000004e6b8f : jo 0x4e6b23 ; add al, 0x89 ; ret 0x8b48
0x00000000004e6c52 : jo 0x4e6be4 ; add al, 0x89 ; ret 0x8b48
0x00000000004e6c51 : jo 0x4e6be5 ; add al, 0x89 ; ret 0x8b48
0x00000000004e935a : jo 0x4e92ec ; add al, 0x39 ; ret 0x9f0f
0x00000000004e9359 : jo 0x4e92ed ; add al, 0x39 ; ret 0x9f0f
0x00000000004e93a8 : jo 0x4e933a ; add al, 0x89 ; ret 0x858b
0x00000000004e93a7 : jo 0x4e933b ; add al, 0x89 ; ret 0x858b
0x00000000004f7550 : jo 0x4f7573 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050e2fd : jo 0x50e35f ; pop rbp ; pop r12 ; ret
0x000000000050facd : jo 0x50fa7c ; add dword ptr [rbp + 0x63], esi ; call rax
0x000000000050facc : jo 0x50fa7d ; add dword ptr [rbp + 0x63], esi ; call rax
0x00000000005115b2 : jo 0x5115b3 ; rol dword ptr [rcx], 0x75 ; cmp al, 0x48 ; mov edi, ebp ; call rcx
0x00000000005133df : jo 0x51338e ; add dword ptr [rbp + 2], esi ; jmp rax
0x00000000005133de : jo 0x51338f ; add dword ptr [rbp + 2], esi ; jmp rax
0x0000000000518a3e : jo 0x5189ed ; add dword ptr [rbp + 0x6e], esi ; call rax
0x0000000000518a3d : jo 0x5189ee ; add dword ptr [rbp + 0x6e], esi ; call rax
0x00000000005189de : jo 0x5189f8 ; jne 0x518a8a ; call rdx
0x000000000051d642 : jo 0x51d664 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000052220f : jo 0x52221e ; mov qword ptr [rsi], rax ; ret
0x000000000052221e : jo 0x52222d ; mov qword ptr [rsi], rax ; ret
0x000000000052243f : jo 0x522456 ; mov qword ptr [rsi], rax ; ret
0x000000000052244e : jo 0x522465 ; mov qword ptr [rsi], rax ; ret
0x000000000052720f : jo 0x52721e ; mov qword ptr [rsi], rax ; ret
0x000000000052721e : jo 0x52722d ; mov qword ptr [rsi], rax ; ret
0x000000000052743f : jo 0x527456 ; mov qword ptr [rsi], rax ; ret
0x000000000052744e : jo 0x527465 ; mov qword ptr [rsi], rax ; ret
0x00000000005361da : jo 0x53623c ; pop rbp ; pop r12 ; ret
0x0000000000536ccb : jo 0x536d3f ; add byte ptr [rcx], r8b ; pop rbx ; ret
0x0000000000537c08 : jo 0x537bf4 ; ret 0xfff4
0x0000000000542bdf : jo 0x542bee ; mov qword ptr [rsi], rax ; ret
0x0000000000542bee : jo 0x542bfd ; mov qword ptr [rsi], rax ; ret
0x0000000000542e0f : jo 0x542e26 ; mov qword ptr [rsi], rax ; ret
0x0000000000542e1e : jo 0x542e35 ; mov qword ptr [rsi], rax ; ret
0x000000000054a08d : jo 0x54a0a1 ; ret
0x000000000054a319 : jo 0x54a2c8 ; add dword ptr [rbp + 0x70], esi ; call rax
0x000000000054a318 : jo 0x54a2c9 ; add dword ptr [rbp + 0x70], esi ; call rax
0x000000000054a31d : jo 0x54a322 ; sal dh, 1 ; ret
0x000000000054d68a : jo 0x54d6a9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054f749 : jo 0x54f76a ; pop rbx ; pop r13 ; pop r14 ; ret
0x00000000005524b5 : jo 0x5524ef ; test sil, 1 ; jne 0x552519 ; call rsi
0x0000000000558a49 : jo 0x558a51 ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000563009 : jo 0x563010 ; mov rdi, rbp ; call rax
0x0000000000563062 : jo 0x563066 ; call rax
0x00000000005630ca : jo 0x5630d1 ; mov rdi, rbx ; call rax
0x0000000000563a29 : jo 0x563a30 ; mov rdi, rbx ; call rax
0x0000000000563a4d : jo 0x563a54 ; mov rdi, rbx ; call rax
0x0000000000563a71 : jo 0x563a78 ; mov rdi, rbx ; call rax
0x0000000000563a8f : jo 0x563a96 ; mov rdi, rbx ; call rax
0x0000000000563aad : jo 0x563ab4 ; mov rdi, rbx ; call rax
0x0000000000563acb : jo 0x563ad2 ; mov rdi, rbx ; call rax
0x0000000000563b99 : jo 0x563ba4 ; mov edi, 0xa02a40 ; call 0x68066f
0x0000000000563bc9 : jo 0x563bd4 ; mov edi, 0xa02a40 ; call 0x68066f
0x0000000000563f92 : jo 0x563f96 ; call rax
0x0000000000564002 : jo 0x564006 ; call rax
0x0000000000564061 : jo 0x564068 ; mov rdi, rbx ; call rax
0x0000000000564170 : jo 0x564177 ; mov rdi, rbx ; call rax
0x000000000056419f : jo 0x5641a6 ; mov rdi, rbx ; call rax
0x00000000005641cf : jo 0x5641d6 ; mov rdi, rbx ; call rax
0x00000000005641fd : jo 0x564204 ; mov rdi, rbx ; call rax
0x0000000000564222 : jo 0x564229 ; mov rdi, rbx ; call rax
0x0000000000564248 : jo 0x56424f ; mov rdi, rbx ; call rax
0x000000000056504b : jo 0x565053 ; xor eax, eax ; call 0x681300
0x00000000005670ff : jo 0x56710e ; mov qword ptr [rsi], rax ; ret
0x000000000056710e : jo 0x56711d ; mov qword ptr [rsi], rax ; ret
0x000000000056732f : jo 0x567346 ; mov qword ptr [rsi], rax ; ret
0x000000000056733e : jo 0x567355 ; mov qword ptr [rsi], rax ; ret
0x000000000056a282 : jo 0x56a29a ; add byte ptr [rax - 0x77], cl ; ret
0x000000000056a846 : jo 0x56a84d ; mov rdi, r14 ; call rax
0x000000000056a952 : jo 0x56a959 ; mov rdi, r14 ; call rax
0x000000000056a9b8 : jo 0x56a9bf ; mov rdi, r14 ; call rax
0x000000000056b7b9 : jo 0x56b7c1 ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000056b7b8 : jo 0x56b7c2 ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000056b849 : jo 0x56b851 ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000056ce8a : jo 0x56ce8e ; call rax
0x000000000056ce85 : jo 0x56ce8e ; mov esi, 0x703358 ; call rax
0x000000000056cf76 : jo 0x56cf7a ; call rax
0x000000000056cf71 : jo 0x56cf7a ; mov esi, 0x703368 ; call rax
0x000000000056f2df : jo 0x56f2e3 ; call rax
0x000000000056f2da : jo 0x56f2e3 ; mov esi, 0x703390 ; call rax
0x000000000056f876 : jo 0x56f87d ; mov rdi, r13 ; call rax
0x000000000056f875 : jo 0x56f87e ; mov rdi, r13 ; call rax
0x000000000056f9aa : jo 0x56f9b1 ; mov rdi, rbx ; call rax
0x000000000056f9a9 : jo 0x56f9b2 ; mov rdi, rbx ; call rax
0x000000000056fc11 : jo 0x56fc18 ; mov rdi, rbx ; call rax
0x000000000056fc10 : jo 0x56fc19 ; mov rdi, rbx ; call rax
0x0000000000572ef9 : jo 0x572f01 ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000572f89 : jo 0x572f91 ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000577152 : jo 0x57715c ; mov qword ptr [rbx + 0x18], rax ; call 0x573ba8
0x0000000000577532 : jo 0x57754d ; add byte ptr [rax - 0x77], cl ; ret
0x000000000057794c : jo 0x577956 ; mov qword ptr [rbx + 0x18], rax ; call 0x573ba8
0x0000000000577adf : jo 0x577ae6 ; mov rdi, r12 ; call rax
0x0000000000577ade : jo 0x577ae7 ; mov rdi, r12 ; call rax
0x000000000057d4ad : jo 0x57d50f ; pop rbp ; pop r12 ; ret
0x00000000005816ba : jo 0x5816c1 ; mov rdi, rbx ; call rax
0x0000000000581821 : jo 0x581828 ; mov rdi, rbx ; call rax
0x0000000000581dda : jo 0x581de1 ; mov rdi, rbx ; call rax
0x0000000000582041 : jo 0x582048 ; mov rdi, rbx ; call rax
0x0000000000583680 : jo 0x5836df ; ret
0x0000000000583f50 : jo 0x583fc9 ; add byte ptr [rcx], dh ; shr al, 0xf6 ; retf
0x0000000000584067 : jo 0x58406e ; mov rdi, rbp ; call rax
0x00000000005840a8 : jo 0x5840af ; mov rdi, rbp ; call rax
0x0000000000584066 : jo 0x5840de ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000005840a7 : jo 0x58411f ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000058466a : jo 0x584671 ; mov rdi, rbx ; call rax
0x00000000005846ca : jo 0x5846d1 ; mov rdi, rbx ; call rax
0x000000000058472a : jo 0x584731 ; mov rdi, rbx ; call rax
0x0000000000584d99 : jo 0x584da0 ; mov rdi, rbx ; call rax
0x0000000000584dbd : jo 0x584dc4 ; mov rdi, rbx ; call rax
0x0000000000584de1 : jo 0x584de8 ; mov rdi, rbx ; call rax
0x0000000000584dff : jo 0x584e06 ; mov rdi, rbx ; call rax
0x0000000000584e1d : jo 0x584e24 ; mov rdi, rbx ; call rax
0x0000000000584e3b : jo 0x584e42 ; mov rdi, rbx ; call rax
0x0000000000586295 : jo 0x58629c ; mov rdi, rbx ; call rax
0x00000000005862e1 : jo 0x5862e8 ; mov rdi, rbx ; call rax
0x000000000058630b : jo 0x586312 ; mov rdi, rbx ; call rax
0x000000000058632d : jo 0x586334 ; mov rdi, rbx ; call rax
0x00000000005863b0 : jo 0x5863b7 ; mov rdi, rbx ; call rax
0x0000000000586461 : jo 0x586468 ; mov rdi, rbx ; call rax
0x0000000000586493 : jo 0x58649a ; mov rdi, rbx ; call rax
0x00000000005873f1 : jo 0x5873f8 ; mov rdi, rbx ; call rax
0x0000000000587441 : jo 0x587448 ; mov rdi, rbx ; call rax
0x0000000000587491 : jo 0x587498 ; mov rdi, rbx ; call rax
0x00000000005874f2 : jo 0x5874f6 ; call rax
0x0000000000587562 : jo 0x587566 ; call rax
0x00000000005875d2 : jo 0x5875d6 ; call rax
0x000000000058871e : jo 0x588725 ; mov rdi, r12 ; call rax
0x000000000058871d : jo 0x588795 ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000588798 : jo 0x58879f ; mov rdi, r12 ; call rax
0x00000000005887e4 : jo 0x5887eb ; mov rdi, r12 ; call rax
0x0000000000588812 : jo 0x588819 ; mov rdi, r12 ; call rax
0x00000000005887e3 : jo 0x58885b ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000588811 : jo 0x588889 ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000588a40 : jo 0x588a47 ; mov rdi, rbx ; call rax
0x0000000000588a6f : jo 0x588a76 ; mov rdi, rbx ; call rax
0x0000000000588a9f : jo 0x588aa6 ; mov rdi, rbx ; call rax
0x0000000000588acd : jo 0x588ad4 ; mov rdi, rbx ; call rax
0x0000000000588af2 : jo 0x588af9 ; mov rdi, rbx ; call rax
0x0000000000588b18 : jo 0x588b1f ; mov rdi, rbx ; call rax
0x000000000058a208 : jo 0x58a20f ; mov rdi, r12 ; call rax
0x000000000058a267 : jo 0x58a26e ; mov rdi, r12 ; call rax
0x000000000058a207 : jo 0x58a27f ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000058a266 : jo 0x58a2de ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000590e4f : jo 0x590e5e ; mov qword ptr [rsi], rax ; ret
0x0000000000590e5e : jo 0x590e6d ; mov qword ptr [rsi], rax ; ret
0x000000000059107f : jo 0x591096 ; mov qword ptr [rsi], rax ; ret
0x000000000059108e : jo 0x5910a5 ; mov qword ptr [rsi], rax ; ret
0x0000000000594e19 : jo 0x594e20 ; mov rdi, r15 ; call rax
0x0000000000594e18 : jo 0x594e90 ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000595553 : jo 0x59555a ; mov rdi, rbp ; call rax
0x00000000005960a9 : jo 0x5960b1 ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000596139 : jo 0x596141 ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000596f09 : jo 0x596f11 ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000596f99 : jo 0x596fa1 ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000597e69 : jo 0x597e71 ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000597ef9 : jo 0x597f01 ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000598e88 : jo 0x598eea ; pop rbp ; pop r12 ; ret
0x000000000059bd4a : jo 0x59bd51 ; mov rdi, rbx ; call rax
0x000000000059bf11 : jo 0x59bf18 ; mov rdi, rbx ; call rax
0x000000000059e6e3 : jo 0x59e6fe ; test r12b, 1 ; jne 0x59e739 ; call r12
0x000000000059e890 : jo 0x59e8ab ; test r12b, 1 ; jne 0x59e8e9 ; call r12
0x00000000005a1258 : jo 0x5a1273 ; test r12b, 1 ; jne 0x5a12b1 ; call r12
0x00000000005a1fcb : jo 0x5a1fd2 ; mov rdi, rbp ; call rcx
0x00000000005a202a : jo 0x5a2031 ; mov rdi, rbp ; call rax
0x00000000005a2099 : jo 0x5a20a0 ; mov rdi, rbp ; call rax
0x00000000005a2187 : jo 0x5a218e ; mov rdi, r12 ; call rax
0x00000000005a21f9 : jo 0x5a2200 ; mov rdi, r12 ; call rax
0x00000000005a2ce9 : jo 0x5a2cf1 ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000005a2d79 : jo 0x5a2d81 ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000005a2d78 : jo 0x5a2d82 ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000005a3b79 : jo 0x5a3b7f ; jne 0x5a3b5c ; ret
0x00000000005a3bae : jo 0x5a3bb4 ; jne 0x5a3b94 ; ret
0x00000000005a4057 : jo 0x5a405f ; xor eax, eax ; call 0x680aca
0x00000000005a406a : jo 0x5a4072 ; xor eax, eax ; call 0x680b2e
0x00000000005a4817 : jo 0x5a481f ; xor eax, eax ; call 0x680aca
0x00000000005a482a : jo 0x5a4832 ; xor eax, eax ; call 0x680b2e
0x00000000005a484b : jo 0x5a4851 ; call 0x680ac8
0x00000000005a485c : jo 0x5a4864 ; xor eax, eax ; call 0x680b2e
0x00000000005a4e1c : jo 0x5a4e37 ; test r12b, 1 ; jne 0x5a4e79 ; call r12
0x00000000005a55a9 : jo 0x5a55ad ; ret
0x00000000005a710a : jo 0x5a7111 ; mov rdi, rbx ; call rax
0x00000000005a7359 : jo 0x5a7360 ; mov rdi, rbx ; call rax
0x00000000005a737d : jo 0x5a7384 ; mov rdi, rbx ; call rax
0x00000000005a73a1 : jo 0x5a73a8 ; mov rdi, rbx ; call rax
0x00000000005a73bf : jo 0x5a73c6 ; mov rdi, rbx ; call rax
0x00000000005a73dd : jo 0x5a73e4 ; mov rdi, rbx ; call rax
0x00000000005a73fb : jo 0x5a7402 ; mov rdi, rbx ; call rax
0x00000000005a74dc : jo 0x5a74f8 ; add byte ptr [rax - 0x75], cl ; push rbp ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000005a75ac : jo 0x5a75c8 ; add byte ptr [rax - 0x75], cl ; push rbp ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000005a7892 : jo 0x5a7896 ; call rax
0x00000000005a7b22 : jo 0x5a7b26 ; call rax
0x00000000005a7b92 : jo 0x5a7b96 ; call rax
0x00000000005a7bf1 : jo 0x5a7bf8 ; mov rdi, rbx ; call rax
0x00000000005a7d00 : jo 0x5a7d07 ; mov rdi, rbx ; call rax
0x00000000005a7d2f : jo 0x5a7d36 ; mov rdi, rbx ; call rax
0x00000000005a7d5f : jo 0x5a7d66 ; mov rdi, rbx ; call rax
0x00000000005a7d8d : jo 0x5a7d94 ; mov rdi, rbx ; call rax
0x00000000005a7db2 : jo 0x5a7db9 ; mov rdi, rbx ; call rax
0x00000000005a7dd8 : jo 0x5a7ddf ; mov rdi, rbx ; call rax
0x00000000005a8c37 : jo 0x5a8c3c ; jo 0x5a8c3f ; ret
0x00000000005a8c39 : jo 0x5a8c3d ; ret
0x00000000005a973f : jo 0x5a974e ; mov qword ptr [rsi], rax ; ret
0x00000000005a974e : jo 0x5a975d ; mov qword ptr [rsi], rax ; ret
0x00000000005a996f : jo 0x5a9986 ; mov qword ptr [rsi], rax ; ret
0x00000000005a997e : jo 0x5a9995 ; mov qword ptr [rsi], rax ; ret
0x00000000005ad106 : jo 0x5ad10d ; mov rdi, r15 ; call rax
0x00000000005e6ecb : jo 0x5e6e58 ; ret 0x8b48
0x00000000005e6eca : jo 0x5e6e59 ; ret 0x8b48
0x00000000005ea5b1 : jo 0x5ea5ee ; ret 0x774
0x00000000005ea5b0 : jo 0x5ea5ef ; ret 0x774
0x00000000005f3765 : jo 0x5f36f2 ; ret 0x458b
0x00000000005f3764 : jo 0x5f36f3 ; ret 0x458b
0x0000000000611e9f : jo 0x611ea6 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000616a7e : jo 0x616aad ; mov rax, qword ptr [rip + 0x3ebe61] ; call rax
0x0000000000616be1 : jo 0x616c10 ; mov rax, qword ptr [rip + 0x3ebcfe] ; call rax
0x000000000061754c : jo 0x61757b ; mov rax, qword ptr [rip + 0x3eb393] ; call rax
0x00000000006176af : jo 0x6176de ; mov rax, qword ptr [rip + 0x3eb230] ; call rax
0x0000000000628a60 : jo 0x628a70 ; add bl, ch ; test al, 0x48 ; mov ebx, eax ; jmp 0x628a36
0x0000000000628a90 : jo 0x628a9c ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000628a9d : jo 0x628aab ; add bl, ch ; mov ecx, dword ptr [rax - 0x77] ; ret
0x000000000065ddeb : jo 0x65de4d ; pop rbp ; pop r12 ; ret
0x000000000065dec8 : jo 0x65df2a ; pop rbp ; pop r12 ; ret
0x00000000006625f6 : jo 0x66262c ; xor eax, eax ; ret
0x000000000066ceca : jo 0x66cede ; ret
0x000000000066cee8 : jo 0x66ceff ; mov qword ptr [rax], rcx ; ret
0x00000000006778c4 : jo 0x6778da ; retf
0x0000000000679622 : jo 0x679629 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000068093c : jo 0x680925 ; add eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000683fdc : jo 0x684029 ; or al, byte ptr [rax] ; ret
0x00000000006a8990 : jo 0x6a89a0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006a9d29 : jo 0x6a9d35 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006aa0ca : jo 0x6aa0d6 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006aa26e : jo 0x6aa27a ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006b1527 : jo 0x6b1589 ; pop rbp ; pop r12 ; ret
0x00000000006b22fc : jo 0x6b22f9 ; pop rbx ; ret
0x00000000006b2957 : jo 0x6b2962 ; add byte ptr [rax], al ; mov qword ptr [rdx], rdx ; ret
0x00000000006f7798 : jo 0x6f7761 ; push rcx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; retf 0x51
0x0000000000733db0 : jo 0x733d7b ; add al, 0 ; ret 0xcd13
0x00000000007348a8 : jo 0x734845 ; add dword ptr [rax], eax ; retf -0x31fe
0x00000000007351d4 : jo 0x7351e6 ; iretd ; jmp qword ptr [rax]
0x0000000000738438 : jo 0x7383f1 ; add al, byte ptr [rax] ; retf -0x2abf
0x0000000000738de0 : jo 0x738dc8 ; add al, byte ptr [rax] ; retf -0x290f
0x000000000073a3a8 : jo 0x73a3fb ; add eax, dword ptr [rax] ; retf -0x24bc
0x000000000073b045 : jo 0x73b026 ; jmp qword ptr [rax]
0x000000000073dc18 : jo 0x73dc88 ; add al, 0 ; adc byte ptr [rax - 0x1f], dl ; jmp rax
0x000000000073e1e0 : jo 0x73e16b ; add al, 0 ; nop ; ret 0xffe1
0x000000000073e99d : jo 0x73e983 ; call rax
0x000000000073f51c : jo 0x73f4ea ; jrcxz 0x73f528 ; jo 0x73f515 ; add al, 0 ; nop ; ret
0x000000000073f520 : jo 0x73f511 ; add al, 0 ; nop ; ret
0x0000000000743c9c : jo 0x743c2e ; in al, dx ; jmp qword ptr [rax]
0x0000000000743de4 : jo 0x743d9a ; in al, dx ; call qword ptr [rax]
0x0000000000744041 : jo 0x74404f ; add byte ptr [rax], dh ; movsxd rbp, ebp ; call qword ptr [rax]
0x0000000000744134 : jo 0x7440ba ; in eax, dx ; call qword ptr [rax]
0x0000000000744a54 : jo 0x7449e4 ; out dx, al ; call rax
0x0000000000745354 : jo 0x7453ba ; out dx, eax ; jmp qword ptr [rax]
0x000000000074542c : jo 0x7454a4 ; out dx, eax ; call rax
0x0000000000745b84 : jo 0x745bc1 ; int1 ; jmp qword ptr [rax]
0x0000000000746124 : jo 0x7460c0 ; jmp rax
0x0000000000746124 : jo 0x7460c1 ; jmp rax
0x000000000074624c : jo 0x7461fc ; jmp qword ptr [rax]
0x000000000074624c : jo 0x7461fd ; jmp qword ptr [rax]
0x0000000000746a44 : jo 0x7469de ; call qword ptr [rax]
0x0000000000746b8c : jo 0x746b72 ; jmp qword ptr [rax]
0x0000000000746db4 : jo 0x746de0 ; hlt ; call rax
0x0000000000747029 : jo 0x747038 ; add byte ptr [rax], dl ; hlt ; jmp rax
0x0000000000747039 : jo 0x747048 ; add byte ptr [rax + 0x4d], ah ; hlt ; call qword ptr [rax]
0x00000000007471ad : jo 0x7471a5 ; call rax
0x00000000007479d4 : jo 0x7479fd ; cmc ; call rax
0x0000000000747f44 : jo 0x747eee ; cmc ; call rax
0x0000000000747fa4 : jo 0x747f51 ; cmc ; jmp qword ptr [rax]
0x000000000074816c : jo 0x74812a ; cmc ; dec eax ; ret 7
0x000000000074817c : jo 0x74813b ; cmc ; dec dword ptr [rax] ; ret
0x0000000000748334 : jo 0x748306 ; cmc ; lcall ptr [rax] ; retf 7
0x000000000074a17c : jo 0x74a14a ; clc ; dec dword ptr [rax - 0x7ffff7ad] ; ret
0x000000000074a1e8 : jo 0x74a244 ; or byte ptr [rax], al ; nop ; retf -8
0x000000000074a754 : jo 0x74a786 ; stc ; call qword ptr [rax]
0x000000000074a964 : jo 0x74a9b1 ; stc ; call rax
0x000000000074ab04 : jo 0x74ab76 ; stc ; jmp rax
0x000000000074ae54 : jo 0x74ade8 ; stc ; jmp qword ptr [rax]
0x000000000074afec : jo 0x74af8f ; stc ; jmp qword ptr [rax]
0x000000000074b4e4 : jo 0x74b4cb ; stc ; jmp qword ptr [rax]
0x000000000074b684 : jo 0x74b6af ; cli ; call qword ptr [rax]
0x000000000074b850 : jo 0x74b83c ; retf
0x000000000074d4a9 : jo 0x74d479 ; call rcx
0x00000000007527ad : jo 0x7527b5 ; add byte ptr [rdx + rcx*2 - 0x32], ch ; jmp qword ptr [rbx]
0x0000000000758ab8 : jo 0x758ad7 ; sar bh, 1 ; ret
0x000000000076277d : jo 0x762786 ; add byte ptr [rax], bh ; jp 0x76275d ; call qword ptr [rdx]
0x00000000007627ad : jo 0x7627b6 ; add byte ptr [rdx], bl ; jl 0x76278d ; call qword ptr [rdx]
0x00000000007627dd : jo 0x7627e6 ; add ah, bh ; jge 0x7627bd ; jmp qword ptr [rbx]
0x0000000000767489 : jo 0x767463 ; call rax
0x00000000007773d9 : jo 0x7773b9 ; jmp rax
0x0000000000777aec : jo 0x777b05 ; or byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x00000000007807a9 : jo 0x78078b ; jmp rax
0x0000000000788719 : jo 0x7886fd ; jmp qword ptr [rax]
0x000000000078e4a0 : jo 0x78e477 ; loope 0x78e4a7 ; ret
0x000000000079fd51 : jo 0x79fd3d ; call qword ptr [rbx]
0x000000000079fd69 : jo 0x79fd55 ; jmp rcx
0x00000000007ace10 : jo 0x7ace69 ; in eax, dx ; call qword ptr [rcx]
0x00000000007b2520 : jo 0x7b2507 ; out dx, al ; jmp qword ptr [rcx]
0x00000000007b38f0 : jo 0x7b391a ; out dx, eax ; call qword ptr [rcx]
0x00000000007b6d60 : jo 0x7b6d11 ; out dx, eax ; call qword ptr [rdi]
0x00000000007bc930 : jo 0x7bc93a ; int1 ; call qword ptr [rax]
0x00000000007bcf10 : jo 0x7bcf20 ; int1 ; jmp qword ptr [rdx]
0x000000000040fe32 : jp 0x40fe23 ; sub al, byte ptr [rax] ; leave ; ret
0x0000000000428d67 : jp 0x428d95 ; add byte ptr [rax - 0x77], cl ; ret 0x858b
0x000000000042cc9b : jp 0x42ccdd ; add byte ptr [r8 - 0x77], cl ; ret 0xbe
0x000000000042cfa5 : jp 0x42cfe7 ; add byte ptr [r8 - 0x77], cl ; ret 0xbe
0x000000000042d239 : jp 0x42d27b ; add byte ptr [r8 - 0x77], cl ; ret 0xbe
0x000000000042d5d5 : jp 0x42d617 ; add byte ptr [r8 - 0x77], cl ; ret 0xbe
0x000000000042d822 : jp 0x42d85a ; sub dword ptr [rax], eax ; leave ; ret
0x0000000000453612 : jp 0x453616 ; dec ecx ; ret
0x0000000000496af0 : jp 0x496b19 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000496b26 : jp 0x496b4f ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000496b5b : jp 0x496b84 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000496b90 : jp 0x496bb9 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000050814c : jp 0x50816a ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000516b1d : jp 0x516b3e ; add byte ptr [rax - 0x77], cl ; ret
0x000000000052afd7 : jp 0x52affe ; setl al ; ret
0x000000000052b087 : jp 0x52b0ae ; setl al ; ret
0x000000000052ee88 : jp 0x52ef00 ; add byte ptr [rax - 0x77], cl ; ja 0x52ee9e ; ret
0x0000000000535e6c : jp 0x535ebf ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000053cc8b : jp 0x53ccab ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000540fe1 : jp 0x540ff4 ; add byte ptr [rdx + rbx + 0x48], dh ; add esp, 8 ; ret
0x0000000000544bf6 : jp 0x544c19 ; setl al ; ret
0x0000000000544ca6 : jp 0x544cc9 ; setl al ; ret
0x000000000054ccc8 : jp 0x54cce7 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054ccdd : jp 0x54ccfc ; add byte ptr [rax - 0x77], cl ; ret
0x000000000055f2a5 : jp 0x55f2d2 ; ret
0x000000000055fc1d : jp 0x55fc4a ; ret
0x000000000055fcd5 : jp 0x55fd02 ; ret
0x000000000055fdc5 : jp 0x55fdf2 ; ret
0x00000000005628a5 : jp 0x5628d2 ; ret
0x000000000057ae4e : jp 0x57aea0 ; add byte ptr [rcx + rcx*4 + 0x73], al ; sbb cl, ch ; ret 0xfffe
0x00000000005828d5 : jp 0x5828db ; add al, ch ; ret
0x000000000058cd37 : jp 0x58cd52 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a55c1 : jp 0x5a55d4 ; add byte ptr [rdx + rbx + 0x48], dh ; add esp, 8 ; ret
0x00000000005b6e6a : jp 0x5b6e83 ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x00000000005b6e69 : jp 0x5b6e84 ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x00000000005c5e32 : jp 0x5c5e7c ; or al, 0 ; call qword ptr [rip + 0x43caa4]
0x00000000005e80dc : jp 0x5e80ee ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000005eae1c : jp 0x5eae65 ; add bh, bh ; ror cl, 1 ; ret
0x00000000005f8098 : jp 0x5f80a7 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000062806d : jp 0x628079 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000628c82 : jp 0x628c8e ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000637e33 : jp 0x637e3d ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000639fc2 : jp 0x639f72 ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000646b03 : jp 0x646b11 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000653fc0 : jp 0x653fe7 ; add byte ptr [rax], al ; call rax
0x000000000065de93 : jp 0x65de27 ; push rbx ; add dword ptr [rcx], ebp ; retf -0x76b4
0x0000000000683ffe : jp 0x68400b ; add rsp, 8 ; ret
0x0000000000684208 : jp 0x68421c ; add rsp, 8 ; ret
0x0000000000684264 : jp 0x68427a ; add rsp, 8 ; ret
0x000000000068fec3 : jp 0x68fe94 ; jnp 0x68fed1 ; add rsp, 8 ; ret
0x0000000000690498 : jp 0x690465 ; jnp 0x6904a2 ; ret
0x0000000000690497 : jp 0x690466 ; jnp 0x6904a3 ; ret
0x00000000006922a7 : jp 0x6922b5 ; add rsp, 0x18 ; ret
0x00000000006922a6 : jp 0x6922b6 ; add rsp, 0x18 ; ret
0x00000000006922b3 : jp 0x692302 ; add esp, 0x18 ; ret
0x00000000006922b2 : jp 0x692303 ; add esp, 0x18 ; ret
0x00000000006bed2a : jp 0x6bed6b ; xor al, 0 ; jmp rax
0x00000000006cbc77 : jp 0x6cbc51 ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000006cdd11 : jp 0x6cdd11 ; add byte ptr [rbp - 0xe], dh ; ret
0x00000000006d1292 : jp 0x6d12a2 ; ret
0x00000000006d13c5 : jp 0x6d13ed ; ret
0x00000000006d67dd : jp 0x6d6787 ; push rdi ; mov al, 0x5d ; retf -0x403e
0x00000000006d67dc : jp 0x6d6788 ; push rdi ; mov al, 0x5d ; retf -0x403e
0x00000000007217ad : jp 0x7217b6 ; ret
0x0000000000721e3b : jp 0x721e3c ; retf 0x7bc6
0x00000000007227ae : jp 0x722815 ; fbld dword ptr [rax - 0x11] ; ret
0x0000000000722bf8 : jp 0x722c48 ; xor dword ptr [rsi], 0x63 ; pop rbp ; mov dl, 0x77 ; retf
0x0000000000736fe5 : jp 0x736fbb ; jmp qword ptr [rax]
0x0000000000736fe4 : jp 0x736fbc ; jmp qword ptr [rax]
0x000000000073997d : jp 0x739959 ; jmp rax
0x000000000073ac01 : jp 0x73ac0c ; add al, ah ; and ebp, ebx ; call rax
0x000000000073bd15 : jp 0x73bcf7 ; call rax
0x000000000073cfd5 : jp 0x73cfb9 ; call rax
0x000000000073de95 : jp 0x73de7a ; call qword ptr [rax]
0x000000000074342d : jp 0x74341c ; jmp rax
0x000000000074343d : jp 0x74342c ; jmp qword ptr [rax]
0x000000000074490d : jp 0x7448ff ; call qword ptr [rax]
0x0000000000746905 : jp 0x7468fc ; call qword ptr [rax]
0x00000000007476b4 : jp 0x74768d ; hlt ; jmp rax
0x000000000074aa21 : jp 0x74aa31 ; add al, ah ; pop rbx ; stc ; jmp rax
0x000000000074aa31 : jp 0x74aa41 ; add byte ptr [rax], dl ; pop rsp ; stc ; call qword ptr [rax]
0x000000000074aba5 : jp 0x74aba2 ; jmp qword ptr [rax]
0x000000000074abdd : jp 0x74abda ; call rax
0x000000000074b9c8 : jp 0x74b9c4 ; retf
0x0000000000762781 : jp 0x762759 ; call qword ptr [rdx]
0x00000000007fa4f3 : jp 0x7fa4d1 ; add edi, eax ; js 0x7fa504 ; ret 0xd37b
0x00000000007fa52e : jp 0x7fa53a ; fsub dword ptr [rbp] ; retf
0x0000000000412733 : jrcxz 0x412725 ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000004141fd : jrcxz 0x4141c9 ; add byte ptr es:[rax - 0x77], cl ; ret
0x00000000004227b5 : jrcxz 0x4227a7 ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000431219 : jrcxz 0x43120b ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000441a04 : jrcxz 0x4419f6 ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000449ca4 : jrcxz 0x449c96 ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000044bf1e : jrcxz 0x44bf10 ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000044f8cb : jrcxz 0x44f8bd ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000004515b9 : jrcxz 0x4515e3 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004515f5 : jrcxz 0x45161f ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000451635 : jrcxz 0x45165f ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000451670 : jrcxz 0x45169a ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000452fff : jrcxz 0x45302b ; add cl, cl ; ret
0x000000000045a927 : jrcxz 0x45a919 ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000045cb34 : jrcxz 0x45cb26 ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000046012c : jrcxz 0x46011e ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000046504e : jrcxz 0x465040 ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000046ed4e : jrcxz 0x46ed40 ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000047183c : jrcxz 0x471865 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000004723c8 : jrcxz 0x4723ef ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000472dc2 : jrcxz 0x472dc7 ; dec ecx ; ret
0x000000000048ede8 : jrcxz 0x48edda ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000490827 : jrcxz 0x490819 ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000049f160 : jrcxz 0x49f152 ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000049f5f9 : jrcxz 0x49f634 ; push rsi ; add bh, bh ; ror cl, 1 ; ret
0x00000000004bb633 : jrcxz 0x4bb6bd ; cmp byte ptr [rax - 0x75], cl ; ror byte ptr [r8 + 0x63], 1 ; ret
0x00000000004bb919 : jrcxz 0x4bb996 ; add eax, 0xeb01c383 ; ret
0x00000000004bba3d : jrcxz 0x4bbaba ; add eax, 0xeb01eb83 ; ret
0x00000000004ccc3b : jrcxz 0x4ccc2d ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000004f6d4e : jrcxz 0x4f6d3b ; ret
0x00000000004ffb01 : jrcxz 0x4ffb15 ; sahf ; ret 0xdb85
0x00000000005016f1 : jrcxz 0x50167f ; clc ; or eax, 0xff66348 ; ret 0x9848
0x0000000000507116 : jrcxz 0x5070ab ; push rdi ; sbb al, 0x8b ; sbb al, 0x39 ; ret 0xd975
0x0000000000510942 : jrcxz 0x5108c9 ; ret
0x0000000000523f9c : jrcxz 0x523fd8 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000054561c : jrcxz 0x545658 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000054641a : jrcxz 0x546439 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000548424 : jrcxz 0x548420 ; call rax
0x000000000054a6e7 : jrcxz 0x54a6d3 ; ret
0x000000000054af01 : jrcxz 0x54af0e ; add byte ptr [rax], al ; mov esi, 1 ; call rax
0x00000000005551e7 : jrcxz 0x5551d3 ; ret
0x0000000000555396 : jrcxz 0x55532b ; push rdi ; sbb al, 0x8b ; sbb al, 0x39 ; ret 0xd975
0x00000000005601f2 : jrcxz 0x56020e ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005602c3 : jrcxz 0x5602df ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000565f62 : jrcxz 0x565f9f ; ret
0x000000000056945c : jrcxz 0x569498 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000572315 : jrcxz 0x57232c ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000573ab4 : jrcxz 0x573b16 ; pop rbp ; pop r12 ; ret
0x0000000000576350 : jrcxz 0x57636c ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005763d5 : jrcxz 0x5763f1 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005848e7 : jrcxz 0x5848d3 ; ret
0x00000000005901cf : jrcxz 0x5901e8 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000059368c : jrcxz 0x5936c8 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000005ac57c : jrcxz 0x5ac5b8 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000005b6372 : jrcxz 0x5b638a ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005bfb00 : jrcxz 0x5bfaef ; ret 0x8949
0x00000000005bfce1 : jrcxz 0x5bfc68 ; ret
0x00000000005c50b7 : jrcxz 0x5c503e ; ret
0x00000000005c6c96 : jrcxz 0x5c6caa ; sahf ; ret 0xdb85
0x00000000005d984d : jrcxz 0x5d983f ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000005e6e51 : jrcxz 0x5e6e43 ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000005e92ab : jrcxz 0x5e9328 ; add eax, 0xeb01c383 ; retf
0x00000000005eaef9 : jrcxz 0x5eaf7b ; add r15b, dil ; ror cl, 1 ; ret
0x00000000005fd459 : jrcxz 0x5fd41f ; or byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000605db0 : jrcxz 0x605da1 ; mov ch, 0xbe ; retf 1
0x000000000060706e : jrcxz 0x607077 ; add byte ptr [rax], al ; mov rdi, r14 ; call rax
0x0000000000617d22 : jrcxz 0x617d14 ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000061a3dc : jrcxz 0x61a3ce ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000626076 : jrcxz 0x62600b ; push rdi ; sbb al, 0x8b ; sbb al, 0x39 ; ret 0xd975
0x000000000062dc96 : jrcxz 0x62dc85 ; ret 0x97e9
0x0000000000643732 : jrcxz 0x643724 ; fisttp qword ptr [rax - 0x77] ; ret
0x0000000000644e5f : jrcxz 0x644e4c ; retf -0x1f
0x000000000064caca : jrcxz 0x64cb53 ; adc ecx, dword ptr [rax + 0x63] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000064e3a2 : jrcxz 0x64e394 ; mov ecx, dword ptr [rax - 0x77] ; ret
0x000000000065074c : jrcxz 0x65073e ; fisttp qword ptr [rax - 0x77] ; ret
0x0000000000666174 : jrcxz 0x6661d6 ; pop rbp ; pop r12 ; ret
0x000000000068151e : jrcxz 0x681580 ; pop rbp ; pop r12 ; ret
0x0000000000681e39 : jrcxz 0x681e16 ; ret 0xccd8
0x0000000000682371 : jrcxz 0x68234e ; ret 0xccd8
0x0000000000682641 : jrcxz 0x68261e ; ret 0xccd8
0x00000000006828c1 : jrcxz 0x68289e ; ret 0xccd8
0x0000000000682fb9 : jrcxz 0x682f96 ; ret 0xccd8
0x0000000000683b31 : jrcxz 0x683b0e ; ret 0xccd8
0x0000000000683db1 : jrcxz 0x683d8e ; ret 0xccd8
0x0000000000683e15 : jrcxz 0x683e23 ; add al, bl ; ret 0x7cd9
0x00000000006840d1 : jrcxz 0x6840ae ; ret 0xccd8
0x0000000000684311 : jrcxz 0x6842ee ; ret 0xccd8
0x000000000068464c : jrcxz 0x684629 ; retf -0x45b8
0x000000000068468a : jrcxz 0x684667 ; retf -0x45b8
0x0000000000684861 : jrcxz 0x68483e ; ret 0xccd8
0x0000000000684a41 : jrcxz 0x684a1e ; ret 0xccd8
0x000000000068aa09 : jrcxz 0x68a99f ; xlatb ; dec dword ptr [rax + 0x63] ; ret
0x000000000069fc44 : jrcxz 0x69fca3 ; ret
0x00000000006aa7f0 : jrcxz 0x6aa86e ; in eax, dx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006b0287 : jrcxz 0x6b028e ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x00000000006b0286 : jrcxz 0x6b028f ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x00000000006b673d : jrcxz 0x6b672a ; ret 0xfffe
0x00000000006b98b9 : jrcxz 0x6b98bf ; dec dword ptr [rax - 0x77] ; ret 0xb60f
0x00000000006bb391 : jrcxz 0x6bb31e ; ret
0x00000000006c04f9 : jrcxz 0x6c0522 ; xor al, 0 ; jmp rax
0x00000000006d08cc : jrcxz 0x6d091b ; add esp, 8 ; ret
0x0000000000735899 : jrcxz 0x7358a2 ; add al, cl ; iretd ; jmp rax
0x0000000000737bed : jrcxz 0x737bc4 ; call qword ptr [rax]
0x0000000000738c85 : jrcxz 0x738c5f ; call rax
0x000000000073ed66 : jrcxz 0x73ed6a ; clc ; ret
0x000000000073ee66 : jrcxz 0x73ee6a ; push rax ; retf 4
0x000000000073eec6 : jrcxz 0x73eeca ; nop ; retf
0x000000000073eec5 : jrcxz 0x73eecb ; nop ; retf
0x000000000073eede : jrcxz 0x73eee2 ; clc ; retf
0x000000000073f0a6 : jrcxz 0x73f0b0 ; mov al, 0xd6 ; add al, 0 ; xor byte ptr [rbp - 0x1d], ch ; jmp rax
0x000000000073f30e : jrcxz 0x73f318 ; mov eax, 0x500004e0 ; mov ebx, fs ; call rax
0x000000000073f4f6 : jrcxz 0x73f4fe ; clc ; jmp 0xffffffffc393f509
0x000000000073f506 : jrcxz 0x73f50e ; sub dl, ch ; add al, 0 ; ret
0x000000000073f51e : jrcxz 0x73f526 ; jo 0x73f513 ; add al, 0 ; nop ; ret
0x000000000074090d : jrcxz 0x7408f6 ; call rax
0x000000000074e451 : jrcxz 0x74e421 ; call rsp
0x000000000074e481 : jrcxz 0x74e451 ; jmp qword ptr [rdi]
0x0000000000753da1 : jrcxz 0x753d73 ; call qword ptr [rdx]
0x0000000000753de1 : jrcxz 0x753db3 ; call qword ptr [rbx]
0x0000000000789a95 : jrcxz 0x789aa1 ; add al, bl ; shl eax, -1 ; retf
0x0000000000789a94 : jrcxz 0x789aa2 ; add al, bl ; shl eax, -1 ; retf
0x000000000079d8a9 : jrcxz 0x79d894 ; call rsp
0x00000000007d35b6 : jrcxz 0x7d35e5 ; cmp al, 0xde ; and dword ptr [rax], eax ; ret
0x00000000007d439d : jrcxz 0x7d43b2 ; add eax, esp ; syscall
0x00000000007e6406 : jrcxz 0x7e641b ; add ah, bl ; syscall
0x00000000007eaa1c : jrcxz 0x7eaa23 ; push rcx ; ret
0x00000000007f7604 : jrcxz 0x7f760b ; push rcx ; ret
0x0000000000405fc4 : js 0x405fb4 ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000004094ec : js 0x409480 ; pop rdi ; add al, ch ; retf
0x000000000041e224 : js 0x41e252 ; sub al, byte ptr [rax] ; leave ; ret
0x00000000004459e7 : js 0x445a16 ; mov rax, qword ptr [rip + 0x5bcef8] ; call rax
0x000000000044b950 : js 0x44b9b0 ; pop rbp ; ret
0x000000000044bdd1 : js 0x44be35 ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000451bee : js 0x451bfb ; add cl, cl ; ret
0x000000000045c596 : js 0x45c5f6 ; pop rbp ; ret
0x000000000045c9e7 : js 0x45ca4b ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000464c7a : js 0x464cda ; pop rbp ; ret
0x0000000000464f01 : js 0x464f65 ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000046e97a : js 0x46e9da ; pop rbp ; ret
0x000000000046ec01 : js 0x46ec65 ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000049ed5b : js 0x49edbb ; pop rbp ; ret
0x00000000004a6d7c : js 0x4a6da4 ; add byte ptr [rax - 0x77], cl ; ret 0x2c7
0x00000000004ad0d9 : js 0x4ad13d ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004ad185 : js 0x4ad1e9 ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004ad252 : js 0x4ad2b6 ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004cff37 : js 0x4cff3e ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004fdd7f : js 0x4fddad ; call 0x689ff4
0x000000000050351f : js 0x50353e ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050351e : js 0x50353f ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050e561 : js 0x50e5c5 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000513513 : js 0x5134c2 ; add dword ptr [rbp + 0x18], esi ; call rax
0x0000000000513512 : js 0x5134c3 ; add dword ptr [rbp + 0x18], esi ; call rax
0x0000000000526e02 : js 0x526e55 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005291d3 : js 0x5291e6 ; mov dword ptr [rbx + 0x44], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000052c44c : js 0x52c412 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000535693 : js 0x535642 ; add dword ptr [rbp + 0x30], esi ; call rax
0x0000000000535692 : js 0x535643 ; add dword ptr [rbp + 0x30], esi ; call rax
0x000000000053574b : js 0x5356fa ; add dword ptr [rbp + 0x5d], esi ; call rax
0x000000000053574a : js 0x5356fb ; add dword ptr [rbp + 0x5d], esi ; call rax
0x000000000053e663 : js 0x53e68c ; mov dword ptr [rdi + 0x10], eax ; add rsp, 8 ; ret
0x0000000000546d05 : js 0x546d23 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054a096 : js 0x54a0a2 ; ret
0x000000000054ce78 : js 0x54ce97 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054ce8d : js 0x54ceac ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054f65b : js 0x54f621 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000055e1f0 : js 0x55e1f7 ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x000000000056cdf2 : js 0x56ce58 ; call 0x6898f4
0x000000000057000d : js 0x56ffec ; jne 0x57005d ; call r12
0x00000000005702c2 : js 0x5702a1 ; jne 0x570315 ; call r12
0x00000000005707c7 : js 0x570755 ; in eax, dx ; add dword ptr [rax + 0x63], ecx ; fisttp qword ptr [rax - 0x7d] ; ret
0x00000000005768eb : js 0x576900 ; jne 0x576918 ; add rsp, 8 ; ret
0x00000000005768ea : js 0x576901 ; jne 0x576919 ; add rsp, 8 ; ret
0x000000000057d711 : js 0x57d775 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000058736b : js 0x587380 ; jne 0x587398 ; add rsp, 8 ; ret
0x000000000058736a : js 0x587381 ; jne 0x587399 ; add rsp, 8 ; ret
0x0000000000589a9b : js 0x589ab1 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058cec7 : js 0x58cee2 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000590be2 : js 0x590c35 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005982fe : js 0x598312 ; add bl, ch ; ret 0x8948
0x000000000059c0a0 : js 0x59c0be ; add rsp, 8 ; ret
0x00000000005af70c : js 0x5af71a ; add byte ptr [rax], al ; ret
0x00000000005b530c : js 0x5b531a ; add byte ptr [rax], al ; ret
0x00000000005b9ace : js 0x5b9ae5 ; add byte ptr [rax - 0x7d], cl ; cli ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000005d8df9 : js 0x5d8e0d ; add cl, cl ; ret
0x00000000005ea5d7 : js 0x5ea62a ; mov esi, edx ; mov rdi, rax ; call 0x5e70c5
0x00000000005f8c98 : js 0x5f8d12 ; add byte ptr [rax - 0x77], cl ; ja 0x5f8cae ; ret
0x00000000005f94c3 : js 0x5f94e7 ; mov dword ptr [rdi + 4], eax ; add rsp, 8 ; ret
0x00000000005f9583 : js 0x5f95a7 ; mov dword ptr [rdi + 4], eax ; add rsp, 8 ; ret
0x00000000005fbb56 : js 0x5fbb61 ; mov dword ptr [rdi + 4], eax ; ret
0x00000000005fbc06 : js 0x5fbc11 ; mov dword ptr [rdi + 8], eax ; ret
0x00000000005fbcc4 : js 0x5fbce5 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000005fed12 : js 0x5fed19 ; sete al ; ret
0x000000000060351d : js 0x60352c ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000607311 : js 0x607371 ; pop rbp ; ret
0x0000000000616fc1 : js 0x617025 ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000631a87 : js 0x631a36 ; add dword ptr [rbp + 0x2d], esi ; call rax
0x0000000000631a86 : js 0x631a37 ; add dword ptr [rbp + 0x2d], esi ; call rax
0x0000000000632ef0 : js 0x632f0e ; mov dword ptr [rdx + 4], eax ; pop rbx ; ret
0x000000000063d570 : js 0x63d592 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000649ac3 : js 0x649acc ; add cl, ch ; retf -2
0x00000000006544e9 : js 0x654505 ; add byte ptr [rax], al ; mov esi, 1 ; call rax
0x000000000065ced4 : js 0x65cef0 ; add rsp, 8 ; ret
0x000000000065d1d4 : js 0x65d1f0 ; add rsp, 8 ; ret
0x0000000000667765 : js 0x667772 ; ret
0x0000000000670722 : js 0x670734 ; add byte ptr [rax], al ; ret
0x000000000067073b : js 0x670751 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000675763 : js 0x6757b1 ; mov eax, dword ptr [rax] ; ret
0x0000000000675762 : js 0x6757b2 ; mov eax, dword ptr [rax] ; ret
0x000000000067aa7f : js 0x67aac1 ; add byte ptr [rsp + rcx + 0xf], dh ; mov dh, 0 ; ret
0x000000000068f998 : js 0x68f9a1 ; add byte ptr [rbp - 0xd], dh ; lea eax, dword ptr [rdx - 1] ; ret
0x00000000006920fb : js 0x692167 ; add rsp, 8 ; ret
0x00000000006921db : js 0x69224b ; add rsp, 8 ; ret
0x00000000006a11d8 : js 0x6a1206 ; add rsp, 8 ; ret
0x00000000006a17e3 : js 0x6a17ee ; mov rax, rdi ; ret
0x00000000006a82e9 : js 0x6a8295 ; xor eax, 0x5c60100 ; ret
0x00000000006af5e3 : js 0x6af5ba ; jb 0x6af5ef ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006bfb03 : js 0x6bfb12 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006d44dc : js 0x6d44e6 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000007222f5 : js 0x722353 ; cdq ; scasd eax, dword ptr [rdi] ; xlatb ; loopne 0x72228e ; retf 0x5cb0
0x00000000007222f4 : js 0x722354 ; cdq ; scasd eax, dword ptr [rdi] ; xlatb ; loopne 0x72228f ; retf 0x5cb0
0x000000000073356c : js 0x73355c ; stc ; jmp qword ptr [rax]
0x0000000000735404 : js 0x735485 ; iretd ; jmp qword ptr [rax]
0x0000000000736618 : js 0x736644 ; add al, byte ptr [rax] ; pop rdx ; retf -0x2f
0x0000000000736fd5 : js 0x736fab ; call rax
0x0000000000736fd4 : js 0x736fac ; call rax
0x0000000000738588 : js 0x738548 ; add al, byte ptr [rax] ; retf -0x2a3f
0x000000000073aba1 : js 0x73abac ; add byte ptr [rax], ah ; sbb ebp, ebx ; call rax
0x000000000073c6e5 : js 0x73c6c8 ; call qword ptr [rax]
0x00000000007410b1 : js 0x7410be ; add al, dh ; test esi, esp ; call rax
0x00000000007440e5 : js 0x7440d6 ; call rax
0x0000000000744644 : js 0x744690 ; out dx, al ; jmp qword ptr [rax]
0x00000000007448cd : js 0x7448bf ; call qword ptr [rax]
0x00000000007471e1 : js 0x7471f0 ; add al, dh ; xchg ah, dh ; jmp qword ptr [rax]
0x0000000000749545 : js 0x749540 ; jmp qword ptr [rax]
0x000000000074a9a9 : js 0x74a9b9 ; add byte ptr [rax + 0x4c], dl ; stc ; jmp qword ptr [rax]
0x000000000074ab5d : js 0x74ab5a ; jmp qword ptr [rax]
0x0000000000754688 : js 0x7546b3 ; iretd ; call rsp
0x0000000000794429 : js 0x794411 ; jmp qword ptr [rdx]
0x0000000000794449 : js 0x794431 ; call rsp
0x00000000007abbd0 : js 0x7abc10 ; in eax, dx ; call qword ptr [rcx]
0x00000000007ace28 : js 0x7ace81 ; in eax, dx ; jmp rax
0x00000000007aed68 : js 0x7aed35 ; in eax, dx ; jmp rbx
0x00000000007aeea8 : js 0x7aee7e ; in eax, dx ; jmp rbx
0x00000000007af368 : js 0x7af352 ; in eax, dx ; call qword ptr [rsi]
0x00000000007afd28 : js 0x7afd20 ; in eax, dx ; jmp qword ptr [rcx]
0x00000000007b2938 : js 0x7b292b ; out dx, al ; jmp qword ptr [rcx]
0x00000000007b2ff5 : js 0x7b3003 ; add byte ptr [rax + 1], cl ; out dx, eax ; jmp qword ptr [rdi]
0x00000000007b53d8 : js 0x7b5438 ; out dx, eax ; jmp qword ptr [rcx]
0x00000000007c4319 : js 0x7c4327 ; add byte ptr [rax], al ; lea eax, dword ptr [rcx] ; retf
0x00000000007cb456 : js 0x7cb45f ; add byte ptr [rax], al ; xchg eax, edx ; jns 0x7cb469 ; ret 0x79
0x00000000007fa4f7 : js 0x7fa500 ; ret 0xd37b
0x00000000007fa4f0 : js 0x7fa500 ; xchg dword ptr [rdx - 0x2a], edi ; add edi, eax ; js 0x7fa507 ; ret 0xd37b
0x00000000007f4d78 : lahf ; adc byte ptr [rax], al ; cmc ; syscall
0x00000000006b3d4f : lahf ; adc byte ptr [rcx - 0x7d], cl ; ret
0x000000000054e996 : lahf ; add al, 0 ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000005bb29d : lahf ; add al, ch ; ret 0xc53
0x00000000004cb195 : lahf ; add al, ch ; retf 0x1b54
0x00000000004c86b8 : lahf ; add byte ptr [rax - 0x75], cl ; add eax, 0x53a227 ; call rax
0x000000000070cb92 : lahf ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; retf
0x00000000006d971a : lahf ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; retf
0x000000000044087b : lahf ; add byte ptr es:[rax - 0x77], cl ; ret
0x00000000007e3ba5 : lahf ; add dword ptr [rax], eax ; retf
0x00000000007d501e : lahf ; add eax, 0x11f205 ; ret
0x0000000000741811 : lahf ; add eax, 0xe7505000 ; jmp rax
0x0000000000741821 : lahf ; add eax, 0xe7508000 ; call qword ptr [rax]
0x0000000000627339 : lahf ; add eax, 0xea834800 ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000007f7f10 : lahf ; add eax, dword ptr [rsi] ; ret
0x00000000004b2545 : lahf ; add edx, dword ptr [rbp] ; call rax
0x00000000004f083d : lahf ; and byte ptr [rcx], dl ; call rax
0x0000000000665d70 : lahf ; and byte ptr [rdi], dl ; add byte ptr [rax], al ; pop r14 ; ret
0x000000000063c194 : lahf ; call 0xffffffffc3ed0a9e
0x0000000000749e55 : lahf ; clc ; call qword ptr [rax]
0x0000000000749e45 : lahf ; clc ; call rax
0x00000000004c6d9b : lahf ; cld ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x000000000044ef45 : lahf ; cmp dword ptr [rbx], ebx ; call rax
0x00000000007c6c09 : lahf ; cmp eax, dword ptr [rax] ; ret
0x00000000007fab20 : lahf ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rip + 0x1401a6dc], eax ; ret
0x000000000052d97e : lahf ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000653959 : lahf ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000007a9729 : lahf ; in al, dx ; call rbx
0x0000000000755cc9 : lahf ; iretd ; call rsp
0x000000000042293d : lahf ; lcall ptr [rbp] ; call rax
0x000000000078d4f9 : lahf ; loope 0x78d4fe ; retf 0
0x0000000000556fc3 : lahf ; mov edx, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000550a57 : lahf ; or byte ptr [rbx], dl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000063a7e3 : lahf ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000005bd174 : lahf ; out -1, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000563d9d : lahf ; push rbx ; adc al, byte ptr [rax] ; pop rbx ; ret
0x00000000006772bd : lahf ; push rbx ; retf 0x7cee
0x0000000000510fca : lahf ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000054871b : lahf ; ret
0x000000000057ddef : lahf ; ret 0x2040
0x0000000000563573 : lahf ; ret 0x3941
0x000000000059de0a : lahf ; ret 0x3944
0x0000000000418077 : lahf ; ret 0x7d83
0x00000000006946bc : lahf ; ret 0x8341
0x00000000005be29b : lahf ; ret 0x8348
0x00000000005fcc84 : lahf ; ret 0x8349
0x000000000054ae81 : lahf ; ret 0x841
0x00000000004f580c : lahf ; ret 0x8440
0x00000000004f4a91 : lahf ; ret 0x8441
0x000000000059dd26 : lahf ; ret 0x8545
0x0000000000607beb : lahf ; ret 0x8548
0x0000000000507c4b : lahf ; ret 0x854d
0x000000000067b4a5 : lahf ; ret 0x8843
0x0000000000648e33 : lahf ; ret 0xc238
0x000000000047fda6 : lahf ; ret 0xca31
0x000000000064874d : lahf ; ret 0xca38
0x00000000004f496a : lahf ; ret 0xd108
0x0000000000676dbf : lahf ; ret 0xd138
0x000000000053e8c2 : lahf ; ret 0xd184
0x0000000000631efa : lahf ; ret 0xf685
0x0000000000543b2d : lahf ; retf
0x00000000006913bd : lahf ; retf 3
0x0000000000517f6a : lahf ; rol bl, 0x90 ; nop ; mov eax, esi ; ret
0x000000000053e8ba : lahf ; rol dword ptr [rbp + 0x105389c0], 0xf ; lahf ; ret 0xd184
0x0000000000667061 : lahf ; sar dword ptr [rax], -0x2f ; jne 0x66706e ; ret
0x0000000000667091 : lahf ; sar dword ptr [rax], -0x2f ; jne 0x66709e ; ret
0x00000000006670c1 : lahf ; sar dword ptr [rax], -0x2f ; jne 0x6670ce ; ret
0x00000000006670f1 : lahf ; sar dword ptr [rax], -0x2f ; jne 0x6670fe ; ret
0x0000000000676f5f : lahf ; sar dword ptr [rax], -0x2f ; jne 0x676f6c ; ret
0x0000000000676fcf : lahf ; sar dword ptr [rax], -0x2f ; jne 0x676fdc ; ret
0x00000000006770b1 : lahf ; sar dword ptr [rax], -0x2f ; jne 0x6770be ; ret
0x00000000007f9c2f : lahf ; sbb eax, 0x65d80e ; ret 0x51d
0x000000000054ef21 : lahf ; sbb edx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000062390d : lahf ; scasd eax, dword ptr [rdi] ; or dword ptr [rax], eax ; leave ; ret
0x000000000074b02d : lahf ; stc ; jmp qword ptr [rax]
0x000000000061d00d : lahf ; sub dword ptr [rdi], eax ; add byte ptr [rax + 0x29], cl ; ret
0x00000000007cd5b4 : lahf ; syscall
0x000000000059e6b1 : lahf ; vpand ymm1, ymm15, ymmword ptr [rdi] ; sahf ; ret 0x840
0x00000000005a2fb8 : lahf ; vpsadbw ymm1, ymm15, ymmword ptr [rdi] ; sahf ; ret 0x840
0x000000000059a27d : lahf ; xchg bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000041f63d : lahf ; xor bl, byte ptr [rsi] ; call rax
0x000000000064a2e5 : lar eax, word ptr [rax] ; add byte ptr [rcx], ch ; ret
0x00000000007e8717 : lar edx, ebp ; adc al, 0 ; xchg eax, ecx ; syscall
0x00000000005447f9 : lcall ptr [r8] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000073c8ef : lcall ptr [rax + 0x1000040b] ; mov dl, 0xdf ; call rax
0x000000000073a257 : lcall ptr [rax + 0x46] ; add eax, dword ptr [rax] ; pop rsi ; retf -0x26
0x000000000073b48f : lcall ptr [rax + 0x500003a4] ; ret 0xffdd
0x0000000000745e17 : lcall ptr [rax + 0x50000718] ; movsxd rsi, edx ; jmp qword ptr [rax]
0x000000000074a127 : lcall ptr [rax + 0x52] ; or byte ptr [rax], al ; ret 0xfff8
0x000000000074a16f : lcall ptr [rax + 0x53] ; or byte ptr [rax], al ; push rax ; ret
0x000000000073c29f : lcall ptr [rax + 0x600003ee] ; sbb bh, bl ; call rax
0x0000000000749e3f : lcall ptr [rax + 0x60000847] ; lahf ; clc ; call rax
0x000000000073f287 : lcall ptr [rax + 0x700004de] ; mov bl, ah ; call rax
0x0000000000733ee7 : lcall ptr [rax + 0x7c000592] ; sbb cl, ch ; jmp qword ptr [rax]
0x00000000006af8a6 : lcall ptr [rax + rcx*2 + 0x63] ; ret 0xaee9
0x000000000073858f : lcall ptr [rax - 0x1bfffd46] ; ret 0xffd5
0x000000000073f627 : lcall ptr [rax - 0x1ffffb10] ; loopne 0x73f61a ; jmp rax
0x000000000073f0cf : lcall ptr [rax - 0x1ffffb29] ; jae 0x73f0c2 ; call rax
0x000000000073ae07 : lcall ptr [rax - 0x1ffffc7d] ; cmp ch, bl ; jmp rax
0x000000000073661f : lcall ptr [rax - 0x37fffddb] ; retf -0x2f
0x000000000073b567 : lcall ptr [rax - 0x3ffffc57] ; fstp st(5), st(0) ; call rax
0x000000000073ac77 : lcall ptr [rax - 0x5ffffc84] ; sub ebp, ebx ; call rax
0x000000000073be67 : lcall ptr [rax - 0x6ffffc2b] ; mov esi, ds ; jmp rax
0x000000000073b1ff : lcall ptr [rax - 0x6ffffc67] ; mov ebp, ds ; call rax
0x0000000000745c67 : lcall ptr [rax - 0xffff8f1] ; stosb byte ptr [rdi], al ; int1 ; call rax
0x00000000005447c3 : lcall ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007400ef : lcall ptr [rax] ; add eax, 0xe517f000 ; jmp qword ptr [rax]
0x00000000007451b7 : lcall ptr [rax] ; ret
0x000000000073ed17 : lcall ptr [rax] ; ret 4
0x0000000000745177 : lcall ptr [rax] ; ret 6
0x0000000000735357 : lcall ptr [rax] ; retf
0x000000000073ee5f : lcall ptr [rax] ; retf 4
0x0000000000748337 : lcall ptr [rax] ; retf 7
0x0000000000606e69 : lcall ptr [rax] ; test bpl, 1 ; jne 0x606ece ; call rax
0x000000000042292c : lcall ptr [rbp] ; call rax
0x00000000006aa8f1 : lcall ptr [rbx + 0x48] ; mov eax, dword ptr [rip + 0x357fe6] ; jmp rax
0x00000000006a45b7 : lcall ptr [rbx + 0x48] ; mov eax, dword ptr [rip + 0x35e300] ; jmp rax
0x000000000054bb95 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000065e5e8 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000408905 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000006cd3f0 : lcall ptr [rbx + 0x5d] ; ret
0x00000000006c5aab : lcall ptr [rbx] ; sete al ; and eax, edx ; ret
0x000000000060651b : lcall ptr [rcx] ; setbe al ; ret
0x00000000006bd3a0 : lcall ptr [rdi + 0xf] ; xchg eax, esp ; ror byte ptr [rcx], 0xd0 ; ret
0x0000000000769c8b : lcall ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax + rsi*4], al ; retf 0x7c
0x0000000000769c5b : lcall ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0x7c
0x00000000006bd3bd : lcall ptr [rsi + 0xf] ; xchg eax, esi ; ror byte ptr [rcx], 0xd0 ; ret
0x000000000063c24d : lcall ptr [rsi - 0x76b70018] ; ret
0x0000000000490bbd : lcall ptr [rsi] ; add al, ch ; retf
0x0000000000514da8 : lds r10, ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000068d3a1 : lds r13, ptr [rcx] ; ret
0x00000000007a7c54 : lds r8, ptr [rip - 0x13ecd800] ; jmp qword ptr [rax]
0x00000000005095be : lds r9d, ptr [r8 - 0x77] ; ret 0x38e8
0x000000000062862e : lds r9d, ptr [r8 - 0x77] ; ret 0xc8e8
0x00000000004d7966 : lea bx, word ptr [rsi] ; add cl, cl ; ret
0x00000000006bd384 : lea eax, dword ptr [r8 + rax] ; add eax, edx ; ret
0x00000000006941b9 : lea eax, dword ptr [r8 + rcx + 0x1a431f] ; ret
0x000000000065c7d5 : lea eax, dword ptr [rax + 0x10] ; add rsp, 8 ; ret
0x00000000006ac2bb : lea eax, dword ptr [rax + 8] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000069f77b : lea eax, dword ptr [rax + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004f5698 : lea eax, dword ptr [rax + 8] ; add rsp, 8 ; ret
0x0000000000574495 : lea eax, dword ptr [rax + 8] ; call 0x6c06d5
0x0000000000563dd3 : lea eax, dword ptr [rax + 8] ; pop rbx ; ret
0x000000000052c25c : lea eax, dword ptr [rax + rax*2] ; mov byte ptr [rcx + rax*8 + 8], 0 ; pop rbx ; ret
0x00000000006bd385 : lea eax, dword ptr [rax + rax] ; add eax, edx ; ret
0x00000000007944a5 : lea eax, dword ptr [rax + rax] ; jnp 0x794495 ; call rsp
0x000000000073e3d1 : lea eax, dword ptr [rax + rax] ; nop ; adc ah, dl ; call qword ptr [rax]
0x0000000000794425 : lea eax, dword ptr [rax + rax] ; xchg eax, edx ; js 0x794415 ; jmp qword ptr [rdx]
0x00000000006941ba : lea eax, dword ptr [rax + rcx + 0x1a431f] ; ret
0x000000000067fa95 : lea eax, dword ptr [rax + rdx*2 + 0x42] ; ret
0x0000000000662833 : lea eax, dword ptr [rax + rsi] ; add rax, rdx ; ret
0x0000000000663da3 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000041265d : lea eax, dword ptr [rbp + 0x10] ; mov qword ptr [rbp - 0x30], rax ; call 0x6be899
0x0000000000694208 : lea eax, dword ptr [rbx + 1] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000076253a : lea eax, dword ptr [rbx] ; mov word ptr [rdx + rax], es ; ret
0x0000000000667487 : lea eax, dword ptr [rcx + rsi] ; add rsp, 8 ; ret
0x00000000007e5c2a : lea eax, dword ptr [rcx] ; ret
0x00000000007c431d : lea eax, dword ptr [rcx] ; retf
0x00000000007e7d02 : lea eax, dword ptr [rcx] ; rol byte ptr [rbx + rax], 1 ; ret
0x000000000062cb81 : lea eax, dword ptr [rdi + 0x12d8] ; ret
0x00000000006a7d91 : lea eax, dword ptr [rdi + 0x18] ; ret
0x00000000006a1c46 : lea eax, dword ptr [rdi + 0x20] ; ret
0x0000000000604901 : lea eax, dword ptr [rdi + 0x80] ; ret
0x00000000006bda90 : lea eax, dword ptr [rdi + 3] ; ret
0x00000000006be470 : lea eax, dword ptr [rdi + 4] ; ret
0x00000000006cb876 : lea eax, dword ptr [rdi + 8] ; ret
0x00000000006900a7 : lea eax, dword ptr [rdi + rax - 0x30] ; mov dword ptr [r10 + 0x10], eax ; ret
0x0000000000690097 : lea eax, dword ptr [rdi + rax - 0x37] ; mov dword ptr [r10 + 0x10], eax ; ret
0x0000000000690083 : lea eax, dword ptr [rdi + rax - 0x57] ; mov dword ptr [r10 + 0x10], eax ; ret
0x0000000000650a96 : lea eax, dword ptr [rdi + rdi*8 - 1] ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret
0x00000000006a1e3b : lea eax, dword ptr [rdi + rsi - 1] ; ret
0x00000000006cb676 : lea eax, dword ptr [rdi + rsi*8] ; ret
0x00000000006c5ae5 : lea eax, dword ptr [rdi + rsi] ; add rsp, 8 ; ret
0x00000000006a07f1 : lea eax, dword ptr [rdi + rsi] ; ret
0x000000000068f301 : lea eax, dword ptr [rdi - 0x20] ; ret
0x00000000006cb866 : lea eax, dword ptr [rdi - 8] ; ret
0x0000000000747701 : lea eax, dword ptr [rdi] ; add byte ptr [rcx + rbx*8 - 0xc], bl ; call qword ptr [rax]
0x000000000068edff : lea eax, dword ptr [rdx + 1] ; ret
0x00000000006ae449 : lea eax, dword ptr [rdx + 8] ; add rsp, 0x28 ; ret
0x00000000004f56c8 : lea eax, dword ptr [rdx + 8] ; add rsp, 8 ; ret
0x000000000055fd9a : lea eax, dword ptr [rdx + 8] ; mov word ptr [rdx + 8], cx ; pop rbx ; ret
0x0000000000662793 : lea eax, dword ptr [rdx + rax + 5] ; ret
0x00000000006c7e0b : lea eax, dword ptr [rdx + rax*4 + 0x48] ; mov eax, dword ptr [rdi + rax] ; ret
0x000000000058f6b8 : lea eax, dword ptr [rdx + rax*4] ; ret
0x00000000006cf52c : lea eax, dword ptr [rdx + rcx] ; add rsp, 8 ; ret
0x000000000069ca4b : lea eax, dword ptr [rdx + rsi] ; ret
0x000000000068f99d : lea eax, dword ptr [rdx - 1] ; ret
0x00000000007c530e : lea eax, dword ptr [rdx] ; add ah, bh ; add dword ptr [rsi], esi ; add byte ptr [rax], al ; ret 0x502
0x0000000000657de8 : lea eax, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007ce4c8 : lea eax, dword ptr [rdx] ; add byte ptr [rdx + rax + 0x1c805], bh ; retf
0x00000000007ee5ce : lea eax, dword ptr [rdx] ; retf 0x102
0x0000000000544e11 : lea eax, dword ptr [rsi + 0x20] ; ret
0x000000000052b151 : lea eax, dword ptr [rsi + 0x28] ; ret
0x00000000006b27a5 : lea eax, dword ptr [rsi + 1] ; ret
0x00000000006bf543 : lea eax, dword ptr [rsi + rax*4 - 4] ; mov qword ptr [rdi + 0x40], rax ; ret
0x00000000006674d8 : lea eax, dword ptr [rsi + rcx] ; add rsp, 8 ; ret
0x0000000000580fa6 : lea eax, dword ptr [rsi + rdi*8 + 0x2948ffff] ; retf -0x36cf
0x00000000006cb686 : lea eax, dword ptr [rsi + rdi*8] ; ret
0x00000000006a89f1 : lea eax, dword ptr [rsi + rdi] ; ret
0x00000000005f7d45 : lea eax, dword ptr [rsi - 1] ; mov dword ptr [r10 + 0x14], eax ; ret
0x0000000000744631 : lea eax, dword ptr [rsi] ; add byte ptr [rsi + 0x44], ch ; out dx, al ; call rax
0x0000000000551352 : lea ebp, dword ptr [rbp - 0x90] ; mov rdi, rax ; call rdx
0x0000000000551329 : lea ebp, dword ptr [rbp - 0x90] ; xor edi, edi ; call rax
0x00000000006d8e19 : lea ebp, dword ptr [rbp] ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; retf 0x9f
0x0000000000551631 : lea ebp, dword ptr [rbx + 8] ; call rax
0x0000000000645b5b : lea ebp, dword ptr [rdi - 0x76b7fffd] ; ret
0x00000000006d6ec4 : lea ebp, dword ptr [rsi - 0x343749f2] ; ret
0x000000000063bc31 : lea ebx, dword ptr [rax + rbp*8] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000505922 : lea ebx, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000509afa : lea ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000449b88 : lea ebx, dword ptr [rbx] ; call rax
0x00000000005257f9 : lea ebx, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000491fc3 : lea ebx, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004d78d9 : lea ebx, dword ptr [rsi] ; add cl, cl ; ret
0x00000000006d4a45 : lea ebx, dword ptr [rsp + rcx*8] ; mov rsi, qword ptr [rbx] ; call r14
0x0000000000722e7f : lea ecx, dword ptr [rax - 0x29] ; retf
0x0000000000500455 : lea ecx, dword ptr [rax - 0x77] ; ret
0x000000000057c5d3 : lea ecx, dword ptr [rax - 0x7d] ; cli ; or cl, byte ptr [rax - 0x77] ; ret
0x00000000005e813d : lea ecx, dword ptr [rax - 2] ; dec ecx ; ret
0x0000000000601fdb : lea ecx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000587922 : lea ecx, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000615899 : lea ecx, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004d813d : lea ecx, dword ptr [rip - 0x70410000] ; ret 0x6e
0x0000000000597962 : lea ecx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006bce3a : lea edi, dword ptr [r14 + 1] ; movsx edi, di ; call 0x6a9099
0x0000000000640884 : lea edi, dword ptr [rax + 0x238] ; call 0x4ccb74
0x00000000004fdd7e : lea edi, dword ptr [rax + 0x28] ; call 0x689ff5
0x000000000056cdf1 : lea edi, dword ptr [rax + 0x60] ; call 0x6898f5
0x0000000000639b23 : lea edi, dword ptr [rax + rax] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000006c7a4d : lea edi, dword ptr [rax + rbx - 1] ; mov ebx, r15d ; call 0x403c79
0x000000000057000c : lea edi, dword ptr [rax - 0x28] ; jne 0x57005e ; call r12
0x00000000005702c1 : lea edi, dword ptr [rax - 0x28] ; jne 0x570316 ; call r12
0x00000000007dc708 : lea edi, dword ptr [rax] ; add byte ptr [rbx + 0xe2a], ah ; retf
0x00000000006c2df4 : lea edi, dword ptr [rbp + rdi*8 - 0x76b70001] ; ret
0x0000000000636004 : lea edi, dword ptr [rbp - 0x2b0] ; call rax
0x000000000055372c : lea edi, dword ptr [rbp - 0x2b0] ; call rdx
0x000000000065b9ca : lea edi, dword ptr [rbp - 0x3d0] ; call 0x687bf8
0x0000000000634e7d : lea edi, dword ptr [rbp - 0x530] ; call rax
0x000000000067e012 : lea edi, dword ptr [rbp - 0x70] ; call 0x67aa75
0x000000000062c0af : lea edi, dword ptr [rbx + 0x10] ; call 0x628b75
0x00000000005f8501 : lea edi, dword ptr [rbx + 0x10] ; mov rsi, rax ; call 0x6747e8
0x0000000000667974 : lea edi, dword ptr [rbx + 0x38] ; call 0x403b95
0x00000000005185ba : lea edi, dword ptr [rbx + rax*8 + 0x18] ; call 0x674836
0x00000000005815b4 : lea edi, dword ptr [rcx + 1] ; jmp 0x581580
0x00000000005b515b : lea edi, dword ptr [rcx - 0x76b7fff4] ; ret
0x0000000000586e99 : lea edi, dword ptr [rdi + 4] ; call 0x4038f5
0x00000000005ad03b : lea edi, dword ptr [rdi + 8] ; mov rsi, rbx ; call 0x5a9b38
0x0000000000586ebe : lea edi, dword ptr [rdi + rcx*4] ; lea rsi, qword ptr [rbx + rsi*4] ; call 0x4038f9
0x0000000000575b1a : lea edi, dword ptr [rdx + rax - 0x28] ; call 0x571dd6
0x0000000000570159 : lea edi, dword ptr [rdx + rax - 0x28] ; mov rdx, r12 ; jne 0x5701b1 ; call rdx
0x0000000000571bf5 : lea edi, dword ptr [rdx + rax - 0x28] ; mov rdx, r12 ; jne 0x571c49 ; call rdx
0x00000000006bce3b : lea edi, dword ptr [rsi + 1] ; movsx edi, di ; call 0x6a9098
0x0000000000687257 : lea edi, dword ptr [rsi + rbx - 1] ; mov rsi, r12 ; call 0x403c79
0x000000000051ffb9 : lea edi, dword ptr [rsp + 0x10] ; call 0x51c2c6
0x000000000057caa8 : lea edi, dword ptr [rsp + 0x20] ; call 0x4c94f4
0x000000000067dcc8 : lea edi, dword ptr [rsp + 0x20] ; call rax
0x000000000057ca9e : lea edi, dword ptr [rsp + 0x40] ; call 0x4c94f4
0x00000000005361c0 : lea edi, dword ptr [rsp + 0x60] ; call 0x672406
0x000000000055b20c : lea edi, dword ptr [rsp + 8] ; mov esi, ebx ; call 0x557438
0x000000000067fa92 : lea edx, dword ptr [rax + rax*8] ; lea eax, dword ptr [rax + rdx*2 + 0x42] ; ret
0x00000000006058fd : lea edx, dword ptr [rax - 0x76000003] ; ret 0x148
0x00000000006c5ba8 : lea edx, dword ptr [rax - 0x77] ; xor eax, eax ; mov al, dl ; mov ah, cl ; ret
0x00000000006c5bc0 : lea edx, dword ptr [rax - 0x78] ; xor eax, eax ; mov al, dl ; mov ah, cl ; ret
0x0000000000511678 : lea edx, dword ptr [rbp - 0x30] ; mov rsi, r13 ; call rax
0x000000000052ced4 : lea edx, dword ptr [rbp - 0x370] ; mov rdi, r12 ; call rax
0x00000000005311ab : lea edx, dword ptr [rbp - 0x380] ; call rax
0x00000000005311e0 : lea edx, dword ptr [rbp - 0x390] ; mov rdi, r12 ; call rax
0x00000000004f78ca : lea edx, dword ptr [rbp - 0x40] ; call rax
0x00000000006c2a7f : lea edx, dword ptr [rbp - 0x40] ; mov rdi, r15 ; call rax
0x00000000006c1cde : lea edx, dword ptr [rbp - 0x40] ; mov rsi, r9 ; mov rdi, r14 ; call rcx
0x00000000005858b7 : lea edx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005cd23f : lea edx, dword ptr [rbx] ; str word ptr [rax - 0x77] ; ret 0x8948
0x0000000000506daf : lea edx, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006a430b : lea edx, dword ptr [rdx + rcx*4] ; sub eax, edx ; add eax, 1 ; ret
0x0000000000526ba8 : lea edx, dword ptr [rsi + 1] ; mov rax, rdi ; ret
0x00000000005a4b55 : lea edx, dword ptr [rsi + 1] ; ret
0x0000000000526bea : lea edx, dword ptr [rsi - 1] ; mov rax, rdi ; ret
0x0000000000516dde : lea edx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005121a6 : lea edx, dword ptr [rsp + 0x10] ; mov rdi, r12 ; call rax
0x00000000006c23d6 : lea edx, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call rax
0x0000000000575159 : lea esi, dword ptr [rax + 0xffffffe] ; xchg eax, edi ; ret 0xb60f
0x00000000005b5a5b : lea esi, dword ptr [rax - 0x76b7fff4] ; ret
0x000000000056cf47 : lea esi, dword ptr [rbp - 0x100] ; call rax
0x000000000067ec76 : lea esi, dword ptr [rbp - 0x40] ; add rbx, 1 ; call rax
0x000000000056ea40 : lea esi, dword ptr [rbp - 0x40] ; call rax
0x0000000000551014 : lea esi, dword ptr [rbp - 0xc0] ; mov rdi, rax ; call rdx
0x0000000000550fe5 : lea esi, dword ptr [rbp - 0xc0] ; xor edi, edi ; call rax
0x0000000000586e95 : lea esi, dword ptr [rbx + 4] ; lea rdi, qword ptr [r15 + 4] ; call 0x4038f9
0x0000000000586ec2 : lea esi, dword ptr [rbx + rsi*4] ; call 0x4038f5
0x0000000000555a83 : lea esi, dword ptr [rsp + 0x10] ; call rax
0x00000000006c14ea : lea esi, dword ptr [rsp + 0x10] ; mov edx, 0x730d00 ; call rax
0x0000000000529b77 : lea esi, dword ptr [rsp + 0x30] ; mov rdi, rbx ; call rax
0x0000000000592db7 : lea esi, dword ptr [rsp + 0x50] ; mov rdx, rax ; call r8
0x0000000000592f3f : lea esi, dword ptr [rsp + 0x70] ; call rax
0x00000000006c0d9f : lea esi, dword ptr [rsp + 0xf] ; mov edx, 0x730d50 ; call rax
0x00000000004b5865 : lea esp, dword ptr [eax] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004b5866 : lea esp, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000005390ea : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000548b37 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004a5888 : lea esp, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b635b : lea esp, dword ptr [rdi - 0x76b7fff4] ; ret
0x0000000000427a86 : lea esp, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x858b
0x000000000055587d : lea r10, qword ptr [r14] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a5887 : lea r12d, dword ptr [r9] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000551328 : lea r13, qword ptr [rbp - 0x90] ; xor edi, edi ; call rax
0x0000000000551630 : lea r13, qword ptr [rbx + 8] ; call rax
0x0000000000550fe4 : lea r14, qword ptr [rbp - 0xc0] ; xor edi, edi ; call rax
0x0000000000574494 : lea r8, qword ptr [rax + 8] ; call 0x6c06d6
0x0000000000662832 : lea rax, qword ptr [r8 + rsi] ; add rax, rdx ; ret
0x000000000065c7d4 : lea rax, qword ptr [rax + 0x10] ; add rsp, 8 ; ret
0x00000000004f5697 : lea rax, qword ptr [rax + 8] ; add rsp, 8 ; ret
0x0000000000563dd2 : lea rax, qword ptr [rax + 8] ; pop rbx ; ret
0x0000000000762539 : lea rax, qword ptr [rbx] ; mov word ptr [rdx + rax], es ; ret
0x0000000000667486 : lea rax, qword ptr [rcx + rsi] ; add rsp, 8 ; ret
0x000000000062cb80 : lea rax, qword ptr [rdi + 0x12d8] ; ret
0x00000000006a7d90 : lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000604900 : lea rax, qword ptr [rdi + 0x80] ; ret
0x00000000006cb875 : lea rax, qword ptr [rdi + 8] ; ret
0x00000000006a1e3a : lea rax, qword ptr [rdi + rsi - 1] ; ret
0x00000000006cb675 : lea rax, qword ptr [rdi + rsi*8] ; ret
0x00000000006a07f0 : lea rax, qword ptr [rdi + rsi] ; ret
0x000000000068f300 : lea rax, qword ptr [rdi - 0x20] ; ret
0x00000000006cb865 : lea rax, qword ptr [rdi - 8] ; ret
0x00000000006a08f0 : lea rax, qword ptr [rdx + 1] ; ret
0x00000000006ae448 : lea rax, qword ptr [rdx + 8] ; add rsp, 0x28 ; ret
0x00000000004f56c7 : lea rax, qword ptr [rdx + 8] ; add rsp, 8 ; ret
0x000000000055fd99 : lea rax, qword ptr [rdx + 8] ; mov word ptr [rdx + 8], cx ; pop rbx ; ret
0x0000000000662792 : lea rax, qword ptr [rdx + rax + 5] ; ret
0x00000000006c7e0a : lea rax, qword ptr [rdx + rax*4 + 0x48] ; mov eax, dword ptr [rdi + rax] ; ret
0x000000000058f6b7 : lea rax, qword ptr [rdx + rax*4] ; ret
0x00000000006cf52b : lea rax, qword ptr [rdx + rcx] ; add rsp, 8 ; ret
0x0000000000544e10 : lea rax, qword ptr [rsi + 0x20] ; ret
0x000000000052b150 : lea rax, qword ptr [rsi + 0x28] ; ret
0x00000000006b27a4 : lea rax, qword ptr [rsi + 1] ; ret
0x00000000006bf542 : lea rax, qword ptr [rsi + rax*4 - 4] ; mov qword ptr [rdi + 0x40], rax ; ret
0x00000000006674d7 : lea rax, qword ptr [rsi + rcx] ; add rsp, 8 ; ret
0x00000000006cb685 : lea rax, qword ptr [rsi + rdi*8] ; ret
0x00000000006a89f0 : lea rax, qword ptr [rsi + rdi] ; ret
0x00000000006d4a44 : lea rbx, qword ptr [r12 + rcx*8] ; mov rsi, qword ptr [rbx] ; call r14
0x0000000000586e98 : lea rdi, qword ptr [r15 + 4] ; call 0x4038f6
0x0000000000640883 : lea rdi, qword ptr [rax + 0x238] ; call 0x4ccb75
0x00000000004fdd7d : lea rdi, qword ptr [rax + 0x28] ; call 0x689ff6
0x000000000056cdf0 : lea rdi, qword ptr [rax + 0x60] ; call 0x6898f6
0x000000000057000b : lea rdi, qword ptr [rax - 0x28] ; jne 0x57005f ; call r12
0x00000000005702c0 : lea rdi, qword ptr [rax - 0x28] ; jne 0x570317 ; call r12
0x0000000000636003 : lea rdi, qword ptr [rbp - 0x2b0] ; call rax
0x000000000055372b : lea rdi, qword ptr [rbp - 0x2b0] ; call rdx
0x000000000065b9c9 : lea rdi, qword ptr [rbp - 0x3d0] ; call 0x687bf9
0x0000000000634e7c : lea rdi, qword ptr [rbp - 0x530] ; call rax
0x000000000067e011 : lea rdi, qword ptr [rbp - 0x70] ; call 0x67aa76
0x000000000062c0ae : lea rdi, qword ptr [rbx + 0x10] ; call 0x628b76
0x00000000005f8500 : lea rdi, qword ptr [rbx + 0x10] ; mov rsi, rax ; call 0x6747e9
0x0000000000667973 : lea rdi, qword ptr [rbx + 0x38] ; call 0x403b96
0x00000000005185b9 : lea rdi, qword ptr [rbx + rax*8 + 0x18] ; call 0x674837
0x00000000005815b3 : lea rdi, qword ptr [rcx + 1] ; jmp 0x581581
0x00000000005ad03a : lea rdi, qword ptr [rdi + 8] ; mov rsi, rbx ; call 0x5a9b39
0x0000000000575b19 : lea rdi, qword ptr [rdx + rax - 0x28] ; call 0x571dd7
0x000000000051ffb8 : lea rdi, qword ptr [rsp + 0x10] ; call 0x51c2c7
0x000000000057caa7 : lea rdi, qword ptr [rsp + 0x20] ; call 0x4c94f5
0x000000000067dcc7 : lea rdi, qword ptr [rsp + 0x20] ; call rax
0x000000000057ca9d : lea rdi, qword ptr [rsp + 0x40] ; call 0x4c94f5
0x00000000005361bf : lea rdi, qword ptr [rsp + 0x60] ; call 0x672407
0x000000000055b20b : lea rdi, qword ptr [rsp + 8] ; mov esi, ebx ; call 0x557439
0x0000000000511677 : lea rdx, qword ptr [rbp - 0x30] ; mov rsi, r13 ; call rax
0x00000000005311aa : lea rdx, qword ptr [rbp - 0x380] ; call rax
0x00000000004f78c9 : lea rdx, qword ptr [rbp - 0x40] ; call rax
0x00000000006c2a7e : lea rdx, qword ptr [rbp - 0x40] ; mov rdi, r15 ; call rax
0x00000000005121a5 : lea rdx, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rax
0x00000000006c23d5 : lea rdx, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call rax
0x000000000056cf46 : lea rsi, qword ptr [rbp - 0x100] ; call rax
0x000000000067ec75 : lea rsi, qword ptr [rbp - 0x40] ; add rbx, 1 ; call rax
0x000000000056ea3f : lea rsi, qword ptr [rbp - 0x40] ; call rax
0x0000000000586ec1 : lea rsi, qword ptr [rbx + rsi*4] ; call 0x4038f6
0x0000000000555a82 : lea rsi, qword ptr [rsp + 0x10] ; call rax
0x0000000000529b76 : lea rsi, qword ptr [rsp + 0x30] ; mov rdi, rbx ; call rax
0x0000000000592db6 : lea rsi, qword ptr [rsp + 0x50] ; mov rdx, rax ; call r8
0x0000000000592f3e : lea rsi, qword ptr [rsp + 0x70] ; call rax
0x00000000005390e9 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000005d1713 : leave ; adc dword ptr [rbx], eax ; call rax
0x00000000004ec503 : leave ; adc eax, 0x8fbf0000 ; ret 0x6e
0x00000000006814dc : leave ; add al, 0 ; add rsp, 8 ; ret
0x0000000000672b1d : leave ; add al, 0 ; mov rdi, rbp ; call 0x6bf558
0x00000000007980ad : leave ; add al, 0 ; rcl bh, 0xe5 ; jmp qword ptr [rbx]
0x0000000000778065 : leave ; add al, byte ptr [rax] ; mov byte ptr [rbp - 0x24], bh ; call qword ptr [rbx]
0x000000000069d792 : leave ; add al, byte ptr [rcx - 0x77] ; retf
0x0000000000643daf : leave ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000048281b : leave ; add byte ptr [rax], bl ; call rax
0x00000000005d8d45 : leave ; add dword ptr [rax - 0x77], ecx ; retf 0x1deb
0x00000000005d46b3 : leave ; add dword ptr [rax - 0x77], ecx ; retf 0x4beb
0x00000000005d44cb : leave ; add dword ptr [rax - 0x77], ecx ; retf 0x53eb
0x00000000005d4520 : leave ; add dword ptr [rax - 0x77], ecx ; retf 0x5b90
0x000000000076802d : leave ; add dword ptr [rax], eax ; adc dh, byte ptr [rbp - 0x29] ; jmp qword ptr [rbx]
0x00000000007f402d : leave ; add dword ptr [rax], eax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; retf 0x501
0x0000000000735319 : leave ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; push 0xcf ; inc dword ptr [rax] ; retf 1
0x00000000007f7e2e : leave ; add dword ptr [rax], eax ; mov edx, 0x501 ; ret 0x501
0x00000000007f4009 : leave ; add dword ptr [rip + 0x18a91], eax ; retf
0x00000000007f4021 : leave ; add dword ptr [rip + 0x1b18e], eax ; xchg eax, ecx ; retf 0x501
0x00000000007420f9 : leave ; add eax, 0xe8228000 ; jmp qword ptr [rax]
0x00000000007a809d : leave ; add eax, 0xec1c2600 ; call qword ptr [rdi]
0x00000000007a80dd : leave ; add eax, 0xec1c4c00 ; call qword ptr [rbx]
0x00000000006a57bb : leave ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000007dbb9c : leave ; and dword ptr [rbx], eax ; retf
0x0000000000769bc2 : leave ; call qword ptr [rdx]
0x00000000004faa80 : leave ; call r8
0x00000000005190d6 : leave ; cmove rax, rdx ; mov rdx, rcx ; pop rbx ; ret
0x000000000051af06 : leave ; cmove rax, rdx ; mov rdx, rcx ; ret
0x00000000006609b1 : leave ; cmp esi, 0x18 ; je 0x6609e9 ; add rax, rcx ; ret
0x0000000000739b35 : leave ; fdivr st(7) ; mov eax, 0x42000321 ; retf -0x28
0x00000000006a485b : leave ; fmulp st(1) ; ret
0x0000000000556d73 : leave ; fst dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000684047 : leave ; fyl2x ; ret
0x00000000007356a5 : leave ; iretd ; call rax
0x000000000050920b : leave ; je 0x509238 ; ret
0x000000000062827b : leave ; je 0x6282a8 ; ret
0x0000000000502938 : leave ; jmp r8
0x00000000005012ea : leave ; jmp rax
0x000000000065e305 : leave ; jne 0x65e2e4 ; mov dword ptr [rdi], r8d ; ret
0x0000000000769c5a : leave ; lcall ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0x7c
0x0000000000746265 : leave ; ljmp ptr [rax + 0x4000072b] ; retf -0xe
0x000000000073e2a5 : leave ; loope 0x73e2af ; push 0x487 ; retf -0x1f
0x000000000078e211 : leave ; loope 0x78e216 ; retf
0x000000000078e279 : leave ; loope 0x78e27e ; retf 1
0x000000000073d565 : leave ; loopne 0x73d56f ; push 0x447 ; retf
0x000000000069009a : leave ; mov dword ptr [r10 + 0x10], eax ; ret
0x000000000058276e : leave ; mov eax, 1 ; ret
0x0000000000528b73 : leave ; mov ebx, 0x8948001a ; ret
0x00000000005fe349 : leave ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000606f9b : leave ; mov rdx, rsp ; mov rdi, r14 ; call rax
0x00000000005130b1 : leave ; mov rsi, r8 ; add rsp, 8 ; jmp rax
0x00000000004fcf77 : leave ; mov rsi, rbx ; mov rdx, r13 ; call rax
0x00000000004ff9d0 : leave ; mov rsi, rbx ; mov rdx, r14 ; call rax
0x0000000000503145 : leave ; mov rsi, rbx ; mov rdx, r15 ; call rax
0x00000000006d20c0 : leave ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x00000000004f3113 : leave ; not dword ptr [rax] ; call rax
0x0000000000647d58 : leave ; or byte ptr [rax], al ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000069d1ce : leave ; or dword ptr [rcx], esi ; ret 0x848d
0x000000000066d47b : leave ; or rdx, rcx ; pop rbx ; pop r14 ; ret
0x0000000000585f73 : leave ; out 0x14, eax ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000070c0d1 : leave ; pop rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x58
0x000000000070f681 : leave ; pop rcx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x59
0x00000000006c7044 : leave ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000040a0be : leave ; ret
0x0000000000598473 : leave ; ret 0x13
0x0000000000528473 : leave ; ret 0x1a
0x00000000005025e3 : leave ; ret 0x1b
0x0000000000596613 : leave ; ret 0x46
0x0000000000625723 : leave ; ret 5
0x000000000053d3e3 : leave ; retf
0x0000000000706869 : leave ; retf -0x3335
0x0000000000505e1b : leave ; retf 0x4f
0x000000000064482d : leave ; retf 3
0x00000000006a471d : leave ; sar edi, 1 ; jne 0x6a4717 ; fstp st(1) ; ret
0x00000000007cd79e : leave ; sbb byte ptr [rax], al ; ret 0x509
0x00000000005ceed3 : leave ; sbb cl, byte ptr [rdi] ; add cl, cl ; ret
0x00000000006895b2 : leave ; setle al ; ret
0x00000000006a9853 : leave ; sub cl, byte ptr [rax] ; add cl, bl ; ret 0xc9d8
0x000000000057e92d : leave ; sub dword ptr [rax], edx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007cd460 : leave ; syscall
0x000000000058d22d : leave ; verw bx ; test dword ptr [rax - 0x77], ecx ; ret
0x0000000000739125 : leave ; xlatb ; inc dword ptr [rax] ; add al, byte ptr [rax] ; out dx, al ; retf -0x29
0x000000000046f813 : leave ; xor byte ptr [rcx], bl ; call rax
0x000000000058c985 : leave ; xor dword ptr [rdi], ecx ; add bl, ch ; mov byte ptr [rax - 0x77], cl ; ret
0x00000000005582f7 : les r10d, ptr [r15] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a541c : les r13d, ptr [r9] ; ret 0xd089
0x00000000004c0d7c : les r15d, ptr [r9] ; ret 0x4c0f
0x00000000004c083e : les r15d, ptr [r9] ; ret 0x4d0f
0x00000000004c07e6 : les r15d, ptr [r9] ; ret 0x4e0f
0x000000000048f33b : les r15d, ptr [r9] ; ret 0x8f0f
0x00000000004b5188 : les r9, ptr [r8 - 0x5f173fbb] ; ret
0x00000000004e4943 : les r9d, ptr [r8 + 0x29] ; ret 0x8948
0x00000000004b34ee : les r9d, ptr [r8 - 0x75] ; add eax, 0x54f3f1 ; call rax
0x000000000073f35f : ljmp ptr [rax + 0x100004e2] ; mov dl, 0xe3 ; jmp rax
0x00000000007363b7 : ljmp ptr [rax + 0x1a] ; add al, byte ptr [rax] ; ret 0xd190
0x0000000000736fcf : ljmp ptr [rax + 0x26000251] ; js 0x736fb1 ; call rax
0x00000000007385c7 : ljmp ptr [rax + 0x2e0002bb] ; retf -0x2b
0x00000000007474df : ljmp ptr [rax + 0x38000786] ; retf
0x000000000073b1cf : ljmp ptr [rax + 0x40000398] ; mov ebp, ebx ; jmp rax
0x000000000073bf77 : ljmp ptr [rax + 0x400003dd] ; ret
0x0000000000746267 : ljmp ptr [rax + 0x4000072b] ; retf -0xe
0x0000000000733c8f : ljmp ptr [rax + 0x43] ; add al, 0 ; retf -0x32f2
0x000000000073eccf : ljmp ptr [rax + 0x4c0] ; mul dl ; call rax
0x0000000000737007 : ljmp ptr [rax + 0x50000252] ; jge 0x736fe9 ; call rax
0x000000000073d507 : ljmp ptr [rax + 0x50000445] ; ret
0x0000000000749a0f : ljmp ptr [rax + 0x50000833] ; loop 0x749a16 ; call rax
0x000000000073716f : ljmp ptr [rax + 0x59] ; add al, byte ptr [rax] ; ret 0xd2a6
0x000000000073ed57 : ljmp ptr [rax + 0x600004c3] ; jmp rdx
0x0000000000749f3f : ljmp ptr [rax + 0x6000084b] ; lodsd eax, dword ptr [rsi] ; clc ; call rax
0x000000000074af47 : ljmp ptr [rax + 0x60000890] ; cdq ; stc ; jmp rax
0x0000000000744737 : ljmp ptr [rax + 0x6c000692] ; pop rsi ; out dx, al ; call rax
0x0000000000739bf7 : ljmp ptr [rax + 0x7a000325] ; out -0x28, eax ; call rax
0x0000000000742c67 : ljmp ptr [rax + 0xa00060a] ; mov edx, ebp ; call rax
0x0000000000404782 : ljmp ptr [rax + rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007374c7 : ljmp ptr [rax - 0x1dfffd97] ; or edx, ebx ; call rax
0x000000000073935f : ljmp ptr [rax - 0x1fffd03] ; and eax, ebx ; call rax
0x000000000073439f : ljmp ptr [rax - 0x39fffe81] ; jg 0x73437c ; call rax
0x000000000073de8f : ljmp ptr [rax - 0x3ffffb8d] ; jp 0x73de80 ; call qword ptr [rax]
0x000000000073b067 : ljmp ptr [rax - 0x3ffffc6f] ; jno 0x73b054 ; call rax
0x000000000074af87 : ljmp ptr [rax - 0x4ffff76f] ; pushfq ; stc ; jmp rax
0x000000000074a1f7 : ljmp ptr [rax - 0x4ffff7ab] ; retf -8
0x000000000073e997 : ljmp ptr [rax - 0x55] ; add al, 0 ; adc byte ptr [rax - 0x1e], dh ; call rax
0x000000000073a57f : ljmp ptr [rax - 0x5bfffcaa] ; rcr bl, cl ; call rax
0x000000000074b657 : ljmp ptr [rax - 0x5ffff750] ; sbb edi, edx ; jmp rax
0x0000000000741f7f : ljmp ptr [rax - 0x5ffffa3f] ; retf
0x00000000007382d7 : ljmp ptr [rax - 0x61fffd54] ; ret 0xffd4
0x0000000000735707 : ljmp ptr [rax - 0x73fffe24] ; fcmove st(0), st(7) ; call rax
0x0000000000738717 : ljmp ptr [rax - 0x7dfffd3e] ; xor esi, edx ; call rax
0x000000000074a657 : ljmp ptr [rax - 0xffff796] ; sbb edi, ecx ; jmp rax
0x000000000074a3c7 : ljmp ptr [rax - 0xffff7a3] ; loop 0x74a3cf ; jmp rax
0x000000000074955f : ljmp ptr [rax - 0xffff7e5] ; jnp 0x749566 ; call rax
0x000000000074952f : ljmp ptr [rax - 0xffff7e6] ; ja 0x749536 ; call rax
0x0000000000735e4f : ljmp ptr [rax - 1] ; add dword ptr [rax], eax ; retf -0x2f32
0x0000000000735e17 : ljmp ptr [rax - 2] ; add dword ptr [rax], eax ; stosb byte ptr [rdi], al ; retf -0x30
0x000000000042e919 : ljmp ptr [rax] ; add cl, cl ; ret
0x00000000007457cf : ljmp ptr [rax] ; out 6, al ; add al, al ; retf
0x000000000073bacf : ljmp ptr [rax] ; ret 3
0x0000000000745317 : ljmp ptr [rax] ; retf
0x0000000000783d3b : ljmp ptr [rcx] ; add byte ptr [rax], al ; add al, 0x84 ; ret
0x0000000000783d6b : ljmp ptr [rcx] ; add byte ptr [rax], al ; add al, 0xa4 ; ret
0x0000000000694205 : ljmp ptr [rcx] ; ret
0x00000000006a6713 : ljmp ptr [rcx] ; ret 0x6349
0x000000000065fb63 : ljmp ptr [rcx] ; ret 0x7c89
0x00000000006d02ef : ljmp ptr [rcx] ; ret 0xc283
0x00000000004a7ec3 : ljmp ptr [rcx] ; ret 0xd089
0x00000000006a714f : ljmp ptr [rcx] ; ret 0xfa83
0x00000000006b071f : ljmp ptr [rcx] ; retf
0x000000000060a389 : ljmp ptr [rcx] ; retf -0xfd7
0x00000000005e8c63 : ljmp ptr [rsi + 9] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e7b51 : lldt ax ; syscall
0x00000000007d7397 : lldt dx ; syscall
0x00000000007cda9c : lldt sp ; syscall
0x00000000007f105a : lldt word ptr [rdx + 0xfa3310f] ; add dl, cl ; syscall
0x00000000007d496d : lock adc byte ptr [rax], al ; call qword ptr [rax]
0x0000000000742db0 : lock adc byte ptr [rsi], al ; add ah, cl ; shr edx, cl ; call qword ptr [rax]
0x0000000000742de8 : lock adc dword ptr [rsi], eax ; add byte ptr [rax], ah ; fsubr st(2) ; call qword ptr [rax]
0x0000000000513836 : lock add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rax
0x000000000075a785 : lock add byte ptr [rax], al ; mov cl, 0xd0 ; call qword ptr [rbx]
0x000000000075a745 : lock add byte ptr [rax], al ; mov cl, 0xd0 ; call qword ptr [rdx]
0x000000000075a7c5 : lock add byte ptr [rax], al ; pop rsi ; mov cl, 0xd0 ; call qword ptr [rcx]
0x0000000000525e79 : lock add dword ptr [r13], 1 ; call qword ptr [rip + 0x4dca5b]
0x0000000000507234 : lock add dword ptr [rax + 4], 1 ; lock add dword ptr [rax], 1 ; ret
0x00000000006898f4 : lock add dword ptr [rax + 4], 1 ; ret
0x000000000040bfc4 : lock add dword ptr [rax], 1 ; pop rbp ; ret
0x0000000000506c64 : lock add dword ptr [rax], 1 ; ret
0x00000000007f2e0f : lock add dword ptr [rax], eax ; retf
0x0000000000502767 : lock add dword ptr [rax], edi ; ret
0x00000000004fee6e : lock add dword ptr [rax], esp ; ret
0x00000000007ebd01 : lock add dword ptr [rbx - 0x7e], ecx ; adc eax, dword ptr [rax] ; retf
0x000000000079146d : lock add dword ptr [rbx], eax ; ret
0x000000000063237e : lock add dword ptr [rcx + 0x39], eax ; fmul qword ptr [rdi] ; xchg eax, ebp ; ret 0xd084
0x0000000000507d70 : lock add dword ptr [rdi + 4], 1 ; lock add dword ptr [rdi], 1 ; ret
0x0000000000689b90 : lock add dword ptr [rdi + 4], 1 ; ret
0x0000000000507d60 : lock add dword ptr [rdi], 1 ; ret
0x00000000007f45db : lock add dword ptr [rip + 0x1f1a0], eax ; ret
0x00000000007f9386 : lock add dword ptr [rip - 0x7ffffc3f], eax ; add cl, byte ptr [rax] ; ret
0x0000000000744430 : lock add dword ptr [rsi], 0 ; adc al, 0x12 ; out dx, al ; jmp qword ptr [rax]
0x00000000005307d3 : lock add dword ptr [rsp + rax*2 - 0x7af0f7dc], eax ; retf 0
0x00000000005b4808 : lock and dword ptr [rcx], esi ; xor eax, eax ; call 0x680af4
0x00000000005b4ffe : lock and dword ptr [rcx], esi ; xor eax, eax ; call 0x681302
0x00000000004f8728 : lock dec dword ptr [rax - 0x77] ; ret
0x00000000007e65df : lock or byte ptr [rsi], al ; xchg eax, esp ; adc byte ptr [rax], al ; ret
0x0000000000519080 : lock sub dword ptr [rax + 0x14], 1 ; pop rbx ; ret
0x0000000000518354 : lock sub dword ptr [rax + 0x14], 1 ; ret
0x000000000054a775 : lock sub dword ptr [rax + 0x1c], 1 ; pop rbx ; ret
0x000000000054a229 : lock sub dword ptr [rax + 0x1c], 1 ; ret
0x0000000000506fc5 : lock sub dword ptr [rax + 0x24], 1 ; pop rbx ; ret
0x0000000000506c99 : lock sub dword ptr [rax + 0x24], 1 ; ret
0x0000000000519065 : lock sub dword ptr [rax + 0x2c], 1 ; pop rbx ; ret
0x0000000000518309 : lock sub dword ptr [rax + 0x2c], 1 ; ret
0x0000000000507244 : lock sub dword ptr [rax + 4], 1 ; lock sub dword ptr [rax], 1 ; ret
0x000000000051d77a : lock sub dword ptr [rax], 1 ; jmp 0x51d750
0x00000000005898ea : lock sub dword ptr [rax], 1 ; jmp 0x5898c0
0x00000000005a4e6a : lock sub dword ptr [rax], 1 ; jmp 0x5a4e40
0x0000000000506c74 : lock sub dword ptr [rax], 1 ; ret
0x0000000000507db0 : lock sub dword ptr [rdi + 4], 1 ; lock sub dword ptr [rdi], 1 ; ret
0x0000000000507da0 : lock sub dword ptr [rdi], 1 ; ret
0x000000000049f674 : lock xor dword ptr [rsi], edx ; call rax
0x00000000004513da : lodsb al, byte ptr [rsi] ; adc al, 0xff ; dec ecx ; ret
0x00000000007bcbb4 : lodsb al, byte ptr [rsi] ; adc al, 7 ; add byte ptr [rax + 8], ch ; int1 ; call qword ptr [rbx]
0x00000000007cc588 : lodsb al, byte ptr [rsi] ; adc byte ptr [rax], al ; std ; syscall
0x00000000007dd18d : lodsb al, byte ptr [rsi] ; adc eax, 0x15da06 ; retf
0x00000000007acaf4 : lodsb al, byte ptr [rsi] ; adc eax, dword ptr [rsi] ; add byte ptr [rax], ch ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000733dac : lodsb al, byte ptr [rsi] ; adc ecx, ebp ; push qword ptr [rax - 0x3b] ; add al, 0 ; ret 0xcd13
0x000000000078fab4 : lodsb al, byte ptr [rsi] ; add al, 0 ; pop rax ; or dl, ah ; jmp qword ptr [rbx]
0x00000000007cb1d0 : lodsb al, byte ptr [rsi] ; add al, 5 ; fild dword ptr [rax + rax] ; retf 0x3e04
0x00000000007382e9 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; ret
0x00000000007382c9 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; ret 0xffd4
0x00000000007382d9 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; sahf ; ret 0xffd4
0x0000000000507c5a : lodsb al, byte ptr [rsi] ; add byte ptr [r9 + r9*4 - 1], r9b ; call 0x6d4748
0x00000000006c3caa : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000756395 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; sub al, 0xab ; iretd ; jmp qword ptr [rsi]
0x000000000055e520 : lodsb al, byte ptr [rsi] ; add byte ptr [rsi], dl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000414eb7 : lodsb al, byte ptr [rsi] ; add byte ptr es:[rax - 0x77], cl ; ret
0x000000000045394b : lodsb al, byte ptr [rsi] ; add byte ptr es:[rax - 0x77], cl ; ret 0x8948
0x0000000000686eff : lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; retf -0x70f1
0x00000000007f4035 : lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; mov esi, 0xb20501ca ; retf
0x00000000007663f5 : lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; ret 0xd5d0
0x000000000077b8f4 : lodsb al, byte ptr [rsi] ; add dword ptr [rbx], eax ; add al, cl ; and al, 0xdd ; call rcx
0x00000000007c93a9 : lodsb al, byte ptr [rsi] ; add eax, 0x5b305 ; retf
0x0000000000741aa1 : lodsb al, byte ptr [rsi] ; add eax, 0xe78c8000 ; call qword ptr [rax]
0x000000000062663e : lodsb al, byte ptr [rsi] ; add eax, 0xea834800 ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000078632d : lodsb al, byte ptr [rsi] ; add eax, dword ptr [rax] ; xor cl, 0xdf ; jmp qword ptr [rcx]
0x00000000005e7be2 : lodsb al, byte ptr [rsi] ; add r15b, dil ; ror cl, 1 ; ret
0x000000000069f394 : lodsb al, byte ptr [rsi] ; and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], al ; retf 0x2374
0x0000000000748015 : lodsb al, byte ptr [rsi] ; cmc ; call qword ptr [rax]
0x000000000079efb4 : lodsb al, byte ptr [rsi] ; cmp byte ptr [rip - 0x17bdc000], al ; call qword ptr [rsi]
0x0000000000647c40 : lodsb al, byte ptr [rsi] ; cmp eax, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000007a5db4 : lodsb al, byte ptr [rsi] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xeb6bb800 ; jmp qword ptr [rdi]
0x0000000000746245 : lodsb al, byte ptr [rsi] ; dec dword ptr [rax] ; sub eax, dword ptr [rdi] ; add byte ptr [rax - 0x54], dh ; jmp qword ptr [rax]
0x0000000000739b6c : lodsb al, byte ptr [rsi] ; fstp st(0) ; jmp rax
0x00000000005f96dc : lodsb al, byte ptr [rsi] ; je 0x5f96ed ; add byte ptr [rax - 0x77], cl ; ret
0x000000000045173e : lodsb al, byte ptr [rsi] ; jge 0x45174d ; add cl, cl ; ret
0x000000000074624d : lodsb al, byte ptr [rsi] ; jmp qword ptr [rax]
0x000000000074343c : lodsb al, byte ptr [rsi] ; jp 0x74342d ; jmp qword ptr [rax]
0x000000000076fe90 : lodsb al, byte ptr [rsi] ; leave ; call qword ptr [rdx]
0x0000000000414eb6 : lodsb al, byte ptr [rsi] ; lodsb al, byte ptr [rsi] ; add byte ptr es:[rax - 0x77], cl ; ret
0x00000000007672f4 : lodsb al, byte ptr [rsi] ; mov ebx, 0x5c920001 ; salc ; jmp qword ptr [rsi]
0x000000000044845f : lodsb al, byte ptr [rsi] ; mov rax, r14 ; mov rdi, rax ; call 0x6d4749
0x00000000007a5bb4 : lodsb al, byte ptr [rsi] ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0xeb6b6800 ; call qword ptr [rax]
0x0000000000645ea5 : lodsb al, byte ptr [rsi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000639a40 : lodsb al, byte ptr [rsi] ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007e9dbd : lodsb al, byte ptr [rsi] ; or eax, dword ptr [rax] ; ret 0x508
0x00000000007b6d61 : lodsb al, byte ptr [rsi] ; out dx, eax ; call qword ptr [rdi]
0x00000000007626b4 : lodsb al, byte ptr [rsi] ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; xchg eax, esi ; jb 0x762696 ; call rdi
0x0000000000499720 : lodsb al, byte ptr [rsi] ; outsd dx, dword ptr [rsi] ; and al, byte ptr [rax] ; leave ; ret
0x0000000000750fb4 : lodsb al, byte ptr [rsi] ; pop rax ; add byte ptr [rax], al ; push rsi ; retf
0x000000000073531c : lodsb al, byte ptr [rsi] ; push 0xcf ; inc dword ptr [rax] ; retf 1
0x0000000000790ab4 : lodsb al, byte ptr [rsi] ; push rbx ; add al, 0 ; call 0x2478ed2f
0x0000000000434812 : lodsb al, byte ptr [rsi] ; ret
0x00000000005938a0 : lodsb al, byte ptr [rsi] ; ret 0xe
0x00000000007679b4 : lodsb al, byte ptr [rsi] ; ret 1
0x00000000004d7b90 : lodsb al, byte ptr [rsi] ; retf
0x00000000007f3572 : lodsb al, byte ptr [rsi] ; retf -0x27ff
0x0000000000587c90 : lodsb al, byte ptr [rsi] ; retf 0x14
0x00000000005e7c90 : lodsb al, byte ptr [rsi] ; retf 0xe
0x0000000000723214 : lodsb al, byte ptr [rsi] ; retf 0xfa8
0x0000000000738a75 : lodsb al, byte ptr [rsi] ; salc ; call rax
0x00000000007e6d6e : lodsb al, byte ptr [rsi] ; sbb al, 5 ; retf 0x31e
0x0000000000522e90 : lodsb al, byte ptr [rsi] ; sbb byte ptr [rbx], bl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000045e934 : lodsb al, byte ptr [rsi] ; sbb eax, 0x89480022 ; ret
0x00000000005cdfa2 : lodsb al, byte ptr [rsi] ; sbb ecx, dword ptr [rbx] ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000058bb20 : lodsb al, byte ptr [rsi] ; sub dl, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007d9535 : lodsb al, byte ptr [rsi] ; syscall
0x000000000046ffa0 : lodsb al, byte ptr [rsi] ; test al, 0x23 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000077adb4 : lodsb al, byte ptr [rsi] ; test byte ptr [rdx], 0 ; pop rax ; add ch, bl ; jmp qword ptr [rax]
0x00000000007b3cb4 : lodsb al, byte ptr [rsi] ; test dword ptr [rsi], eax ; add byte ptr [rax + 0x2b], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000793ef4 : lodsb al, byte ptr [rsi] ; xchg dword ptr [rax + rax], eax ; sbb byte ptr [rbp - 0x1c], bl ; call rsp
0x0000000000753ef4 : lodsb al, byte ptr [rsi] ; xchg dword ptr [rax], eax ; add byte ptr [rsi - 0x32], dh ; call rsp
0x00000000007f3b46 : lodsb al, byte ptr [rsi] ; xchg eax, ebp ; add dword ptr [rax], eax ; retf
0x00000000007a4cb4 : lodsb al, byte ptr [rsi] ; xchg eax, ebp ; add eax, 0xeb3b3800 ; jmp qword ptr [rcx]
0x00000000006a7c73 : lodsb al, byte ptr [rsi] ; xor eax, 0xc4834800 ; or byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000055eb78 : lodsd eax, dword ptr [rsi] ; adc al, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000007ded58 : lodsd eax, dword ptr [rsi] ; add al, 5 ; add byte ptr [rax], al ; ret 0x504
0x00000000007382f1 : lodsd eax, dword ptr [rsi] ; add al, byte ptr [rax] ; salc ; ret
0x0000000000697b68 : lodsd eax, dword ptr [rsi] ; add al, ch ; ret 0xfe99
0x00000000006902c1 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000692b77 : lodsd eax, dword ptr [rsi] ; add byte ptr [rdi], dh ; add byte ptr [rcx], bh ; ret 0x840f
0x00000000007ce9dd : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0x1e01
0x00000000005329af : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x000000000076644d : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; hlt ; rcl ebp, 1 ; call rsp
0x00000000007a642d : lodsd eax, dword ptr [rsi] ; add eax, 0xeb7e3000 ; call qword ptr [rdx]
0x00000000007ec99c : lodsd eax, dword ptr [rsi] ; add edx, dword ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000000005e7b04 : lodsd eax, dword ptr [rsi] ; add r15b, dil ; ror cl, 1 ; ret
0x00000000005184ba : lodsd eax, dword ptr [rsi] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000473acd : lodsd eax, dword ptr [rsi] ; and al, 0 ; leave ; ret
0x00000000007d9d76 : lodsd eax, dword ptr [rsi] ; and eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000746acd : lodsd eax, dword ptr [rsi] ; call rax
0x0000000000749f45 : lodsd eax, dword ptr [rsi] ; clc ; call rax
0x00000000004b9337 : lodsd eax, dword ptr [rsi] ; cli ; dec ecx ; ret
0x000000000051da49 : lodsd eax, dword ptr [rsi] ; cmp byte ptr [rsi], dl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000647b93 : lodsd eax, dword ptr [rsi] ; cmp eax, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000004aaa1f : lodsd eax, dword ptr [rsi] ; cmp esp, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x2c7
0x0000000000421937 : lodsd eax, dword ptr [rsi] ; divps xmm0, xmmword ptr [rax] ; call rax
0x000000000047fc71 : lodsd eax, dword ptr [rsi] ; fdivr st(7) ; dec ecx ; ret
0x00000000004c4d37 : lodsd eax, dword ptr [rsi] ; fist dword ptr [rbx] ; call rax
0x00000000004f83ff : lodsd eax, dword ptr [rsi] ; jg 0x4f8410 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004618df : lodsd eax, dword ptr [rsi] ; jmp qword ptr [rbx]
0x000000000057d58f : lodsd eax, dword ptr [rsi] ; jno 0x57d5ad ; add byte ptr [rax - 0x77], cl ; ret
0x000000000063998f : lodsd eax, dword ptr [rsi] ; lodsd eax, dword ptr [rsi] ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000643249 : lodsd eax, dword ptr [rsi] ; loopne 0x643255 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004547a1 : lodsd eax, dword ptr [rsi] ; mov bl, 0x22 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000004c1d11 : lodsd eax, dword ptr [rsi] ; mov ebx, 0x8948ffff ; ret
0x0000000000504d1f : lodsd eax, dword ptr [rsi] ; mov ecx, 0x8948001b ; ret
0x00000000005d9c37 : lodsd eax, dword ptr [rsi] ; mov word ptr [rdx], es ; call rax
0x00000000007ecc26 : lodsd eax, dword ptr [rsi] ; or al, 0 ; ret 0x501
0x00000000007e5154 : lodsd eax, dword ptr [rsi] ; or al, byte ptr [rip - 0x4de8cd50] ; or al, byte ptr [rsi] ; retf
0x00000000007dd5ca : lodsd eax, dword ptr [rsi] ; or cl, byte ptr [rsi] ; or byte ptr [rax], al ; ret
0x0000000000639990 : lodsd eax, dword ptr [rsi] ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000005447a7 : lodsd eax, dword ptr [rsi] ; outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x49 ; retf
0x0000000000578a6f : lodsd eax, dword ptr [rsi] ; ret
0x0000000000425049 : lodsd eax, dword ptr [rsi] ; ret 0x25
0x00000000006a6963 : lodsd eax, dword ptr [rsi] ; ret 0x35
0x0000000000721c84 : lodsd eax, dword ptr [rsi] ; ret 0x4765
0x0000000000575b1f : lodsd eax, dword ptr [rsi] ; ret 0xffff
0x0000000000644749 : lodsd eax, dword ptr [rsi] ; retf
0x000000000043c2bf : lodsd eax, dword ptr [rsi] ; retf 0x23
0x00000000004b5bb9 : lodsd eax, dword ptr [rsi] ; sbb dl, bh ; dec ecx ; ret
0x00000000007f0973 : lodsd eax, dword ptr [rsi] ; sbb eax, 0x151db205 ; ret
0x000000000061535b : lodsd eax, dword ptr [rsi] ; sbb eax, dword ptr [rax] ; add cl, cl ; ret
0x0000000000678513 : lodsd eax, dword ptr [rsi] ; sete al ; ret
0x000000000074b2d5 : lodsd eax, dword ptr [rsi] ; stc ; jmp qword ptr [rax]
0x00000000007f205a : lodsd eax, dword ptr [rsi] ; sub al, 0xb ; ret
0x00000000007390ed : lodsd eax, dword ptr [rsi] ; xlatb ; jmp rax
0x00000000004b9365 : lodsq rax, qword ptr [rsi] ; cli ; dec ecx ; ret
0x00000000005447a6 : lodsq rax, qword ptr [rsi] ; outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x49 ; retf
0x00000000004043bd : loop 0x40440b ; mov edi, ebx ; call rax
0x00000000004043ed : loop 0x40443b ; mov edi, ebx ; call rax
0x0000000000406476 : loop 0x4064a9 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004064af : loop 0x4064e4 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000424635 : loop 0x42463a ; dec ecx ; ret
0x000000000042467b : loop 0x424680 ; dec ecx ; ret
0x00000000004516b3 : loop 0x4516dd ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000455446 : loop 0x455452 ; add cl, cl ; ret
0x0000000000470399 : loop 0x4703c4 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000492bea : loop 0x492bcb ; and al, byte ptr [rax] ; leave ; ret
0x00000000004a348c : loop 0x4a3491 ; dec ecx ; ret
0x00000000004d1be5 : loop 0x4d1beb ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004d1be4 : loop 0x4d1bec ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004e03b7 : loop 0x4e03db ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004f05cf : loop 0x4f05f1 ; add cl, cl ; ret
0x00000000004fd994 : loop 0x4fd9fa ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000510588 : loop 0x510519 ; out dx, al ; mov rdi, rbx ; call rax
0x000000000051bebf : loop 0x51bf11 ; or edx, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000526456 : loop 0x526477 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000526d14 : loop 0x526d00 ; retf -0x1228
0x0000000000526dda : loop 0x526e54 ; call r10
0x00000000005270c5 : loop 0x527117 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000530395 : loop 0x5303b4 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000537447 : loop 0x53744d ; ror byte ptr [rax - 0x77], 1 ; ret 0x8948
0x0000000000537ef0 : loop 0x537eeb ; ret 0x7cf
0x000000000053e727 : loop 0x53e742 ; or rax, rdx ; add rsp, 0x18 ; ret
0x0000000000542a0a : loop 0x5429d6 ; mov eax, 1 ; ret
0x0000000000548421 : loop 0x548470 ; and ebx, 0xfffffff8 ; call rax
0x00000000005489a6 : loop 0x5489f4 ; mov edi, ebx ; call rax
0x000000000054dd9d : loop 0x54ddee ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000055180c : loop 0x55181a ; add byte ptr [rax], al ; mov esi, 1 ; call rax
0x00000000005564e0 : loop 0x5564fe ; add byte ptr [rax - 0x77], cl ; ret
0x000000000055b8db : loop 0x55b8f5 ; mov ebx, fs ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x634d
0x000000000055badb : loop 0x55baf5 ; mov ebx, fs ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x634d
0x000000000055bcdb : loop 0x55bcf5 ; mov ebx, fs ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x634d
0x000000000055bedb : loop 0x55bef5 ; mov ebx, fs ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x634d
0x000000000055c44b : loop 0x55c465 ; mov ebx, fs ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x634d
0x00000000005600d4 : loop 0x560136 ; pop rbp ; pop r12 ; ret
0x0000000000564677 : loop 0x5646c7 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000057015f : loop 0x5701d9 ; call rdx
0x0000000000571bfb : loop 0x571c75 ; call rdx
0x0000000000572473 : loop 0x57248a ; add byte ptr [rax - 0x77], cl ; ret
0x000000000057676f : loop 0x5767c1 ; or edx, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000581762 : loop 0x581779 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000581761 : loop 0x58177a ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000581792 : loop 0x5817a9 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000586adf : loop 0x586b31 ; or edx, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005871ef : loop 0x587241 ; or edx, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000589757 : loop 0x5897d1 ; call rdx
0x0000000000590bba : loop 0x590c34 ; call r10
0x00000000005930a5 : loop 0x5930ba ; add byte ptr [rax - 0x77], cl ; ret
0x000000000059649f : loop 0x5964bb ; add bl, ch ; mov word ptr [rax - 0x77], cs ; ret
0x000000000059db07 : loop 0x59db59 ; or edx, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005a2831 : loop 0x5a2845 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a557a : loop 0x5a5546 ; mov eax, 1 ; ret
0x00000000005e98f7 : loop 0x5e9902 ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rdi + 0x49], 0x89 ; ret
0x00000000005f3b11 : loop 0x5f3b17 ; dec dword ptr [rax - 0x77] ; ret
0x000000000060668d : loop 0x6066f3 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000606787 : loop 0x6067ed ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000606a4d : loop 0x606ab3 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000606b47 : loop 0x606bad ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000606f9e : loop 0x606ff0 ; mov edi, esi ; call rax
0x0000000000607a84 : loop 0x607a6a ; dec dword ptr [rax - 0x77] ; ret
0x0000000000607d84 : loop 0x607dea ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000060817d : loop 0x6081e3 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000608277 : loop 0x6082dd ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000006163d4 : loop 0x6163e0 ; add rax, rdx ; nop ; pop rbp ; ret
0x000000000062fcb9 : loop 0x62fd35 ; add byte ptr [rax - 0x7d], cl ; cli ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000006566b0 : loop 0x6566d0 ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000065893d : loop 0x658975 ; dec dword ptr [rax - 0x77] ; ret
0x000000000065f9f0 : loop 0x65f9f9 ; inc dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0x894c
0x0000000000662c85 : loop 0x662cb6 ; rcl ecx, 1 ; jmp 0xffffffff8baef695
0x00000000006646a5 : loop 0x6646bc ; or rax, rdx ; ret
0x0000000000664b1a : loop 0x664b33 ; or rax, rdx ; pop r15 ; ret
0x0000000000672378 : loop 0x672383 ; add byte ptr [rax - 0x7d], cl ; cli ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000006771e8 : loop 0x677224 ; ror byte ptr [rax - 0x3f], 0xea ; sbb cl, byte ptr [rax + 0x31] ; retf 0x6948
0x0000000000684c2e : loop 0x684c70 ; or al, byte ptr [rax] ; ret
0x00000000006881e2 : loop 0x688209 ; or byte ptr [rdi + rdx], sil ; ret
0x000000000068edfd : loop 0x68ee43 ; lea eax, dword ptr [rdx + 1] ; ret
0x00000000006a1f0f : loop 0x6a1f36 ; or rax, rdx ; ret
0x00000000006a1f2c : loop 0x6a1f53 ; or rax, rdx ; ret
0x00000000006a2068 : loop 0x6a2092 ; mov eax, ecx ; or rax, rdx ; pop rbx ; ret
0x00000000006a2202 : loop 0x6a222c ; mov eax, ecx ; or rax, rdx ; pop rbx ; ret
0x00000000006aa551 : loop 0x6aa57e ; retf
0x00000000006b203d : loop 0x6b2068 ; or rax, rdx ; add rsp, 0x18 ; ret
0x00000000006b845e : loop 0x6b8466 ; add byte ptr [rax], al ; dec dword ptr [rax + 9] ; ret 0xb70f
0x00000000006c5725 : loop 0x6c5731 ; or rax, rdx ; add rsp, 8 ; ret
0x00000000006c5ca3 : loop 0x6c5cb3 ; or eax, edx ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000006c96d2 : loop 0x6c96f0 ; or eax, edx ; ret
0x00000000006cd6f7 : loop 0x6cd689 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000006ce560 : loop 0x6ce5af ; or dword ptr [rdi + rax*8], edx ; ret
0x00000000006ce9bf : loop 0x6cea11 ; or eax, edx ; mov qword ptr [rsi], r8 ; ret
0x00000000006d1e4f : loop 0x6d1ea1 ; or eax, edx ; mov qword ptr [rsi], r8 ; ret
0x00000000006d49cf : loop 0x6d4a21 ; or eax, edx ; mov qword ptr [rsi], r8 ; ret
0x00000000007351fc : loop 0x73520f ; iretd ; call rax
0x0000000000735869 : loop 0x735872 ; add byte ptr [rdx + rsi*8], ch ; iretd ; call qword ptr [rax]
0x0000000000737bdd : loop 0x737bb4 ; call rax
0x0000000000738df9 : loop 0x738e03 ; add byte ptr [rsi - 0xd], bh ; salc ; jmp qword ptr [rax]
0x0000000000739ba5 : loop 0x739b81 ; call qword ptr [rax]
0x000000000073c051 : loop 0x73c05c ; add al, dl ; in eax, -0x22 ; call rax
0x000000000073e3ce : loop 0x73e3d8 ; clc ; lea eax, dword ptr [rax + rax] ; nop ; adc ah, dl ; call qword ptr [rax]
0x000000000073e40e : loop 0x73e418 ; mov eax, 0x8000048e ; adc esp, edx ; call rax
0x000000000073e516 : loop 0x73e520 ; or byte ptr [rsp + rax - 0x1de51000], dl ; jmp qword ptr [rax]
0x000000000073e5ce : loop 0x73e5d8 ; rcl byte ptr [rdi + 0x2cc00004], 0xe2 ; jmp rax
0x000000000073e7ce : loop 0x73e7d8 ; mov al, 0xa2 ; add al, 0 ; xor byte ptr [rax - 0x1e], dl ; call rax
0x000000000073e996 : loop 0x73e9a0 ; push 0x100004ab ; jo 0x73e98a ; call rax
0x000000000073eb7e : loop 0x73eb88 ; sar byte ptr [rcx - 0x3b1ffffc], 0xe2 ; call qword ptr [rax]
0x000000000073ed1e : loop 0x73ed22 ; ret 4
0x000000000073ed2e : loop 0x73ed32 ; nop ; ret 4
0x000000000073f361 : loop 0x73f36d ; add byte ptr [rax], dl ; mov dl, 0xe3 ; jmp rax
0x000000000073fc35 : loop 0x73fc1d ; call qword ptr [rax]
0x0000000000741fbd : loop 0x741fa8 ; jmp rax
0x000000000074484c : loop 0x7448c2 ; out dx, al ; call rax
0x0000000000749a15 : loop 0x749a10 ; call rax
0x000000000074a3cd : loop 0x74a3c9 ; jmp rax
0x000000000074b4e5 : loop 0x74b4e2 ; jmp qword ptr [rax]
0x0000000000757e51 : loop 0x757e24 ; jmp qword ptr [rax]
0x0000000000757e91 : loop 0x757e64 ; call qword ptr [rcx]
0x0000000000757eb1 : loop 0x757e84 ; call qword ptr [rcx]
0x0000000000757ef1 : loop 0x757ec4 ; call qword ptr [rbx]
0x0000000000760ec1 : loop 0x760e98 ; call rsp
0x0000000000769c89 : loop 0x769c6c ; lcall ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax + rsi*4], al ; retf 0x7c
0x0000000000775471 : loop 0x775450 ; call rdi
0x0000000000775470 : loop 0x775451 ; call rdi
0x00000000007aafb1 : loop 0x7aafa1 ; jmp qword ptr [rax]
0x00000000007b2521 : loop 0x7b2513 ; jmp qword ptr [rcx]
0x00000000007b2581 : loop 0x7b2573 ; jmp qword ptr [rax]
0x00000000007b99dd : loop 0x7b99eb ; add byte ptr [rax], al ; mov esi, eax ; call rax
0x00000000007c6194 : loop 0x7c619c ; push rax ; add byte ptr [rax], al ; ret 0x502
0x00000000007e034c : loop 0x7e0355 ; add byte ptr [rcx + 5], al ; retf
0x00000000007e0464 : loop 0x7e046d ; add byte ptr [rcx + 5], al ; retf
0x00000000007ecadf : loop 0x7ecaf6 ; add eax, 0x91000ef2 ; syscall
0x00000000007f43d1 : loop 0x7f43bd ; add dword ptr [rip + 0x1e2c2], eax ; jmp rdx
0x00000000007f43d2 : loop 0x7f43dc ; add eax, 0x1e2c2 ; jmp rdx
0x00000000007f8a0c : loop 0x7f8a24 ; add eax, 0xec001096 ; syscall
0x0000000000406548 : loope 0x40657c ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000004065dc : loope 0x406610 ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x0000000000422b76 : loope 0x422ba6 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000424707 : loope 0x42470c ; dec ecx ; ret
0x00000000004248cb : loope 0x424883 ; add byte ptr es:[rax + 0x29], cl ; ret
0x000000000042c1bb : loope 0x42c209 ; sub dword ptr [rax], eax ; leave ; ret
0x0000000000432522 : loope 0x43254d ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000472efb : loope 0x472efd ; pop rax ; add bh, bh ; ror cl, 1 ; ret
0x00000000004b9254 : loope 0x4b9254 ; dec ecx ; ret
0x00000000004dc13d : loope 0x4dc1bb ; clc ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004e03f0 : loope 0x4e0414 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004e047e : loope 0x4e04a2 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004e047d : loope 0x4e04a3 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004e04b4 : loope 0x4e04d8 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004f6299 : loope 0x4f6226 ; retf 0x718d
0x0000000000501206 : loope 0x50127a ; add al, ch ; ret 0x18de
0x000000000050762b : loope 0x5076a8 ; jne 0x50767d ; mov esi, esp ; call rcx
0x00000000005101c6 : loope 0x5101cf ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000005119c9 : loope 0x5119e5 ; add cl, ch ; ret 0xfffe
0x000000000051df50 : loope 0x51dfcd ; mov rsi, rsp ; call rcx
0x00000000005319cf : loope 0x5319ea ; add byte ptr [rax - 0x77], cl ; ret
0x000000000053e802 : loope 0x53e873 ; mov dword ptr [rsi + 4], eax ; add rsp, 0x18 ; ret
0x000000000053ede5 : loope 0x53ee0f ; or rdx, rcx ; or rax, rdx ; ret
0x000000000054bbea : loope 0x54bbad ; cwde ; retf
0x0000000000555a81 : loope 0x555ad1 ; lea esi, dword ptr [rsp + 0x10] ; call rax
0x0000000000557b18 : loope 0x557b68 ; lea esi, dword ptr [rsp + 0x10] ; call rax
0x00000000005646af : loope 0x56472c ; mov rsi, rsp ; call rcx
0x000000000057040e : loope 0x570429 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000057a643 : loope 0x57a630 ; retf -9
0x0000000000581872 : loope 0x581889 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000589b6c : loope 0x589be6 ; call r9
0x000000000058a03c : loope 0x58a0b9 ; jne 0x58a08e ; mov esi, esp ; call rcx
0x00000000005a783c : loope 0x5a788c ; mov edi, ebp ; call 0x6c3b16
0x00000000005a8402 : loope 0x5a8452 ; lea esi, dword ptr [rsp + 0x10] ; call rax
0x00000000005addca : loope 0x5ade1a ; lea esi, dword ptr [rsp + 0x10] ; call rax
0x00000000005b6582 : loope 0x5b659a ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e7c88 : loope 0x5e7cdb ; mov eax, ebx ; mov rdi, rax ; call 0x6d4749
0x00000000005e846a : loope 0x5e84bd ; mov eax, ebx ; mov rdi, rax ; call 0x6d4749
0x000000000061c90c : loope 0x61c911 ; dec ecx ; ret
0x0000000000644e62 : loope 0x644e68 ; dec dword ptr [rax - 0x77] ; ret
0x000000000065e35d : loope 0x65e2ea ; retf
0x0000000000675fda : loope 0x676028 ; mov edx, ebx ; call rax
0x000000000067f224 : loope 0x67f1e7 ; retf 0x7279
0x000000000069c693 : loope 0x69c69a ; add byte ptr [rax - 0x77], cl ; ret
0x000000000069ca45 : loope 0x69ca6f ; sub ecx, eax ; rol edx, cl ; lea eax, dword ptr [rdx + rsi] ; ret
0x000000000069ca85 : loope 0x69caaf ; sub ecx, eax ; rol edx, cl ; lea eax, dword ptr [rdx + rsi] ; ret
0x000000000069cac0 : loope 0x69caea ; sub ecx, eax ; rol edx, cl ; lea eax, dword ptr [rdx + rsi] ; ret
0x000000000069cb01 : loope 0x69cb2b ; sub ecx, eax ; rol edx, cl ; lea eax, dword ptr [rdx + rsi] ; ret
0x00000000006a5a66 : loope 0x6a5ab5 ; add esp, 0x48 ; ret
0x00000000006a6081 : loope 0x6a6023 ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000006a8ee6 : loope 0x6a8e6d ; ret
0x00000000006a923e : loope 0x6a91c5 ; ret
0x00000000006b57f1 : loope 0x6b57f7 ; dec dword ptr [rax - 0x77] ; ret
0x00000000006b6fb4 : loope 0x6b702d ; add byte ptr [rdi], cl ; ret
0x00000000006b6fb3 : loope 0x6b702e ; add byte ptr [rdi], cl ; ret
0x00000000006b7053 : loope 0x6b70cc ; add byte ptr [rdi], cl ; ret
0x00000000006b7052 : loope 0x6b70cd ; add byte ptr [rdi], cl ; ret
0x00000000006b70eb : loope 0x6b7164 ; add byte ptr [rdi], cl ; ret
0x00000000006b70ea : loope 0x6b7165 ; add byte ptr [rdi], cl ; ret
0x00000000006b718b : loope 0x6b7204 ; add byte ptr [rdi], cl ; ret
0x00000000006b718a : loope 0x6b7205 ; add byte ptr [rdi], cl ; ret
0x00000000006b728b : loope 0x6b7304 ; add byte ptr [rdi], cl ; ret
0x00000000006b728a : loope 0x6b7305 ; add byte ptr [rdi], cl ; ret
0x00000000006b732b : loope 0x6b73a4 ; add byte ptr [rdi], cl ; ret
0x00000000006b732a : loope 0x6b73a5 ; add byte ptr [rdi], cl ; ret
0x00000000006b741b : loope 0x6b7494 ; add byte ptr [rdi], cl ; ret
0x00000000006b741a : loope 0x6b7495 ; add byte ptr [rdi], cl ; ret
0x00000000006b7712 : loope 0x6b778b ; add byte ptr [rdi], cl ; ret
0x00000000006b7711 : loope 0x6b778c ; add byte ptr [rdi], cl ; ret
0x00000000006b777c : loope 0x6b77f5 ; add byte ptr [rdi], cl ; ret
0x00000000006b777b : loope 0x6b77f6 ; add byte ptr [rdi], cl ; ret
0x00000000006b77e3 : loope 0x6b785c ; add byte ptr [rdi], cl ; ret
0x00000000006b77e2 : loope 0x6b785d ; add byte ptr [rdi], cl ; ret
0x00000000006b784d : loope 0x6b78c6 ; add byte ptr [rdi], cl ; ret
0x00000000006b784c : loope 0x6b78c7 ; add byte ptr [rdi], cl ; ret
0x00000000006b9b33 : loope 0x6b9b39 ; dec dword ptr [rax - 0x77] ; ret 0xb60f
0x0000000000721a5a : loope 0x721a4b ; xchg eax, ebx ; retf
0x0000000000722992 : loope 0x722940 ; call 0xffffffffc459fa92
0x0000000000722a59 : loope 0x722a5a ; sal ch, cl ; cli ; retf
0x0000000000722a3d : loope 0x722a94 ; retf -0x4446
0x000000000072321b : loope 0x723225 ; ret
0x000000000072ad51 : loope 0x72ad27 ; ret
0x000000000072add1 : loope 0x72ada7 ; ret
0x00000000007367fd : loope 0x7367d2 ; call rax
0x000000000073680d : loope 0x7367e2 ; call qword ptr [rax]
0x0000000000737365 : loope 0x73733b ; jmp rax
0x0000000000737364 : loope 0x73733c ; jmp rax
0x0000000000737bad : loope 0x737b84 ; call qword ptr [rax]
0x0000000000737bac : loope 0x737b85 ; call qword ptr [rax]
0x0000000000738dc1 : loope 0x738dcb ; add byte ptr [rsi - 0x10], ch ; salc ; call qword ptr [rax]
0x000000000073d766 : loope 0x73d770 ; enter 0x451, 0 ; adc byte ptr [rcx], cl ; call qword ptr [rax]
0x000000000073d806 : loope 0x73d810 ; enter 0x454, 0 ; adc byte ptr [rbx], 0xe1 ; jmp rax
0x000000000073d816 : loope 0x73d820 ; clc ; push rsp ; add al, 0 ; rcl byte ptr [rbx], 0xe1 ; call qword ptr [rax]
0x000000000073d896 : loope 0x73d8a0 ; clc ; push rsi ; add al, 0 ; sbb byte ptr [rax], 0xe1 ; call qword ptr [rax]
0x000000000073d9e6 : loope 0x73d9f0 ; enter 0x45c, 0 ; nop ; sub ah, cl ; jmp rax
0x000000000073db06 : loope 0x73db10 ; mov eax, 0x40000461 ; cmp ecx, esp ; call rax
0x000000000073db16 : loope 0x73db20 ; add byte ptr [rdx + 4], ah ; add al, dl ; cmp ecx, esp ; jmp qword ptr [rax]
0x000000000073dc16 : loope 0x73dc20 ; jo 0x73dc8a ; add al, 0 ; adc byte ptr [rax - 0x1f], dl ; jmp rax
0x000000000073deae : loope 0x73deb8 ; mov eax, 0xa0000474 ; jl 0x73dea1 ; call rax
0x000000000073e1de : loope 0x73e1e6 ; jo 0x73e16d ; add al, 0 ; nop ; ret 0xffe1
0x000000000073e2a6 : loope 0x73e2ae ; push 0x487 ; retf -0x1f
0x00000000007424b1 : loope 0x7424be ; add al, dh ; sbb al, 0xe9 ; call qword ptr [rax]
0x0000000000746b8d : loope 0x746b84 ; jmp qword ptr [rax]
0x0000000000748b75 : loope 0x748b6f ; call rax
0x00000000007513f9 : loope 0x7513ca ; call rsp
0x0000000000760e49 : loope 0x760e20 ; call qword ptr [rdi]
0x000000000077a071 : loope 0x77a051 ; jmp qword ptr [rdx]
0x000000000078af62 : loope 0x78af65 ; ret
0x000000000078bada : loope 0x78badd ; retf
0x000000000078d4fa : loope 0x78d4fd ; retf 0
0x000000000078d52a : loope 0x78d52d ; retf 0
0x000000000078d55a : loope 0x78d55d ; retf 0
0x000000000078d58a : loope 0x78d58d ; retf 0
0x000000000078e1da : loope 0x78e1dd ; retf 1
0x000000000078e212 : loope 0x78e215 ; retf
0x000000000078e27a : loope 0x78e27d ; retf 1
0x000000000078e4a2 : loope 0x78e4a5 ; ret
0x000000000078f0aa : loope 0x78f0ad ; retf 1
0x00000000007bb5d1 : loope 0x7bb5c5 ; jmp rbx
0x00000000007c83c7 : loope 0x7c83d7 ; sub al, 0xf0 ; sub eax, dword ptr [rax] ; mov bl, 7 ; retf
0x00000000007ca9d6 : loope 0x7ca9dc ; ret
0x00000000007d0d65 : loope 0x7d0d7d ; add eax, 0xeb001080 ; syscall
0x00000000007d6cab : loope 0x7d6cb9 ; add ebp, ebp ; add al, 0x3e ; add byte ptr [rax], al ; ret 0x505
0x00000000007d7390 : loope 0x7d73a5 ; add ch, al ; syscall
0x00000000007e4b7e : loope 0x7e4b84 ; ret 0xa301
0x00000000007e8a19 : loope 0x7e8a32 ; or edx, esp ; or cl, byte ptr [rsi] ; retf 0x12
0x00000000007ecaf4 : loope 0x7ecb09 ; add ah, cl ; syscall
0x0000000000406670 : loopne 0x4066a4 ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x0000000000406704 : loopne 0x406738 ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000041516d : loopne 0x4151bd ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x000000000041516c : loopne 0x4151be ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x00000000004245df : loopne 0x42462f ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x00000000004245de : loopne 0x424630 ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x000000000043293c : loopne 0x4329a6 ; and al, 0 ; leave ; ret
0x0000000000433bff : loopne 0x433c4f ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x0000000000433bfe : loopne 0x433c50 ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x00000000004505a5 : loopne 0x4505d2 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000451393 : loopne 0x4513e3 ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x0000000000451392 : loopne 0x4513e4 ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x0000000000454b7f : loopne 0x454bcf ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x0000000000454b7e : loopne 0x454bd0 ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x0000000000464090 : loopne 0x46409d ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rax ; leave ; ret
0x000000000046dd90 : loopne 0x46dd9d ; add byte ptr [rax], al ; mov qword ptr [rbp - 8], rax ; leave ; ret
0x0000000000473007 : loopne 0x47300c ; dec ecx ; ret
0x00000000004730b1 : loopne 0x4730b6 ; dec ecx ; ret
0x0000000000473069 : loopne 0x4730b9 ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x0000000000473068 : loopne 0x4730ba ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x000000000047313d : loopne 0x473142 ; dec ecx ; ret
0x0000000000473acc : loopne 0x473a80 ; and al, 0 ; leave ; ret
0x0000000000496fc6 : loopne 0x497027 ; ret
0x000000000049c992 : loopne 0x49c9e7 ; add byte ptr [rax], al ; leave ; ret
0x00000000004a36d1 : loopne 0x4a36d6 ; dec ecx ; ret
0x00000000004a3733 : loopne 0x4a3783 ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x00000000004a3732 : loopne 0x4a3784 ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x00000000004b3737 : loopne 0x4b37be ; add eax, 0x7dfd3941 ; adc al, 0xbe ; retf
0x00000000004b40fe : loopne 0x4b413a ; ret 0x774
0x00000000004b40fd : loopne 0x4b413b ; ret 0x774
0x00000000004b7295 : loopne 0x4b72e5 ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x00000000004b7294 : loopne 0x4b72e6 ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x00000000004b94fb : loopne 0x4b954b ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x00000000004b94fa : loopne 0x4b954c ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x00000000004c264b : loopne 0x4c2670 ; add cl, cl ; ret
0x00000000004d8a39 : loopne 0x4d8a9f ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004de5ae : loopne 0x4de53f ; add byte ptr [rcx], bh ; ret 0x147c
0x00000000004de5bd : loopne 0x4de54e ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000004e4acb : loopne 0x4e4b10 ; call rbx
0x00000000004e9b26 : loopne 0x4e9b6b ; call rbx
0x00000000004e9d64 : loopne 0x4e9da9 ; call rbx
0x00000000004e9e81 : loopne 0x4e9ec6 ; call rbx
0x00000000004ea00b : loopne 0x4ea050 ; call rbx
0x00000000004ef161 : loopne 0x4ef162 ; dec ecx ; ret
0x00000000004fd875 : loopne 0x4fd8c7 ; mov edx, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000503c60 : loopne 0x503cb7 ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x0000000000503cb8 : loopne 0x503d1a ; pop rbp ; pop r12 ; ret
0x00000000005044b1 : loopne 0x504508 ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x00000000005062dd : loopne 0x50626a ; retf
0x0000000000506509 : loopne 0x506496 ; retf
0x00000000005079e5 : loopne 0x507a65 ; mov rdi, rbp ; mov rsi, rbx ; call rax
0x000000000050acd1 : loopne 0x50ad37 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000050bde7 : loopne 0x50bdff ; outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ja 0x50bdff ; ret
0x000000000050ecc6 : loopne 0x50ecde ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050fb2b : loopne 0x50fb91 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000005116d6 : loopne 0x51173c ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000511f94 : loopne 0x511ffa ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000512b72 : loopne 0x512b36 ; ret
0x0000000000512c7f : loopne 0x512c7f ; mov eax, dword ptr [rdi + rax + 0x28] ; ret
0x00000000005133e5 : loopne 0x51343c ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x0000000000513428 : loopne 0x51347f ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x0000000000513468 : loopne 0x5134bf ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x00000000005134a8 : loopne 0x5134ff ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x0000000000513558 : loopne 0x5135af ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x0000000000513595 : loopne 0x5135ec ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x00000000005135d9 : loopne 0x513630 ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x0000000000518871 : loopne 0x5188d3 ; pop rbp ; pop r12 ; ret
0x0000000000519455 : loopne 0x5194ac ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x000000000051949b : loopne 0x5194f2 ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x00000000005194d5 : loopne 0x51952c ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x000000000051cd4a : loopne 0x51ccd7 ; ret
0x00000000005232ba : loopne 0x5232d6 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000525d71 : loopne 0x525dd7 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000052ea31 : loopne 0x52ea97 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000053053a : loopne 0x530559 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000539de2 : loopne 0x539da6 ; ret
0x000000000053ad0f : loopne 0x53ad10 ; movzx eax, byte ptr [rdi + rax + 0x50] ; ret
0x000000000053ddc6 : loopne 0x53ddd6 ; add rax, 0xc0 ; ret
0x000000000053ec64 : loopne 0x53ecca ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000545051 : loopne 0x5450b7 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000054aa45 : loopne 0x54aa9c ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x000000000054aa8b : loopne 0x54aae2 ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x000000000054aac5 : loopne 0x54ab1c ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x000000000054cf0d : loopne 0x54cf8d ; mov rdi, rbp ; mov rsi, rbx ; call rax
0x000000000054d06d : loopne 0x54d0ed ; mov rdi, rbp ; mov rsi, rbx ; call rax
0x000000000054e201 : loopne 0x54e267 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000054f46d : loopne 0x54f47c ; mov byte ptr [rsi + rax + 8], 0 ; pop rbx ; ret
0x000000000054f8d8 : loopne 0x54f950 ; add byte ptr [rax - 0x77], cl ; ja 0x54f8ee ; ret
0x0000000000555c75 : loopne 0x555cf5 ; mov rdi, rbp ; mov rsi, rbx ; call rax
0x00000000005579d1 : loopne 0x557a37 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000005612f8 : loopne 0x56135e ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000005633cc : loopne 0x5633cb ; add al, byte ptr [rax] ; add rsp, 0x48 ; ret
0x000000000056b281 : loopne 0x56b2e7 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000056eda9 : loopne 0x56edc3 ; test esi, ebp ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf
0x0000000000571ac1 : loopne 0x571b27 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000575b17 : loopne 0x575b26 ; lea rdi, qword ptr [rdx + rax - 0x28] ; call 0x571dd9
0x0000000000581916 : loopne 0x58192d ; add byte ptr [rax + 0x29], cl ; ret
0x000000000058f801 : loopne 0x58f867 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000590a81 : loopne 0x590ae7 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000595bb1 : loopne 0x595c17 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000596137 : loopne 0x596110 ; jo 0x596143 ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000596660 : loopne 0x59667c ; add bl, ch ; mov byte ptr [rax - 0x77], cl ; ret
0x00000000005966f7 : loopne 0x596711 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005966f6 : loopne 0x596712 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000597ef7 : loopne 0x597eb5 ; jo 0x597f03 ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000059a32a : loopne 0x59a37d ; add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005adc81 : loopne 0x5adce7 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000005b05c1 : loopne 0x5b05d8 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b672b : loopne 0x5b6743 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e6ec8 : loopne 0x5e6e5a ; jo 0x5e6e5b ; ret 0x8b48
0x00000000005e6ec7 : loopne 0x5e6e5b ; jo 0x5e6e5c ; ret 0x8b48
0x00000000005ea06b : loopne 0x5ea0bb ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x00000000005ea06a : loopne 0x5ea0bc ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x00000000005ed405 : loopne 0x5ed455 ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x00000000005ed404 : loopne 0x5ed456 ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x00000000005f7c49 : loopne 0x5f7ca0 ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x00000000005f7c89 : loopne 0x5f7ce0 ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x00000000005f8667 : loopne 0x5f8627 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000005f8ca9 : loopne 0x5f8d00 ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x00000000005f96ce : loopne 0x5f9690 ; retf
0x00000000005fa2be : loopne 0x5fa2fb ; ret
0x00000000005fab3d : loopne 0x5faba3 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000005fab95 : loopne 0x5fabfb ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000005fef90 : loopne 0x5feff6 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000005ff01e : loopne 0x5ff084 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000005ff051 : loopne 0x5ff0b7 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000600b98 : loopne 0x600bac ; sahf ; ret 0xc085
0x0000000000602b15 : loopne 0x602b23 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000602b3c : loopne 0x602b4a ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000606895 : loopne 0x606822 ; ret 0x8d48
0x000000000060a5a2 : loopne 0x60a608 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000060a9e5 : loopne 0x60aa37 ; mov edx, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000060c508 : loopne 0x60c56a ; pop rbp ; pop r12 ; ret
0x0000000000619a9d : loopne 0x619aed ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x0000000000619a9c : loopne 0x619aee ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x000000000061cc1f : loopne 0x61cc6f ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x000000000061cc1e : loopne 0x61cc70 ; mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x000000000061e3b8 : loopne 0x61e40a ; mov eax, dword ptr [rip + 0x3e4528] ; call rax
0x000000000061e3b7 : loopne 0x61e40b ; mov eax, dword ptr [rip + 0x3e4528] ; call rax
0x000000000061fbd8 : loopne 0x61fc2a ; mov eax, dword ptr [rip + 0x3e2d08] ; call rax
0x000000000061fbd7 : loopne 0x61fc2b ; mov eax, dword ptr [rip + 0x3e2d08] ; call rax
0x00000000006201d0 : loopne 0x620222 ; mov eax, dword ptr [rip + 0x3e2710] ; call rax
0x00000000006201cf : loopne 0x620223 ; mov eax, dword ptr [rip + 0x3e2710] ; call rax
0x0000000000620ad9 : loopne 0x620b2b ; mov eax, dword ptr [rip + 0x3e1e07] ; call rax
0x0000000000620ad8 : loopne 0x620b2c ; mov eax, dword ptr [rip + 0x3e1e07] ; call rax
0x0000000000621f2c : loopne 0x621f7e ; mov eax, dword ptr [rip + 0x3e09b4] ; call rax
0x0000000000621f2b : loopne 0x621f7f ; mov eax, dword ptr [rip + 0x3e09b4] ; call rax
0x000000000062208e : loopne 0x6220e0 ; mov eax, dword ptr [rip + 0x3e0852] ; call rax
0x000000000062208d : loopne 0x6220e1 ; mov eax, dword ptr [rip + 0x3e0852] ; call rax
0x00000000006242cc : loopne 0x624278 ; or dword ptr [rax], eax ; leave ; ret
0x0000000000625fca : loopne 0x625f8e ; jno 0x625fd5 ; mov rdi, rbx ; call rax
0x0000000000625fe8 : loopne 0x625fac ; jno 0x625ff3 ; mov rdi, rbx ; call rax
0x0000000000626006 : loopne 0x625fca ; jno 0x626011 ; mov rdi, rbx ; call rax
0x00000000006263e3 : loopne 0x6263a7 ; jno 0x6263ee ; mov rdi, rbx ; call rax
0x000000000062640c : loopne 0x6263d0 ; jno 0x626417 ; mov rdi, rbx ; call rax
0x0000000000626432 : loopne 0x6263f6 ; jno 0x62643d ; mov rdi, rbx ; call rax
0x000000000062659f : loopne 0x626551 ; add dword ptr [rbp + 0x7d], esi ; mov rsi, rsp ; call rax
0x00000000006266f8 : loopne 0x626709 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006266f7 : loopne 0x62670a ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000626955 : loopne 0x6269d5 ; mov rdi, rbp ; mov rsi, rbx ; call rax
0x000000000062a161 : loopne 0x62a1c7 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000062a295 : loopne 0x62a247 ; add dword ptr [rbp + 0x4d], esi ; mov rsi, rsp ; call rax
0x000000000062a6f2 : loopne 0x62a6b6 ; jno 0x62a6fd ; mov rdi, rbp ; call rax
0x000000000062ad7c : loopne 0x62ad40 ; jno 0x62ad87 ; mov rdi, rbp ; call rax
0x000000000062ae3c : loopne 0x62ae00 ; jno 0x62ae47 ; mov rdi, rbp ; call rax
0x000000000062aefc : loopne 0x62aec0 ; jno 0x62af07 ; mov rdi, rbp ; call rax
0x000000000062afbc : loopne 0x62af80 ; jno 0x62afc7 ; mov rdi, rbp ; call rax
0x0000000000630f57 : loopne 0x630fb9 ; pop rbp ; pop r12 ; ret
0x00000000006318a9 : loopne 0x6318b5 ; mov eax, dword ptr [rdi + rax + 0x58] ; ret
0x0000000000631b38 : loopne 0x631b8a ; mov edx, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006324e4 : loopne 0x632537 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000063b39c : loopne 0x63b35e ; ret
0x000000000063e993 : loopne 0x63e9e6 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000642f6a : loopne 0x642f6f ; jmp 0x63f1f3
0x000000000064324a : loopne 0x643254 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000665d5f : loopne 0x665d67 ; rol dword ptr [rcx + 9], 1 ; ret
0x0000000000665e02 : loopne 0x665e0a ; fld dword ptr [rbp + 9] ; ret
0x000000000066b172 : loopne 0x66b179 ; add byte ptr [rax], al ; ret
0x000000000066b18b : loopne 0x66b196 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000066dc64 : loopne 0x66dcc6 ; pop rbp ; pop r12 ; ret
0x000000000066dc83 : loopne 0x66dce5 ; pop rbp ; pop r12 ; ret
0x000000000066dd9c : loopne 0x66de02 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000672f17 : loopne 0x672f79 ; pop rbp ; pop r12 ; ret
0x0000000000672f33 : loopne 0x672f95 ; pop rbp ; pop r12 ; ret
0x0000000000673b96 : loopne 0x673ba7 ; add rax, 0x600 ; ret
0x00000000006768ec : loopne 0x676952 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000006783ff : loopne 0x678404 ; ret
0x000000000067842c : loopne 0x678431 ; ret
0x000000000067845f : loopne 0x678464 ; ret
0x00000000006784ee : loopne 0x6784f3 ; ret
0x000000000067854f : loopne 0x678554 ; ret
0x00000000006785bf : loopne 0x6785c4 ; ret
0x00000000006786d0 : loopne 0x678736 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000006788b0 : loopne 0x678916 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000678a90 : loopne 0x678af6 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000678ce0 : loopne 0x678d46 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000678d11 : loopne 0x678d77 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000067c468 : loopne 0x67c4ce ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000067c6b8 : loopne 0x67c71e ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000067e6f0 : loopne 0x67e756 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000067ef82 : loopne 0x67efe8 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000067efc9 : loopne 0x67f02f ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000006805a1 : loopne 0x6805ab ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000684125 : loopne 0x684133 ; add al, bl ; ret 0x7cd9
0x0000000000684b25 : loopne 0x684b74 ; add esp, 0x38 ; ret
0x000000000068600c : loopne 0x686063 ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x0000000000687be6 : loopne 0x687beb ; ret
0x0000000000688286 : loopne 0x688292 ; test dl, dl ; je 0x688298 ; xor eax, 1 ; ret
0x000000000068f119 : loopne 0x68f17f ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000068f361 : loopne 0x68f3e0 ; in al, dx ; mov eax, 1 ; ret
0x000000000068fa05 : loopne 0x68fa5c ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x0000000000694f73 : loopne 0x694fd9 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000694f88 : loopne 0x694fee ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000069bddb : loopne 0x69be41 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000069c05f : loopne 0x69c0c5 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000069d534 : loopne 0x69d59a ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000069db0a : loopne 0x69db70 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000069dd97 : loopne 0x69ddfd ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000006a088e : loopne 0x6a08e1 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006a1837 : loopne 0x6a185e ; or rax, rsi ; ret
0x00000000006a406e : loopne 0x6a4003 ; pop rbp ; ret
0x00000000006a406d : loopne 0x6a4004 ; pop rbp ; ret
0x00000000006a589b : loopne 0x6a5878 ; retf -0x7817
0x00000000006a5a89 : loopne 0x6a5ad8 ; add esp, 0x48 ; ret
0x00000000006a5d3b : loopne 0x6a5d8a ; add esp, 0x38 ; ret
0x00000000006a5dbb : loopne 0x6a5e0a ; add esp, 0x38 ; ret
0x00000000006a5e59 : loopne 0x6a5ea8 ; add esp, 0x28 ; ret
0x00000000006ae987 : loopne 0x6ae9d9 ; mov edx, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006ae9e7 : loopne 0x6aea39 ; mov edx, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006aea47 : loopne 0x6aea99 ; mov edx, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006af548 : loopne 0x6af5aa ; pop rbp ; pop r12 ; ret
0x00000000006af5d7 : loopne 0x6af629 ; mov edx, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006b17ba : loopne 0x6b1820 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000006b1a53 : loopne 0x6b1ab9 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000006b1ad3 : loopne 0x6b1b39 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000006b2460 : loopne 0x6b2424 ; ret
0x00000000006b3146 : loopne 0x6b31ac ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000006b580b : loopne 0x6b57f8 ; retf
0x00000000006baff1 : loopne 0x6baf7e ; ret
0x00000000006bb428 : loopne 0x6bb3b5 ; ret
0x00000000006bc563 : loopne 0x6bc57a ; or rax, rcx ; ret
0x00000000006bd2fa : loopne 0x6bd360 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000006bd382 : loopne 0x6bd394 ; lea eax, dword ptr [r8 + rax] ; add eax, edx ; ret
0x00000000006be333 : loopne 0x6be399 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000006be3fe : loopne 0x6be40c ; add eax, esi ; ret
0x00000000006bfcac : loopne 0x6bfd03 ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x00000000006bfccc : loopne 0x6bfd23 ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x00000000006bfd20 : loopne 0x6bfd77 ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x00000000006bfde0 : loopne 0x6bfe37 ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x00000000006bfe00 : loopne 0x6bfe57 ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x00000000006c03d0 : loopne 0x6c0427 ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x00000000006c04b3 : loopne 0x6c050a ; mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x00000000006c27e6 : loopne 0x6c27fe ; jae 0x6c27f1 ; mov rdi, r13 ; call rax
0x00000000006c2811 : loopne 0x6c2829 ; jae 0x6c281c ; mov rdi, r13 ; call rax
0x00000000006c2b73 : loopne 0x6c2b8b ; jae 0x6c2b7e ; mov rdi, rbx ; call rax
0x00000000006c2b96 : loopne 0x6c2bab ; jae 0x6c2b9e ; call rax
0x00000000006c2ef6 : loopne 0x6c2f0e ; jae 0x6c2f01 ; mov rdi, r13 ; call rax
0x00000000006c2f21 : loopne 0x6c2f39 ; jae 0x6c2f2c ; mov rdi, r13 ; call rax
0x00000000006c3243 : loopne 0x6c325b ; jae 0x6c324e ; mov rdi, rbx ; call rax
0x00000000006c3266 : loopne 0x6c327b ; jae 0x6c326e ; call rax
0x00000000006c3336 : loopne 0x6c334e ; jae 0x6c3341 ; mov rdi, rbx ; call rax
0x00000000006c35c6 : loopne 0x6c35de ; jae 0x6c35d1 ; mov rdi, r13 ; call rax
0x00000000006c35f1 : loopne 0x6c3609 ; jae 0x6c35fc ; mov rdi, r13 ; call rax
0x00000000006c374f : loopne 0x6c3767 ; jae 0x6c375a ; mov rdi, r15 ; call rax
0x00000000006c3903 : loopne 0x6c391b ; jae 0x6c390e ; mov rdi, rbx ; call rax
0x00000000006c3926 : loopne 0x6c393b ; jae 0x6c392e ; call rax
0x00000000006c5125 : loopne 0x6c50b2 ; ret 0x8948
0x00000000006c71b3 : loopne 0x6c7219 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000006c77c4 : loopne 0x6c782a ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000006c78d1 : loopne 0x6c7937 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000006c7cec : loopne 0x6c7d52 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000006c8cb4 : loopne 0x6c8d1a ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000006c8fb4 : loopne 0x6c901a ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000006ce581 : loopne 0x6ce586 ; ret
0x00000000006ce5a0 : loopne 0x6ce5f2 ; not eax ; and qword ptr [rdi + rdx*8], rax ; ret
0x00000000006d0870 : loopne 0x6d08c2 ; mov edx, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006d0dc3 : loopne 0x6d0e29 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000721cb0 : loopne 0x721c70 ; retf
0x00000000007222fa : loopne 0x722289 ; retf 0x5cb0
0x0000000000722e7d : loopne 0x722eed ; lea ecx, dword ptr [rax - 0x29] ; retf
0x0000000000722e7c : loopne 0x722eee ; lea ecx, dword ptr [rax - 0x29] ; retf
0x0000000000723237 : loopne 0x7232b6 ; retf
0x0000000000723237 : loopne 0x7232bd ; retf
0x00000000007352c0 : loopne 0x735290 ; add dword ptr [rax], eax ; iretq ; call qword ptr [rax]
0x0000000000735678 : loopne 0x735657 ; add dword ptr [rax], eax ; retf -0x3041
0x00000000007358a0 : loopne 0x73588c ; add dword ptr [rax], eax ; mov dh, ah ; iretd ; call qword ptr [rax]
0x0000000000736f78 : loopne 0x736fd0 ; add al, byte ptr [rax] ; mov byte ptr [rcx - 0x2e], ch ; call qword ptr [rax]
0x0000000000737a80 : loopne 0x737a0e ; add al, byte ptr [rax] ; rcl ebx, 1 ; call qword ptr [rax]
0x00000000007386f0 : loopne 0x7386bc ; add al, byte ptr [rax] ; sbb byte ptr [rdi], ah ; salc ; inc dword ptr [rax] ; ret 2
0x0000000000738c4d : loopne 0x738c27 ; call rax
0x0000000000738c5d : loopne 0x738c37 ; call qword ptr [rax]
0x0000000000738fd0 : loopne 0x738fc4 ; add al, byte ptr [rax] ; scasb al, byte ptr [rdi] ; pop rsi ; xlatb ; call qword ptr [rax]
0x0000000000739060 : loopne 0x739057 ; add al, byte ptr [rax] ; xchg dil, dl ; call qword ptr [rax]
0x0000000000739090 : loopne 0x739088 ; add al, byte ptr [rax] ; jl 0x739030 ; xlatb ; call qword ptr [rax]
0x00000000007397b8 : loopne 0x7397d1 ; add eax, dword ptr [rax] ; mov ss, word ptr [rdi - 0x28] ; call qword ptr [rax]
0x000000000073a300 : loopne 0x73a352 ; add eax, dword ptr [rax] ; add bl, bl ; call qword ptr [rax]
0x000000000073a450 : loopne 0x73a4a9 ; add eax, dword ptr [rax] ; call 0x11737fea
0x000000000073ccce : loopne 0x73ccd8 ; enter 0x41e, 0 ; xor byte ptr [rdx], 0xe0 ; jmp rax
0x000000000073cd1e : loopne 0x73cd28 ; mov eax, 0x3000041f ; xor esp, eax ; call rax
0x000000000073cf66 : loopne 0x73cf70 ; enter 0x42b, 0 ; push rax ; ja 0x73cf58 ; jmp rax
0x000000000073cfce : loopne 0x73cfd8 ; mov eax, 0xd000042d ; jp 0x73cfc0 ; call rax
0x000000000073d2a6 : loopne 0x73d2b0 ; mov eax, 0x43b ; mov bl, 0xe0 ; call rax
0x000000000073d346 : loopne 0x73d350 ; enter 0x43d, 0 ; nop ; mov ch, 0xe0 ; jmp rax
0x000000000073d396 : loopne 0x73d3a0 ; mov eax, 0x3000043e ; mov dh, 0xe0 ; call rax
0x000000000073d4ce : loopne 0x73d4d6 ; mov byte ptr [rsp + rax], al ; ret 0xffe0
0x000000000073d4e6 : loopne 0x73d4ee ; xor byte ptr [rbp + 4], al ; add byte ptr [rax], al ; ret
0x000000000073d506 : loopne 0x73d50e ; test al, 0x45 ; add al, 0 ; push rax ; ret
0x000000000073d566 : loopne 0x73d56e ; push 0x447 ; retf
0x000000000073f62d : loopne 0x73f614 ; jmp rax
0x00000000007407a8 : loopne 0x7407fe ; add eax, 0xe5c14000 ; jmp qword ptr [rax]
0x0000000000740bd8 : loopne 0x740c43 ; add eax, 0xe6282000 ; call qword ptr [rax]
0x0000000000740d48 : loopne 0x740db9 ; add eax, 0xe63ba000 ; call qword ptr [rax]
0x00000000007412d5 : loopne 0x7412bf ; jmp qword ptr [rax]
0x0000000000741728 : loopne 0x7416cb ; add eax, 0xe73d5000 ; call qword ptr [rax]
0x00000000007418b8 : loopne 0x741862 ; add eax, 0xe7549000 ; call qword ptr [rax]
0x0000000000741a00 : loopne 0x7419b1 ; add eax, 0xe777e000 ; jmp qword ptr [rax]
0x0000000000741fc0 : loopne 0x741f8d ; add eax, 0xe7e4a000 ; push qword ptr [rax] ; ret
0x0000000000742638 : loopne 0x74262b ; add eax, 0xe9961a00 ; call qword ptr [rax]
0x00000000007441b4 : loopne 0x744142 ; in eax, dx ; call qword ptr [rax]
0x00000000007455f4 : loopne 0x745585 ; out dx, eax ; jmp qword ptr [rax]
0x0000000000745e9c : loopne 0x745f0e ; call qword ptr [rax]
0x0000000000745e9c : loopne 0x745f0f ; call qword ptr [rax]
0x00000000007463bc : loopne 0x7463d2 ; jmp qword ptr [rax]
0x00000000007464a4 : loopne 0x7464e0 ; call rax
0x00000000007470f4 : loopne 0x74714d ; hlt ; jmp qword ptr [rax]
0x000000000074781d : loopne 0x747815 ; call qword ptr [rax]
0x000000000074781c : loopne 0x747816 ; call qword ptr [rax]
0x000000000074836c : loopne 0x748343 ; cmc ; jmp qword ptr [rax]
0x0000000000749930 : loopne 0x749965 ; or byte ptr [rax], al ; ret 0xfff7
0x0000000000749ecc : loopne 0x749e7a ; clc ; jmp qword ptr [rax]
0x000000000074aa24 : loopne 0x74aa84 ; stc ; jmp rax
0x000000000074b2d4 : loopne 0x74b286 ; stc ; jmp qword ptr [rax]
0x000000000074b3d0 : loopne 0x74b37a ; or byte ptr [rax], al ; add dh, al ; stc ; call qword ptr [rax]
0x000000000074e3b1 : loopne 0x74e381 ; call rsp
0x000000000074e3b0 : loopne 0x74e382 ; call rsp
0x00000000007513b9 : loopne 0x75138a ; call rsp
0x00000000007557b0 : loopne 0x75573e ; iretd ; jmp rsi
0x0000000000757bd9 : loopne 0x757bac ; jmp qword ptr [rax]
0x0000000000757c19 : loopne 0x757bec ; call qword ptr [rcx]
0x0000000000757c39 : loopne 0x757c0c ; call qword ptr [rcx]
0x0000000000757c79 : loopne 0x757c4c ; call qword ptr [rbx]
0x0000000000757d19 : loopne 0x757cec ; call qword ptr [rdi]
0x0000000000757d18 : loopne 0x757ced ; call qword ptr [rdi]
0x000000000075d921 : loopne 0x75d8f6 ; jmp rdi
0x0000000000769c09 : loopne 0x769be5 ; call rsi
0x0000000000779fc9 : loopne 0x779fa9 ; call rcx
0x0000000000787e32 : loopne 0x787e35 ; retf
0x0000000000787e31 : loopne 0x787e36 ; retf
0x0000000000789a9a : loopne 0x789a9d ; retf
0x000000000078a2fa : loopne 0x78a2fd ; retf
0x000000000078a422 : loopne 0x78a425 ; retf
0x00000000007a2c90 : loopne 0x7a2cfa ; jmp 0x7aef9a
0x00000000007aae31 : loopne 0x7aae21 ; jmp qword ptr [rdi]
0x00000000007ac448 : loopne 0x7ac493 ; in eax, dx ; call qword ptr [rbx]
0x00000000007acf80 : loopne 0x7acfe3 ; in eax, dx ; jmp qword ptr [rcx]
0x00000000007ad4b0 : loopne 0x7ad43f ; in eax, dx ; jmp qword ptr [rax]
0x00000000007ade60 : loopne 0x7ade00 ; in eax, dx ; call qword ptr [rdx]
0x00000000007b34b0 : loopne 0x7b34cd ; out dx, eax ; jmp qword ptr [rcx]
0x00000000007bb4c9 : loopne 0x7bb4bd ; call qword ptr [rdi]
0x00000000007bb5a1 : loopne 0x7bb595 ; call qword ptr [rdx]
0x00000000007db9a3 : loopne 0x7db9b0 ; add ecx, eax ; add eax, 0x302eb00 ; ret
0x00000000007ddbcf : loopne 0x7ddbe7 ; add eax, 0xea0018af ; syscall
0x00000000007e32ee : loopne 0x7e3317 ; add byte ptr [rsi + 0x51f], ah ; ret 0x51f
0x00000000007e51db : loopne 0x7e5204 ; add dl, cl ; or al, 6 ; ret
0x00000000007e7b50 : loopne 0x7e7b65 ; add al, dl ; syscall
0x00000000007ebf9c : loopne 0x7ebfa5 ; adc al, 0xff ; or byte ptr [rax], al ; ret
0x00000000007f3f73 : loopne 0x7f3f3d ; add dword ptr [rax], eax ; ret
0x00000000007f437a : loopne 0x7f4384 ; add eax, 0x19ca3 ; retf
0x00000000007f4c39 : loopne 0x7f4c48 ; add eax, 0xe50010c8 ; add al, 6 ; ret
0x00000000007f5609 : loopne 0x7f5621 ; add eax, 0xfb001085 ; syscall
0x00000000007d439e : lsl eax, esp ; syscall
0x00000000007f56bc : lsl ebx, edi ; syscall
0x00000000007c6504 : lsl esp, dword ptr [rdi + 0x78208] ; add ah, al ; syscall
0x00000000007dd0db : ltr ax ; syscall
0x00000000007cb531 : ltr bx ; syscall
0x00000000007e6095 : ltr sp ; syscall
0x00000000007ecae9 : ltr word ptr [rbx + 0xef2050f] ; add dl, al ; syscall
0x0000000000411905 : maxps xmm0, xmmword ptr [rax] ; call rax
0x00000000005986bd : maxps xmm2, xmmword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000056c68d : mfence ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000069f525 : mfence ; add rsp, 8 ; ret
0x0000000000678d24 : mfence ; mov dword ptr [rdi + 4], eax ; mfence ; ret
0x00000000006706f9 : mfence ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000050bed4 : mfence ; ret
0x00000000006b31b2 : mov ah, 0 ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x00000000005746e9 : mov ah, 0x10 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000565725 : mov ah, 0x11 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000515e63 : mov ah, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000559240 : mov ah, 0x17 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000545561 : mov ah, 0x17 ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004f9249 : mov ah, 0x1d ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c318a : mov ah, 0x1f ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000005c6fdd : mov ah, 0x24 ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000593018 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000465257 : mov ah, 0x25 ; add cl, cl ; ret
0x000000000041465e : mov ah, 0x26 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000453150 : mov ah, 0x26 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000040f89a : mov ah, 0x27 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004876e7 : mov ah, 0x29 ; ret 0xd089
0x00000000007217ea : mov ah, 0x2b ; add al, 0x6a ; mov bl, 0x5c ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x0000000000527a28 : mov ah, 0x2e ; sbb byte ptr [rax], al ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000006902b8 : mov ah, 0x38 ; xlatb ; dec dword ptr [rax + 0x39] ; ret
0x00000000006bd7b1 : mov ah, 0x39 ; retf
0x00000000004b2f78 : mov ah, 0x3f ; add al, 0 ; nop ; leave ; ret
0x000000000077f8bc : mov ah, 0x41 ; add eax, dword ptr [rax] ; nop ; xor al, 0xde ; call qword ptr [rcx]
0x00000000004ba8a7 : mov ah, 0x48 ; mov eax, dword ptr [rax*8 + 0x6ec380] ; jmp rax
0x00000000004c8b50 : mov ah, 0x48 ; mov eax, dword ptr [rip + 0x539d90] ; call rax
0x00000000004c3026 : mov ah, 0x48 ; mov eax, dword ptr [rip + 0x53f8ba] ; call rax
0x00000000007900bc : mov ah, 0x49 ; add al, 0 ; adc byte ptr [rcx - 0x1e], cl ; jmp qword ptr [rbx]
0x00000000006f7901 : mov ah, 0x51 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 0x51
0x00000000007a0dbc : mov ah, 0x56 ; add eax, 0xe8a38000 ; jmp qword ptr [rax]
0x00000000007716fc : mov ah, 0x5f ; add al, byte ptr [rax] ; rcr ch, 0xda ; call rsi
0x00000000007a18bc : mov ah, 0x61 ; add eax, 0xc649c400 ; call qword ptr [rdx]
0x0000000000751ffc : mov ah, 0x68 ; add byte ptr [rax], al ; scasb al, byte ptr [rdi] ; adc ecx, esi ; call rcx
0x0000000000409538 : mov ah, 0x68 ; sub byte ptr [rax], al ; call 0x686026
0x0000000000597ef8 : mov ah, 0x70 ; add byte ptr [rax - 0x77], cl ; ja 0x597f0e ; ret
0x0000000000589942 : mov ah, 0x79 ; str word ptr [rax - 0x77] ; ret
0x00000000007a3ebc : mov ah, 0x87 ; add eax, 0xc63b6c00 ; call qword ptr [rdx]
0x00000000007a47bc : mov ah, 0x90 ; add eax, 0xc6335800 ; call qword ptr [rdx]
0x00000000007a4afc : mov ah, 0x93 ; add eax, 0xeabe7000 ; jmp rax
0x00000000007a51bc : mov ah, 0x9a ; add eax, 0xeb454000 ; jmp qword ptr [rax]
0x000000000062929a : mov ah, 0xa ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007a67bc : mov ah, 0xb0 ; add eax, 0xeba1a000 ; jmp qword ptr [rsi]
0x00000000005b56cc : mov ah, 0xc ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007578fc : mov ah, 0xc1 ; add byte ptr [rax], al ; or dl, bl ; iretd ; jmp qword ptr [rbx]
0x0000000000756c50 : mov ah, 0xc3 ; iretd ; call rsp
0x00000000007586fc : mov ah, 0xcf ; add byte ptr [rax], al ; or dl, al ; call rsp
0x00000000005f92d2 : mov ah, 0xd ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005ae436 : mov ah, 0xd ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000075a881 : mov ah, 0xd0 ; call rsp
0x00000000007381c5 : mov ah, 0xd4 ; jmp rax
0x0000000000768ffc : mov ah, 0xd8 ; add dword ptr [rax], eax ; xchg eax, esp ; jb 0x768fe2 ; jmp qword ptr [rbx]
0x000000000076bde1 : mov ah, 0xd9 ; call qword ptr [rbx]
0x0000000000774de1 : mov ah, 0xdb ; jmp qword ptr [rax]
0x000000000073c955 : mov ah, 0xdf ; call qword ptr [rax]
0x000000000059466a : mov ah, 0xe ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x000000000073d315 : mov ah, 0xe0 ; jmp qword ptr [rax]
0x0000000000789739 : mov ah, 0xe0 ; jmp rcx
0x0000000000769bbc : mov ah, 0xe4 ; add dword ptr [rax], eax ; xor al, 0xa3 ; leave ; call qword ptr [rdx]
0x0000000000797c81 : mov ah, 0xe5 ; jmp qword ptr [rbx]
0x0000000000561108 : mov ah, 0xe8 ; ret 0x1283
0x000000000067ac27 : mov ah, 0xe8 ; sar dword ptr [rax - 0x76b7fffe], cl ; ret 0xc148
0x000000000067b123 : mov ah, 0xe8 ; xlatb ; mov bl, 2 ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000074272d : mov ah, 0xe9 ; call qword ptr [rax]
0x00000000005869d3 : mov ah, 0xe9 ; ret
0x000000000050027a : mov ah, 0xe9 ; retf -2
0x00000000007b7289 : mov ah, 0xef ; call rsi
0x00000000007e7b4d : mov ah, 0xf ; add eax, 0xd0000fe0 ; syscall
0x00000000007f4d6f : mov ah, 0xf ; add eax, 0xeb000f9e ; syscall
0x00000000007cb910 : mov ah, 0xf ; xor cl, ch ; adc al, byte ptr [rax] ; cld ; syscall
0x0000000000746ad5 : mov ah, 0xf3 ; jmp qword ptr [rax]
0x00000000007472d5 : mov ah, 0xf4 ; jmp qword ptr [rax]
0x000000000060a978 : mov ah, 0xf5 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000557d0b : mov ah, 0xf7 ; outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000066dc92 : mov ah, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x00000000004d49c1 : mov ah, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004673f0 : mov ah, 0xff ; dec ecx ; ret
0x00000000007dac69 : mov ah, 1 ; adc edi, ecx ; add dword ptr [rax], eax ; retf 0x501
0x00000000005c72fc : mov ah, 1 ; add byte ptr [rax], al ; call rax
0x0000000000734e99 : mov ah, 1 ; add byte ptr [rdx], dl ; retf -0x32
0x0000000000766b6d : mov ah, 1 ; add byte ptr [rsi + 0xc], bh ; salc ; call rsp
0x00000000007dec6a : mov ah, 1 ; add dword ptr [rdx + 0x1101], ecx ; ret 0x501
0x00000000007deb3f : mov ah, 1 ; add dword ptr [rdx + 0x1101], edx ; ret 0x501
0x00000000007f3d04 : mov ah, 1 ; add eax, 0x1b590 ; retf 0x1b4
0x000000000079b8bc : mov ah, 1 ; add eax, 0xe75e3200 ; jmp qword ptr [rcx]
0x00000000007df672 : mov ah, 2 ; add al, 0x8c ; add al, 0 ; ret
0x00000000007f06e4 : mov ah, 2 ; add byte ptr cs:[rax], al ; stc ; add dl, byte ptr [rsi] ; jmp qword ptr [rax]
0x0000000000645657 : mov ah, 3 ; add byte ptr [rax - 0x7d], cl ; cli ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000007b6be5 : mov ah, 6 ; add al, bh ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, eax ; jmp rdx
0x0000000000744eb1 : mov ah, 6 ; add byte ptr [rax - 9], bl ; out dx, al ; call qword ptr [rax]
0x0000000000744ea9 : mov ah, 6 ; add byte ptr [rdx], dl ; cmc ; out dx, al ; jmp rax
0x00000000007d035f : mov ah, 7 ; add al, bl ; syscall
0x00000000006231a2 : mov ah, 9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000073f2ed : mov ah, bl ; call qword ptr [rax]
0x000000000073f2dd : mov ah, bl ; jmp rax
0x0000000000480665 : mov ah, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x8d48
0x00000000006cd612 : mov ah, byte ptr [rbx - 0x2d] ; dec dword ptr [rcx + rcx*4 - 0x19] ; call r14
0x00000000004a5b95 : mov ah, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007405c5 : mov ah, ch ; jmp rax
0x0000000000691391 : mov ah, cl ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000519394 : mov ah, cl ; add rsp, 0x18 ; ret
0x00000000006c5b33 : mov ah, cl ; add rsp, 8 ; ret
0x00000000006c5baf : mov ah, cl ; ret
0x0000000000693003 : mov ah, dl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000762861 : mov ah, dl ; jmp qword ptr [rbx]
0x00000000005c2377 : mov al, 0 ; add byte ptr [rax], al ; call 0x6be5d6
0x000000000069c4bd : mov al, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000006d43c3 : mov al, 0 ; add byte ptr [rax], al ; ret
0x0000000000584962 : mov al, 0x10 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000007b0920 : mov al, 0x11 ; out dx, al ; call rax
0x0000000000555692 : mov al, 0x12 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007d974d : mov al, 0x14 ; add eax, 0xc60014b5 ; adc al, 5 ; retf
0x00000000007d7cc2 : mov al, 0x14 ; add eax, 0xe2003298 ; adc al, 2 ; retf 0x33
0x000000000051620e : mov al, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000739978 : mov al, 0x18 ; add eax, dword ptr [rax] ; pop rsi ; jp 0x73995e ; jmp rax
0x000000000073fdf8 : mov al, 0x19 ; add eax, 0xe5084000 ; jmp rax
0x0000000000739a10 : mov al, 0x1b ; add eax, dword ptr [rax] ; cwde ; mov bl, al ; jmp rax
0x00000000004e351c : mov al, 0x1d ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c3595 : mov al, 0x1f ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004c3881 : mov al, 0x1f ; add cl, cl ; ret
0x0000000000739b68 : mov al, 0x22 ; add eax, dword ptr [rax] ; lodsb al, byte ptr [rsi] ; fstp st(0) ; jmp rax
0x0000000000414ac2 : mov al, 0x26 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000004248cc : mov al, 0x26 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000414aae : mov al, 0x26 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047eabc : mov al, 0x28 ; and al, 0 ; leave ; ret
0x00000000006cbb77 : mov al, 0x28 ; jae 0x6cbb7f ; ret
0x000000000068d742 : mov al, 0x29 ; ret 0xc283
0x0000000000434152 : mov al, 0x2c ; ret
0x00000000007367f8 : mov al, 0x2d ; add al, byte ptr [rax] ; push rsp ; loope 0x7367d7 ; call rax
0x0000000000739e70 : mov al, 0x32 ; add eax, dword ptr [rax] ; call 0xffffffffe17377d6
0x00000000007451b4 : mov al, 0x37 ; out dx, eax ; lcall ptr [rax] ; ret
0x00000000007e3678 : mov al, 0x38 ; add ebp, eax ; adc dl, byte ptr [rdi] ; ret
0x0000000000736b50 : mov al, 0x3c ; add al, byte ptr [rax] ; adc al, 0xd2 ; call rax
0x00000000004424c9 : mov al, 0x40 ; retf
0x000000000073a178 : mov al, 0x41 ; add eax, dword ptr [rax] ; cmp byte ptr [rbp - 0x26], dl ; call rax
0x000000000073a2c8 : mov al, 0x48 ; add eax, dword ptr [rax] ; out -0x26, eax ; call rax
0x00000000005fac74 : mov al, 0x48 ; add esp, 0x38 ; ret
0x0000000000585589 : mov al, 0x48 ; add esp, 8 ; ret
0x0000000000614762 : mov al, 0x48 ; mov eax, dword ptr [rip + 0x3ee17e] ; call rax
0x00000000006144f6 : mov al, 0x48 ; mov eax, dword ptr [rip + 0x3ee3ea] ; call rax
0x00000000006142ba : mov al, 0x48 ; mov eax, dword ptr [rip + 0x3ee626] ; call rax
0x0000000000613dd3 : mov al, 0x48 ; mov eax, dword ptr [rip + 0x3eeb0d] ; call rax
0x00000000005e57ba : mov al, 0x48 ; mov eax, dword ptr [rip + 0x41d126] ; call rax
0x00000000005e557f : mov al, 0x48 ; mov eax, dword ptr [rip + 0x41d361] ; call rax
0x00000000005e530e : mov al, 0x48 ; mov eax, dword ptr [rip + 0x41d5d2] ; call rax
0x00000000005e198f : mov al, 0x48 ; mov eax, dword ptr [rip + 0x420f51] ; call rax
0x00000000005e0322 : mov al, 0x48 ; mov eax, dword ptr [rip + 0x4225be] ; call rax
0x00000000005dc0ef : mov al, 0x48 ; mov eax, dword ptr [rip + 0x4267f1] ; call rax
0x00000000005db346 : mov al, 0x48 ; mov eax, dword ptr [rip + 0x42759a] ; call rax
0x00000000005da44c : mov al, 0x48 ; mov eax, dword ptr [rip + 0x428494] ; call rax
0x00000000005d82bc : mov al, 0x48 ; mov eax, dword ptr [rip + 0x42a624] ; call rax
0x00000000005d808d : mov al, 0x48 ; mov eax, dword ptr [rip + 0x42a853] ; call rax
0x00000000005d7e2a : mov al, 0x48 ; mov eax, dword ptr [rip + 0x42aab6] ; call rax
0x00000000005d4ac3 : mov al, 0x48 ; mov eax, dword ptr [rip + 0x42de1d] ; call rax
0x00000000005d347c : mov al, 0x48 ; mov eax, dword ptr [rip + 0x42f464] ; call rax
0x00000000005cf483 : mov al, 0x48 ; mov eax, dword ptr [rip + 0x43345d] ; call rax
0x00000000005ce758 : mov al, 0x48 ; mov eax, dword ptr [rip + 0x434188] ; call rax
0x00000000005cd8f6 : mov al, 0x48 ; mov eax, dword ptr [rip + 0x434fea] ; call rax
0x000000000049d33f : mov al, 0x48 ; mov eax, dword ptr [rip + 0x5655a1] ; call rax
0x0000000000473548 : mov al, 0x48 ; mov eax, dword ptr [rip + 0x58f398] ; call rax
0x000000000046cfbd : mov al, 0x48 ; mov eax, dword ptr [rip + 0x595923] ; call rax
0x00000000004632bd : mov al, 0x48 ; mov eax, dword ptr [rip + 0x59f623] ; call rax
0x000000000045e26e : mov al, 0x48 ; mov eax, dword ptr [rip + 0x5a4672] ; call rax
0x000000000045a4bf : mov al, 0x48 ; mov eax, dword ptr [rip + 0x5a8421] ; call rax
0x000000000044d692 : mov al, 0x48 ; mov eax, dword ptr [rip + 0x5b524e] ; call rax
0x000000000044980b : mov al, 0x48 ; mov eax, dword ptr [rip + 0x5b90d5] ; call rax
0x000000000043e8cb : mov al, 0x48 ; mov eax, dword ptr [rip + 0x5c4015] ; call rax
0x000000000042f956 : mov al, 0x48 ; mov eax, dword ptr [rip + 0x5d2f8a] ; call rax
0x000000000042f6da : mov al, 0x48 ; mov eax, dword ptr [rip + 0x5d3206] ; call rax
0x000000000042cb46 : mov al, 0x48 ; mov eax, dword ptr [rip + 0x5d5d9a] ; call rax
0x000000000042beee : mov al, 0x48 ; mov eax, dword ptr [rip + 0x5d69f2] ; call rax
0x0000000000420ec4 : mov al, 0x48 ; mov eax, dword ptr [rip + 0x5e1a1c] ; call rax
0x0000000000420c44 : mov al, 0x48 ; mov eax, dword ptr [rip + 0x5e1c9c] ; call rax
0x000000000041db78 : mov al, 0x48 ; mov eax, dword ptr [rip + 0x5e4d68] ; call rax
0x000000000041cf04 : mov al, 0x48 ; mov eax, dword ptr [rip + 0x5e59dc] ; call rax
0x0000000000410e70 : mov al, 0x48 ; mov eax, dword ptr [rip + 0x5f1a70] ; call rax
0x0000000000410bf4 : mov al, 0x48 ; mov eax, dword ptr [rip + 0x5f1cec] ; call rax
0x000000000040e060 : mov al, 0x48 ; mov eax, dword ptr [rip + 0x5f4880] ; call rax
0x000000000040d408 : mov al, 0x48 ; mov eax, dword ptr [rip + 0x5f54d8] ; call rax
0x0000000000408c15 : mov al, 0x48 ; mov eax, dword ptr [rip + 0x5f9ccb] ; call rax
0x0000000000749f88 : mov al, 0x4c ; or byte ptr [rax], al ; scasd eax, dword ptr [rdi] ; clc ; call rax
0x000000000074a080 : mov al, 0x4f ; or byte ptr [rax], al ; nop ; mov bh, 0xf8 ; jmp rax
0x0000000000745d34 : mov al, 0x51 ; call qword ptr [rax]
0x000000000073bad4 : mov al, 0x55 ; fdivp st(7) ; push rax ; ret 3
0x0000000000776b80 : mov al, 0x56 ; fdiv st(7), st(0) ; retf 1
0x0000000000740a08 : mov al, 0x5a ; add eax, 0xe6059000 ; call rax
0x00000000007b5420 : mov al, 0x5b ; out dx, eax ; jmp qword ptr [rax]
0x00000000006d67e0 : mov al, 0x5d ; retf -0x403e
0x0000000000737360 : mov al, 0x62 ; add al, byte ptr [rax] ; loope 0x737340 ; jmp rax
0x00000000007b5ab0 : mov al, 0x66 ; out dx, eax ; call qword ptr [rsi]
0x000000000074a6c8 : mov al, 0x6c ; or byte ptr [rax], al ; and byte ptr [rdx], ah ; stc ; call rax
0x0000000000737668 : mov al, 0x71 ; add al, byte ptr [rax] ; cmp al, 0xd3 ; jmp rax
0x0000000000740f50 : mov al, 0x71 ; add eax, 0xe658d000 ; jmp rax
0x000000000074a960 : mov al, 0x76 ; or byte ptr [rax], al ; jo 0x74a9b5 ; stc ; call rax
0x00000000007410b0 : mov al, 0x78 ; add eax, 0xe685f000 ; call rax
0x0000000000743c2c : mov al, 0x7f ; in al, dx ; call qword ptr [rax]
0x000000000074498c : mov al, 0x7f ; out dx, al ; jmp qword ptr [rax]
0x0000000000737a10 : mov al, 0x83 ; add al, byte ptr [rax] ; salc ; ret 0xffd3
0x0000000000745594 : mov al, 0x84 ; out dx, eax ; jmp rax
0x00000000007b66b0 : mov al, 0x87 ; out dx, eax ; call qword ptr [rbx]
0x0000000000621ec0 : mov al, 0x88 ; fxch st(0), st(1) ; ret
0x00000000007441a4 : mov al, 0x89 ; in eax, dx ; jmp rax
0x000000000058573c : mov al, 0x89 ; or al, 0x90 ; add rsp, 8 ; ret
0x00000000005d9750 : mov al, 0x8b ; add al, 0x89 ; ret 0x8b48
0x00000000004876e4 : mov al, 0x8b ; mov r12b, 0x29 ; ret 0xd089
0x000000000043bea5 : mov al, 0x8b ; push rbp ; fmul qword ptr [rax + 0x29] ; retf -0x74b8
0x000000000047c811 : mov al, 0x8b ; push rbx ; and al, 0x8b ; and byte ptr [r9], dil ; ret 0x538b
0x0000000000464c93 : mov al, 0x8b ; push rbx ; sbb al, 0x8b ; sbb byte ptr [r9], dil ; ret 0x538b
0x0000000000737c18 : mov al, 0x8c ; add al, byte ptr [rax] ; and ch, 0xd3 ; call rax
0x0000000000741490 : mov al, 0x8f ; add eax, 0xe7101000 ; jmp rax
0x0000000000745634 : mov al, 0x90 ; out dx, eax ; jmp qword ptr [rax]
0x0000000000737d68 : mov al, 0x92 ; add al, byte ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; not ebx ; call rax
0x000000000074ae94 : mov al, 0x92 ; stc ; jmp qword ptr [rax]
0x0000000000734928 : mov al, 0x99 ; add dword ptr [rax], eax ; clc ; or esi, ecx ; jmp rax
0x0000000000741720 : mov al, 0x9a ; add eax, 0xe73c8000 ; jmp rax
0x000000000072196b : mov al, 0x9a ; retf
0x0000000000734988 : mov al, 0x9b ; add dword ptr [rax], eax ; pop rsi ; adc esi, ecx ; call rax
0x000000000074af8c : mov al, 0x9c ; stc ; jmp rax
0x000000000074b02c : mov al, 0x9f ; stc ; jmp qword ptr [rax]
0x000000000073e7d0 : mov al, 0xa2 ; add al, 0 ; xor byte ptr [rax - 0x1e], dl ; call rax
0x000000000074b510 : mov al, 0xa8 ; or byte ptr [rax], al ; shr ch, 0xf9 ; jmp rax
0x00000000007b6f70 : mov al, 0xb0 ; out dx, eax ; jmp qword ptr [rdi]
0x0000000000738410 : mov al, 0xb2 ; add al, byte ptr [rax] ; pop rax ; sub ch, dl ; call rax
0x000000000074a094 : mov al, 0xb7 ; clc ; call qword ptr [rax]
0x00000000006c27e4 : mov al, 0xba ; loopne 0x6c2800 ; jae 0x6c27f3 ; mov rdi, r13 ; call rax
0x00000000006c2ef4 : mov al, 0xba ; loopne 0x6c2f10 ; jae 0x6c2f03 ; mov rdi, r13 ; call rax
0x00000000006c35c4 : mov al, 0xba ; loopne 0x6c35e0 ; jae 0x6c35d3 ; mov rdi, r13 ; call rax
0x00000000006f6338 : mov al, 0xbf ; push rdx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x52
0x00000000005b5a5c : mov al, 0xc ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000672596 : mov al, 0xc ; add byte ptr [rax], al ; add dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00000000005b6520 : mov al, 0xc ; add byte ptr [rcx - 0x42ea003d], cl ; ret
0x000000000079b050 : mov al, 0xc ; out -1, eax ; ret 0
0x00000000007386e8 : mov al, 0xc1 ; add al, byte ptr [rax] ; hlt ; salc ; jmp rax
0x0000000000741fb8 : mov al, 0xc2 ; add eax, 0xe7e2f000 ; jmp rax
0x00000000007351f8 : mov al, 0xc3 ; add dword ptr [rax], eax ; loop 0x735213 ; iretd ; call rax
0x0000000000738788 : mov al, 0xc4 ; add al, byte ptr [rax] ; xor cl, byte ptr [rdi - 0x2a] ; jmp rax
0x000000000074a194 : mov al, 0xc4 ; clc ; call qword ptr [rax]
0x00000000007387b8 : mov al, 0xc5 ; add al, byte ptr [rax] ; sbb al, 0x5a ; salc ; call rax
0x00000000007457b4 : mov al, 0xc7 ; out dx, eax ; push qword ptr [rax + 0x6e5] ; retf
0x0000000000724ec0 : mov al, 0xcb ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; retf
0x000000000040798c : mov al, 0xcd ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000756771 : mov al, 0xcf ; call rsp
0x00000000007475b4 : mov al, 0xd0 ; hlt ; call rax
0x0000000000746b54 : mov al, 0xd2 ; call rax
0x0000000000737955 : mov al, 0xd3 ; call qword ptr [rax]
0x0000000000706660 : mov al, 0xd3 ; push rdi ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; retf
0x0000000000733c38 : mov al, 0xd5 ; add eax, dword ptr [rax] ; or al, 0xcd ; jmp rax
0x000000000073f0a8 : mov al, 0xd6 ; add al, 0 ; xor byte ptr [rbp - 0x1d], ch ; jmp rax
0x00000000007356a0 : mov al, 0xda ; add dword ptr [rax], eax ; add cl, cl ; iretd ; call rax
0x00000000007423c8 : mov al, 0xda ; add eax, 0xe8af6000 ; call rax
0x0000000000738c48 : mov al, 0xdb ; add al, byte ptr [rax] ; push 0xe0 ; salc ; call rax
0x0000000000738c80 : mov al, 0xdc ; add al, byte ptr [rax] ; sub bl, ah ; salc ; call rax
0x0000000000778b91 : mov al, 0xdc ; jmp qword ptr [rbx]
0x00000000007f56c1 : mov al, 0xe ; add dl, bh ; syscall
0x00000000007c0e97 : mov al, 0xe ; add eax, 0xa8000ebe ; syscall
0x000000000078daa1 : mov al, 0xe1 ; call qword ptr [rbx]
0x000000000073fb1d : mov al, 0xe4 ; jmp rax
0x000000000074847c : mov al, 0xe5 ; cmc ; jmp rax
0x0000000000735968 : mov al, 0xe7 ; add dword ptr [rax], eax ; add ax, dx ; call rax
0x00000000007359a8 : mov al, 0xe8 ; add dword ptr [rax], eax ; nop ; add edx, eax ; call rax
0x00000000007423d5 : mov al, 0xe8 ; call qword ptr [rax]
0x0000000000742630 : mov al, 0xea ; add eax, 0xe994b800 ; jmp rax
0x0000000000742688 : mov al, 0xec ; add eax, 0xe9a23800 ; jmp rax
0x0000000000739058 : mov al, 0xee ; add al, byte ptr [rax] ; pop rsi ; test edi, edx ; jmp rax
0x00000000007b6f89 : mov al, 0xef ; call qword ptr [rcx]
0x00000000007b6f71 : mov al, 0xef ; jmp qword ptr [rdi]
0x00000000007e8a5d : mov al, 0xf ; add eax, 0xcc000fdc ; syscall
0x00000000007ba551 : mov al, 0xf0 ; call rsp
0x0000000000745b4d : mov al, 0xf0 ; jmp qword ptr [rax]
0x00000000007390e8 : mov al, 0xf1 ; add al, byte ptr [rax] ; cmp al, 0xad ; xlatb ; jmp rax
0x0000000000742780 : mov al, 0xf1 ; add eax, 0xe9bce000 ; call rax
0x0000000000739118 : mov al, 0xf2 ; add al, byte ptr [rax] ; adc bh, al ; xlatb ; call rax
0x00000000007f465a : mov al, 0xf3 ; add dword ptr [rip + 0x19ca3], eax ; ret 0x1f3
0x000000000055bc0d : mov al, 0xf5 ; outsd dx, dword ptr [rsi] ; add byte ptr [rax + 0x29], cl ; retf -0x7eb8
0x00000000007428b8 : mov al, 0xf7 ; add eax, 0xea052600 ; call rax
0x00000000007428f0 : mov al, 0xf8 ; add eax, 0xea095400 ; call rax
0x0000000000749ffd : mov al, 0xf8 ; jmp qword ptr [rax]
0x00000000007478fc : mov al, 0xfd ; hlt ; call qword ptr [rax]
0x0000000000735e28 : mov al, 0xfe ; add dword ptr [rax], eax ; hlt ; retf
0x000000000042406a : mov al, 0xff ; dec ecx ; ret
0x000000000060c443 : mov al, 1 ; add byte ptr [rax], al ; ret
0x00000000007d7858 : mov al, 1 ; add dword ptr [rdx + 0x2601], ecx ; ret
0x00000000007f3c6c : mov al, 1 ; add eax, 0x1b1a2 ; ret 0x1b0
0x000000000073f940 : mov al, 1 ; add eax, 0xe4493000 ; call rax
0x000000000074a56c : mov al, 1 ; stc ; jmp qword ptr [rax]
0x00000000005cdfc4 : mov al, 2 ; add byte ptr [rax], al ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000007d73fe : mov al, 3 ; adc esi, esp ; add eax, dword ptr [rcx] ; retf
0x0000000000646246 : mov al, 3 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e7d00 : mov al, 3 ; lea eax, dword ptr [rcx] ; rol byte ptr [rbx + rax], 1 ; ret
0x0000000000748f98 : mov al, 3 ; or byte ptr [rax], al ; cmp byte ptr [rsi], 0xf7 ; jmp rax
0x000000000054e9c6 : mov al, 4 ; add byte ptr [rax], al ; mov rdi, rax ; call rdx
0x000000000073fa20 : mov al, 5 ; add eax, 0xe4923000 ; call qword ptr [rax]
0x00000000007b67ad : mov al, 6 ; add byte ptr [rax], ah ; mov ch, bh ; call qword ptr [rbx]
0x0000000000744dd1 : mov al, 6 ; add byte ptr [rsi], ah ; in al, -0x12 ; jmp rax
0x00000000007ea4cb : mov al, 7 ; add byte ptr [rbx + rax + 0x306cb05], dl ; ret 0xe03
0x00000000007bf45b : mov al, 7 ; add cl, dh ; add al, 5 ; ret 7
0x000000000058f39e : mov al, 7 ; verw bx ; xchg byte ptr [rax - 0x77], cl ; ret
0x0000000000633a05 : mov al, 8 ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x0000000000746ca4 : mov al, 9 ; hlt ; call rax
0x0000000000788d79 : mov al, ah ; jmp rax
0x0000000000735638 : mov al, bl ; add dword ptr [rax], eax ; retf -0x304b
0x00000000007f3f3e : mov al, bl ; add dword ptr [rip + 0x1c3b8], eax ; xchg eax, esp ; ret
0x00000000007cca54 : mov al, byte ptr [rax + rax] ; in eax, dx ; add al, 0x69 ; ret 4
0x00000000007df66f : mov al, byte ptr [rax + rax] ; mov ah, 2 ; add al, 0x8c ; add al, 0 ; ret
0x0000000000518867 : mov al, byte ptr [rax] ; add byte ptr [rax], al ; mov esi, ebx ; call rax
0x00000000005fe456 : mov al, byte ptr [rbp + rcx*4 + 0x50] ; add dword ptr [rbp + 0x39], eax ; ret 0x8c0f
0x00000000007d2814 : mov al, byte ptr [rbx] ; add byte ptr [rax], al ; retf 0x504
0x00000000007f404d : mov al, byte ptr [rcx] ; add byte ptr [rcx - 0x38fafe35], cl ; retf
0x00000000007d785b : mov al, byte ptr [rcx] ; add byte ptr es:[rax], al ; ret
0x00000000007f36f6 : mov al, byte ptr [rcx] ; or eax, 0x19ca3 ; ret 0x18a
0x00000000006ce9d2 : mov al, byte ptr [rdx + 0x33] ; add byte ptr [rbx + 0x574fff8], al ; ret
0x0000000000737b71 : mov al, byte ptr [rdx] ; add byte ptr [rsi], bl ; fstp st(3), st(0) ; jmp qword ptr [rax]
0x00000000007dc407 : mov al, byte ptr [rdx] ; add eax, 0xca1001ae ; add dword ptr [rax], eax ; ret
0x00000000007c9198 : mov al, byte ptr [rdx] ; add esp, dword ptr [rax + 0x1301] ; ret
0x00000000005d9e66 : mov al, byte ptr [rdx] ; call rax
0x0000000000741361 : mov al, byte ptr [rip - 0x190e9000] ; jmp qword ptr [rax]
0x00000000004b49cf : mov al, ch ; pop rbp ; retf
0x00000000006c6d14 : mov al, dh ; ret
0x000000000069138f : mov al, dl ; mov ah, cl ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000519392 : mov al, dl ; mov ah, cl ; add rsp, 0x18 ; ret
0x00000000006c5b31 : mov al, dl ; mov ah, cl ; add rsp, 8 ; ret
0x00000000006c5bad : mov al, dl ; mov ah, cl ; ret
0x00000000006c6d13 : mov al, sil ; ret
0x00000000004cd7b1 : mov bh, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000053ae55 : mov bh, 0 ; add byte ptr [rax], al ; call rax
0x0000000000565daa : mov bh, 0x11 ; add byte ptr [rcx + 0x3315ffc3], cl ; retf
0x0000000000555b13 : mov bh, 0x12 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000598f6b : mov bh, 0x13 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000544e9b : mov bh, 0x13 ; add byte ptr [rsi - 0x70], ah ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000005243d4 : mov bh, 0x15 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000525d45 : mov bh, 0x15 ; add byte ptr [rcx - 0x67ea003b], cl ; retf
0x00000000007bfdfe : mov bh, 0x15 ; add byte ptr [rsi + rax + 0x714c805], ah ; retf 0xe06
0x0000000000451225 : mov bh, 0x16 ; pop rbx ; add bh, bh ; ror cl, 1 ; ret
0x0000000000558f40 : mov bh, 0x17 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000528fd7 : mov bh, 0x1a ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000509002 : mov bh, 0x1c ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f901c : mov bh, 0x1d ; add byte ptr [rax - 0x77], cl ; ret
0x000000000049cb75 : mov bh, 0x23 ; add byte ptr [rax], al ; leave ; ret
0x0000000000434fa8 : mov bh, 0x24 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041f5ab : mov bh, 0x26 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004250a9 : mov bh, 0x27 ; add byte ptr [rax - 0x77], cl ; ret 0x858b
0x0000000000450125 : mov bh, 0x27 ; pop rbx ; add bh, bh ; ror cl, 1 ; ret
0x00000000006db3f9 : mov bh, 0x42 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], bl ; retf
0x00000000006aaee8 : mov bh, 0x44 ; and al, 0xe ; add rsp, 0x18 ; ret
0x00000000006652c1 : mov bh, 0x4e ; add cl, byte ptr [rax + 0x63] ; ret 0xba41
0x00000000004b7128 : mov bh, 0x54 ; add bh, bh ; ror cl, 1 ; ret
0x00000000006651c8 : mov bh, 0x5a ; add al, byte ptr [rcx + 0x39] ; retf
0x00000000004071d0 : mov bh, 0x5f ; add byte ptr [rax - 0x7c], al ; fnsave dword ptr [rbx + rbp - 0x42] ; retf
0x000000000053e511 : mov bh, 0x7c ; ret
0x00000000006bc0ad : mov bh, 0x7d ; mov byte ptr [rbx - 0x76b6bfbf], cl ; retf -0x76b8
0x00000000004169f5 : mov bh, 0x7e ; sub al, byte ptr [rax] ; leave ; ret
0x00000000006bbdfa : mov bh, 0x7f ; adc cl, byte ptr [rcx - 0x77] ; retf -0x76bb
0x000000000068e385 : mov bh, 0x84 ; add dword ptr [rax], eax ; add rsp, 8 ; ret
0x00000000006625a2 : mov bh, 0x88 ; ret 0x7213
0x000000000043bdc9 : mov bh, 0x90 ; pop rbp ; ret
0x00000000005c4460 : mov bh, 0xb ; add bl, ch ; mov dword ptr [rax - 0x77], ecx ; ret
0x0000000000663a33 : mov bh, 0xb3 ; ret 0x7213
0x00000000005ae435 : mov bh, 0xb4 ; or eax, 0x415d5b00 ; pop rsp ; ret
0x00000000005f313a : mov bh, 0xc ; add cl, cl ; ret
0x00000000007accf1 : mov bh, 0xc5 ; call qword ptr [rdx]
0x00000000006a00d1 : mov bh, 0xc7 ; ret
0x0000000000706866 : mov bh, 0xc8 ; leave ; retf -0x3335
0x00000000005a4e8d : mov bh, 0xd ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007dbe15 : mov bh, 0xd ; add byte ptr [rdi + 5], al ; retf 0x309
0x000000000075a961 : mov bh, 0xd0 ; jmp qword ptr [rbx]
0x0000000000513370 : mov bh, 0xd2 ; movzx eax, byte ptr [rdx + 0x6f2170] ; ret
0x0000000000738215 : mov bh, 0xd4 ; jmp qword ptr [rax]
0x0000000000797d49 : mov bh, 0xe5 ; call qword ptr [rdx]
0x0000000000741d6d : mov bh, 0xe7 ; call qword ptr [rax]
0x0000000000741d5d : mov bh, 0xe7 ; jmp rax
0x0000000000646f1e : mov bh, 0xeb ; mov ch, 0xeb ; retf
0x00000000007d45e5 : mov bh, 0xf ; add eax, 0xc1000fd2 ; syscall
0x00000000007dd0d7 : mov bh, 0xf ; add eax, 0xd8000fc6 ; syscall
0x00000000007d4952 : mov bh, 0xf ; ficom word ptr [r9] ; add ch, bh ; syscall
0x00000000004f8727 : mov bh, 0xf0 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000451785 : mov bh, 0xf5 ; add byte ptr es:[rax - 0x77], cl ; ret 0x8b48
0x000000000074816d : mov bh, 0xf5 ; dec eax ; ret 7
0x00000000007498dd : mov bh, 0xf7 ; jmp qword ptr [rax]
0x000000000074a095 : mov bh, 0xf8 ; call qword ptr [rax]
0x000000000074a085 : mov bh, 0xf8 ; jmp rax
0x00000000004b88d0 : mov bh, 0xfa ; dec ecx ; ret
0x000000000066da7a : mov bh, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x0000000000616106 : mov bh, 0xff ; dec ecx ; ret
0x00000000007e2b63 : mov bh, 2 ; add al, 0xde ; or byte ptr [rax], al ; ret
0x00000000007d528e : mov bh, 2 ; add byte ptr [rcx + rax + 0x3a213], dh ; retf 0x501
0x00000000005ce315 : mov bh, 2 ; str word ptr [rax - 0x77] ; ret 0x8948
0x0000000000786ec5 : mov bh, 3 ; add byte ptr [rax], ch ; add ah, al ; jmp qword ptr [rdi]
0x00000000006c111f : mov bh, 4 ; and al, 0x48 ; add esp, 0x18 ; ret
0x000000000067901d : mov bh, 5 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007a6f05 : mov bh, 5 ; add byte ptr [rax], bh ; fsub st(3), st(0) ; call qword ptr [rsi]
0x0000000000409f6d : mov bh, 5 ; ret
0x0000000000408ebc : mov bh, 5 ; ret 0x5f56
0x0000000000409578 : mov bh, 5 ; ret 0x5f90
0x0000000000409951 : mov bh, 5 ; retf
0x0000000000642e0f : mov bh, 7 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000769404 : mov bh, 8 ; add byte ptr [rax], al ; add al, 0x64 ; ret
0x000000000079bdb1 : mov bh, ah ; call rsp
0x0000000000749dcd : mov bh, al ; call qword ptr [rax]
0x0000000000749dbd : mov bh, al ; jmp rax
0x0000000000642cd5 : mov bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000413ec5 : mov bh, bh ; dec ecx ; ret
0x0000000000639de3 : mov bh, byte ptr [rax + rax] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000007aba20 : mov bh, byte ptr [rcx] ; in eax, dx ; call qword ptr [rcx]
0x00000000007b66f1 : mov bh, ch ; call qword ptr [rbx]
0x000000000074966d : mov bh, dh ; call qword ptr [rax]
0x00000000004cdd61 : mov bl, 0 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000006b329a : mov bl, 0 ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x0000000000756b1d : mov bl, 0 ; add byte ptr [rax], ch ; ret 0xffcf
0x0000000000756a75 : mov bl, 0 ; add byte ptr [rsi + rdi*4], ch ; iretd ; jmp qword ptr [rax]
0x0000000000756afd : mov bl, 0 ; add byte ptr [rsi], bl ; ret 0xffcf
0x00000000005657dc : mov bl, 0x11 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e68ba : mov bl, 0x12 ; add byte ptr [rdx + rdx + 0xdf505], ah ; ret 0x512
0x00000000005731db : mov bl, 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e321e : mov bl, 0x14 ; add eax, 0xbf0326f5 ; adc al, 5 ; retf 0x526
0x0000000000525f22 : mov bl, 0x15 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000515f94 : mov bl, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000471229 : mov bl, 0x16 ; pop rcx ; add bh, bh ; ror cl, 1 ; ret
0x000000000055935b : mov bl, 0x17 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005047b2 : mov bl, 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004547a2 : mov bl, 0x22 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000045478e : mov bl, 0x22 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000475a20 : mov bl, 0x22 ; add byte ptr [rcx - 0x77], cl ; ret 0x8949
0x00000000007f2d2b : mov bl, 0x23 ; pop rsi ; ret 0x1d7
0x000000000040f990 : mov bl, 0x27 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047ce19 : mov bl, 0x38 ; and al, 0 ; leave ; ret
0x00000000006caf7c : mov bl, 0x40 ; add byte ptr [rax], al ; add al, ch ; retf 0x36
0x00000000004aa5f9 : mov bl, 0x42 ; and dword ptr [rax], eax ; leave ; ret
0x00000000007217ee : mov bl, 0x5c ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x0000000000424fb9 : mov bl, 0x5d ; add byte ptr es:[rax - 0x77], cl ; ret
0x00000000004f77d9 : mov bl, 0x60 ; or byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000007217c1 : mov bl, 0x61 ; retf
0x0000000000722df5 : mov bl, 0x76 ; ret
0x0000000000722488 : mov bl, 0x89 ; jbe 0x72250e ; salc ; out dx, al ; retf 0x6fc4
0x00000000005ff289 : mov bl, 0x9e ; or byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000006a83b1 : mov bl, 0xa2 ; xor eax, 0xd0894800 ; ret
0x00000000007c72b7 : mov bl, 0xb ; add eax, 0x96000d9b ; or al, 5 ; ret 0xc
0x000000000053d789 : mov bl, 0xb9 ; adc al, 0 ; add rsp, 8 ; ret
0x00000000005c46ea : mov bl, 0xc ; add byte ptr [rax - 0x77], cl ; ret
0x000000000072348b : mov bl, 0xc4 ; retf -0x2912
0x000000000079a9c9 : mov bl, 0xc6 ; call qword ptr [rdx]
0x00000000007f3fb8 : mov bl, 0xc7 ; add dword ptr [rip + 0x18a91], eax ; retf
0x00000000007f4008 : mov bl, 0xc9 ; add dword ptr [rip + 0x18a91], eax ; retf
0x00000000007509f9 : mov bl, 0xcd ; call rsp
0x00000000005e324d : mov bl, 0xd ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000073797d : mov bl, 0xd3 ; jmp rax
0x000000000076bac1 : mov bl, 0xd9 ; call qword ptr [rbx]
0x000000000076ba99 : mov bl, 0xd9 ; jmp qword ptr [rdi]
0x0000000000770d71 : mov bl, 0xda ; call qword ptr [rcx]
0x0000000000774ce1 : mov bl, 0xdb ; call qword ptr [rax]
0x000000000073a4bd : mov bl, 0xdb ; jmp qword ptr [rax]
0x00000000007caca5 : mov bl, 0xe ; push rsi ; clc ; add al, bl ; syscall
0x00000000007f4379 : mov bl, 0xe0 ; add dword ptr [rip + 0x19ca3], eax ; retf
0x000000000073d2ad : mov bl, 0xe0 ; call rax
0x000000000073eaf5 : mov bl, 0xe2 ; jmp rax
0x000000000074069d : mov bl, 0xe5 ; call qword ptr [rax]
0x00000000007406dd : mov bl, 0xe5 ; call rax
0x000000000074068d : mov bl, 0xe5 ; jmp rax
0x0000000000586ec4 : mov bl, 0xe8 ; retf -0x19
0x0000000000733594 : mov bl, 0xea ; stc ; jmp qword ptr [rcx]
0x0000000000743e05 : mov bl, 0xec ; call rax
0x00000000007ed0c8 : mov bl, 0xf ; add eax, 0xc5000fd4 ; syscall
0x00000000007ddbc3 : mov bl, 0xf ; add eax, 0xc9000fb8 ; syscall
0x00000000007dabd5 : mov bl, 0xf ; or dword ptr [rax], eax ; add ch, bl ; syscall
0x00000000007ba6b1 : mov bl, 0xf0 ; jmp qword ptr [rbx]
0x00000000007480fd : mov bl, 0xf5 ; jmp qword ptr [rax]
0x00000000007498a5 : mov bl, 0xf7 ; jmp qword ptr [rax]
0x0000000000749895 : mov bl, 0xf7 ; jmp rax
0x000000000060a6d9 : mov bl, 0xf9 ; dec dword ptr [rax - 0x77] ; ret
0x000000000066dde4 : mov bl, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x00000000007c71ce : mov bl, 1 ; add cl, bl ; add eax, dword ptr [rax] ; retf
0x000000000067b126 : mov bl, 2 ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000655f90 : mov bl, 2 ; add byte ptr [rax - 0x7d], cl ; cli ; adc dword ptr [rax - 0x77], ecx ; ret
0x0000000000645f3f : mov bl, 3 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000679357 : mov bl, 5 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007b6a35 : mov bl, 6 ; add byte ptr [rax], bl ; xchg eax, esp ; out dx, eax ; call qword ptr [rdi]
0x00000000006593d7 : mov bl, 7 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007c83cd : mov bl, 7 ; retf
0x000000000073f28d : mov bl, ah ; call rax
0x0000000000406683 : mov bl, al ; call qword ptr [rip + 0x5fc25d]
0x00000000004065ef : mov bl, al ; call qword ptr [rip + 0x5fc2f1]
0x0000000000739a15 : mov bl, al ; jmp rax
0x000000000073c78d : mov bl, bh ; call qword ptr [rax]
0x000000000073c785 : mov bl, bh ; jmp rax
0x00000000006d6e3a : mov bl, bh ; retf -0x6b60
0x000000000073a455 : mov bl, bl ; call qword ptr [rax]
0x00000000007579b0 : mov bl, bl ; iretd ; jmp rdi
0x000000000074b810 : mov bl, bl ; retf
0x0000000000506ed2 : mov bl, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000479e9e : mov bl, byte ptr [rax] ; call rax
0x00000000006d68f2 : mov bl, byte ptr [rbx - 0x56] ; or ecx, ebx ; fsubr dword ptr [rbx] ; retf
0x000000000053bc51 : mov bl, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006135a8 : mov bl, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000005cc942 : mov bl, byte ptr [rdi + rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000492316 : mov bl, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000063acb2 : mov bl, byte ptr [rdx + 0x5b580009] ; pop rbp ; ret
0x00000000004d7bed : mov bl, byte ptr [rsi] ; add cl, cl ; ret
0x000000000044f03a : mov bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000073be55 : mov bl, dh ; call qword ptr [rax]
0x00000000005f6b7e : mov bp, 0x40 ; call rax
0x0000000000405eaa : mov bpl, al ; call qword ptr [rip + 0x5fca35]
0x000000000052db87 : mov bpl, byte ptr [rdi] ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000006d1290 : mov byte ptr [r10 + 0xc], dil ; ret
0x00000000005e22cc : mov byte ptr [r11 + 1], r15b ; call 0x6bed09
0x0000000000429b0c : mov byte ptr [r8 + 0x29], r9b ; ret 0x8948
0x00000000005cfc40 : mov byte ptr [r8 + 1], r9b ; ret 0x8b48
0x00000000006d1488 : mov byte ptr [r8 + rax], 0x20 ; jne 0x6d1477 ; ret
0x00000000005f22ba : mov byte ptr [r8 - 0x75], r9b ; add eax, 0x410625 ; call rax
0x000000000053e09b : mov byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00000000005fa125 : mov byte ptr [r8 - 0x7d], r9b ; ret 0x4c01
0x0000000000440960 : mov byte ptr [rax + 0x10], dl ; mov rax, qword ptr [rbp - 0x18] ; leave ; ret
0x00000000006168fc : mov byte ptr [rax + 0x10], dl ; mov rax, qword ptr [rbp - 0x28] ; leave ; ret
0x000000000061a59d : mov byte ptr [rax + 0x18], dl ; pop rbp ; ret
0x0000000000429b0d : mov byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000004fdee2 : mov byte ptr [rax + 0x39000006], ch ; ret 0x8c0f
0x00000000005413e6 : mov byte ptr [rax + 0x48000000], cl ; add esp, 8 ; ret
0x000000000068e09b : mov byte ptr [rax + 0x69], 0 ; add rsp, 8 ; ret
0x00000000006927f2 : mov byte ptr [rax + 0x79], 0 ; pop rbx ; ret
0x00000000006922a5 : mov byte ptr [rax + 0x7a], 6 ; add rsp, 0x18 ; ret
0x00000000006922b1 : mov byte ptr [rax + 0x7a], cl ; add rsp, 0x18 ; ret
0x00000000006922b0 : mov byte ptr [rax + 0x7a], r9b ; add rsp, 0x18 ; ret
0x000000000068fec4 : mov byte ptr [rax + 0x7b], 0 ; add rsp, 8 ; ret
0x000000000066ab45 : mov byte ptr [rax + 0xa01c80], dl ; pop rbp ; ret
0x00000000005cfc41 : mov byte ptr [rax + 1], cl ; ret 0x8b48
0x00000000004a845e : mov byte ptr [rax + 1], cl ; retf -0x7cb8
0x00000000006a191d : mov byte ptr [rax + rax - 1], cl ; cmp rax, rsi ; jne 0x6a1919 ; ret
0x00000000006a1a1d : mov byte ptr [rax + rax - 1], cl ; cmp rax, rsi ; jne 0x6a1a19 ; ret
0x00000000006a1a5d : mov byte ptr [rax + rax - 1], cl ; cmp rax, rsi ; jne 0x6a1a59 ; ret
0x000000000052b756 : mov byte ptr [rax + rax], 0 ; mov rdi, r15 ; call rax
0x00000000006d1489 : mov byte ptr [rax + rax], 0x20 ; jne 0x6d1476 ; ret
0x0000000000797d45 : mov byte ptr [rax + rax], 0xe4 ; mov bh, 0xe5 ; call qword ptr [rdx]
0x0000000000639ff3 : mov byte ptr [rax + rax], bh ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000005f5fe8 : mov byte ptr [rax + rax], cl ; leave ; ret
0x00000000006a8d99 : mov byte ptr [rax + rcx], dl ; ret
0x00000000006a19da : mov byte ptr [rax + rdx - 1], cl ; cmp rax, rsi ; jne 0x6a19d9 ; ret
0x00000000006a95ab : mov byte ptr [rax + rdx], bl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000068fbab : mov byte ptr [rax + rsi*8], dl ; ret
0x00000000007b4228 : mov byte ptr [rax - 0x11], al ; jmp qword ptr [rdi]
0x0000000000790798 : mov byte ptr [rax - 0x1e], ah ; jmp qword ptr [rdx]
0x00000000007904f8 : mov byte ptr [rax - 0x1e], bl ; jmp qword ptr [rdx]
0x0000000000623bbd : mov byte ptr [rax - 0x75], cl ; add eax, 0x3deca3 ; call rax
0x00000000005f22bb : mov byte ptr [rax - 0x75], cl ; add eax, 0x410625 ; call rax
0x00000000005f1736 : mov byte ptr [rax - 0x75], cl ; add eax, 0x4111aa ; call rax
0x0000000000495544 : mov byte ptr [rax - 0x76b7ffde], dl ; ret 0x8948
0x000000000050f2e0 : mov byte ptr [rax - 0x77], cl ; ret
0x000000000064fb2a : mov byte ptr [rax - 0x77], cl ; ret 0x1de8
0x000000000053e09c : mov byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000615578 : mov byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000005fa126 : mov byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000005b1d5c : mov byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000006cc8fe : mov byte ptr [rax], 0 ; add rsp, 8 ; ret
0x0000000000757d15 : mov byte ptr [rax], 0 ; loopne 0x757cf0 ; call qword ptr [rdi]
0x00000000005413e7 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000051ad83 : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000445371 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000005133a3 : mov byte ptr [rax], al ; add byte ptr [rax], al ; test al, 1 ; jne 0x5133cb ; call rax
0x00000000005030ca : mov byte ptr [rax], bl ; add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret 0x8c0f
0x000000000047a0a8 : mov byte ptr [rax], bl ; call rax
0x000000000053a600 : mov byte ptr [rbp + 0x14], ah ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000543378 : mov byte ptr [rbp + 0x18], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004fc9b4 : mov byte ptr [rbp + 0x1d], bh ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041c106 : mov byte ptr [rbp + 0x2a], 0 ; leave ; ret
0x0000000000501bf5 : mov byte ptr [rbp + 0x39000000], dh ; retf -0x73f1
0x000000000073a548 : mov byte ptr [rbp + 3], dl ; add byte ptr [rax], dl ; retf
0x00000000004b5044 : mov byte ptr [rbp - 0x10], 0 ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000621ec1 : mov byte ptr [rbp - 0x21], al ; leave ; ret
0x0000000000778068 : mov byte ptr [rbp - 0x24], bh ; call qword ptr [rbx]
0x0000000000759520 : mov byte ptr [rbp - 0x30], dl ; jmp rsi
0x000000000060d414 : mov byte ptr [rbp - 0x76b70001], ch ; ror dword ptr [rax - 0x77], 1 ; ret 0x87e9
0x00000000004a6044 : mov byte ptr [rbp - 0x76b7ffdf], al ; ret 0x2c7
0x000000000047f3fa : mov byte ptr [rbp - 0xc], al ; mov qword ptr [rbp - 0x18], r10 ; pop rbp ; ret
0x000000000045071a : mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x000000000062227e : mov byte ptr [rbp - 1], al ; movzx eax, byte ptr [rbp - 1] ; nop ; leave ; ret
0x000000000042a071 : mov byte ptr [rbp], bl ; call rax
0x0000000000501954 : mov byte ptr [rbx + 0x10], 1 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000606ca6 : mov byte ptr [rbx + 0x14], ah ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000606ca5 : mov byte ptr [rbx + 0x14], r12b ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006cc35b : mov byte ptr [rbx + 0x15], 0x30 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000056f2eb : mov byte ptr [rbx + 0x28], 1 ; pop rbx ; ret
0x00000000004fd031 : mov byte ptr [rbx + 0x39000002], cl ; ret 0x8c0f
0x0000000000519ee7 : mov byte ptr [rbx + 0x40], 1 ; pop rbx ; ret
0x00000000006932fe : mov byte ptr [rbx + 0x7b], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000069254f : mov byte ptr [rbx + 0x7b], 0 ; pop rbx ; ret
0x00000000005e22cd : mov byte ptr [rbx + 1], bh ; call 0x6bed08
0x0000000000610967 : mov byte ptr [rbx + rax + 0x298], 1 ; pop rbx ; ret
0x00000000007f1178 : mov byte ptr [rbx + rax], ah ; retf -0x23f9
0x00000000006c519a : mov byte ptr [rbx + rcx*4 + 0x5c], 0x24 ; and al, 0xf ; xchg eax, ebp ; ret 0xc085
0x00000000006a9741 : mov byte ptr [rbx + rcx], 0x2d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006a8f81 : mov byte ptr [rbx + rdx], 0x2d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006a8d64 : mov byte ptr [rbx - 0x2776002b], ch ; pop rbx ; ret
0x00000000006bc0af : mov byte ptr [rbx - 0x76b6bfbf], cl ; retf -0x76b8
0x00000000006cdf20 : mov byte ptr [rbx], 0 ; jmp 0x6cdeec
0x0000000000783f85 : mov byte ptr [rbx], al ; add al, bh ; jle 0x783f70 ; call qword ptr [rax]
0x0000000000549fd8 : mov byte ptr [rbx], cl ; add rsp, 8 ; jmp rax
0x00000000007bcf28 : mov byte ptr [rbx], cl ; int1 ; call qword ptr [rdi]
0x00000000004faa48 : mov byte ptr [rbx], dl ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; retf -0x73f1
0x000000000054735e : mov byte ptr [rbx], dl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000552c11 : mov byte ptr [rbx], dl ; add byte ptr [rax], al ; mov esi, 1 ; call rax
0x00000000004fe019 : mov byte ptr [rbx], dl ; add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret 0x8c0f
0x00000000004ca062 : mov byte ptr [rbx], dl ; call rax
0x00000000005229aa : mov byte ptr [rcx + 0x18], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000053f166 : mov byte ptr [rcx + rax + 0x394c0000], al ; ret 0xf41
0x000000000052c25f : mov byte ptr [rcx + rax*8 + 8], 0 ; pop rbx ; ret
0x00000000006a977d : mov byte ptr [rcx + rax], 0x20 ; jne 0x6a9766 ; ret
0x00000000006a95fa : mov byte ptr [rcx + rax], bl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004f4a8c : mov byte ptr [rcx + rdi - 0x18], 0xf ; lahf ; ret 0x8441
0x0000000000736f7c : mov byte ptr [rcx - 0x2e], ch ; call qword ptr [rax]
0x00000000007a1968 : mov byte ptr [rcx - 0x3a], cl ; call qword ptr [rdx]
0x0000000000435675 : mov byte ptr [rcx - 0x41], 0x70 ; ret
0x0000000000431784 : mov byte ptr [rcx - 0x41], 0xc0 ; ret 0x6d
0x0000000000635138 : mov byte ptr [rcx - 0x76b7fffc], bh ; ret
0x0000000000510e6c : mov byte ptr [rcx - 0x77000000], ah ; ret
0x0000000000735291 : mov byte ptr [rcx], 0 ; jb 0x7352e6 ; iretd ; jmp qword ptr [rax]
0x00000000004f49fd : mov byte ptr [rcx], 0x39 ; ret
0x00000000005524b9 : mov byte ptr [rcx], 0x75 ; push rsp ; call rsi
0x000000000052a8ad : mov byte ptr [rcx], 0xe8 ; pushfq ; call qword ptr [rdi]
0x00000000007d0eb6 : mov byte ptr [rcx], 5 ; retf
0x00000000004a5db6 : mov byte ptr [rcx], ah ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b685b : mov byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000005e9f75 : mov byte ptr [rcx], al ; call rax
0x00000000007bc768 : mov byte ptr [rcx], al ; int1 ; call qword ptr [rsi]
0x000000000078b2c8 : mov byte ptr [rcx], cl ; jmp qword ptr [rbx]
0x00000000006c4862 : mov byte ptr [rcx], dl ; jae 0x6c486e ; xor eax, eax ; call 0x680b1c
0x0000000000503421 : mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000503420 : mov byte ptr [rdi + 0x10], sil ; ret
0x0000000000503791 : mov byte ptr [rdi + 0x11], dh ; ret
0x0000000000503790 : mov byte ptr [rdi + 0x11], sil ; ret
0x0000000000526081 : mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000526080 : mov byte ptr [rdi + 0x18], sil ; ret
0x00000000005b629a : mov byte ptr [rdi + 0x1b8], dh ; ret
0x00000000005b6299 : mov byte ptr [rdi + 0x1b8], sil ; ret
0x00000000006115b0 : mov byte ptr [rdi + 0x1c8], 1 ; ret
0x000000000060fc11 : mov byte ptr [rdi + 0x1d0], dh ; ret
0x000000000060fc10 : mov byte ptr [rdi + 0x1d0], sil ; ret
0x00000000005387f0 : mov byte ptr [rdi + 0x1e], 0 ; mov byte ptr [rdi + 0x1f], 1 ; ret
0x00000000005387f4 : mov byte ptr [rdi + 0x1f], 1 ; ret
0x00000000005b6d3a : mov byte ptr [rdi + 0x2a8], dh ; ret
0x00000000005b6d39 : mov byte ptr [rdi + 0x2a8], sil ; ret
0x00000000005b527a : mov byte ptr [rdi + 0x2d8], dh ; ret
0x00000000005b5279 : mov byte ptr [rdi + 0x2d8], sil ; ret
0x00000000005b455a : mov byte ptr [rdi + 0x308], dh ; ret
0x00000000005b4559 : mov byte ptr [rdi + 0x308], sil ; ret
0x00000000006a81e0 : mov byte ptr [rdi + 0x30], 0 ; ret
0x00000000005cc927 : mov byte ptr [rdi + 0x440], 1 ; ret
0x00000000005b8421 : mov byte ptr [rdi + 0x441], dh ; ret
0x00000000005b8420 : mov byte ptr [rdi + 0x441], sil ; ret
0x00000000005b8431 : mov byte ptr [rdi + 0x442], dh ; ret
0x00000000005b8430 : mov byte ptr [rdi + 0x442], sil ; ret
0x000000000066bc30 : mov byte ptr [rdi + 0x5d], 0 ; mov byte ptr [rdi + 0x5e], 0 ; ret
0x000000000066bc34 : mov byte ptr [rdi + 0x5e], 0 ; ret
0x000000000068e1ac : mov byte ptr [rdi + 0x68], 2 ; mov byte ptr [rdi + 0x69], 0 ; ret
0x000000000068e1b0 : mov byte ptr [rdi + 0x69], 0 ; ret
0x00000000005b68ba : mov byte ptr [rdi + 0x6c8], dh ; ret
0x00000000005b68b9 : mov byte ptr [rdi + 0x6c8], sil ; ret
0x0000000000690da2 : mov byte ptr [rdi + 0x79], 0 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000690496 : mov byte ptr [rdi + 0x7a], al ; mov byte ptr [rdi + 0x7b], 0 ; ret
0x0000000000691504 : mov byte ptr [rdi + 0x7b], 0 ; pop rbx ; ret
0x0000000000690499 : mov byte ptr [rdi + 0x7b], 0 ; ret
0x00000000005b626a : mov byte ptr [rdi + 0xa28], dh ; ret
0x00000000005b6269 : mov byte ptr [rdi + 0xa28], sil ; ret
0x00000000005b458a : mov byte ptr [rdi + 0xa58], dh ; ret
0x00000000005b4589 : mov byte ptr [rdi + 0xa58], sil ; ret
0x00000000005b437a : mov byte ptr [rdi + 0xa88], dh ; ret
0x00000000005b4379 : mov byte ptr [rdi + 0xa88], sil ; ret
0x0000000000501e51 : mov byte ptr [rdi + 0xa8], dh ; ret
0x0000000000501e50 : mov byte ptr [rdi + 0xa8], sil ; ret
0x00000000005027a1 : mov byte ptr [rdi + 0xa9], dh ; ret
0x00000000005027a0 : mov byte ptr [rdi + 0xa9], sil ; ret
0x00000000006735da : mov byte ptr [rdi + 0xc89], 1 ; ret
0x00000000006bdadc : mov byte ptr [rdi + 2], al ; ret
0x00000000006bdad0 : mov byte ptr [rdi + 3], 1 ; ret
0x0000000000674667 : mov byte ptr [rdi + 8], 1 ; mov byte ptr [rdi + 9], 0 ; ret
0x0000000000584471 : mov byte ptr [rdi + 8], dh ; ret
0x0000000000584470 : mov byte ptr [rdi + 8], sil ; ret
0x000000000067466b : mov byte ptr [rdi + 9], 0 ; ret
0x0000000000610988 : mov byte ptr [rdi + rax + 0x299], dh ; ret
0x0000000000610987 : mov byte ptr [rdi + rax + 0x299], sil ; ret
0x000000000067861a : mov byte ptr [rdi + rcx], dh ; jne 0x678605 ; ret
0x00000000006787fa : mov byte ptr [rdi + rcx], dh ; jne 0x6787e5 ; ret
0x00000000006789da : mov byte ptr [rdi + rcx], dh ; jne 0x6789c5 ; ret
0x0000000000678619 : mov byte ptr [rdi + rcx], sil ; jne 0x678606 ; ret
0x00000000006787f9 : mov byte ptr [rdi + rcx], sil ; jne 0x6787e6 ; ret
0x00000000006789d9 : mov byte ptr [rdi + rcx], sil ; jne 0x6789c6 ; ret
0x0000000000687453 : mov byte ptr [rdi - 1], cl ; cmp rdi, rax ; jne 0x687450 ; ret
0x0000000000748261 : mov byte ptr [rdi], 0 ; nop ; ret
0x0000000000748251 : mov byte ptr [rdi], 0 ; push rax ; ret
0x00000000005fc800 : mov byte ptr [rdi], 0 ; ret
0x0000000000748271 : mov byte ptr [rdi], 0 ; xor ah, al ; cmc ; call rax
0x00000000007e9dba : mov byte ptr [rdi], 0x63 ; lodsb al, byte ptr [rsi] ; or eax, dword ptr [rax] ; ret 0x508
0x00000000005fc7b7 : mov byte ptr [rdi], 1 ; ret
0x00000000005af1cc : mov byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x00000000004c5cf4 : mov byte ptr [rdi], bl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000052dc18 : mov byte ptr [rdi], ch ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000057b901 : mov byte ptr [rdi], dh ; ret
0x000000000057b900 : mov byte ptr [rdi], sil ; ret
0x00000000004fcf00 : mov byte ptr [rdx + 0x39000005], bl ; ret 0x8c0f
0x00000000006a7634 : mov byte ptr [rdx + 0x5d5b0035], dh ; pop r12 ; ret
0x00000000006d1291 : mov byte ptr [rdx + 0xc], bh ; ret
0x00000000004f7c6d : mov byte ptr [rdx + 4], 1 ; ret
0x00000000006b6c75 : mov byte ptr [rdx + r8 + 0x11], cl ; ret
0x00000000006b6c71 : mov byte ptr [rdx + rax + 0x10], al ; mov byte ptr [rdx + r8 + 0x11], cl ; ret
0x00000000006b6e39 : mov byte ptr [rdx + rax + 0x10], bl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006b6c76 : mov byte ptr [rdx + rax + 0x11], cl ; ret
0x000000000060649e : mov byte ptr [rdx + rax - 1], bh ; add rsp, 8 ; ret
0x000000000060649d : mov byte ptr [rdx + rax - 1], dil ; add rsp, 8 ; ret
0x00000000006a97d3 : mov byte ptr [rdx + rax], 0x2d ; ret
0x0000000000666170 : mov byte ptr [rdx + rax], cl ; jne 0x666161 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000069c910 : mov byte ptr [rdx + rax], dh ; jne 0x69c8d5 ; ret
0x00000000006d0a5d : mov byte ptr [rdx + rax], dh ; mov eax, r8d ; ret
0x000000000069c90f : mov byte ptr [rdx + rax], sil ; jne 0x69c8d6 ; ret
0x00000000006d0a5c : mov byte ptr [rdx + rax], sil ; mov eax, r8d ; ret
0x000000000069c90c : mov byte ptr [rdx + rdx], al ; mov byte ptr [rdx + rax], sil ; jne 0x69c8d9 ; ret
0x000000000069f827 : mov byte ptr [rdx + rsi], cl ; jne 0x69f816 ; pop rbx ; ret
0x000000000069f826 : mov byte ptr [rdx + rsi], r9b ; jne 0x69f817 ; pop rbx ; ret
0x0000000000790378 : mov byte ptr [rdx - 0x1e], dl ; jmp qword ptr [rdi]
0x0000000000738801 : mov byte ptr [rdx], 0 ; ret 0xd667
0x00000000006508ea : mov byte ptr [rdx], 3 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000495d62 : mov byte ptr [rdx], ah ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000737b31 : mov byte ptr [rdx], al ; add ah, al ; fst st(3) ; jmp qword ptr [rax]
0x00000000004f8311 : mov byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000006813b2 : mov byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x00000000005da094 : mov byte ptr [rdx], al ; call rax
0x00000000007b3068 : mov byte ptr [rdx], al ; out dx, eax ; call qword ptr [rdx]
0x000000000045a06e : mov byte ptr [rdx], bl ; call rax
0x00000000004feca1 : mov byte ptr [rdx], ch ; add al, 0 ; add byte ptr [rcx], bh ; ret 0x8c0f
0x00000000005e2534 : mov byte ptr [rdx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005af0dc : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; ret
0x000000000045a08e : mov byte ptr [rdx], r11b ; call rax
0x00000000007dba28 : mov byte ptr [rip + 0x324f712], al ; ret 0x505
0x00000000006d28d0 : mov byte ptr [rip + 0x33ab19], 8 ; ret
0x00000000006cb2a8 : mov byte ptr [rip + 0x342001], 0 ; call 0x6a7d79
0x00000000006aa841 : mov byte ptr [rip + 0x357e5b], bh ; mfence ; ret
0x00000000006a8452 : mov byte ptr [rip + 0x35a20d], 0 ; ret
0x00000000006a834a : mov byte ptr [rip + 0x35a315], 0 ; ret
0x000000000068ed32 : mov byte ptr [rip + 0x373691], 0 ; ret
0x000000000068ec1a : mov byte ptr [rip + 0x3737a9], 0 ; ret
0x00000000005031fc : mov byte ptr [rip + 0x39000001], ch ; ret 0x8c0f
0x000000000062c8cc : mov byte ptr [rip + 0x3d31e1], 1 ; pop rbx ; ret
0x000000000057e4a1 : mov byte ptr [rip + 0x4802b9], bh ; ret
0x000000000057e4a0 : mov byte ptr [rip + 0x4802b9], dil ; ret
0x0000000000536cc9 : mov byte ptr [rip + 0x4c6c70], 1 ; pop rbx ; ret
0x0000000000408ae3 : mov byte ptr [rip + 0x5fa1fe], 1 ; ret
0x00000000004dbf25 : mov byte ptr [rip - 0x70410000], dl ; ret 0x6e
0x00000000005367f8 : mov byte ptr [rip - 0x72174100], dl ; outsd dx, dword ptr [rsi] ; add al, ch ; retf
0x000000000054f46f : mov byte ptr [rsi + rax + 8], 0 ; pop rbx ; ret
0x00000000006a981d : mov byte ptr [rsi + rax], 0x2a ; jne 0x6a9806 ; ret
0x00000000006d139d : mov byte ptr [rsi + rax], dl ; ret
0x000000000077f298 : mov byte ptr [rsi + rbx*8], al ; jmp qword ptr [rbx]
0x00000000006a8dde : mov byte ptr [rsi + rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000067f293 : mov byte ptr [rsi + rdx], bh ; mov eax, ebx ; pop rbx ; ret
0x000000000067f292 : mov byte ptr [rsi + rdx], dil ; mov eax, ebx ; pop rbx ; ret
0x000000000079fc18 : mov byte ptr [rsi - 0x18], ch ; jmp qword ptr [rsi]
0x000000000068b0b4 : mov byte ptr [rsi - 0x3214fffc], dl ; jmp 0x68b08e
0x000000000062a25c : mov byte ptr [rsi - 0x7cb7ffc3], al ; ret
0x0000000000745261 : mov byte ptr [rsi], 0 ; push rax ; out dx, eax ; call qword ptr [rax]
0x00000000006cc282 : mov byte ptr [rsi], 0 ; ret
0x00000000004c0006 : mov byte ptr [rsi], 0x20 ; add cl, cl ; ret
0x00000000006a08b1 : mov byte ptr [rsi], bh ; ret
0x00000000004d7dfd : mov byte ptr [rsi], bl ; add cl, cl ; ret
0x00000000005a71a2 : mov byte ptr [rsi], cl ; add byte ptr [rax + 0x29], cl ; ret
0x00000000007543d0 : mov byte ptr [rsi], cl ; iretd ; jmp qword ptr [rax]
0x00000000006a08b0 : mov byte ptr [rsi], dil ; ret
0x000000000056be97 : mov byte ptr [rsi], dl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000063914e : mov byte ptr [rsp + 9], 0 ; call 0x675417
0x000000000073d4d0 : mov byte ptr [rsp + rax], al ; ret 0xffe0
0x00000000005f1735 : mov byte ptr gs:[rax - 0x75], cl ; add eax, 0x4111aa ; call rax
0x00000000006c807a : mov byte ptr gs:[rax - 0x77], cl ; ret
0x0000000000756c7d : mov ch, 0 ; add byte ptr [rax - 0x3c], bl ; iretd ; call qword ptr [rax]
0x00000000007e6523 : mov ch, 0x10 ; add ah, ch ; syscall
0x00000000005a301e : mov ch, 0x11 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000555d7e : mov ch, 0x12 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000572006 : mov ch, 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007d9750 : mov ch, 0x14 ; add dh, al ; adc al, 5 ; retf
0x0000000000515d1e : mov ch, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004ff7e7 : mov ch, 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000509177 : mov ch, 0x1c ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004645c2 : mov ch, 0x21 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000444572 : mov ch, 0x23 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000045f32c : mov ch, 0x24 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000463050 : mov ch, 0x25 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000041464a : mov ch, 0x26 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007d09d4 : mov ch, 0x2a ; retf
0x00000000007218be : mov ch, 0x30 ; sbb al, 0xf2 ; mov ebp, 0xbac28abd ; retf -0x6cd0
0x00000000005fcafd : mov ch, 0x40 ; add al, ch ; retf
0x000000000064078d : mov ch, 0x53 ; call 0xffffffffc3ed5099
0x000000000051ed71 : mov ch, 0x55 ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000688092 : mov ch, 0x5b ; pop r14 ; ret
0x0000000000679503 : mov ch, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000054720b : mov ch, 0x98 ; adc eax, dword ptr [rax] ; nop ; ret
0x00000000007f39fa : mov ch, 0xa0 ; add dword ptr [rip + 0x19ca3], eax ; retf
0x0000000000658807 : mov ch, 0xa0 ; cmp al, byte ptr [rax] ; add rsp, 8 ; jmp rax
0x0000000000414aad : mov ch, 0xb0 ; add byte ptr es:[rax - 0x77], cl ; ret
0x00000000006cbb76 : mov ch, 0xb0 ; sub byte ptr [rbx], dh ; ret
0x00000000004b7127 : mov ch, 0xb7 ; push rsp ; add bh, bh ; ror cl, 1 ; ret
0x0000000000605db2 : mov ch, 0xbe ; retf 1
0x00000000006091f6 : mov ch, 0xc ; add byte ptr [rax - 0x77], cl ; ret
0x000000000073460d : mov ch, 0xcd ; jmp rax
0x0000000000735d9d : mov ch, 0xd0 ; call qword ptr [rax]
0x00000000007381d5 : mov ch, 0xd4 ; jmp qword ptr [rax]
0x000000000054512f : mov ch, 0xd7 ; add byte ptr [r8 - 0x7d], cl ; ret
0x0000000000406e87 : mov ch, 0xd8 ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000595d5b : mov ch, 0xe ; add byte ptr [rax - 0x77], cl ; ret
0x000000000073d35d : mov ch, 0xe0 ; call qword ptr [rax]
0x000000000073d34d : mov ch, 0xe0 ; jmp rax
0x000000000079c7e1 : mov ch, 0xe7 ; call rsp
0x000000000064231f : mov ch, 0xe7 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000741d15 : mov ch, 0xe7 ; jmp rax
0x00000000007a1921 : mov ch, 0xe8 ; jmp qword ptr [rbx]
0x0000000000646f20 : mov ch, 0xeb ; retf
0x0000000000744c95 : mov ch, 0xee ; call rax
0x00000000007dc568 : mov ch, 0xf ; add byte ptr [rax], al ; add dl, cl ; syscall
0x0000000000722d5e : mov ch, 0xf5 ; adc dh, byte ptr [rip - 0x8ec370e] ; cwde ; call qword ptr [rcx]
0x0000000000748135 : mov ch, 0xf5 ; dec dword ptr [rax] ; ret 7
0x000000000074813d : mov ch, 0xf5 ; jmp qword ptr [rax]
0x00000000007f653e : mov ch, 1 ; add al, 0xc6 ; sbb dword ptr [rax], eax ; ret
0x00000000007cfa65 : mov ch, 1 ; or al, 0xfd ; add dword ptr [rax], eax ; retf
0x00000000007384a9 : mov ch, 2 ; add ah, ah ; test ebp, edx ; jmp qword ptr [rax]
0x0000000000645502 : mov ch, 3 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000645d1e : mov ch, 3 ; add byte ptr [rax - 0x7d], cl ; cli ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000007e0cdb : mov ch, 4 ; adc ah, dl ; add al, 0 ; retf 0x504
0x000000000073eaf1 : mov ch, 4 ; add al, dl ; mov bl, 0xe2 ; jmp rax
0x00000000006791ab : mov ch, 5 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000744ed9 : mov ch, 6 ; add byte ptr [rax - 2], dl ; out dx, al ; call rax
0x00000000007b6cfd : mov ch, 6 ; add byte ptr [rax], dl ; stosd dword ptr [rdi], eax ; out dx, eax ; call qword ptr [rcx]
0x0000000000605d5c : mov ch, 7 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000405eab : mov ch, al ; call qword ptr [rip + 0x5fca35]
0x0000000000721928 : mov ch, al ; out dx, eax ; cli ; retf
0x00000000007b67b1 : mov ch, bh ; call qword ptr [rbx]
0x000000000051a835 : mov ch, bl ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf
0x0000000000797788 : mov ch, byte ptr [rbx - 0x1b] ; call rsp
0x0000000000639db2 : mov ch, byte ptr [rcx + 0x5b580009] ; pop rbp ; ret
0x000000000052db88 : mov ch, byte ptr [rdi] ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000041d742 : mov ch, byte ptr [rdi] ; sub al, byte ptr [rax] ; leave ; ret
0x00000000007e5463 : mov ch, byte ptr [rip + 0x52d9c00] ; ret 0x2d
0x00000000007ad659 : mov ch, ch ; call qword ptr [rcx]
0x00000000007ad509 : mov ch, ch ; call qword ptr [rdi]
0x00000000007ad641 : mov ch, ch ; call qword ptr [rdx]
0x00000000007ad4b1 : mov ch, ch ; jmp qword ptr [rax]
0x00000000007502e9 : mov ch, cl ; jmp qword ptr [rbx]
0x00000000006bc55f : mov ch, dl ; shl rax, 0x10 ; or rax, rcx ; ret
0x0000000000584822 : mov cl, 0x10 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000005a958b : mov cl, 0x12 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007dcba6 : mov cl, 0x15 ; add ah, dh ; syscall
0x0000000000563408 : mov cl, 0x15 ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x0000000000549547 : mov cl, 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e8c87 : mov cl, 0x1b ; add byte ptr [rdx + rdx + 0xb1ac805], bh ; retf -0x6fee
0x00000000004f9568 : mov cl, 0x1d ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006d69fd : mov cl, 0x25 ; retf -0x365b
0x00000000004247eb : mov cl, 0x26 ; add byte ptr [rax + 0x29], cl ; ret
0x000000000042349c : mov cl, 0x29 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000007ec245 : mov cl, 0x2d ; add ah, bl ; syscall
0x0000000000534815 : mov cl, 0x31 ; ror byte ptr [rax + 1], cl ; ret
0x00000000006277b1 : mov cl, 0x3d ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000066ba94 : mov cl, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000005477c4 : mov cl, 0x4b ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x00000000004b779a : mov cl, 0x54 ; add bh, bh ; ror cl, 1 ; ret
0x0000000000535e6b : mov cl, 0x7a ; add byte ptr [rax - 0x7d], r9b ; ret
0x00000000006ad46e : mov cl, 0x90 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000007e8a16 : mov cl, 0xa ; add eax, 0xd40b11e1 ; or cl, byte ptr [rsi] ; retf 0x12
0x00000000005527d0 : mov cl, 0xc ; add byte ptr [rax], al ; call rax
0x00000000007d43a3 : mov cl, 0xc ; add ebx, ecx ; syscall
0x0000000000753599 : mov cl, 0xce ; call rsp
0x0000000000734dfd : mov cl, 0xce ; jmp rax
0x00000000005e348b : mov cl, 0xd ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000075a789 : mov cl, 0xd0 ; call qword ptr [rbx]
0x000000000075a7c9 : mov cl, 0xd0 ; call qword ptr [rcx]
0x000000000075a749 : mov cl, 0xd0 ; call qword ptr [rdx]
0x0000000000739aed : mov cl, 0xd8 ; jmp qword ptr [rax]
0x0000000000770c81 : mov cl, 0xda ; jmp qword ptr [rdi]
0x000000000073a4ad : mov cl, 0xdb ; call rax
0x00000000005949c5 : mov cl, 0xe ; add byte ptr [rax - 0x77], cl ; ret
0x000000000078db59 : mov cl, 0xe1 ; call qword ptr [rax]
0x000000000078db41 : mov cl, 0xe1 ; jmp qword ptr [rax]
0x000000000079c6b1 : mov cl, 0xe7 ; call rsp
0x000000000064272c : mov cl, 0xe7 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000743de5 : mov cl, 0xec ; call qword ptr [rax]
0x000000000068192b : mov cl, 0xf ; cmp byte ptr [rax], al ; jmp rax
0x0000000000749855 : mov cl, 0xf7 ; call qword ptr [rax]
0x0000000000749845 : mov cl, 0xf7 ; jmp rax
0x00000000006b3651 : mov cl, 0xf8 ; add ecx, dword ptr [rax + 0x29] ; retf -0x67b8
0x000000000074a04d : mov cl, 0xf8 ; jmp qword ptr [rax]
0x000000000067804b : mov cl, 0xff ; dec dword ptr [rcx + 1] ; ret 0xace9
0x00000000004152db : mov cl, 0xff ; dec ecx ; ret
0x000000000073b709 : mov cl, 3 ; add byte ptr [rax], dl ; add bl, dh ; call qword ptr [rax]
0x00000000007d25cc : mov cl, 3 ; add byte ptr [rbp + 5], ch ; ret
0x0000000000733b91 : mov cl, 3 ; add byte ptr [rdx - 0x2f0032f9], cl ; ret
0x00000000007e9cf6 : mov cl, 4 ; retf -0x78ff
0x00000000007b68fd : mov cl, 6 ; add al, dh ; mov edi, gs ; call rsi
0x0000000000659593 : mov cl, 7 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000074b671 : mov cl, 8 ; add byte ptr [rax + 0x25], dl ; cli ; call rax
0x000000000074b681 : mov cl, 8 ; add byte ptr [rax + 0x26], dh ; cli ; call qword ptr [rax]
0x0000000000724ea0 : mov cl, ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, bl ; retf
0x00000000006d3635 : mov cl, byte ptr [rax + 1] ; retf -0x1d01
0x0000000000676532 : mov cl, byte ptr [rax + rax] ; add byte ptr [rax], al ; jne 0x676547 ; ret
0x0000000000526443 : mov cl, byte ptr [rax - 0x77] ; ret
0x000000000044dc52 : mov cl, byte ptr [rbx + rbx*2] ; call rax
0x00000000007ac948 : mov cl, byte ptr [rbx - 0x13] ; call qword ptr [rdx]
0x00000000007d0d4d : mov cl, byte ptr [rdi] ; add eax, 0x94000fa9 ; syscall
0x00000000007d2e62 : mov cl, byte ptr [rdi] ; add eax, 0xbe030f8f ; syscall
0x00000000007f56bb : mov cl, byte ptr [rdi] ; add ebx, edi ; syscall
0x000000000075c088 : mov cl, byte ptr [rdx - 0x2f] ; call rsp
0x000000000075c048 : mov cl, byte ptr [rdx - 0x2f] ; jmp qword ptr [rsi]
0x000000000045de00 : mov cl, byte ptr [rip - 0x76b80000] ; ret 0x8948
0x0000000000755891 : mov cs, edi ; call rbx
0x0000000000734c7d : mov cs, esi ; dec dword ptr [rax] ; stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; ret 0xce90
0x000000000074dbc1 : mov cs, esp ; jmp qword ptr [rbx]
0x00000000005f5a1d : mov cs, word ptr [rax + rax] ; leave ; ret
0x000000000051f8e2 : mov cs, word ptr [rax - 0x77] ; ret
0x00000000005dc6e3 : mov cs, word ptr [rax - 0x7d000000] ; ret
0x000000000060238f : mov cs, word ptr [rax - 0x7d] ; cli ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000601e8c : mov cs, word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000074aed9 : mov cs, word ptr [rax] ; add byte ptr [rax], dl ; xchg eax, ebp ; stc ; call qword ptr [rax]
0x000000000059c560 : mov cs, word ptr [rbx + 0x39000000] ; retf -0x70f1
0x00000000007a1950 : mov cs, word ptr [rcx - 0x3a] ; call qword ptr [rdx]
0x00000000006b3741 : mov cs, word ptr [rcx - 0x75] ; cmp byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x148b
0x0000000000722391 : mov cs, word ptr [rcx] ; ret 0xe937
0x00000000007f025d : mov cs, word ptr [rdi] ; add eax, 0x980010c3 ; syscall
0x00000000007ebdc3 : mov cs, word ptr [rdi] ; or eax, 0xb2001382 ; syscall
0x00000000006aebd4 : mov cs, word ptr [rdi] ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000062b8c7 : mov cs, word ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006d4f3b : mov dh, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000005f3539 : mov dh, 0 ; nop ; pop rbp ; ret
0x000000000067aa9e : mov dh, 0 ; pop rbx ; ret
0x00000000005134ec : mov dh, 0 ; ret
0x0000000000575e76 : mov dh, 0x10 ; add byte ptr [rcx + 0x6715ffc3], cl ; retf 0x48
0x00000000005a90f0 : mov dh, 0x12 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006a1af1 : mov dh, 0x14 ; cmp byte ptr [rdi], cl ; mov dh, 0xc ; xor byte ptr [rax], bh ; retf -0x7af1
0x0000000000694a73 : mov dh, 0x14 ; sbb byte ptr [rbp + 0x39], al ; retf -0x77bd
0x0000000000524464 : mov dh, 0x15 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000525eae : mov dh, 0x15 ; add byte ptr [rcx + 0x2f15ffc5], cl ; retf 0x4d
0x00000000006aa9f1 : mov dh, 0x16 ; cmp dl, byte ptr [rdi] ; je 0x6aaa08 ; xor eax, eax ; ret
0x00000000006c6b51 : mov dh, 0x16 ; cmp dl, byte ptr [rdi] ; je 0x6c6b68 ; xor eax, eax ; ret
0x00000000006c6811 : mov dh, 0x16 ; xor eax, eax ; cmp dl, byte ptr [rdi] ; je 0x6c6828 ; ret
0x00000000004f547f : mov dh, 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b56c8 : mov dh, 0x20 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004b5fb0 : mov dh, 0x20 ; add cl, cl ; ret
0x000000000057ee61 : mov dh, 0x24 ; ret 0x8445
0x0000000000425155 : mov dh, 0x27 ; add byte ptr [rax - 0x77], cl ; ret 0x858b
0x00000000007f71d8 : mov dh, 0x2f ; xor edi, edx ; sub eax, 0x52ff603 ; ret 0x30
0x000000000045d1e6 : mov dh, 0x37 ; add cl, cl ; ret
0x00000000006272b8 : mov dh, 0x3d ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004bc36c : mov dh, 0x40 ; cmp al, 0x38 ; ret 0x6075
0x00000000005e716d : mov dh, 0x40 ; cmp byte ptr [rax], bh ; ret 0x774
0x00000000004bd16c : mov dh, 0x40 ; or byte ptr [rax], bh ; ret 0x1575
0x00000000004bd127 : mov dh, 0x40 ; or byte ptr [rax], bh ; ret 0x2a75
0x00000000004b9d43 : mov dh, 0x40 ; sbb bh, byte ptr [rax] ; ret 0x2b75
0x00000000004b9b72 : mov dh, 0x40 ; sbb byte ptr [rax], bh ; ret 0x1675
0x00000000004b9d1b : mov dh, 0x40 ; sbb byte ptr [rax], bh ; ret 0x5375
0x00000000004b9d2f : mov dh, 0x40 ; sbb dword ptr [rax], edi ; ret 0x3f75
0x00000000004bd06c : mov dh, 0x40 ; sub byte ptr [rax], bh ; ret 0x850f
0x00000000004bd0ac : mov dh, 0x40 ; xor al, 0x38 ; ret 0x6075
0x00000000004bc32c : mov dh, 0x40 ; xor byte ptr [rax], bh ; ret 0x850f
0x00000000006cce35 : mov dh, 0x43 ; add al, 0x5b ; ret
0x00000000006d2d27 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000674c91 : mov dh, 0x43 ; or byte ptr [rax - 0x69f0fe07], al ; ret 0x23c
0x00000000006bcaa0 : mov dh, 0x44 ; add eax, 0x35c8d00 ; add al, 0x83 ; ret
0x00000000006ccf9f : mov dh, 0x44 ; and al, 0xa ; add rsp, 0x28 ; ret
0x00000000006aaeb8 : mov dh, 0x44 ; and al, 0xf ; add rsp, 0x18 ; ret
0x00000000006cce8f : mov dh, 0x44 ; and al, 4 ; add rsp, 0x28 ; ret
0x00000000006cd0bf : mov dh, 0x44 ; and al, 5 ; add rsp, 0x28 ; ret
0x00000000006cd02f : mov dh, 0x44 ; and al, 6 ; add rsp, 0x28 ; ret
0x00000000006ccdff : mov dh, 0x44 ; and al, 9 ; add rsp, 0x28 ; ret
0x000000000068998d : mov dh, 0x44 ; xor byte ptr [rbx], cl ; ret
0x00000000005ae9f1 : mov dh, 0x45 ; add byte ptr [rax - 0x73], cl ; push rbx ; dec dword ptr [rax + 0x39] ; ret
0x00000000005ae931 : mov dh, 0x45 ; add dword ptr [rax - 0x73], ecx ; push rbx ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000004b40fc : mov dh, 0x45 ; loopne 0x4b413c ; ret 0x774
0x0000000000621ebe : mov dh, 0x45 ; mov al, 0x88 ; fxch st(0), st(1) ; ret
0x000000000066cc7d : mov dh, 0x45 ; or al, ch ; retf
0x0000000000511298 : mov dh, 0x45 ; ret 0xc148
0x00000000004a5f49 : mov dh, 0x45 ; retf
0x00000000006cd041 : mov dh, 0x46 ; add eax, 0x8747f3c ; ret
0x00000000006ccf21 : mov dh, 0x46 ; or bh, byte ptr [rdi + rdi*2] ; je 0x6ccf37 ; ret
0x00000000006cd2d1 : mov dh, 0x46 ; or byte ptr [rdi + rdi*2], bh ; je 0x6cd2e7 ; ret
0x00000000006cceb1 : mov dh, 0x46 ; or dword ptr [rdi + rdi*2], edi ; je 0x6ccec7 ; ret
0x000000000067b4de : mov dh, 0x47 ; add dword ptr [rax - 0x77], ecx ; ret 0x840f
0x0000000000691501 : mov dh, 0x47 ; jl 0x6914d3 ; jnp 0x691510 ; pop rbx ; ret
0x0000000000518291 : mov dh, 0x47 ; ret
0x0000000000614917 : mov dh, 0x48 ; mov eax, dword ptr [rbp - 8] ; nop ; leave ; ret
0x00000000006bac41 : mov dh, 0x4a ; add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4001
0x000000000067ff48 : mov dh, 0x4a ; add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x8001
0x00000000006bab51 : mov dh, 0x4a ; add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x8d01
0x00000000006c7418 : mov dh, 0x4d ; mov esi, 0x83c36348 ; ret
0x00000000006cd636 : mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000006bc1bb : mov dh, 0x53 ; add dword ptr [rcx - 0x7d], ecx ; ret
0x00000000006b8021 : mov dh, 0x53 ; and al, 0xb8 ; adc eax, 0xf6000000 ; ret 0xf04
0x00000000006a2ff3 : mov dh, 0x53 ; and al, 0xf ; scasd eax, dword ptr [rdi] ; ret 0x148
0x00000000004cf13c : mov dh, 0x54 ; adc dword ptr [rbp - 0x80], ebp ; cli ; sub byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000061a59a : mov dh, 0x55 ; hlt ; mov byte ptr [rax + 0x18], dl ; pop rbp ; ret
0x000000000064adab : mov dh, 0x55 ; ret 0xfa80
0x000000000059e519 : mov dh, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000059eba9 : mov dh, 0x5b ; ret
0x00000000006a6f79 : mov dh, 0x5d ; ret
0x0000000000664959 : mov dh, 0x5f ; dec dword ptr [rax + 1] ; ror byte ptr [rax + 1], 1 ; retf 0x149
0x0000000000735324 : mov dh, 0x6a ; iretd ; jmp qword ptr [rax]
0x0000000000597e68 : mov dh, 0x70 ; add byte ptr [rax - 0x77], cl ; ja 0x597e7e ; ret
0x00000000006baf11 : mov dh, 0x72 ; add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0xf601
0x000000000050f9da : mov dh, 0x80 ; fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000675b88 : mov dh, 0x84 ; add byte ptr [rbp + 0x72], spl ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x4788
0x000000000067495a : mov dh, 0x84 ; push rax ; add byte ptr [rbp + 0x72], ah ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x4388
0x000000000060b471 : mov dh, 0x87 ; add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000000000609dd1 : mov dh, 0x87 ; add dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x00000000006c8a91 : mov dh, 0x87 ; call 0xffffffffc36cfdb5
0x000000000060b461 : mov dh, 0x87 ; enter 1, 0 ; ret
0x00000000005b02aa : mov dh, 0x87 ; enter 6, 0 ; ret
0x00000000005af67a : mov dh, 0x87 ; fadd dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000000005af0da : mov dh, 0x87 ; mov byte ptr [rdx], cl ; add byte ptr [rax], al ; ret
0x00000000005af13a : mov dh, 0x87 ; or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000060bc11 : mov dh, 0x87 ; rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; ret
0x00000000005b00aa : mov dh, 0x87 ; sub byte ptr [rdx], cl ; add byte ptr [rax], al ; ret
0x00000000004f74b1 : mov dh, 0x87 ; test al, 0 ; add byte ptr [rax], al ; ret
0x00000000005b043a : mov dh, 0x87 ; test al, 2 ; add byte ptr [rax], al ; ret
0x00000000006d6c81 : mov dh, 0x8b ; and ebp, dword ptr [rdi] ; pop rsp ; ret 0x5d78
0x000000000075a170 : mov dh, 0x90 ; sar bh, 1 ; ret
0x00000000006762aa : mov dh, 0xa7 ; add byte ptr [rax], al ; nop ; ret
0x00000000005c44ac : mov dh, 0xb ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b54bc : mov dh, 0xc ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005f3209 : mov dh, 0xc ; add cl, cl ; ret
0x0000000000633d90 : mov dh, 0xc ; ret
0x00000000006a1af5 : mov dh, 0xc ; xor byte ptr [rax], bh ; retf -0x7af1
0x00000000006c9dbc : mov dh, 0xc0 ; mov dword ptr [rsi + 0xc], eax ; ret
0x00000000004ed70e : mov dh, 0xc0 ; mov edi, eax ; call 0x4b99a8
0x00000000004ecfd0 : mov dh, 0xc0 ; mov edi, eax ; call 0x4b9a5c
0x000000000048ffc6 : mov dh, 0xc0 ; mov edi, eax ; call 0x4bc1fe
0x00000000006d2b4a : mov dh, 0xc0 ; movsxd rax, dword ptr [r11 + rax*4] ; add rax, r11 ; jmp rax
0x00000000006cd99a : mov dh, 0xc0 ; neg eax ; pop rbx ; pop rbp ; ret
0x00000000006be440 : mov dh, 0xc0 ; or byte ptr [rdi + rax], dl ; ret
0x0000000000661afb : mov dh, 0xc0 ; pop r14 ; ret
0x00000000006cbc9e : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000666a44 : mov dh, 0xc0 ; ret
0x00000000005193db : mov dh, 0xc4 ; add rsp, 0x18 ; ret
0x00000000006cd3bd : mov dh, 0xc4 ; pop rbx ; pop rbp ; ret
0x00000000006932fd : mov dh, 0xc6 ; jnp 0x69330b ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000678ab2 : mov dh, 0xc7 ; ret
0x00000000006d6ec7 : mov dh, 0xc8 ; retf
0x00000000006d20bf : mov dh, 0xc9 ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x0000000000744d34 : mov dh, 0xcc ; out dx, al ; jmp rax
0x000000000073461d : mov dh, 0xcd ; jmp qword ptr [rax]
0x0000000000738205 : mov dh, 0xd4 ; jmp rax
0x0000000000771041 : mov dh, 0xda ; jmp qword ptr [rcx]
0x000000000073a4f5 : mov dh, 0xdb ; call qword ptr [rax]
0x000000000073a4e5 : mov dh, 0xdb ; call rax
0x000000000077e259 : mov dh, 0xdd ; call rdi
0x000000000072238d : mov dh, 0xde ; pop rdi ; push rdx ; mov cs, word ptr [rcx] ; ret 0xe937
0x000000000073c985 : mov dh, 0xdf ; call rax
0x000000000073d39d : mov dh, 0xe0 ; call rax
0x00000000006421ea : mov dh, 0xe7 ; dec dword ptr [rax - 0x77] ; ret
0x000000000062feb4 : mov dh, 0xe9 ; retf -2
0x000000000072338e : mov dh, 0xeb ; ret 0x8e09
0x0000000000642f68 : mov dh, 0xef ; loopne 0x642f71 ; jmp 0x63f1f5
0x000000000055be0d : mov dh, 0xf5 ; outsd dx, dword ptr [rsi] ; add byte ptr [rax + 0x29], cl ; retf -0x7eb8
0x00000000006c5c00 : mov dh, 0xf6 ; add eax, esi ; add rsp, 8 ; ret
0x00000000006cbb72 : mov dh, 0xf6 ; mov eax, dword ptr [rsi*4 + 0x7328b0] ; ret
0x00000000006881f2 : mov dh, 0xf6 ; movzx eax, byte ptr [rdi + rsi] ; ret
0x0000000000547ea2 : mov dh, 0xfb ; jne 0x547eca ; mov rsi, rbp ; call rax
0x00000000004a2b08 : mov dh, 0xff ; dec ecx ; ret
0x00000000006785d2 : mov dh, 0xff ; movzx eax, byte ptr [rdi + 0x728980] ; ret
0x0000000000678992 : mov dh, 0xff ; movzx eax, byte ptr [rdi + 0x728a80] ; ret
0x00000000006787b2 : mov dh, 0xff ; movzx eax, byte ptr [rdi + 0x728b80] ; ret
0x00000000007cf4bd : mov dh, 1 ; adc dl, dl ; add dword ptr [rax], eax ; retf
0x0000000000655cc3 : mov dh, 2 ; add byte ptr [rax - 0x7d], cl ; cli ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000054af3b : mov dh, 2 ; add byte ptr [rax], al ; call rax
0x00000000004ed70b : mov dh, 3 ; movzx eax, al ; mov edi, eax ; call 0x4b99ab
0x00000000004ecfcd : mov dh, 3 ; movzx eax, al ; mov edi, eax ; call 0x4b9a5f
0x000000000048ffc3 : mov dh, 3 ; movzx eax, al ; mov edi, eax ; call 0x4bc201
0x00000000006344d1 : mov dh, 4 ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x6806ec
0x00000000006790dd : mov dh, 5 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000668b61 : mov dh, 5 ; retf
0x00000000007b6d5d : mov dh, 6 ; add byte ptr [rax - 0x54], dh ; out dx, eax ; call qword ptr [rdi]
0x00000000007b6d15 : mov dh, 6 ; add byte ptr [rax], bl ; stosd dword ptr [rdi], eax ; out dx, eax ; call qword ptr [rbx]
0x0000000000744f11 : mov dh, 6 ; add byte ptr [rsi + 6], al ; out dx, eax ; jmp rax
0x00000000005218e1 : mov dh, 6 ; cmp al, byte ptr [rdi] ; je 0x5218f8 ; xor eax, eax ; ret
0x000000000055eab1 : mov dh, 6 ; cmp al, byte ptr [rdi] ; je 0x55eac8 ; xor eax, eax ; ret
0x00000000005ae341 : mov dh, 6 ; cmp al, byte ptr [rdi] ; je 0x5ae358 ; xor eax, eax ; ret
0x0000000000578491 : mov dh, 6 ; cmp byte ptr [rdi], al ; je 0x5784a8 ; xor eax, eax ; ret
0x00000000006cbd14 : mov dh, 6 ; test al, al ; jne 0x6cbd11 ; mov byte ptr [rdi], 0 ; ret
0x000000000060448c : mov dh, 7 ; add bl, ch ; mov dl, 0xe9 ; ret
0x00000000005429c1 : mov dh, 7 ; cmp al, byte ptr [rsi] ; je 0x5429d8 ; xor eax, eax ; ret
0x00000000005a5531 : mov dh, 7 ; cmp al, byte ptr [rsi] ; je 0x5a5548 ; xor eax, eax ; ret
0x000000000057e631 : mov dh, 7 ; cmp byte ptr [rsi], al ; je 0x57e648 ; xor eax, eax ; ret
0x000000000053d7e1 : mov dh, 7 ; ret
0x00000000005fc7b1 : mov dh, 7 ; xor al, 1 ; je 0x5fc7c3 ; mov byte ptr [rdi], 1 ; ret
0x000000000067fbf9 : mov dh, 7 ; xor eax, 1 ; ret
0x0000000000747205 : mov dh, ah ; call rax
0x00000000007358a4 : mov dh, ah ; iretd ; call qword ptr [rax]
0x000000000073be35 : mov dh, bl ; call qword ptr [rax]
0x00000000007f3495 : mov dh, byte ptr [rbp + 5] ; retf
0x00000000006789d6 : mov dh, byte ptr [rdx] ; mov byte ptr [rdi + rcx], sil ; jne 0x6789c9 ; ret
0x0000000000678998 : mov dh, byte ptr [rdx] ; ret
0x00000000006914b7 : mov dh, cl ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000004321e2 : mov dh, cl ; sub byte ptr [rax], al ; leave ; ret
0x0000000000413ec4 : mov dil, dil ; dec ecx ; ret
0x00000000004236c5 : mov dil, r15b ; dec ecx ; ret
0x00000000007266c7 : mov dl, 0 ; retf 0x45a2
0x000000000055edab : mov dl, 0x12 ; add bl, ch ; ret 0x8348
0x00000000005a9470 : mov dl, 0x12 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000057337d : mov dl, 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005248cc : mov dl, 0x15 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000051601f : mov dl, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000464924 : mov dl, 0x21 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004553f0 : mov dl, 0x22 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000444883 : mov dl, 0x23 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000483630 : mov dl, 0x23 ; add cl, cl ; ret
0x0000000000463322 : mov dl, 0x25 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004654c1 : mov dl, 0x25 ; add cl, cl ; ret
0x000000000042476c : mov dl, 0x26 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000425af3 : mov dl, 0x27 ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x8948
0x0000000000404898 : mov dl, 0x27 ; add byte ptr [rcx], dh ; test byte ptr [rcx + rcx*4 - 0x19], 0xe8 ; retf
0x00000000006a7635 : mov dl, 0x35 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000061d467 : mov dl, 0x3e ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4847
0x000000000076fe78 : mov dl, 0x43 ; leave ; call qword ptr [rdx]
0x00000000005fad85 : mov dl, 0x48 ; add esp, 8 ; ret
0x00000000005075f6 : mov dl, 0x4f ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000006f76a1 : mov dl, 0x51 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret 0x51
0x00000000004b76bc : mov dl, 0x54 ; add bh, bh ; ror cl, 1 ; ret
0x0000000000755228 : mov dl, 0x6b ; iretd ; call qword ptr [rdi]
0x000000000069fe58 : mov dl, 0x75 ; in eax, 0x5b ; ret
0x0000000000722bfe : mov dl, 0x77 ; retf
0x0000000000744b74 : mov dl, 0x9a ; out dx, al ; call rax
0x00000000005c607a : mov dl, 0xb ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b5e7c : mov dl, 0xb6 ; or al, 0 ; call qword ptr [rip + 0x44ca62]
0x00000000007234a7 : mov dl, 0xb9 ; ret 0x5ca1
0x00000000005b587c : mov dl, 0xc ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007ad181 : mov dl, 0xc5 ; call qword ptr [rdx]
0x00000000005d990b : mov dl, 0xc9 ; ret
0x00000000004819fa : mov dl, 0xce ; and eax, dword ptr [rax] ; leave ; ret
0x0000000000756811 : mov dl, 0xcf ; jmp qword ptr [rbx]
0x00000000005f948e : mov dl, 0xd ; add byte ptr [rax - 0x77], cl ; ret
0x000000000075a821 : mov dl, 0xd0 ; call rsp
0x000000000076b811 : mov dl, 0xd9 ; call qword ptr [rcx]
0x000000000076b829 : mov dl, 0xd9 ; jmp qword ptr [rbx]
0x000000000073c905 : mov dl, 0xdf ; call qword ptr [rax]
0x000000000073c8f5 : mov dl, 0xdf ; call rax
0x000000000078dc41 : mov dl, 0xe1 ; jmp qword ptr [rax]
0x00000000005c8a25 : mov dl, 0xe3 ; dec dword ptr [rax + 0x63] ; retf
0x000000000073f365 : mov dl, 0xe3 ; jmp rax
0x000000000074064d : mov dl, 0xe5 ; jmp qword ptr [rax]
0x0000000000797c21 : mov dl, 0xe5 ; jmp rdx
0x000000000079c709 : mov dl, 0xe7 ; call qword ptr [rdi]
0x0000000000741cf5 : mov dl, 0xe7 ; jmp qword ptr [rax]
0x0000000000579c3c : mov dl, 0xe8 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000411d2e : mov dl, 0xe9 ; add byte ptr es:[rax - 0x77], cl ; ret
0x0000000000604490 : mov dl, 0xe9 ; ret
0x00000000007ae819 : mov dl, 0xed ; jmp qword ptr [rax]
0x00000000007ae8b1 : mov dl, 0xed ; jmp qword ptr [rcx]
0x00000000007ae781 : mov dl, 0xed ; jmp qword ptr [rdi]
0x00000000007b7189 : mov dl, 0xef ; call qword ptr [rbx]
0x00000000007b7051 : mov dl, 0xef ; call qword ptr [rdi]
0x00000000007b7151 : mov dl, 0xef ; jmp qword ptr [rcx]
0x00000000007cdc8d : mov dl, 0xf ; add eax, 0xbc0011ea ; sysenter
0x000000000044fbc5 : mov dl, 0xfe ; dec ecx ; ret
0x000000000041524f : mov dl, 0xff ; dec ecx ; ret
0x000000000059bfa3 : mov dl, 1 ; add rsp, 8 ; ret
0x000000000051913e : mov dl, 1 ; mov edx, edx ; pop rbx ; ret
0x000000000051aeb9 : mov dl, 1 ; ret
0x0000000000721bb2 : mov dl, 2 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x1ba9
0x00000000007dfa28 : mov dl, 2 ; sldt word ptr [rax] ; ret
0x0000000000645819 : mov dl, 3 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000679467 : mov dl, 5 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007fc029 : mov dl, 5 ; add dword ptr [rdi + 0x404], esp ; retf
0x000000000074b6b9 : mov dl, 8 ; add byte ptr [rax + 0x29], al ; cli ; call qword ptr [rax]
0x000000000074b6a9 : mov dl, 8 ; add byte ptr [rax], al ; sub edx, edi ; jmp rax
0x00000000005270c4 : mov dl, ah ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000007f5606 : mov dl, byte ptr [rax] ; add al, ah ; syscall
0x00000000005cbcc8 : mov dl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004e9042 : mov dl, byte ptr [rbp + 0x1d] ; add byte ptr [rax - 0x77], cl ; ret 0x2c7
0x000000000055b2d8 : mov dl, byte ptr [rbx + 0x12] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000049f812 : mov dl, byte ptr [rcx] ; and al, byte ptr [rax] ; leave ; ret
0x00000000005087f9 : mov dl, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005abd24 : mov dl, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000565dd1 : mov dl, byte ptr [rip + 0x615ff00] ; retf
0x00000000007388c8 : mov dl, cl ; add al, byte ptr [rax] ; mov eax, 0xb0ffd676 ; retf 2
0x000000000073636d : mov dl, cl ; call qword ptr [rax]
0x0000000000527019 : mov dl, cl ; mov rax, rsi ; add rsp, 8 ; ret
0x00000000005c6839 : mov dl, cl ; pop rbx ; ret
0x0000000000505612 : mov ds, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000077d169 : mov ds, ebp ; call qword ptr [rbx]
0x000000000073b215 : mov ds, ebp ; jmp qword ptr [rax]
0x00000000006488d6 : mov ds, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x2948
0x0000000000739f4d : mov ds, ecx ; call qword ptr [rax]
0x00000000005c4fd1 : mov ds, edx ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3145
0x000000000076f729 : mov ds, edx ; jmp qword ptr [rsi]
0x0000000000479a9b : mov ds, word ptr [r8] ; call rax
0x000000000043901e : mov ds, word ptr [rax + 0x28] ; add cl, cl ; ret
0x0000000000479a62 : mov ds, word ptr [rax] ; call rax
0x0000000000726732 : mov ds, word ptr [rcx - 0x46121c9c] ; add dh, dl ; retf
0x000000000072338b : mov ds, word ptr [rdi - 0x22] ; mov dh, 0xeb ; ret 0x8e09
0x00000000004c77e9 : mov ds, word ptr [rdi] ; add cl, cl ; ret
0x00000000006b5fc3 : mov ds, word ptr [rsi - 0x7cfffff9] ; ret 0x4801
0x00000000004d780d : mov ds, word ptr [rsi] ; add cl, cl ; ret
0x0000000000668022 : mov dword ptr [0xfffffffffffffff8], edi ; ret
0x0000000000690087 : mov dword ptr [r10 + 0x10], eax ; ret
0x00000000005f7d48 : mov dword ptr [r10 + 0x14], eax ; ret
0x00000000006b6e72 : mov dword ptr [r10 + 0x22], eax ; ret
0x00000000006b6eb6 : mov dword ptr [r10 + 0x22], edx ; add rsp, 0x18 ; ret
0x00000000006d1338 : mov dword ptr [r10 + 0x24], 1 ; ret
0x00000000006d13c3 : mov dword ptr [r10 + 0x24], edi ; ret
0x00000000005a79a3 : mov dword ptr [r14 + 4], eax ; call 0x403c76
0x00000000004511b1 : mov dword ptr [rax + 0x10], 0 ; leave ; ret
0x000000000044fb64 : mov dword ptr [rax + 0x10], 0 ; pop rbp ; ret
0x000000000061d618 : mov dword ptr [rax + 0x10], 0x71b8d8 ; pop rbp ; ret
0x000000000052c532 : mov dword ptr [rax + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004cc9c0 : mov dword ptr [rax + 0x10], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000059c5ac : mov dword ptr [rax + 0x10], ecx ; add rsp, 8 ; ret
0x00000000006a552d : mov dword ptr [rax + 0x10], edx ; fstp xword ptr [rax] ; ret
0x00000000004517a8 : mov dword ptr [rax + 0x10], edx ; leave ; ret
0x0000000000442e05 : mov dword ptr [rax + 0x10], edx ; pop rbp ; ret
0x00000000006a89ca : mov dword ptr [rax + 0x10], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006a5547 : mov dword ptr [rax + 0x10], edx ; ret
0x000000000066cee7 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax], rcx ; ret
0x000000000052243e : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rsi], rax ; ret
0x000000000054a08c : mov dword ptr [rax + 0x10], esi ; ret
0x0000000000414fde : mov dword ptr [rax + 0x18], 0 ; leave ; ret
0x00000000004116bf : mov dword ptr [rax + 0x18], 0 ; pop rbp ; ret
0x00000000005386b0 : mov dword ptr [rax + 0x18], edx ; add rsp, 0x28 ; ret
0x000000000040df47 : mov dword ptr [rax + 0x18], edx ; pop rbp ; ret
0x000000000054f748 : mov dword ptr [rax + 0x18], esi ; pop rbx ; pop r13 ; pop r14 ; ret
0x0000000000676121 : mov dword ptr [rax + 0x1d0], edi ; ret
0x0000000000676061 : mov dword ptr [rax + 0x1d8], edi ; ret
0x000000000061d5ea : mov dword ptr [rax + 0x20], 0x71b8d8 ; pop rbp ; ret
0x000000000066cf7c : mov dword ptr [rax + 0x20], eax ; mov qword ptr [r8 + 0x28], r8 ; ret
0x000000000066cf61 : mov dword ptr [rax + 0x20], eax ; mov qword ptr [r8 + 0x28], rax ; ret
0x00000000004505d2 : mov dword ptr [rax + 0x20], ecx ; mov rax, rdx ; leave ; ret
0x00000000005075a2 : mov dword ptr [rax + 0x20], edx ; add rsp, 0x38 ; ret
0x00000000006bf678 : mov dword ptr [rax + 0x20], edx ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000066cf65 : mov dword ptr [rax + 0x28], eax ; ret
0x000000000061b980 : mov dword ptr [rax + 0x28], ecx ; mov rax, rdx ; leave ; ret
0x000000000051dec4 : mov dword ptr [rax + 0x28], edx ; add rsp, 0x38 ; ret
0x000000000052b0fb : mov dword ptr [rax + 0x28], edx ; pop rbx ; ret
0x000000000052a2a7 : mov dword ptr [rax + 0x28], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006625f5 : mov dword ptr [rax + 0x30], esi ; xor eax, eax ; ret
0x00000000004109a1 : mov dword ptr [rax + 0x38], edx ; pop rbp ; ret
0x00000000006acc54 : mov dword ptr [rax + 0x38], edx ; sub rsp, -0x80 ; pop rbx ; ret
0x00000000004209f1 : mov dword ptr [rax + 0x40], edx ; pop rbp ; ret
0x000000000065e778 : mov dword ptr [rax + 0x50], 0 ; xor eax, eax ; ret
0x00000000006920fa : mov dword ptr [rax + 0x64], edi ; add rsp, 8 ; ret
0x00000000006921da : mov dword ptr [rax + 0x68], edi ; add rsp, 8 ; ret
0x0000000000662721 : mov dword ptr [rax + 0xac], eax ; xor eax, eax ; ret
0x0000000000662720 : mov dword ptr [rax + 0xac], r8d ; xor eax, eax ; ret
0x00000000006d1229 : mov dword ptr [rax + 2], edi ; ret
0x000000000064c26d : mov dword ptr [rax + 3], edx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040bff8 : mov dword ptr [rax + 8], 0 ; leave ; ret
0x0000000000689afe : mov dword ptr [rax + 8], 0 ; pop rbx ; ret
0x00000000005a3b74 : mov dword ptr [rax + 8], 0x70dd18 ; jne 0x5a3b61 ; ret
0x000000000066c034 : mov dword ptr [rax + 8], 0x724ac0 ; jne 0x66c021 ; ret
0x0000000000674014 : mov dword ptr [rax + 8], 0x725cec ; jne 0x674001 ; ret
0x00000000006c9676 : mov dword ptr [rax + 8], ebx ; pop rbx ; ret
0x000000000066ce31 : mov dword ptr [rax + 8], ecx ; ret
0x000000000054a095 : mov dword ptr [rax + 8], edi ; ret
0x000000000054b9aa : mov dword ptr [rax + 8], edx ; add rsp, 8 ; ret
0x000000000041370f : mov dword ptr [rax + 8], edx ; leave ; ret
0x000000000066cec5 : mov dword ptr [rax + 8], edx ; mov qword ptr [rax + 0x10], rsi ; ret
0x000000000066cdd6 : mov dword ptr [rax + 8], edx ; mov qword ptr [rsi + 8], rcx ; ret
0x000000000061a5b7 : mov dword ptr [rax + 8], edx ; pop rbp ; ret
0x000000000052220e : mov dword ptr [rax + 8], esi ; mov qword ptr [rsi], rax ; ret
0x00000000006a898f : mov dword ptr [rax + 8], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000066b84b : mov dword ptr [rax + rax], ecx ; add byte ptr [rax], al ; jne 0x66b85f ; ret
0x000000000066b86b : mov dword ptr [rax + rax], ecx ; add byte ptr [rax], al ; jne 0x66b87f ; ret
0x00000000006735dc : mov dword ptr [rax + rax], ecx ; add byte ptr [rcx], al ; ret
0x00000000007693d4 : mov dword ptr [rax + rax], ecx ; add byte ptr [rsp], al ; ret 0x7c
0x0000000000639f43 : mov dword ptr [rax + rax], edi ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000058ef40 : mov dword ptr [rax + rcx*4], esi ; mov dword ptr [rdi + 0x10], edx ; ret
0x00000000005855d1 : mov dword ptr [rax + rdx*4], ecx ; add rsp, 8 ; ret
0x000000000051aff1 : mov dword ptr [rax + rdx*8], ecx ; add rsp, 8 ; ret
0x000000000054acb1 : mov dword ptr [rax + rsi + 0x18], ecx ; add rsp, 8 ; ret
0x0000000000585587 : mov dword ptr [rax + rsi*4], edx ; add rsp, 8 ; ret
0x000000000068fb6b : mov dword ptr [rax + rsi*8 - 4], edx ; ret
0x000000000068fab5 : mov dword ptr [rax - 0x10], ecx ; add rsp, 8 ; ret
0x00000000006a3841 : mov dword ptr [rax - 0x39], ecx ; retf 0x10
0x00000000006a3854 : mov dword ptr [rax - 0x39], ecx ; retf 0x18
0x00000000006a3867 : mov dword ptr [rax - 0x39], ecx ; retf 0x20
0x000000000050aeb3 : mov dword ptr [rax - 0x76b7ffe4], ebx ; ret
0x00000000004f880a : mov dword ptr [rax - 0x77], ecx ; ret
0x0000000000568c6d : mov dword ptr [rax - 8], ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006b22fb : mov dword ptr [rax - 8], esi ; pop rbx ; ret
0x00000000006a4129 : mov dword ptr [rax*8 + 0xa09d78], edi ; ret
0x00000000006a8533 : mov dword ptr [rax*8 + 0xa09ec0], edi ; ret
0x00000000006a84ed : mov dword ptr [rax*8 + 0xa09ec0], edx ; ret
0x0000000000667702 : mov dword ptr [rax], 0x483b9aca ; add eax, esi ; ret
0x0000000000455aaa : mov dword ptr [rax], 0x6dec80 ; pop rbp ; ret
0x0000000000455c14 : mov dword ptr [rax], 0x6dee00 ; pop rbp ; ret
0x0000000000456146 : mov dword ptr [rax], 0x6def40 ; pop rbp ; ret
0x00000000005a3baa : mov dword ptr [rax], 0x70dd18 ; jne 0x5a3b98 ; ret
0x000000000052fa0a : mov dword ptr [rax], 0x75000000 ; out dx, eax ; ret
0x00000000004c8dbb : mov dword ptr [rax], 0x89480000 ; ret
0x000000000067f974 : mov dword ptr [rax], 0x9e0f0000 ; ret 0x8441
0x0000000000757eed : mov dword ptr [rax], 0xcfe2be00 ; call qword ptr [rbx]
0x0000000000757ead : mov dword ptr [rax], 0xcfe2c000 ; call qword ptr [rcx]
0x0000000000757e8d : mov dword ptr [rax], 0xcfe2ce00 ; call qword ptr [rcx]
0x0000000000757e4d : mov dword ptr [rax], 0xcfe2de00 ; jmp qword ptr [rax]
0x000000000054b7be : mov dword ptr [rax], eax ; add rsp, 8 ; ret
0x0000000000506fb6 : mov dword ptr [rax], ebx ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000479fa6 : mov dword ptr [rax], ebx ; call rax
0x00000000006bfacb : mov dword ptr [rax], ebx ; pop rbx ; ret
0x000000000045070c : mov dword ptr [rax], ecx ; leave ; ret
0x000000000066ceeb : mov dword ptr [rax], ecx ; ret
0x000000000041f1cd : mov dword ptr [rax], edx ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x00000000007d3227 : mov dword ptr [rax], edx ; add ch, cl ; syscall
0x0000000000538cb5 : mov dword ptr [rax], edx ; add rsp, 0x18 ; ret
0x000000000053e6c5 : mov dword ptr [rax], edx ; add rsp, 8 ; ret
0x0000000000450443 : mov dword ptr [rax], edx ; leave ; ret
0x000000000066ce2e : mov dword ptr [rax], edx ; mov qword ptr [rax + 8], rcx ; ret
0x000000000040c1c9 : mov dword ptr [rax], edx ; pop rbp ; ret
0x000000000068f039 : mov dword ptr [rax], esi ; ret
0x000000000050f948 : mov dword ptr [rbp + 0x10], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000586c99 : mov dword ptr [rbp + 0x10], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000632232 : mov dword ptr [rbp + 0x10], esp ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000582053 : mov dword ptr [rbp + 0x18], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000050855c : mov dword ptr [rbp + 0x18], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000540096 : mov dword ptr [rbp + 0x20], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000005074f1 : mov dword ptr [rbp + 0x20], eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000065c51b : mov dword ptr [rbp + 0x28], eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000051ddd9 : mov dword ptr [rbp + 0x28], eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000663f8c : mov dword ptr [rbp + 0x68], edx ; mov edx, 0x1730 ; call rax
0x0000000000507163 : mov dword ptr [rbp + 8], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000510006 : mov dword ptr [rbp + 8], ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000006a3339 : mov dword ptr [rbp + 8], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004eee1e : mov dword ptr [rbp - 0x10], eax ; leave ; ret
0x000000000040dbd7 : mov dword ptr [rbp - 0x10], eax ; mov qword ptr [rbp - 8], rdx ; leave ; ret
0x0000000000455d74 : mov dword ptr [rbp - 0x10], eax ; mov qword ptr [rbp - 8], rdx ; pop rbp ; ret
0x000000000047f0a5 : mov dword ptr [rbp - 0x10], edx ; mov eax, 0x140 ; pop rbp ; ret
0x000000000047f47f : mov dword ptr [rbp - 0x10], edx ; mov eax, 0x180 ; pop rbp ; ret
0x000000000047ea2b : mov dword ptr [rbp - 0x10], edx ; mov eax, 0x80 ; pop rbp ; ret
0x000000000047fd33 : mov dword ptr [rbp - 0x10], edx ; mov eax, 0xc0 ; pop rbp ; ret
0x000000000066ae59 : mov dword ptr [rbp - 0x10], esi ; mov dword ptr [rbp - 0x14], edx ; nop ; pop rbp ; ret
0x0000000000455acb : mov dword ptr [rbp - 0x10], esi ; mov dword ptr [rbp - 0x14], edx ; pop rbp ; ret
0x0000000000455b1b : mov dword ptr [rbp - 0x10], esi ; mov eax, 1 ; pop rbp ; ret
0x000000000066ab78 : mov dword ptr [rbp - 0x10], esi ; nop ; pop rbp ; ret
0x00000000006966c3 : mov dword ptr [rbp - 0x140], eax ; call qword ptr [rip + 0x36c219]
0x000000000066ae5c : mov dword ptr [rbp - 0x14], edx ; nop ; pop rbp ; ret
0x0000000000455ace : mov dword ptr [rbp - 0x14], edx ; pop rbp ; ret
0x000000000047bc07 : mov dword ptr [rbp - 0x18], eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000006a4068 : mov dword ptr [rbp - 0x18], edx ; mov rax, qword ptr [rbp - 0x20] ; nop ; pop rbp ; ret
0x000000000047f3fe : mov dword ptr [rbp - 0x18], edx ; pop rbp ; ret
0x00000000005c7728 : mov dword ptr [rbp - 0x1a8], edx ; call 0x403a08
0x00000000005c7727 : mov dword ptr [rbp - 0x1a8], r10d ; call 0x403a09
0x0000000000483ade : mov dword ptr [rbp - 0x28], eax ; mov rax, qword ptr [rbp - 0x28] ; nop ; leave ; ret
0x0000000000412661 : mov dword ptr [rbp - 0x30], eax ; call 0x6be895
0x0000000000549449 : mov dword ptr [rbp - 0x358], esp ; call 0x5a5f58
0x0000000000548fb1 : mov dword ptr [rbp - 0x360], esp ; call 0x5a5a58
0x00000000005f52ef : mov dword ptr [rbp - 0x38], edx ; call 0x681537
0x0000000000695e60 : mov dword ptr [rbp - 0x3b0], eax ; call qword ptr [rip + 0x36ca7c]
0x00000000004b527b : mov dword ptr [rbp - 0x48], edx ; call 0x681537
0x00000000005125e7 : mov dword ptr [rbp - 0x58], ecx ; call rax
0x0000000000549f8b : mov dword ptr [rbp - 0x76b7ffb5], esp ; ret
0x000000000050dd36 : mov dword ptr [rbp - 0x88], esp ; call 0x5fa808
0x0000000000538a03 : mov dword ptr [rbp - 0xad], eax ; call 0x6c5478
0x0000000000622110 : mov dword ptr [rbp - 0xc], esi ; mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000066ae6a : mov dword ptr [rbp - 0xc], esi ; nop ; pop rbp ; ret
0x00000000006c79f5 : mov dword ptr [rbp - 0xf8], esp ; call 0x403c78
0x000000000043adce : mov dword ptr [rbp - 4], eax ; mov eax, dword ptr [rbp - 4] ; nop ; leave ; ret
0x000000000066ab74 : mov dword ptr [rbp - 4], edi ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000440111 : mov dword ptr [rbp - 8], eax ; leave ; ret
0x00000000004800d7 : mov dword ptr [rbp - 8], eax ; mov rax, qword ptr [rbp - 0x18] ; nop ; leave ; ret
0x000000000066ae67 : mov dword ptr [rbp - 8], edi ; mov dword ptr [rbp - 0xc], esi ; nop ; pop rbp ; ret
0x0000000000415007 : mov dword ptr [rbp - 8], edi ; mov eax, 0x100 ; pop rbp ; ret
0x0000000000413ecf : mov dword ptr [rbp - 8], edi ; mov eax, 0x140 ; pop rbp ; ret
0x00000000004507f9 : mov dword ptr [rbp - 8], edi ; mov eax, 0x180 ; pop rbp ; ret
0x000000000061bbb7 : mov dword ptr [rbp - 8], edi ; mov eax, 0x1c0 ; pop rbp ; ret
0x0000000000455ab7 : mov dword ptr [rbp - 8], edi ; mov eax, 0x40 ; pop rbp ; ret
0x00000000004136c7 : mov dword ptr [rbp - 8], edi ; mov eax, 0x80 ; pop rbp ; ret
0x00000000004511d9 : mov dword ptr [rbp - 8], edi ; mov eax, 0xc0 ; pop rbp ; ret
0x0000000000450715 : mov dword ptr [rbp - 8], edi ; mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x000000000066ac37 : mov dword ptr [rbp - 8], edi ; nop ; pop rbp ; ret
0x000000000040ba6b : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040dbdb : mov dword ptr [rbp - 8], edx ; leave ; ret
0x000000000040d844 : mov dword ptr [rbp - 8], edx ; mov rax, qword ptr [rbp - 8] ; nop ; pop rbp ; ret
0x0000000000455d78 : mov dword ptr [rbp - 8], edx ; pop rbp ; ret
0x0000000000517211 : mov dword ptr [rbp*8 + 0x20], eax ; call 0x403c79
0x00000000006cdfb1 : mov dword ptr [rbp], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000429f90 : mov dword ptr [rbp], ebx ; call rax
0x000000000050c99b : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000508e0f : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000005048ce : mov dword ptr [rbx + 0x10], eax ; pop rbx ; ret
0x000000000043bd4f : mov dword ptr [rbx + 0x10], edx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000066cfd5 : mov dword ptr [rbx + 0x10], edx ; pop rbx ; ret
0x000000000052e7e0 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x000000000051e8c1 : mov dword ptr [rbx + 0x18], eax ; call 0x51b2f5
0x000000000057794f : mov dword ptr [rbx + 0x18], eax ; call 0x573ba5
0x00000000005c3b38 : mov dword ptr [rbx + 0x18], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000005412c6 : mov dword ptr [rbx + 0x20], 0 ; pop rbx ; ret
0x00000000005426b8 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006beb74 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x0000000000524540 : mov dword ptr [rbx + 0x20], ebp ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000630123 : mov dword ptr [rbx + 0x24], 0 ; pop rbx ; ret
0x00000000006d61af : mov dword ptr [rbx + 0x28], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000524117 : mov dword ptr [rbx + 0x28], edx ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000006a9b8b : mov dword ptr [rbx + 0x30], eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000005291d5 : mov dword ptr [rbx + 0x44], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005c68b4 : mov dword ptr [rbx + 0x458], eax ; pop rbx ; ret
0x00000000005b8451 : mov dword ptr [rbx + 0x460], eax ; pop rbx ; ret
0x00000000006c05a2 : mov dword ptr [rbx + 0x48], 0 ; pop rbx ; ret
0x00000000006ab6b6 : mov dword ptr [rbx + 0x50], eax ; add rsp, 0x30 ; pop rbx ; ret
0x000000000068e80e : mov dword ptr [rbx + 0x58], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000691a8a : mov dword ptr [rbx + 0x60], 1 ; pop rbx ; ret
0x000000000053b63a : mov dword ptr [rbx + 8], 0 ; pop rbx ; ret
0x00000000006c70a9 : mov dword ptr [rbx + 8], 0xffffffff ; pop rbx ; ret
0x00000000006c8407 : mov dword ptr [rbx + 8], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000630646 : mov dword ptr [rbx + 8], eax ; add rsp, 0x50 ; pop rbx ; ret
0x000000000066cfd1 : mov dword ptr [rbx + 8], eax ; mov qword ptr [rbx + 0x10], rdx ; pop rbx ; ret
0x00000000005fbcc6 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000006b3e8d : mov dword ptr [rbx + 8], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000066d006 : mov dword ptr [rbx + 8], edx ; pop rbx ; ret
0x00000000006c8567 : mov dword ptr [rbx + rcx*4 + 0x48], edx ; add rsp, 0x30 ; pop rbx ; ret
0x00000000007f7041 : mov dword ptr [rbx - 0x59ffc030], ebx ; sbb al, 6 ; retf 0x3e
0x00000000004f876d : mov dword ptr [rbx - 0x76b7ffe8], ecx ; ret
0x00000000006d6a8d : mov dword ptr [rbx - 0xa], ecx ; push 0x1cf1daf2 ; retf -0x903
0x000000000047eea7 : mov dword ptr [rbx - 1], edx ; dec ecx ; ret
0x00000000006c70fd : mov dword ptr [rbx], 0xffffffff ; pop rbx ; ret
0x00000000006c7db5 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000006cc456 : mov dword ptr [rbx], eax ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000626d7c : mov dword ptr [rbx], eax ; add rsp, 0x50 ; pop rbx ; ret
0x00000000006588a2 : mov dword ptr [rbx], eax ; mov eax, edx ; pop rbx ; ret
0x000000000066d003 : mov dword ptr [rbx], eax ; mov qword ptr [rbx + 8], rdx ; pop rbx ; ret
0x00000000005f858d : mov dword ptr [rbx], eax ; mov rdi, rbp ; call 0x674837
0x000000000053e588 : mov dword ptr [rbx], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006cd4a6 : mov dword ptr [rbx], edx ; add rsp, 0x10 ; pop rbx ; ret
0x000000000053c8bb : mov dword ptr [rcx + 0x10], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006bc5bd : mov dword ptr [rcx + 0x18], eax ; ret
0x000000000066cf47 : mov dword ptr [rcx + 0x20], eax ; ret
0x000000000066cd45 : mov dword ptr [rcx + 0x28], 0 ; ret
0x00000000006bc487 : mov dword ptr [rcx + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000007f9b4e : mov dword ptr [rcx + rax + 0x513e320], edx ; retf 0x18a
0x0000000000519d3c : mov dword ptr [rcx + rax*8 + 0x10], edx ; add rsp, 8 ; ret
0x000000000050fbd8 : mov dword ptr [rcx + rax*8], 0 ; jne 0x50fbd9 ; ret
0x000000000052f9d8 : mov dword ptr [rcx + rax*8], 0 ; jne 0x52f9d9 ; ret
0x000000000052fbf8 : mov dword ptr [rcx + rax*8], 0 ; jne 0x52fbf9 ; ret
0x0000000000597ae8 : mov dword ptr [rcx + rax*8], 0 ; jne 0x597ae9 ; ret
0x00000000006300c8 : mov dword ptr [rcx + rax*8], 0 ; jne 0x6300c9 ; ret
0x0000000000630688 : mov dword ptr [rcx + rax*8], 0 ; jne 0x630689 ; ret
0x000000000066bfe8 : mov dword ptr [rcx + rax*8], 0 ; jne 0x66bfe9 ; ret
0x000000000068e968 : mov dword ptr [rcx + rax*8], 0 ; jne 0x68e969 ; ret
0x000000000068ea58 : mov dword ptr [rcx + rax*8], 0 ; jne 0x68ea59 ; ret
0x000000000068ea98 : mov dword ptr [rcx + rax*8], 0 ; jne 0x68ea99 ; ret
0x000000000068eb98 : mov dword ptr [rcx + rax*8], 0 ; jne 0x68eb99 ; ret
0x00000000006a4168 : mov dword ptr [rcx + rax*8], 0 ; jne 0x6a4169 ; ret
0x00000000006a8298 : mov dword ptr [rcx + rax*8], 0 ; jne 0x6a8299 ; ret
0x00000000006164ee : mov dword ptr [rcx + rsi*8 + 8], edx ; leave ; ret
0x00000000006164ea : mov dword ptr [rcx + rsi*8], eax ; mov qword ptr [rcx + rsi*8 + 8], rdx ; leave ; ret
0x000000000065fbf3 : mov dword ptr [rcx - 0x77], 0x8948505a ; ret
0x00000000006a1cbf : mov dword ptr [rcx], 0x75d73948 ; retf 0x66c3
0x00000000007fa0ad : mov dword ptr [rcx], 0xbb055294 ; ret
0x00000000007352b9 : mov dword ptr [rcx], 0xcf4d6a00 ; jmp rax
0x00000000007352c1 : mov dword ptr [rcx], 0xcf4e4000 ; call qword ptr [rax]
0x0000000000767f35 : mov dword ptr [rcx], 0xd72f3600 ; call qword ptr [rdx]
0x00000000006cc27c : mov dword ptr [rcx], 0xda75c084 ; mov byte ptr [rsi], 0 ; ret
0x00000000005549aa : mov dword ptr [rcx], eax ; add byte ptr [rax], al ; call rax
0x00000000007e8bce : mov dword ptr [rcx], eax ; add byte ptr [rax], al ; wait ; add dword ptr [rdx], eax ; ret
0x00000000005e9f40 : mov dword ptr [rcx], eax ; call rax
0x00000000007cdfcc : mov dword ptr [rcx], eax ; pop qword ptr [rcx] ; call qword ptr [rdi]
0x00000000005484e5 : mov dword ptr [rcx], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006d4301 : mov dword ptr [rcx], edx ; add rsp, 8 ; ret
0x0000000000532128 : mov dword ptr [rdi + 0x10], 0 ; ret
0x000000000053d0d2 : mov dword ptr [rdi + 0x10], 0x6f9de0 ; ret
0x000000000053e665 : mov dword ptr [rdi + 0x10], eax ; add rsp, 8 ; ret
0x000000000054a091 : mov dword ptr [rdi + 0x10], eax ; mov qword ptr [rax + 8], rdi ; ret
0x00000000005bd1d2 : mov dword ptr [rdi + 0x10], eax ; mov qword ptr [rdi + 0x18], rax ; ret
0x00000000006bfe15 : mov dword ptr [rdi + 0x10], eax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000050fb9f : mov dword ptr [rdi + 0x10], eax ; ret
0x000000000054dbc0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], eax ; ret
0x00000000006b2551 : mov dword ptr [rdi + 0x10], edx ; mov qword ptr [rdi + 0x18], rcx ; ret
0x000000000058ef43 : mov dword ptr [rdi + 0x10], edx ; ret
0x0000000000573ffe : mov dword ptr [rdi + 0x10], esi ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000050f731 : mov dword ptr [rdi + 0x10], esi ; ret
0x000000000062cea7 : mov dword ptr [rdi + 0x12d0], esi ; ret
0x000000000062cb41 : mov dword ptr [rdi + 0x12d8], esi ; ret
0x00000000006c6925 : mov dword ptr [rdi + 0x14], 0 ; ret
0x00000000005b6829 : mov dword ptr [rdi + 0x158], esi ; ret
0x0000000000665ee3 : mov dword ptr [rdi + 0x1720], eax ; ret
0x0000000000665d6f : mov dword ptr [rdi + 0x1720], ebx ; pop r14 ; ret
0x0000000000665d6e : mov dword ptr [rdi + 0x1720], r11d ; pop r14 ; ret
0x00000000005b6859 : mov dword ptr [rdi + 0x188], esi ; ret
0x000000000050bce8 : mov dword ptr [rdi + 0x18], 0 ; ret
0x000000000053208d : mov dword ptr [rdi + 0x18], 0x6f30a4 ; ret
0x0000000000542a34 : mov dword ptr [rdi + 0x18], 0x6fac20 ; ret
0x00000000005502dd : mov dword ptr [rdi + 0x18], 0x6fc8b0 ; ret
0x00000000005a55a4 : mov dword ptr [rdi + 0x18], 0x70fa10 ; ret
0x00000000006cc2eb : mov dword ptr [rdi + 0x18], 0xffffffff ; ret
0x000000000054dbb0 : mov dword ptr [rdi + 0x18], eax ; ret
0x000000000054e635 : mov dword ptr [rdi + 0x18], eax ; sub dword ptr [rdx + 0x18], 1 ; ret
0x00000000006b2555 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000006bf374 : mov dword ptr [rdi + 0x18], edx ; add rsp, 8 ; ret
0x0000000000536f46 : mov dword ptr [rdi + 0x18], edx ; ret
0x000000000065e1f1 : mov dword ptr [rdi + 0x18], esi ; mov dword ptr [rdi + 0x20], edx ; ret
0x000000000050b5d1 : mov dword ptr [rdi + 0x18], esi ; ret
0x00000000005589d0 : mov dword ptr [rdi + 0x20], 0 ; ret
0x00000000006b24e3 : mov dword ptr [rdi + 0x20], 1 ; jg 0x6b2539 ; ret
0x00000000006a7d75 : mov dword ptr [rdi + 0x20], eax ; mov qword ptr [rdi + 0x18], rax ; ret
0x00000000005fd1fa : mov dword ptr [rdi + 0x20], eax ; ret
0x0000000000506c0e : mov dword ptr [rdi + 0x20], edx ; ret
0x0000000000558311 : mov dword ptr [rdi + 0x20], esi ; ret
0x0000000000504b1d : mov dword ptr [rdi + 0x28], 0 ; ret
0x0000000000542998 : mov dword ptr [rdi + 0x28], 1 ; ret
0x00000000005418dd : mov dword ptr [rdi + 0x28], eax ; add rsp, 8 ; ret
0x000000000063195b : mov dword ptr [rdi + 0x28], edx ; add rsp, 8 ; ret
0x0000000000518116 : mov dword ptr [rdi + 0x28], edx ; ret
0x0000000000541946 : mov dword ptr [rdi + 0x28], esi ; add rsp, 8 ; ret
0x00000000006a7e11 : mov dword ptr [rdi + 0x28], esi ; ret
0x00000000006bf2c0 : mov dword ptr [rdi + 0x2c], 0 ; ret
0x000000000052db0c : mov dword ptr [rdi + 0x30], 0 ; ret
0x00000000006b2524 : mov dword ptr [rdi + 0x30], eax ; ret
0x000000000054a1d1 : mov dword ptr [rdi + 0x358], esi ; ret
0x00000000006aaae1 : mov dword ptr [rdi + 0x38], 0 ; ret
0x00000000005a8c34 : mov dword ptr [rdi + 0x38], 0x70ff70 ; ret
0x0000000000504f05 : mov dword ptr [rdi + 0x38], 1 ; ret
0x00000000005b6b59 : mov dword ptr [rdi + 0x398], esi ; ret
0x00000000005b5399 : mov dword ptr [rdi + 0x3c8], esi ; ret
0x00000000005b5d59 : mov dword ptr [rdi + 0x3f8], esi ; ret
0x0000000000632dc4 : mov dword ptr [rdi + 0x40], eax ; ret
0x000000000065e1e5 : mov dword ptr [rdi + 0x40], edx ; mov qword ptr [rdi + 0x48], rcx ; ret
0x00000000005b6479 : mov dword ptr [rdi + 0x428], esi ; ret
0x00000000005b5369 : mov dword ptr [rdi + 0x458], esi ; ret
0x00000000005b53f9 : mov dword ptr [rdi + 0x488], esi ; ret
0x000000000065e0de : mov dword ptr [rdi + 0x48], 0 ; ret
0x00000000006aaad8 : mov dword ptr [rdi + 0x48], 0xffffffff ; ret
0x000000000065e1e9 : mov dword ptr [rdi + 0x48], ecx ; ret
0x000000000066b7cc : mov dword ptr [rdi + 0x4e8], eax ; je 0x66b7e0 ; ret
0x00000000005b3fe9 : mov dword ptr [rdi + 0x4e8], esi ; ret
0x00000000005051e9 : mov dword ptr [rdi + 0x50], 0 ; ret
0x0000000000632dc0 : mov dword ptr [rdi + 0x50], ecx ; mov qword ptr [rdi + 0x40], rax ; ret
0x00000000006c6c99 : mov dword ptr [rdi + 0x5c], 0 ; ret
0x00000000005b5999 : mov dword ptr [rdi + 0x5d8], esi ; ret
0x0000000000692583 : mov dword ptr [rdi + 0x60], 1 ; pop rbx ; ret
0x00000000006920a3 : mov dword ptr [rdi + 0x64], esi ; add rsp, 8 ; ret
0x0000000000667a40 : mov dword ptr [rdi + 0x64], esi ; ret
0x0000000000667791 : mov dword ptr [rdi + 0x68], 0 ; ret
0x0000000000692183 : mov dword ptr [rdi + 0x68], esi ; add rsp, 8 ; ret
0x00000000005b72e9 : mov dword ptr [rdi + 0x698], esi ; ret
0x00000000006c6e3d : mov dword ptr [rdi + 0x6c], 0 ; ret
0x00000000005b47fa : mov dword ptr [rdi + 0x728], esi ; ret
0x00000000005b479a : mov dword ptr [rdi + 0x758], esi ; ret
0x00000000005b476a : mov dword ptr [rdi + 0x788], esi ; ret
0x000000000066de0d : mov dword ptr [rdi + 0x78], 0 ; ret
0x000000000066af1c : mov dword ptr [rdi + 0x78], eax ; ret
0x00000000005b47ca : mov dword ptr [rdi + 0x7b8], esi ; ret
0x00000000005b533a : mov dword ptr [rdi + 0x7e8], esi ; ret
0x00000000005b52da : mov dword ptr [rdi + 0x818], esi ; ret
0x00000000005b52aa : mov dword ptr [rdi + 0x848], esi ; ret
0x0000000000674570 : mov dword ptr [rdi + 0x84], esi ; ret
0x00000000005b530a : mov dword ptr [rdi + 0x878], esi ; ret
0x00000000005b64aa : mov dword ptr [rdi + 0x8a8], esi ; ret
0x00000000005b623a : mov dword ptr [rdi + 0x8d8], esi ; ret
0x00000000006d4361 : mov dword ptr [rdi + 0x98], esi ; ret
0x00000000005b55d9 : mov dword ptr [rdi + 0x9f8], esi ; ret
0x00000000005b5d89 : mov dword ptr [rdi + 0xab8], esi ; ret
0x000000000066c898 : mov dword ptr [rdi + 0xc50], edx ; ret
0x00000000006cbb81 : mov dword ptr [rdi + 2], esi ; ret
0x000000000069e552 : mov dword ptr [rdi + 4], 0 ; ret
0x00000000005f94c5 : mov dword ptr [rdi + 4], eax ; add rsp, 8 ; ret
0x0000000000678d27 : mov dword ptr [rdi + 4], eax ; mfence ; ret
0x00000000005f972f : mov dword ptr [rdi + 4], eax ; ret
0x000000000069c8a8 : mov dword ptr [rdi + 4], ebx ; pop rbx ; ret
0x0000000000595f52 : mov dword ptr [rdi + 4], edx ; ret
0x00000000005f964f : mov dword ptr [rdi + 4], esi ; ret
0x00000000005072b3 : mov dword ptr [rdi + 8], 0 ; ret
0x000000000050bbe8 : mov dword ptr [rdi + 8], 0x6f0460 ; ret
0x00000000006740b3 : mov dword ptr [rdi + 8], 0x725cfc ; ret
0x0000000000689a8d : mov dword ptr [rdi + 8], 0xa096e0 ; ret
0x00000000006c67cf : mov dword ptr [rdi + 8], 0xffffffff ; ret
0x00000000005417bc : mov dword ptr [rdi + 8], eax ; ret
0x000000000054db38 : mov dword ptr [rdi + 8], edi ; jne 0x54db47 ; xor eax, eax ; ret
0x000000000050f9ae : mov dword ptr [rdi + 8], edx ; ret
0x000000000050bd5c : mov dword ptr [rdi + 8], esi ; ret
0x00000000006b27fb : mov dword ptr [rdi + rax + 0x3f], esi ; ret
0x00000000006b24bb : mov dword ptr [rdi + rax + 0x4f], 0 ; ret
0x000000000053ed03 : mov dword ptr [rdi + rax*8 + 0x14], 0 ; ret
0x0000000000674595 : mov dword ptr [rdi + rax*8 + 8], edx ; ret
0x000000000052fa08 : mov dword ptr [rdi + rax*8], 0 ; jne 0x52fa09 ; ret
0x0000000000597b18 : mov dword ptr [rdi + rax*8], 0 ; jne 0x597b19 ; ret
0x00000000006a600f : mov dword ptr [rdi + rax*8], 0 ; ret
0x0000000000674591 : mov dword ptr [rdi + rax*8], esi ; mov qword ptr [rdi + rax*8 + 8], rdx ; ret
0x00000000006c6ab0 : mov dword ptr [rdi + rax], 0x40 ; ret
0x000000000050be95 : mov dword ptr [rdi + rdx*8], 0 ; jne 0x50be91 ; ret
0x0000000000558b85 : mov dword ptr [rdi + rdx*8], 0 ; jne 0x558b81 ; ret
0x000000000062b305 : mov dword ptr [rdi + rdx*8], 0 ; jne 0x62b301 ; ret
0x00000000006a41a6 : mov dword ptr [rdi + rdx*8], 0 ; jne 0x6a41a1 ; ret
0x00000000005503aa : mov dword ptr [rdi + rdx], 0 ; jne 0x5503a1 ; ret
0x00000000006c6970 : mov dword ptr [rdi + rdx], 0x40 ; jne 0x6c6961 ; ret
0x00000000006b28f1 : mov dword ptr [rdi + rsi + 0x37], edx ; ret
0x00000000006b28e1 : mov dword ptr [rdi + rsi + 0x3f], edx ; ret
0x000000000050fc3c : mov dword ptr [rdi + rsi + 8], 0 ; ret
0x000000000050fc5c : mov dword ptr [rdi + rsi*8], 0 ; ret
0x00000000006d431b : mov dword ptr [rdi + rsi*8], edx ; add rsp, 8 ; ret
0x0000000000559fb3 : mov dword ptr [rdi - 0x76b7ffe9], esp ; ret
0x000000000068fa9a : mov dword ptr [rdi - 8], eax ; add rsp, 8 ; ret
0x000000000068ef3f : mov dword ptr [rdi*8 + 0xa096f8], eax ; pop rbx ; ret
0x0000000000550371 : mov dword ptr [rdi], 0 ; ret
0x0000000000503a86 : mov dword ptr [rdi], 0x6ee5a0 ; ret
0x0000000000504676 : mov dword ptr [rdi], 0x6ee7a0 ; ret
0x000000000050fbf5 : mov dword ptr [rdi], 0x6f1b20 ; mov dword ptr [rdi + 8], esi ; ret
0x0000000000536dd6 : mov dword ptr [rdi], 0x6f9020 ; ret
0x0000000000539276 : mov dword ptr [rdi], 0x6f9660 ; ret
0x000000000062e1b6 : mov dword ptr [rdi], 0x71e500 ; ret
0x0000000000681a36 : mov dword ptr [rdi], 0x727e20 ; ret
0x00000000006819f6 : mov dword ptr [rdi], 0x727f80 ; ret
0x0000000000685f06 : mov dword ptr [rdi], 0x728cc0 ; ret
0x00000000006a5f76 : mov dword ptr [rdi], 0x72bd60 ; ret
0x00000000006a8c66 : mov dword ptr [rdi], 0x72c1a0 ; ret
0x00000000006b2346 : mov dword ptr [rdi], 0x72cf60 ; ret
0x00000000006bfc16 : mov dword ptr [rdi], 0x730220 ; ret
0x00000000006c6ec6 : mov dword ptr [rdi], 0x731820 ; ret
0x00000000006c6f46 : mov dword ptr [rdi], 0x731b00 ; ret
0x00000000005ede05 : mov dword ptr [rdi], 0x8948000d ; ret 0x8948
0x00000000005f804f : mov dword ptr [rdi], 0xc4834800 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000006c6d60 : mov dword ptr [rdi], 0xffffffff ; ret
0x00000000006cc567 : mov dword ptr [rdi], 2 ; ret
0x0000000000536f43 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 0x18], rdx ; ret
0x0000000000506c0b : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 0x20], rdx ; ret
0x0000000000518113 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 0x28], rdx ; ret
0x000000000050f9ab : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000068ef33 : mov dword ptr [rdi], eax ; pop rbx ; ret
0x0000000000507dd0 : mov dword ptr [rdi], eax ; ret
0x00000000005089ae : mov dword ptr [rdi], edx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000069e550 : mov dword ptr [rdi], esi ; mov dword ptr [rdi + 4], 0 ; ret
0x0000000000595f50 : mov dword ptr [rdi], esi ; mov dword ptr [rdi + 4], edx ; ret
0x000000000065e1d1 : mov dword ptr [rdi], esi ; mov dword ptr [rdi + 8], edx ; ret
0x00000000005260a1 : mov dword ptr [rdi], esi ; ret
0x0000000000427edb : mov dword ptr [rdi], esp ; add byte ptr [rax - 0x77], cl ; ret 0x858b
0x0000000000445c71 : mov dword ptr [rdi], esp ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000065e308 : mov dword ptr [rdi], r8d ; ret
0x0000000000532165 : mov dword ptr [rdx + 0x10], 0 ; jne 0x532151 ; ret
0x0000000000690088 : mov dword ptr [rdx + 0x10], eax ; ret
0x00000000006cb396 : mov dword ptr [rdx + 0x10], ecx ; add rsp, 8 ; ret
0x00000000005f7d49 : mov dword ptr [rdx + 0x14], eax ; ret
0x00000000006cb3de : mov dword ptr [rdx + 0x14], esi ; add rsp, 8 ; ret
0x000000000054e4f7 : mov dword ptr [rdx + 0x18], 0 ; ret
0x00000000006b6e73 : mov dword ptr [rdx + 0x22], eax ; ret
0x00000000006b6eb7 : mov dword ptr [rdx + 0x22], edx ; add rsp, 0x18 ; ret
0x00000000006d1339 : mov dword ptr [rdx + 0x24], 1 ; ret
0x00000000006d13c4 : mov dword ptr [rdx + 0x24], edi ; ret
0x000000000051af86 : mov dword ptr [rdx + 0x28], ecx ; add rsp, 8 ; ret
0x000000000066b7a5 : mov dword ptr [rdx + 0x458], eax ; ret
0x00000000005c4841 : mov dword ptr [rdx + 0x508], ecx ; pop rbx ; ret
0x00000000006b2f1d : mov dword ptr [rdx + 0x9c8], eax ; ret
0x000000000066ab67 : mov dword ptr [rdx + 0xca8], eax ; leave ; ret
0x00000000005132df : mov dword ptr [rdx + 2], ecx ; add rsp, 8 ; ret
0x0000000000632ef2 : mov dword ptr [rdx + 4], eax ; pop rbx ; ret
0x000000000055fd9e : mov dword ptr [rdx + 8], ecx ; pop rbx ; ret
0x00000000006cddb4 : mov dword ptr [rdx + 8], esi ; ret
0x00000000006ad4fc : mov dword ptr [rdx + rax*8 - 8], ecx ; ret
0x000000000069fa2f : mov dword ptr [rdx + rsi*2], ecx ; jne 0x69fa1e ; pop rbx ; ret
0x000000000069fc40 : mov dword ptr [rdx + rsi*2], ecx ; jne 0x69fc2e ; pop rbx ; ret
0x000000000069fa2e : mov dword ptr [rdx + rsi*2], r9d ; jne 0x69fa1f ; pop rbx ; ret
0x000000000069fc3f : mov dword ptr [rdx + rsi*2], r9d ; jne 0x69fc2f ; pop rbx ; ret
0x000000000069fe56 : mov dword ptr [rdx + rsi*4], ecx ; jne 0x69fe46 ; pop rbx ; ret
0x000000000069fe55 : mov dword ptr [rdx + rsi*4], r9d ; jne 0x69fe47 ; pop rbx ; ret
0x000000000072220f : mov dword ptr [rdx - 0x31], ebp ; jbe 0x72222f ; push gs ; retf -0x1e54
0x000000000064606d : mov dword ptr [rdx - 0x76b7fffd], esi ; ret
0x00000000007cee10 : mov dword ptr [rdx], 0x1801c701 ; ret 0x102
0x00000000007c4fe9 : mov dword ptr [rdx], 0x3bb74 ; retf 0x1403
0x0000000000738831 : mov dword ptr [rdx], 0xd6689a00 ; jmp rax
0x0000000000777e3d : mov dword ptr [rdx], 0xdc7bc000 ; jmp qword ptr [rdx]
0x0000000000777e55 : mov dword ptr [rdx], 0xdc7bd800 ; jmp qword ptr [rdx]
0x0000000000737b61 : mov dword ptr [rdx], eax ; add ah, dl ; fcomp st(0), st(3) ; jmp rax
0x00000000004f7ae9 : mov dword ptr [rdx], eax ; add rsp, 8 ; ret
0x00000000005d9f3f : mov dword ptr [rdx], eax ; call rax
0x00000000006cddab : mov dword ptr [rdx], eax ; ret
0x0000000000662633 : mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000000000062bdb7 : mov dword ptr [rdx], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054b756 : mov dword ptr [rdx], ecx ; add rsp, 8 ; ret
0x000000000054b7bb : mov dword ptr [rdx], ecx ; mov qword ptr [r8], rax ; add rsp, 8 ; ret
0x00000000006cddb1 : mov dword ptr [rdx], edi ; mov qword ptr [rdx + 8], rsi ; ret
0x00000000006b295c : mov dword ptr [rdx], edx ; ret
0x0000000000678616 : mov dword ptr [rdx], esi ; mov byte ptr [rdi + rcx], sil ; jne 0x678609 ; ret
0x00000000006785d8 : mov dword ptr [rdx], esi ; ret
0x0000000000495bde : mov dword ptr [rdx], esp ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004503ec : mov dword ptr [rdx], esp ; add cl, cl ; ret
0x00000000007f2494 : mov dword ptr [rdx], esp ; add edi, ebp ; xor al, 5 ; ret 0x3935
0x00000000006c56c1 : mov dword ptr [rdx], r9d ; add rsp, 8 ; ret
0x00000000006d1119 : mov dword ptr [rip + 0x331721], eax ; mfence ; ret
0x00000000006ce070 : mov dword ptr [rip + 0x33f2f6], edi ; ret
0x00000000006bfbe1 : mov dword ptr [rip + 0x342ea1], edi ; ret
0x00000000006bea71 : mov dword ptr [rip + 0x34e269], edi ; ret
0x00000000006bea61 : mov dword ptr [rip + 0x34e271], edi ; ret
0x00000000006a8433 : mov dword ptr [rip + 0x35a22f], ecx ; ret
0x00000000006a83af : mov dword ptr [rip + 0x35a2b3], edx ; mov rax, rdx ; ret
0x00000000006a832e : mov dword ptr [rip + 0x35a334], eax ; ret
0x00000000006a7d15 : mov dword ptr [rip + 0x36218d], eax ; pop rbx ; ret
0x000000000069e537 : mov dword ptr [rip + 0x36b7eb], eax ; pop rbx ; ret
0x000000000069c77e : mov dword ptr [rip + 0x36d45c], eax ; pop rbx ; ret
0x000000000068ed13 : mov dword ptr [rip + 0x3736b7], ecx ; ret
0x000000000068ec8f : mov dword ptr [rip + 0x37373b], edx ; mov rax, rdx ; ret
0x000000000068ebfe : mov dword ptr [rip + 0x3737cc], eax ; ret
0x0000000000688267 : mov dword ptr [rip + 0x38142b], eax ; ret
0x00000000006699ff : mov dword ptr [rip + 0x3962f3], edi ; call 0x675cc8
0x000000000066b7b4 : mov dword ptr [rip + 0x396616], eax ; ret
0x00000000005b1614 : mov dword ptr [rip + 0x3d8b4800], ecx ; retf 0x4545
0x0000000000625119 : mov dword ptr [rip + 0x3da7b9], eax ; pop rbp ; ret
0x000000000062c140 : mov dword ptr [rip + 0x3dc8a2], eax ; mov eax, ebx ; pop rbx ; ret
0x000000000062513b : mov dword ptr [rip + 0x3e3637], eax ; leave ; ret
0x00000000005b7679 : mov dword ptr [rip + 0x44e4a9], edi ; ret
0x00000000005b76aa : mov dword ptr [rip + 0x44e4d8], edi ; ret
0x00000000005b7319 : mov dword ptr [rip + 0x44e7a9], edi ; ret
0x00000000005b6d6a : mov dword ptr [rip + 0x44ec38], edi ; ret
0x00000000005b697a : mov dword ptr [rip + 0x44ef38], edi ; ret
0x00000000005b691a : mov dword ptr [rip + 0x44ef68], edi ; ret
0x00000000005b6949 : mov dword ptr [rip + 0x44ef99], edi ; ret
0x00000000005b68e9 : mov dword ptr [rip + 0x44f029], edi ; ret
0x00000000005b6889 : mov dword ptr [rip + 0x44f0b9], edi ; ret
0x00000000005b5de9 : mov dword ptr [rip + 0x44fc79], edi ; ret
0x00000000005b5d29 : mov dword ptr [rip + 0x44fd09], edi ; ret
0x00000000005b5db9 : mov dword ptr [rip + 0x44fd99], edi ; ret
0x00000000005b53c9 : mov dword ptr [rip + 0x450639], edi ; ret
0x00000000005b49da : mov dword ptr [rip + 0x4511d8], edi ; ret
0x0000000000549890 : mov dword ptr [rip + 0x4b47ca], edi ; mfence ; ret
0x000000000053da91 : mov dword ptr [rip + 0x4c03f9], edi ; ret
0x00000000004ef17f : mov dword ptr [rip + 0x50e18b], eax ; pop rbp ; ret
0x0000000000409bcb : mov dword ptr [rip + 0x5f3a87], eax ; call 0x505e78
0x00000000007a4035 : mov dword ptr [rip - 0x165f5800], eax ; jmp qword ptr [rbx]
0x00000000007a401d : mov dword ptr [rip - 0x165f6000], eax ; call qword ptr [rdi]
0x0000000000741349 : mov dword ptr [rip - 0x190f3000], eax ; call rax
0x00000000004dbf96 : mov dword ptr [rip - 0x70410000], edx ; ret 0x6e
0x00000000005221bd : mov dword ptr [rsi + 0x10], 0 ; ret
0x00000000006c9db8 : mov dword ptr [rsi + 0x10], edi ; movzx eax, al ; mov dword ptr [rsi + 0xc], eax ; ret
0x000000000054dbaa : mov dword ptr [rsi + 0x10], edx ; add eax, 1 ; mov dword ptr [rdi + 0x18], eax ; ret
0x00000000006d606f : mov dword ptr [rsi + 0x28], eax ; ret
0x00000000006605a8 : mov dword ptr [rsi + 0x48], 0 ; xor eax, eax ; ret
0x0000000000722489 : mov dword ptr [rsi + 0x7c], esi ; salc ; out dx, al ; retf 0x6fc4
0x00000000006c9dbe : mov dword ptr [rsi + 0xc], eax ; ret
0x00000000006a8fc0 : mov dword ptr [rsi + 1], 0x45555254 ; ret
0x000000000053e804 : mov dword ptr [rsi + 4], eax ; add rsp, 0x18 ; ret
0x000000000053e782 : mov dword ptr [rsi + 4], eax ; add rsp, 8 ; ret
0x00000000005a79a4 : mov dword ptr [rsi + 4], eax ; call 0x403c75
0x000000000053de8c : mov dword ptr [rsi + 4], eax ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000054a088 : mov dword ptr [rsi + 8], eax ; mov qword ptr [rax + 0x10], rsi ; ret
0x000000000066cdda : mov dword ptr [rsi + 8], ecx ; ret
0x00000000006a8a50 : mov dword ptr [rsi + 8], edi ; mov qword ptr [rdi], rsi ; ret
0x000000000066d40a : mov dword ptr [rsi + 8], edi ; pop rbx ; pop r14 ; ret
0x000000000062efa3 : mov dword ptr [rsi + rax + 8], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000007eb556 : mov dword ptr [rsi + rax], ebx ; ret
0x00000000004c6bc3 : mov dword ptr [rsi + rbx], edi ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005ac0b3 : mov dword ptr [rsi - 0x76b7ffee], eax ; ret
0x00000000006a8578 : mov dword ptr [rsi*8 + 0xa09ec0], edi ; ret
0x0000000000745289 : mov dword ptr [rsi], 0xef482000 ; call qword ptr [rax]
0x00000000006d434b : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x00000000006cdda4 : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 8] ; mov qword ptr [rdx], rax ; ret
0x0000000000522212 : mov dword ptr [rsi], eax ; ret
0x00000000007eebec : mov dword ptr [rsi], eax ; xor dword ptr [rax + rcx + 0x506dc00], ebp ; ret 8
0x00000000006cb785 : mov dword ptr [rsi], ecx ; jne 0x6cb770 ; add rsp, 8 ; ret
0x00000000006b2682 : mov dword ptr [rsi], edx ; add rsp, 8 ; ret
0x00000000006d4a93 : mov dword ptr [rsp + 0x10], ecx ; mov rsi, qword ptr [r15] ; call r14
0x00000000005c0c3e : mov dword ptr [rsp + 0x90], eax ; call 0x5bd719
0x0000000000742c7c : mov dx, bp ; call qword ptr [rax]
0x0000000000681554 : mov eax, 0 ; add rsp, 8 ; ret
0x00000000004238b8 : mov eax, 0 ; call 0x67fb57
0x00000000004238d4 : mov eax, 0 ; call 0x67fb59
0x0000000000433942 : mov eax, 0 ; call 0x67fb6d
0x00000000004847da : mov eax, 0 ; call 0x680acb
0x0000000000484803 : mov eax, 0 ; call 0x680af3
0x00000000004348b7 : mov eax, 0 ; call 0x680b93
0x00000000004e4921 : mov eax, 0 ; call 0x680bbb
0x0000000000425043 : mov eax, 0 ; call 0x681301
0x000000000046e5ec : mov eax, 0 ; call 0x6aa8e7
0x00000000004139a9 : mov eax, 0 ; leave ; ret
0x000000000040cc83 : mov eax, 0 ; nop ; leave ; ret
0x0000000000617b47 : mov eax, 0 ; nop ; nop ; leave ; ret
0x000000000043b615 : mov eax, 0 ; nop ; nop ; pop rbp ; ret
0x000000000048c97a : mov eax, 0 ; nop ; pop rbp ; ret
0x000000000040b23b : mov eax, 0 ; pop rbp ; ret
0x00000000004f43e0 : mov eax, 0x10 ; pop rbp ; ret
0x00000000006a8b20 : mov eax, 0x10 ; ret
0x0000000000518c99 : mov eax, 0x100 ; add rsp, 8 ; ret
0x000000000041500a : mov eax, 0x100 ; pop rbp ; ret
0x0000000000518150 : mov eax, 0x100 ; ret
0x000000000073ff48 : mov eax, 0x1000051d ; or esp, ebp ; call rax
0x00000000007456a0 : mov eax, 0x100006df ; cmpsd dword ptr [rsi], dword ptr [rdi] ; out dx, eax ; call qword ptr [rax]
0x00000000007460a0 : mov eax, 0x10000723 ; xchg eax, ecx ; jmp rax
0x00000000005053b0 : mov eax, 0x10200 ; ret
0x0000000000413ed2 : mov eax, 0x140 ; pop rbp ; ret
0x0000000000506bd0 : mov eax, 0x140 ; ret
0x000000000060ce0b : mov eax, 0x144d231 ; fld dword ptr [rcx + 0x39] ; retf
0x0000000000565d1d : mov eax, 0x15ff0011 ; ret 0x49cb
0x00000000004f434d : mov eax, 0x18 ; pop rbp ; ret
0x00000000004507fc : mov eax, 0x180 ; pop rbp ; ret
0x0000000000506c40 : mov eax, 0x180 ; ret
0x00000000007442e0 : mov eax, 0x1800067d ; fucomi st(5) ; call rax
0x000000000054a1a0 : mov eax, 0x1b00 ; ret
0x0000000000432a89 : mov eax, 0x1be41 ; add byte ptr [rax], al ; call 0x6bed09
0x000000000061bbba : mov eax, 0x1c0 ; pop rbp ; ret
0x0000000000518140 : mov eax, 0x1c0 ; ret
0x0000000000676145 : mov eax, 0x1d0 ; add rsp, 0x18 ; ret
0x0000000000676122 : mov eax, 0x1d0 ; ret
0x0000000000676085 : mov eax, 0x1d8 ; add rsp, 0x18 ; ret
0x0000000000676062 : mov eax, 0x1d8 ; ret
0x0000000000733cb0 : mov eax, 0x1e000444 ; bswap ebp ; call rax
0x0000000000744490 : mov eax, 0x1e000685 ; sbb esi, ebp ; jmp rax
0x00000000004f44b7 : mov eax, 0x20 ; pop rbp ; ret
0x0000000000504e00 : mov eax, 0x200 ; ret
0x00000000006b2268 : mov eax, 0x200000 ; ret
0x000000000073aba0 : mov eax, 0x20000378 ; sbb ebp, ebx ; call rax
0x0000000000743c00 : mov eax, 0x20000656 ; jbe 0x743bfa ; call rax
0x0000000000744080 : mov eax, 0x20000671 ; in eax, dx ; call rax
0x0000000000746378 : mov eax, 0x20000733 ; or esi, ebx ; call rax
0x000000000074a790 : mov eax, 0x2000086f ; xor cl, bh ; call rax
0x00000000007f675c : mov eax, 0x228f070f ; add cl, bl ; syscall
0x0000000000640885 : mov eax, 0x238 ; call 0x4ccb73
0x00000000006c8a85 : mov eax, 0x26 ; cmovne eax, edx ; ret
0x00000000006bfd40 : mov eax, 0x280 ; ret
0x00000000005b8410 : mov eax, 0x28c0 ; ret
0x00000000004a71d9 : mov eax, 0x29489848 ; ret 0x8948
0x00000000004a6315 : mov eax, 0x29bc458b ; ret 0xd089
0x00000000006a5e80 : mov eax, 0x2c0 ; ret
0x000000000073cd20 : mov eax, 0x3000041f ; xor esp, eax ; call rax
0x000000000073d398 : mov eax, 0x3000043e ; mov dh, 0xe0 ; call rax
0x00000000007439b0 : mov eax, 0x3000064a ; in al, dx ; call rax
0x0000000000743e00 : mov eax, 0x30000661 ; mov bl, 0xec ; call rax
0x0000000000745d90 : mov eax, 0x30000715 ; push rsi ; call rax
0x00000000007464f0 : mov eax, 0x3000073a ; cmp esi, ebx ; jmp rax
0x0000000000748008 : mov eax, 0x300007bd ; stosd dword ptr [rdi], eax ; cmc ; jmp rax
0x0000000000748b70 : mov eax, 0x300007f0 ; loope 0x748b74 ; call rax
0x000000000074a260 : mov eax, 0x30000857 ; sar al, cl ; call rax
0x00000000006cc500 : mov eax, 0x31 ; ret
0x000000000062fbd3 : mov eax, 0x310071de ; shr al, 0xae ; syscall
0x000000000062fbc2 : mov eax, 0x310071de ; shr al, 0xbf ; syscall
0x000000000062fbb1 : mov eax, 0x310071de ; shr al, 0xd0 ; syscall
0x000000000062fba0 : mov eax, 0x310071de ; shr al, 0xe1 ; syscall
0x000000000062fb8f : mov eax, 0x310071de ; shr al, 0xf2 ; syscall
0x000000000050d970 : mov eax, 0x340 ; ret
0x000000000073a550 : mov eax, 0x34000355 ; retf
0x0000000000504fb0 : mov eax, 0x380 ; ret
0x000000000059fbc4 : mov eax, 0x39000003 ; ret 0x8c0f
0x00000000004f01b1 : mov eax, 0x3904408b ; ret 0x277e
0x00000000004a62ef : mov eax, 0x39489848 ; ret 0x147d
0x000000000048672e : mov eax, 0x39489848 ; ret 0x8d0f
0x000000000048666a : mov eax, 0x39489848 ; ret 0x8f0f
0x0000000000736628 : mov eax, 0x3a000225 ; retf
0x000000000047f5a1 : mov eax, 0x3f058b48 ; xor ebx, dword ptr [rax] ; call rax
0x0000000000455aba : mov eax, 0x40 ; pop rbp ; ret
0x0000000000536d30 : mov eax, 0x40 ; ret
0x000000000068fe20 : mov eax, 0x400 ; ret
0x00000000006b223e : mov eax, 0x4000 ; cmovge eax, edi ; ret
0x00000000006b2290 : mov eax, 0x4000 ; ret
0x000000000073b0c0 : mov eax, 0x40000393 ; jnp 0x73b0ab ; call rax
0x000000000073db08 : mov eax, 0x40000461 ; cmp ecx, esp ; call rax
0x0000000000746f08 : mov eax, 0x4000076c ; hlt ; call rax
0x0000000000748318 : mov eax, 0x400007c9 ; retf
0x00000000006a4a68 : mov eax, 0x401 ; movapd xmm0, xmm1 ; ret
0x00000000006a4ae8 : mov eax, 0x402 ; movapd xmm0, xmm1 ; ret
0x00000000006caf79 : mov eax, 0x40b304c7 ; add byte ptr [rax], al ; add al, ch ; retf 0x36
0x0000000000739b38 : mov eax, 0x42000321 ; retf -0x28
0x000000000073d2a8 : mov eax, 0x43b ; mov bl, 0xe0 ; call rax
0x00000000006b3b2a : mov eax, 0x44c ; jg 0x6b3b39 ; ret
0x00000000004f4515 : mov eax, 0x48 ; pop rbp ; ret
0x00000000006760bb : mov eax, 0x48000001 ; add esp, 8 ; ret
0x000000000052846b : mov eax, 0x48000001 ; mov edi, ebx ; call 0x6d4749
0x0000000000639154 : mov eax, 0x480003c2 ; add esp, 0x18 ; ret
0x00000000006896d4 : mov eax, 0x48ffffef ; add esp, 0x18 ; ret
0x000000000067fd60 : mov eax, 0x48fffffe ; add esp, 8 ; ret
0x000000000055115d : mov eax, 0x4c000008 ; mov edi, esp ; call rax
0x0000000000733dc8 : mov eax, 0x4c5 ; adc al, 0xcd ; call rax
0x000000000073f850 : mov eax, 0x4fb ; or al, 0xe4 ; call rax
0x000000000073f310 : mov eax, 0x500004e0 ; mov ebx, fs ; call rax
0x0000000000748d78 : mov eax, 0x500007f9 ; adc edi, esi ; call rax
0x00000000007497a8 : mov eax, 0x50000827 ; test al, 0xf7 ; call rax
0x00000000007499e0 : mov eax, 0x50000832 ; fcompi st(7) ; call rax
0x00000000006c6730 : mov eax, 0x540 ; ret
0x00000000004f74a0 : mov eax, 0x580 ; ret
0x000000000068e6ae : mov eax, 0x5b000000 ; pop rbp ; ret
0x00000000005fcb40 : mov eax, 0x5c0 ; ret
0x00000000007420c8 : mov eax, 0x600005c8 ; sbb ebp, eax ; call rax
0x00000000007440e0 : mov eax, 0x673 ; js 0x7440db ; call rax
0x00000000006802a0 : mov eax, 0x6802a0 ; ret
0x00000000006818ce : mov eax, 0x6818ce ; ret
0x0000000000620865 : mov eax, 0x68c48348 ; pop rbx ; pop rbp ; ret
0x00000000004384b6 : mov eax, 0x68fffff6 ; ret
0x000000000043679d : mov eax, 0x68fffff7 ; ret
0x0000000000434ddb : mov eax, 0x68fffffb ; ret
0x00000000006ce0d6 : mov eax, 0x6e ; jg 0x6ce0e8 ; ret
0x000000000072224e : mov eax, 0x6f98f5d9 ; nop ; call rbx
0x00000000007479d0 : mov eax, 0x70000799 ; and al, 0xf5 ; call rax
0x0000000000747f40 : mov eax, 0x700007ba ; movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; call rax
0x0000000000437dc0 : mov eax, 0x70fffff5 ; ret
0x000000000065e240 : mov eax, 0x720738 ; ret
0x00000000006642c0 : mov eax, 0x721500 ; ret
0x0000000000746210 : mov eax, 0x729 ; test al, 0xf2 ; call rax
0x0000000000734df8 : mov eax, 0x7a0001b0 ; mov cl, 0xce ; jmp rax
0x00000000006776f1 : mov eax, 0x7bf0ba00 ; in al, -0x16 ; ret 0x4841
0x0000000000734a78 : mov eax, 0x7c00019f ; sbb ecx, esi ; jmp rax
0x000000000053f0a0 : mov eax, 0x7fffffff ; ret
0x00000000004136ca : mov eax, 0x80 ; pop rbp ; ret
0x00000000005039f0 : mov eax, 0x80 ; ret
0x000000000073c6d0 : mov eax, 0x80000402 ; ja 0x73c6bd ; call rax
0x000000000073e410 : mov eax, 0x8000048e ; adc esp, edx ; call rax
0x0000000000740cc0 : mov eax, 0x80000566 ; xor al, 0xe6 ; call rax
0x0000000000747568 : mov eax, 0x80000788 ; iretd ; hlt ; call rax
0x0000000000749d38 : mov eax, 0x80000842 ; xor al, bh ; call rax
0x00000000007494b8 : mov eax, 0x818 ; je 0x7494bd ; call rax
0x00000000005047d0 : mov eax, 0x8280 ; ret
0x000000000069fd14 : mov eax, 0x850001e8 ; fisttp dword ptr [rax - 0x77] ; ret 0xc7
0x000000000050d389 : mov eax, 0x8548ffff ; ror byte ptr [rdi], 0x95 ; ret 0x1ae9
0x0000000000734608 : mov eax, 0x8800018a ; mov ch, 0xcd ; jmp rax
0x0000000000642376 : mov eax, 0x890003f1 ; ret
0x0000000000605876 : mov eax, 0x890007bc ; ret
0x00000000005c6976 : mov eax, 0x89000bab ; ret
0x000000000058d176 : mov eax, 0x89000f43 ; ret
0x00000000004e5458 : mov eax, 0x8901c083 ; ret 0x8b49
0x00000000004cd882 : mov eax, 0x89480000 ; ret
0x000000000067ac2a : mov eax, 0x89480002 ; ret 0xc148
0x00000000006452a4 : mov eax, 0x89480003 ; ret
0x00000000005c4328 : mov eax, 0x8948000b ; ret
0x0000000000594295 : mov eax, 0x8948000e ; ret
0x0000000000574392 : mov eax, 0x89480010 ; out -0x18, eax ; ret
0x0000000000592d60 : mov eax, 0x89480012 ; ret
0x0000000000535259 : mov eax, 0x89480014 ; ret
0x0000000000524619 : mov eax, 0x89480015 ; ret
0x0000000000558ec0 : mov eax, 0x89480017 ; ret
0x00000000004f8f39 : mov eax, 0x8948001d ; ret
0x000000000045432a : mov eax, 0x89480022 ; ret
0x0000000000424329 : mov eax, 0x89480025 ; ret
0x0000000000462db7 : mov eax, 0x89480025 ; ret 0x8948
0x000000000041f4b2 : mov eax, 0x89480026 ; ret
0x0000000000424f3c : mov eax, 0x89480027 ; ret 0x858b
0x0000000000422d14 : mov eax, 0x89480029 ; ret 0x8948
0x000000000064c29f : mov eax, 0x8948ffdb ; ret
0x000000000074b178 : mov eax, 0x898 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call rax
0x00000000006b2bb4 : mov eax, 0x89fffffd ; ret 0x8948
0x00000000006a70c4 : mov eax, 0x89fffffe ; ret 0x894c
0x00000000005fc037 : mov eax, 0x8b8 ; add byte ptr [rdi], cl ; ret
0x00000000004d9e86 : mov eax, 0x8bffffec ; add byte ptr [rcx], bh ; ret 0x187c
0x00000000004da288 : mov eax, 0x8bffffed ; add byte ptr [rcx], bh ; ret 0x2c7c
0x00000000004f1b17 : mov eax, 0x8bfffffd ; add byte ptr [rcx], bh ; ret 0x2c7c
0x00000000005d2cd5 : mov eax, 0x8bfffffe ; adc byte ptr [rcx], dil ; ret 0x8f0f
0x00000000004f1f8d : mov eax, 0x8bfffffe ; add byte ptr [rcx], bh ; ret 0x187c
0x0000000000740150 : mov eax, 0x90000528 ; sbb ah, ch ; call rax
0x0000000000743cb8 : mov eax, 0x9000065a ; nop ; in al, dx ; call rax
0x0000000000745ee0 : mov eax, 0x9000071d ; test dl, dh ; call rax
0x0000000000746650 : mov eax, 0x9000073f ; push rax ; jmp rax
0x0000000000746e98 : mov eax, 0x9000076a ; hlt ; call rax
0x0000000000748088 : mov eax, 0x900007bf ; scasd eax, dword ptr [rdi] ; cmc ; call rax
0x00000000007482c8 : mov eax, 0x900007c8 ; retf -0xb
0x000000000074a4f8 : mov eax, 0x90000863 ; add cl, bh ; call rax
0x00000000007f3f42 : mov eax, 0x940001c3 ; ret
0x000000000062cb30 : mov eax, 0x9700 ; ret
0x0000000000742c08 : mov eax, 0x9c000608 ; jge 0x742c00 ; jmp rax
0x00000000006914f7 : mov eax, 0xa ; pop rbx ; ret
0x000000000073aac8 : mov eax, 0xa0000375 ; adc ebx, ebp ; call rax
0x000000000073bd10 : mov eax, 0xa00003ce ; jp 0x73bcfc ; call rax
0x000000000073deb0 : mov eax, 0xa0000474 ; jl 0x73de9f ; call rax
0x0000000000740908 : mov eax, 0xa0000554 ; jrcxz 0x7408fb ; call rax
0x0000000000747998 : mov eax, 0xa0000798 ; adc ebp, esi ; call rax
0x0000000000748bb8 : mov eax, 0xa00007f1 ; in al, -0xa ; call rax
0x000000000074a148 : mov eax, 0xa0000852 ; ret 0xfff8
0x00000000006925e0 : mov eax, 0xa02440 ; ret
0x0000000000692620 : mov eax, 0xa02448 ; ret
0x0000000000692600 : mov eax, 0xa02450 ; ret
0x0000000000747f19 : mov eax, 0xa0600007 ; cmc ; call qword ptr [rax]
0x0000000000689b18 : mov eax, 0xa096e0 ; ret
0x00000000006bea50 : mov eax, 0xa0ccc0 ; ret
0x00000000006bea20 : mov eax, 0xa0cce8 ; ret
0x00000000006cd8a0 : mov eax, 0xa0d344 ; ret
0x0000000000738b78 : mov eax, 0xa80002d7 ; retf -0x2a
0x000000000065e250 : mov eax, 0xa9 ; ret
0x000000000043480e : mov eax, 0xacfffffa ; ret
0x00000000006d12d0 : mov eax, 0xb ; ret
0x00000000007419d8 : mov eax, 0xb00005a7 ; jno 0x7419cd ; call rax
0x00000000007475b0 : mov eax, 0xb0000789 ; sal ah, 1 ; call rax
0x00000000004424c5 : mov eax, 0xb045c748 ; retf
0x0000000000413fd5 : mov eax, 0xb058b48 ; jmp 0xffffffffd1404045
0x00000000007b6f6d : mov eax, 0xb0b00006 ; out dx, eax ; jmp qword ptr [rdi]
0x00000000007b6f85 : mov eax, 0xb0c80006 ; out dx, eax ; call qword ptr [rcx]
0x00000000007b6f9d : mov eax, 0xb0d00006 ; out dx, eax ; call qword ptr [rcx]
0x00000000007388cc : mov eax, 0xb0ffd676 ; retf 2
0x00000000007ca83f : mov eax, 0xb101e50a ; syscall
0x0000000000747430 : mov eax, 0xb6000783 ; ret 0xfff4
0x000000000061d3bd : mov eax, 0xb80071 ; add byte ptr [rax], al ; add al, ch ; ret 0x637
0x00000000006235dd : mov eax, 0xb80071 ; add byte ptr [rax], al ; add al, ch ; retf 0x5d5
0x000000000061d851 : mov eax, 0xb80071 ; add byte ptr [rax], al ; add al, ch ; retf 0x632
0x00000000004ef43d : mov eax, 0xbe147500 ; retf
0x0000000000506e79 : mov eax, 0xc0 ; add rsp, 8 ; ret
0x00000000004511dc : mov eax, 0xc0 ; pop rbp ; ret
0x0000000000506c50 : mov eax, 0xc0 ; ret
0x000000000073ad08 : mov eax, 0xc000037e ; xor ebp, ebx ; call rax
0x0000000000740838 : mov eax, 0xc0000550 ; shl ch, cl ; call rax
0x0000000000740c70 : mov eax, 0xc0000565 ; xor ah, dh ; call rax
0x0000000000746698 : mov eax, 0xc0000740 ; push rcx ; call rax
0x0000000000749420 : mov eax, 0xc0000816 ; jno 0x749425 ; call rax
0x000000000074b1c8 : mov eax, 0xc0000899 ; test al, 0xf9 ; call rax
0x00000000005df0d4 : mov eax, 0xc058b48 ; cmp byte ptr [rdx], al ; call rax
0x000000000040d064 : mov eax, 0xc4834890 ; pop rbx ; pop rbp ; ret
0x00000000005d2714 : mov eax, 0xc9000edf ; ret
0x00000000004cca14 : mov eax, 0xc9001f3c ; ret
0x000000000041e614 : mov eax, 0xc9002a20 ; ret
0x00000000005e851e : mov eax, 0xc9fffe69 ; ret
0x0000000000562f30 : mov eax, 0xcc0 ; ret
0x000000000073c050 : mov eax, 0xd00003e2 ; in eax, -0x22 ; call rax
0x000000000073cfd0 : mov eax, 0xd000042d ; jp 0x73cfbe ; call rax
0x00000000007401d8 : mov eax, 0xd000052b ; and ebp, esp ; call rax
0x0000000000745d58 : mov eax, 0xd0000714 ; push rsp ; jmp rax
0x0000000000746540 : mov eax, 0xd000073b ; cmp esi, ebx ; call rax
0x00000000007469c0 : mov eax, 0xd000074d ; test ebx, esi ; call rax
0x0000000000748df0 : mov eax, 0xd00007fb ; sbb edi, esi ; call rax
0x0000000000735b78 : mov eax, 0xd20001f1 ; je 0x735b56 ; jmp rax
0x0000000000738b40 : mov eax, 0xd80002d6 ; ret
0x0000000000684124 : mov eax, 0xd80008e0 ; ret 0x7cd9
0x0000000000682924 : mov eax, 0xd80008f8 ; ret 0x7cd9
0x0000000000744b40 : mov eax, 0xda0006a4 ; xchg eax, ebp ; out dx, al ; jmp rax
0x00000000007faabc : mov eax, 0xda0501a3 ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; ret 0x1a3
0x0000000000451903 : mov eax, 0xdd058b48 ; cvtdq2ps xmm0, xmmword ptr [rax] ; call rax
0x000000000072322a : mov eax, 0xdf154c59 ; cmp al, 0xd1 ; ret 0x85e7
0x000000000073aa18 : mov eax, 0xe0000372 ; or ebx, ebp ; call rax
0x000000000073fe48 : mov eax, 0xe000051a ; or ch, ah ; call rax
0x0000000000741130 : mov eax, 0xe000057b ; mov fs, esi ; call rax
0x000000000053462b : mov eax, 0xe800a03e ; insb byte ptr [rdi], dx ; call qword ptr [rbx]
0x000000000040bbe4 : mov eax, 0xe8c78948 ; ret
0x000000000044f845 : mov eax, 0xe8c78948 ; ret 0x2742
0x000000000066a060 : mov eax, 0xe8c78948 ; retf
0x000000000063babc : mov eax, 0xe8fffffd ; retf
0x0000000000424bf7 : mov eax, 0xe9058b48 ; fcomp qword ptr [rbp] ; call rax
0x0000000000643c5c : mov eax, 0xe9ffdc2e ; retf -0xd
0x00000000007dfc43 : mov eax, 0xece250f ; add bh, ch ; syscall
0x00000000006d2ea3 : mov eax, 0xf ; syscall
0x00000000007406d8 : mov eax, 0xf000054a ; mov bl, 0xe5 ; call rax
0x00000000007424b0 : mov eax, 0xf00005e1 ; sbb al, 0xe9 ; call qword ptr [rax]
0x00000000007477b0 : mov eax, 0xf0000790 ; fdivrp st(4) ; call rax
0x0000000000747d40 : mov eax, 0xf00007ab ; pop rsp ; cmc ; call rax
0x0000000000747fd8 : mov eax, 0xf00007bc ; test al, 0xf5 ; call rax
0x000000000074abd8 : mov eax, 0xf0000883 ; jp 0x74abdf ; call rax
0x000000000061e117 : mov eax, 0xf85d8b48 ; leave ; ret
0x0000000000549c82 : mov eax, 0xfdc3941 ; sahf ; ret 0x8545
0x00000000006609c1 : mov eax, 0xffff0000 ; ret
0x0000000000656249 : mov eax, 0xfffffef ; sahf ; ret 0xc839
0x000000000065e6e0 : mov eax, 0xfffffffa ; ret
0x0000000000660978 : mov eax, 0xfffffffd ; ret
0x000000000065e508 : mov eax, 0xfffffffe ; ret
0x00000000006cd3ec : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000504631 : mov eax, 0xffffffff ; ret
0x00000000004f45d0 : mov eax, 1 ; add rsp, 8 ; ret
0x0000000000525983 : mov eax, 1 ; je 0x525997 ; ret
0x000000000052b163 : mov eax, 1 ; je 0x52b177 ; ret
0x0000000000544e23 : mov eax, 1 ; je 0x544e37 ; ret
0x000000000056ae93 : mov eax, 1 ; je 0x56aea7 ; ret
0x0000000000571983 : mov eax, 1 ; je 0x571997 ; ret
0x000000000058f6c3 : mov eax, 1 ; je 0x58f6d7 ; ret
0x00000000005957c3 : mov eax, 1 ; je 0x5957d7 ; ret
0x00000000005ad823 : mov eax, 1 ; je 0x5ad837 ; ret
0x000000000040d567 : mov eax, 1 ; jmp 0x40d537
0x0000000000410d53 : mov eax, 1 ; jmp 0x410d23
0x000000000041d066 : mov eax, 1 ; jmp 0x41d036
0x0000000000420da6 : mov eax, 1 ; jmp 0x420d76
0x000000000042c04d : mov eax, 1 ; jmp 0x42c01d
0x000000000042f839 : mov eax, 1 ; jmp 0x42f809
0x000000000043d881 : mov eax, 1 ; jmp 0x43d859
0x0000000000448853 : mov eax, 1 ; jmp 0x44882b
0x0000000000459507 : mov eax, 1 ; jmp 0x4594df
0x0000000000462301 : mov eax, 1 ; jmp 0x4622d9
0x000000000046c001 : mov eax, 1 ; jmp 0x46bfd9
0x000000000049c37d : mov eax, 1 ; jmp 0x49c355
0x00000000005cf363 : mov eax, 1 ; jmp 0x5cf333
0x00000000005d4be3 : mov eax, 1 ; jmp 0x5d4bbb
0x00000000005d7f6d : mov eax, 1 ; jmp 0x5d7f3d
0x00000000005dbfce : mov eax, 1 ; jmp 0x5dbf9e
0x00000000005e1abc : mov eax, 1 ; jmp 0x5e1a94
0x00000000005e545e : mov eax, 1 ; jmp 0x5e542e
0x0000000000451d42 : mov eax, 1 ; leave ; ret
0x0000000000613c16 : mov eax, 1 ; nop ; leave ; ret
0x0000000000412613 : mov eax, 1 ; nop ; pop rbp ; ret
0x0000000000451c6a : mov eax, 1 ; pop rbp ; ret
0x0000000000606604 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000554294 : mov eax, 1 ; pop rbx ; ret
0x0000000000517ed0 : mov eax, 1 ; ret
0x0000000000518283 : mov eax, 1 ; test edx, edx ; jle 0x518299 ; ret
0x00000000006d4bd0 : mov eax, 2 ; add rsp, 8 ; ret
0x000000000068e138 : mov eax, 2 ; ret
0x0000000000503a9d : mov eax, 3 ; cmove eax, edi ; ret
0x00000000006ced53 : mov eax, 3 ; je 0x6ced67 ; ret
0x00000000006d11b3 : mov eax, 3 ; ret
0x00000000006d4bc0 : mov eax, 4 ; add rsp, 8 ; ret
0x00000000006cd9c0 : mov eax, 4 ; ret
0x00000000006a8fac : mov eax, 5 ; ret
0x00000000006d4ba1 : mov eax, 8 ; add rsp, 8 ; ret
0x00000000004f439d : mov eax, 8 ; pop rbp ; ret
0x0000000000678db5 : mov eax, dword ptr [r8*4 + 0x726a7c] ; ret
0x00000000004f0c60 : mov eax, dword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; nop ; leave ; ret
0x00000000006a84d9 : mov eax, dword ptr [rax + 0x10] ; mov qword ptr [rdx + 0x10], rax ; ret
0x0000000000442109 : mov eax, dword ptr [rax + 0x10] ; nop ; pop rbp ; ret
0x00000000005044a9 : mov eax, dword ptr [rax + 0x10] ; test al, 1 ; jne 0x5044b9 ; jmp rax
0x00000000005194cd : mov eax, dword ptr [rax + 0x10] ; test al, 1 ; jne 0x5194dd ; jmp rax
0x000000000054aabd : mov eax, dword ptr [rax + 0x10] ; test al, 1 ; jne 0x54aacd ; jmp rax
0x000000000040ee64 : mov eax, dword ptr [rax + 0x18] ; nop ; pop rbp ; ret
0x000000000068f065 : mov eax, dword ptr [rax + 0x18] ; ret
0x0000000000519493 : mov eax, dword ptr [rax + 0x18] ; test al, 1 ; jne 0x5194a3 ; jmp rax
0x000000000054aa83 : mov eax, dword ptr [rax + 0x18] ; test al, 1 ; jne 0x54aa93 ; jmp rax
0x00000000006bfca4 : mov eax, dword ptr [rax + 0x18] ; test al, 1 ; jne 0x6bfcb4 ; jmp rax
0x000000000053fa09 : mov eax, dword ptr [rax + 0x1c] ; ret
0x0000000000676161 : mov eax, dword ptr [rax + 0x1d0] ; ret
0x00000000006760e1 : mov eax, dword ptr [rax + 0x1d8] ; ret
0x000000000068f035 : mov eax, dword ptr [rax + 0x20] ; mov qword ptr [rax], rsi ; ret
0x000000000068eda5 : mov eax, dword ptr [rax + 0x20] ; mov rax, qword ptr [rax] ; ret
0x00000000004420c8 : mov eax, dword ptr [rax + 0x20] ; nop ; pop rbp ; ret
0x00000000005198da : mov eax, dword ptr [rax + 0x20] ; ret
0x00000000006bfcc4 : mov eax, dword ptr [rax + 0x20] ; test al, 1 ; jne 0x6bfcd4 ; jmp rax
0x00000000005290e3 : mov eax, dword ptr [rax + 0x28] ; add rsp, 8 ; ret
0x0000000000618d5e : mov eax, dword ptr [rax + 0x28] ; nop ; pop rbp ; ret
0x00000000005198aa : mov eax, dword ptr [rax + 0x28] ; ret
0x000000000051abf1 : mov eax, dword ptr [rax + 0x28] ; test al, 1 ; jne 0x51ac30 ; mov esi, ebx ; call rax
0x000000000054b44d : mov eax, dword ptr [rax + 0x28] ; test al, 1 ; jne 0x54b48c ; mov esi, ebx ; call rax
0x00000000005682a3 : mov eax, dword ptr [rax + 0x30] ; mov eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000563b8a : mov eax, dword ptr [rax + 0x30] ; mov eax, dword ptr [rax] ; ret
0x000000000051984a : mov eax, dword ptr [rax + 0x30] ; mov rax, qword ptr [rax] ; ret
0x000000000051930d : mov eax, dword ptr [rax + 0x30] ; test al, 1 ; jne 0x51932a ; jmp rax
0x000000000054a90d : mov eax, dword ptr [rax + 0x30] ; test al, 1 ; jne 0x54a92a ; jmp rax
0x000000000054badd : mov eax, dword ptr [rax + 0x30] ; test al, 1 ; jne 0x54bafa ; jmp rax
0x000000000068f9fd : mov eax, dword ptr [rax + 0x30] ; test al, 1 ; jne 0x68fa0d ; jmp rax
0x000000000051950d : mov eax, dword ptr [rax + 0x38] ; test al, 1 ; jne 0x51952a ; jmp rax
0x000000000054aafd : mov eax, dword ptr [rax + 0x38] ; test al, 1 ; jne 0x54ab1a ; jmp rax
0x000000000068fba8 : mov eax, dword ptr [rax + 0x40] ; mov byte ptr [rax + rsi*8], dl ; ret
0x000000000068fb68 : mov eax, dword ptr [rax + 0x40] ; mov dword ptr [rax + rsi*8 - 4], edx ; ret
0x000000000068f518 : mov eax, dword ptr [rax + 0x40] ; mov eax, dword ptr [rax + rsi*8 - 4] ; ret
0x000000000068f528 : mov eax, dword ptr [rax + 0x40] ; movzx eax, byte ptr [rax + rsi*8] ; ret
0x000000000068f095 : mov eax, dword ptr [rax + 0x40] ; ret
0x00000000005135d1 : mov eax, dword ptr [rax + 0x40] ; test al, 1 ; jne 0x5135e1 ; jmp rax
0x000000000051944d : mov eax, dword ptr [rax + 0x40] ; test al, 1 ; jne 0x51945d ; jmp rax
0x000000000054aa3d : mov eax, dword ptr [rax + 0x40] ; test al, 1 ; jne 0x54aa4d ; jmp rax
0x0000000000519341 : mov eax, dword ptr [rax + 0x48] ; test al, 1 ; jne 0x519369 ; call rax
0x0000000000519381 : mov eax, dword ptr [rax + 0x48] ; test al, 1 ; jne 0x5193b3 ; call rax
0x00000000005193d1 : mov eax, dword ptr [rax + 0x48] ; test al, 1 ; jne 0x5193fa ; call rax
0x0000000000519411 : mov eax, dword ptr [rax + 0x48] ; test al, 1 ; jne 0x51943d ; call rax
0x000000000054a941 : mov eax, dword ptr [rax + 0x48] ; test al, 1 ; jne 0x54a969 ; call rax
0x000000000054a981 : mov eax, dword ptr [rax + 0x48] ; test al, 1 ; jne 0x54a9a7 ; call rax
0x000000000054a9c1 : mov eax, dword ptr [rax + 0x48] ; test al, 1 ; jne 0x54a9ea ; call rax
0x000000000054aa01 : mov eax, dword ptr [rax + 0x48] ; test al, 1 ; jne 0x54aa2d ; call rax
0x000000000068fa20 : mov eax, dword ptr [rax + 0x50] ; ret
0x00000000006bfd18 : mov eax, dword ptr [rax + 0x50] ; test al, 1 ; jne 0x6bfd28 ; jmp rax
0x00000000006bfdd8 : mov eax, dword ptr [rax + 0x50] ; test al, 1 ; jne 0x6bfde8 ; jmp rax
0x00000000006c03c8 : mov eax, dword ptr [rax + 0x50] ; test al, 1 ; jne 0x6c03d8 ; jmp rax
0x000000000051358d : mov eax, dword ptr [rax + 0x58] ; test al, 1 ; jne 0x51359d ; jmp rax
0x00000000006bfdf8 : mov eax, dword ptr [rax + 0x58] ; test al, 1 ; jne 0x6bfe08 ; jmp rax
0x00000000006c04ab : mov eax, dword ptr [rax + 0x58] ; test al, 1 ; jne 0x6c04bb ; jmp rax
0x00000000006917f6 : mov eax, dword ptr [rax + 0x64] ; add rsp, 8 ; ret
0x0000000000691936 : mov eax, dword ptr [rax + 0x68] ; add rsp, 8 ; ret
0x000000000050facb : mov eax, dword ptr [rax + 0x70] ; test al, 1 ; jne 0x50fb3c ; call rax
0x00000000005133dd : mov eax, dword ptr [rax + 0x70] ; test al, 1 ; jne 0x5133ed ; jmp rax
0x0000000000518a3c : mov eax, dword ptr [rax + 0x70] ; test al, 1 ; jne 0x518ab8 ; call rax
0x000000000054a317 : mov eax, dword ptr [rax + 0x70] ; test al, 1 ; jne 0x54a395 ; call rax
0x0000000000513511 : mov eax, dword ptr [rax + 0x78] ; test al, 1 ; jne 0x513537 ; call rax
0x0000000000535691 : mov eax, dword ptr [rax + 0x78] ; test al, 1 ; jne 0x5356cf ; call rax
0x0000000000535749 : mov eax, dword ptr [rax + 0x78] ; test al, 1 ; jne 0x5357b4 ; call rax
0x0000000000631a85 : mov eax, dword ptr [rax + 0x78] ; test al, 1 ; jne 0x631ac0 ; call rax
0x0000000000670720 : mov eax, dword ptr [rax + 0xc78] ; ret
0x0000000000669d36 : mov eax, dword ptr [rax + 0xca8] ; nop ; pop rbp ; ret
0x0000000000584f1b : mov eax, dword ptr [rax + 4] ; ret
0x000000000044ce99 : mov eax, dword ptr [rax + 7] ; call rax
0x0000000000503c66 : mov eax, dword ptr [rax + 7] ; jmp rax
0x00000000004e48a7 : mov eax, dword ptr [rax + 7] ; mov ecx, 0 ; call r8
0x000000000044f45d : mov eax, dword ptr [rax + 7] ; mov ecx, 1 ; call rax
0x0000000000404a5c : mov eax, dword ptr [rax + 7] ; mov esi, 1 ; call rax
0x0000000000655304 : mov eax, dword ptr [rax + 7] ; mov esi, 2 ; call rax
0x00000000004b154f : mov eax, dword ptr [rax + 7] ; mov r8, r9 ; call rax
0x00000000004a00bd : mov eax, dword ptr [rax + 7] ; mov rdi, r9 ; mov rsi, r8 ; call rax
0x0000000000536378 : mov eax, dword ptr [rax + 7] ; mov rdi, rbx ; call rax
0x000000000040f4fb : mov eax, dword ptr [rax + 7] ; mov rdi, rcx ; call rax
0x000000000044279b : mov eax, dword ptr [rax + 7] ; mov rdi, rcx ; mov rsi, rdx ; call rax
0x0000000000493dd5 : mov eax, dword ptr [rax + 7] ; mov rdi, rdx ; call rax
0x000000000040e0f2 : mov eax, dword ptr [rax + 7] ; mov rdi, rsi ; mov rsi, rcx ; call rax
0x000000000045da8b : mov eax, dword ptr [rax + 7] ; mov rdx, rcx ; call rax
0x00000000004132df : mov eax, dword ptr [rax + 7] ; mov rdx, rdi ; mov rdi, rcx ; call rax
0x000000000044191a : mov eax, dword ptr [rax + 7] ; mov rsi, rcx ; call rax
0x0000000000493cdd : mov eax, dword ptr [rax + 7] ; mov rsi, rcx ; mov rdi, rdx ; call rax
0x00000000005412fa : mov eax, dword ptr [rax + 8] ; add rsp, 8 ; ret
0x0000000000618d4b : mov eax, dword ptr [rax + 8] ; nop ; pop rbp ; ret
0x0000000000689014 : mov eax, dword ptr [rax + 8] ; ret
0x0000000000685f98 : mov eax, dword ptr [rax + 8] ; test al, 1 ; jne 0x685fad ; call rax
0x0000000000686004 : mov eax, dword ptr [rax + 8] ; test al, 1 ; jne 0x686014 ; jmp rax
0x00000000005b9d1d : mov eax, dword ptr [rax + rax - 0x17] ; retf -4
0x000000000058f675 : mov eax, dword ptr [rax + rsi*4] ; add rsp, 8 ; ret
0x0000000000584efc : mov eax, dword ptr [rax + rsi*4] ; ret
0x000000000068f51b : mov eax, dword ptr [rax + rsi*8 - 4] ; ret
0x00000000006ce618 : mov eax, dword ptr [rax + rsi*8] ; ret
0x0000000000526b48 : mov eax, dword ptr [rax + rsi*8] ; test rax, rax ; je 0x526b59 ; ret
0x0000000000590918 : mov eax, dword ptr [rax + rsi*8] ; test rax, rax ; je 0x590929 ; ret
0x000000000068f9be : mov eax, dword ptr [rax - 0x10] ; cmp rax, rdx ; je 0x68f9d8 ; ret
0x00000000007d90dd : mov eax, dword ptr [rax - 0x55ffea31] ; add al, 5 ; retf 0x15
0x0000000000678db6 : mov eax, dword ptr [rax*4 + 0x726a7c] ; ret
0x0000000000456c0f : mov eax, dword ptr [rax*8 + 0x6e1468] ; jmp rax
0x0000000000480bf6 : mov eax, dword ptr [rax*8 + 0x6e8e38] ; jmp rax
0x0000000000483b56 : mov eax, dword ptr [rax*8 + 0x6e8ea8] ; jmp rax
0x000000000048c6c6 : mov eax, dword ptr [rax*8 + 0x6e9060] ; jmp rax
0x000000000048e62e : mov eax, dword ptr [rax*8 + 0x6e9160] ; jmp rax
0x0000000000496954 : mov eax, dword ptr [rax*8 + 0x6e9278] ; jmp rax
0x0000000000496eac : mov eax, dword ptr [rax*8 + 0x6e92f8] ; jmp rax
0x0000000000496fbe : mov eax, dword ptr [rax*8 + 0x6e9330] ; jmp rax
0x00000000004984c8 : mov eax, dword ptr [rax*8 + 0x6e9428] ; jmp rax
0x00000000004ac936 : mov eax, dword ptr [rax*8 + 0x6ec150] ; jmp rax
0x00000000004b9b02 : mov eax, dword ptr [rax*8 + 0x6ec328] ; jmp rax
0x00000000004ba8a9 : mov eax, dword ptr [rax*8 + 0x6ec380] ; jmp rax
0x00000000004c6e91 : mov eax, dword ptr [rax*8 + 0x6eca78] ; jmp rax
0x00000000004d012d : mov eax, dword ptr [rax*8 + 0x6ed198] ; jmp rax
0x00000000004d7152 : mov eax, dword ptr [rax*8 + 0x6ed210] ; jmp rax
0x00000000004dab5f : mov eax, dword ptr [rax*8 + 0x6ed340] ; jmp rax
0x00000000004db19d : mov eax, dword ptr [rax*8 + 0x6ed380] ; jmp rax
0x00000000004e5184 : mov eax, dword ptr [rax*8 + 0x6ed408] ; jmp rax
0x00000000004ead93 : mov eax, dword ptr [rax*8 + 0x6ed578] ; jmp rax
0x00000000004ecd6a : mov eax, dword ptr [rax*8 + 0x6ed6c0] ; jmp rax
0x00000000004ef398 : mov eax, dword ptr [rax*8 + 0x6ed718] ; jmp rax
0x00000000004f27da : mov eax, dword ptr [rax*8 + 0x6ed888] ; jmp rax
0x00000000005ee5a5 : mov eax, dword ptr [rax*8 + 0x7170d8] ; jmp rax
0x00000000005f7291 : mov eax, dword ptr [rax*8 + 0x7173b8] ; jmp rax
0x0000000000625184 : mov eax, dword ptr [rax*8 + 0x71baf0] ; jmp rax
0x000000000065e26a : mov eax, dword ptr [rax*8 + 0x7207c0] ; ret
0x000000000065c718 : mov eax, dword ptr [rax*8 + 0xa08e80] ; ret
0x000000000065c728 : mov eax, dword ptr [rax*8 + 0xa08ea0] ; ret
0x0000000000461843 : mov eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000007542c5 : mov eax, dword ptr [rax] ; add byte ptr [rax], bl ; or edi, ecx ; call rsp
0x00000000005233b7 : mov eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000006a8d97 : mov eax, dword ptr [rax] ; mov byte ptr [rax + rcx], dl ; ret
0x00000000006a95a9 : mov eax, dword ptr [rax] ; mov byte ptr [rax + rdx], bl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000068ef30 : mov eax, dword ptr [rax] ; mov qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004a8db3 : mov eax, dword ptr [rax] ; nop ; leave ; ret
0x00000000004406b2 : mov eax, dword ptr [rax] ; nop ; pop rbp ; ret
0x000000000051984e : mov eax, dword ptr [rax] ; ret
0x0000000000503c59 : mov eax, dword ptr [rax] ; test al, 1 ; jne 0x503c67 ; jmp rax
0x0000000000685fb8 : mov eax, dword ptr [rax] ; test al, 1 ; jne 0x685fd4 ; mov rdx, rbx ; call rax
0x000000000061e547 : mov eax, dword ptr [rax] ; test eax, eax ; sete al ; nop ; pop rbp ; ret
0x000000000066c0b9 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x66c0cf ; ret
0x000000000068ee68 : mov eax, dword ptr [rax] ; test rax, rax ; jne 0x68ee38 ; pop rbx ; ret
0x000000000060745d : mov eax, dword ptr [rbp + 7] ; call rax
0x00000000004517a4 : mov eax, dword ptr [rbp - 0x10] ; mov qword ptr [rax + 0x10], rdx ; leave ; ret
0x000000000041370b : mov eax, dword ptr [rbp - 0x10] ; mov qword ptr [rax + 8], rdx ; leave ; ret
0x000000000040ef2f : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; nop ; leave ; ret
0x00000000005d4620 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; nop ; pop rbp ; ret
0x0000000000414300 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000613301 : mov eax, dword ptr [rbp - 0x10] ; nop ; leave ; ret
0x00000000004b5049 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000440964 : mov eax, dword ptr [rbp - 0x18] ; leave ; ret
0x00000000004118b4 : mov eax, dword ptr [rbp - 0x18] ; mov dword ptr [rax + 0x18], edx ; pop rbp ; ret
0x000000000061e13b : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; nop ; pop rbp ; ret
0x00000000004800db : mov eax, dword ptr [rbp - 0x18] ; nop ; leave ; ret
0x000000000041516b : mov eax, dword ptr [rbp - 0x20] ; mov rdx, qword ptr [rbp - 0x18] ; leave ; ret
0x00000000006a406c : mov eax, dword ptr [rbp - 0x20] ; nop ; pop rbp ; ret
0x00000000006162dc : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004814f2 : mov eax, dword ptr [rbp - 0x28] ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000616900 : mov eax, dword ptr [rbp - 0x28] ; leave ; ret
0x0000000000622025 : mov eax, dword ptr [rbp - 0x28] ; mov dword ptr [rax], edx ; leave ; ret
0x0000000000623336 : mov eax, dword ptr [rbp - 0x28] ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000483ae2 : mov eax, dword ptr [rbp - 0x28] ; nop ; leave ; ret
0x00000000004689f9 : mov eax, dword ptr [rbp - 0x30] ; mov rdx, qword ptr [rbp - 0x28] ; nop ; leave ; ret
0x0000000000440b29 : mov eax, dword ptr [rbp - 0x38] ; mov rdi, rax ; call 0x43d584
0x0000000000620a5b : mov eax, dword ptr [rbp - 0x40] ; mov rdx, qword ptr [rbp - 0x38] ; nop ; leave ; ret
0x0000000000620863 : mov eax, dword ptr [rbp - 0x48] ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000622f87 : mov eax, dword ptr [rbp - 0x48] ; leave ; ret
0x000000000061e115 : mov eax, dword ptr [rbp - 0x48] ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000044b94a : mov eax, dword ptr [rbp - 0x58] ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000622113 : mov eax, dword ptr [rbp - 0xc] ; pop rbp ; ret
0x000000000043abe6 : mov eax, dword ptr [rbp - 4] ; nop ; leave ; ret
0x00000000005d440d : mov eax, dword ptr [rbp - 4] ; nop ; pop rbp ; ret
0x00000000006253e9 : mov eax, dword ptr [rbp - 8] ; leave ; ret
0x000000000040bfc1 : mov eax, dword ptr [rbp - 8] ; lock add dword ptr [rax], 1 ; pop rbp ; ret
0x000000000040df44 : mov eax, dword ptr [rbp - 8] ; mov dword ptr [rax + 0x18], edx ; pop rbp ; ret
0x00000000005d43eb : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x10] ; nop ; pop rbp ; ret
0x000000000040ee61 : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x18] ; nop ; pop rbp ; ret
0x00000000004420c5 : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x20] ; nop ; pop rbp ; ret
0x0000000000618d5b : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x28] ; nop ; pop rbp ; ret
0x0000000000442105 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; nop ; pop rbp ; ret
0x000000000044c7ab : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; nop ; pop rbp ; ret
0x0000000000618d47 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; nop ; pop rbp ; ret
0x0000000000618f3f : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; nop ; pop rbp ; ret
0x00000000004a371d : mov eax, dword ptr [rbp - 8] ; mov rdi, rax ; call 0x4a0196
0x00000000006153e5 : mov eax, dword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x18] ; nop ; pop rbp ; ret
0x00000000005f3535 : mov eax, dword ptr [rbp - 8] ; movzx eax, byte ptr [rax] ; nop ; pop rbp ; ret
0x00000000004cc908 : mov eax, dword ptr [rbp - 8] ; nop ; leave ; ret
0x000000000040d848 : mov eax, dword ptr [rbp - 8] ; nop ; pop rbp ; ret
0x000000000051907d : mov eax, dword ptr [rbx + 0x10] ; lock sub dword ptr [rax + 0x14], 1 ; pop rbx ; ret
0x00000000006cccb5 : mov eax, dword ptr [rbx + 0x10] ; pop rbx ; ret
0x000000000059eba3 : mov eax, dword ptr [rbx + 0x10] ; test eax, eax ; jg 0x59eb68 ; pop rbx ; ret
0x00000000005190c1 : mov eax, dword ptr [rbx + 0x10] ; test rdx, rdx ; je 0x5190d9 ; pop rbx ; ret
0x00000000005190f1 : mov eax, dword ptr [rbx + 0x10] ; test rdx, rdx ; je 0x519109 ; pop rbx ; ret
0x00000000005191a1 : mov eax, dword ptr [rbx + 0x10] ; test rdx, rdx ; je 0x5191b9 ; pop rbx ; ret
0x00000000005191d1 : mov eax, dword ptr [rbx + 0x10] ; test rdx, rdx ; je 0x5191e9 ; pop rbx ; ret
0x000000000053f9b1 : mov eax, dword ptr [rbx + 0x10] ; test rdx, rdx ; je 0x53f9c9 ; pop rbx ; ret
0x000000000053f9e1 : mov eax, dword ptr [rbx + 0x10] ; test rdx, rdx ; je 0x53f9f9 ; pop rbx ; ret
0x000000000054a821 : mov eax, dword ptr [rbx + 0x10] ; test rdx, rdx ; je 0x54a839 ; pop rbx ; ret
0x000000000054a861 : mov eax, dword ptr [rbx + 0x10] ; test rdx, rdx ; je 0x54a879 ; pop rbx ; ret
0x00000000005639b1 : mov eax, dword ptr [rbx + 0x10] ; test rdx, rdx ; je 0x5639c9 ; pop rbx ; ret
0x00000000005639e1 : mov eax, dword ptr [rbx + 0x10] ; test rdx, rdx ; je 0x5639f9 ; pop rbx ; ret
0x0000000000584d21 : mov eax, dword ptr [rbx + 0x10] ; test rdx, rdx ; je 0x584d39 ; pop rbx ; ret
0x0000000000584d51 : mov eax, dword ptr [rbx + 0x10] ; test rdx, rdx ; je 0x584d69 ; pop rbx ; ret
0x00000000005a72e1 : mov eax, dword ptr [rbx + 0x10] ; test rdx, rdx ; je 0x5a72f9 ; pop rbx ; ret
0x00000000005a7311 : mov eax, dword ptr [rbx + 0x10] ; test rdx, rdx ; je 0x5a7329 ; pop rbx ; ret
0x0000000000585ea3 : mov eax, dword ptr [rbx + 0x14] ; test eax, eax ; jne 0x585eb4 ; pop rbx ; ret
0x00000000006ccb6a : mov eax, dword ptr [rbx + 0x18] ; pop rbx ; ret
0x00000000005403b1 : mov eax, dword ptr [rbx + 0x19] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000068e34a : mov eax, dword ptr [rbx + 0x58] ; pop rbx ; ret
0x0000000000691789 : mov eax, dword ptr [rbx + 0x5c] ; pop rbx ; ret
0x0000000000690539 : mov eax, dword ptr [rbx + 0x60] ; pop rbx ; ret
0x000000000067aa9a : mov eax, dword ptr [rbx + 8] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000005425d5 : mov eax, dword ptr [rbx + 8] ; pop rbx ; ret
0x00000000007e4cc1 : mov eax, dword ptr [rbx] ; add eax, 0x970012fa ; add ebx, dword ptr [rcx] ; call qword ptr [rdx]
0x00000000006927f0 : mov eax, dword ptr [rbx] ; mov byte ptr [rax + 0x79], 0 ; pop rbx ; ret
0x00000000005085ea : mov eax, dword ptr [rcx + rax*8] ; test rax, rax ; je 0x5085e8 ; ret
0x000000000055696a : mov eax, dword ptr [rcx + rax*8] ; test rax, rax ; je 0x556968 ; ret
0x000000000062767a : mov eax, dword ptr [rcx + rax*8] ; test rax, rax ; je 0x627678 ; ret
0x000000000069ccf1 : mov eax, dword ptr [rcx - 0x3f] ; ret 0x4707
0x00000000007bf1a5 : mov eax, dword ptr [rcx] ; add byte ptr [rax], al ; ret 0x6001
0x000000000059bfb3 : mov eax, dword ptr [rdi + 0x10] ; add rsp, 8 ; ret
0x0000000000518351 : mov eax, dword ptr [rdi + 0x10] ; lock sub dword ptr [rax + 0x14], 1 ; ret
0x0000000000517f10 : mov eax, dword ptr [rdi + 0x10] ; ret
0x0000000000517ee0 : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; setle al ; ret
0x000000000051aef5 : mov eax, dword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x51af08 ; ret
0x000000000051af15 : mov eax, dword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x51af28 ; ret
0x000000000051af35 : mov eax, dword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x51af48 ; ret
0x000000000051af55 : mov eax, dword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x51af68 ; ret
0x000000000053fce5 : mov eax, dword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x53fcf8 ; ret
0x000000000053fd05 : mov eax, dword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x53fd18 ; ret
0x000000000054b705 : mov eax, dword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x54b718 ; ret
0x000000000054b725 : mov eax, dword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x54b738 ; ret
0x0000000000563de5 : mov eax, dword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x563df8 ; ret
0x0000000000563e05 : mov eax, dword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x563e18 ; ret
0x0000000000585535 : mov eax, dword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x585548 ; ret
0x0000000000585555 : mov eax, dword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x585568 ; ret
0x00000000005a78d5 : mov eax, dword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x5a78e8 ; ret
0x00000000005a78f5 : mov eax, dword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x5a7908 ; ret
0x0000000000668ab1 : mov eax, dword ptr [rdi + 0x138] ; ret
0x00000000006aad60 : mov eax, dword ptr [rdi + 0x14] ; ret
0x00000000005b01f9 : mov eax, dword ptr [rdi + 0x158] ; ret
0x000000000050abb1 : mov eax, dword ptr [rdi + 0x18] ; ret
0x000000000054bf20 : mov eax, dword ptr [rdi + 0x18] ; test eax, eax ; jne 0x54bf37 ; ret
0x000000000054c080 : mov eax, dword ptr [rdi + 0x18] ; test eax, eax ; jne 0x54c097 ; ret
0x000000000054fa30 : mov eax, dword ptr [rdi + 0x18] ; test eax, eax ; jne 0x54fa47 ; ret
0x0000000000551d90 : mov eax, dword ptr [rdi + 0x18] ; test eax, eax ; jne 0x551da7 ; ret
0x000000000054a010 : mov eax, dword ptr [rdi + 0x18] ; test eax, eax ; sete al ; ret
0x000000000060c441 : mov eax, dword ptr [rdi + 0x1b0] ; ret
0x000000000060c451 : mov eax, dword ptr [rdi + 0x1b8] ; ret
0x000000000066c0d1 : mov eax, dword ptr [rdi + 0x1c8] ; ret
0x000000000060b260 : mov eax, dword ptr [rdi + 0x1cc] ; ret
0x00000000006b27f7 : mov eax, dword ptr [rdi + 0x20] ; mov qword ptr [rdi + rax + 0x3f], rsi ; ret
0x0000000000506b90 : mov eax, dword ptr [rdi + 0x20] ; ret
0x0000000000506b80 : mov eax, dword ptr [rdi + 0x20] ; test eax, eax ; sete al ; ret
0x000000000054ae15 : mov eax, dword ptr [rdi + 0x20] ; test eax, eax ; setg al ; ret
0x0000000000517e00 : mov eax, dword ptr [rdi + 0x28] ; ret
0x0000000000517d70 : mov eax, dword ptr [rdi + 0x28] ; test eax, eax ; sete al ; ret
0x00000000005ff4d0 : mov eax, dword ptr [rdi + 0x30] ; test eax, eax ; jle 0x5ff4df ; ret
0x00000000005844a0 : mov eax, dword ptr [rdi + 0x38] ; ret
0x00000000005b03d9 : mov eax, dword ptr [rdi + 0x398] ; ret
0x00000000005af799 : mov eax, dword ptr [rdi + 0x3c8] ; ret
0x00000000005afb09 : mov eax, dword ptr [rdi + 0x3f8] ; ret
0x000000000067fbed : mov eax, dword ptr [rdi + 0x40] ; ret
0x00000000005b0139 : mov eax, dword ptr [rdi + 0x428] ; ret
0x00000000005af769 : mov eax, dword ptr [rdi + 0x458] ; ret
0x00000000005af019 : mov eax, dword ptr [rdi + 0x4e8] ; ret
0x00000000006ab6c1 : mov eax, dword ptr [rdi + 0x50] ; ret
0x0000000000584490 : mov eax, dword ptr [rdi + 0x58] ; ret
0x00000000005afa49 : mov eax, dword ptr [rdi + 0x5d8] ; ret
0x00000000006917bf : mov eax, dword ptr [rdi + 0x64] ; add rsp, 8 ; ret
0x0000000000667850 : mov eax, dword ptr [rdi + 0x64] ; ret
0x00000000006918ff : mov eax, dword ptr [rdi + 0x68] ; add rsp, 8 ; ret
0x000000000053d7c1 : mov eax, dword ptr [rdi + 0x68] ; ret
0x00000000005b0559 : mov eax, dword ptr [rdi + 0x698] ; ret
0x000000000053d7d1 : mov eax, dword ptr [rdi + 0x70] ; ret
0x00000000005af25a : mov eax, dword ptr [rdi + 0x728] ; ret
0x00000000005af1fa : mov eax, dword ptr [rdi + 0x758] ; ret
0x00000000005af1ca : mov eax, dword ptr [rdi + 0x788] ; ret
0x0000000000675761 : mov eax, dword ptr [rdi + 0x78] ; mov rax, qword ptr [rax] ; ret
0x00000000005af22a : mov eax, dword ptr [rdi + 0x7b8] ; ret
0x00000000005af73a : mov eax, dword ptr [rdi + 0x7e8] ; ret
0x00000000005af6da : mov eax, dword ptr [rdi + 0x818] ; ret
0x00000000005af6aa : mov eax, dword ptr [rdi + 0x848] ; ret
0x0000000000674150 : mov eax, dword ptr [rdi + 0x84] ; ret
0x00000000005af70a : mov eax, dword ptr [rdi + 0x878] ; ret
0x00000000005b016a : mov eax, dword ptr [rdi + 0x8a8] ; ret
0x00000000005b007a : mov eax, dword ptr [rdi + 0x8d8] ; ret
0x00000000006d42c1 : mov eax, dword ptr [rdi + 0x90] ; ret
0x00000000006d4331 : mov eax, dword ptr [rdi + 0x98] ; ret
0x00000000005af989 : mov eax, dword ptr [rdi + 0x9f8] ; ret
0x00000000006d4371 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x00000000006d43d1 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x00000000005afb29 : mov eax, dword ptr [rdi + 0xab8] ; ret
0x00000000006d43c1 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x00000000006d4381 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x00000000006be2d0 : mov eax, dword ptr [rdi + 0xc] ; ret
0x00000000006c70b8 : mov eax, dword ptr [rdi + 4] ; cmp eax, 0xff ; jne 0x6c7098 ; pop rbx ; ret
0x00000000006c7c77 : mov eax, dword ptr [rdi + 4] ; cmp eax, 0xff ; setne al ; ret
0x00000000005f97f0 : mov eax, dword ptr [rdi + 4] ; ret
0x000000000067f740 : mov eax, dword ptr [rdi + 4] ; sub eax, 1 ; ret
0x0000000000507d90 : mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x507d9f ; ret
0x0000000000522010 : mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x52201f ; ret
0x0000000000522090 : mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x52209f ; ret
0x0000000000522110 : mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x52211f ; ret
0x0000000000542ae0 : mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x542aef ; ret
0x000000000054dad0 : mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x54dadf ; ret
0x0000000000556020 : mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x55602f ; ret
0x0000000000567000 : mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x56700f ; ret
0x0000000000571910 : mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x57191f ; ret
0x000000000058ed80 : mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x58ed8f ; ret
0x000000000058ee00 : mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x58ee0f ; ret
0x000000000058ee80 : mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x58ee8f ; ret
0x00000000005a2b50 : mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x5a2b5f ; ret
0x00000000005a8ad0 : mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x5a8adf ; ret
0x0000000000626e10 : mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x626e1f ; ret
0x00000000005f7c60 : mov eax, dword ptr [rdi + 4] ; test eax, eax ; sete al ; ret
0x000000000053b1e2 : mov eax, dword ptr [rdi + 8] ; add dword ptr [rax + 0x10], 1 ; ret
0x00000000006898f1 : mov eax, dword ptr [rdi + 8] ; lock add dword ptr [rax + 4], 1 ; ret
0x0000000000506c61 : mov eax, dword ptr [rdi + 8] ; lock add dword ptr [rax], 1 ; ret
0x0000000000506c71 : mov eax, dword ptr [rdi + 8] ; lock sub dword ptr [rax], 1 ; ret
0x0000000000584f18 : mov eax, dword ptr [rdi + 8] ; mov eax, dword ptr [rax + 4] ; ret
0x0000000000689011 : mov eax, dword ptr [rdi + 8] ; mov eax, dword ptr [rax + 8] ; ret
0x00000000006cdda7 : mov eax, dword ptr [rdi + 8] ; mov qword ptr [rdx], rax ; ret
0x0000000000584ef6 : mov eax, dword ptr [rdi + 8] ; movsxd rsi, esi ; mov eax, dword ptr [rax + rsi*4] ; ret
0x0000000000525bc1 : mov eax, dword ptr [rdi + 8] ; ret
0x000000000068f0b7 : mov eax, dword ptr [rdi + 8] ; sub rdi, rax ; mov rax, rdi ; ret
0x00000000005f7c41 : mov eax, dword ptr [rdi + 8] ; test al, 1 ; jne 0x5f7c51 ; jmp rax
0x00000000005f7c81 : mov eax, dword ptr [rdi + 8] ; test al, 1 ; jne 0x5f7c91 ; jmp rax
0x00000000005f8ca1 : mov eax, dword ptr [rdi + 8] ; test al, 1 ; jne 0x5f8cb1 ; jmp rax
0x00000000005f7ce0 : mov eax, dword ptr [rdi + 8] ; test eax, eax ; sete al ; ret
0x0000000000512c81 : mov eax, dword ptr [rdi + rax + 0x28] ; ret
0x0000000000631dd9 : mov eax, dword ptr [rdi + rax + 0x58] ; add rsp, 8 ; ret
0x00000000006318ab : mov eax, dword ptr [rdi + rax + 0x58] ; ret
0x000000000062cb5b : mov eax, dword ptr [rdi + rax + 0x5c] ; test eax, eax ; sete al ; ret
0x0000000000527103 : mov eax, dword ptr [rdi + rax*8 + 8] ; ret
0x0000000000517f63 : mov eax, dword ptr [rdi + rax*8 + 8] ; test eax, eax ; setg al ; ret
0x00000000006ce57a : mov eax, dword ptr [rdi + rax*8] ; sar rax, cl ; and eax, 1 ; ret
0x00000000006c7e0f : mov eax, dword ptr [rdi + rax] ; ret
0x00000000006bc5b8 : mov eax, dword ptr [rdi + rdx + 0x18] ; mov qword ptr [rcx + 0x18], rax ; ret
0x00000000006b2901 : mov eax, dword ptr [rdi + rsi + 0x37] ; ret
0x00000000006b28d1 : mov eax, dword ptr [rdi + rsi + 0x3f] ; ret
0x000000000068f061 : mov eax, dword ptr [rdi - 8] ; mov rax, qword ptr [rax + 0x18] ; ret
0x000000000068f091 : mov eax, dword ptr [rdi - 8] ; mov rax, qword ptr [rax + 0x40] ; ret
0x000000000068fbb6 : mov eax, dword ptr [rdi - 8] ; movzx eax, byte ptr [rax + 0x29] ; ret
0x000000000068f9e1 : mov eax, dword ptr [rdi - 8] ; movzx eax, byte ptr [rax + 0x2a] ; ret
0x000000000068f081 : mov eax, dword ptr [rdi - 8] ; ret
0x0000000000747671 : mov eax, dword ptr [rdi] ; add byte ptr [rdx], ch ; sal ah, cl ; call qword ptr [rax]
0x0000000000747661 : mov eax, dword ptr [rdi] ; add byte ptr [rsi], cl ; sal ah, cl ; jmp rax
0x00000000005f7ca9 : mov eax, dword ptr [rdi] ; cmp dword ptr [rdi + 8], eax ; setl al ; ret
0x0000000000503c56 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax] ; test al, 1 ; jne 0x503c6a ; jmp rax
0x0000000000525c61 : mov eax, dword ptr [rdi] ; ret
0x0000000000507d80 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x507d8d ; ret
0x0000000000522000 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x52200d ; ret
0x0000000000522080 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x52208d ; ret
0x0000000000522100 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x52210d ; ret
0x0000000000542ad0 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x542add ; ret
0x000000000054dac0 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x54dacd ; ret
0x0000000000556010 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x55601d ; ret
0x0000000000566ff0 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x566ffd ; ret
0x0000000000571900 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x57190d ; ret
0x000000000058ed70 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x58ed7d ; ret
0x000000000058edf0 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x58edfd ; ret
0x000000000058ee70 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x58ee7d ; ret
0x00000000005a2b40 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x5a2b4d ; ret
0x00000000005a8ac0 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x5a8acd ; ret
0x0000000000626e00 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x626e0d ; ret
0x00000000006d63b0 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x6d63c7 ; ret
0x00000000006a84c9 : mov eax, dword ptr [rdx + 0x10] ; test rax, rax ; jne 0x6a84c8 ; ret
0x00000000006ccb51 : mov eax, dword ptr [rdx + 0x18] ; cmp rax, 0xff ; je 0x6ccb69 ; ret
0x000000000068f930 : mov eax, dword ptr [rdx + 4] ; cmp dword ptr [rcx + 4], eax ; sete al ; ret
0x00000000005298b5 : mov eax, dword ptr [rdx + 7] ; mov rdi, rbx ; call rax
0x0000000000584f4c : mov eax, dword ptr [rdx + rax*4] ; ret
0x0000000000519cd8 : mov eax, dword ptr [rdx + rax*8 + 0x10] ; add rsp, 8 ; ret
0x00000000004878d7 : mov eax, dword ptr [rdx - 0x76b7ffe1] ; ret
0x00000000007e4bb0 : mov eax, dword ptr [rdx] ; add byte ptr [rax + 0x11], ah ; retf
0x0000000000737bd9 : mov eax, dword ptr [rdx] ; add dl, ch ; loop 0x737bb8 ; call rax
0x0000000000737be9 : mov eax, dword ptr [rdx] ; add dl, cl ; jrcxz 0x737bc8 ; call qword ptr [rax]
0x000000000066fde4 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; ret
0x000000000068fb28 : mov eax, dword ptr [rdx] ; add rsp, 8 ; ret
0x00000000005d9d11 : mov eax, dword ptr [rdx] ; call rax
0x00000000005222b2 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x5222af ; ret
0x0000000000522382 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x52237f ; ret
0x00000000005272b2 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x5272af ; ret
0x0000000000527382 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x52737f ; ret
0x0000000000542c82 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x542c7f ; ret
0x0000000000542d52 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x542d4f ; ret
0x00000000005671a2 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x56719f ; ret
0x0000000000567272 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x56726f ; ret
0x0000000000590ef2 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x590eef ; ret
0x0000000000590fc2 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x590fbf ; ret
0x00000000005a97e2 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x5a97df ; ret
0x00000000005a98b2 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x5a98af ; ret
0x00000000006ce021 : mov eax, dword ptr [rip + 0x334c99] ; ret
0x00000000006cde91 : mov eax, dword ptr [rip + 0x334e31] ; ret
0x00000000006cdea1 : mov eax, dword ptr [rip + 0x334e39] ; ret
0x00000000006cde81 : mov eax, dword ptr [rip + 0x334e49] ; ret
0x00000000006c6f97 : mov eax, dword ptr [rip + 0x33b943] ; jmp rax
0x00000000006c6f07 : mov eax, dword ptr [rip + 0x33b9d3] ; jmp rax
0x00000000006c6e87 : mov eax, dword ptr [rip + 0x33ba53] ; jmp rax
0x00000000006cdc60 : mov eax, dword ptr [rip + 0x33f6fa] ; ret
0x00000000006c065c : mov eax, dword ptr [rip + 0x34225e] ; pop rbx ; jmp rax
0x00000000006c05e7 : mov eax, dword ptr [rip + 0x3422f3] ; jmp rax
0x00000000006c04f7 : mov eax, dword ptr [rip + 0x3423e3] ; jmp rax
0x00000000006c0417 : mov eax, dword ptr [rip + 0x3424c3] ; jmp rax
0x00000000006bfc67 : mov eax, dword ptr [rip + 0x342c73] ; jmp rax
0x00000000006bed28 : mov eax, dword ptr [rip + 0x343b7a] ; jmp rax
0x00000000006bed01 : mov eax, dword ptr [rip + 0x343bd9] ; jmp rax
0x00000000006bec21 : mov eax, dword ptr [rip + 0x343c61] ; jmp rax
0x00000000006bec11 : mov eax, dword ptr [rip + 0x343c81] ; jmp rax
0x00000000006bebd1 : mov eax, dword ptr [rip + 0x343cb9] ; jmp rax
0x00000000006bebc1 : mov eax, dword ptr [rip + 0x343cd9] ; jmp rax
0x00000000006bea41 : mov eax, dword ptr [rip + 0x34e299] ; ret
0x00000000006bea31 : mov eax, dword ptr [rip + 0x34e2a1] ; ret
0x00000000006b25a7 : mov eax, dword ptr [rip + 0x350333] ; jmp rax
0x00000000006b2428 : mov eax, dword ptr [rip + 0x3504b2] ; jmp rax
0x00000000006b2397 : mov eax, dword ptr [rip + 0x350543] ; jmp rax
0x00000000006b2280 : mov eax, dword ptr [rip + 0x3509a6] ; ret
0x00000000006b225b : mov eax, dword ptr [rip + 0x3509cb] ; ret
0x00000000006aa8f4 : mov eax, dword ptr [rip + 0x357fe6] ; jmp rax
0x00000000006a8aa7 : mov eax, dword ptr [rip + 0x359e13] ; jmp rax
0x00000000006a8227 : mov eax, dword ptr [rip + 0x35a6b3] ; jmp rax
0x00000000006a7e2f : mov eax, dword ptr [rip + 0x35aa8b] ; pop rbx ; jmp rax
0x00000000006a7c2d : mov eax, dword ptr [rip + 0x35acad] ; jmp rax
0x00000000006a5fb7 : mov eax, dword ptr [rip + 0x35c923] ; jmp rax
0x00000000006a5f17 : mov eax, dword ptr [rip + 0x35c9c3] ; jmp rax
0x00000000006a45ba : mov eax, dword ptr [rip + 0x35e300] ; jmp rax
0x00000000006a45a3 : mov eax, dword ptr [rip + 0x35e317] ; jmp rax
0x0000000000692611 : mov eax, dword ptr [rip + 0x36fe31] ; ret
0x00000000006925f1 : mov eax, dword ptr [rip + 0x36fe59] ; ret
0x00000000006925d1 : mov eax, dword ptr [rip + 0x36fe69] ; ret
0x00000000006904d7 : mov eax, dword ptr [rip + 0x372403] ; jmp rax
0x00000000006905d0 : mov eax, dword ptr [rip + 0x372652] ; ret
0x000000000068e1f7 : mov eax, dword ptr [rip + 0x3746e3] ; jmp rax
0x00000000006905a1 : mov eax, dword ptr [rip + 0x379361] ; ret
0x0000000000690581 : mov eax, dword ptr [rip + 0x379389] ; ret
0x0000000000690561 : mov eax, dword ptr [rip + 0x379399] ; ret
0x0000000000685f47 : mov eax, dword ptr [rip + 0x37c993] ; jmp rax
0x0000000000681a87 : mov eax, dword ptr [rip + 0x380e53] ; jmp rax
0x0000000000681929 : mov eax, dword ptr [rip + 0x380fb1] ; jmp rax
0x0000000000676b34 : mov eax, dword ptr [rip + 0x38bd1e] ; jmp rax
0x00000000006761ce : mov eax, dword ptr [rip + 0x38c70c] ; jmp rax
0x0000000000674107 : mov eax, dword ptr [rip + 0x38e7d3] ; jmp rax
0x0000000000678b76 : mov eax, dword ptr [rip + 0x39080c] ; je 0x678b88 ; ret
0x000000000067134f : mov eax, dword ptr [rip + 0x39155b] ; call rax
0x0000000000669931 : mov eax, dword ptr [rip + 0x3963c1] ; ret
0x000000000066af2a : mov eax, dword ptr [rip + 0x396e50] ; ret
0x00000000006698ce : mov eax, dword ptr [rip + 0x39900c] ; jmp rax
0x000000000065d257 : mov eax, dword ptr [rip + 0x3a5683] ; jmp rax
0x000000000065901d : mov eax, dword ptr [rip + 0x3a98bd] ; jmp rax
0x0000000000658f19 : mov eax, dword ptr [rip + 0x3a99c1] ; jmp rax
0x000000000064866f : mov eax, dword ptr [rip + 0x3ba26b] ; jmp rax
0x00000000006484f2 : mov eax, dword ptr [rip + 0x3ba3e8] ; jmp rax
0x000000000064835a : mov eax, dword ptr [rip + 0x3ba580] ; jmp rax
0x00000000006481dd : mov eax, dword ptr [rip + 0x3ba6fd] ; jmp rax
0x00000000006480af : mov eax, dword ptr [rip + 0x3ba82b] ; jmp rax
0x0000000000647fd1 : mov eax, dword ptr [rip + 0x3ba909] ; jmp rax
0x000000000063b395 : mov eax, dword ptr [rip + 0x3c7545] ; jmp rax
0x000000000063b115 : mov eax, dword ptr [rip + 0x3c77c5] ; jmp rax
0x000000000063a31c : mov eax, dword ptr [rip + 0x3c85be] ; jmp rax
0x0000000000630067 : mov eax, dword ptr [rip + 0x3d2873] ; jmp rax
0x000000000062e1f7 : mov eax, dword ptr [rip + 0x3d46e3] ; jmp rax
0x000000000062be57 : mov eax, dword ptr [rip + 0x3d6a83] ; jmp rax
0x000000000062b2a7 : mov eax, dword ptr [rip + 0x3d7633] ; jmp rax
0x000000000062b217 : mov eax, dword ptr [rip + 0x3d76c3] ; jmp rax
0x000000000062b107 : mov eax, dword ptr [rip + 0x3d77d3] ; jmp rax
0x000000000062b097 : mov eax, dword ptr [rip + 0x3d7843] ; jmp rax
0x00000000006258a3 : mov eax, dword ptr [rip + 0x3dcfc7] ; call rax
0x00000000006257a3 : mov eax, dword ptr [rip + 0x3dd13f] ; call rax
0x000000000062561a : mov eax, dword ptr [rip + 0x3dd2c8] ; call rax
0x0000000000625489 : mov eax, dword ptr [rip + 0x3dd451] ; call rax
0x0000000000625405 : mov eax, dword ptr [rip + 0x3dd4dd] ; call rax
0x000000000062420e : mov eax, dword ptr [rip + 0x3de6cc] ; call rax
0x000000000062417c : mov eax, dword ptr [rip + 0x3de6de] ; call rax
0x0000000000624173 : mov eax, dword ptr [rip + 0x3de76f] ; call rax
0x0000000000623be8 : mov eax, dword ptr [rip + 0x3dec82] ; call rax
0x0000000000623bbf : mov eax, dword ptr [rip + 0x3deca3] ; call rax
0x00000000006225d9 : mov eax, dword ptr [rip + 0x3e0301] ; call rax
0x00000000006225bd : mov eax, dword ptr [rip + 0x3e0325] ; call rax
0x00000000006223f3 : mov eax, dword ptr [rip + 0x3e04ef] ; call rax
0x0000000000622090 : mov eax, dword ptr [rip + 0x3e0852] ; call rax
0x0000000000622065 : mov eax, dword ptr [rip + 0x3e0875] ; call rax
0x0000000000621f2e : mov eax, dword ptr [rip + 0x3e09b4] ; call rax
0x0000000000621eff : mov eax, dword ptr [rip + 0x3e09db] ; call rax
0x00000000006218b8 : mov eax, dword ptr [rip + 0x3e102a] ; call rax
0x0000000000621887 : mov eax, dword ptr [rip + 0x3e1053] ; call rax
0x00000000006216f8 : mov eax, dword ptr [rip + 0x3e11ea] ; call rax
0x00000000006216c7 : mov eax, dword ptr [rip + 0x3e1213] ; call rax
0x00000000006211fa : mov eax, dword ptr [rip + 0x3e16e8] ; call rax
0x00000000006211c9 : mov eax, dword ptr [rip + 0x3e1711] ; call rax
0x0000000000620adb : mov eax, dword ptr [rip + 0x3e1e07] ; call rax
0x0000000000620a9f : mov eax, dword ptr [rip + 0x3e1e3b] ; call rax
0x00000000006208ed : mov eax, dword ptr [rip + 0x3e1ff5] ; call rax
0x00000000006208a7 : mov eax, dword ptr [rip + 0x3e2033] ; call rax
0x00000000006206d0 : mov eax, dword ptr [rip + 0x3e2212] ; call rax
0x000000000062069f : mov eax, dword ptr [rip + 0x3e223b] ; call rax
0x0000000000620518 : mov eax, dword ptr [rip + 0x3e23ca] ; call rax
0x00000000006204eb : mov eax, dword ptr [rip + 0x3e23ef] ; call rax
0x00000000006203be : mov eax, dword ptr [rip + 0x3e2524] ; call rax
0x0000000000620385 : mov eax, dword ptr [rip + 0x3e2555] ; call rax
0x00000000006201d2 : mov eax, dword ptr [rip + 0x3e2710] ; call rax
0x0000000000620197 : mov eax, dword ptr [rip + 0x3e2743] ; call rax
0x00000000006200cb : mov eax, dword ptr [rip + 0x3e280f] ; call rax
0x000000000062008b : mov eax, dword ptr [rip + 0x3e2857] ; call rax
0x000000000061ff2e : mov eax, dword ptr [rip + 0x3e29ac] ; call rax
0x000000000061fee7 : mov eax, dword ptr [rip + 0x3e29fb] ; call rax
0x000000000061fe9e : mov eax, dword ptr [rip + 0x3e2a44] ; call rax
0x000000000061fd30 : mov eax, dword ptr [rip + 0x3e2bb2] ; call rax
0x000000000061fbda : mov eax, dword ptr [rip + 0x3e2d08] ; call rax
0x000000000061fbaf : mov eax, dword ptr [rip + 0x3e2d2b] ; call rax
0x000000000061f8db : mov eax, dword ptr [rip + 0x3e3007] ; call rax
0x000000000061f801 : mov eax, dword ptr [rip + 0x3e3069] ; call rax
0x000000000061f7f8 : mov eax, dword ptr [rip + 0x3e30e2] ; call rax
0x000000000061f7ad : mov eax, dword ptr [rip + 0x3e3135] ; call rax
0x000000000061f726 : mov eax, dword ptr [rip + 0x3e313c] ; call rax
0x000000000061f526 : mov eax, dword ptr [rip + 0x3e33b4] ; call rax
0x000000000061f448 : mov eax, dword ptr [rip + 0x3e3412] ; call rax
0x000000000061f43f : mov eax, dword ptr [rip + 0x3e34a3] ; call rax
0x000000000061f1e2 : mov eax, dword ptr [rip + 0x3e3700] ; call rax
0x000000000061ed81 : mov eax, dword ptr [rip + 0x3e3b61] ; call rax
0x000000000061e854 : mov eax, dword ptr [rip + 0x3e408e] ; call rax
0x000000000061e4d2 : mov eax, dword ptr [rip + 0x3e4410] ; call rax
0x000000000061e4a5 : mov eax, dword ptr [rip + 0x3e4435] ; call rax
0x000000000061e3ba : mov eax, dword ptr [rip + 0x3e4528] ; call rax
0x000000000061e387 : mov eax, dword ptr [rip + 0x3e4553] ; call rax
0x000000000061e190 : mov eax, dword ptr [rip + 0x3e4752] ; call rax
0x000000000061e163 : mov eax, dword ptr [rip + 0x3e4777] ; call rax
0x000000000061d691 : mov eax, dword ptr [rip + 0x3e5249] ; call rax
0x000000000061d655 : mov eax, dword ptr [rip + 0x3e5285] ; call rax
0x000000000061d647 : mov eax, dword ptr [rip + 0x3e529b] ; call rax
0x000000000061cadb : mov eax, dword ptr [rip + 0x3e5d8f] ; call rax
0x000000000061cad2 : mov eax, dword ptr [rip + 0x3e5d90] ; call rax
0x000000000061caa6 : mov eax, dword ptr [rip + 0x3e5db4] ; call rax
0x000000000061caaf : mov eax, dword ptr [rip + 0x3e5e2b] ; call rax
0x000000000061ca9d : mov eax, dword ptr [rip + 0x3e5e45] ; call rax
0x000000000061c853 : mov eax, dword ptr [rip + 0x3e6087] ; call rax
0x000000000061c82f : mov eax, dword ptr [rip + 0x3e60b3] ; call rax
0x000000000061c3ef : mov eax, dword ptr [rip + 0x3e64eb] ; call rax
0x000000000061c3cb : mov eax, dword ptr [rip + 0x3e6517] ; call rax
0x000000000061be27 : mov eax, dword ptr [rip + 0x3e6abb] ; call rax
0x000000000061bcc5 : mov eax, dword ptr [rip + 0x3e6c1d] ; call rax
0x000000000061bc03 : mov eax, dword ptr [rip + 0x3e6cd7] ; call rax
0x000000000061bbe7 : mov eax, dword ptr [rip + 0x3e6cfb] ; call rax
0x000000000061b64b : mov eax, dword ptr [rip + 0x3e721f] ; call rax
0x000000000061b642 : mov eax, dword ptr [rip + 0x3e7220] ; call rax
0x000000000061b616 : mov eax, dword ptr [rip + 0x3e7244] ; call rax
0x000000000061b61f : mov eax, dword ptr [rip + 0x3e72bb] ; call rax
0x000000000061b60d : mov eax, dword ptr [rip + 0x3e72d5] ; call rax
0x000000000061b4dd : mov eax, dword ptr [rip + 0x3e738d] ; call rax
0x000000000061b4d4 : mov eax, dword ptr [rip + 0x3e738e] ; call rax
0x000000000061b4a8 : mov eax, dword ptr [rip + 0x3e73b2] ; call rax
0x000000000061b4b1 : mov eax, dword ptr [rip + 0x3e7429] ; call rax
0x000000000061b49f : mov eax, dword ptr [rip + 0x3e7443] ; call rax
0x000000000061b263 : mov eax, dword ptr [rip + 0x3e767f] ; call rax
0x000000000061b0e9 : mov eax, dword ptr [rip + 0x3e77f9] ; call rax
0x000000000061b02d : mov eax, dword ptr [rip + 0x3e78ad] ; call rax
0x000000000061b011 : mov eax, dword ptr [rip + 0x3e78d1] ; call rax
0x000000000061add3 : mov eax, dword ptr [rip + 0x3e7a97] ; call rax
0x000000000061adca : mov eax, dword ptr [rip + 0x3e7a98] ; call rax
0x000000000061ad9e : mov eax, dword ptr [rip + 0x3e7abc] ; call rax
0x000000000061ada7 : mov eax, dword ptr [rip + 0x3e7b33] ; call rax
0x000000000061ad95 : mov eax, dword ptr [rip + 0x3e7b4d] ; call rax
0x000000000061acf5 : mov eax, dword ptr [rip + 0x3e7b75] ; call rax
0x000000000061acec : mov eax, dword ptr [rip + 0x3e7b76] ; call rax
0x000000000061acc0 : mov eax, dword ptr [rip + 0x3e7b9a] ; call rax
0x000000000061acc9 : mov eax, dword ptr [rip + 0x3e7c11] ; call rax
0x000000000061acb7 : mov eax, dword ptr [rip + 0x3e7c2b] ; call rax
0x000000000061a7cf : mov eax, dword ptr [rip + 0x3e8113] ; call rax
0x000000000061a631 : mov eax, dword ptr [rip + 0x3e82a9] ; call rax
0x000000000061a615 : mov eax, dword ptr [rip + 0x3e82cd] ; call rax
0x000000000061a443 : mov eax, dword ptr [rip + 0x3e8497] ; call rax
0x000000000061a427 : mov eax, dword ptr [rip + 0x3e84bb] ; call rax
0x000000000061a33a : mov eax, dword ptr [rip + 0x3e85a8] ; call rax
0x0000000000619e90 : mov eax, dword ptr [rip + 0x3e8a4a] ; call rax
0x0000000000619e6f : mov eax, dword ptr [rip + 0x3e8a73] ; call rax
0x0000000000619bb6 : mov eax, dword ptr [rip + 0x3e8d24] ; call rax
0x0000000000619b95 : mov eax, dword ptr [rip + 0x3e8d4d] ; call rax
0x000000000061944f : mov eax, dword ptr [rip + 0x3e9493] ; call rax
0x00000000006192ef : mov eax, dword ptr [rip + 0x3e95eb] ; call rax
0x00000000006192d3 : mov eax, dword ptr [rip + 0x3e960f] ; call rax
0x000000000061912d : mov eax, dword ptr [rip + 0x3e97ad] ; call rax
0x0000000000619111 : mov eax, dword ptr [rip + 0x3e97d1] ; call rax
0x0000000000618967 : mov eax, dword ptr [rip + 0x3e9f03] ; call rax
0x000000000061894e : mov eax, dword ptr [rip + 0x3e9f14] ; call rax
0x00000000006189c4 : mov eax, dword ptr [rip + 0x3e9f16] ; call rax
0x00000000006188ca : mov eax, dword ptr [rip + 0x3e9f90] ; call rax
0x000000000061890d : mov eax, dword ptr [rip + 0x3e9fd5] ; call rax
0x00000000006188d3 : mov eax, dword ptr [rip + 0x3ea007] ; call rax
0x00000000006188c1 : mov eax, dword ptr [rip + 0x3ea021] ; call rax
0x00000000006182cb : mov eax, dword ptr [rip + 0x3ea59f] ; call rax
0x00000000006182b2 : mov eax, dword ptr [rip + 0x3ea5b0] ; call rax
0x0000000000618328 : mov eax, dword ptr [rip + 0x3ea5b2] ; call rax
0x000000000061822e : mov eax, dword ptr [rip + 0x3ea62c] ; call rax
0x0000000000618271 : mov eax, dword ptr [rip + 0x3ea671] ; call rax
0x0000000000618237 : mov eax, dword ptr [rip + 0x3ea6a3] ; call rax
0x0000000000618225 : mov eax, dword ptr [rip + 0x3ea6bd] ; call rax
0x0000000000617d89 : mov eax, dword ptr [rip + 0x3eab51] ; call rax
0x0000000000617d6d : mov eax, dword ptr [rip + 0x3eab75] ; call rax
0x0000000000617c80 : mov eax, dword ptr [rip + 0x3eac62] ; call rax
0x000000000061789f : mov eax, dword ptr [rip + 0x3eb03b] ; call rax
0x0000000000617883 : mov eax, dword ptr [rip + 0x3eb05f] ; call rax
0x00000000006176b2 : mov eax, dword ptr [rip + 0x3eb230] ; call rax
0x000000000061754f : mov eax, dword ptr [rip + 0x3eb393] ; call rax
0x0000000000617416 : mov eax, dword ptr [rip + 0x3eb4c4] ; call rax
0x00000000006173f9 : mov eax, dword ptr [rip + 0x3eb4e9] ; call rax
0x0000000000616dd1 : mov eax, dword ptr [rip + 0x3ebb09] ; call rax
0x0000000000616db5 : mov eax, dword ptr [rip + 0x3ebb2d] ; call rax
0x0000000000616be4 : mov eax, dword ptr [rip + 0x3ebcfe] ; call rax
0x0000000000616a81 : mov eax, dword ptr [rip + 0x3ebe61] ; call rax
0x0000000000616948 : mov eax, dword ptr [rip + 0x3ebf92] ; call rax
0x000000000061692b : mov eax, dword ptr [rip + 0x3ebfb7] ; call rax
0x0000000000615a79 : mov eax, dword ptr [rip + 0x3ece69] ; call rax
0x00000000006159bd : mov eax, dword ptr [rip + 0x3ecf1d] ; call rax
0x00000000006159a1 : mov eax, dword ptr [rip + 0x3ecf41] ; call rax
0x0000000000615710 : mov eax, dword ptr [rip + 0x3ed1ca] ; call rax
0x00000000006156ef : mov eax, dword ptr [rip + 0x3ed1f3] ; call rax
0x0000000000615436 : mov eax, dword ptr [rip + 0x3ed4a4] ; call rax
0x0000000000615415 : mov eax, dword ptr [rip + 0x3ed4cd] ; call rax
0x0000000000614764 : mov eax, dword ptr [rip + 0x3ee17e] ; call rax
0x00000000006146a7 : mov eax, dword ptr [rip + 0x3ee233] ; call rax
0x000000000061468b : mov eax, dword ptr [rip + 0x3ee257] ; call rax
0x00000000006144f8 : mov eax, dword ptr [rip + 0x3ee3ea] ; call rax
0x000000000061443b : mov eax, dword ptr [rip + 0x3ee49f] ; call rax
0x000000000061441f : mov eax, dword ptr [rip + 0x3ee4c3] ; call rax
0x00000000006142bc : mov eax, dword ptr [rip + 0x3ee626] ; call rax
0x00000000006141ff : mov eax, dword ptr [rip + 0x3ee6db] ; call rax
0x00000000006141e3 : mov eax, dword ptr [rip + 0x3ee6ff] ; call rax
0x0000000000613e2b : mov eax, dword ptr [rip + 0x3eeab7] ; call rax
0x0000000000613dd5 : mov eax, dword ptr [rip + 0x3eeb0d] ; call rax
0x0000000000613c72 : mov eax, dword ptr [rip + 0x3eec68] ; call rax
0x0000000000613c45 : mov eax, dword ptr [rip + 0x3eec9d] ; call rax
0x0000000000611709 : mov eax, dword ptr [rip + 0x3f11d1] ; call rax
0x00000000006116f7 : mov eax, dword ptr [rip + 0x3f11eb] ; call rax
0x00000000005fd6ba : mov eax, dword ptr [rip + 0x405220] ; jmp rax
0x00000000005fd247 : mov eax, dword ptr [rip + 0x405693] ; jmp rax
0x00000000005fd167 : mov eax, dword ptr [rip + 0x405773] ; jmp rax
0x00000000005f96c7 : mov eax, dword ptr [rip + 0x409213] ; jmp rax
0x00000000005f9531 : mov eax, dword ptr [rip + 0x4093a9] ; jmp rax
0x00000000005f8cf7 : mov eax, dword ptr [rip + 0x409be3] ; jmp rax
0x00000000005f7a0c : mov eax, dword ptr [rip + 0x40aed6] ; call rax
0x00000000005f7929 : mov eax, dword ptr [rip + 0x40afb9] ; call rax
0x00000000005f7851 : mov eax, dword ptr [rip + 0x40b091] ; call rax
0x00000000005f776e : mov eax, dword ptr [rip + 0x40b174] ; call rax
0x00000000005f7634 : mov eax, dword ptr [rip + 0x40b2ae] ; call rax
0x00000000005f75a9 : mov eax, dword ptr [rip + 0x40b331] ; call rax
0x00000000005f7586 : mov eax, dword ptr [rip + 0x40b35c] ; call rax
0x00000000005f7337 : mov eax, dword ptr [rip + 0x40b5a3] ; call rax
0x00000000005f7277 : mov eax, dword ptr [rip + 0x40b66b] ; call rax
0x00000000005f71bd : mov eax, dword ptr [rip + 0x40b71d] ; call rax
0x00000000005f7177 : mov eax, dword ptr [rip + 0x40b76b] ; call rax
0x00000000005f6ce0 : mov eax, dword ptr [rip + 0x40bbfa] ; call rax
0x00000000005f6ca0 : mov eax, dword ptr [rip + 0x40bc42] ; call rax
0x00000000005f6c61 : mov eax, dword ptr [rip + 0x40bc81] ; call rax
0x00000000005f6bfb : mov eax, dword ptr [rip + 0x40bcdf] ; call rax
0x00000000005f6bbb : mov eax, dword ptr [rip + 0x40bd27] ; call rax
0x00000000005f6b7c : mov eax, dword ptr [rip + 0x40bd66] ; call rax
0x00000000005f6ad0 : mov eax, dword ptr [rip + 0x40be12] ; call rax
0x00000000005f69b6 : mov eax, dword ptr [rip + 0x40bf24] ; call rax
0x00000000005f6967 : mov eax, dword ptr [rip + 0x40bf7b] ; call rax
0x00000000005f68af : mov eax, dword ptr [rip + 0x40c02b] ; call rax
0x00000000005f686f : mov eax, dword ptr [rip + 0x40c073] ; call rax
0x00000000005f65a7 : mov eax, dword ptr [rip + 0x40c333] ; call rax
0x00000000005f6564 : mov eax, dword ptr [rip + 0x40c37e] ; call rax
0x00000000005f6527 : mov eax, dword ptr [rip + 0x40c3bb] ; call rax
0x00000000005f61fc : mov eax, dword ptr [rip + 0x40c6de] ; call rax
0x00000000005f619d : mov eax, dword ptr [rip + 0x40c745] ; call rax
0x00000000005f54e7 : mov eax, dword ptr [rip + 0x40d3f3] ; call rax
0x00000000005f5408 : mov eax, dword ptr [rip + 0x40d452] ; call rax
0x00000000005f53ff : mov eax, dword ptr [rip + 0x40d4e3] ; call rax
0x00000000005f5344 : mov eax, dword ptr [rip + 0x40d596] ; call rax
0x00000000005f5301 : mov eax, dword ptr [rip + 0x40d5e1] ; call rax
0x00000000005f50ae : mov eax, dword ptr [rip + 0x40d82c] ; call rax
0x00000000005f5059 : mov eax, dword ptr [rip + 0x40d889] ; call rax
0x00000000005f4652 : mov eax, dword ptr [rip + 0x40e218] ; call rax
0x00000000005f4649 : mov eax, dword ptr [rip + 0x40e291] ; call rax
0x00000000005f4606 : mov eax, dword ptr [rip + 0x40e2dc] ; call rax
0x00000000005f4551 : mov eax, dword ptr [rip + 0x40e311] ; call rax
0x00000000005f450c : mov eax, dword ptr [rip + 0x40e3ce] ; call rax
0x00000000005f44c9 : mov eax, dword ptr [rip + 0x40e419] ; call rax
0x00000000005f4488 : mov eax, dword ptr [rip + 0x40e45a] ; call rax
0x00000000005f4270 : mov eax, dword ptr [rip + 0x40e672] ; call rax
0x00000000005f4144 : mov eax, dword ptr [rip + 0x40e796] ; call rax
0x00000000005f4111 : mov eax, dword ptr [rip + 0x40e7d1] ; call rax
0x00000000005f4057 : mov eax, dword ptr [rip + 0x40e883] ; call rax
0x00000000005f400d : mov eax, dword ptr [rip + 0x40e8d5] ; call rax
0x00000000005f3dcb : mov eax, dword ptr [rip + 0x40eb0f] ; call rax
0x00000000005f3d81 : mov eax, dword ptr [rip + 0x40eb61] ; call rax
0x00000000005f3b9f : mov eax, dword ptr [rip + 0x40ed3b] ; call rax
0x00000000005f3b4d : mov eax, dword ptr [rip + 0x40ed95] ; call rax
0x00000000005f392e : mov eax, dword ptr [rip + 0x40efac] ; call rax
0x00000000005f38cf : mov eax, dword ptr [rip + 0x40f013] ; call rax
0x00000000005f37ca : mov eax, dword ptr [rip + 0x40f110] ; call rax
0x00000000005f377f : mov eax, dword ptr [rip + 0x40f163] ; call rax
0x00000000005f348b : mov eax, dword ptr [rip + 0x40f44f] ; call rax
0x00000000005f33fa : mov eax, dword ptr [rip + 0x40f460] ; call rax
0x00000000005f33f1 : mov eax, dword ptr [rip + 0x40f4f1] ; call rax
0x00000000005f3261 : mov eax, dword ptr [rip + 0x40f609] ; call rax
0x00000000005f3258 : mov eax, dword ptr [rip + 0x40f60a] ; call rax
0x00000000005f307c : mov eax, dword ptr [rip + 0x40f85e] ; call rax
0x00000000005f3019 : mov eax, dword ptr [rip + 0x40f8c9] ; call rax
0x00000000005f2f5f : mov eax, dword ptr [rip + 0x40f97b] ; call rax
0x00000000005f2f35 : mov eax, dword ptr [rip + 0x40f9ad] ; call rax
0x00000000005f249e : mov eax, dword ptr [rip + 0x41043c] ; call rax
0x00000000005f2451 : mov eax, dword ptr [rip + 0x410491] ; call rax
0x00000000005f23ba : mov eax, dword ptr [rip + 0x410528] ; call rax
0x00000000005f22bd : mov eax, dword ptr [rip + 0x410625] ; call rax
0x00000000005f2194 : mov eax, dword ptr [rip + 0x410746] ; call rax
0x00000000005f2147 : mov eax, dword ptr [rip + 0x41079b] ; call rax
0x00000000005f1ecd : mov eax, dword ptr [rip + 0x410a0d] ; call rax
0x00000000005f1e5b : mov eax, dword ptr [rip + 0x410a87] ; call rax
0x00000000005f1d33 : mov eax, dword ptr [rip + 0x410ba7] ; call rax
0x00000000005f1cf3 : mov eax, dword ptr [rip + 0x410bef] ; call rax
0x00000000005f1c3a : mov eax, dword ptr [rip + 0x410ca0] ; call rax
0x00000000005f1bf7 : mov eax, dword ptr [rip + 0x410ceb] ; call rax
0x00000000005f197f : mov eax, dword ptr [rip + 0x410f5b] ; call rax
0x00000000005f193f : mov eax, dword ptr [rip + 0x410fa3] ; call rax
0x00000000005f18ff : mov eax, dword ptr [rip + 0x410fe3] ; call rax
0x00000000005f17b6 : mov eax, dword ptr [rip + 0x411124] ; call rax
0x00000000005f1776 : mov eax, dword ptr [rip + 0x41116c] ; call rax
0x00000000005f1738 : mov eax, dword ptr [rip + 0x4111aa] ; call rax
0x00000000005f160a : mov eax, dword ptr [rip + 0x4112d8] ; call rax
0x00000000005f154a : mov eax, dword ptr [rip + 0x411390] ; call rax
0x00000000005f152d : mov eax, dword ptr [rip + 0x4113b5] ; call rax
0x00000000005f10b6 : mov eax, dword ptr [rip + 0x411824] ; call rax
0x00000000005f0ff9 : mov eax, dword ptr [rip + 0x4118e9] ; call rax
0x00000000005f0d8a : mov eax, dword ptr [rip + 0x411b50] ; call rax
0x00000000005f0cef : mov eax, dword ptr [rip + 0x411bf3] ; call rax
0x00000000005ef9b7 : mov eax, dword ptr [rip + 0x412f23] ; call rax
0x00000000005ef8df : mov eax, dword ptr [rip + 0x413003] ; call rax
0x00000000005ef697 : mov eax, dword ptr [rip + 0x413243] ; call rax
0x00000000005ef64b : mov eax, dword ptr [rip + 0x413297] ; call rax
0x00000000005ef0bb : mov eax, dword ptr [rip + 0x41381f] ; call rax
0x00000000005eefe3 : mov eax, dword ptr [rip + 0x4138ff] ; call rax
0x00000000005eeda4 : mov eax, dword ptr [rip + 0x413b36] ; call rax
0x00000000005eed57 : mov eax, dword ptr [rip + 0x413b8b] ; call rax
0x00000000005ee5fa : mov eax, dword ptr [rip + 0x4142e0] ; call rax
0x00000000005ee521 : mov eax, dword ptr [rip + 0x4143c1] ; call rax
0x00000000005edfab : mov eax, dword ptr [rip + 0x414937] ; call rax
0x00000000005edda1 : mov eax, dword ptr [rip + 0x414b41] ; call rax
0x00000000005edcde : mov eax, dword ptr [rip + 0x414bfc] ; call rax
0x00000000005edcbd : mov eax, dword ptr [rip + 0x414c25] ; call rax
0x00000000005ed315 : mov eax, dword ptr [rip + 0x415555] ; call rax
0x00000000005ed30c : mov eax, dword ptr [rip + 0x415556] ; call rax
0x00000000005ed2e0 : mov eax, dword ptr [rip + 0x41557a] ; call rax
0x00000000005ed2e9 : mov eax, dword ptr [rip + 0x4155f1] ; call rax
0x00000000005ed2d7 : mov eax, dword ptr [rip + 0x41560b] ; call rax
0x00000000005ecb62 : mov eax, dword ptr [rip + 0x415d80] ; call rax
0x00000000005ec471 : mov eax, dword ptr [rip + 0x416469] ; call rax
0x00000000005ec44d : mov eax, dword ptr [rip + 0x416495] ; call rax
0x00000000005ec00d : mov eax, dword ptr [rip + 0x4168cd] ; call rax
0x00000000005ebfe9 : mov eax, dword ptr [rip + 0x4168f9] ; call rax
0x00000000005eba8d : mov eax, dword ptr [rip + 0x416e55] ; call rax
0x00000000005eb949 : mov eax, dword ptr [rip + 0x416f99] ; call rax
0x00000000005eb88d : mov eax, dword ptr [rip + 0x41704d] ; call rax
0x00000000005eb871 : mov eax, dword ptr [rip + 0x417071] ; call rax
0x00000000005eb705 : mov eax, dword ptr [rip + 0x417165] ; call rax
0x00000000005eb6fc : mov eax, dword ptr [rip + 0x417166] ; call rax
0x00000000005eb6d0 : mov eax, dword ptr [rip + 0x41718a] ; call rax
0x00000000005eb6d9 : mov eax, dword ptr [rip + 0x417201] ; call rax
0x00000000005eb6c7 : mov eax, dword ptr [rip + 0x41721b] ; call rax
0x00000000005eb597 : mov eax, dword ptr [rip + 0x4172d3] ; call rax
0x00000000005eb58e : mov eax, dword ptr [rip + 0x4172d4] ; call rax
0x00000000005eb562 : mov eax, dword ptr [rip + 0x4172f8] ; call rax
0x00000000005eb56b : mov eax, dword ptr [rip + 0x41736f] ; call rax
0x00000000005eb559 : mov eax, dword ptr [rip + 0x417389] ; call rax
0x00000000005eb31d : mov eax, dword ptr [rip + 0x4175c5] ; call rax
0x00000000005eb1a3 : mov eax, dword ptr [rip + 0x41773f] ; call rax
0x00000000005eb0e7 : mov eax, dword ptr [rip + 0x4177f3] ; call rax
0x00000000005eb0cb : mov eax, dword ptr [rip + 0x417817] ; call rax
0x00000000005eaf23 : mov eax, dword ptr [rip + 0x417947] ; call rax
0x00000000005eaf1a : mov eax, dword ptr [rip + 0x417948] ; call rax
0x00000000005eaeee : mov eax, dword ptr [rip + 0x41796c] ; call rax
0x00000000005eaef7 : mov eax, dword ptr [rip + 0x4179e3] ; call rax
0x00000000005eaee5 : mov eax, dword ptr [rip + 0x4179fd] ; call rax
0x00000000005eae45 : mov eax, dword ptr [rip + 0x417a25] ; call rax
0x00000000005eae3c : mov eax, dword ptr [rip + 0x417a26] ; call rax
0x00000000005eae10 : mov eax, dword ptr [rip + 0x417a4a] ; call rax
0x00000000005eae19 : mov eax, dword ptr [rip + 0x417ac1] ; call rax
0x00000000005eae07 : mov eax, dword ptr [rip + 0x417adb] ; call rax
0x00000000005e9f7b : mov eax, dword ptr [rip + 0x4188ef] ; call rax
0x00000000005e9f72 : mov eax, dword ptr [rip + 0x4188f0] ; call rax
0x00000000005e9f46 : mov eax, dword ptr [rip + 0x418914] ; call rax
0x00000000005e9f4f : mov eax, dword ptr [rip + 0x41898b] ; call rax
0x00000000005e9f3d : mov eax, dword ptr [rip + 0x4189a5] ; call rax
0x00000000005e9814 : mov eax, dword ptr [rip + 0x4190ce] ; call rax
0x00000000005e9159 : mov eax, dword ptr [rip + 0x419781] ; call rax
0x00000000005e9135 : mov eax, dword ptr [rip + 0x4197ad] ; call rax
0x00000000005e8cf5 : mov eax, dword ptr [rip + 0x419be5] ; call rax
0x00000000005e8cd1 : mov eax, dword ptr [rip + 0x419c11] ; call rax
0x00000000005e8775 : mov eax, dword ptr [rip + 0x41a16d] ; call rax
0x00000000005e8631 : mov eax, dword ptr [rip + 0x41a2b1] ; call rax
0x00000000005e8575 : mov eax, dword ptr [rip + 0x41a365] ; call rax
0x00000000005e8559 : mov eax, dword ptr [rip + 0x41a389] ; call rax
0x00000000005e83ed : mov eax, dword ptr [rip + 0x41a47d] ; call rax
0x00000000005e83e4 : mov eax, dword ptr [rip + 0x41a47e] ; call rax
0x00000000005e83b8 : mov eax, dword ptr [rip + 0x41a4a2] ; call rax
0x00000000005e83c1 : mov eax, dword ptr [rip + 0x41a519] ; call rax
0x00000000005e83af : mov eax, dword ptr [rip + 0x41a533] ; call rax
0x00000000005e827f : mov eax, dword ptr [rip + 0x41a5eb] ; call rax
0x00000000005e8276 : mov eax, dword ptr [rip + 0x41a5ec] ; call rax
0x00000000005e824a : mov eax, dword ptr [rip + 0x41a610] ; call rax
0x00000000005e8253 : mov eax, dword ptr [rip + 0x41a687] ; call rax
0x00000000005e8241 : mov eax, dword ptr [rip + 0x41a6a1] ; call rax
0x00000000005e8005 : mov eax, dword ptr [rip + 0x41a8dd] ; call rax
0x00000000005e7e8b : mov eax, dword ptr [rip + 0x41aa57] ; call rax
0x00000000005e7dcf : mov eax, dword ptr [rip + 0x41ab0b] ; call rax
0x00000000005e7db3 : mov eax, dword ptr [rip + 0x41ab2f] ; call rax
0x00000000005e7c0b : mov eax, dword ptr [rip + 0x41ac5f] ; call rax
0x00000000005e7c02 : mov eax, dword ptr [rip + 0x41ac60] ; call rax
0x00000000005e7bd6 : mov eax, dword ptr [rip + 0x41ac84] ; call rax
0x00000000005e7bdf : mov eax, dword ptr [rip + 0x41acfb] ; call rax
0x00000000005e7bcd : mov eax, dword ptr [rip + 0x41ad15] ; call rax
0x00000000005e7b2d : mov eax, dword ptr [rip + 0x41ad3d] ; call rax
0x00000000005e7b24 : mov eax, dword ptr [rip + 0x41ad3e] ; call rax
0x00000000005e7af8 : mov eax, dword ptr [rip + 0x41ad62] ; call rax
0x00000000005e7b01 : mov eax, dword ptr [rip + 0x41add9] ; call rax
0x00000000005e7aef : mov eax, dword ptr [rip + 0x41adf3] ; call rax
0x00000000005e6b01 : mov eax, dword ptr [rip + 0x41bde1] ; call rax
0x00000000005e6a39 : mov eax, dword ptr [rip + 0x41bea1] ; call rax
0x00000000005e6a1d : mov eax, dword ptr [rip + 0x41bec5] ; call rax
0x00000000005e6965 : mov eax, dword ptr [rip + 0x41bf75] ; call rax
0x00000000005e6949 : mov eax, dword ptr [rip + 0x41bf99] ; call rax
0x00000000005e65c7 : mov eax, dword ptr [rip + 0x41c313] ; call rax
0x00000000005e65ab : mov eax, dword ptr [rip + 0x41c337] ; call rax
0x00000000005e5ece : mov eax, dword ptr [rip + 0x41ca14] ; call rax
0x00000000005e5cea : mov eax, dword ptr [rip + 0x41cbf8] ; call rax
0x00000000005e59db : mov eax, dword ptr [rip + 0x41ceff] ; call rax
0x00000000005e59b5 : mov eax, dword ptr [rip + 0x41cf2d] ; call rax
0x00000000005e57bc : mov eax, dword ptr [rip + 0x41d126] ; call rax
0x00000000005e56ff : mov eax, dword ptr [rip + 0x41d1db] ; call rax
0x00000000005e56e3 : mov eax, dword ptr [rip + 0x41d1ff] ; call rax
0x00000000005e5581 : mov eax, dword ptr [rip + 0x41d361] ; call rax
0x00000000005e54c1 : mov eax, dword ptr [rip + 0x41d419] ; call rax
0x00000000005e54a5 : mov eax, dword ptr [rip + 0x41d43d] ; call rax
0x00000000005e5310 : mov eax, dword ptr [rip + 0x41d5d2] ; call rax
0x00000000005e51e5 : mov eax, dword ptr [rip + 0x41d6f5] ; call rax
0x00000000005e51c9 : mov eax, dword ptr [rip + 0x41d719] ; call rax
0x00000000005e4f00 : mov eax, dword ptr [rip + 0x41d9e2] ; call rax
0x00000000005e4d76 : mov eax, dword ptr [rip + 0x41db6c] ; call rax
0x00000000005e4b31 : mov eax, dword ptr [rip + 0x41dda9] ; call rax
0x00000000005e4b0b : mov eax, dword ptr [rip + 0x41ddd7] ; call rax
0x00000000005e4690 : mov eax, dword ptr [rip + 0x41e252] ; call rax
0x00000000005e43ef : mov eax, dword ptr [rip + 0x41e4f3] ; call rax
0x00000000005e4146 : mov eax, dword ptr [rip + 0x41e79c] ; call rax
0x00000000005e3dfc : mov eax, dword ptr [rip + 0x41eae6] ; call rax
0x00000000005e3b56 : mov eax, dword ptr [rip + 0x41ed8c] ; call rax
0x00000000005e38b0 : mov eax, dword ptr [rip + 0x41f032] ; call rax
0x00000000005e35a9 : mov eax, dword ptr [rip + 0x41f339] ; call rax
0x00000000005e331c : mov eax, dword ptr [rip + 0x41f5be] ; call rax
0x00000000005e32fb : mov eax, dword ptr [rip + 0x41f5e7] ; call rax
0x00000000005e305c : mov eax, dword ptr [rip + 0x41f87e] ; call rax
0x00000000005e303b : mov eax, dword ptr [rip + 0x41f8a7] ; call rax
0x00000000005e2eb7 : mov eax, dword ptr [rip + 0x41fa23] ; call rax
0x00000000005e2e93 : mov eax, dword ptr [rip + 0x41fa4f] ; call rax
0x00000000005e2ddb : mov eax, dword ptr [rip + 0x41faff] ; call rax
0x00000000005e2db5 : mov eax, dword ptr [rip + 0x41fb2d] ; call rax
0x00000000005e2cfd : mov eax, dword ptr [rip + 0x41fbdd] ; call rax
0x00000000005e2cd7 : mov eax, dword ptr [rip + 0x41fc0b] ; call rax
0x00000000005e2c1f : mov eax, dword ptr [rip + 0x41fcbb] ; call rax
0x00000000005e2bf9 : mov eax, dword ptr [rip + 0x41fce9] ; call rax
0x00000000005e2716 : mov eax, dword ptr [rip + 0x4201cc] ; call rax
0x00000000005e26f0 : mov eax, dword ptr [rip + 0x4201ea] ; call rax
0x00000000005e26b0 : mov eax, dword ptr [rip + 0x420232] ; call rax
0x00000000005e266e : mov eax, dword ptr [rip + 0x420274] ; call rax
0x00000000005e25c4 : mov eax, dword ptr [rip + 0x420316] ; call rax
0x00000000005e2584 : mov eax, dword ptr [rip + 0x42035e] ; call rax
0x00000000005e2542 : mov eax, dword ptr [rip + 0x4203a0] ; call rax
0x00000000005e24c5 : mov eax, dword ptr [rip + 0x420415] ; call rax
0x00000000005e2485 : mov eax, dword ptr [rip + 0x42045d] ; call rax
0x00000000005e2445 : mov eax, dword ptr [rip + 0x42049d] ; call rax
0x00000000005e23ce : mov eax, dword ptr [rip + 0x42050c] ; call rax
0x00000000005e238e : mov eax, dword ptr [rip + 0x420554] ; call rax
0x00000000005e234e : mov eax, dword ptr [rip + 0x420594] ; call rax
0x00000000005e2296 : mov eax, dword ptr [rip + 0x42064c] ; call rax
0x00000000005e20f5 : mov eax, dword ptr [rip + 0x4207e5] ; call rax
0x00000000005e20bb : mov eax, dword ptr [rip + 0x420827] ; call rax
0x00000000005e1dec : mov eax, dword ptr [rip + 0x420af6] ; call rax
0x00000000005e1d18 : mov eax, dword ptr [rip + 0x420bca] ; call rax
0x00000000005e1b9f : mov eax, dword ptr [rip + 0x420d3b] ; call rax
0x00000000005e1b79 : mov eax, dword ptr [rip + 0x420d69] ; call rax
0x00000000005e1991 : mov eax, dword ptr [rip + 0x420f51] ; call rax
0x00000000005e18d1 : mov eax, dword ptr [rip + 0x421009] ; call rax
0x00000000005e18b5 : mov eax, dword ptr [rip + 0x42102d] ; call rax
0x00000000005e170f : mov eax, dword ptr [rip + 0x4211cb] ; call rax
0x00000000005e16f3 : mov eax, dword ptr [rip + 0x4211ef] ; call rax
0x00000000005e0f1f : mov eax, dword ptr [rip + 0x42194b] ; call rax
0x00000000005e0f06 : mov eax, dword ptr [rip + 0x42195c] ; call rax
0x00000000005e0f7c : mov eax, dword ptr [rip + 0x42195e] ; call rax
0x00000000005e0e82 : mov eax, dword ptr [rip + 0x4219d8] ; call rax
0x00000000005e0ec5 : mov eax, dword ptr [rip + 0x421a1d] ; call rax
0x00000000005e0e8b : mov eax, dword ptr [rip + 0x421a4f] ; call rax
0x00000000005e0e79 : mov eax, dword ptr [rip + 0x421a69] ; call rax
0x00000000005e087f : mov eax, dword ptr [rip + 0x421feb] ; call rax
0x00000000005e0866 : mov eax, dword ptr [rip + 0x421ffc] ; call rax
0x00000000005e08dc : mov eax, dword ptr [rip + 0x421ffe] ; call rax
0x00000000005e07e2 : mov eax, dword ptr [rip + 0x422078] ; call rax
0x00000000005e0825 : mov eax, dword ptr [rip + 0x4220bd] ; call rax
0x00000000005e07eb : mov eax, dword ptr [rip + 0x4220ef] ; call rax
0x00000000005e07d9 : mov eax, dword ptr [rip + 0x422109] ; call rax
0x00000000005e0324 : mov eax, dword ptr [rip + 0x4225be] ; call rax
0x00000000005e0267 : mov eax, dword ptr [rip + 0x422673] ; call rax
0x00000000005e024b : mov eax, dword ptr [rip + 0x422697] ; call rax
0x00000000005dfdcb : mov eax, dword ptr [rip + 0x422b17] ; call rax
0x00000000005dfcda : mov eax, dword ptr [rip + 0x422c08] ; call rax
0x00000000005df375 : mov eax, dword ptr [rip + 0x42356d] ; call rax
0x00000000005df282 : mov eax, dword ptr [rip + 0x423658] ; call rax
0x00000000005df259 : mov eax, dword ptr [rip + 0x423689] ; call rax
0x00000000005df0d6 : mov eax, dword ptr [rip + 0x42380c] ; call rax
0x00000000005df00c : mov eax, dword ptr [rip + 0x4238ce] ; call rax
0x00000000005defe3 : mov eax, dword ptr [rip + 0x4238ff] ; call rax
0x00000000005de4fb : mov eax, dword ptr [rip + 0x4243df] ; call rax
0x00000000005de4cb : mov eax, dword ptr [rip + 0x424417] ; call rax
0x00000000005de413 : mov eax, dword ptr [rip + 0x4244c7] ; call rax
0x00000000005de3e1 : mov eax, dword ptr [rip + 0x424501] ; call rax
0x00000000005de2b5 : mov eax, dword ptr [rip + 0x424625] ; call rax
0x00000000005de283 : mov eax, dword ptr [rip + 0x42465f] ; call rax
0x00000000005de1cb : mov eax, dword ptr [rip + 0x42470f] ; call rax
0x00000000005de199 : mov eax, dword ptr [rip + 0x424749] ; call rax
0x00000000005ddef6 : mov eax, dword ptr [rip + 0x4249ec] ; call rax
0x00000000005dda71 : mov eax, dword ptr [rip + 0x424e71] ; call rax
0x00000000005dd883 : mov eax, dword ptr [rip + 0x425057] ; call rax
0x00000000005dd7e8 : mov eax, dword ptr [rip + 0x4250fa] ; call rax
0x00000000005dd529 : mov eax, dword ptr [rip + 0x4253b1] ; call rax
0x00000000005dd48e : mov eax, dword ptr [rip + 0x425454] ; call rax
0x00000000005dcf88 : mov eax, dword ptr [rip + 0x425952] ; call rax
0x00000000005dceed : mov eax, dword ptr [rip + 0x4259f5] ; call rax
0x00000000005dcb06 : mov eax, dword ptr [rip + 0x425dd4] ; call rax
0x00000000005dca6e : mov eax, dword ptr [rip + 0x425e74] ; call rax
0x00000000005dc0f1 : mov eax, dword ptr [rip + 0x4267f1] ; call rax
0x00000000005dc031 : mov eax, dword ptr [rip + 0x4268a9] ; call rax
0x00000000005dc015 : mov eax, dword ptr [rip + 0x4268cd] ; call rax
0x00000000005dbe6a : mov eax, dword ptr [rip + 0x426a78] ; call rax
0x00000000005dbd1d : mov eax, dword ptr [rip + 0x426bbd] ; call rax
0x00000000005dbd01 : mov eax, dword ptr [rip + 0x426be1] ; call rax
0x00000000005dbb88 : mov eax, dword ptr [rip + 0x426d5a] ; call rax
0x00000000005db348 : mov eax, dword ptr [rip + 0x42759a] ; call rax
0x00000000005db231 : mov eax, dword ptr [rip + 0x4276a9] ; call rax
0x00000000005db215 : mov eax, dword ptr [rip + 0x4276cd] ; call rax
0x00000000005dafc8 : mov eax, dword ptr [rip + 0x427912] ; call rax
0x00000000005dafa7 : mov eax, dword ptr [rip + 0x42793b] ; call rax
0x00000000005dad08 : mov eax, dword ptr [rip + 0x427bd2] ; call rax
0x00000000005dace7 : mov eax, dword ptr [rip + 0x427bfb] ; call rax
0x00000000005da9a6 : mov eax, dword ptr [rip + 0x427f3c] ; call rax
0x00000000005da4a4 : mov eax, dword ptr [rip + 0x42843e] ; call rax
0x00000000005da44e : mov eax, dword ptr [rip + 0x428494] ; call rax
0x00000000005da2e6 : mov eax, dword ptr [rip + 0x4285f4] ; call rax
0x00000000005da2b9 : mov eax, dword ptr [rip + 0x428629] ; call rax
0x00000000005da16a : mov eax, dword ptr [rip + 0x428778] ; call rax
0x00000000005da0ad : mov eax, dword ptr [rip + 0x42882d] ; call rax
0x00000000005da091 : mov eax, dword ptr [rip + 0x428851] ; call rax
0x00000000005d9f3c : mov eax, dword ptr [rip + 0x4289a6] ; call rax
0x00000000005d9e7f : mov eax, dword ptr [rip + 0x428a5b] ; call rax
0x00000000005d9e63 : mov eax, dword ptr [rip + 0x428a7f] ; call rax
0x00000000005d9d0e : mov eax, dword ptr [rip + 0x428bd4] ; call rax
0x00000000005d9c51 : mov eax, dword ptr [rip + 0x428c89] ; call rax
0x00000000005d9c35 : mov eax, dword ptr [rip + 0x428cad] ; call rax
0x00000000005d9ad8 : mov eax, dword ptr [rip + 0x428e0a] ; call rax
0x00000000005d9a1b : mov eax, dword ptr [rip + 0x428ebf] ; call rax
0x00000000005d99ff : mov eax, dword ptr [rip + 0x428ee3] ; call rax
0x00000000005d9509 : mov eax, dword ptr [rip + 0x4293d9] ; call rax
0x00000000005d9441 : mov eax, dword ptr [rip + 0x429499] ; call rax
0x00000000005d9425 : mov eax, dword ptr [rip + 0x4294bd] ; call rax
0x00000000005d936d : mov eax, dword ptr [rip + 0x42956d] ; call rax
0x00000000005d9351 : mov eax, dword ptr [rip + 0x429591] ; call rax
0x00000000005d8ffb : mov eax, dword ptr [rip + 0x4298df] ; call rax
0x00000000005d8fdf : mov eax, dword ptr [rip + 0x429903] ; call rax
0x00000000005d8940 : mov eax, dword ptr [rip + 0x429fa2] ; call rax
0x00000000005d87b7 : mov eax, dword ptr [rip + 0x42a12b] ; call rax
0x00000000005d84dd : mov eax, dword ptr [rip + 0x42a3fd] ; call rax
0x00000000005d84b7 : mov eax, dword ptr [rip + 0x42a42b] ; call rax
0x00000000005d82be : mov eax, dword ptr [rip + 0x42a624] ; call rax
0x00000000005d8201 : mov eax, dword ptr [rip + 0x42a6d9] ; call rax
0x00000000005d81e5 : mov eax, dword ptr [rip + 0x42a6fd] ; call rax
0x00000000005d808f : mov eax, dword ptr [rip + 0x42a853] ; call rax
0x00000000005d7fcf : mov eax, dword ptr [rip + 0x42a90b] ; call rax
0x00000000005d7fb3 : mov eax, dword ptr [rip + 0x42a92f] ; call rax
0x00000000005d7e2c : mov eax, dword ptr [rip + 0x42aab6] ; call rax
0x00000000005d7d01 : mov eax, dword ptr [rip + 0x42abd9] ; call rax
0x00000000005d7ce5 : mov eax, dword ptr [rip + 0x42abfd] ; call rax
0x00000000005d7a4f : mov eax, dword ptr [rip + 0x42ae93] ; call rax
0x00000000005d7913 : mov eax, dword ptr [rip + 0x42afcf] ; call rax
0x00000000005d76db : mov eax, dword ptr [rip + 0x42b1ff] ; call rax
0x00000000005d76b5 : mov eax, dword ptr [rip + 0x42b22d] ; call rax
0x00000000005d7246 : mov eax, dword ptr [rip + 0x42b69c] ; call rax
0x00000000005d6fb0 : mov eax, dword ptr [rip + 0x42b932] ; call rax
0x00000000005d6d1d : mov eax, dword ptr [rip + 0x42bbc5] ; call rax
0x00000000005d6a0e : mov eax, dword ptr [rip + 0x42bed4] ; call rax
0x00000000005d6798 : mov eax, dword ptr [rip + 0x42c14a] ; call rax
0x00000000005d6526 : mov eax, dword ptr [rip + 0x42c3bc] ; call rax
0x00000000005d6253 : mov eax, dword ptr [rip + 0x42c68f] ; call rax
0x00000000005d5fd2 : mov eax, dword ptr [rip + 0x42c908] ; call rax
0x00000000005d5fb1 : mov eax, dword ptr [rip + 0x42c931] ; call rax
0x00000000005d5d1e : mov eax, dword ptr [rip + 0x42cbbc] ; call rax
0x00000000005d5cfd : mov eax, dword ptr [rip + 0x42cbe5] ; call rax
0x00000000005d5b79 : mov eax, dword ptr [rip + 0x42cd61] ; call rax
0x00000000005d5b55 : mov eax, dword ptr [rip + 0x42cd8d] ; call rax
0x00000000005d5a9d : mov eax, dword ptr [rip + 0x42ce3d] ; call rax
0x00000000005d5a77 : mov eax, dword ptr [rip + 0x42ce6b] ; call rax
0x00000000005d59bf : mov eax, dword ptr [rip + 0x42cf1b] ; call rax
0x00000000005d5999 : mov eax, dword ptr [rip + 0x42cf49] ; call rax
0x00000000005d58e1 : mov eax, dword ptr [rip + 0x42cff9] ; call rax
0x00000000005d58bb : mov eax, dword ptr [rip + 0x42d027] ; call rax
0x00000000005d52fc : mov eax, dword ptr [rip + 0x42d5e6] ; call rax
0x00000000005d52d6 : mov eax, dword ptr [rip + 0x42d604] ; call rax
0x00000000005d5296 : mov eax, dword ptr [rip + 0x42d64c] ; call rax
0x00000000005d5254 : mov eax, dword ptr [rip + 0x42d68e] ; call rax
0x00000000005d51aa : mov eax, dword ptr [rip + 0x42d730] ; call rax
0x00000000005d516a : mov eax, dword ptr [rip + 0x42d778] ; call rax
0x00000000005d5128 : mov eax, dword ptr [rip + 0x42d7ba] ; call rax
0x00000000005d50ab : mov eax, dword ptr [rip + 0x42d82f] ; call rax
0x00000000005d506b : mov eax, dword ptr [rip + 0x42d877] ; call rax
0x00000000005d502b : mov eax, dword ptr [rip + 0x42d8b7] ; call rax
0x00000000005d4fb4 : mov eax, dword ptr [rip + 0x42d926] ; call rax
0x00000000005d4f74 : mov eax, dword ptr [rip + 0x42d96e] ; call rax
0x00000000005d4f34 : mov eax, dword ptr [rip + 0x42d9ae] ; call rax
0x00000000005d4e7c : mov eax, dword ptr [rip + 0x42da66] ; call rax
0x00000000005d4cdb : mov eax, dword ptr [rip + 0x42dbff] ; call rax
0x00000000005d4ca1 : mov eax, dword ptr [rip + 0x42dc41] ; call rax
0x00000000005d4ac5 : mov eax, dword ptr [rip + 0x42de1d] ; call rax
0x00000000005d4a05 : mov eax, dword ptr [rip + 0x42ded5] ; call rax
0x00000000005d49e9 : mov eax, dword ptr [rip + 0x42def9] ; call rax
0x00000000005d4843 : mov eax, dword ptr [rip + 0x42e097] ; call rax
0x00000000005d4827 : mov eax, dword ptr [rip + 0x42e0bb] ; call rax
0x00000000005d4079 : mov eax, dword ptr [rip + 0x42e7f1] ; call rax
0x00000000005d4060 : mov eax, dword ptr [rip + 0x42e802] ; call rax
0x00000000005d40d6 : mov eax, dword ptr [rip + 0x42e804] ; call rax
0x00000000005d3fdc : mov eax, dword ptr [rip + 0x42e87e] ; call rax
0x00000000005d401f : mov eax, dword ptr [rip + 0x42e8c3] ; call rax
0x00000000005d3fe5 : mov eax, dword ptr [rip + 0x42e8f5] ; call rax
0x00000000005d3fd3 : mov eax, dword ptr [rip + 0x42e90f] ; call rax
0x00000000005d39d9 : mov eax, dword ptr [rip + 0x42ee91] ; call rax
0x00000000005d39c0 : mov eax, dword ptr [rip + 0x42eea2] ; call rax
0x00000000005d3a36 : mov eax, dword ptr [rip + 0x42eea4] ; call rax
0x00000000005d393c : mov eax, dword ptr [rip + 0x42ef1e] ; call rax
0x00000000005d397f : mov eax, dword ptr [rip + 0x42ef63] ; call rax
0x00000000005d3945 : mov eax, dword ptr [rip + 0x42ef95] ; call rax
0x00000000005d3933 : mov eax, dword ptr [rip + 0x42efaf] ; call rax
0x00000000005d347e : mov eax, dword ptr [rip + 0x42f464] ; call rax
0x00000000005d33c1 : mov eax, dword ptr [rip + 0x42f519] ; call rax
0x00000000005d33a5 : mov eax, dword ptr [rip + 0x42f53d] ; call rax
0x00000000005d2f30 : mov eax, dword ptr [rip + 0x42f9b2] ; call rax
0x00000000005d2e4a : mov eax, dword ptr [rip + 0x42fa98] ; call rax
0x00000000005d252f : mov eax, dword ptr [rip + 0x4303b3] ; call rax
0x00000000005d243d : mov eax, dword ptr [rip + 0x43049d] ; call rax
0x00000000005d2417 : mov eax, dword ptr [rip + 0x4304cb] ; call rax
0x00000000005d2297 : mov eax, dword ptr [rip + 0x43064b] ; call rax
0x00000000005d21d1 : mov eax, dword ptr [rip + 0x430709] ; call rax
0x00000000005d21ab : mov eax, dword ptr [rip + 0x430737] ; call rax
0x00000000005d1711 : mov eax, dword ptr [rip + 0x4311c9] ; call rax
0x00000000005d16e1 : mov eax, dword ptr [rip + 0x431201] ; call rax
0x00000000005d1629 : mov eax, dword ptr [rip + 0x4312b1] ; call rax
0x00000000005d15f7 : mov eax, dword ptr [rip + 0x4312eb] ; call rax
0x00000000005d14cb : mov eax, dword ptr [rip + 0x43140f] ; call rax
0x00000000005d1499 : mov eax, dword ptr [rip + 0x431449] ; call rax
0x00000000005d13e1 : mov eax, dword ptr [rip + 0x4314f9] ; call rax
0x00000000005d13af : mov eax, dword ptr [rip + 0x431533] ; call rax
0x00000000005d1117 : mov eax, dword ptr [rip + 0x4317cb] ; call rax
0x00000000005d0c9d : mov eax, dword ptr [rip + 0x431c45] ; call rax
0x00000000005d0ad8 : mov eax, dword ptr [rip + 0x431e02] ; call rax
0x00000000005d0a3d : mov eax, dword ptr [rip + 0x431ea5] ; call rax
0x00000000005d07ab : mov eax, dword ptr [rip + 0x43212f] ; call rax
0x00000000005d0710 : mov eax, dword ptr [rip + 0x4321d2] ; call rax
0x00000000005d024c : mov eax, dword ptr [rip + 0x43268e] ; call rax
0x00000000005d01b1 : mov eax, dword ptr [rip + 0x432731] ; call rax
0x00000000005cfe20 : mov eax, dword ptr [rip + 0x432aba] ; call rax
0x00000000005cfd88 : mov eax, dword ptr [rip + 0x432b5a] ; call rax
0x00000000005cf485 : mov eax, dword ptr [rip + 0x43345d] ; call rax
0x00000000005cf3c5 : mov eax, dword ptr [rip + 0x433515] ; call rax
0x00000000005cf3a9 : mov eax, dword ptr [rip + 0x433539] ; call rax
0x00000000005cf20c : mov eax, dword ptr [rip + 0x4336d6] ; call rax
0x00000000005cf0bf : mov eax, dword ptr [rip + 0x43381b] ; call rax
0x00000000005cf0a3 : mov eax, dword ptr [rip + 0x43383f] ; call rax
0x00000000005cef34 : mov eax, dword ptr [rip + 0x4339ae] ; call rax
0x00000000005ce75a : mov eax, dword ptr [rip + 0x434188] ; call rax
0x00000000005ce643 : mov eax, dword ptr [rip + 0x434297] ; call rax
0x00000000005ce627 : mov eax, dword ptr [rip + 0x4342bb] ; call rax
0x00000000005ce3e6 : mov eax, dword ptr [rip + 0x4344f4] ; call rax
0x00000000005ce3c5 : mov eax, dword ptr [rip + 0x43451d] ; call rax
0x00000000005ce132 : mov eax, dword ptr [rip + 0x4347a8] ; call rax
0x00000000005ce111 : mov eax, dword ptr [rip + 0x4347d1] ; call rax
0x00000000005cde04 : mov eax, dword ptr [rip + 0x434ade] ; call rax
0x00000000005cd94e : mov eax, dword ptr [rip + 0x434f94] ; call rax
0x00000000005cd8f8 : mov eax, dword ptr [rip + 0x434fea] ; call rax
0x00000000005cd790 : mov eax, dword ptr [rip + 0x43514a] ; call rax
0x00000000005cd763 : mov eax, dword ptr [rip + 0x43517f] ; call rax
0x00000000005cd614 : mov eax, dword ptr [rip + 0x4352ce] ; call rax
0x00000000005cd557 : mov eax, dword ptr [rip + 0x435383] ; call rax
0x00000000005cd53b : mov eax, dword ptr [rip + 0x4353a7] ; call rax
0x00000000005cd3e6 : mov eax, dword ptr [rip + 0x4354fc] ; call rax
0x00000000005cd329 : mov eax, dword ptr [rip + 0x4355b1] ; call rax
0x00000000005cd30d : mov eax, dword ptr [rip + 0x4355d5] ; call rax
0x00000000005cd1b8 : mov eax, dword ptr [rip + 0x43572a] ; call rax
0x00000000005cd0fb : mov eax, dword ptr [rip + 0x4357df] ; call rax
0x00000000005cd0df : mov eax, dword ptr [rip + 0x435803] ; call rax
0x00000000005ccf82 : mov eax, dword ptr [rip + 0x435960] ; call rax
0x00000000005ccec5 : mov eax, dword ptr [rip + 0x435a15] ; call rax
0x00000000005ccea9 : mov eax, dword ptr [rip + 0x435a39] ; call rax
0x00000000005be9c7 : mov eax, dword ptr [rip + 0x443f13] ; jmp rax
0x00000000005b078d : mov eax, dword ptr [rip + 0x45214d] ; jmp rax
0x00000000005b068a : mov eax, dword ptr [rip + 0x4554f8] ; ret
0x00000000005b037a : mov eax, dword ptr [rip + 0x455538] ; ret
0x00000000005b0589 : mov eax, dword ptr [rip + 0x455539] ; ret
0x00000000005b031a : mov eax, dword ptr [rip + 0x455568] ; ret
0x00000000005b0349 : mov eax, dword ptr [rip + 0x455599] ; ret
0x00000000005afb89 : mov eax, dword ptr [rip + 0x455ed9] ; ret
0x00000000005afad9 : mov eax, dword ptr [rip + 0x455f59] ; ret
0x00000000005afb59 : mov eax, dword ptr [rip + 0x455ff9] ; ret
0x00000000005af7c9 : mov eax, dword ptr [rip + 0x456239] ; ret
0x00000000005af55a : mov eax, dword ptr [rip + 0x456658] ; ret
0x00000000005a9657 : mov eax, dword ptr [rip + 0x459283] ; jmp rax
0x00000000005a8d87 : mov eax, dword ptr [rip + 0x459b53] ; jmp rax
0x00000000005a8cf7 : mov eax, dword ptr [rip + 0x459be3] ; jmp rax
0x00000000005a8bc7 : mov eax, dword ptr [rip + 0x459d13] ; jmp rax
0x00000000005a8b57 : mov eax, dword ptr [rip + 0x459d83] ; jmp rax
0x00000000005a3c77 : mov eax, dword ptr [rip + 0x45ec63] ; jmp rax
0x00000000005a2dc7 : mov eax, dword ptr [rip + 0x45fb13] ; jmp rax
0x00000000005a2d37 : mov eax, dword ptr [rip + 0x45fba3] ; jmp rax
0x00000000005a2c47 : mov eax, dword ptr [rip + 0x45fc93] ; jmp rax
0x00000000005a2bd7 : mov eax, dword ptr [rip + 0x45fd03] ; jmp rax
0x0000000000598b07 : mov eax, dword ptr [rip + 0x469dd3] ; jmp rax
0x0000000000597f47 : mov eax, dword ptr [rip + 0x46a993] ; jmp rax
0x0000000000597eb7 : mov eax, dword ptr [rip + 0x46aa23] ; jmp rax
0x0000000000597d87 : mov eax, dword ptr [rip + 0x46ab53] ; jmp rax
0x0000000000597d17 : mov eax, dword ptr [rip + 0x46abc3] ; jmp rax
0x0000000000597be7 : mov eax, dword ptr [rip + 0x46acf3] ; jmp rax
0x0000000000596fe7 : mov eax, dword ptr [rip + 0x46b8f3] ; jmp rax
0x0000000000596f57 : mov eax, dword ptr [rip + 0x46b983] ; jmp rax
0x0000000000596e67 : mov eax, dword ptr [rip + 0x46ba73] ; jmp rax
0x0000000000596df7 : mov eax, dword ptr [rip + 0x46bae3] ; jmp rax
0x0000000000596cc7 : mov eax, dword ptr [rip + 0x46bc13] ; jmp rax
0x0000000000596187 : mov eax, dword ptr [rip + 0x46c753] ; jmp rax
0x00000000005960f7 : mov eax, dword ptr [rip + 0x46c7e3] ; jmp rax
0x0000000000596007 : mov eax, dword ptr [rip + 0x46c8d3] ; jmp rax
0x0000000000595f97 : mov eax, dword ptr [rip + 0x46c943] ; jmp rax
0x000000000058807d : mov eax, dword ptr [rip + 0x47a85d] ; jmp rax
0x0000000000578397 : mov eax, dword ptr [rip + 0x48a543] ; jmp rax
0x0000000000572fd7 : mov eax, dword ptr [rip + 0x48f903] ; jmp rax
0x0000000000572f47 : mov eax, dword ptr [rip + 0x48f993] ; jmp rax
0x0000000000572e57 : mov eax, dword ptr [rip + 0x48fa83] ; jmp rax
0x0000000000572de7 : mov eax, dword ptr [rip + 0x48faf3] ; jmp rax
0x000000000056ca17 : mov eax, dword ptr [rip + 0x495ec3] ; jmp rax
0x000000000056c457 : mov eax, dword ptr [rip + 0x496483] ; jmp rax
0x000000000056b897 : mov eax, dword ptr [rip + 0x497043] ; jmp rax
0x000000000056b807 : mov eax, dword ptr [rip + 0x4970d3] ; jmp rax
0x000000000056b6d7 : mov eax, dword ptr [rip + 0x497203] ; jmp rax
0x000000000056b667 : mov eax, dword ptr [rip + 0x497273] ; jmp rax
0x00000000005593f7 : mov eax, dword ptr [rip + 0x4a94e3] ; jmp rax
0x0000000000558b27 : mov eax, dword ptr [rip + 0x4a9db3] ; jmp rax
0x0000000000558a97 : mov eax, dword ptr [rip + 0x4a9e43] ; jmp rax
0x0000000000558977 : mov eax, dword ptr [rip + 0x4a9f63] ; jmp rax
0x0000000000558907 : mov eax, dword ptr [rip + 0x4a9fd3] ; jmp rax
0x0000000000550f2b : mov eax, dword ptr [rip + 0x4b19af] ; jmp rax
0x0000000000550db7 : mov eax, dword ptr [rip + 0x4b1b23] ; jmp rax
0x0000000000550337 : mov eax, dword ptr [rip + 0x4b25a3] ; jmp rax
0x00000000005501b7 : mov eax, dword ptr [rip + 0x4b2723] ; jmp rax
0x000000000054f9b7 : mov eax, dword ptr [rip + 0x4b2f23] ; jmp rax
0x000000000054f927 : mov eax, dword ptr [rip + 0x4b2fb3] ; jmp rax
0x000000000054f837 : mov eax, dword ptr [rip + 0x4b30a3] ; jmp rax
0x000000000054f7c7 : mov eax, dword ptr [rip + 0x4b3113] ; jmp rax
0x00000000005482c0 : mov eax, dword ptr [rip + 0x4b5d9a] ; ret
0x00000000005481bd : mov eax, dword ptr [rip + 0x4ba71d] ; jmp rax
0x0000000000547c16 : mov eax, dword ptr [rip + 0x4bacc4] ; jmp rax
0x0000000000547839 : mov eax, dword ptr [rip + 0x4bb0a1] ; jmp rax
0x0000000000547416 : mov eax, dword ptr [rip + 0x4bb4c4] ; jmp rax
0x0000000000547117 : mov eax, dword ptr [rip + 0x4bb7c3] ; jmp rax
0x0000000000546577 : mov eax, dword ptr [rip + 0x4bc363] ; jmp rax
0x00000000005464e7 : mov eax, dword ptr [rip + 0x4bc3f3] ; jmp rax
0x0000000000545457 : mov eax, dword ptr [rip + 0x4bd483] ; jmp rax
0x00000000005453e7 : mov eax, dword ptr [rip + 0x4bd4f3] ; jmp rax
0x0000000000535aba : mov eax, dword ptr [rip + 0x4cce20] ; jmp rax
0x000000000053593a : mov eax, dword ptr [rip + 0x4ccfa0] ; jmp rax
0x00000000005320e7 : mov eax, dword ptr [rip + 0x4d07f3] ; jmp rax
0x0000000000531f77 : mov eax, dword ptr [rip + 0x4d0963] ; jmp rax
0x0000000000530117 : mov eax, dword ptr [rip + 0x4d27c3] ; jmp rax
0x0000000000530087 : mov eax, dword ptr [rip + 0x4d2853] ; jmp rax
0x000000000052ff67 : mov eax, dword ptr [rip + 0x4d2973] ; jmp rax
0x000000000052fef7 : mov eax, dword ptr [rip + 0x4d29e3] ; jmp rax
0x000000000052fad7 : mov eax, dword ptr [rip + 0x4d2e03] ; jmp rax
0x000000000052eed7 : mov eax, dword ptr [rip + 0x4d3a03] ; jmp rax
0x000000000052ee47 : mov eax, dword ptr [rip + 0x4d3a93] ; jmp rax
0x000000000052ed57 : mov eax, dword ptr [rip + 0x4d3b83] ; jmp rax
0x000000000052ece7 : mov eax, dword ptr [rip + 0x4d3bf3] ; jmp rax
0x000000000052e827 : mov eax, dword ptr [rip + 0x4d40b3] ; jmp rax
0x000000000052dc67 : mov eax, dword ptr [rip + 0x4d4c73] ; jmp rax
0x000000000052dbd7 : mov eax, dword ptr [rip + 0x4d4d03] ; jmp rax
0x000000000052daa7 : mov eax, dword ptr [rip + 0x4d4e33] ; jmp rax
0x000000000052da37 : mov eax, dword ptr [rip + 0x4d4ea3] ; jmp rax
0x000000000052969a : mov eax, dword ptr [rip + 0x4d9240] ; jmp rax
0x00000000005295da : mov eax, dword ptr [rip + 0x4d9300] ; jmp rax
0x000000000050d94e : mov eax, dword ptr [rip + 0x4f4f8c] ; jmp rax
0x000000000050c9e7 : mov eax, dword ptr [rip + 0x4f5ef3] ; jmp rax
0x000000000050be37 : mov eax, dword ptr [rip + 0x4f6aa3] ; jmp rax
0x000000000050bda7 : mov eax, dword ptr [rip + 0x4f6b33] ; jmp rax
0x000000000050bc97 : mov eax, dword ptr [rip + 0x4f6c43] ; jmp rax
0x000000000050bc27 : mov eax, dword ptr [rip + 0x4f6cb3] ; jmp rax
0x0000000000505e27 : mov eax, dword ptr [rip + 0x4fcab3] ; jmp rax
0x0000000000505cb7 : mov eax, dword ptr [rip + 0x4fcc23] ; jmp rax
0x0000000000505237 : mov eax, dword ptr [rip + 0x4fd6a3] ; jmp rax
0x0000000000504f47 : mov eax, dword ptr [rip + 0x4fd993] ; jmp rax
0x0000000000504b67 : mov eax, dword ptr [rip + 0x4fdd73] ; jmp rax
0x00000000005045f7 : mov eax, dword ptr [rip + 0x4fe2e3] ; jmp rax
0x0000000000503a47 : mov eax, dword ptr [rip + 0x4fee93] ; jmp rax
0x0000000000501a92 : mov eax, dword ptr [rip + 0x500e48] ; jmp rax
0x00000000004f4147 : mov eax, dword ptr [rip + 0x50e79b] ; call rax
0x00000000004f40e7 : mov eax, dword ptr [rip + 0x50e7fb] ; call rax
0x00000000004f4087 : mov eax, dword ptr [rip + 0x50e85b] ; call rax
0x00000000004f4027 : mov eax, dword ptr [rip + 0x50e8bb] ; call rax
0x00000000004f3f02 : mov eax, dword ptr [rip + 0x50e9e0] ; call rax
0x00000000004f3dd9 : mov eax, dword ptr [rip + 0x50eb09] ; call rax
0x00000000004f3c0f : mov eax, dword ptr [rip + 0x50ecd3] ; call rax
0x00000000004f3abe : mov eax, dword ptr [rip + 0x50ee24] ; call rax
0x00000000004f3a6c : mov eax, dword ptr [rip + 0x50ee76] ; call rax
0x00000000004f37bd : mov eax, dword ptr [rip + 0x50f125] ; call rax
0x00000000004f364b : mov eax, dword ptr [rip + 0x50f297] ; call rax
0x00000000004f34cb : mov eax, dword ptr [rip + 0x50f417] ; call rax
0x00000000004f346d : mov eax, dword ptr [rip + 0x50f475] ; call rax
0x00000000004f341e : mov eax, dword ptr [rip + 0x50f4c4] ; call rax
0x00000000004f32d0 : mov eax, dword ptr [rip + 0x50f612] ; call rax
0x00000000004f31aa : mov eax, dword ptr [rip + 0x50f738] ; call rax
0x00000000004f3133 : mov eax, dword ptr [rip + 0x50f7af] ; call rax
0x00000000004f3111 : mov eax, dword ptr [rip + 0x50f7c9] ; call rax
0x00000000004f30ce : mov eax, dword ptr [rip + 0x50f814] ; call rax
0x00000000004f2fee : mov eax, dword ptr [rip + 0x50f8ec] ; call rax
0x00000000004f2fa5 : mov eax, dword ptr [rip + 0x50f93d] ; call rax
0x00000000004f2ee5 : mov eax, dword ptr [rip + 0x50f9f5] ; call rax
0x00000000004f2e9c : mov eax, dword ptr [rip + 0x50fa46] ; call rax
0x00000000004f28aa : mov eax, dword ptr [rip + 0x510030] ; call rax
0x00000000004f2748 : mov eax, dword ptr [rip + 0x51019a] ; call rax
0x00000000004f2604 : mov eax, dword ptr [rip + 0x5102d6] ; call rax
0x00000000004f259f : mov eax, dword ptr [rip + 0x510343] ; call rax
0x00000000004f2339 : mov eax, dword ptr [rip + 0x5105a1] ; call rax
0x00000000004f22ec : mov eax, dword ptr [rip + 0x5105f6] ; call rax
0x00000000004f18e5 : mov eax, dword ptr [rip + 0x510ff5] ; call rax
0x00000000004f18c3 : mov eax, dword ptr [rip + 0x51101f] ; call rax
0x00000000004f1662 : mov eax, dword ptr [rip + 0x511280] ; call rax
0x00000000004f1558 : mov eax, dword ptr [rip + 0x511382] ; call rax
0x00000000004f153b : mov eax, dword ptr [rip + 0x5113a7] ; call rax
0x00000000004f13c5 : mov eax, dword ptr [rip + 0x511515] ; call rax
0x00000000004f138d : mov eax, dword ptr [rip + 0x511555] ; call rax
0x00000000004f12d5 : mov eax, dword ptr [rip + 0x511605] ; call rax
0x00000000004f12b9 : mov eax, dword ptr [rip + 0x511629] ; call rax
0x00000000004f113c : mov eax, dword ptr [rip + 0x5117a6] ; call rax
0x00000000004f0b9b : mov eax, dword ptr [rip + 0x511d3f] ; call rax
0x00000000004f0b5b : mov eax, dword ptr [rip + 0x511d87] ; call rax
0x00000000004f0aa2 : mov eax, dword ptr [rip + 0x511e38] ; call rax
0x00000000004f0a5f : mov eax, dword ptr [rip + 0x511e83] ; call rax
0x00000000004f083b : mov eax, dword ptr [rip + 0x51209f] ; call rax
0x00000000004f07fb : mov eax, dword ptr [rip + 0x5120e7] ; call rax
0x00000000004f07c1 : mov eax, dword ptr [rip + 0x512121] ; call rax
0x00000000004f0764 : mov eax, dword ptr [rip + 0x512176] ; call rax
0x00000000004f0724 : mov eax, dword ptr [rip + 0x5121be] ; call rax
0x00000000004f06ea : mov eax, dword ptr [rip + 0x5121f8] ; call rax
0x00000000004f051d : mov eax, dword ptr [rip + 0x5123bd] ; call rax
0x00000000004f04dd : mov eax, dword ptr [rip + 0x512405] ; call rax
0x00000000004f03aa : mov eax, dword ptr [rip + 0x512530] ; call rax
0x00000000004f0369 : mov eax, dword ptr [rip + 0x512579] ; call rax
0x00000000004f0324 : mov eax, dword ptr [rip + 0x5125be] ; call rax
0x00000000004efe0b : mov eax, dword ptr [rip + 0x512ad7] ; call rax
0x00000000004ef607 : mov eax, dword ptr [rip + 0x5132db] ; call rax
0x00000000004ef432 : mov eax, dword ptr [rip + 0x5134b0] ; call rax
0x00000000004ec83d : mov eax, dword ptr [rip + 0x51609d] ; call rax
0x00000000004ec7eb : mov eax, dword ptr [rip + 0x5160f7] ; call rax
0x00000000004ec732 : mov eax, dword ptr [rip + 0x5161a8] ; call rax
0x00000000004ec6dd : mov eax, dword ptr [rip + 0x516205] ; call rax
0x00000000004ec617 : mov eax, dword ptr [rip + 0x5162c3] ; call rax
0x00000000004ec5af : mov eax, dword ptr [rip + 0x516333] ; call rax
0x00000000004ec4e7 : mov eax, dword ptr [rip + 0x5163f3] ; call rax
0x00000000004ec47f : mov eax, dword ptr [rip + 0x516463] ; call rax
0x00000000004ec2f6 : mov eax, dword ptr [rip + 0x5165e4] ; call rax
0x00000000004ec2a1 : mov eax, dword ptr [rip + 0x516641] ; call rax
0x00000000004ec124 : mov eax, dword ptr [rip + 0x5167b6] ; call rax
0x00000000004ec105 : mov eax, dword ptr [rip + 0x5167dd] ; call rax
0x00000000004ec04c : mov eax, dword ptr [rip + 0x51688e] ; call rax
0x00000000004ec00f : mov eax, dword ptr [rip + 0x5168d3] ; call rax
0x00000000004ebee4 : mov eax, dword ptr [rip + 0x5169f6] ; call rax
0x00000000004ebe79 : mov eax, dword ptr [rip + 0x516a69] ; call rax
0x00000000004ebce6 : mov eax, dword ptr [rip + 0x516bf4] ; call rax
0x00000000004ebc63 : mov eax, dword ptr [rip + 0x516c7f] ; call rax
0x00000000004ebb9b : mov eax, dword ptr [rip + 0x516d3f] ; call rax
0x00000000004ebb33 : mov eax, dword ptr [rip + 0x516daf] ; call rax
0x00000000004eba75 : mov eax, dword ptr [rip + 0x516e65] ; call rax
0x00000000004eba1f : mov eax, dword ptr [rip + 0x516ec3] ; call rax
0x00000000004eabb5 : mov eax, dword ptr [rip + 0x517d2d] ; call rax
0x00000000004e9696 : mov eax, dword ptr [rip + 0x519244] ; call rax
0x00000000004e9649 : mov eax, dword ptr [rip + 0x519299] ; call rax
0x00000000004e91d0 : mov eax, dword ptr [rip + 0x51970a] ; call rax
0x00000000004e9183 : mov eax, dword ptr [rip + 0x51975f] ; call rax
0x00000000004e8d00 : mov eax, dword ptr [rip + 0x519bda] ; call rax
0x00000000004e8cbd : mov eax, dword ptr [rip + 0x519c25] ; call rax
0x00000000004e8c6d : mov eax, dword ptr [rip + 0x519c75] ; call rax
0x00000000004e89f2 : mov eax, dword ptr [rip + 0x519ef0] ; call rax
0x00000000004e8473 : mov eax, dword ptr [rip + 0x51a467] ; call rax
0x00000000004e844b : mov eax, dword ptr [rip + 0x51a497] ; call rax
0x00000000004e7eca : mov eax, dword ptr [rip + 0x51aa10] ; call rax
0x00000000004e7e75 : mov eax, dword ptr [rip + 0x51aa6d] ; call rax
0x00000000004e7bff : mov eax, dword ptr [rip + 0x51acdb] ; call rax
0x00000000004e7bbc : mov eax, dword ptr [rip + 0x51ad26] ; call rax
0x00000000004e7532 : mov eax, dword ptr [rip + 0x51b3b0] ; call rax
0x00000000004e73f8 : mov eax, dword ptr [rip + 0x51b4e2] ; call rax
0x00000000004e73db : mov eax, dword ptr [rip + 0x51b507] ; call rax
0x00000000004e7322 : mov eax, dword ptr [rip + 0x51b5b8] ; call rax
0x00000000004e7301 : mov eax, dword ptr [rip + 0x51b5e1] ; call rax
0x00000000004e69eb : mov eax, dword ptr [rip + 0x51beef] ; call rax
0x00000000004e69c9 : mov eax, dword ptr [rip + 0x51bf19] ; call rax
0x00000000004e6304 : mov eax, dword ptr [rip + 0x51c5d6] ; call rax
0x00000000004e6289 : mov eax, dword ptr [rip + 0x51c659] ; call rax
0x00000000004e4713 : mov eax, dword ptr [rip + 0x51e1c7] ; call rax
0x00000000004e46c6 : mov eax, dword ptr [rip + 0x51e21c] ; call rax
0x00000000004e388c : mov eax, dword ptr [rip + 0x51f04e] ; call rax
0x00000000004e3837 : mov eax, dword ptr [rip + 0x51f0ab] ; call rax
0x00000000004e3492 : mov eax, dword ptr [rip + 0x51f448] ; call rax
0x00000000004e344f : mov eax, dword ptr [rip + 0x51f493] ; call rax
0x00000000004e3402 : mov eax, dword ptr [rip + 0x51f4e0] ; call rax
0x00000000004e32cf : mov eax, dword ptr [rip + 0x51f613] ; call rax
0x00000000004e31cc : mov eax, dword ptr [rip + 0x51f716] ; call rax
0x00000000004e30e1 : mov eax, dword ptr [rip + 0x51f801] ; call rax
0x00000000004e2e9b : mov eax, dword ptr [rip + 0x51fa3f] ; call rax
0x00000000004e2e51 : mov eax, dword ptr [rip + 0x51fa91] ; call rax
0x00000000004e2d25 : mov eax, dword ptr [rip + 0x51fbb5] ; call rax
0x00000000004e2c89 : mov eax, dword ptr [rip + 0x51fc59] ; call rax
0x00000000004e2a19 : mov eax, dword ptr [rip + 0x51fec1] ; call rax
0x00000000004e2988 : mov eax, dword ptr [rip + 0x51ff5a] ; call rax
0x00000000004e15aa : mov eax, dword ptr [rip + 0x521330] ; call rax
0x00000000004e1545 : mov eax, dword ptr [rip + 0x52139d] ; call rax
0x00000000004e1015 : mov eax, dword ptr [rip + 0x5218c5] ; call rax
0x00000000004e0fc8 : mov eax, dword ptr [rip + 0x52191a] ; call rax
0x00000000004ddffe : mov eax, dword ptr [rip + 0x5248dc] ; call rax
0x00000000004ddfa9 : mov eax, dword ptr [rip + 0x524939] ; call rax
0x00000000004dd98c : mov eax, dword ptr [rip + 0x524f4e] ; call rax
0x00000000004dd937 : mov eax, dword ptr [rip + 0x524fab] ; call rax
0x00000000004dd38a : mov eax, dword ptr [rip + 0x525550] ; call rax
0x00000000004dd334 : mov eax, dword ptr [rip + 0x5255ae] ; call rax
0x00000000004dcdc0 : mov eax, dword ptr [rip + 0x525b1a] ; call rax
0x00000000004dcd6a : mov eax, dword ptr [rip + 0x525b78] ; call rax
0x00000000004dbe03 : mov eax, dword ptr [rip + 0x526ad7] ; call rax
0x00000000004dbdae : mov eax, dword ptr [rip + 0x526b34] ; call rax
0x00000000004daee0 : mov eax, dword ptr [rip + 0x5279fa] ; call rax
0x00000000004dae95 : mov eax, dword ptr [rip + 0x527a4d] ; call rax
0x00000000004dabc5 : mov eax, dword ptr [rip + 0x527d15] ; call rax
0x00000000004dab49 : mov eax, dword ptr [rip + 0x527d99] ; call rax
0x00000000004da438 : mov eax, dword ptr [rip + 0x5284aa] ; call rax
0x00000000004da3e1 : mov eax, dword ptr [rip + 0x528501] ; call rax
0x00000000004da39f : mov eax, dword ptr [rip + 0x528543] ; call rax
0x00000000004d9a92 : mov eax, dword ptr [rip + 0x528e50] ; call rax
0x00000000004d9795 : mov eax, dword ptr [rip + 0x529145] ; call rax
0x00000000004d975d : mov eax, dword ptr [rip + 0x529185] ; call rax
0x00000000004d9599 : mov eax, dword ptr [rip + 0x529341] ; call rax
0x00000000004d9561 : mov eax, dword ptr [rip + 0x529381] ; call rax
0x00000000004d9391 : mov eax, dword ptr [rip + 0x529549] ; call rax
0x00000000004d9359 : mov eax, dword ptr [rip + 0x529589] ; call rax
0x00000000004d9040 : mov eax, dword ptr [rip + 0x52989a] ; call rax
0x00000000004d8ffd : mov eax, dword ptr [rip + 0x5298e5] ; call rax
0x00000000004d8ea4 : mov eax, dword ptr [rip + 0x529a36] ; call rax
0x00000000004d8e61 : mov eax, dword ptr [rip + 0x529a81] ; call rax
0x00000000004d8da9 : mov eax, dword ptr [rip + 0x529b31] ; call rax
0x00000000004d8d63 : mov eax, dword ptr [rip + 0x529b7f] ; call rax
0x00000000004d8cab : mov eax, dword ptr [rip + 0x529c2f] ; call rax
0x00000000004d8c65 : mov eax, dword ptr [rip + 0x529c7d] ; call rax
0x00000000004d8bad : mov eax, dword ptr [rip + 0x529d2d] ; call rax
0x00000000004d8b67 : mov eax, dword ptr [rip + 0x529d7b] ; call rax
0x00000000004d8aaf : mov eax, dword ptr [rip + 0x529e2b] ; call rax
0x00000000004d8a69 : mov eax, dword ptr [rip + 0x529e79] ; call rax
0x00000000004d7c86 : mov eax, dword ptr [rip + 0x52ac54] ; call rax
0x00000000004d7c19 : mov eax, dword ptr [rip + 0x52acc9] ; call rax
0x00000000004d7b0e : mov eax, dword ptr [rip + 0x52adcc] ; call rax
0x00000000004d7abf : mov eax, dword ptr [rip + 0x52ae23] ; call rax
0x00000000004d6f2c : mov eax, dword ptr [rip + 0x52b9ae] ; call rax
0x00000000004d6df3 : mov eax, dword ptr [rip + 0x52baef] ; call rax
0x00000000004d6d2c : mov eax, dword ptr [rip + 0x52bbae] ; call rax
0x00000000004d6cd3 : mov eax, dword ptr [rip + 0x52bc0f] ; call rax
0x00000000004d6c19 : mov eax, dword ptr [rip + 0x52bcc1] ; call rax
0x00000000004d6bd3 : mov eax, dword ptr [rip + 0x52bd0f] ; call rax
0x00000000004d65ef : mov eax, dword ptr [rip + 0x52c2eb] ; call rax
0x00000000004d65ac : mov eax, dword ptr [rip + 0x52c336] ; call rax
0x00000000004d656b : mov eax, dword ptr [rip + 0x52c377] ; call rax
0x00000000004d645f : mov eax, dword ptr [rip + 0x52c47b] ; call rax
0x00000000004d641c : mov eax, dword ptr [rip + 0x52c4c6] ; call rax
0x00000000004d63db : mov eax, dword ptr [rip + 0x52c507] ; call rax
0x00000000004d6045 : mov eax, dword ptr [rip + 0x52c895] ; call rax
0x00000000004d5f6d : mov eax, dword ptr [rip + 0x52c975] ; call rax
0x00000000004d5cfd : mov eax, dword ptr [rip + 0x52cbe5] ; call rax
0x00000000004d5738 : mov eax, dword ptr [rip + 0x52d1a2] ; call rax
0x00000000004d56f1 : mov eax, dword ptr [rip + 0x52d1f1] ; call rax
0x00000000004d552f : mov eax, dword ptr [rip + 0x52d3ab] ; call rax
0x00000000004d54cd : mov eax, dword ptr [rip + 0x52d415] ; call rax
0x00000000004d3e5f : mov eax, dword ptr [rip + 0x52ea7b] ; call rax
0x00000000004d3e1c : mov eax, dword ptr [rip + 0x52eac6] ; call rax
0x00000000004d3ddf : mov eax, dword ptr [rip + 0x52eb03] ; call rax
0x00000000004d3d32 : mov eax, dword ptr [rip + 0x52eba8] ; call rax
0x00000000004d3cef : mov eax, dword ptr [rip + 0x52ebf3] ; call rax
0x00000000004d3cb5 : mov eax, dword ptr [rip + 0x52ec2d] ; call rax
0x00000000004d3c0a : mov eax, dword ptr [rip + 0x52ecd0] ; call rax
0x00000000004d3bc7 : mov eax, dword ptr [rip + 0x52ed1b] ; call rax
0x00000000004d3b8d : mov eax, dword ptr [rip + 0x52ed55] ; call rax
0x00000000004d3add : mov eax, dword ptr [rip + 0x52edfd] ; call rax
0x00000000004d3a9a : mov eax, dword ptr [rip + 0x52ee48] ; call rax
0x00000000004d3a5d : mov eax, dword ptr [rip + 0x52ee85] ; call rax
0x00000000004d39ab : mov eax, dword ptr [rip + 0x52ef2f] ; call rax
0x00000000004d3968 : mov eax, dword ptr [rip + 0x52ef7a] ; call rax
0x00000000004d392b : mov eax, dword ptr [rip + 0x52efb7] ; call rax
0x00000000004d3128 : mov eax, dword ptr [rip + 0x52f7ba] ; call rax
0x00000000004d2458 : mov eax, dword ptr [rip + 0x530482] ; call rax
0x00000000004d2415 : mov eax, dword ptr [rip + 0x5304cd] ; call rax
0x00000000004d2123 : mov eax, dword ptr [rip + 0x5307b7] ; call rax
0x00000000004d20e0 : mov eax, dword ptr [rip + 0x530802] ; call rax
0x00000000004d20a3 : mov eax, dword ptr [rip + 0x53083f] ; call rax
0x00000000004d1d0a : mov eax, dword ptr [rip + 0x530bd8] ; call rax
0x00000000004d11a8 : mov eax, dword ptr [rip + 0x53173a] ; call rax
0x00000000004d0e32 : mov eax, dword ptr [rip + 0x531ab0] ; call rax
0x00000000004d0a1e : mov eax, dword ptr [rip + 0x531ec4] ; call rax
0x00000000004cd9fd : mov eax, dword ptr [rip + 0x534edd] ; call rax
0x00000000004cd9b6 : mov eax, dword ptr [rip + 0x534f2c] ; call rax
0x00000000004cd5ac : mov eax, dword ptr [rip + 0x535336] ; call rax
0x00000000004cd43b : mov eax, dword ptr [rip + 0x53549f] ; call rax
0x00000000004cd40b : mov eax, dword ptr [rip + 0x5354d7] ; call rax
0x00000000004cd28b : mov eax, dword ptr [rip + 0x535657] ; call rax
0x00000000004cd193 : mov eax, dword ptr [rip + 0x535747] ; call rax
0x00000000004cd177 : mov eax, dword ptr [rip + 0x53576b] ; call rax
0x00000000004cd010 : mov eax, dword ptr [rip + 0x5358ca] ; call rax
0x00000000004ccfb1 : mov eax, dword ptr [rip + 0x535931] ; call rax
0x00000000004cce98 : mov eax, dword ptr [rip + 0x535a42] ; call rax
0x00000000004cce4a : mov eax, dword ptr [rip + 0x535a98] ; call rax
0x00000000004cc772 : mov eax, dword ptr [rip + 0x536168] ; call rax
0x00000000004cc71d : mov eax, dword ptr [rip + 0x5361c5] ; call rax
0x00000000004cc287 : mov eax, dword ptr [rip + 0x536653] ; call rax
0x00000000004cc247 : mov eax, dword ptr [rip + 0x53669b] ; call rax
0x00000000004cc16a : mov eax, dword ptr [rip + 0x536770] ; call rax
0x00000000004cc127 : mov eax, dword ptr [rip + 0x5367bb] ; call rax
0x00000000004cbc55 : mov eax, dword ptr [rip + 0x536c85] ; call rax
0x00000000004cbc12 : mov eax, dword ptr [rip + 0x536cd0] ; call rax
0x00000000004cbbba : mov eax, dword ptr [rip + 0x536d28] ; call rax
0x00000000004cb77e : mov eax, dword ptr [rip + 0x53715c] ; call rax
0x00000000004cb73b : mov eax, dword ptr [rip + 0x5371a7] ; call rax
0x00000000004cb6d8 : mov eax, dword ptr [rip + 0x53720a] ; call rax
0x00000000004ca7d9 : mov eax, dword ptr [rip + 0x538101] ; call rax
0x00000000004ca796 : mov eax, dword ptr [rip + 0x53814c] ; call rax
0x00000000004ca746 : mov eax, dword ptr [rip + 0x53819c] ; call rax
0x00000000004ca21e : mov eax, dword ptr [rip + 0x5386c4] ; call rax
0x00000000004ca0aa : mov eax, dword ptr [rip + 0x538830] ; call rax
0x00000000004ca05f : mov eax, dword ptr [rip + 0x538883] ; call rax
0x00000000004c99ad : mov eax, dword ptr [rip + 0x538f35] ; call rax
0x00000000004c98d9 : mov eax, dword ptr [rip + 0x539009] ; call rax
0x00000000004c96f4 : mov eax, dword ptr [rip + 0x5391ee] ; call rax
0x00000000004c9628 : mov eax, dword ptr [rip + 0x5392ba] ; call rax
0x00000000004c9381 : mov eax, dword ptr [rip + 0x539561] ; call rax
0x00000000004c91ed : mov eax, dword ptr [rip + 0x5396ed] ; call rax
0x00000000004c91ad : mov eax, dword ptr [rip + 0x539735] ; call rax
0x00000000004c90f4 : mov eax, dword ptr [rip + 0x5397e6] ; call rax
0x00000000004c90b1 : mov eax, dword ptr [rip + 0x539831] ; call rax
0x00000000004c8feb : mov eax, dword ptr [rip + 0x5398ef] ; call rax
0x00000000004c8f95 : mov eax, dword ptr [rip + 0x53994d] ; call rax
0x00000000004c8eda : mov eax, dword ptr [rip + 0x539a00] ; call rax
0x00000000004c8ebd : mov eax, dword ptr [rip + 0x539a25] ; call rax
0x00000000004c8cf6 : mov eax, dword ptr [rip + 0x539be4] ; call rax
0x00000000004c8cae : mov eax, dword ptr [rip + 0x539c34] ; call rax
0x00000000004c8b52 : mov eax, dword ptr [rip + 0x539d90] ; call rax
0x00000000004c86bb : mov eax, dword ptr [rip + 0x53a227] ; call rax
0x00000000004c8666 : mov eax, dword ptr [rip + 0x53a274] ; call rax
0x00000000004c8623 : mov eax, dword ptr [rip + 0x53a2bf] ; call rax
0x00000000004c85e4 : mov eax, dword ptr [rip + 0x53a2fe] ; call rax
0x00000000004c8510 : mov eax, dword ptr [rip + 0x53a3d2] ; call rax
0x00000000004c841b : mov eax, dword ptr [rip + 0x53a4bf] ; call rax
0x00000000004c83d4 : mov eax, dword ptr [rip + 0x53a50e] ; call rax
0x00000000004c8394 : mov eax, dword ptr [rip + 0x53a54e] ; call rax
0x00000000004c7f79 : mov eax, dword ptr [rip + 0x53a969] ; call rax
0x00000000004c7924 : mov eax, dword ptr [rip + 0x53afbe] ; call rax
0x00000000004c782f : mov eax, dword ptr [rip + 0x53b0ab] ; call rax
0x00000000004c7813 : mov eax, dword ptr [rip + 0x53b0cf] ; call rax
0x00000000004c6a95 : mov eax, dword ptr [rip + 0x53be45] ; call rax
0x00000000004c6a79 : mov eax, dword ptr [rip + 0x53be69] ; call rax
0x00000000004c69a2 : mov eax, dword ptr [rip + 0x53bf40] ; call rax
0x00000000004c6962 : mov eax, dword ptr [rip + 0x53bf80] ; call rax
0x00000000004c5fe4 : mov eax, dword ptr [rip + 0x53c8f6] ; call rax
0x00000000004c5f7d : mov eax, dword ptr [rip + 0x53c965] ; call rax
0x00000000004c59da : mov eax, dword ptr [rip + 0x53cf00] ; call rax
0x00000000004c5957 : mov eax, dword ptr [rip + 0x53cf8b] ; call rax
0x00000000004c589d : mov eax, dword ptr [rip + 0x53d03d] ; call rax
0x00000000004c585d : mov eax, dword ptr [rip + 0x53d085] ; call rax
0x00000000004c56b7 : mov eax, dword ptr [rip + 0x53d223] ; call rax
0x00000000004c5676 : mov eax, dword ptr [rip + 0x53d26c] ; call rax
0x00000000004c551f : mov eax, dword ptr [rip + 0x53d3bb] ; call rax
0x00000000004c54df : mov eax, dword ptr [rip + 0x53d403] ; call rax
0x00000000004c5304 : mov eax, dword ptr [rip + 0x53d5d6] ; call rax
0x00000000004c52c4 : mov eax, dword ptr [rip + 0x53d61e] ; call rax
0x00000000004c511d : mov eax, dword ptr [rip + 0x53d7bd] ; call rax
0x00000000004c50dd : mov eax, dword ptr [rip + 0x53d805] ; call rax
0x00000000004c4f2a : mov eax, dword ptr [rip + 0x53d9b0] ; call rax
0x00000000004c4eea : mov eax, dword ptr [rip + 0x53d9f8] ; call rax
0x00000000004c4d75 : mov eax, dword ptr [rip + 0x53db65] ; call rax
0x00000000004c4d35 : mov eax, dword ptr [rip + 0x53dbad] ; call rax
0x00000000004c4b8e : mov eax, dword ptr [rip + 0x53dd4c] ; call rax
0x00000000004c4b4d : mov eax, dword ptr [rip + 0x53dd95] ; call rax
0x00000000004c49e7 : mov eax, dword ptr [rip + 0x53def3] ; call rax
0x00000000004c49a7 : mov eax, dword ptr [rip + 0x53df3b] ; call rax
0x00000000004c44e9 : mov eax, dword ptr [rip + 0x53e3f1] ; call rax
0x00000000004c44a9 : mov eax, dword ptr [rip + 0x53e439] ; call rax
0x00000000004c4465 : mov eax, dword ptr [rip + 0x53e47d] ; call rax
0x00000000004c41a7 : mov eax, dword ptr [rip + 0x53e733] ; call rax
0x00000000004c4167 : mov eax, dword ptr [rip + 0x53e77b] ; call rax
0x00000000004c3b3e : mov eax, dword ptr [rip + 0x53ed9c] ; call rax
0x00000000004c3afe : mov eax, dword ptr [rip + 0x53ede4] ; call rax
0x00000000004c3aba : mov eax, dword ptr [rip + 0x53ee28] ; call rax
0x00000000004c3685 : mov eax, dword ptr [rip + 0x53f255] ; call rax
0x00000000004c3669 : mov eax, dword ptr [rip + 0x53f279] ; call rax
0x00000000004c3538 : mov eax, dword ptr [rip + 0x53f3aa] ; call rax
0x00000000004c3427 : mov eax, dword ptr [rip + 0x53f4b3] ; call rax
0x00000000004c33e7 : mov eax, dword ptr [rip + 0x53f4fb] ; call rax
0x00000000004c332e : mov eax, dword ptr [rip + 0x53f5ac] ; call rax
0x00000000004c3311 : mov eax, dword ptr [rip + 0x53f5d1] ; call rax
0x00000000004c3133 : mov eax, dword ptr [rip + 0x53f7a7] ; call rax
0x00000000004c30ee : mov eax, dword ptr [rip + 0x53f7f4] ; call rax
0x00000000004c30ac : mov eax, dword ptr [rip + 0x53f836] ; call rax
0x00000000004c3028 : mov eax, dword ptr [rip + 0x53f8ba] ; call rax
0x00000000004c2b4e : mov eax, dword ptr [rip + 0x53fd8c] ; call rax
0x00000000004c2acd : mov eax, dword ptr [rip + 0x53fe15] ; call rax
0x00000000004c27cf : mov eax, dword ptr [rip + 0x54010b] ; call rax
0x00000000004c278c : mov eax, dword ptr [rip + 0x540156] ; call rax
0x00000000004c2469 : mov eax, dword ptr [rip + 0x540471] ; call rax
0x00000000004c244d : mov eax, dword ptr [rip + 0x540495] ; call rax
0x00000000004c2318 : mov eax, dword ptr [rip + 0x5405ca] ; call rax
0x00000000004c225b : mov eax, dword ptr [rip + 0x54067f] ; call rax
0x00000000004c223f : mov eax, dword ptr [rip + 0x5406a3] ; call rax
0x00000000004c198d : mov eax, dword ptr [rip + 0x540f4d] ; call rax
0x00000000004c1971 : mov eax, dword ptr [rip + 0x540f71] ; call rax
0x00000000004c18b9 : mov eax, dword ptr [rip + 0x541021] ; call rax
0x00000000004c1871 : mov eax, dword ptr [rip + 0x541071] ; call rax
0x00000000004c17b8 : mov eax, dword ptr [rip + 0x541122] ; call rax
0x00000000004c179b : mov eax, dword ptr [rip + 0x541147] ; call rax
0x00000000004c1670 : mov eax, dword ptr [rip + 0x54126a] ; call rax
0x00000000004c15f1 : mov eax, dword ptr [rip + 0x5412f1] ; call rax
0x00000000004c10c8 : mov eax, dword ptr [rip + 0x541812] ; call rax
0x00000000004c107a : mov eax, dword ptr [rip + 0x541868] ; call rax
0x00000000004c0f95 : mov eax, dword ptr [rip + 0x54194d] ; call rax
0x00000000004c0b3e : mov eax, dword ptr [rip + 0x541d9c] ; call rax
0x00000000004c0ad8 : mov eax, dword ptr [rip + 0x541e0a] ; call rax
0x00000000004c09f0 : mov eax, dword ptr [rip + 0x541ef2] ; call rax
0x00000000004c044f : mov eax, dword ptr [rip + 0x54248b] ; call rax
0x00000000004c0433 : mov eax, dword ptr [rip + 0x5424af] ; call rax
0x00000000004c037b : mov eax, dword ptr [rip + 0x54255f] ; call rax
0x00000000004c0333 : mov eax, dword ptr [rip + 0x5425af] ; call rax
0x00000000004c027a : mov eax, dword ptr [rip + 0x542660] ; call rax
0x00000000004c025d : mov eax, dword ptr [rip + 0x542685] ; call rax
0x00000000004c0132 : mov eax, dword ptr [rip + 0x5427a8] ; call rax
0x00000000004c00b3 : mov eax, dword ptr [rip + 0x54282f] ; call rax
0x00000000004bfabb : mov eax, dword ptr [rip + 0x542e1f] ; call rax
0x00000000004bfa6d : mov eax, dword ptr [rip + 0x542e75] ; call rax
0x00000000004bf988 : mov eax, dword ptr [rip + 0x542f5a] ; call rax
0x00000000004bf608 : mov eax, dword ptr [rip + 0x5432d2] ; call rax
0x00000000004bf5a2 : mov eax, dword ptr [rip + 0x543340] ; call rax
0x00000000004bf4ba : mov eax, dword ptr [rip + 0x543428] ; call rax
0x00000000004bf142 : mov eax, dword ptr [rip + 0x543798] ; call rax
0x00000000004bf0fb : mov eax, dword ptr [rip + 0x5437e7] ; call rax
0x00000000004beed4 : mov eax, dword ptr [rip + 0x543a06] ; call rax
0x00000000004bee91 : mov eax, dword ptr [rip + 0x543a51] ; call rax
0x00000000004bedd9 : mov eax, dword ptr [rip + 0x543b01] ; call rax
0x00000000004bedbd : mov eax, dword ptr [rip + 0x543b25] ; call rax
0x00000000004bed05 : mov eax, dword ptr [rip + 0x543bd5] ; call rax
0x00000000004becbd : mov eax, dword ptr [rip + 0x543c25] ; call rax
0x00000000004bec04 : mov eax, dword ptr [rip + 0x543cd6] ; call rax
0x00000000004bebe7 : mov eax, dword ptr [rip + 0x543cfb] ; call rax
0x00000000004beabc : mov eax, dword ptr [rip + 0x543e1e] ; call rax
0x00000000004bea3d : mov eax, dword ptr [rip + 0x543ea5] ; call rax
0x00000000004be446 : mov eax, dword ptr [rip + 0x544494] ; call rax
0x00000000004be3f8 : mov eax, dword ptr [rip + 0x5444ea] ; call rax
0x00000000004be313 : mov eax, dword ptr [rip + 0x5445cf] ; call rax
0x00000000004bdf30 : mov eax, dword ptr [rip + 0x5449aa] ; call rax
0x00000000004bdeca : mov eax, dword ptr [rip + 0x544a18] ; call rax
0x00000000004bdde2 : mov eax, dword ptr [rip + 0x544b00] ; call rax
0x00000000004bda6a : mov eax, dword ptr [rip + 0x544e70] ; call rax
0x00000000004bda23 : mov eax, dword ptr [rip + 0x544ebf] ; call rax
0x00000000004bd82e : mov eax, dword ptr [rip + 0x5450ac] ; call rax
0x00000000004bd7eb : mov eax, dword ptr [rip + 0x5450f7] ; call rax
0x00000000004bbbda : mov eax, dword ptr [rip + 0x546d08] ; call rax
0x00000000004b93b7 : mov eax, dword ptr [rip + 0x5494b3] ; call rax
0x00000000004b93ae : mov eax, dword ptr [rip + 0x5494b4] ; call rax
0x00000000004b9382 : mov eax, dword ptr [rip + 0x5494d8] ; call rax
0x00000000004b938b : mov eax, dword ptr [rip + 0x54954f] ; call rax
0x00000000004b9379 : mov eax, dword ptr [rip + 0x549569] ; call rax
0x00000000004b919b : mov eax, dword ptr [rip + 0x54973f] ; call rax
0x00000000004b9177 : mov eax, dword ptr [rip + 0x54976b] ; call rax
0x00000000004b8d37 : mov eax, dword ptr [rip + 0x549ba3] ; call rax
0x00000000004b8d13 : mov eax, dword ptr [rip + 0x549bcf] ; call rax
0x00000000004b8777 : mov eax, dword ptr [rip + 0x54a16b] ; call rax
0x00000000004b8623 : mov eax, dword ptr [rip + 0x54a2bf] ; call rax
0x00000000004b8567 : mov eax, dword ptr [rip + 0x54a373] ; call rax
0x00000000004b854b : mov eax, dword ptr [rip + 0x54a397] ; call rax
0x00000000004b7fdf : mov eax, dword ptr [rip + 0x54a88b] ; call rax
0x00000000004b7fd6 : mov eax, dword ptr [rip + 0x54a88c] ; call rax
0x00000000004b7faa : mov eax, dword ptr [rip + 0x54a8b0] ; call rax
0x00000000004b7fb3 : mov eax, dword ptr [rip + 0x54a927] ; call rax
0x00000000004b7fa1 : mov eax, dword ptr [rip + 0x54a941] ; call rax
0x00000000004b7e71 : mov eax, dword ptr [rip + 0x54a9f9] ; call rax
0x00000000004b7e68 : mov eax, dword ptr [rip + 0x54a9fa] ; call rax
0x00000000004b7e3c : mov eax, dword ptr [rip + 0x54aa1e] ; call rax
0x00000000004b7e45 : mov eax, dword ptr [rip + 0x54aa95] ; call rax
0x00000000004b7e33 : mov eax, dword ptr [rip + 0x54aaaf] ; call rax
0x00000000004b7bf7 : mov eax, dword ptr [rip + 0x54aceb] ; call rax
0x00000000004b7a7d : mov eax, dword ptr [rip + 0x54ae65] ; call rax
0x00000000004b79c1 : mov eax, dword ptr [rip + 0x54af19] ; call rax
0x00000000004b79a5 : mov eax, dword ptr [rip + 0x54af3d] ; call rax
0x00000000004b77c3 : mov eax, dword ptr [rip + 0x54b0a7] ; call rax
0x00000000004b77ba : mov eax, dword ptr [rip + 0x54b0a8] ; call rax
0x00000000004b778e : mov eax, dword ptr [rip + 0x54b0cc] ; call rax
0x00000000004b7797 : mov eax, dword ptr [rip + 0x54b143] ; call rax
0x00000000004b7785 : mov eax, dword ptr [rip + 0x54b15d] ; call rax
0x00000000004b76e5 : mov eax, dword ptr [rip + 0x54b185] ; call rax
0x00000000004b76dc : mov eax, dword ptr [rip + 0x54b186] ; call rax
0x00000000004b76b0 : mov eax, dword ptr [rip + 0x54b1aa] ; call rax
0x00000000004b76b9 : mov eax, dword ptr [rip + 0x54b221] ; call rax
0x00000000004b76a7 : mov eax, dword ptr [rip + 0x54b23b] ; call rax
0x00000000004b7151 : mov eax, dword ptr [rip + 0x54b719] ; call rax
0x00000000004b7148 : mov eax, dword ptr [rip + 0x54b71a] ; call rax
0x00000000004b711c : mov eax, dword ptr [rip + 0x54b73e] ; call rax
0x00000000004b7125 : mov eax, dword ptr [rip + 0x54b7b5] ; call rax
0x00000000004b7113 : mov eax, dword ptr [rip + 0x54b7cf] ; call rax
0x00000000004b6f35 : mov eax, dword ptr [rip + 0x54b9a5] ; call rax
0x00000000004b6f11 : mov eax, dword ptr [rip + 0x54b9d1] ; call rax
0x00000000004b6ad1 : mov eax, dword ptr [rip + 0x54be09] ; call rax
0x00000000004b6aad : mov eax, dword ptr [rip + 0x54be35] ; call rax
0x00000000004b6511 : mov eax, dword ptr [rip + 0x54c3d1] ; call rax
0x00000000004b63bd : mov eax, dword ptr [rip + 0x54c525] ; call rax
0x00000000004b6301 : mov eax, dword ptr [rip + 0x54c5d9] ; call rax
0x00000000004b62e5 : mov eax, dword ptr [rip + 0x54c5fd] ; call rax
0x00000000004b5d79 : mov eax, dword ptr [rip + 0x54caf1] ; call rax
0x00000000004b5d70 : mov eax, dword ptr [rip + 0x54caf2] ; call rax
0x00000000004b5d44 : mov eax, dword ptr [rip + 0x54cb16] ; call rax
0x00000000004b5d4d : mov eax, dword ptr [rip + 0x54cb8d] ; call rax
0x00000000004b5d3b : mov eax, dword ptr [rip + 0x54cba7] ; call rax
0x00000000004b5c0b : mov eax, dword ptr [rip + 0x54cc5f] ; call rax
0x00000000004b5c02 : mov eax, dword ptr [rip + 0x54cc60] ; call rax
0x00000000004b5bd6 : mov eax, dword ptr [rip + 0x54cc84] ; call rax
0x00000000004b5bdf : mov eax, dword ptr [rip + 0x54ccfb] ; call rax
0x00000000004b5bcd : mov eax, dword ptr [rip + 0x54cd15] ; call rax
0x00000000004b5991 : mov eax, dword ptr [rip + 0x54cf51] ; call rax
0x00000000004b5817 : mov eax, dword ptr [rip + 0x54d0cb] ; call rax
0x00000000004b575b : mov eax, dword ptr [rip + 0x54d17f] ; call rax
0x00000000004b573f : mov eax, dword ptr [rip + 0x54d1a3] ; call rax
0x00000000004b555d : mov eax, dword ptr [rip + 0x54d30d] ; call rax
0x00000000004b5554 : mov eax, dword ptr [rip + 0x54d30e] ; call rax
0x00000000004b5528 : mov eax, dword ptr [rip + 0x54d332] ; call rax
0x00000000004b5531 : mov eax, dword ptr [rip + 0x54d3a9] ; call rax
0x00000000004b551f : mov eax, dword ptr [rip + 0x54d3c3] ; call rax
0x00000000004b547f : mov eax, dword ptr [rip + 0x54d3eb] ; call rax
0x00000000004b5476 : mov eax, dword ptr [rip + 0x54d3ec] ; call rax
0x00000000004b544a : mov eax, dword ptr [rip + 0x54d410] ; call rax
0x00000000004b5453 : mov eax, dword ptr [rip + 0x54d487] ; call rax
0x00000000004b5441 : mov eax, dword ptr [rip + 0x54d4a1] ; call rax
0x00000000004b34f1 : mov eax, dword ptr [rip + 0x54f3f1] ; call rax
0x00000000004b330f : mov eax, dword ptr [rip + 0x54f5cb] ; call rax
0x00000000004b32f3 : mov eax, dword ptr [rip + 0x54f5ef] ; call rax
0x00000000004b26a9 : mov eax, dword ptr [rip + 0x550239] ; call rax
0x00000000004b2560 : mov eax, dword ptr [rip + 0x55037a] ; call rax
0x00000000004b2543 : mov eax, dword ptr [rip + 0x55039f] ; call rax
0x00000000004b236e : mov eax, dword ptr [rip + 0x55056c] ; call rax
0x00000000004b2324 : mov eax, dword ptr [rip + 0x5505be] ; call rax
0x00000000004b1d0c : mov eax, dword ptr [rip + 0x550bce] ; call rax
0x00000000004b1ca7 : mov eax, dword ptr [rip + 0x550c3b] ; call rax
0x00000000004b1ba4 : mov eax, dword ptr [rip + 0x550d36] ; call rax
0x00000000004b1b83 : mov eax, dword ptr [rip + 0x550d5f] ; call rax
0x00000000004b1acb : mov eax, dword ptr [rip + 0x550e0f] ; call rax
0x00000000004b1aa9 : mov eax, dword ptr [rip + 0x550e39] ; call rax
0x00000000004b12d3 : mov eax, dword ptr [rip + 0x551607] ; call rax
0x00000000004b12b1 : mov eax, dword ptr [rip + 0x551631] ; call rax
0x00000000004b0488 : mov eax, dword ptr [rip + 0x552452] ; call rax
0x00000000004b0435 : mov eax, dword ptr [rip + 0x5524ad] ; call rax
0x00000000004b029f : mov eax, dword ptr [rip + 0x55263b] ; call rax
0x00000000004b01d7 : mov eax, dword ptr [rip + 0x55270b] ; call rax
0x00000000004b00eb : mov eax, dword ptr [rip + 0x5527ef] ; call rax
0x00000000004b0095 : mov eax, dword ptr [rip + 0x55284d] ; call rax
0x00000000004af729 : mov eax, dword ptr [rip + 0x5531b1] ; call rax
0x00000000004af6b4 : mov eax, dword ptr [rip + 0x55322e] ; call rax
0x00000000004af670 : mov eax, dword ptr [rip + 0x553272] ; call rax
0x00000000004af05d : mov eax, dword ptr [rip + 0x55387d] ; call rax
0x00000000004af01a : mov eax, dword ptr [rip + 0x5538c8] ; call rax
0x00000000004aefd9 : mov eax, dword ptr [rip + 0x553909] ; call rax
0x00000000004aed4c : mov eax, dword ptr [rip + 0x553b96] ; call rax
0x00000000004aecf9 : mov eax, dword ptr [rip + 0x553be9] ; call rax
0x00000000004ae929 : mov eax, dword ptr [rip + 0x553fb1] ; call rax
0x00000000004ae8fb : mov eax, dword ptr [rip + 0x553fe7] ; call rax
0x00000000004ae749 : mov eax, dword ptr [rip + 0x554191] ; call rax
0x00000000004ae709 : mov eax, dword ptr [rip + 0x5541d9] ; call rax
0x00000000004ae62c : mov eax, dword ptr [rip + 0x5542ae] ; call rax
0x00000000004ae5e9 : mov eax, dword ptr [rip + 0x5542f9] ; call rax
0x00000000004adb24 : mov eax, dword ptr [rip + 0x554dbe] ; call rax
0x00000000004ada99 : mov eax, dword ptr [rip + 0x554e41] ; call rax
0x00000000004ada56 : mov eax, dword ptr [rip + 0x554e8c] ; call rax
0x00000000004ada15 : mov eax, dword ptr [rip + 0x554ecd] ; call rax
0x00000000004ad784 : mov eax, dword ptr [rip + 0x555156] ; call rax
0x00000000004ad741 : mov eax, dword ptr [rip + 0x5551a1] ; call rax
0x00000000004ad700 : mov eax, dword ptr [rip + 0x5551e2] ; call rax
0x00000000004ad4fd : mov eax, dword ptr [rip + 0x5553e5] ; call rax
0x00000000004ad40c : mov eax, dword ptr [rip + 0x5554ce] ; call rax
0x00000000004ad3ef : mov eax, dword ptr [rip + 0x5554f3] ; call rax
0x00000000004a8a04 : mov eax, dword ptr [rip + 0x559ede] ; call rax
0x00000000004a35ef : mov eax, dword ptr [rip + 0x55f27b] ; call rax
0x00000000004a35e6 : mov eax, dword ptr [rip + 0x55f27c] ; call rax
0x00000000004a35ba : mov eax, dword ptr [rip + 0x55f2a0] ; call rax
0x00000000004a35c3 : mov eax, dword ptr [rip + 0x55f317] ; call rax
0x00000000004a35b1 : mov eax, dword ptr [rip + 0x55f331] ; call rax
0x00000000004a33d3 : mov eax, dword ptr [rip + 0x55f507] ; call rax
0x00000000004a33af : mov eax, dword ptr [rip + 0x55f533] ; call rax
0x00000000004a2f6f : mov eax, dword ptr [rip + 0x55f96b] ; call rax
0x00000000004a2f4b : mov eax, dword ptr [rip + 0x55f997] ; call rax
0x00000000004a29af : mov eax, dword ptr [rip + 0x55ff33] ; call rax
0x00000000004a285b : mov eax, dword ptr [rip + 0x560087] ; call rax
0x00000000004a279f : mov eax, dword ptr [rip + 0x56013b] ; call rax
0x00000000004a2783 : mov eax, dword ptr [rip + 0x56015f] ; call rax
0x00000000004a2217 : mov eax, dword ptr [rip + 0x560653] ; call rax
0x00000000004a220e : mov eax, dword ptr [rip + 0x560654] ; call rax
0x00000000004a21e2 : mov eax, dword ptr [rip + 0x560678] ; call rax
0x00000000004a21eb : mov eax, dword ptr [rip + 0x5606ef] ; call rax
0x00000000004a21d9 : mov eax, dword ptr [rip + 0x560709] ; call rax
0x00000000004a20a9 : mov eax, dword ptr [rip + 0x5607c1] ; call rax
0x00000000004a20a0 : mov eax, dword ptr [rip + 0x5607c2] ; call rax
0x00000000004a2074 : mov eax, dword ptr [rip + 0x5607e6] ; call rax
0x00000000004a207d : mov eax, dword ptr [rip + 0x56085d] ; call rax
0x00000000004a206b : mov eax, dword ptr [rip + 0x560877] ; call rax
0x00000000004a1e2f : mov eax, dword ptr [rip + 0x560ab3] ; call rax
0x00000000004a1cb5 : mov eax, dword ptr [rip + 0x560c2d] ; call rax
0x00000000004a1bf9 : mov eax, dword ptr [rip + 0x560ce1] ; call rax
0x00000000004a1bdd : mov eax, dword ptr [rip + 0x560d05] ; call rax
0x00000000004a19fb : mov eax, dword ptr [rip + 0x560e6f] ; call rax
0x00000000004a19f2 : mov eax, dword ptr [rip + 0x560e70] ; call rax
0x00000000004a19c6 : mov eax, dword ptr [rip + 0x560e94] ; call rax
0x00000000004a19cf : mov eax, dword ptr [rip + 0x560f0b] ; call rax
0x00000000004a19bd : mov eax, dword ptr [rip + 0x560f25] ; call rax
0x00000000004a191d : mov eax, dword ptr [rip + 0x560f4d] ; call rax
0x00000000004a1914 : mov eax, dword ptr [rip + 0x560f4e] ; call rax
0x00000000004a18e8 : mov eax, dword ptr [rip + 0x560f72] ; call rax
0x00000000004a18f1 : mov eax, dword ptr [rip + 0x560fe9] ; call rax
0x00000000004a18df : mov eax, dword ptr [rip + 0x561003] ; call rax
0x00000000004a132e : mov eax, dword ptr [rip + 0x5615b4] ; call rax
0x00000000004a1123 : mov eax, dword ptr [rip + 0x5617b7] ; call rax
0x00000000004a1107 : mov eax, dword ptr [rip + 0x5617db] ; call rax
0x00000000004a0a02 : mov eax, dword ptr [rip + 0x561ed8] ; call rax
0x00000000004a09e1 : mov eax, dword ptr [rip + 0x561f01] ; call rax
0x00000000004a06f6 : mov eax, dword ptr [rip + 0x5621e4] ; call rax
0x00000000004a06d5 : mov eax, dword ptr [rip + 0x56220d] ; call rax
0x000000000049ffb4 : mov eax, dword ptr [rip + 0x56292e] ; call rax
0x000000000049fde5 : mov eax, dword ptr [rip + 0x562af5] ; call rax
0x000000000049fdc9 : mov eax, dword ptr [rip + 0x562b19] ; call rax
0x000000000049fc23 : mov eax, dword ptr [rip + 0x562cb7] ; call rax
0x000000000049fc07 : mov eax, dword ptr [rip + 0x562cdb] ; call rax
0x000000000049f68b : mov eax, dword ptr [rip + 0x5631df] ; call rax
0x000000000049f672 : mov eax, dword ptr [rip + 0x5631f0] ; call rax
0x000000000049f6e8 : mov eax, dword ptr [rip + 0x5631f2] ; call rax
0x000000000049f5ee : mov eax, dword ptr [rip + 0x56326c] ; call rax
0x000000000049f631 : mov eax, dword ptr [rip + 0x5632b1] ; call rax
0x000000000049f5f7 : mov eax, dword ptr [rip + 0x5632e3] ; call rax
0x000000000049f5e5 : mov eax, dword ptr [rip + 0x5632fd] ; call rax
0x000000000049f1c7 : mov eax, dword ptr [rip + 0x563713] ; call rax
0x000000000049f1ab : mov eax, dword ptr [rip + 0x563737] ; call rax
0x000000000049f0be : mov eax, dword ptr [rip + 0x563824] ; call rax
0x000000000049d341 : mov eax, dword ptr [rip + 0x5655a1] ; call rax
0x000000000049d215 : mov eax, dword ptr [rip + 0x5656c5] ; call rax
0x000000000049d1f9 : mov eax, dword ptr [rip + 0x5656e9] ; call rax
0x000000000049cf0c : mov eax, dword ptr [rip + 0x5659ce] ; call rax
0x000000000049ceeb : mov eax, dword ptr [rip + 0x5659f7] ; call rax
0x000000000049cc00 : mov eax, dword ptr [rip + 0x565cda] ; call rax
0x000000000049cbdf : mov eax, dword ptr [rip + 0x565d03] ; call rax
0x000000000049c28f : mov eax, dword ptr [rip + 0x566653] ; call rax
0x000000000049c1bd : mov eax, dword ptr [rip + 0x56671d] ; call rax
0x000000000049c1a1 : mov eax, dword ptr [rip + 0x566741] ; call rax
0x000000000049c0bb : mov eax, dword ptr [rip + 0x566827] ; call rax
0x000000000049bfe5 : mov eax, dword ptr [rip + 0x5668f5] ; call rax
0x000000000049bfc9 : mov eax, dword ptr [rip + 0x566919] ; call rax
0x000000000049bdd3 : mov eax, dword ptr [rip + 0x566b0f] ; call rax
0x000000000049bd7a : mov eax, dword ptr [rip + 0x566b68] ; call rax
0x000000000049bc08 : mov eax, dword ptr [rip + 0x566cd2] ; call rax
0x000000000049bbdb : mov eax, dword ptr [rip + 0x566d07] ; call rax
0x000000000049a941 : mov eax, dword ptr [rip + 0x567fa1] ; call rax
0x000000000049a86b : mov eax, dword ptr [rip + 0x56806f] ; call rax
0x000000000049a84f : mov eax, dword ptr [rip + 0x568093] ; call rax
0x000000000049a12f : mov eax, dword ptr [rip + 0x5687b3] ; call rax
0x00000000004993d8 : mov eax, dword ptr [rip + 0x569502] ; call rax
0x0000000000499393 : mov eax, dword ptr [rip + 0x56954f] ; call rax
0x000000000049928a : mov eax, dword ptr [rip + 0x569650] ; call rax
0x0000000000499247 : mov eax, dword ptr [rip + 0x56969b] ; call rax
0x0000000000498f01 : mov eax, dword ptr [rip + 0x5699d9] ; call rax
0x0000000000498eb9 : mov eax, dword ptr [rip + 0x569a29] ; call rax
0x0000000000498c85 : mov eax, dword ptr [rip + 0x569c55] ; call rax
0x0000000000498c42 : mov eax, dword ptr [rip + 0x569ca0] ; call rax
0x00000000004968a0 : mov eax, dword ptr [rip + 0x56c03a] ; call rax
0x000000000049685b : mov eax, dword ptr [rip + 0x56c087] ; call rax
0x0000000000496474 : mov eax, dword ptr [rip + 0x56c466] ; call rax
0x0000000000496430 : mov eax, dword ptr [rip + 0x56c4b2] ; call rax
0x0000000000496385 : mov eax, dword ptr [rip + 0x56c55d] ; call rax
0x0000000000493465 : mov eax, dword ptr [rip + 0x56f47d] ; call rax
0x0000000000492c50 : mov eax, dword ptr [rip + 0x56fc8a] ; call rax
0x0000000000492c17 : mov eax, dword ptr [rip + 0x56fccb] ; call rax
0x0000000000492b0d : mov eax, dword ptr [rip + 0x56fdcd] ; call rax
0x0000000000492acd : mov eax, dword ptr [rip + 0x56fe15] ; call rax
0x00000000004929c4 : mov eax, dword ptr [rip + 0x56ff16] ; call rax
0x0000000000492981 : mov eax, dword ptr [rip + 0x56ff61] ; call rax
0x0000000000492854 : mov eax, dword ptr [rip + 0x570086] ; call rax
0x0000000000492811 : mov eax, dword ptr [rip + 0x5700d1] ; call rax
0x00000000004923aa : mov eax, dword ptr [rip + 0x570530] ; call rax
0x0000000000492367 : mov eax, dword ptr [rip + 0x57057b] ; call rax
0x0000000000492324 : mov eax, dword ptr [rip + 0x5705be] ; call rax
0x0000000000492057 : mov eax, dword ptr [rip + 0x570883] ; call rax
0x0000000000492014 : mov eax, dword ptr [rip + 0x5708ce] ; call rax
0x0000000000491fd1 : mov eax, dword ptr [rip + 0x570911] ; call rax
0x0000000000491b8a : mov eax, dword ptr [rip + 0x570d50] ; call rax
0x0000000000491b47 : mov eax, dword ptr [rip + 0x570d9b] ; call rax
0x0000000000491b06 : mov eax, dword ptr [rip + 0x570ddc] ; call rax
0x0000000000491987 : mov eax, dword ptr [rip + 0x570f5b] ; call rax
0x0000000000491934 : mov eax, dword ptr [rip + 0x570fae] ; call rax
0x00000000004917aa : mov eax, dword ptr [rip + 0x571130] ; call rax
0x0000000000491769 : mov eax, dword ptr [rip + 0x571179] ; call rax
0x00000000004915b4 : mov eax, dword ptr [rip + 0x571326] ; call rax
0x000000000049155f : mov eax, dword ptr [rip + 0x571383] ; call rax
0x00000000004912bf : mov eax, dword ptr [rip + 0x57161b] ; call rax
0x000000000049127c : mov eax, dword ptr [rip + 0x571666] ; call rax
0x0000000000491239 : mov eax, dword ptr [rip + 0x5716a9] ; call rax
0x0000000000490f9c : mov eax, dword ptr [rip + 0x57193e] ; call rax
0x0000000000490f59 : mov eax, dword ptr [rip + 0x571989] ; call rax
0x0000000000490d4f : mov eax, dword ptr [rip + 0x571b8b] ; call rax
0x0000000000490cfb : mov eax, dword ptr [rip + 0x571be7] ; call rax
0x000000000049093d : mov eax, dword ptr [rip + 0x571fa5] ; call rax
0x0000000000490554 : mov eax, dword ptr [rip + 0x57238e] ; call rax
0x000000000048fe47 : mov eax, dword ptr [rip + 0x572a93] ; call rax
0x000000000048fdfb : mov eax, dword ptr [rip + 0x572ae7] ; call rax
0x000000000048fce3 : mov eax, dword ptr [rip + 0x572bf7] ; call rax
0x000000000048fc91 : mov eax, dword ptr [rip + 0x572c51] ; call rax
0x000000000048ee86 : mov eax, dword ptr [rip + 0x573a54] ; call rax
0x000000000048ee39 : mov eax, dword ptr [rip + 0x573aa9] ; call rax
0x000000000048dc1b : mov eax, dword ptr [rip + 0x574cc7] ; call rax
0x000000000048dbc4 : mov eax, dword ptr [rip + 0x574d1e] ; call rax
0x000000000048dafe : mov eax, dword ptr [rip + 0x574ddc] ; call rax
0x000000000048dae1 : mov eax, dword ptr [rip + 0x574e01] ; call rax
0x000000000048d9cb : mov eax, dword ptr [rip + 0x574f0f] ; call rax
0x000000000048d971 : mov eax, dword ptr [rip + 0x574f71] ; call rax
0x000000000048d6e6 : mov eax, dword ptr [rip + 0x5751f4] ; call rax
0x000000000048d69e : mov eax, dword ptr [rip + 0x575244] ; call rax
0x000000000048d5f0 : mov eax, dword ptr [rip + 0x5752f2] ; call rax
0x000000000048cda8 : mov eax, dword ptr [rip + 0x575b32] ; call rax
0x000000000048cd87 : mov eax, dword ptr [rip + 0x575b5b] ; call rax
0x000000000048cc58 : mov eax, dword ptr [rip + 0x575c82] ; call rax
0x000000000048cba9 : mov eax, dword ptr [rip + 0x575d39] ; call rax
0x000000000048caef : mov eax, dword ptr [rip + 0x575deb] ; call rax
0x000000000048caa9 : mov eax, dword ptr [rip + 0x575e39] ; call rax
0x000000000048c9cc : mov eax, dword ptr [rip + 0x575f0e] ; call rax
0x000000000048c9a7 : mov eax, dword ptr [rip + 0x575f3b] ; call rax
0x000000000048c227 : mov eax, dword ptr [rip + 0x5766b3] ; call rax
0x000000000048c1cd : mov eax, dword ptr [rip + 0x576715] ; call rax
0x000000000048c106 : mov eax, dword ptr [rip + 0x5767d4] ; call rax
0x000000000048c0ab : mov eax, dword ptr [rip + 0x576837] ; call rax
0x000000000048bf7e : mov eax, dword ptr [rip + 0x57695c] ; call rax
0x000000000048bf2d : mov eax, dword ptr [rip + 0x5769b5] ; call rax
0x000000000048be00 : mov eax, dword ptr [rip + 0x576ada] ; call rax
0x000000000048bdad : mov eax, dword ptr [rip + 0x576b35] ; call rax
0x000000000048bcf3 : mov eax, dword ptr [rip + 0x576be7] ; call rax
0x000000000048bccb : mov eax, dword ptr [rip + 0x576c17] ; call rax
0x000000000048bb3b : mov eax, dword ptr [rip + 0x576d9f] ; call rax
0x000000000048baa9 : mov eax, dword ptr [rip + 0x576e39] ; call rax
0x000000000048b917 : mov eax, dword ptr [rip + 0x576fc3] ; call rax
0x000000000048b885 : mov eax, dword ptr [rip + 0x57705d] ; call rax
0x000000000048b759 : mov eax, dword ptr [rip + 0x577181] ; call rax
0x000000000048b6fd : mov eax, dword ptr [rip + 0x5771e5] ; call rax
0x000000000048b643 : mov eax, dword ptr [rip + 0x577297] ; call rax
0x000000000048b61b : mov eax, dword ptr [rip + 0x5772c7] ; call rax
0x000000000048b563 : mov eax, dword ptr [rip + 0x577377] ; call rax
0x000000000048b53b : mov eax, dword ptr [rip + 0x5773a7] ; call rax
0x000000000048851c : mov eax, dword ptr [rip + 0x57a3be] ; call rax
0x00000000004884d4 : mov eax, dword ptr [rip + 0x57a40e] ; call rax
0x0000000000488393 : mov eax, dword ptr [rip + 0x57a54f] ; call rax
0x0000000000488246 : mov eax, dword ptr [rip + 0x57a694] ; call rax
0x00000000004881fe : mov eax, dword ptr [rip + 0x57a6e4] ; call rax
0x00000000004880bd : mov eax, dword ptr [rip + 0x57a825] ; call rax
0x0000000000487db9 : mov eax, dword ptr [rip + 0x57ab29] ; call rax
0x0000000000487bd4 : mov eax, dword ptr [rip + 0x57ad06] ; call rax
0x0000000000487b89 : mov eax, dword ptr [rip + 0x57ad59] ; call rax
0x000000000048749b : mov eax, dword ptr [rip + 0x57b43f] ; call rax
0x0000000000487437 : mov eax, dword ptr [rip + 0x57b4ab] ; call rax
0x00000000004870c3 : mov eax, dword ptr [rip + 0x57b817] ; call rax
0x0000000000487080 : mov eax, dword ptr [rip + 0x57b862] ; call rax
0x000000000048703f : mov eax, dword ptr [rip + 0x57b8a3] ; call rax
0x0000000000486e4e : mov eax, dword ptr [rip + 0x57ba94] ; call rax
0x00000000004860bb : mov eax, dword ptr [rip + 0x57c81f] ; call rax
0x000000000048607b : mov eax, dword ptr [rip + 0x57c867] ; call rax
0x0000000000485be3 : mov eax, dword ptr [rip + 0x57ccf7] ; call rax
0x0000000000485ba1 : mov eax, dword ptr [rip + 0x57cd41] ; call rax
0x000000000048582e : mov eax, dword ptr [rip + 0x57d0b4] ; call rax
0x00000000004850e2 : mov eax, dword ptr [rip + 0x57d7f8] ; call rax
0x00000000004850ad : mov eax, dword ptr [rip + 0x57d835] ; call rax
0x0000000000484b50 : mov eax, dword ptr [rip + 0x57dd92] ; call rax
0x0000000000484982 : mov eax, dword ptr [rip + 0x57df60] ; call rax
0x000000000048466a : mov eax, dword ptr [rip + 0x57e278] ; call rax
0x000000000048449c : mov eax, dword ptr [rip + 0x57e446] ; call rax
0x00000000004841e7 : mov eax, dword ptr [rip + 0x57e6fb] ; call rax
0x000000000048357f : mov eax, dword ptr [rip + 0x57f35b] ; call rax
0x0000000000483537 : mov eax, dword ptr [rip + 0x57f3ab] ; call rax
0x00000000004830de : mov eax, dword ptr [rip + 0x57f804] ; call rax
0x0000000000483017 : mov eax, dword ptr [rip + 0x57f8c3] ; call rax
0x0000000000482fcf : mov eax, dword ptr [rip + 0x57f913] ; call rax
0x0000000000482ef9 : mov eax, dword ptr [rip + 0x57f9e9] ; call rax
0x0000000000482b81 : mov eax, dword ptr [rip + 0x57fd61] ; call rax
0x0000000000482b28 : mov eax, dword ptr [rip + 0x57fdba] ; call rax
0x00000000004829b1 : mov eax, dword ptr [rip + 0x57ff29] ; call rax
0x0000000000482963 : mov eax, dword ptr [rip + 0x57ff7f] ; call rax
0x0000000000482859 : mov eax, dword ptr [rip + 0x580081] ; call rax
0x0000000000482819 : mov eax, dword ptr [rip + 0x5800c9] ; call rax
0x0000000000482626 : mov eax, dword ptr [rip + 0x5802b4] ; call rax
0x00000000004825e4 : mov eax, dword ptr [rip + 0x5802fe] ; call rax
0x000000000048233d : mov eax, dword ptr [rip + 0x5805a5] ; call rax
0x000000000048223a : mov eax, dword ptr [rip + 0x5806a0] ; call rax
0x0000000000482205 : mov eax, dword ptr [rip + 0x5806dd] ; call rax
0x00000000004817df : mov eax, dword ptr [rip + 0x5810fb] ; call rax
0x000000000048179c : mov eax, dword ptr [rip + 0x581146] ; call rax
0x0000000000481578 : mov eax, dword ptr [rip + 0x581362] ; call rax
0x0000000000481523 : mov eax, dword ptr [rip + 0x5813bf] ; call rax
0x0000000000480f3e : mov eax, dword ptr [rip + 0x5819a4] ; call rax
0x000000000047fee6 : mov eax, dword ptr [rip + 0x5829f4] ; call rax
0x000000000047fe9d : mov eax, dword ptr [rip + 0x582a45] ; call rax
0x000000000047f72f : mov eax, dword ptr [rip + 0x5831b3] ; call rax
0x000000000047f5a3 : mov eax, dword ptr [rip + 0x58333f] ; call rax
0x000000000047f4d2 : mov eax, dword ptr [rip + 0x583408] ; call rax
0x000000000047f4af : mov eax, dword ptr [rip + 0x583433] ; call rax
0x000000000047ed7f : mov eax, dword ptr [rip + 0x583b63] ; call rax
0x000000000047ebd2 : mov eax, dword ptr [rip + 0x583d10] ; call rax
0x000000000047eb0a : mov eax, dword ptr [rip + 0x583dd0] ; call rax
0x000000000047eae7 : mov eax, dword ptr [rip + 0x583dfb] ; call rax
0x000000000047e5a1 : mov eax, dword ptr [rip + 0x584341] ; call rax
0x000000000047e35a : mov eax, dword ptr [rip + 0x584580] ; call rax
0x000000000047e337 : mov eax, dword ptr [rip + 0x5845ab] ; call rax
0x000000000047dc05 : mov eax, dword ptr [rip + 0x584cd5] ; call rax
0x000000000047dbdd : mov eax, dword ptr [rip + 0x584d05] ; call rax
0x000000000047d89f : mov eax, dword ptr [rip + 0x58503b] ; call rax
0x000000000047d877 : mov eax, dword ptr [rip + 0x58506b] ; call rax
0x000000000047d16d : mov eax, dword ptr [rip + 0x5856fd] ; call rax
0x000000000047d154 : mov eax, dword ptr [rip + 0x58570e] ; call rax
0x000000000047d1cb : mov eax, dword ptr [rip + 0x58570f] ; call rax
0x000000000047d0c6 : mov eax, dword ptr [rip + 0x585794] ; call rax
0x000000000047d109 : mov eax, dword ptr [rip + 0x5857d9] ; call rax
0x000000000047d0cf : mov eax, dword ptr [rip + 0x58580b] ; call rax
0x000000000047d0bd : mov eax, dword ptr [rip + 0x585825] ; call rax
0x000000000047cc66 : mov eax, dword ptr [rip + 0x585c74] ; call rax
0x000000000047cc43 : mov eax, dword ptr [rip + 0x585c9f] ; call rax
0x000000000047cb4f : mov eax, dword ptr [rip + 0x585d93] ; call rax
0x000000000047b3f4 : mov eax, dword ptr [rip + 0x5874ee] ; call rax
0x000000000047b2ae : mov eax, dword ptr [rip + 0x58762c] ; call rax
0x000000000047b28b : mov eax, dword ptr [rip + 0x587657] ; call rax
0x000000000047af61 : mov eax, dword ptr [rip + 0x587979] ; call rax
0x000000000047af39 : mov eax, dword ptr [rip + 0x5879a9] ; call rax
0x000000000047abfb : mov eax, dword ptr [rip + 0x587cdf] ; call rax
0x000000000047abd3 : mov eax, dword ptr [rip + 0x587d0f] ; call rax
0x000000000047a1a6 : mov eax, dword ptr [rip + 0x58873c] ; call rax
0x000000000047a0c8 : mov eax, dword ptr [rip + 0x588812] ; call rax
0x000000000047a0a5 : mov eax, dword ptr [rip + 0x58883d] ; call rax
0x0000000000479fa3 : mov eax, dword ptr [rip + 0x58893f] ; call rax
0x0000000000479ebe : mov eax, dword ptr [rip + 0x588a1c] ; call rax
0x0000000000479e9b : mov eax, dword ptr [rip + 0x588a47] ; call rax
0x0000000000479c82 : mov eax, dword ptr [rip + 0x588c60] ; call rax
0x0000000000479c1b : mov eax, dword ptr [rip + 0x588cc7] ; call rax
0x0000000000479a99 : mov eax, dword ptr [rip + 0x588e41] ; call rax
0x0000000000479a5f : mov eax, dword ptr [rip + 0x588e83] ; call rax
0x0000000000478997 : mov eax, dword ptr [rip + 0x589f4b] ; call rax
0x00000000004788b2 : mov eax, dword ptr [rip + 0x58a028] ; call rax
0x000000000047888f : mov eax, dword ptr [rip + 0x58a053] ; call rax
0x00000000004780cc : mov eax, dword ptr [rip + 0x58a816] ; call rax
0x00000000004740e0 : mov eax, dword ptr [rip + 0x58e7fa] ; call rax
0x000000000047404e : mov eax, dword ptr [rip + 0x58e80c] ; call rax
0x0000000000474045 : mov eax, dword ptr [rip + 0x58e89d] ; call rax
0x0000000000473b52 : mov eax, dword ptr [rip + 0x58ed18] ; call rax
0x0000000000473b49 : mov eax, dword ptr [rip + 0x58ed19] ; call rax
0x000000000047354a : mov eax, dword ptr [rip + 0x58f398] ; call rax
0x000000000047347f : mov eax, dword ptr [rip + 0x58f45b] ; call rax
0x0000000000473463 : mov eax, dword ptr [rip + 0x58f47f] ; call rax
0x0000000000472f25 : mov eax, dword ptr [rip + 0x58f945] ; call rax
0x0000000000472f1c : mov eax, dword ptr [rip + 0x58f946] ; call rax
0x0000000000472ef0 : mov eax, dword ptr [rip + 0x58f96a] ; call rax
0x0000000000472ef9 : mov eax, dword ptr [rip + 0x58f9e1] ; call rax
0x0000000000472ee7 : mov eax, dword ptr [rip + 0x58f9fb] ; call rax
0x0000000000472d09 : mov eax, dword ptr [rip + 0x58fbd1] ; call rax
0x0000000000472ce5 : mov eax, dword ptr [rip + 0x58fbfd] ; call rax
0x00000000004728a5 : mov eax, dword ptr [rip + 0x590035] ; call rax
0x0000000000472881 : mov eax, dword ptr [rip + 0x590061] ; call rax
0x00000000004722e5 : mov eax, dword ptr [rip + 0x5905fd] ; call rax
0x0000000000472191 : mov eax, dword ptr [rip + 0x590751] ; call rax
0x00000000004720d5 : mov eax, dword ptr [rip + 0x590805] ; call rax
0x00000000004720b9 : mov eax, dword ptr [rip + 0x590829] ; call rax
0x0000000000471b4d : mov eax, dword ptr [rip + 0x590d1d] ; call rax
0x0000000000471b44 : mov eax, dword ptr [rip + 0x590d1e] ; call rax
0x0000000000471b18 : mov eax, dword ptr [rip + 0x590d42] ; call rax
0x0000000000471b21 : mov eax, dword ptr [rip + 0x590db9] ; call rax
0x0000000000471b0f : mov eax, dword ptr [rip + 0x590dd3] ; call rax
0x00000000004719df : mov eax, dword ptr [rip + 0x590e8b] ; call rax
0x00000000004719d6 : mov eax, dword ptr [rip + 0x590e8c] ; call rax
0x00000000004719aa : mov eax, dword ptr [rip + 0x590eb0] ; call rax
0x00000000004719b3 : mov eax, dword ptr [rip + 0x590f27] ; call rax
0x00000000004719a1 : mov eax, dword ptr [rip + 0x590f41] ; call rax
0x0000000000471765 : mov eax, dword ptr [rip + 0x59117d] ; call rax
0x00000000004715eb : mov eax, dword ptr [rip + 0x5912f7] ; call rax
0x000000000047152f : mov eax, dword ptr [rip + 0x5913ab] ; call rax
0x0000000000471513 : mov eax, dword ptr [rip + 0x5913cf] ; call rax
0x0000000000471331 : mov eax, dword ptr [rip + 0x591539] ; call rax
0x0000000000471328 : mov eax, dword ptr [rip + 0x59153a] ; call rax
0x00000000004712fc : mov eax, dword ptr [rip + 0x59155e] ; call rax
0x0000000000471305 : mov eax, dword ptr [rip + 0x5915d5] ; call rax
0x00000000004712f3 : mov eax, dword ptr [rip + 0x5915ef] ; call rax
0x0000000000471253 : mov eax, dword ptr [rip + 0x591617] ; call rax
0x000000000047124a : mov eax, dword ptr [rip + 0x591618] ; call rax
0x000000000047121e : mov eax, dword ptr [rip + 0x59163c] ; call rax
0x0000000000471227 : mov eax, dword ptr [rip + 0x5916b3] ; call rax
0x0000000000471215 : mov eax, dword ptr [rip + 0x5916cd] ; call rax
0x0000000000470d5e : mov eax, dword ptr [rip + 0x591b84] ; call rax
0x0000000000470b53 : mov eax, dword ptr [rip + 0x591d87] ; call rax
0x0000000000470b37 : mov eax, dword ptr [rip + 0x591dab] ; call rax
0x000000000047046c : mov eax, dword ptr [rip + 0x59246e] ; call rax
0x000000000047044b : mov eax, dword ptr [rip + 0x592497] ; call rax
0x0000000000470160 : mov eax, dword ptr [rip + 0x59277a] ; call rax
0x000000000047013f : mov eax, dword ptr [rip + 0x5927a3] ; call rax
0x000000000046fba2 : mov eax, dword ptr [rip + 0x592d40] ; call rax
0x000000000046f9d3 : mov eax, dword ptr [rip + 0x592f07] ; call rax
0x000000000046f9b7 : mov eax, dword ptr [rip + 0x592f2b] ; call rax
0x000000000046f811 : mov eax, dword ptr [rip + 0x5930c9] ; call rax
0x000000000046f7f5 : mov eax, dword ptr [rip + 0x5930ed] ; call rax
0x000000000046f279 : mov eax, dword ptr [rip + 0x5935f1] ; call rax
0x000000000046f260 : mov eax, dword ptr [rip + 0x593602] ; call rax
0x000000000046f2d6 : mov eax, dword ptr [rip + 0x593604] ; call rax
0x000000000046f1dc : mov eax, dword ptr [rip + 0x59367e] ; call rax
0x000000000046f21f : mov eax, dword ptr [rip + 0x5936c3] ; call rax
0x000000000046f1e5 : mov eax, dword ptr [rip + 0x5936f5] ; call rax
0x000000000046f1d3 : mov eax, dword ptr [rip + 0x59370f] ; call rax
0x000000000046edb5 : mov eax, dword ptr [rip + 0x593b25] ; call rax
0x000000000046ed99 : mov eax, dword ptr [rip + 0x593b49] ; call rax
0x000000000046ecac : mov eax, dword ptr [rip + 0x593c36] ; call rax
0x000000000046cfbf : mov eax, dword ptr [rip + 0x595923] ; call rax
0x000000000046ce93 : mov eax, dword ptr [rip + 0x595a47] ; call rax
0x000000000046ce77 : mov eax, dword ptr [rip + 0x595a6b] ; call rax
0x000000000046cb8a : mov eax, dword ptr [rip + 0x595d50] ; call rax
0x000000000046cb69 : mov eax, dword ptr [rip + 0x595d79] ; call rax
0x000000000046c87e : mov eax, dword ptr [rip + 0x59605c] ; call rax
0x000000000046c85d : mov eax, dword ptr [rip + 0x596085] ; call rax
0x000000000046bf13 : mov eax, dword ptr [rip + 0x5969cf] ; call rax
0x000000000046be41 : mov eax, dword ptr [rip + 0x596a99] ; call rax
0x000000000046be25 : mov eax, dword ptr [rip + 0x596abd] ; call rax
0x000000000046bd3f : mov eax, dword ptr [rip + 0x596ba3] ; call rax
0x000000000046bc69 : mov eax, dword ptr [rip + 0x596c71] ; call rax
0x000000000046bc4d : mov eax, dword ptr [rip + 0x596c95] ; call rax
0x000000000046ba57 : mov eax, dword ptr [rip + 0x596e8b] ; call rax
0x000000000046b9fe : mov eax, dword ptr [rip + 0x596ee4] ; call rax
0x000000000046b88c : mov eax, dword ptr [rip + 0x59704e] ; call rax
0x000000000046b85f : mov eax, dword ptr [rip + 0x597083] ; call rax
0x000000000046a5c5 : mov eax, dword ptr [rip + 0x59831d] ; call rax
0x000000000046a4ef : mov eax, dword ptr [rip + 0x5983eb] ; call rax
0x000000000046a4d3 : mov eax, dword ptr [rip + 0x59840f] ; call rax
0x0000000000468c92 : mov eax, dword ptr [rip + 0x599c48] ; call rax
0x0000000000468c4a : mov eax, dword ptr [rip + 0x599c98] ; call rax
0x0000000000468a91 : mov eax, dword ptr [rip + 0x599e49] ; call rax
0x0000000000468a2b : mov eax, dword ptr [rip + 0x599eb7] ; call rax
0x0000000000467ed5 : mov eax, dword ptr [rip + 0x59aa0d] ; call rax
0x0000000000467809 : mov eax, dword ptr [rip + 0x59b0d1] ; call rax
0x00000000004677c2 : mov eax, dword ptr [rip + 0x59b120] ; call rax
0x00000000004675e1 : mov eax, dword ptr [rip + 0x59b2f9] ; call rax
0x000000000046757b : mov eax, dword ptr [rip + 0x59b367] ; call rax
0x000000000046705e : mov eax, dword ptr [rip + 0x59b884] ; call rax
0x0000000000466e53 : mov eax, dword ptr [rip + 0x59ba87] ; call rax
0x0000000000466e37 : mov eax, dword ptr [rip + 0x59baab] ; call rax
0x000000000046676c : mov eax, dword ptr [rip + 0x59c16e] ; call rax
0x000000000046674b : mov eax, dword ptr [rip + 0x59c197] ; call rax
0x0000000000466460 : mov eax, dword ptr [rip + 0x59c47a] ; call rax
0x000000000046643f : mov eax, dword ptr [rip + 0x59c4a3] ; call rax
0x0000000000465ea2 : mov eax, dword ptr [rip + 0x59ca40] ; call rax
0x0000000000465cd3 : mov eax, dword ptr [rip + 0x59cc07] ; call rax
0x0000000000465cb7 : mov eax, dword ptr [rip + 0x59cc2b] ; call rax
0x0000000000465b11 : mov eax, dword ptr [rip + 0x59cdc9] ; call rax
0x0000000000465af5 : mov eax, dword ptr [rip + 0x59cded] ; call rax
0x0000000000465579 : mov eax, dword ptr [rip + 0x59d2f1] ; call rax
0x0000000000465560 : mov eax, dword ptr [rip + 0x59d302] ; call rax
0x00000000004655d6 : mov eax, dword ptr [rip + 0x59d304] ; call rax
0x00000000004654dc : mov eax, dword ptr [rip + 0x59d37e] ; call rax
0x000000000046551f : mov eax, dword ptr [rip + 0x59d3c3] ; call rax
0x00000000004654e5 : mov eax, dword ptr [rip + 0x59d3f5] ; call rax
0x00000000004654d3 : mov eax, dword ptr [rip + 0x59d40f] ; call rax
0x00000000004650b5 : mov eax, dword ptr [rip + 0x59d825] ; call rax
0x0000000000465099 : mov eax, dword ptr [rip + 0x59d849] ; call rax
0x0000000000464fac : mov eax, dword ptr [rip + 0x59d936] ; call rax
0x00000000004632bf : mov eax, dword ptr [rip + 0x59f623] ; call rax
0x0000000000463193 : mov eax, dword ptr [rip + 0x59f747] ; call rax
0x0000000000463177 : mov eax, dword ptr [rip + 0x59f76b] ; call rax
0x0000000000462e8a : mov eax, dword ptr [rip + 0x59fa50] ; call rax
0x0000000000462e69 : mov eax, dword ptr [rip + 0x59fa79] ; call rax
0x0000000000462b7e : mov eax, dword ptr [rip + 0x59fd5c] ; call rax
0x0000000000462b5d : mov eax, dword ptr [rip + 0x59fd85] ; call rax
0x0000000000462213 : mov eax, dword ptr [rip + 0x5a06cf] ; call rax
0x0000000000462141 : mov eax, dword ptr [rip + 0x5a0799] ; call rax
0x0000000000462125 : mov eax, dword ptr [rip + 0x5a07bd] ; call rax
0x000000000046203f : mov eax, dword ptr [rip + 0x5a08a3] ; call rax
0x0000000000461f69 : mov eax, dword ptr [rip + 0x5a0971] ; call rax
0x0000000000461f4d : mov eax, dword ptr [rip + 0x5a0995] ; call rax
0x0000000000461d57 : mov eax, dword ptr [rip + 0x5a0b8b] ; call rax
0x0000000000461cfe : mov eax, dword ptr [rip + 0x5a0be4] ; call rax
0x0000000000461b8c : mov eax, dword ptr [rip + 0x5a0d4e] ; call rax
0x0000000000461b5f : mov eax, dword ptr [rip + 0x5a0d83] ; call rax
0x00000000004608c5 : mov eax, dword ptr [rip + 0x5a201d] ; call rax
0x00000000004607ef : mov eax, dword ptr [rip + 0x5a20eb] ; call rax
0x00000000004607d3 : mov eax, dword ptr [rip + 0x5a210f] ; call rax
0x000000000045fbec : mov eax, dword ptr [rip + 0x5a2cf6] ; call rax
0x000000000045f9e1 : mov eax, dword ptr [rip + 0x5a2ef9] ; call rax
0x000000000045f9c5 : mov eax, dword ptr [rip + 0x5a2f1d] ; call rax
0x000000000045f813 : mov eax, dword ptr [rip + 0x5a30cf] ; call rax
0x000000000045f416 : mov eax, dword ptr [rip + 0x5a34cc] ; call rax
0x000000000045ef30 : mov eax, dword ptr [rip + 0x5a39aa] ; call rax
0x000000000045ef0f : mov eax, dword ptr [rip + 0x5a39d3] ; call rax
0x000000000045ec24 : mov eax, dword ptr [rip + 0x5a3cb6] ; call rax
0x000000000045ec03 : mov eax, dword ptr [rip + 0x5a3cdf] ; call rax
0x000000000045eafb : mov eax, dword ptr [rip + 0x5a3ddf] ; call rax
0x000000000045eacd : mov eax, dword ptr [rip + 0x5a3e15] ; call rax
0x000000000045ea15 : mov eax, dword ptr [rip + 0x5a3ec5] ; call rax
0x000000000045e9f1 : mov eax, dword ptr [rip + 0x5a3ef1] ; call rax
0x000000000045e70a : mov eax, dword ptr [rip + 0x5a41d8] ; call rax
0x000000000045e6d2 : mov eax, dword ptr [rip + 0x5a4208] ; call rax
0x000000000045e68e : mov eax, dword ptr [rip + 0x5a4254] ; call rax
0x000000000045e649 : mov eax, dword ptr [rip + 0x5a4299] ; call rax
0x000000000045e5a1 : mov eax, dword ptr [rip + 0x5a4341] ; call rax
0x000000000045e467 : mov eax, dword ptr [rip + 0x5a4473] ; call rax
0x000000000045e42d : mov eax, dword ptr [rip + 0x5a44b5] ; call rax
0x000000000045e270 : mov eax, dword ptr [rip + 0x5a4672] ; call rax
0x000000000045e1ad : mov eax, dword ptr [rip + 0x5a472d] ; call rax
0x000000000045e187 : mov eax, dword ptr [rip + 0x5a475b] ; call rax
0x000000000045dea1 : mov eax, dword ptr [rip + 0x5a4a39] ; call rax
0x000000000045de54 : mov eax, dword ptr [rip + 0x5a4a8e] ; call rax
0x000000000045d988 : mov eax, dword ptr [rip + 0x5a4f5a] ; call rax
0x000000000045d7b9 : mov eax, dword ptr [rip + 0x5a5121] ; call rax
0x000000000045d79d : mov eax, dword ptr [rip + 0x5a5145] ; call rax
0x000000000045d5f7 : mov eax, dword ptr [rip + 0x5a52e3] ; call rax
0x000000000045d5db : mov eax, dword ptr [rip + 0x5a5307] ; call rax
0x000000000045d05f : mov eax, dword ptr [rip + 0x5a580b] ; call rax
0x000000000045d046 : mov eax, dword ptr [rip + 0x5a581c] ; call rax
0x000000000045d0bc : mov eax, dword ptr [rip + 0x5a581e] ; call rax
0x000000000045cfc2 : mov eax, dword ptr [rip + 0x5a5898] ; call rax
0x000000000045d005 : mov eax, dword ptr [rip + 0x5a58dd] ; call rax
0x000000000045cfcb : mov eax, dword ptr [rip + 0x5a590f] ; call rax
0x000000000045cfb9 : mov eax, dword ptr [rip + 0x5a5929] ; call rax
0x000000000045cb9b : mov eax, dword ptr [rip + 0x5a5d3f] ; call rax
0x000000000045cb7f : mov eax, dword ptr [rip + 0x5a5d63] ; call rax
0x000000000045ca92 : mov eax, dword ptr [rip + 0x5a5e50] ; call rax
0x000000000045c7ac : mov eax, dword ptr [rip + 0x5a6136] ; call rax
0x000000000045c08f : mov eax, dword ptr [rip + 0x5a6853] ; call rax
0x000000000045b9f2 : mov eax, dword ptr [rip + 0x5a6ef0] ; call rax
0x000000000045b8dd : mov eax, dword ptr [rip + 0x5a7005] ; call rax
0x000000000045a81c : mov eax, dword ptr [rip + 0x5a80c6] ; call rax
0x000000000045a4c1 : mov eax, dword ptr [rip + 0x5a8421] ; call rax
0x000000000045a395 : mov eax, dword ptr [rip + 0x5a8545] ; call rax
0x000000000045a379 : mov eax, dword ptr [rip + 0x5a8569] ; call rax
0x000000000045a08c : mov eax, dword ptr [rip + 0x5a884e] ; call rax
0x000000000045a06b : mov eax, dword ptr [rip + 0x5a8877] ; call rax
0x0000000000459d80 : mov eax, dword ptr [rip + 0x5a8b5a] ; call rax
0x0000000000459d5f : mov eax, dword ptr [rip + 0x5a8b83] ; call rax
0x0000000000459419 : mov eax, dword ptr [rip + 0x5a94c9] ; call rax
0x0000000000459347 : mov eax, dword ptr [rip + 0x5a9593] ; call rax
0x000000000045932b : mov eax, dword ptr [rip + 0x5a95b7] ; call rax
0x0000000000459245 : mov eax, dword ptr [rip + 0x5a969d] ; call rax
0x000000000045916f : mov eax, dword ptr [rip + 0x5a976b] ; call rax
0x0000000000459153 : mov eax, dword ptr [rip + 0x5a978f] ; call rax
0x0000000000458f5d : mov eax, dword ptr [rip + 0x5a9985] ; call rax
0x0000000000458f04 : mov eax, dword ptr [rip + 0x5a99de] ; call rax
0x0000000000458d92 : mov eax, dword ptr [rip + 0x5a9b48] ; call rax
0x0000000000458d65 : mov eax, dword ptr [rip + 0x5a9b7d] ; call rax
0x0000000000457acb : mov eax, dword ptr [rip + 0x5aae17] ; call rax
0x00000000004579f5 : mov eax, dword ptr [rip + 0x5aaee5] ; call rax
0x00000000004579d9 : mov eax, dword ptr [rip + 0x5aaf09] ; call rax
0x0000000000456cd0 : mov eax, dword ptr [rip + 0x5abc0a] ; call rax
0x0000000000456b69 : mov eax, dword ptr [rip + 0x5abd79] ; call rax
0x0000000000455a03 : mov eax, dword ptr [rip + 0x5acedf] ; call rax
0x0000000000455325 : mov eax, dword ptr [rip + 0x5ad5bd] ; call rax
0x000000000045517d : mov eax, dword ptr [rip + 0x5ad765] ; call rax
0x00000000004550c1 : mov eax, dword ptr [rip + 0x5ad819] ; call rax
0x00000000004550a5 : mov eax, dword ptr [rip + 0x5ad83d] ; call rax
0x0000000000454a3b : mov eax, dword ptr [rip + 0x5ade2f] ; call rax
0x0000000000454a32 : mov eax, dword ptr [rip + 0x5ade30] ; call rax
0x0000000000454a06 : mov eax, dword ptr [rip + 0x5ade54] ; call rax
0x0000000000454a0f : mov eax, dword ptr [rip + 0x5adecb] ; call rax
0x00000000004549fd : mov eax, dword ptr [rip + 0x5adee5] ; call rax
0x000000000045481f : mov eax, dword ptr [rip + 0x5ae0bb] ; call rax
0x00000000004547fb : mov eax, dword ptr [rip + 0x5ae0e7] ; call rax
0x00000000004543bb : mov eax, dword ptr [rip + 0x5ae51f] ; call rax
0x0000000000454397 : mov eax, dword ptr [rip + 0x5ae54b] ; call rax
0x0000000000453dfb : mov eax, dword ptr [rip + 0x5aeae7] ; call rax
0x0000000000453ca7 : mov eax, dword ptr [rip + 0x5aec3b] ; call rax
0x0000000000453beb : mov eax, dword ptr [rip + 0x5aecef] ; call rax
0x0000000000453bcf : mov eax, dword ptr [rip + 0x5aed13] ; call rax
0x0000000000453663 : mov eax, dword ptr [rip + 0x5af207] ; call rax
0x000000000045365a : mov eax, dword ptr [rip + 0x5af208] ; call rax
0x000000000045362e : mov eax, dword ptr [rip + 0x5af22c] ; call rax
0x0000000000453637 : mov eax, dword ptr [rip + 0x5af2a3] ; call rax
0x0000000000453625 : mov eax, dword ptr [rip + 0x5af2bd] ; call rax
0x00000000004534f5 : mov eax, dword ptr [rip + 0x5af375] ; call rax
0x00000000004534ec : mov eax, dword ptr [rip + 0x5af376] ; call rax
0x00000000004534c0 : mov eax, dword ptr [rip + 0x5af39a] ; call rax
0x00000000004534c9 : mov eax, dword ptr [rip + 0x5af411] ; call rax
0x00000000004534b7 : mov eax, dword ptr [rip + 0x5af42b] ; call rax
0x000000000045327b : mov eax, dword ptr [rip + 0x5af667] ; call rax
0x0000000000453101 : mov eax, dword ptr [rip + 0x5af7e1] ; call rax
0x0000000000453045 : mov eax, dword ptr [rip + 0x5af895] ; call rax
0x0000000000453029 : mov eax, dword ptr [rip + 0x5af8b9] ; call rax
0x0000000000452e47 : mov eax, dword ptr [rip + 0x5afa23] ; call rax
0x0000000000452e3e : mov eax, dword ptr [rip + 0x5afa24] ; call rax
0x0000000000452e12 : mov eax, dword ptr [rip + 0x5afa48] ; call rax
0x0000000000452e1b : mov eax, dword ptr [rip + 0x5afabf] ; call rax
0x0000000000452e09 : mov eax, dword ptr [rip + 0x5afad9] ; call rax
0x0000000000452d69 : mov eax, dword ptr [rip + 0x5afb01] ; call rax
0x0000000000452d60 : mov eax, dword ptr [rip + 0x5afb02] ; call rax
0x0000000000452d34 : mov eax, dword ptr [rip + 0x5afb26] ; call rax
0x0000000000452d3d : mov eax, dword ptr [rip + 0x5afb9d] ; call rax
0x0000000000452d2b : mov eax, dword ptr [rip + 0x5afbb7] ; call rax
0x0000000000452ac6 : mov eax, dword ptr [rip + 0x5afe1c] ; call rax
0x0000000000451aad : mov eax, dword ptr [rip + 0x5b0e35] ; call rax
0x0000000000451905 : mov eax, dword ptr [rip + 0x5b0fdd] ; call rax
0x0000000000451849 : mov eax, dword ptr [rip + 0x5b1091] ; call rax
0x000000000045182d : mov eax, dword ptr [rip + 0x5b10b5] ; call rax
0x000000000045124f : mov eax, dword ptr [rip + 0x5b161b] ; call rax
0x0000000000451246 : mov eax, dword ptr [rip + 0x5b161c] ; call rax
0x000000000045121a : mov eax, dword ptr [rip + 0x5b1640] ; call rax
0x0000000000451223 : mov eax, dword ptr [rip + 0x5b16b7] ; call rax
0x0000000000451211 : mov eax, dword ptr [rip + 0x5b16d1] ; call rax
0x0000000000451033 : mov eax, dword ptr [rip + 0x5b18a7] ; call rax
0x000000000045100f : mov eax, dword ptr [rip + 0x5b18d3] ; call rax
0x0000000000450a55 : mov eax, dword ptr [rip + 0x5b1e8d] ; call rax
0x0000000000450901 : mov eax, dword ptr [rip + 0x5b1fe1] ; call rax
0x0000000000450845 : mov eax, dword ptr [rip + 0x5b2095] ; call rax
0x0000000000450829 : mov eax, dword ptr [rip + 0x5b20b9] ; call rax
0x00000000004502bd : mov eax, dword ptr [rip + 0x5b25ad] ; call rax
0x00000000004502b4 : mov eax, dword ptr [rip + 0x5b25ae] ; call rax
0x0000000000450288 : mov eax, dword ptr [rip + 0x5b25d2] ; call rax
0x0000000000450291 : mov eax, dword ptr [rip + 0x5b2649] ; call rax
0x000000000045027f : mov eax, dword ptr [rip + 0x5b2663] ; call rax
0x000000000045014f : mov eax, dword ptr [rip + 0x5b271b] ; call rax
0x0000000000450146 : mov eax, dword ptr [rip + 0x5b271c] ; call rax
0x000000000045011a : mov eax, dword ptr [rip + 0x5b2740] ; call rax
0x0000000000450123 : mov eax, dword ptr [rip + 0x5b27b7] ; call rax
0x0000000000450111 : mov eax, dword ptr [rip + 0x5b27d1] ; call rax
0x000000000044fed5 : mov eax, dword ptr [rip + 0x5b2a0d] ; call rax
0x000000000044fd5b : mov eax, dword ptr [rip + 0x5b2b87] ; call rax
0x000000000044fc9f : mov eax, dword ptr [rip + 0x5b2c3b] ; call rax
0x000000000044fc83 : mov eax, dword ptr [rip + 0x5b2c5f] ; call rax
0x000000000044faad : mov eax, dword ptr [rip + 0x5b2dbd] ; call rax
0x000000000044faa4 : mov eax, dword ptr [rip + 0x5b2dbe] ; call rax
0x000000000044fa78 : mov eax, dword ptr [rip + 0x5b2de2] ; call rax
0x000000000044fa81 : mov eax, dword ptr [rip + 0x5b2e59] ; call rax
0x000000000044fa6f : mov eax, dword ptr [rip + 0x5b2e73] ; call rax
0x000000000044f9cf : mov eax, dword ptr [rip + 0x5b2e9b] ; call rax
0x000000000044f9c6 : mov eax, dword ptr [rip + 0x5b2e9c] ; call rax
0x000000000044f99a : mov eax, dword ptr [rip + 0x5b2ec0] ; call rax
0x000000000044f9a3 : mov eax, dword ptr [rip + 0x5b2f37] ; call rax
0x000000000044f991 : mov eax, dword ptr [rip + 0x5b2f51] ; call rax
0x000000000044f336 : mov eax, dword ptr [rip + 0x5b35ac] ; call rax
0x000000000044f125 : mov eax, dword ptr [rip + 0x5b37b5] ; call rax
0x000000000044f109 : mov eax, dword ptr [rip + 0x5b37d9] ; call rax
0x000000000044ef43 : mov eax, dword ptr [rip + 0x5b399f] ; call rax
0x000000000044eb18 : mov eax, dword ptr [rip + 0x5b3dca] ; call rax
0x000000000044e618 : mov eax, dword ptr [rip + 0x5b42c2] ; call rax
0x000000000044e5f7 : mov eax, dword ptr [rip + 0x5b42eb] ; call rax
0x000000000044e30c : mov eax, dword ptr [rip + 0x5b45ce] ; call rax
0x000000000044e2eb : mov eax, dword ptr [rip + 0x5b45f7] ; call rax
0x000000000044e1e3 : mov eax, dword ptr [rip + 0x5b46f7] ; call rax
0x000000000044e1b5 : mov eax, dword ptr [rip + 0x5b472d] ; call rax
0x000000000044e0fd : mov eax, dword ptr [rip + 0x5b47dd] ; call rax
0x000000000044e0d9 : mov eax, dword ptr [rip + 0x5b4809] ; call rax
0x000000000044e021 : mov eax, dword ptr [rip + 0x5b48b9] ; call rax
0x000000000044dffb : mov eax, dword ptr [rip + 0x5b48e7] ; call rax
0x000000000044dc97 : mov eax, dword ptr [rip + 0x5b4c4b] ; call rax
0x000000000044dc50 : mov eax, dword ptr [rip + 0x5b4c8a] ; call rax
0x000000000044dc10 : mov eax, dword ptr [rip + 0x5b4cd2] ; call rax
0x000000000044dbd1 : mov eax, dword ptr [rip + 0x5b4d11] ; call rax
0x000000000044db4b : mov eax, dword ptr [rip + 0x5b4d8f] ; call rax
0x000000000044db0b : mov eax, dword ptr [rip + 0x5b4dd7] ; call rax
0x000000000044dacc : mov eax, dword ptr [rip + 0x5b4e16] ; call rax
0x000000000044da35 : mov eax, dword ptr [rip + 0x5b4ead] ; call rax
0x000000000044d897 : mov eax, dword ptr [rip + 0x5b5043] ; call rax
0x000000000044d85d : mov eax, dword ptr [rip + 0x5b5085] ; call rax
0x000000000044d694 : mov eax, dword ptr [rip + 0x5b524e] ; call rax
0x000000000044d5cb : mov eax, dword ptr [rip + 0x5b530f] ; call rax
0x000000000044d5a5 : mov eax, dword ptr [rip + 0x5b533d] ; call rax
0x000000000044d2bf : mov eax, dword ptr [rip + 0x5b561b] ; call rax
0x000000000044d272 : mov eax, dword ptr [rip + 0x5b5670] ; call rax
0x000000000044cd72 : mov eax, dword ptr [rip + 0x5b5b70] ; call rax
0x000000000044cba3 : mov eax, dword ptr [rip + 0x5b5d37] ; call rax
0x000000000044cb87 : mov eax, dword ptr [rip + 0x5b5d5b] ; call rax
0x000000000044c9e1 : mov eax, dword ptr [rip + 0x5b5ef9] ; call rax
0x000000000044c9c5 : mov eax, dword ptr [rip + 0x5b5f1d] ; call rax
0x000000000044c449 : mov eax, dword ptr [rip + 0x5b6421] ; call rax
0x000000000044c430 : mov eax, dword ptr [rip + 0x5b6432] ; call rax
0x000000000044c4a6 : mov eax, dword ptr [rip + 0x5b6434] ; call rax
0x000000000044c3ac : mov eax, dword ptr [rip + 0x5b64ae] ; call rax
0x000000000044c3ef : mov eax, dword ptr [rip + 0x5b64f3] ; call rax
0x000000000044c3b5 : mov eax, dword ptr [rip + 0x5b6525] ; call rax
0x000000000044c3a3 : mov eax, dword ptr [rip + 0x5b653f] ; call rax
0x000000000044bf85 : mov eax, dword ptr [rip + 0x5b6955] ; call rax
0x000000000044bf69 : mov eax, dword ptr [rip + 0x5b6979] ; call rax
0x000000000044be7c : mov eax, dword ptr [rip + 0x5b6a66] ; call rax
0x000000000044bb81 : mov eax, dword ptr [rip + 0x5b6d61] ; call rax
0x000000000044b435 : mov eax, dword ptr [rip + 0x5b74ad] ; call rax
0x000000000044ad6d : mov eax, dword ptr [rip + 0x5b7b75] ; call rax
0x000000000044ac47 : mov eax, dword ptr [rip + 0x5b7c9b] ; call rax
0x0000000000449b85 : mov eax, dword ptr [rip + 0x5b8d5d] ; call rax
0x000000000044980d : mov eax, dword ptr [rip + 0x5b90d5] ; call rax
0x00000000004496e1 : mov eax, dword ptr [rip + 0x5b91f9] ; call rax
0x00000000004496c5 : mov eax, dword ptr [rip + 0x5b921d] ; call rax
0x00000000004493d8 : mov eax, dword ptr [rip + 0x5b9502] ; call rax
0x00000000004493b7 : mov eax, dword ptr [rip + 0x5b952b] ; call rax
0x00000000004490cc : mov eax, dword ptr [rip + 0x5b980e] ; call rax
0x00000000004490ab : mov eax, dword ptr [rip + 0x5b9837] ; call rax
0x0000000000448765 : mov eax, dword ptr [rip + 0x5ba17d] ; call rax
0x0000000000448693 : mov eax, dword ptr [rip + 0x5ba247] ; call rax
0x0000000000448677 : mov eax, dword ptr [rip + 0x5ba26b] ; call rax
0x0000000000448591 : mov eax, dword ptr [rip + 0x5ba351] ; call rax
0x00000000004484bb : mov eax, dword ptr [rip + 0x5ba41f] ; call rax
0x000000000044849f : mov eax, dword ptr [rip + 0x5ba443] ; call rax
0x00000000004482a9 : mov eax, dword ptr [rip + 0x5ba639] ; call rax
0x0000000000448250 : mov eax, dword ptr [rip + 0x5ba692] ; call rax
0x00000000004480de : mov eax, dword ptr [rip + 0x5ba7fc] ; call rax
0x00000000004480b1 : mov eax, dword ptr [rip + 0x5ba831] ; call rax
0x0000000000446e17 : mov eax, dword ptr [rip + 0x5bbacb] ; call rax
0x0000000000446d41 : mov eax, dword ptr [rip + 0x5bbb99] ; call rax
0x0000000000446d25 : mov eax, dword ptr [rip + 0x5bbbbd] ; call rax
0x0000000000446689 : mov eax, dword ptr [rip + 0x5bc251] ; call rax
0x000000000044666d : mov eax, dword ptr [rip + 0x5bc275] ; call rax
0x0000000000446483 : mov eax, dword ptr [rip + 0x5bc457] ; call rax
0x0000000000446455 : mov eax, dword ptr [rip + 0x5bc48d] ; call rax
0x0000000000445f48 : mov eax, dword ptr [rip + 0x5bc992] ; call rax
0x0000000000445f2b : mov eax, dword ptr [rip + 0x5bc9b7] ; call rax
0x0000000000445b1b : mov eax, dword ptr [rip + 0x5bcdc7] ; call rax
0x0000000000445ab8 : mov eax, dword ptr [rip + 0x5bce2a] ; call rax
0x00000000004459ea : mov eax, dword ptr [rip + 0x5bcef8] ; call rax
0x0000000000444cf5 : mov eax, dword ptr [rip + 0x5bdbe5] ; call rax
0x0000000000444cd9 : mov eax, dword ptr [rip + 0x5bdc09] ; call rax
0x0000000000444c21 : mov eax, dword ptr [rip + 0x5bdcb9] ; call rax
0x0000000000444c05 : mov eax, dword ptr [rip + 0x5bdcdd] ; call rax
0x0000000000443ec4 : mov eax, dword ptr [rip + 0x5bea16] ; call rax
0x0000000000443e97 : mov eax, dword ptr [rip + 0x5bea4b] ; call rax
0x0000000000443563 : mov eax, dword ptr [rip + 0x5bf377] ; call rax
0x0000000000443535 : mov eax, dword ptr [rip + 0x5bf3ad] ; call rax
0x0000000000443398 : mov eax, dword ptr [rip + 0x5bf54a] ; call rax
0x0000000000443340 : mov eax, dword ptr [rip + 0x5bf5a2] ; call rax
0x000000000044328f : mov eax, dword ptr [rip + 0x5bf653] ; call rax
0x0000000000443231 : mov eax, dword ptr [rip + 0x5bf6b1] ; call rax
0x000000000044273c : mov eax, dword ptr [rip + 0x5c01a6] ; call rax
0x00000000004425ad : mov eax, dword ptr [rip + 0x5c032d] ; call rax
0x0000000000442591 : mov eax, dword ptr [rip + 0x5c0351] ; call rax
0x00000000004423eb : mov eax, dword ptr [rip + 0x5c04ef] ; call rax
0x00000000004423cf : mov eax, dword ptr [rip + 0x5c0513] ; call rax
0x0000000000441f2f : mov eax, dword ptr [rip + 0x5c093b] ; call rax
0x0000000000441f16 : mov eax, dword ptr [rip + 0x5c094c] ; call rax
0x0000000000441f8c : mov eax, dword ptr [rip + 0x5c094e] ; call rax
0x0000000000441e92 : mov eax, dword ptr [rip + 0x5c09c8] ; call rax
0x0000000000441ed5 : mov eax, dword ptr [rip + 0x5c0a0d] ; call rax
0x0000000000441e9b : mov eax, dword ptr [rip + 0x5c0a3f] ; call rax
0x0000000000441e89 : mov eax, dword ptr [rip + 0x5c0a59] ; call rax
0x0000000000441a6b : mov eax, dword ptr [rip + 0x5c0e6f] ; call rax
0x0000000000441a4f : mov eax, dword ptr [rip + 0x5c0e93] ; call rax
0x0000000000441962 : mov eax, dword ptr [rip + 0x5c0f80] ; call rax
0x0000000000441721 : mov eax, dword ptr [rip + 0x5c11b9] ; call rax
0x0000000000441705 : mov eax, dword ptr [rip + 0x5c11dd] ; call rax
0x000000000043f72f : mov eax, dword ptr [rip + 0x5c31ab] ; call rax
0x000000000043f713 : mov eax, dword ptr [rip + 0x5c31cf] ; call rax
0x000000000043e8cd : mov eax, dword ptr [rip + 0x5c4015] ; call rax
0x000000000043e7a1 : mov eax, dword ptr [rip + 0x5c4139] ; call rax
0x000000000043e785 : mov eax, dword ptr [rip + 0x5c415d] ; call rax
0x000000000043e436 : mov eax, dword ptr [rip + 0x5c44a4] ; call rax
0x000000000043e415 : mov eax, dword ptr [rip + 0x5c44cd] ; call rax
0x000000000043dd5d : mov eax, dword ptr [rip + 0x5c4b85] ; call rax
0x000000000043dbbd : mov eax, dword ptr [rip + 0x5c4d1d] ; call rax
0x000000000043dba1 : mov eax, dword ptr [rip + 0x5c4d41] ; call rax
0x000000000043d793 : mov eax, dword ptr [rip + 0x5c514f] ; call rax
0x000000000043d6c1 : mov eax, dword ptr [rip + 0x5c5219] ; call rax
0x000000000043d6a5 : mov eax, dword ptr [rip + 0x5c523d] ; call rax
0x000000000043d5bf : mov eax, dword ptr [rip + 0x5c5323] ; call rax
0x000000000043d4e9 : mov eax, dword ptr [rip + 0x5c53f1] ; call rax
0x000000000043d4cd : mov eax, dword ptr [rip + 0x5c5415] ; call rax
0x000000000043d2d7 : mov eax, dword ptr [rip + 0x5c560b] ; call rax
0x000000000043d27e : mov eax, dword ptr [rip + 0x5c5664] ; call rax
0x000000000043d10c : mov eax, dword ptr [rip + 0x5c57ce] ; call rax
0x000000000043d0df : mov eax, dword ptr [rip + 0x5c5803] ; call rax
0x000000000043cee7 : mov eax, dword ptr [rip + 0x5c59fb] ; call rax
0x000000000043ce8e : mov eax, dword ptr [rip + 0x5c5a54] ; call rax
0x000000000043cd1c : mov eax, dword ptr [rip + 0x5c5bbe] ; call rax
0x000000000043ccef : mov eax, dword ptr [rip + 0x5c5bf3] ; call rax
0x000000000043b735 : mov eax, dword ptr [rip + 0x5c71ad] ; call rax
0x000000000043b65f : mov eax, dword ptr [rip + 0x5c727b] ; call rax
0x000000000043b643 : mov eax, dword ptr [rip + 0x5c729f] ; call rax
0x000000000043a991 : mov eax, dword ptr [rip + 0x5c7f49] ; call rax
0x000000000043a848 : mov eax, dword ptr [rip + 0x5c809a] ; call rax
0x000000000043a304 : mov eax, dword ptr [rip + 0x5c85d6] ; call rax
0x000000000043a26b : mov eax, dword ptr [rip + 0x5c8677] ; call rax
0x000000000043a02e : mov eax, dword ptr [rip + 0x5c88ac] ; call rax
0x0000000000439fe6 : mov eax, dword ptr [rip + 0x5c88fc] ; call rax
0x0000000000439d78 : mov eax, dword ptr [rip + 0x5c8b6a] ; call rax
0x0000000000439c76 : mov eax, dword ptr [rip + 0x5c8c6c] ; call rax
0x0000000000439a97 : mov eax, dword ptr [rip + 0x5c8e43] ; call rax
0x0000000000439a27 : mov eax, dword ptr [rip + 0x5c8ebb] ; call rax
0x000000000043990a : mov eax, dword ptr [rip + 0x5c8fd0] ; call rax
0x0000000000439829 : mov eax, dword ptr [rip + 0x5c90b9] ; call rax
0x000000000043961e : mov eax, dword ptr [rip + 0x5c92bc] ; call rax
0x0000000000439585 : mov eax, dword ptr [rip + 0x5c935d] ; call rax
0x00000000004392b2 : mov eax, dword ptr [rip + 0x5c9628] ; call rax
0x000000000043926f : mov eax, dword ptr [rip + 0x5c9673] ; call rax
0x00000000004391b7 : mov eax, dword ptr [rip + 0x5c9723] ; call rax
0x0000000000439171 : mov eax, dword ptr [rip + 0x5c9771] ; call rax
0x00000000004390b8 : mov eax, dword ptr [rip + 0x5c9822] ; call rax
0x000000000043906d : mov eax, dword ptr [rip + 0x5c9875] ; call rax
0x0000000000438f5f : mov eax, dword ptr [rip + 0x5c997b] ; call rax
0x0000000000438f01 : mov eax, dword ptr [rip + 0x5c99e1] ; call rax
0x0000000000438e39 : mov eax, dword ptr [rip + 0x5c9aa1] ; call rax
0x0000000000438da4 : mov eax, dword ptr [rip + 0x5c9ab6] ; call rax
0x0000000000438d9b : mov eax, dword ptr [rip + 0x5c9b47] ; call rax
0x0000000000438244 : mov eax, dword ptr [rip + 0x5ca696] ; call rax
0x0000000000438201 : mov eax, dword ptr [rip + 0x5ca6e1] ; call rax
0x00000000004381be : mov eax, dword ptr [rip + 0x5ca724] ; call rax
0x0000000000437fc5 : mov eax, dword ptr [rip + 0x5ca915] ; call rax
0x0000000000437f82 : mov eax, dword ptr [rip + 0x5ca960] ; call rax
0x0000000000437f41 : mov eax, dword ptr [rip + 0x5ca9a1] ; call rax
0x0000000000437d48 : mov eax, dword ptr [rip + 0x5cab92] ; call rax
0x0000000000437d00 : mov eax, dword ptr [rip + 0x5cabe2] ; call rax
0x0000000000437c4b : mov eax, dword ptr [rip + 0x5cac97] ; call rax
0x00000000004376a5 : mov eax, dword ptr [rip + 0x5cb235] ; call rax
0x000000000043765d : mov eax, dword ptr [rip + 0x5cb285] ; call rax
0x00000000004375a8 : mov eax, dword ptr [rip + 0x5cb33a] ; call rax
0x00000000004374b8 : mov eax, dword ptr [rip + 0x5cb3b2] ; call rax
0x00000000004374af : mov eax, dword ptr [rip + 0x5cb3b3] ; call rax
0x00000000004373a6 : mov eax, dword ptr [rip + 0x5cb53c] ; call rax
0x000000000043729f : mov eax, dword ptr [rip + 0x5cb63b] ; call rax
0x0000000000437267 : mov eax, dword ptr [rip + 0x5cb67b] ; call rax
0x0000000000437157 : mov eax, dword ptr [rip + 0x5cb783] ; call rax
0x00000000004370f9 : mov eax, dword ptr [rip + 0x5cb7e9] ; call rax
0x0000000000437031 : mov eax, dword ptr [rip + 0x5cb8a9] ; call rax
0x0000000000436f9c : mov eax, dword ptr [rip + 0x5cb8be] ; call rax
0x0000000000436f93 : mov eax, dword ptr [rip + 0x5cb94f] ; call rax
0x0000000000436686 : mov eax, dword ptr [rip + 0x5cc254] ; call rax
0x000000000043663e : mov eax, dword ptr [rip + 0x5cc2a4] ; call rax
0x0000000000436589 : mov eax, dword ptr [rip + 0x5cc359] ; call rax
0x00000000004364a2 : mov eax, dword ptr [rip + 0x5cc3c8] ; call rax
0x0000000000436499 : mov eax, dword ptr [rip + 0x5cc3c9] ; call rax
0x000000000043639d : mov eax, dword ptr [rip + 0x5cc545] ; call rax
0x0000000000436295 : mov eax, dword ptr [rip + 0x5cc645] ; call rax
0x000000000043625d : mov eax, dword ptr [rip + 0x5cc685] ; call rax
0x00000000004361a3 : mov eax, dword ptr [rip + 0x5cc737] ; call rax
0x0000000000436163 : mov eax, dword ptr [rip + 0x5cc77f] ; call rax
0x00000000004360aa : mov eax, dword ptr [rip + 0x5cc830] ; call rax
0x0000000000436067 : mov eax, dword ptr [rip + 0x5cc87b] ; call rax
0x00000000004359ca : mov eax, dword ptr [rip + 0x5ccf10] ; call rax
0x0000000000435987 : mov eax, dword ptr [rip + 0x5ccf5b] ; call rax
0x0000000000435946 : mov eax, dword ptr [rip + 0x5ccf9c] ; call rax
0x00000000004357df : mov eax, dword ptr [rip + 0x5cd0fb] ; call rax
0x000000000043579c : mov eax, dword ptr [rip + 0x5cd146] ; call rax
0x000000000043575b : mov eax, dword ptr [rip + 0x5cd187] ; call rax
0x00000000004355f0 : mov eax, dword ptr [rip + 0x5cd2f2] ; call rax
0x00000000004354ea : mov eax, dword ptr [rip + 0x5cd3f0] ; call rax
0x00000000004354b5 : mov eax, dword ptr [rip + 0x5cd42d] ; call rax
0x00000000004353a5 : mov eax, dword ptr [rip + 0x5cd535] ; call rax
0x0000000000435347 : mov eax, dword ptr [rip + 0x5cd59b] ; call rax
0x000000000043527f : mov eax, dword ptr [rip + 0x5cd65b] ; call rax
0x00000000004351ea : mov eax, dword ptr [rip + 0x5cd670] ; call rax
0x00000000004351e1 : mov eax, dword ptr [rip + 0x5cd701] ; call rax
0x000000000043466d : mov eax, dword ptr [rip + 0x5ce26d] ; call rax
0x0000000000434625 : mov eax, dword ptr [rip + 0x5ce2bd] ; call rax
0x0000000000434570 : mov eax, dword ptr [rip + 0x5ce372] ; call rax
0x0000000000434480 : mov eax, dword ptr [rip + 0x5ce3ea] ; call rax
0x0000000000434477 : mov eax, dword ptr [rip + 0x5ce3eb] ; call rax
0x000000000043440b : mov eax, dword ptr [rip + 0x5ce4d7] ; call rax
0x0000000000434325 : mov eax, dword ptr [rip + 0x5ce5b5] ; call rax
0x00000000004342ed : mov eax, dword ptr [rip + 0x5ce5f5] ; call rax
0x0000000000433b0f : mov eax, dword ptr [rip + 0x5ced5b] ; call rax
0x0000000000433b06 : mov eax, dword ptr [rip + 0x5ced5c] ; call rax
0x0000000000433ada : mov eax, dword ptr [rip + 0x5ced80] ; call rax
0x0000000000433ae3 : mov eax, dword ptr [rip + 0x5cedf7] ; call rax
0x0000000000433ad1 : mov eax, dword ptr [rip + 0x5cee11] ; call rax
0x00000000004335d1 : mov eax, dword ptr [rip + 0x5cf309] ; call rax
0x00000000004335ad : mov eax, dword ptr [rip + 0x5cf335] ; call rax
0x000000000043316d : mov eax, dword ptr [rip + 0x5cf76d] ; call rax
0x0000000000433149 : mov eax, dword ptr [rip + 0x5cf799] ; call rax
0x0000000000432bb5 : mov eax, dword ptr [rip + 0x5cfd2d] ; call rax
0x0000000000432a69 : mov eax, dword ptr [rip + 0x5cfe79] ; call rax
0x00000000004329ad : mov eax, dword ptr [rip + 0x5cff2d] ; call rax
0x0000000000432991 : mov eax, dword ptr [rip + 0x5cff51] ; call rax
0x0000000000432847 : mov eax, dword ptr [rip + 0x5d0023] ; call rax
0x000000000043283e : mov eax, dword ptr [rip + 0x5d0024] ; call rax
0x0000000000432812 : mov eax, dword ptr [rip + 0x5d0048] ; call rax
0x000000000043281b : mov eax, dword ptr [rip + 0x5d00bf] ; call rax
0x0000000000432809 : mov eax, dword ptr [rip + 0x5d00d9] ; call rax
0x00000000004326d9 : mov eax, dword ptr [rip + 0x5d0191] ; call rax
0x00000000004326d0 : mov eax, dword ptr [rip + 0x5d0192] ; call rax
0x00000000004326a4 : mov eax, dword ptr [rip + 0x5d01b6] ; call rax
0x00000000004326ad : mov eax, dword ptr [rip + 0x5d022d] ; call rax
0x000000000043269b : mov eax, dword ptr [rip + 0x5d0247] ; call rax
0x000000000043245f : mov eax, dword ptr [rip + 0x5d0483] ; call rax
0x00000000004322e5 : mov eax, dword ptr [rip + 0x5d05fd] ; call rax
0x0000000000432229 : mov eax, dword ptr [rip + 0x5d06b1] ; call rax
0x000000000043220d : mov eax, dword ptr [rip + 0x5d06d5] ; call rax
0x0000000000432065 : mov eax, dword ptr [rip + 0x5d0805] ; call rax
0x000000000043205c : mov eax, dword ptr [rip + 0x5d0806] ; call rax
0x0000000000432030 : mov eax, dword ptr [rip + 0x5d082a] ; call rax
0x0000000000432039 : mov eax, dword ptr [rip + 0x5d08a1] ; call rax
0x0000000000432027 : mov eax, dword ptr [rip + 0x5d08bb] ; call rax
0x0000000000431f87 : mov eax, dword ptr [rip + 0x5d08e3] ; call rax
0x0000000000431f7e : mov eax, dword ptr [rip + 0x5d08e4] ; call rax
0x0000000000431f52 : mov eax, dword ptr [rip + 0x5d0908] ; call rax
0x0000000000431f5b : mov eax, dword ptr [rip + 0x5d097f] ; call rax
0x0000000000431f49 : mov eax, dword ptr [rip + 0x5d0999] ; call rax
0x0000000000430ccc : mov eax, dword ptr [rip + 0x5d1c16] ; call rax
0x0000000000430b8f : mov eax, dword ptr [rip + 0x5d1d4b] ; call rax
0x0000000000430b73 : mov eax, dword ptr [rip + 0x5d1d6f] ; call rax
0x0000000000430703 : mov eax, dword ptr [rip + 0x5d21df] ; call rax
0x000000000043066c : mov eax, dword ptr [rip + 0x5d2276] ; call rax
0x00000000004303e8 : mov eax, dword ptr [rip + 0x5d24f2] ; call rax
0x00000000004303c7 : mov eax, dword ptr [rip + 0x5d251b] ; call rax
0x000000000042f958 : mov eax, dword ptr [rip + 0x5d2f8a] ; call rax
0x000000000042f89b : mov eax, dword ptr [rip + 0x5d303f] ; call rax
0x000000000042f87f : mov eax, dword ptr [rip + 0x5d3063] ; call rax
0x000000000042f6dc : mov eax, dword ptr [rip + 0x5d3206] ; call rax
0x000000000042f5c5 : mov eax, dword ptr [rip + 0x5d3315] ; call rax
0x000000000042f5a9 : mov eax, dword ptr [rip + 0x5d3339] ; call rax
0x000000000042f29f : mov eax, dword ptr [rip + 0x5d3643] ; call rax
0x000000000042efd6 : mov eax, dword ptr [rip + 0x5d3904] ; call rax
0x000000000042efb5 : mov eax, dword ptr [rip + 0x5d392d] ; call rax
0x000000000042ee31 : mov eax, dword ptr [rip + 0x5d3aa9] ; call rax
0x000000000042ee0d : mov eax, dword ptr [rip + 0x5d3ad5] ; call rax
0x000000000042ed55 : mov eax, dword ptr [rip + 0x5d3b85] ; call rax
0x000000000042ed2f : mov eax, dword ptr [rip + 0x5d3bb3] ; call rax
0x000000000042eb1e : mov eax, dword ptr [rip + 0x5d3dbc] ; call rax
0x000000000042eadd : mov eax, dword ptr [rip + 0x5d3e05] ; call rax
0x000000000042ea9b : mov eax, dword ptr [rip + 0x5d3e47] ; call rax
0x000000000042ea30 : mov eax, dword ptr [rip + 0x5d3eaa] ; call rax
0x000000000042e9eb : mov eax, dword ptr [rip + 0x5d3ef7] ; call rax
0x000000000042e9a5 : mov eax, dword ptr [rip + 0x5d3f3d] ; call rax
0x000000000042e817 : mov eax, dword ptr [rip + 0x5d40c3] ; call rax
0x000000000042e7f3 : mov eax, dword ptr [rip + 0x5d40ef] ; call rax
0x000000000042e73b : mov eax, dword ptr [rip + 0x5d419f] ; call rax
0x000000000042e715 : mov eax, dword ptr [rip + 0x5d41cd] ; call rax
0x000000000042e504 : mov eax, dword ptr [rip + 0x5d43d6] ; call rax
0x000000000042e4c3 : mov eax, dword ptr [rip + 0x5d441f] ; call rax
0x000000000042e481 : mov eax, dword ptr [rip + 0x5d4461] ; call rax
0x000000000042e416 : mov eax, dword ptr [rip + 0x5d44c4] ; call rax
0x000000000042e3d1 : mov eax, dword ptr [rip + 0x5d4511] ; call rax
0x000000000042e38b : mov eax, dword ptr [rip + 0x5d4557] ; call rax
0x000000000042df86 : mov eax, dword ptr [rip + 0x5d495c] ; call rax
0x000000000042de7b : mov eax, dword ptr [rip + 0x5d4a5f] ; call rax
0x000000000042de5f : mov eax, dword ptr [rip + 0x5d4a83] ; call rax
0x000000000042dcb9 : mov eax, dword ptr [rip + 0x5d4c21] ; call rax
0x000000000042dc9d : mov eax, dword ptr [rip + 0x5d4c45] ; call rax
0x000000000042d69b : mov eax, dword ptr [rip + 0x5d51cf] ; call rax
0x000000000042d682 : mov eax, dword ptr [rip + 0x5d51e0] ; call rax
0x000000000042d6f8 : mov eax, dword ptr [rip + 0x5d51e2] ; call rax
0x000000000042d5fe : mov eax, dword ptr [rip + 0x5d525c] ; call rax
0x000000000042d641 : mov eax, dword ptr [rip + 0x5d52a1] ; call rax
0x000000000042d607 : mov eax, dword ptr [rip + 0x5d52d3] ; call rax
0x000000000042d5f5 : mov eax, dword ptr [rip + 0x5d52ed] ; call rax
0x000000000042d06b : mov eax, dword ptr [rip + 0x5d57ff] ; call rax
0x000000000042d052 : mov eax, dword ptr [rip + 0x5d5810] ; call rax
0x000000000042d0c8 : mov eax, dword ptr [rip + 0x5d5812] ; call rax
0x000000000042cfce : mov eax, dword ptr [rip + 0x5d588c] ; call rax
0x000000000042d011 : mov eax, dword ptr [rip + 0x5d58d1] ; call rax
0x000000000042cfd7 : mov eax, dword ptr [rip + 0x5d5903] ; call rax
0x000000000042cfc5 : mov eax, dword ptr [rip + 0x5d591d] ; call rax
0x000000000042cb48 : mov eax, dword ptr [rip + 0x5d5d9a] ; call rax
0x000000000042ca8b : mov eax, dword ptr [rip + 0x5d5e4f] ; call rax
0x000000000042ca6f : mov eax, dword ptr [rip + 0x5d5e73] ; call rax
0x000000000042c211 : mov eax, dword ptr [rip + 0x5d66d1] ; call rax
0x000000000042bef0 : mov eax, dword ptr [rip + 0x5d69f2] ; call rax
0x000000000042bdd9 : mov eax, dword ptr [rip + 0x5d6b01] ; call rax
0x000000000042bdbd : mov eax, dword ptr [rip + 0x5d6b25] ; call rax
0x000000000042b86c : mov eax, dword ptr [rip + 0x5d7076] ; call rax
0x000000000042b7b3 : mov eax, dword ptr [rip + 0x5d7127] ; call rax
0x000000000042b797 : mov eax, dword ptr [rip + 0x5d714b] ; call rax
0x000000000042b508 : mov eax, dword ptr [rip + 0x5d73d2] ; call rax
0x000000000042b4e7 : mov eax, dword ptr [rip + 0x5d73fb] ; call rax
0x000000000042aed3 : mov eax, dword ptr [rip + 0x5d7a0f] ; call rax
0x000000000042ae7a : mov eax, dword ptr [rip + 0x5d7a68] ; call rax
0x000000000042ad08 : mov eax, dword ptr [rip + 0x5d7bd2] ; call rax
0x000000000042acdb : mov eax, dword ptr [rip + 0x5d7c07] ; call rax
0x000000000042a4dc : mov eax, dword ptr [rip + 0x5d8406] ; call rax
0x000000000042a3da : mov eax, dword ptr [rip + 0x5d8508] ; call rax
0x000000000042a1fb : mov eax, dword ptr [rip + 0x5d86df] ; call rax
0x000000000042a18b : mov eax, dword ptr [rip + 0x5d8757] ; call rax
0x000000000042a06e : mov eax, dword ptr [rip + 0x5d886c] ; call rax
0x0000000000429f8d : mov eax, dword ptr [rip + 0x5d8955] ; call rax
0x0000000000429d62 : mov eax, dword ptr [rip + 0x5d8b78] ; call rax
0x0000000000429cc9 : mov eax, dword ptr [rip + 0x5d8c19] ; call rax
0x00000000004299c0 : mov eax, dword ptr [rip + 0x5d8f1a] ; call rax
0x000000000042997f : mov eax, dword ptr [rip + 0x5d8f63] ; call rax
0x0000000000429840 : mov eax, dword ptr [rip + 0x5d901a] ; call rax
0x00000000004298b8 : mov eax, dword ptr [rip + 0x5d9022] ; call rax
0x0000000000429837 : mov eax, dword ptr [rip + 0x5d90ab] ; call rax
0x0000000000429004 : mov eax, dword ptr [rip + 0x5d98d6] ; call rax
0x0000000000428fbc : mov eax, dword ptr [rip + 0x5d9926] ; call rax
0x0000000000428ef7 : mov eax, dword ptr [rip + 0x5d99eb] ; call rax
0x0000000000428e07 : mov eax, dword ptr [rip + 0x5d9a63] ; call rax
0x0000000000428dfe : mov eax, dword ptr [rip + 0x5d9a64] ; call rax
0x0000000000428ca6 : mov eax, dword ptr [rip + 0x5d9c3c] ; call rax
0x0000000000428b9d : mov eax, dword ptr [rip + 0x5d9d3d] ; call rax
0x0000000000428b65 : mov eax, dword ptr [rip + 0x5d9d7d] ; call rax
0x000000000042890b : mov eax, dword ptr [rip + 0x5d9fd7] ; call rax
0x000000000042884c : mov eax, dword ptr [rip + 0x5da08e] ; call rax
0x000000000042882f : mov eax, dword ptr [rip + 0x5da0b3] ; call rax
0x00000000004286fd : mov eax, dword ptr [rip + 0x5da1dd] ; call rax
0x000000000042869f : mov eax, dword ptr [rip + 0x5da243] ; call rax
0x00000000004285d7 : mov eax, dword ptr [rip + 0x5da303] ; call rax
0x0000000000428542 : mov eax, dword ptr [rip + 0x5da318] ; call rax
0x0000000000428539 : mov eax, dword ptr [rip + 0x5da3a9] ; call rax
0x00000000004276d4 : mov eax, dword ptr [rip + 0x5db206] ; call rax
0x000000000042768c : mov eax, dword ptr [rip + 0x5db256] ; call rax
0x00000000004275c7 : mov eax, dword ptr [rip + 0x5db31b] ; call rax
0x00000000004274cd : mov eax, dword ptr [rip + 0x5db39d] ; call rax
0x00000000004274c4 : mov eax, dword ptr [rip + 0x5db39e] ; call rax
0x0000000000427458 : mov eax, dword ptr [rip + 0x5db48a] ; call rax
0x0000000000427373 : mov eax, dword ptr [rip + 0x5db567] ; call rax
0x000000000042733b : mov eax, dword ptr [rip + 0x5db5a7] ; call rax
0x0000000000427280 : mov eax, dword ptr [rip + 0x5db65a] ; call rax
0x000000000042723d : mov eax, dword ptr [rip + 0x5db6a5] ; call rax
0x0000000000427184 : mov eax, dword ptr [rip + 0x5db756] ; call rax
0x0000000000427139 : mov eax, dword ptr [rip + 0x5db7a9] ; call rax
0x0000000000427073 : mov eax, dword ptr [rip + 0x5db867] ; call rax
0x0000000000426fde : mov eax, dword ptr [rip + 0x5db87c] ; call rax
0x0000000000426fd5 : mov eax, dword ptr [rip + 0x5db90d] ; call rax
0x0000000000426ee9 : mov eax, dword ptr [rip + 0x5db9f1] ; call rax
0x0000000000426e8b : mov eax, dword ptr [rip + 0x5dba57] ; call rax
0x0000000000426dc3 : mov eax, dword ptr [rip + 0x5dbb17] ; call rax
0x0000000000426d2e : mov eax, dword ptr [rip + 0x5dbb2c] ; call rax
0x0000000000426d25 : mov eax, dword ptr [rip + 0x5dbbbd] ; call rax
0x0000000000426763 : mov eax, dword ptr [rip + 0x5dc177] ; call rax
0x0000000000426720 : mov eax, dword ptr [rip + 0x5dc1c2] ; call rax
0x00000000004266dd : mov eax, dword ptr [rip + 0x5dc205] ; call rax
0x00000000004264f5 : mov eax, dword ptr [rip + 0x5dc3e5] ; call rax
0x00000000004264ad : mov eax, dword ptr [rip + 0x5dc435] ; call rax
0x00000000004263f1 : mov eax, dword ptr [rip + 0x5dc4f1] ; call rax
0x000000000042624e : mov eax, dword ptr [rip + 0x5dc61c] ; call rax
0x0000000000426245 : mov eax, dword ptr [rip + 0x5dc61d] ; call rax
0x0000000000425d72 : mov eax, dword ptr [rip + 0x5dcb68] ; call rax
0x0000000000425d2a : mov eax, dword ptr [rip + 0x5dcbb8] ; call rax
0x0000000000425c65 : mov eax, dword ptr [rip + 0x5dcc7d] ; call rax
0x0000000000425b75 : mov eax, dword ptr [rip + 0x5dccf5] ; call rax
0x0000000000425b6c : mov eax, dword ptr [rip + 0x5dccf6] ; call rax
0x00000000004259b6 : mov eax, dword ptr [rip + 0x5dcf2c] ; call rax
0x00000000004258c3 : mov eax, dword ptr [rip + 0x5dd017] ; call rax
0x000000000042588b : mov eax, dword ptr [rip + 0x5dd057] ; call rax
0x00000000004257d1 : mov eax, dword ptr [rip + 0x5dd109] ; call rax
0x0000000000425791 : mov eax, dword ptr [rip + 0x5dd151] ; call rax
0x00000000004256d8 : mov eax, dword ptr [rip + 0x5dd202] ; call rax
0x0000000000425695 : mov eax, dword ptr [rip + 0x5dd24d] ; call rax
0x00000000004255dc : mov eax, dword ptr [rip + 0x5dd2fe] ; call rax
0x0000000000425599 : mov eax, dword ptr [rip + 0x5dd349] ; call rax
0x000000000042504e : mov eax, dword ptr [rip + 0x5dd88c] ; call rax
0x000000000042500b : mov eax, dword ptr [rip + 0x5dd8d7] ; call rax
0x0000000000424fc8 : mov eax, dword ptr [rip + 0x5dd91a] ; call rax
0x0000000000424ee1 : mov eax, dword ptr [rip + 0x5dd9f9] ; call rax
0x0000000000424e9e : mov eax, dword ptr [rip + 0x5dda44] ; call rax
0x0000000000424e5d : mov eax, dword ptr [rip + 0x5dda85] ; call rax
0x0000000000424d76 : mov eax, dword ptr [rip + 0x5ddb64] ; call rax
0x0000000000424d33 : mov eax, dword ptr [rip + 0x5ddbaf] ; call rax
0x0000000000424cf2 : mov eax, dword ptr [rip + 0x5ddbf0] ; call rax
0x0000000000424bf9 : mov eax, dword ptr [rip + 0x5ddce9] ; call rax
0x0000000000424aea : mov eax, dword ptr [rip + 0x5dddf0] ; call rax
0x0000000000424ab5 : mov eax, dword ptr [rip + 0x5dde2d] ; call rax
0x00000000004244ef : mov eax, dword ptr [rip + 0x5de37b] ; call rax
0x00000000004244e6 : mov eax, dword ptr [rip + 0x5de37c] ; call rax
0x00000000004244ba : mov eax, dword ptr [rip + 0x5de3a0] ; call rax
0x00000000004244c3 : mov eax, dword ptr [rip + 0x5de417] ; call rax
0x00000000004244b1 : mov eax, dword ptr [rip + 0x5de431] ; call rax
0x0000000000423fb1 : mov eax, dword ptr [rip + 0x5de929] ; call rax
0x0000000000423f8d : mov eax, dword ptr [rip + 0x5de955] ; call rax
0x0000000000423b4d : mov eax, dword ptr [rip + 0x5ded8d] ; call rax
0x0000000000423b29 : mov eax, dword ptr [rip + 0x5dedb9] ; call rax
0x0000000000423595 : mov eax, dword ptr [rip + 0x5df34d] ; call rax
0x0000000000423449 : mov eax, dword ptr [rip + 0x5df499] ; call rax
0x000000000042338d : mov eax, dword ptr [rip + 0x5df54d] ; call rax
0x0000000000423371 : mov eax, dword ptr [rip + 0x5df571] ; call rax
0x0000000000423227 : mov eax, dword ptr [rip + 0x5df643] ; call rax
0x000000000042321e : mov eax, dword ptr [rip + 0x5df644] ; call rax
0x00000000004231f2 : mov eax, dword ptr [rip + 0x5df668] ; call rax
0x00000000004231fb : mov eax, dword ptr [rip + 0x5df6df] ; call rax
0x00000000004231e9 : mov eax, dword ptr [rip + 0x5df6f9] ; call rax
0x00000000004230b9 : mov eax, dword ptr [rip + 0x5df7b1] ; call rax
0x00000000004230b0 : mov eax, dword ptr [rip + 0x5df7b2] ; call rax
0x0000000000423084 : mov eax, dword ptr [rip + 0x5df7d6] ; call rax
0x000000000042308d : mov eax, dword ptr [rip + 0x5df84d] ; call rax
0x000000000042307b : mov eax, dword ptr [rip + 0x5df867] ; call rax
0x0000000000422e3f : mov eax, dword ptr [rip + 0x5dfaa3] ; call rax
0x0000000000422cc5 : mov eax, dword ptr [rip + 0x5dfc1d] ; call rax
0x0000000000422c09 : mov eax, dword ptr [rip + 0x5dfcd1] ; call rax
0x0000000000422bed : mov eax, dword ptr [rip + 0x5dfcf5] ; call rax
0x0000000000422a45 : mov eax, dword ptr [rip + 0x5dfe25] ; call rax
0x0000000000422a3c : mov eax, dword ptr [rip + 0x5dfe26] ; call rax
0x0000000000422a10 : mov eax, dword ptr [rip + 0x5dfe4a] ; call rax
0x0000000000422a19 : mov eax, dword ptr [rip + 0x5dfec1] ; call rax
0x0000000000422a07 : mov eax, dword ptr [rip + 0x5dfedb] ; call rax
0x0000000000422967 : mov eax, dword ptr [rip + 0x5dff03] ; call rax
0x000000000042295e : mov eax, dword ptr [rip + 0x5dff04] ; call rax
0x0000000000422932 : mov eax, dword ptr [rip + 0x5dff28] ; call rax
0x000000000042293b : mov eax, dword ptr [rip + 0x5dff9f] ; call rax
0x0000000000422929 : mov eax, dword ptr [rip + 0x5dffb9] ; call rax
0x000000000042225e : mov eax, dword ptr [rip + 0x5e0684] ; call rax
0x0000000000422121 : mov eax, dword ptr [rip + 0x5e07b9] ; call rax
0x0000000000422105 : mov eax, dword ptr [rip + 0x5e07dd] ; call rax
0x0000000000421c87 : mov eax, dword ptr [rip + 0x5e0c5b] ; call rax
0x0000000000421be8 : mov eax, dword ptr [rip + 0x5e0cfa] ; call rax
0x0000000000421956 : mov eax, dword ptr [rip + 0x5e0f84] ; call rax
0x0000000000421935 : mov eax, dword ptr [rip + 0x5e0fad] ; call rax
0x0000000000420ec6 : mov eax, dword ptr [rip + 0x5e1a1c] ; call rax
0x0000000000420e09 : mov eax, dword ptr [rip + 0x5e1ad1] ; call rax
0x0000000000420ded : mov eax, dword ptr [rip + 0x5e1af5] ; call rax
0x0000000000420c46 : mov eax, dword ptr [rip + 0x5e1c9c] ; call rax
0x0000000000420b2f : mov eax, dword ptr [rip + 0x5e1dab] ; call rax
0x0000000000420b13 : mov eax, dword ptr [rip + 0x5e1dcf] ; call rax
0x0000000000420801 : mov eax, dword ptr [rip + 0x5e20e1] ; call rax
0x0000000000420538 : mov eax, dword ptr [rip + 0x5e23a2] ; call rax
0x0000000000420517 : mov eax, dword ptr [rip + 0x5e23cb] ; call rax
0x0000000000420393 : mov eax, dword ptr [rip + 0x5e2547] ; call rax
0x000000000042036f : mov eax, dword ptr [rip + 0x5e2573] ; call rax
0x00000000004202b7 : mov eax, dword ptr [rip + 0x5e2623] ; call rax
0x0000000000420291 : mov eax, dword ptr [rip + 0x5e2651] ; call rax
0x00000000004201d9 : mov eax, dword ptr [rip + 0x5e2701] ; call rax
0x00000000004201b3 : mov eax, dword ptr [rip + 0x5e272f] ; call rax
0x000000000041fee9 : mov eax, dword ptr [rip + 0x5e29f1] ; call rax
0x000000000041fea9 : mov eax, dword ptr [rip + 0x5e2a39] ; call rax
0x000000000041fe67 : mov eax, dword ptr [rip + 0x5e2a7b] ; call rax
0x000000000041fdf0 : mov eax, dword ptr [rip + 0x5e2aea] ; call rax
0x000000000041fdb0 : mov eax, dword ptr [rip + 0x5e2b32] ; call rax
0x000000000041fd6e : mov eax, dword ptr [rip + 0x5e2b74] ; call rax
0x000000000041fcf7 : mov eax, dword ptr [rip + 0x5e2be3] ; call rax
0x000000000041fcba : mov eax, dword ptr [rip + 0x5e2c28] ; call rax
0x000000000041fc7c : mov eax, dword ptr [rip + 0x5e2c66] ; call rax
0x000000000041fae5 : mov eax, dword ptr [rip + 0x5e2df5] ; call rax
0x000000000041fac1 : mov eax, dword ptr [rip + 0x5e2e21] ; call rax
0x000000000041fa09 : mov eax, dword ptr [rip + 0x5e2ed1] ; call rax
0x000000000041f9e3 : mov eax, dword ptr [rip + 0x5e2eff] ; call rax
0x000000000041f92b : mov eax, dword ptr [rip + 0x5e2faf] ; call rax
0x000000000041f905 : mov eax, dword ptr [rip + 0x5e2fdd] ; call rax
0x000000000041f63b : mov eax, dword ptr [rip + 0x5e329f] ; call rax
0x000000000041f5fb : mov eax, dword ptr [rip + 0x5e32e7] ; call rax
0x000000000041f5b9 : mov eax, dword ptr [rip + 0x5e3329] ; call rax
0x000000000041f542 : mov eax, dword ptr [rip + 0x5e3398] ; call rax
0x000000000041f502 : mov eax, dword ptr [rip + 0x5e33e0] ; call rax
0x000000000041f4c0 : mov eax, dword ptr [rip + 0x5e3422] ; call rax
0x000000000041f449 : mov eax, dword ptr [rip + 0x5e3491] ; call rax
0x000000000041f40c : mov eax, dword ptr [rip + 0x5e34d6] ; call rax
0x000000000041f3ce : mov eax, dword ptr [rip + 0x5e3514] ; call rax
0x000000000041efc0 : mov eax, dword ptr [rip + 0x5e3922] ; call rax
0x000000000041eeb5 : mov eax, dword ptr [rip + 0x5e3a25] ; call rax
0x000000000041ee99 : mov eax, dword ptr [rip + 0x5e3a49] ; call rax
0x000000000041ecf3 : mov eax, dword ptr [rip + 0x5e3be7] ; call rax
0x000000000041ecd7 : mov eax, dword ptr [rip + 0x5e3c0b] ; call rax
0x000000000041e6cd : mov eax, dword ptr [rip + 0x5e419d] ; call rax
0x000000000041e6b4 : mov eax, dword ptr [rip + 0x5e41ae] ; call rax
0x000000000041e72a : mov eax, dword ptr [rip + 0x5e41b0] ; call rax
0x000000000041e630 : mov eax, dword ptr [rip + 0x5e422a] ; call rax
0x000000000041e673 : mov eax, dword ptr [rip + 0x5e426f] ; call rax
0x000000000041e639 : mov eax, dword ptr [rip + 0x5e42a1] ; call rax
0x000000000041e627 : mov eax, dword ptr [rip + 0x5e42bb] ; call rax
0x000000000041e09d : mov eax, dword ptr [rip + 0x5e47cd] ; call rax
0x000000000041e084 : mov eax, dword ptr [rip + 0x5e47de] ; call rax
0x000000000041e0fa : mov eax, dword ptr [rip + 0x5e47e0] ; call rax
0x000000000041e000 : mov eax, dword ptr [rip + 0x5e485a] ; call rax
0x000000000041e043 : mov eax, dword ptr [rip + 0x5e489f] ; call rax
0x000000000041e009 : mov eax, dword ptr [rip + 0x5e48d1] ; call rax
0x000000000041dff7 : mov eax, dword ptr [rip + 0x5e48eb] ; call rax
0x000000000041db7a : mov eax, dword ptr [rip + 0x5e4d68] ; call rax
0x000000000041dabd : mov eax, dword ptr [rip + 0x5e4e1d] ; call rax
0x000000000041daa1 : mov eax, dword ptr [rip + 0x5e4e41] ; call rax
0x000000000041d233 : mov eax, dword ptr [rip + 0x5e56af] ; call rax
0x000000000041cf06 : mov eax, dword ptr [rip + 0x5e59dc] ; call rax
0x000000000041cdef : mov eax, dword ptr [rip + 0x5e5aeb] ; call rax
0x000000000041cdd3 : mov eax, dword ptr [rip + 0x5e5b0f] ; call rax
0x000000000041c87a : mov eax, dword ptr [rip + 0x5e6068] ; call rax
0x000000000041c7c1 : mov eax, dword ptr [rip + 0x5e6119] ; call rax
0x000000000041c7a5 : mov eax, dword ptr [rip + 0x5e613d] ; call rax
0x000000000041c516 : mov eax, dword ptr [rip + 0x5e63c4] ; call rax
0x000000000041c4f5 : mov eax, dword ptr [rip + 0x5e63ed] ; call rax
0x000000000041becb : mov eax, dword ptr [rip + 0x5e6a17] ; call rax
0x000000000041be72 : mov eax, dword ptr [rip + 0x5e6a70] ; call rax
0x000000000041bd00 : mov eax, dword ptr [rip + 0x5e6bda] ; call rax
0x000000000041bcd3 : mov eax, dword ptr [rip + 0x5e6c0f] ; call rax
0x000000000041b2e6 : mov eax, dword ptr [rip + 0x5e75fc] ; call rax
0x000000000041b1e4 : mov eax, dword ptr [rip + 0x5e76fe] ; call rax
0x000000000041b005 : mov eax, dword ptr [rip + 0x5e78d5] ; call rax
0x000000000041af95 : mov eax, dword ptr [rip + 0x5e794d] ; call rax
0x000000000041ae78 : mov eax, dword ptr [rip + 0x5e7a62] ; call rax
0x000000000041ad97 : mov eax, dword ptr [rip + 0x5e7b4b] ; call rax
0x000000000041ab8c : mov eax, dword ptr [rip + 0x5e7d4e] ; call rax
0x000000000041aaf3 : mov eax, dword ptr [rip + 0x5e7def] ; call rax
0x000000000041a820 : mov eax, dword ptr [rip + 0x5e80ba] ; call rax
0x000000000041a7dd : mov eax, dword ptr [rip + 0x5e8105] ; call rax
0x000000000041a725 : mov eax, dword ptr [rip + 0x5e81b5] ; call rax
0x000000000041a6df : mov eax, dword ptr [rip + 0x5e8203] ; call rax
0x000000000041a626 : mov eax, dword ptr [rip + 0x5e82b4] ; call rax
0x000000000041a5db : mov eax, dword ptr [rip + 0x5e8307] ; call rax
0x000000000041a4cd : mov eax, dword ptr [rip + 0x5e840d] ; call rax
0x000000000041a46f : mov eax, dword ptr [rip + 0x5e8473] ; call rax
0x000000000041a3a7 : mov eax, dword ptr [rip + 0x5e8533] ; call rax
0x000000000041a312 : mov eax, dword ptr [rip + 0x5e8548] ; call rax
0x000000000041a309 : mov eax, dword ptr [rip + 0x5e85d9] ; call rax
0x00000000004197b2 : mov eax, dword ptr [rip + 0x5e9128] ; call rax
0x000000000041976f : mov eax, dword ptr [rip + 0x5e9173] ; call rax
0x000000000041972c : mov eax, dword ptr [rip + 0x5e91b6] ; call rax
0x0000000000419533 : mov eax, dword ptr [rip + 0x5e93a7] ; call rax
0x00000000004194f0 : mov eax, dword ptr [rip + 0x5e93f2] ; call rax
0x00000000004194af : mov eax, dword ptr [rip + 0x5e9433] ; call rax
0x00000000004192b6 : mov eax, dword ptr [rip + 0x5e9624] ; call rax
0x000000000041926e : mov eax, dword ptr [rip + 0x5e9674] ; call rax
0x00000000004191b9 : mov eax, dword ptr [rip + 0x5e9729] ; call rax
0x0000000000418c13 : mov eax, dword ptr [rip + 0x5e9cc7] ; call rax
0x0000000000418bcb : mov eax, dword ptr [rip + 0x5e9d17] ; call rax
0x0000000000418b16 : mov eax, dword ptr [rip + 0x5e9dcc] ; call rax
0x0000000000418a26 : mov eax, dword ptr [rip + 0x5e9e44] ; call rax
0x0000000000418a1d : mov eax, dword ptr [rip + 0x5e9e45] ; call rax
0x0000000000418914 : mov eax, dword ptr [rip + 0x5e9fce] ; call rax
0x000000000041880d : mov eax, dword ptr [rip + 0x5ea0cd] ; call rax
0x00000000004187d5 : mov eax, dword ptr [rip + 0x5ea10d] ; call rax
0x00000000004186c5 : mov eax, dword ptr [rip + 0x5ea215] ; call rax
0x0000000000418667 : mov eax, dword ptr [rip + 0x5ea27b] ; call rax
0x000000000041859f : mov eax, dword ptr [rip + 0x5ea33b] ; call rax
0x000000000041850a : mov eax, dword ptr [rip + 0x5ea350] ; call rax
0x0000000000418501 : mov eax, dword ptr [rip + 0x5ea3e1] ; call rax
0x0000000000417bf4 : mov eax, dword ptr [rip + 0x5eace6] ; call rax
0x0000000000417bac : mov eax, dword ptr [rip + 0x5ead36] ; call rax
0x0000000000417af7 : mov eax, dword ptr [rip + 0x5eadeb] ; call rax
0x0000000000417a10 : mov eax, dword ptr [rip + 0x5eae5a] ; call rax
0x0000000000417a07 : mov eax, dword ptr [rip + 0x5eae5b] ; call rax
0x000000000041790b : mov eax, dword ptr [rip + 0x5eafd7] ; call rax
0x0000000000417803 : mov eax, dword ptr [rip + 0x5eb0d7] ; call rax
0x00000000004177cb : mov eax, dword ptr [rip + 0x5eb117] ; call rax
0x0000000000417711 : mov eax, dword ptr [rip + 0x5eb1c9] ; call rax
0x00000000004176d1 : mov eax, dword ptr [rip + 0x5eb211] ; call rax
0x0000000000417618 : mov eax, dword ptr [rip + 0x5eb2c2] ; call rax
0x00000000004175d5 : mov eax, dword ptr [rip + 0x5eb30d] ; call rax
0x0000000000417049 : mov eax, dword ptr [rip + 0x5eb891] ; call rax
0x0000000000417006 : mov eax, dword ptr [rip + 0x5eb8dc] ; call rax
0x0000000000416fc5 : mov eax, dword ptr [rip + 0x5eb91d] ; call rax
0x0000000000416d4d : mov eax, dword ptr [rip + 0x5ebb8d] ; call rax
0x0000000000416d0a : mov eax, dword ptr [rip + 0x5ebbd8] ; call rax
0x0000000000416cc9 : mov eax, dword ptr [rip + 0x5ebc19] ; call rax
0x0000000000416b5e : mov eax, dword ptr [rip + 0x5ebd84] ; call rax
0x0000000000416a58 : mov eax, dword ptr [rip + 0x5ebe82] ; call rax
0x0000000000416a23 : mov eax, dword ptr [rip + 0x5ebebf] ; call rax
0x0000000000416913 : mov eax, dword ptr [rip + 0x5ebfc7] ; call rax
0x00000000004168b5 : mov eax, dword ptr [rip + 0x5ec02d] ; call rax
0x00000000004167ed : mov eax, dword ptr [rip + 0x5ec0ed] ; call rax
0x0000000000416758 : mov eax, dword ptr [rip + 0x5ec102] ; call rax
0x000000000041674f : mov eax, dword ptr [rip + 0x5ec193] ; call rax
0x0000000000415bdb : mov eax, dword ptr [rip + 0x5eccff] ; call rax
0x0000000000415b93 : mov eax, dword ptr [rip + 0x5ecd4f] ; call rax
0x0000000000415ade : mov eax, dword ptr [rip + 0x5ece04] ; call rax
0x00000000004159ee : mov eax, dword ptr [rip + 0x5ece7c] ; call rax
0x00000000004159e5 : mov eax, dword ptr [rip + 0x5ece7d] ; call rax
0x0000000000415979 : mov eax, dword ptr [rip + 0x5ecf69] ; call rax
0x0000000000415893 : mov eax, dword ptr [rip + 0x5ed047] ; call rax
0x000000000041585b : mov eax, dword ptr [rip + 0x5ed087] ; call rax
0x000000000041507d : mov eax, dword ptr [rip + 0x5ed7ed] ; call rax
0x0000000000415074 : mov eax, dword ptr [rip + 0x5ed7ee] ; call rax
0x0000000000415048 : mov eax, dword ptr [rip + 0x5ed812] ; call rax
0x0000000000415051 : mov eax, dword ptr [rip + 0x5ed889] ; call rax
0x000000000041503f : mov eax, dword ptr [rip + 0x5ed8a3] ; call rax
0x0000000000414b3f : mov eax, dword ptr [rip + 0x5edd9b] ; call rax
0x0000000000414b1b : mov eax, dword ptr [rip + 0x5eddc7] ; call rax
0x00000000004146db : mov eax, dword ptr [rip + 0x5ee1ff] ; call rax
0x00000000004146b7 : mov eax, dword ptr [rip + 0x5ee22b] ; call rax
0x0000000000414123 : mov eax, dword ptr [rip + 0x5ee7bf] ; call rax
0x0000000000413fd7 : mov eax, dword ptr [rip + 0x5ee90b] ; call rax
0x0000000000413f1b : mov eax, dword ptr [rip + 0x5ee9bf] ; call rax
0x0000000000413eff : mov eax, dword ptr [rip + 0x5ee9e3] ; call rax
0x0000000000413db5 : mov eax, dword ptr [rip + 0x5eeab5] ; call rax
0x0000000000413dac : mov eax, dword ptr [rip + 0x5eeab6] ; call rax
0x0000000000413d80 : mov eax, dword ptr [rip + 0x5eeada] ; call rax
0x0000000000413d89 : mov eax, dword ptr [rip + 0x5eeb51] ; call rax
0x0000000000413d77 : mov eax, dword ptr [rip + 0x5eeb6b] ; call rax
0x0000000000413c47 : mov eax, dword ptr [rip + 0x5eec23] ; call rax
0x0000000000413c3e : mov eax, dword ptr [rip + 0x5eec24] ; call rax
0x0000000000413c12 : mov eax, dword ptr [rip + 0x5eec48] ; call rax
0x0000000000413c1b : mov eax, dword ptr [rip + 0x5eecbf] ; call rax
0x0000000000413c09 : mov eax, dword ptr [rip + 0x5eecd9] ; call rax
0x00000000004139cd : mov eax, dword ptr [rip + 0x5eef15] ; call rax
0x0000000000413853 : mov eax, dword ptr [rip + 0x5ef08f] ; call rax
0x0000000000413797 : mov eax, dword ptr [rip + 0x5ef143] ; call rax
0x000000000041377b : mov eax, dword ptr [rip + 0x5ef167] ; call rax
0x00000000004135d3 : mov eax, dword ptr [rip + 0x5ef297] ; call rax
0x00000000004135ca : mov eax, dword ptr [rip + 0x5ef298] ; call rax
0x000000000041359e : mov eax, dword ptr [rip + 0x5ef2bc] ; call rax
0x00000000004135a7 : mov eax, dword ptr [rip + 0x5ef333] ; call rax
0x0000000000413595 : mov eax, dword ptr [rip + 0x5ef34d] ; call rax
0x00000000004134f5 : mov eax, dword ptr [rip + 0x5ef375] ; call rax
0x00000000004134ec : mov eax, dword ptr [rip + 0x5ef376] ; call rax
0x00000000004134c0 : mov eax, dword ptr [rip + 0x5ef39a] ; call rax
0x00000000004134c9 : mov eax, dword ptr [rip + 0x5ef411] ; call rax
0x00000000004134b7 : mov eax, dword ptr [rip + 0x5ef42b] ; call rax
0x00000000004121e6 : mov eax, dword ptr [rip + 0x5f06fc] ; call rax
0x00000000004120a9 : mov eax, dword ptr [rip + 0x5f0831] ; call rax
0x000000000041208d : mov eax, dword ptr [rip + 0x5f0855] ; call rax
0x0000000000411c1d : mov eax, dword ptr [rip + 0x5f0cc5] ; call rax
0x0000000000411b86 : mov eax, dword ptr [rip + 0x5f0d5c] ; call rax
0x0000000000411902 : mov eax, dword ptr [rip + 0x5f0fd8] ; call rax
0x00000000004118e1 : mov eax, dword ptr [rip + 0x5f1001] ; call rax
0x0000000000410e72 : mov eax, dword ptr [rip + 0x5f1a70] ; call rax
0x0000000000410db5 : mov eax, dword ptr [rip + 0x5f1b25] ; call rax
0x0000000000410d99 : mov eax, dword ptr [rip + 0x5f1b49] ; call rax
0x0000000000410bf6 : mov eax, dword ptr [rip + 0x5f1cec] ; call rax
0x0000000000410adf : mov eax, dword ptr [rip + 0x5f1dfb] ; call rax
0x0000000000410ac3 : mov eax, dword ptr [rip + 0x5f1e1f] ; call rax
0x00000000004107b9 : mov eax, dword ptr [rip + 0x5f2129] ; call rax
0x00000000004104f0 : mov eax, dword ptr [rip + 0x5f23ea] ; call rax
0x00000000004104cf : mov eax, dword ptr [rip + 0x5f2413] ; call rax
0x000000000041034b : mov eax, dword ptr [rip + 0x5f258f] ; call rax
0x0000000000410327 : mov eax, dword ptr [rip + 0x5f25bb] ; call rax
0x000000000041026f : mov eax, dword ptr [rip + 0x5f266b] ; call rax
0x0000000000410249 : mov eax, dword ptr [rip + 0x5f2699] ; call rax
0x0000000000410038 : mov eax, dword ptr [rip + 0x5f28a2] ; call rax
0x000000000040fff7 : mov eax, dword ptr [rip + 0x5f28eb] ; call rax
0x000000000040ffb5 : mov eax, dword ptr [rip + 0x5f292d] ; call rax
0x000000000040ff4a : mov eax, dword ptr [rip + 0x5f2990] ; call rax
0x000000000040ff05 : mov eax, dword ptr [rip + 0x5f29dd] ; call rax
0x000000000040febf : mov eax, dword ptr [rip + 0x5f2a23] ; call rax
0x000000000040fd31 : mov eax, dword ptr [rip + 0x5f2ba9] ; call rax
0x000000000040fd0d : mov eax, dword ptr [rip + 0x5f2bd5] ; call rax
0x000000000040fc55 : mov eax, dword ptr [rip + 0x5f2c85] ; call rax
0x000000000040fc2f : mov eax, dword ptr [rip + 0x5f2cb3] ; call rax
0x000000000040fa1e : mov eax, dword ptr [rip + 0x5f2ebc] ; call rax
0x000000000040f9dd : mov eax, dword ptr [rip + 0x5f2f05] ; call rax
0x000000000040f99b : mov eax, dword ptr [rip + 0x5f2f47] ; call rax
0x000000000040f930 : mov eax, dword ptr [rip + 0x5f2faa] ; call rax
0x000000000040f8eb : mov eax, dword ptr [rip + 0x5f2ff7] ; call rax
0x000000000040f8a5 : mov eax, dword ptr [rip + 0x5f303d] ; call rax
0x000000000040f4a0 : mov eax, dword ptr [rip + 0x5f3442] ; call rax
0x000000000040f395 : mov eax, dword ptr [rip + 0x5f3545] ; call rax
0x000000000040f379 : mov eax, dword ptr [rip + 0x5f3569] ; call rax
0x000000000040f1d3 : mov eax, dword ptr [rip + 0x5f3707] ; call rax
0x000000000040f1b7 : mov eax, dword ptr [rip + 0x5f372b] ; call rax
0x000000000040ebb5 : mov eax, dword ptr [rip + 0x5f3cb5] ; call rax
0x000000000040eb9c : mov eax, dword ptr [rip + 0x5f3cc6] ; call rax
0x000000000040ec12 : mov eax, dword ptr [rip + 0x5f3cc8] ; call rax
0x000000000040eb18 : mov eax, dword ptr [rip + 0x5f3d42] ; call rax
0x000000000040eb5b : mov eax, dword ptr [rip + 0x5f3d87] ; call rax
0x000000000040eb21 : mov eax, dword ptr [rip + 0x5f3db9] ; call rax
0x000000000040eb0f : mov eax, dword ptr [rip + 0x5f3dd3] ; call rax
0x000000000040e585 : mov eax, dword ptr [rip + 0x5f42e5] ; call rax
0x000000000040e56c : mov eax, dword ptr [rip + 0x5f42f6] ; call rax
0x000000000040e5e2 : mov eax, dword ptr [rip + 0x5f42f8] ; call rax
0x000000000040e4e8 : mov eax, dword ptr [rip + 0x5f4372] ; call rax
0x000000000040e52b : mov eax, dword ptr [rip + 0x5f43b7] ; call rax
0x000000000040e4f1 : mov eax, dword ptr [rip + 0x5f43e9] ; call rax
0x000000000040e4df : mov eax, dword ptr [rip + 0x5f4403] ; call rax
0x000000000040e062 : mov eax, dword ptr [rip + 0x5f4880] ; call rax
0x000000000040dfa5 : mov eax, dword ptr [rip + 0x5f4935] ; call rax
0x000000000040df89 : mov eax, dword ptr [rip + 0x5f4959] ; call rax
0x000000000040d72b : mov eax, dword ptr [rip + 0x5f51b7] ; call rax
0x000000000040d40a : mov eax, dword ptr [rip + 0x5f54d8] ; call rax
0x000000000040d2f3 : mov eax, dword ptr [rip + 0x5f55e7] ; call rax
0x000000000040d2d7 : mov eax, dword ptr [rip + 0x5f560b] ; call rax
0x000000000040cd86 : mov eax, dword ptr [rip + 0x5f5b5c] ; call rax
0x000000000040cccd : mov eax, dword ptr [rip + 0x5f5c0d] ; call rax
0x000000000040ccb1 : mov eax, dword ptr [rip + 0x5f5c31] ; call rax
0x000000000040ca22 : mov eax, dword ptr [rip + 0x5f5eb8] ; call rax
0x000000000040ca01 : mov eax, dword ptr [rip + 0x5f5ee1] ; call rax
0x000000000040c3ed : mov eax, dword ptr [rip + 0x5f64f5] ; call rax
0x000000000040c394 : mov eax, dword ptr [rip + 0x5f654e] ; call rax
0x000000000040c222 : mov eax, dword ptr [rip + 0x5f66b8] ; call rax
0x000000000040c1f5 : mov eax, dword ptr [rip + 0x5f66ed] ; call rax
0x000000000040b9a2 : mov eax, dword ptr [rip + 0x5f6f40] ; call rax
0x000000000040b578 : mov eax, dword ptr [rip + 0x5f7362] ; call rax
0x000000000040b52c : mov eax, dword ptr [rip + 0x5f73b6] ; call rax
0x000000000040b360 : mov eax, dword ptr [rip + 0x5f757a] ; call rax
0x000000000040b31b : mov eax, dword ptr [rip + 0x5f75c7] ; call rax
0x000000000040b277 : mov eax, dword ptr [rip + 0x5f7663] ; call rax
0x000000000040b254 : mov eax, dword ptr [rip + 0x5f768e] ; call rax
0x000000000040b10c : mov eax, dword ptr [rip + 0x5f77ce] ; call rax
0x000000000040b02b : mov eax, dword ptr [rip + 0x5f78b7] ; call rax
0x000000000040aba8 : mov eax, dword ptr [rip + 0x5f7d32] ; call rax
0x000000000040ab0f : mov eax, dword ptr [rip + 0x5f7dd3] ; call rax
0x0000000000408c17 : mov eax, dword ptr [rip + 0x5f9ccb] ; call rax
0x0000000000408b5f : mov eax, dword ptr [rip + 0x5f9d7b] ; call rax
0x0000000000408b3b : mov eax, dword ptr [rip + 0x5f9da7] ; call rax
0x000000000040a0b7 : mov eax, dword ptr [rip + 0x6032af] ; nop ; leave ; ret
0x00000000007a42c5 : mov eax, dword ptr [rip - 0x15cfb800] ; jmp rsi
0x00000000007413e1 : mov eax, dword ptr [rip - 0x190b9000] ; call rax
0x00000000006d4c0c : mov eax, dword ptr [rsi + 0x10] ; add rsp, 8 ; ret
0x00000000006ccc91 : mov eax, dword ptr [rsi + 0x10] ; cmp rax, 0xfe ; je 0x6ccca9 ; ret
0x00000000006ccd21 : mov eax, dword ptr [rsi + 0x10] ; cmp rax, 0xfe ; je 0x6ccd39 ; ret
0x00000000005577b1 : mov eax, dword ptr [rsi + 0x10] ; mov rdx, qword ptr [rsi + 0x18] ; ret
0x000000000050aaa1 : mov eax, dword ptr [rsi + 0x10] ; ret
0x00000000005086e1 : mov eax, dword ptr [rsi + 0x18] ; test rax, rax ; je 0x5086f8 ; ret
0x0000000000627771 : mov eax, dword ptr [rsi + 0x18] ; test rax, rax ; je 0x627788 ; ret
0x0000000000544e85 : mov eax, dword ptr [rsi + 0x1c] ; ret
0x0000000000507124 : mov eax, dword ptr [rsi + 0x20] ; cmp edx, eax ; sete al ; ret
0x000000000052b1f6 : mov eax, dword ptr [rsi + 0x20] ; ret
0x0000000000556a61 : mov eax, dword ptr [rsi + 0x20] ; test rax, rax ; je 0x556a78 ; ret
0x00000000005196a9 : mov eax, dword ptr [rsi + 0x28] ; cmp edx, eax ; sete al ; ret
0x000000000052b106 : mov eax, dword ptr [rsi + 0x28] ; ret
0x00000000005ad811 : mov eax, dword ptr [rsi + 0x30] ; mov rdx, qword ptr [rsi + 0x38] ; ret
0x0000000000525971 : mov eax, dword ptr [rsi + 0x30] ; ret
0x00000000006c6bfb : mov eax, dword ptr [rsi + 0xc] ; cmp dword ptr [rdi + 0xc], eax ; sete al ; ret
0x00000000006d4c41 : mov eax, dword ptr [rsi + 8] ; add rsp, 8 ; ret
0x000000000050f680 : mov eax, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], eax ; sete al ; ret
0x00000000005083cf : mov eax, dword ptr [rsi + rax*8] ; test rax, rax ; je 0x5083c9 ; pop rbx ; ret
0x000000000055674f : mov eax, dword ptr [rsi + rax*8] ; test rax, rax ; je 0x556749 ; pop rbx ; ret
0x000000000062745f : mov eax, dword ptr [rsi + rax*8] ; test rax, rax ; je 0x627459 ; pop rbx ; ret
0x00000000006cbb74 : mov eax, dword ptr [rsi*4 + 0x7328b0] ; ret
0x00000000006089d1 : mov eax, dword ptr [rsi] ; cmp qword ptr [rdi], rax ; je 0x6089e9 ; xor eax, eax ; ret
0x000000000054db26 : mov eax, dword ptr [rsi] ; ret
0x0000000000677692 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x00000000006cfe42 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x38 ; ret
0x00000000006943af : mov eax, dword ptr [rsp + 0x14] ; add rsp, 0x28 ; ret
0x00000000006cfe81 : mov eax, dword ptr [rsp + 0x14] ; add rsp, 0x38 ; ret
0x0000000000694430 : mov eax, dword ptr [rsp + 0x18] ; add rsp, 0x28 ; ret
0x00000000006cfea2 : mov eax, dword ptr [rsp + 0x18] ; add rsp, 0x38 ; ret
0x00000000006a63a5 : mov eax, dword ptr [rsp + 0x20] ; add rsp, 0x18 ; ret
0x00000000006a5645 : mov eax, dword ptr [rsp + 0x20] ; add rsp, 0x38 ; ret
0x0000000000541649 : mov eax, dword ptr [rsp + 0x28] ; add rsp, 0x60 ; pop rbx ; ret
0x00000000006d1089 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000006aaf17 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x000000000069436f : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x28 ; ret
0x00000000006cfad2 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x0000000000677cef : mov eax, dword ptr [rsp + 4] ; add rsp, 0x28 ; ret
0x00000000006cfe62 : mov eax, dword ptr [rsp + 4] ; add rsp, 0x38 ; ret
0x0000000000690dd8 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000006aaf38 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000677ccf : mov eax, dword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x00000000006cfab2 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x38 ; ret
0x0000000000606ba1 : mov eax, dword ptr [rsp - 0x18] ; mov edx, 0x12 ; ret
0x0000000000507dcb : mov eax, dword ptr [rsp - 0x18] ; mov qword ptr [rdi], rax ; ret
0x00000000006cbb2d : mov eax, dword ptr [rsp - 0x18] ; mov rdx, qword ptr [rsp - 0x10] ; ret
0x00000000006cbaf5 : mov eax, dword ptr [rsp - 0x28] ; mov rdx, qword ptr [rsp - 0x20] ; ret
0x00000000006c0d5f : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000006782cf : mov eax, dword ptr [rsp] ; add rsp, 0x28 ; ret
0x00000000006d06b2 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000006884b8 : mov eax, dword ptr [rsp] ; jne 0x688507 ; call rax
0x000000000068875a : mov eax, eax ; or rax, rsi ; ret
0x00000000004a9e4e : mov eax, eax ; outsb dx, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x00000000006d0a61 : mov eax, eax ; ret
0x0000000000688763 : mov eax, eax ; shl rsi, 0x20 ; or rax, rsi ; ret
0x0000000000677301 : mov eax, eax ; sub eax, edi ; ret
0x0000000000631e82 : mov eax, ebp ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000519b5f : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000007a05f1 : mov eax, ebp ; jmp rsi
0x000000000051f805 : mov eax, ebp ; jne 0x51f853 ; mov rdi, r12 ; call rax
0x0000000000570d35 : mov eax, ebp ; jne 0x570d83 ; mov rdi, r12 ; call rax
0x000000000058ccb5 : mov eax, ebp ; jne 0x58cd03 ; mov rdi, r12 ; call rax
0x000000000058ce45 : mov eax, ebp ; jne 0x58ce93 ; mov rdi, r12 ; call rax
0x0000000000606c5f : mov eax, ebp ; jne 0x606dd6 ; call rax
0x0000000000606e7b : mov eax, ebp ; jne 0x606ed4 ; call rax
0x000000000060737f : mov eax, ebp ; jne 0x607460 ; call rax
0x000000000067dcc3 : mov eax, ebp ; jne 0x67dd36 ; lea rdi, qword ptr [rsp + 0x20] ; call rax
0x000000000068758c : mov eax, ebp ; jne 0x6875c0 ; call rax
0x000000000068d99a : mov eax, ebp ; jne 0x68d9ba ; call rax
0x000000000068dbdf : mov eax, ebp ; jne 0x68dc03 ; call rax
0x000000000068db72 : mov eax, ebp ; jne 0x68dc11 ; call rax
0x00000000004e84ef : mov eax, ebp ; mov rdi, rax ; call 0x6d4747
0x00000000004f7794 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006625d3 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000544d7b : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000687aa0 : mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000687b26 : mov eax, ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000005fd4b6 : mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000000006ab652 : mov eax, ebx ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000677c37 : mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x00000000006ab342 : mov eax, ebx ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000069e1ec : mov eax, ebx ; add rsp, 0x50 ; pop rbx ; ret
0x00000000006ab9ec : mov eax, ebx ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000621186 : mov eax, ebx ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000058367b : mov eax, ebx ; add rsp, 0x70 ; pop rbx ; ret
0x00000000004f75e1 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004e76bc : mov eax, ebx ; call r11
0x00000000004b1945 : mov eax, ebx ; call rax
0x00000000006874f3 : mov eax, ebx ; jne 0x687541 ; call rax
0x0000000000688bfe : mov eax, ebx ; jne 0x688c46 ; call rax
0x0000000000688b3e : mov eax, ebx ; jne 0x688c54 ; call rax
0x00000000005e025c : mov eax, ebx ; mov rdi, rax ; call 0x5ccc8b
0x00000000005e846c : mov eax, ebx ; mov rdi, rax ; call 0x6d4747
0x00000000005600d0 : mov eax, ebx ; mov rdx, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000059c192 : mov eax, ebx ; mov rdx, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000050840b : mov eax, ebx ; mov rdx, rcx ; pop rbx ; ret
0x000000000040d278 : mov eax, ebx ; nop ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000491738 : mov eax, ebx ; nop ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000676292 : mov eax, ebx ; pop rbx ; jmp rax
0x0000000000508490 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006cd458 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000005043fd : mov eax, ebx ; pop rbx ; ret
0x0000000000415053 : mov eax, ebx ; pop rsi ; add bh, bh ; ror cl, 1 ; ret
0x00000000006c72fd : mov eax, ebx ; sub rsp, -0x80 ; pop rbx ; ret
0x00000000006642a2 : mov eax, ebx ; xor rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b1c77 : mov eax, ecx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000069425f : mov eax, ecx ; add rsp, 0x28 ; ret
0x00000000004a0622 : mov eax, ecx ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000054ceb7 : mov eax, ecx ; add rsp, 8 ; ret
0x00000000004b1553 : mov eax, ecx ; call rax
0x000000000040ef86 : mov eax, ecx ; mov rdx, qword ptr [rbp - 0x18] ; nop ; pop rbx ; pop rbp ; ret
0x000000000043db77 : mov eax, ecx ; nop ; leave ; ret
0x00000000006a206a : mov eax, ecx ; or rax, rdx ; pop rbx ; ret
0x00000000004b41b8 : mov eax, ecx ; pop rbx ; pop rbp ; ret
0x00000000006777d3 : mov eax, ecx ; pop rbx ; ret
0x000000000053722a : mov eax, ecx ; test al, 1 ; jne 0x537276 ; mov rdx, rsp ; call rax
0x00000000005091b9 : mov eax, edi ; add rsp, 8 ; ret
0x00000000006786f9 : mov eax, edi ; cmovg eax, esi ; ret
0x0000000000678703 : mov eax, edi ; cmovs eax, esi ; ret
0x00000000005a4b51 : mov eax, edi ; je 0x5a4b6f ; lea edx, dword ptr [rsi + 1] ; ret
0x00000000006c6d11 : mov eax, edi ; mov al, sil ; ret
0x0000000000517f38 : mov eax, edi ; mov edx, esi ; jg 0x517f46 ; ret
0x000000000056f778 : mov eax, edi ; mov edx, esi ; jg 0x56f786 ; ret
0x0000000000584028 : mov eax, edi ; mov edx, esi ; jg 0x584036 ; ret
0x00000000005841a8 : mov eax, edi ; mov edx, esi ; jg 0x5841b6 ; ret
0x000000000059c0d8 : mov eax, edi ; mov edx, esi ; jg 0x59c0e6 ; ret
0x00000000006a17f0 : mov eax, edi ; mov esi, esi ; add rax, rsi ; ret
0x00000000006a1810 : mov eax, edi ; mov esi, esi ; imul rax, rsi ; ret
0x0000000000487c51 : mov eax, edi ; mov rdi, rax ; call 0x6d4747
0x00000000005502b1 : mov eax, edi ; mov rdx, rsi ; ret
0x000000000066457c : mov eax, edi ; not eax ; pop rbx ; ret
0x0000000000678470 : mov eax, edi ; not eax ; shr al, 7 ; ret
0x00000000006c9540 : mov eax, edi ; or ah, 0x40 ; ret
0x000000000069d5c8 : mov eax, edi ; or eax, edx ; ret
0x00000000006642b4 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000525bfb : mov eax, edi ; pop rbx ; ret
0x0000000000506b23 : mov eax, edi ; ret
0x00000000006c9550 : mov eax, edi ; rol ax, 8 ; ret
0x00000000006a1881 : mov eax, edi ; shr rax, 0x20 ; ret
0x00000000005429a0 : mov eax, edi ; xor eax, 1 ; ret
0x00000000006a1823 : mov eax, edi ; xor edx, edx ; div rsi ; ret
0x000000000066bac1 : mov eax, edi ; xor edx, edx ; ret
0x00000000006692c7 : mov eax, edx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000065dfad : mov eax, edx ; add rsp, 0x18 ; ret
0x000000000047f29a : mov eax, edx ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000006ccf0f : mov eax, edx ; add rsp, 0x98 ; ret
0x00000000006a6140 : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006914ba : mov eax, edx ; add rsp, 8 ; ret
0x00000000004505d6 : mov eax, edx ; leave ; ret
0x000000000043bf9f : mov eax, edx ; nop ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000069cad0 : mov eax, edx ; not eax ; or eax, edi ; xor eax, esi ; ret
0x000000000069ca18 : mov eax, edx ; or eax, esi ; ret
0x00000000006cca03 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000508654 : mov eax, edx ; pop rbx ; ret
0x000000000068ec96 : mov eax, edx ; ret
0x0000000000676ef5 : mov eax, edx ; sub rax, rdi ; ret
0x000000000066ba74 : mov eax, edx ; test al, 1 ; jne 0x66baa2 ; call rax
0x000000000066d213 : mov eax, edx ; test al, 1 ; jne 0x66d28b ; mov esi, ebp ; call rax
0x000000000066d230 : mov eax, edx ; test al, 1 ; jne 0x66d295 ; mov esi, ebp ; call rax
0x00000000005017db : mov eax, es ; add byte ptr [rax], al ; add byte ptr [rbp + 0x63], cl ; retf 0x6349
0x00000000006a1800 : mov eax, esi ; add rax, rdi ; ret
0x000000000052701c : mov eax, esi ; add rsp, 8 ; ret
0x0000000000526f43 : mov eax, esi ; je 0x526f59 ; cmp dword ptr [rdi + 0x10], esi ; jl 0x526f59 ; ret
0x0000000000571d43 : mov eax, esi ; je 0x571d59 ; cmp dword ptr [rdi + 0x10], esi ; jl 0x571d59 ; ret
0x000000000058fa83 : mov eax, esi ; je 0x58fa99 ; cmp dword ptr [rdi + 0x10], esi ; jl 0x58fa99 ; ret
0x0000000000590d23 : mov eax, esi ; je 0x590d39 ; cmp dword ptr [rdi + 0x10], esi ; jl 0x590d39 ; ret
0x00000000005a5013 : mov eax, esi ; je 0x5a5029 ; cmp dword ptr [rdi + 0x10], esi ; jl 0x5a5029 ; ret
0x00000000005a025d : mov eax, esi ; jne 0x5a02ab ; mov rdi, r12 ; call rax
0x0000000000450718 : mov eax, esi ; mov byte ptr [rbp - 0xc], al ; pop rbp ; ret
0x0000000000448461 : mov eax, esi ; mov rdi, rax ; call 0x6d4747
0x00000000006c6fd0 : mov eax, esi ; or eax, edi ; ret
0x000000000069ca58 : mov eax, esi ; or eax, edx ; ret
0x0000000000503ab0 : mov eax, esi ; ret
0x00000000006a1f0b : mov eax, esi ; shl rdx, 0x20 ; or rax, rdx ; ret
0x000000000069ca90 : mov eax, esi ; xor eax, edx ; xor eax, edi ; ret
0x00000000004e4aca : mov eax, esp ; call r11
0x000000000073d05d : mov eax, esp ; jmp qword ptr [rax]
0x00000000004fd874 : mov eax, esp ; mov rdx, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000631b37 : mov eax, esp ; mov rdx, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000503cb7 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000062659e : mov eax, esp ; test al, 1 ; jne 0x62662a ; mov rsi, rsp ; call rax
0x000000000062a294 : mov eax, esp ; test al, 1 ; jne 0x62a2f0 ; mov rsi, rsp ; call rax
0x00000000005c9f4b : mov eax, fs ; or byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x0000000000659ea0 : mov eax, gs ; retf -0x2563
0x0000000000503cb6 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006d0a60 : mov eax, r8d ; ret
0x0000000000677300 : mov eax, r8d ; sub eax, edi ; ret
0x0000000000553150 : mov ebp, 0x4c000007 ; mov edi, ebp ; call rax
0x00000000007fbc08 : mov ebp, 0x512 ; ret 0x5a12
0x000000000063977f : mov ebp, 0x580009af ; pop rbx ; pop rbp ; ret
0x000000000076743d : mov ebp, 0x6b4c0001 ; salc ; call qword ptr [rsi]
0x0000000000767485 : mov ebp, 0x705e0001 ; salc ; call rax
0x000000000057d010 : mov ebp, 0x89000000 ; ret 0x8944
0x00000000006a2833 : mov ebp, 0x89480001 ; ret 0xc7
0x00000000006555e5 : mov ebp, 0x89480002 ; ret
0x0000000000628a3c : mov ebp, 0x8948000a ; ret
0x00000000005f2835 : mov ebp, 0x8948000c ; ret
0x00000000005455dd : mov ebp, 0x89480013 ; ret
0x0000000000534d0c : mov ebp, 0x89480014 ; ret
0x0000000000562818 : mov ebp, 0x89480015 ; ret
0x0000000000528a07 : mov ebp, 0x8948001a ; ret
0x00000000005089c1 : mov ebp, 0x8948001c ; ret
0x00000000004a28ae : mov ebp, 0x89480021 ; ret 0x8948
0x0000000000443d98 : mov ebp, 0x89480023 ; ret
0x0000000000454ffe : mov ebp, 0x89480026 ; ret 0x8b48
0x00000000004c1af7 : mov ebp, 0x8948ffff ; ret
0x00000000004d4041 : mov ebp, 0x8948ffff ; ret 0x8b48
0x00000000004f0ca1 : mov ebp, 0x90fff5ba ; leave ; ret
0x0000000000733a1c : mov ebp, 0x9bfff9fe ; cld ; stc ; jmp rsp
0x0000000000747fe9 : mov ebp, 0xaa100007 ; cmc ; jmp qword ptr [rax]
0x0000000000748009 : mov ebp, 0xab300007 ; cmc ; jmp rax
0x0000000000748011 : mov ebp, 0xac200007 ; cmc ; call qword ptr [rax]
0x00000000007f32b3 : mov ebp, 0xb09e0561 ; add dword ptr [rax], eax ; ret 0x3361
0x00000000007218c2 : mov ebp, 0xbac28abd ; retf -0x6cd0
0x00000000007228c1 : mov ebp, 0xbaca1cf2 ; ret 0x538a
0x000000000058388f : mov ebp, 0xbe000fd2 ; ret
0x000000000070685d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x00000000006242ef : mov ebp, 0xc90009a5 ; ret
0x00000000005e4adf : mov ebp, 0xc9000dbe ; ret
0x00000000005d74df : mov ebp, 0xc9000e94 ; ret
0x0000000000450b8d : mov ebp, 0xc9fffed6 ; ret
0x0000000000414bf7 : mov ebp, 0xc9ffffa9 ; ret
0x00000000004f915f : mov ebp, 0xe8ffffe9 ; retf 0x1883
0x00000000005f33a0 : mov ebp, 0xebfb894c ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000722cac : mov ebp, 0xf2272a8a ; retf
0x00000000005baaca : mov ebp, 0xffffec50 ; call rax
0x0000000000634e7e : mov ebp, 0xfffffad0 ; call rax
0x0000000000553801 : mov ebp, 0xfffffba8 ; call rax
0x000000000065b9cb : mov ebp, 0xfffffc30 ; call 0x687bf7
0x0000000000553526 : mov ebp, 0xfffffc38 ; call rax
0x0000000000531327 : mov ebp, 0xfffffc40 ; call 0x53ddf7
0x000000000052c91f : mov ebp, 0xfffffc70 ; call rax
0x000000000052cac0 : mov ebp, 0xfffffc78 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x854d
0x000000000054940b : mov ebp, 0xfffffc98 ; call rax
0x00000000005c880f : mov ebp, 0xfffffcc8 ; call rax
0x00000000005c86c7 : mov ebp, 0xfffffcc8 ; call rbx
0x0000000000636005 : mov ebp, 0xfffffd50 ; call rax
0x000000000055372d : mov ebp, 0xfffffd50 ; call rdx
0x00000000006554b4 : mov ebp, 0xfffffd88 ; call rax
0x000000000064ca50 : mov ebp, 0xfffffe28 ; add byte ptr [rcx - 0x77], cl ; ret 0x850f
0x000000000063bb16 : mov ebp, 0xfffffe58 ; call rax
0x00000000005c9995 : mov ebp, 0xfffffed8 ; call rax
0x00000000006b7ec2 : mov ebp, 0xfffffeec ; add byte ptr [rdi], cl ; ret 0x8588
0x00000000004e6056 : mov ebp, 0xfffffef8 ; call r11
0x000000000064edb7 : mov ebp, 0xffffff20 ; add byte ptr [rcx - 0x77], cl ; ret 0xe74
0x0000000000653135 : mov ebp, 0xffffff40 ; call rax
0x00000000006498bd : mov ebp, 0xffffff58 ; call rax
0x000000000064a55d : mov ebp, 0xffffff60 ; call rax
0x0000000000601e1c : mov ebp, 0xffffff68 ; call 0x6be8b7
0x000000000053384b : mov ebp, 0xffffff78 ; call rax
0x00000000005230af : mov ebp, 1 ; call 0x67fb59
0x000000000073b205 : mov ebp, ds ; call rax
0x0000000000555121 : mov ebp, dword ptr [rax + 0x29480013] ; ret
0x00000000006d464d : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004e7c41 : mov ebp, dword ptr [rcx + 0x1d] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000424a21 : mov ebp, dword ptr [rdi + 0x29480026] ; ret
0x0000000000524abf : mov ebp, eax ; call 0x681536
0x00000000006b660b : mov ebp, eax ; call qword ptr [rip + 0x34c2d5]
0x00000000005c5dea : mov ebp, eax ; call qword ptr [rip + 0x43caf6]
0x00000000005666cd : mov ebp, eax ; call qword ptr [rip + 0x49c213]
0x000000000055665e : mov ebp, eax ; call qword ptr [rip + 0x4ac282]
0x0000000000525eb1 : mov ebp, eax ; call qword ptr [rip + 0x4dca2f]
0x0000000000515e2b : mov ebp, eax ; call qword ptr [rip + 0x4ecab5]
0x00000000006078f1 : mov ebp, eax ; call rcx
0x000000000057c8b0 : mov ebp, eax ; jmp 0x57c87a
0x00000000006c8f41 : mov ebp, eax ; jmp 0x6c8f13
0x000000000040ce55 : mov ebp, eax ; mov ebx, 1 ; jmp 0x40ce29
0x0000000000413908 : mov ebp, eax ; mov ebx, 1 ; jmp 0x4138dc
0x00000000004140a8 : mov ebp, eax ; mov ebx, 1 ; jmp 0x41407c
0x000000000041c949 : mov ebp, eax ; mov ebx, 1 ; jmp 0x41c91d
0x0000000000422d7a : mov ebp, eax ; mov ebx, 1 ; jmp 0x422d4e
0x000000000042351a : mov ebp, eax ; mov ebx, 1 ; jmp 0x4234ee
0x000000000042b93b : mov ebp, eax ; mov ebx, 1 ; jmp 0x42b90f
0x000000000043239a : mov ebp, eax ; mov ebx, 1 ; jmp 0x43236e
0x0000000000432b3a : mov ebp, eax ; mov ebx, 1 ; jmp 0x432b0e
0x000000000044fe10 : mov ebp, eax ; mov ebx, 1 ; jmp 0x44fde4
0x00000000004509da : mov ebp, eax ; mov ebx, 1 ; jmp 0x4509ae
0x00000000004519d2 : mov ebp, eax ; mov ebx, 1 ; jmp 0x4519a6
0x00000000004531b6 : mov ebp, eax ; mov ebx, 1 ; jmp 0x45318a
0x0000000000453d80 : mov ebp, eax ; mov ebx, 1 ; jmp 0x453d54
0x000000000045524a : mov ebp, eax ; mov ebx, 1 ; jmp 0x45521e
0x00000000004716a0 : mov ebp, eax ; mov ebx, 1 ; jmp 0x471674
0x000000000047226a : mov ebp, eax ; mov ebx, 1 ; jmp 0x47223e
0x00000000004a1d6a : mov ebp, eax ; mov ebx, 1 ; jmp 0x4a1d3e
0x00000000004a2934 : mov ebp, eax ; mov ebx, 1 ; jmp 0x4a2908
0x00000000004b58cc : mov ebp, eax ; mov ebx, 1 ; jmp 0x4b58a0
0x00000000004b6496 : mov ebp, eax ; mov ebx, 1 ; jmp 0x4b646a
0x00000000004b7b32 : mov ebp, eax ; mov ebx, 1 ; jmp 0x4b7b06
0x00000000004b86fc : mov ebp, eax ; mov ebx, 1 ; jmp 0x4b86d0
0x00000000004c23f6 : mov ebp, eax ; mov ebx, 1 ; jmp 0x4c23ca
0x00000000004c3612 : mov ebp, eax ; mov ebx, 1 ; jmp 0x4c35e6
0x00000000005cd088 : mov ebp, eax ; mov ebx, 1 ; jmp 0x5cd05c
0x00000000005cd2b6 : mov ebp, eax ; mov ebx, 1 ; jmp 0x5cd28a
0x00000000005cd4e4 : mov ebp, eax ; mov ebx, 1 ; jmp 0x5cd4b8
0x00000000005cd709 : mov ebp, eax ; mov ebx, 1 ; jmp 0x5cd6dd
0x00000000005d9bde : mov ebp, eax ; mov ebx, 1 ; jmp 0x5d9bb2
0x00000000005d9e0c : mov ebp, eax ; mov ebx, 1 ; jmp 0x5d9de0
0x00000000005da03a : mov ebp, eax ; mov ebx, 1 ; jmp 0x5da00e
0x00000000005da25f : mov ebp, eax ; mov ebx, 1 ; jmp 0x5da233
0x00000000005e7f40 : mov ebp, eax ; mov ebx, 1 ; jmp 0x5e7f14
0x00000000005e86fa : mov ebp, eax ; mov ebx, 1 ; jmp 0x5e86ce
0x00000000005eb258 : mov ebp, eax ; mov ebx, 1 ; jmp 0x5eb22c
0x00000000005eba12 : mov ebp, eax ; mov ebx, 1 ; jmp 0x5eb9e6
0x0000000000615b5b : mov ebp, eax ; mov ebx, 1 ; jmp 0x615b2f
0x000000000061b19e : mov ebp, eax ; mov ebx, 1 ; jmp 0x61b172
0x000000000061bdac : mov ebp, eax ; mov ebx, 1 ; jmp 0x61bd80
0x0000000000567c58 : mov ebp, eax ; mov rdi, rax ; je 0x567c82 ; call 0x6d4749
0x0000000000567c69 : mov ebp, eax ; mov rdi, rax ; je 0x567c9a ; call 0x6d4749
0x0000000000567cf6 : mov ebp, eax ; mov rdi, rax ; je 0x567d42 ; call 0x6d4749
0x0000000000567d2d : mov ebp, eax ; mov rdi, rax ; je 0x567d5d ; call 0x6d4749
0x00000000005938dc : mov ebp, eax ; mov rdi, rbx ; xor eax, eax ; call 0x67fb5b
0x00000000007441b5 : mov ebp, ebp ; call qword ptr [rax]
0x00000000007441a5 : mov ebp, ebp ; jmp rax
0x00000000005ad467 : mov ebp, ebx ; call 0x5a9e94
0x000000000073b1e5 : mov ebp, ebx ; jmp qword ptr [rax]
0x000000000073b1d5 : mov ebp, ebx ; jmp rax
0x000000000068b76a : mov ebp, ebx ; mov dword ptr [rax - 0x77], ecx ; ret
0x0000000000750339 : mov ebp, ecx ; call rdx
0x0000000000501e6f : mov ebp, edi ; call 0x6be894
0x000000000051aa3c : mov ebp, edi ; mov rdi, rax ; call rdx
0x00000000005b3123 : mov ebp, edx ; call 0x67fb56
0x00000000004b5278 : mov ebp, edx ; mov qword ptr [rbp - 0x48], r10 ; call 0x68153a
0x00000000004052a9 : mov ebp, edx ; push rdx ; call 0x681537
0x0000000000744a55 : mov ebp, esi ; call rax
0x000000000051f996 : mov ebp, esi ; jne 0x51f9e5 ; mov rdi, r12 ; call rax
0x0000000000570ec6 : mov ebp, esi ; jne 0x570f15 ; mov rdi, r12 ; call rax
0x000000000058cfd6 : mov ebp, esi ; jne 0x58d025 ; mov rdi, r12 ; call rax
0x000000000058d166 : mov ebp, esi ; jne 0x58d1b5 ; mov rdi, r12 ; call rax
0x00000000005a0416 : mov ebp, esi ; jne 0x5a0465 ; mov rdi, r12 ; call rax
0x00000000006b4f76 : mov ebp, esi ; sub rsp, 0x18 ; call 0x6819b8
0x0000000000408b0c : mov ebp, esp ; call rax
0x000000000053ae0e : mov ebp, esp ; inc dword ptr [rbp - 0x3f6bf040] ; pop rdx ; ret
0x000000000066ac34 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; nop ; pop rbp ; ret
0x000000000040ba68 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x00000000006258a0 : mov ebp, esp ; mov rax, qword ptr [rip + 0x3dcfc7] ; call rax
0x00000000006116f4 : mov ebp, esp ; mov rax, qword ptr [rip + 0x3f11eb] ; call rax
0x000000000066ac40 : mov ebp, esp ; nop ; pop rbp ; ret
0x00000000007441ed : mov ebp, gs ; jmp qword ptr [rax]
0x00000000006aa86a : mov ebp, ss ; dec dword ptr [rax - 0x77] ; ret
0x000000000052bfda : mov ebx, 0 ; call rax
0x000000000063695b : mov ebx, 0x12c8 ; add byte ptr [rdi - 0x18], dh ; retf 0x4ab
0x00000000005775df : mov ebx, 0x15d15be8 ; add bl, ch ; retf -0x76b8
0x00000000005773df : mov ebx, 0x15d35be8 ; add bl, ch ; retf -0x76b8
0x000000000064ada4 : mov ebx, 0x1b8 ; add byte ptr [rdi], cl ; mov dh, 0x55 ; ret 0xfa80
0x0000000000745029 : mov ebx, 0x21400006 ; out dx, eax ; jmp qword ptr [rax]
0x0000000000745069 : mov ebx, 0x22200006 ; out dx, eax ; jmp qword ptr [rax]
0x0000000000433dc5 : mov ebx, 0x29480025 ; ret
0x00000000005c3048 : mov ebx, 0x31fffffd ; shr al, 0xfd ; retf 0xb
0x000000000049ed0d : mov ebx, 0x39ffffba ; ret
0x000000000073a23d : mov ebx, 0x45d0ffda ; add eax, dword ptr [rax] ; pop rax ; ret 0xffda
0x000000000053499e : mov ebx, 0x48000005 ; mov edi, dword ptr [rsp + 0x18] ; call rax
0x000000000051b891 : mov ebx, 0x48ffffcb ; add esp, 0x30 ; pop rbx ; ret
0x0000000000587511 : mov ebx, 0x48ffffd0 ; add esp, 0x30 ; pop rbx ; ret
0x00000000005ff2d1 : mov ebx, 0x48fffff3 ; add esp, 8 ; ret
0x0000000000404781 : mov ebx, 0x58002cff ; pop rbx ; pop rbp ; ret
0x00000000007672f5 : mov ebx, 0x5c920001 ; salc ; jmp qword ptr [rsi]
0x0000000000538ba2 : mov ebx, 0x63480019 ; ret
0x000000000073a82d : mov ebx, 0x67f0ffdc ; add eax, dword ptr [rax] ; push rax ; retf -0x24
0x0000000000407573 : mov ebx, 0x8800279f ; ret
0x00000000004ffb73 : mov ebx, 0x89001819 ; ret
0x0000000000645792 : mov ebx, 0x89480003 ; ret
0x000000000062405c : mov ebx, 0x89480005 ; ret
0x00000000005b4fac : mov ebx, 0x8948000c ; ret
0x000000000057572b : mov ebx, 0x89480010 ; ret
0x0000000000534f4b : mov ebx, 0x89480014 ; ret
0x0000000000568bdb : mov ebx, 0x89480016 ; ret
0x00000000004f5025 : mov ebx, 0x89480018 ; ret
0x0000000000528b74 : mov ebx, 0x8948001a ; ret
0x0000000000508be7 : mov ebx, 0x8948001c ; ret
0x0000000000424c66 : mov ebx, 0x89480027 ; ret 0x858b
0x0000000000432abc : mov ebx, 0x89480028 ; ret 0x8948
0x0000000000546528 : mov ebx, 0x8948006f ; ja 0x54653e ; ret
0x0000000000546527 : mov ebx, 0x8948006f ; ja 0x54653f ; ret
0x000000000062a6f3 : mov ebx, 0x89480071 ; out dx, eax ; call rax
0x000000000057a636 : mov ebx, 0x8948b9eb ; ret
0x00000000004b1c67 : mov ebx, 0x8948fffe ; ror dword ptr [rax - 0x77], 1 ; retf -0x76b8
0x00000000004c1d12 : mov ebx, 0x8948ffff ; ret
0x00000000005fbe86 : mov ebx, 0x930f0011 ; ret 0xca09
0x0000000000747f89 : mov ebx, 0xa7900007 ; cmc ; call rax
0x00000000007b7285 : mov ebx, 0xb4280006 ; out dx, eax ; call rsi
0x000000000060658c : mov ebx, 0xb8c3c031 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000435a7d : mov ebx, 0xbf000000 ; scasb al, byte ptr [rdi] ; ret 0x6d
0x000000000070685b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x000000000045bde3 : mov ebx, 0xc9900022 ; ret
0x000000000061b39b : mov ebx, 0xc9ffff63 ; ret
0x00000000004a359d : mov ebx, 0xc9ffffab ; ret
0x00000000007572ed : mov ebx, 0xcea80000 ; iretd ; call rcx
0x0000000000721925 : mov ebx, 0xe88ad1c2 ; out dx, eax ; cli ; retf
0x00000000005aad81 : mov ebx, 0xeb001299 ; retf 0x1be
0x000000000068aaf1 : mov ebx, 0xebfffff4 ; fisttp qword ptr [rax - 0x77] ; ret
0x00000000007f56b8 : mov ebx, 0xf8a170f ; add ebx, edi ; syscall
0x00000000007faed4 : mov ebx, 0xfa0501c2 ; ret
0x000000000061b621 : mov ebx, 0xff003e72 ; ror cl, 1 ; ret
0x0000000000412216 : mov ebx, 1 ; call 0x6bed07
0x000000000040ce57 : mov ebx, 1 ; jmp 0x40ce27
0x000000000041390a : mov ebx, 1 ; jmp 0x4138da
0x00000000004140aa : mov ebx, 1 ; jmp 0x41407a
0x000000000041c94b : mov ebx, 1 ; jmp 0x41c91b
0x0000000000422d7c : mov ebx, 1 ; jmp 0x422d4c
0x000000000042351c : mov ebx, 1 ; jmp 0x4234ec
0x000000000042b93d : mov ebx, 1 ; jmp 0x42b90d
0x000000000043239c : mov ebx, 1 ; jmp 0x43236c
0x0000000000432b3c : mov ebx, 1 ; jmp 0x432b0c
0x000000000044fe12 : mov ebx, 1 ; jmp 0x44fde2
0x00000000004509dc : mov ebx, 1 ; jmp 0x4509ac
0x00000000004519d4 : mov ebx, 1 ; jmp 0x4519a4
0x00000000004531b8 : mov ebx, 1 ; jmp 0x453188
0x0000000000453d82 : mov ebx, 1 ; jmp 0x453d52
0x000000000045524c : mov ebx, 1 ; jmp 0x45521c
0x00000000004716a2 : mov ebx, 1 ; jmp 0x471672
0x000000000047226c : mov ebx, 1 ; jmp 0x47223c
0x0000000000478a42 : mov ebx, 1 ; jmp 0x478a12
0x000000000048d358 : mov ebx, 1 ; jmp 0x48d330
0x00000000004a1d6c : mov ebx, 1 ; jmp 0x4a1d3c
0x00000000004a2936 : mov ebx, 1 ; jmp 0x4a2906
0x00000000004b58ce : mov ebx, 1 ; jmp 0x4b589e
0x00000000004b6498 : mov ebx, 1 ; jmp 0x4b6468
0x00000000004b7b34 : mov ebx, 1 ; jmp 0x4b7b04
0x00000000004b86fe : mov ebx, 1 ; jmp 0x4b86ce
0x00000000004c23f8 : mov ebx, 1 ; jmp 0x4c23c8
0x00000000004c3614 : mov ebx, 1 ; jmp 0x4c35e4
0x00000000005cd08a : mov ebx, 1 ; jmp 0x5cd05a
0x00000000005cd2b8 : mov ebx, 1 ; jmp 0x5cd288
0x00000000005cd4e6 : mov ebx, 1 ; jmp 0x5cd4b6
0x00000000005cd70b : mov ebx, 1 ; jmp 0x5cd6db
0x00000000005cf584 : mov ebx, 1 ; jmp 0x5cf554
0x00000000005d818f : mov ebx, 1 ; jmp 0x5d815f
0x00000000005d9be0 : mov ebx, 1 ; jmp 0x5d9bb0
0x00000000005d9e0e : mov ebx, 1 ; jmp 0x5d9dde
0x00000000005da03c : mov ebx, 1 ; jmp 0x5da00c
0x00000000005da261 : mov ebx, 1 ; jmp 0x5da231
0x00000000005dc1fd : mov ebx, 1 ; jmp 0x5dc1cd
0x00000000005e568e : mov ebx, 1 ; jmp 0x5e565e
0x00000000005e7f42 : mov ebx, 1 ; jmp 0x5e7f12
0x00000000005e86fc : mov ebx, 1 ; jmp 0x5e86cc
0x00000000005eb25a : mov ebx, 1 ; jmp 0x5eb22a
0x00000000005eba14 : mov ebx, 1 ; jmp 0x5eb9e4
0x00000000006143c9 : mov ebx, 1 ; jmp 0x614399
0x0000000000614871 : mov ebx, 1 ; jmp 0x614841
0x0000000000615b5d : mov ebx, 1 ; jmp 0x615b2d
0x000000000061b1a0 : mov ebx, 1 ; jmp 0x61b170
0x000000000061bdae : mov ebx, 1 ; jmp 0x61bd7e
0x0000000000738b84 : mov ebx, cs ; salc ; call qword ptr [rax]
0x00000000005067e0 : mov ebx, ds ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; fmul dword ptr [rax + 0x63] ; retf
0x0000000000506ea2 : mov ebx, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004f876e : mov ebx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005c8683 : mov ebx, dword ptr [rbp - 0x338] ; mov rdi, rbx ; call rax
0x000000000053de90 : mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x0000000000429d65 : mov ebx, dword ptr [rbp] ; call rax
0x000000000056d17c : mov ebx, dword ptr [rbx + 7] ; nop ; call rbx
0x0000000000507b94 : mov ebx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000494c41 : mov ebx, dword ptr [rcx - 0x76b7ffde] ; ret 0x8948
0x0000000000459d62 : mov ebx, dword ptr [rdx] ; call rax
0x00000000007217f8 : mov ebx, dword ptr [rsi - 0x51e2d327] ; ficomp word ptr [rbx - 0x50] ; ret 0x9b64
0x00000000004d7e3a : mov ebx, dword ptr [rsi] ; add cl, cl ; ret
0x0000000000739a1d : mov ebx, eax ; call qword ptr [rax]
0x00000000005b66cc : mov ebx, eax ; call qword ptr [rip + 0x44c214]
0x00000000005b65e6 : mov ebx, eax ; call qword ptr [rip + 0x44c2f2]
0x0000000000575e79 : mov ebx, eax ; call qword ptr [rip + 0x48ca67]
0x0000000000575e20 : mov ebx, eax ; call qword ptr [rip + 0x48cab8]
0x00000000005566cf : mov ebx, eax ; call qword ptr [rip + 0x4ac209]
0x00000000005266a1 : mov ebx, eax ; call qword ptr [rip + 0x4dc237]
0x000000000051660a : mov ebx, eax ; call qword ptr [rip + 0x4ec2ce]
0x0000000000515e6c : mov ebx, eax ; call qword ptr [rip + 0x4eca6c]
0x0000000000515e08 : mov ebx, eax ; call qword ptr [rip + 0x4ecad0]
0x0000000000515de8 : mov ebx, eax ; call qword ptr [rip + 0x4ecaf0]
0x0000000000505e3a : mov ebx, eax ; call qword ptr [rip + 0x4fcaa6]
0x0000000000509a06 : mov ebx, eax ; jmp 0x5099d0
0x0000000000523f17 : mov ebx, eax ; jmp 0x523ee1
0x0000000000538bbb : mov ebx, eax ; jmp 0x538b8d
0x00000000005693d7 : mov ebx, eax ; jmp 0x5693a1
0x0000000000628a66 : mov ebx, eax ; jmp 0x628a30
0x00000000005fc5ef : mov ebx, eax ; mov edx, 0x717660 ; call 0x6a9099
0x00000000005d4bd1 : mov ebx, eax ; mov r12d, 1 ; jmp 0x5d4ba7
0x00000000005e1aaa : mov ebx, eax ; mov r12d, 1 ; jmp 0x5e1a80
0x00000000005f23b7 : mov ebx, eax ; mov rax, qword ptr [rip + 0x410528] ; call rax
0x00000000005938f1 : mov ebx, eax ; mov rdi, r12 ; xor eax, eax ; call 0x67fb5b
0x0000000000523100 : mov ebx, eax ; mov rdi, rbp ; xor eax, eax ; call 0x67fb5b
0x0000000000543941 : mov ebx, eax ; xor eax, eax ; call 0x67fb58
0x000000000059eea2 : mov ebx, eax ; xor ebp, ebp ; jmp 0x59ee78
0x0000000000564a8f : mov ebx, eax ; xor r12d, r12d ; call 0x681539
0x0000000000514a43 : mov ebx, eax ; xor r14d, r14d ; call 0x681539
0x0000000000452fb1 : mov ebx, ebp ; add byte ptr es:[rax - 0x77], cl ; ret 0x8b48
0x00000000006be683 : mov ebx, ebp ; call 0x6aa8e4
0x000000000073a44d : mov ebx, ebx ; jmp rax
0x00000000007f4050 : mov ebx, ecx ; add dword ptr [rip + 0x1cbc7], eax ; xchg eax, ebx ; retf
0x00000000006c7a52 : mov ebx, edi ; call 0x403c74
0x0000000000505df2 : mov ebx, edi ; call qword ptr [rip + 0x4fca6e]
0x0000000000575e4a : mov ebx, edi ; sub rsp, 0x30 ; call qword ptr [rip + 0x48ca92]
0x00000000005b38ec : mov ebx, edx ; call 0x67fb56
0x00000000004b41b6 : mov ebx, edx ; mov eax, ecx ; pop rbx ; pop rbp ; ret
0x00000000005f52ec : mov ebx, edx ; mov qword ptr [rbp - 0x38], r10 ; call 0x68153a
0x0000000000424aa0 : mov ebx, edx ; mov qword ptr [rbp - 0x48], r10 ; call 0x68153a
0x00000000005b1da1 : mov ebx, edx ; sub rsp, 0x18 ; call 0x6be898
0x0000000000757a94 : mov ebx, es ; add byte ptr [rax], al ; cli ; fxch st(0), st(7) ; jmp qword ptr [rax]
0x000000000073f29d : mov ebx, esp ; call qword ptr [rax]
0x000000000055b8dd : mov ebx, fs ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x634d
0x000000000073f315 : mov ebx, fs ; call rax
0x00000000006c7a51 : mov ebx, r15d ; call 0x403c75
0x000000000067e51a : mov ebx, ss ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000004e48aa : mov ecx, 0 ; call r8
0x00000000004e76b6 : mov ecx, 0 ; mov r8, rbx ; call r11
0x000000000056501c : mov ecx, 0x15ff0015 ; ret
0x00000000006c6f8c : mov ecx, 0x15ff0033 ; retf
0x00000000007e5beb : mov ecx, 0x1601 ; rol byte ptr [rcx], cl ; test dword ptr [rcx], eax ; ret
0x00000000006d6a9b : mov ecx, 0x181dc502 ; shl dword ptr [rdi], cl ; ret
0x0000000000744fb9 : mov ecx, 0x1fc00006 ; out dx, eax ; call rax
0x00000000004ad3c2 : mov ecx, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x000000000067b685 : mov ecx, 0x29000000 ; ret
0x0000000000433fbc : mov ecx, 0x29480025 ; ret
0x00000000007e9cf1 : mov ecx, 0x303 ; mov cl, 4 ; retf -0x78ff
0x00000000005db803 : mov ecx, 0x3900005a ; ret
0x00000000006ab913 : mov ecx, 0x48fffffd ; mov eax, ebx ; pop rbx ; ret
0x00000000007cceed : mov ecx, 0x503 ; retf 0x1603
0x00000000007fa0bc : mov ecx, 0x50f80552 ; retf
0x00000000007670fd : mov ecx, 0x521a0001 ; salc ; jmp qword ptr [rbx]
0x00000000007f09f5 : mov ecx, 0x522 ; retf
0x0000000000630196 : mov ecx, 0x5c415d5b ; pop r13 ; pop r14 ; ret
0x000000000062511b : mov ecx, 0x5d003da7 ; ret
0x000000000064395c : mov ecx, 0x8348ffff ; cli ; or cl, byte ptr [rax - 0x77] ; ret
0x0000000000589b75 : mov ecx, 0x89000f79 ; ret
0x0000000000575e75 : mov ecx, 0x890010b6 ; ret
0x0000000000450483 : mov ecx, 0x8900270d ; ret 0x8b48
0x0000000000655175 : mov ecx, 0x89480002 ; ret
0x000000000067abb9 : mov ecx, 0x89480002 ; ret 0xc148
0x0000000000635139 : mov ecx, 0x89480004 ; ret
0x0000000000642bfc : mov ecx, 0x89480007 ; ret
0x00000000005b515c : mov ecx, 0x8948000c ; ret
0x00000000005759d2 : mov ecx, 0x89480010 ; ret
0x0000000000554175 : mov ecx, 0x89480012 ; ret
0x0000000000544d17 : mov ecx, 0x89480017 ; ret
0x0000000000504d20 : mov ecx, 0x8948001b ; ret
0x00000000004bf3c3 : mov ecx, 0x8948001c ; ret
0x000000000041f3c3 : mov ecx, 0x89480026 ; ret
0x0000000000679786 : mov ecx, 0x89489aeb ; ret
0x0000000000554746 : mov ecx, 0x8948b7eb ; ret
0x000000000046816b : mov ecx, 0x8b005951 ; add al, 0x89 ; ret 0x458b
0x00000000006d68ae : mov ecx, 0x8f9b589e ; xlatb ; pop rdx ; ret 0x44fd
0x00000000007f45da : mov ecx, 0xa00501f0 ; int1 ; add dword ptr [rax], eax ; ret
0x00000000007b704d : mov ecx, 0xb2200006 ; out dx, eax ; call qword ptr [rdi]
0x0000000000605ccf : mov ecx, 0xbe0007ae ; retf 1
0x00000000006251c1 : mov ecx, 0xc9900005 ; ret
0x0000000000413d63 : mov ecx, 0xc9ffff82 ; ret
0x000000000045d3b1 : mov ecx, 0xc9ffffaf ; ret
0x000000000049e185 : mov ecx, 0xc9ffffc2 ; ret
0x0000000000757125 : mov ecx, 0xca820000 ; iretd ; call rsp
0x00000000007f478a : mov ecx, 0xdb0501fb ; cld ; add dword ptr [rax], eax ; ret
0x00000000006b07d3 : mov ecx, 0xe9ffffd3 ; ret 0xfffa
0x00000000007fa7f2 : mov ecx, 0xf8050190 ; nop ; add dword ptr [rax], eax ; ret
0x00000000006d2ea2 : mov ecx, 0xfc0c7 ; add byte ptr [rax], al ; syscall
0x0000000000471b23 : mov ecx, 0xff00590d ; ror cl, 1 ; ret
0x000000000040eb23 : mov ecx, 0xff005f3d ; ror cl, 1 ; ret
0x00000000007d0d59 : mov ecx, 0xffb050f ; add bl, al ; syscall
0x000000000044f460 : mov ecx, 1 ; call rax
0x000000000066cf43 : mov ecx, dword ptr [rax + 0x28] ; mov qword ptr [rcx + 0x20], r8 ; ret
0x00000000006c8569 : mov ecx, dword ptr [rax + 0x48] ; add esp, 0x30 ; pop rbx ; ret
0x00000000006895ae : mov ecx, dword ptr [rax + 8] ; test ecx, ecx ; setle al ; ret
0x00000000005f5d14 : mov ecx, dword ptr [rax + rax] ; leave ; ret
0x0000000000661824 : mov ecx, dword ptr [rax - 0x77000000] ; ret 0xf631
0x0000000000509a41 : mov ecx, dword ptr [rax - 0x77] ; ret
0x00000000004e8e29 : mov ecx, dword ptr [rbp - 0x768] ; call rax
0x000000000056d6cc : mov ecx, dword ptr [rbx + 7] ; nop ; call rcx
0x00000000005c7fec : mov ecx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040ed6c : mov ecx, dword ptr [rcx + 0x10] ; mov rdx, rcx ; nop ; pop rbp ; ret
0x000000000040d5f7 : mov ecx, dword ptr [rcx + 0x18] ; mov rdx, rcx ; nop ; leave ; ret
0x0000000000618bf6 : mov ecx, dword ptr [rcx + 0x18] ; mov rdx, rcx ; nop ; pop rbp ; ret
0x00000000004163b2 : mov ecx, dword ptr [rcx + 7] ; call rcx
0x000000000040d5b2 : mov ecx, dword ptr [rcx + 8] ; mov rdx, rcx ; nop ; pop rbp ; ret
0x00000000007e5ecb : mov ecx, dword ptr [rcx + rbx] ; add byte ptr [rax], al ; ret
0x00000000005e9f51 : mov ecx, dword ptr [rcx - 0x2f00ffbf] ; leave ; ret
0x00000000007d7381 : mov ecx, dword ptr [rdi] ; add eax, 0xa00009d1 ; syscall
0x00000000007d6b60 : mov ecx, dword ptr [rdi] ; add eax, 0xa1051289 ; syscall
0x00000000007efcf1 : mov ecx, dword ptr [rdi] ; add eax, 0xa2000fb9 ; syscall
0x00000000007cda8c : mov ecx, dword ptr [rdi] ; add eax, 0xa4000f90 ; syscall
0x00000000007dd0cb : mov ecx, dword ptr [rdi] ; add eax, 0xa5000fcb ; syscall
0x00000000006609d0 : mov ecx, dword ptr [rdx + 0x54] ; add rax, rcx ; ret
0x0000000000615acd : mov ecx, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000503c82 : mov ecx, dword ptr [rsi] ; cmp dword ptr [rsi + 4], ecx ; jge 0x503c97 ; ret
0x00000000006a96dc : mov ecx, eax ; jmp 0x6a96ae
0x00000000006aa6dc : mov ecx, eax ; jmp 0x6aa6ae
0x000000000054a2ba : mov ecx, eax ; jne 0x54a367 ; call rcx
0x00000000004e4ac7 : mov ecx, eax ; mov r8, r12 ; call r11
0x00000000004b41b3 : mov ecx, eax ; mov rbx, rdx ; mov eax, ecx ; pop rbx ; pop rbp ; ret
0x00000000004b193f : mov ecx, eax ; mov rcx, r11 ; mov r8, rbx ; call rax
0x00000000006bfdae : mov ecx, eax ; pop rbp ; pop r12 ; pop r13 ; jmp r8
0x00000000006c86e2 : mov ecx, eax ; rep movsq qword ptr [rdi], qword ptr [rsi] ; mov rax, rbx ; pop rbx ; ret
0x000000000051d9cf : mov ecx, ebp ; jne 0x51da0e ; call rcx
0x000000000051dbb6 : mov ecx, ebp ; jne 0x51dc04 ; call rcx
0x00000000005405ed : mov ecx, ebp ; jne 0x540627 ; call rcx
0x000000000054c648 : mov ecx, ebp ; jne 0x54c688 ; call rcx
0x0000000000589cf6 : mov ecx, ebp ; jne 0x589d44 ; call rcx
0x0000000000512e63 : mov ecx, ebx ; jne 0x512e87 ; mov rdi, r12 ; call rcx
0x00000000004b1942 : mov ecx, ebx ; mov r8, rbx ; call rax
0x00000000006c07d5 : mov ecx, ebx ; mov rdx, r15 ; mov rdi, r12 ; call rax
0x0000000000513210 : mov ecx, ebx ; mov rsi, r9 ; add rsp, 8 ; jmp rax
0x00000000005130b0 : mov ecx, ecx ; mov rsi, r8 ; add rsp, 8 ; jmp rax
0x000000000066d47a : mov ecx, ecx ; or rdx, rcx ; pop rbx ; pop r14 ; ret
0x00000000006c7043 : mov ecx, ecx ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000007354a5 : mov ecx, edi ; call qword ptr [rax]
0x000000000074ad2d : mov ecx, edi ; jmp qword ptr [rax]
0x0000000000736365 : mov ecx, edx ; jmp rax
0x000000000043db75 : mov ecx, edx ; mov eax, ecx ; nop ; leave ; ret
0x00000000004ecbe7 : mov ecx, edx ; mov rdx, r9 ; call rax
0x000000000066539f : mov ecx, esi ; jne 0x665354 ; pop rbx ; ret
0x00000000005c86c3 : mov ecx, esi ; mov rdi, qword ptr [rbp - 0x338] ; call rbx
0x000000000054809e : mov ecx, esi ; mov rsi, rbx ; call rax
0x00000000005a782b : mov ecx, esp ; call 0x6c3b14
0x000000000050762a : mov ecx, esp ; jne 0x5076aa ; mov rsi, rsp ; call rcx
0x000000000051df4f : mov ecx, esp ; jne 0x51dfbf ; mov rsi, rsp ; call rcx
0x00000000005646ae : mov ecx, esp ; jne 0x56471d ; mov rsi, rsp ; call rcx
0x0000000000589b6b : mov ecx, esp ; jne 0x589bbc ; call rcx
0x000000000058a03b : mov ecx, esp ; jne 0x58a0bb ; mov rsi, rsp ; call rcx
0x0000000000555a80 : mov ecx, esp ; lea rsi, qword ptr [rsp + 0x10] ; call rax
0x00000000005a783b : mov ecx, esp ; mov rdi, rbp ; call 0x6c3b17
0x0000000000675fd9 : mov ecx, esp ; mov rdx, rbx ; call rax
0x00000000007aa094 : mov ecx, gs ; add eax, 0xecc20800 ; call qword ptr [rcx]
0x00000000005a782a : mov ecx, r12d ; call 0x6c3b15
0x00000000005a783a : mov ecx, r12d ; mov rdi, rbp ; call 0x6c3b18
0x00000000004f28e8 : mov edi, 0 ; call 0x6bebe7
0x000000000043232d : mov edi, 0x10 ; call 0x6be5d7
0x00000000004c2381 : mov edi, 0x18 ; call 0x6be5d7
0x0000000000582341 : mov edi, 0x20 ; call 0x6be5d7
0x0000000000736505 : mov edi, 0x20f0ffd1 ; add al, byte ptr [rax] ; ret 0xd1bf
0x00000000007450e1 : mov edi, 0x26a00006 ; out dx, eax ; jmp qword ptr [rax]
0x0000000000745119 : mov edi, 0x27900006 ; out dx, eax ; jmp rax
0x00000000005639d6 : mov edi, 0x29480012 ; ret
0x00000000004a39cc : mov edi, 0x2948001e ; ret
0x00000000006a79a8 : mov edi, 0x3948ffd5 ; ret
0x000000000060740c : mov edi, 0x3d ; call rax
0x00000000006d75c1 : mov edi, 0x40 ; add byte ptr [rax], al ; retf 0x40bf
0x00000000004f3b34 : mov edi, 0x40bf0019 ; retf 0x6d
0x0000000000503b2b : mov edi, 0x48000000 ; mov edi, ebx ; call rax
0x00000000006a0dfd : mov edi, 0x4800361a ; add esp, 8 ; jmp rax
0x00000000005bf435 : mov edi, 0x4ea ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x8441
0x00000000007d3029 : mov edi, 0x5730003 ; stosd dword ptr [rdi], eax ; add eax, dword ptr [rax] ; ret
0x000000000040857d : mov edi, 0x5b002cc1 ; pop rbp ; pop r12 ; ret
0x0000000000536e74 : mov edi, 0x5c60072 ; retf 0x4cd2
0x0000000000737215 : mov edi, 0x5cd8ffd2 ; add al, byte ptr [rax] ; ret 0xffd2
0x000000000040874f : mov edi, 0x5d5b002c ; pop r12 ; ret
0x000000000079767d : mov edi, 0x66f20004 ; in eax, -1 ; ret 1
0x00000000004f50b6 : mov edi, 0x6edc60 ; xor eax, eax ; call 0x681303
0x0000000000404062 : mov edi, 0x6ee43e ; xor eax, eax ; call 0x680acd
0x000000000040410e : mov edi, 0x6f1673 ; xor eax, eax ; call 0x680bbd
0x000000000051501d : mov edi, 0x6f2040 ; xor eax, eax ; call 0x681303
0x0000000000404120 : mov edi, 0x6f206c ; xor eax, eax ; call 0x680b95
0x0000000000534072 : mov edi, 0x6f305c ; xor eax, eax ; call 0x680af5
0x0000000000535023 : mov edi, 0x6f305c ; xor eax, eax ; call 0x681303
0x0000000000535008 : mov edi, 0x6f3b9e ; xor eax, eax ; call 0x681303
0x00000000004048b2 : mov edi, 0x6f9800 ; xor eax, eax ; call 0x681303
0x000000000040481b : mov edi, 0x6f9840 ; xor eax, eax ; call 0x681303
0x0000000000545060 : mov edi, 0x6faa64 ; xor eax, eax ; call 0x681303
0x00000000005547d4 : mov edi, 0x6fc5f9 ; xor eax, eax ; call 0x680acd
0x0000000000565048 : mov edi, 0x7024a4 ; xor eax, eax ; call 0x681303
0x0000000000405001 : mov edi, 0x704680 ; xor eax, eax ; call 0x681303
0x00000000005a4848 : mov edi, 0x70d6e8 ; call 0x680acb
0x00000000005a4814 : mov edi, 0x70d6e8 ; xor eax, eax ; call 0x680acd
0x00000000005a4827 : mov edi, 0x70d6e8 ; xor eax, eax ; call 0x680b31
0x00000000005b4807 : mov edi, 0x7121f0 ; xor eax, eax ; call 0x680af5
0x00000000005b4ffd : mov edi, 0x7121f0 ; xor eax, eax ; call 0x681303
0x00000000005c416c : mov edi, 0x71238c ; xor eax, eax ; call 0x680b95
0x00000000005c488d : mov edi, 0x7127d0 ; xor eax, eax ; call 0x680b95
0x0000000000604140 : mov edi, 0x717f12 ; xor eax, eax ; call 0x680b95
0x000000000060485f : mov edi, 0x717f12 ; xor eax, eax ; call 0x681303
0x0000000000634045 : mov edi, 0x71dd68 ; call 0x680acb
0x0000000000634024 : mov edi, 0x71dd68 ; xor eax, eax ; call 0x680acd
0x0000000000644127 : mov edi, 0x71e926 ; xor eax, eax ; call 0x680b45
0x000000000064502b : mov edi, 0x71e926 ; xor eax, eax ; call 0x681303
0x0000000000644090 : mov edi, 0x71e9d0 ; xor eax, eax ; call 0x680af5
0x000000000055bf9d : mov edi, 0x728b80 ; call 0x6881f7
0x00000000006b507c : mov edi, 0x72d5ac ; xor eax, eax ; call 0x681303
0x00000000006c4861 : mov edi, 0x731188 ; xor eax, eax ; call 0x680b1d
0x000000000051f513 : mov edi, 0x83480045 ; ret
0x000000000052660c : mov edi, 0x83480055 ; ret 0x4814
0x00000000005268c4 : mov edi, 0x83482414 ; ret 0x4c14
0x00000000006a7c14 : mov edi, 0x8348ffd5 ; clc ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0x8548
0x0000000000699a8e : mov edi, 0x8348ffff ; cli ; xor ecx, dword ptr [rax - 0x77] ; ret
0x0000000000737a05 : mov edi, 0x8380ffd3 ; add al, byte ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffd3
0x0000000000407b6f : mov edi, 0x88002799 ; ret
0x0000000000406d6f : mov edi, 0x880027a7 ; ret
0x000000000062696f : mov edi, 0x890005ab ; ret
0x000000000060356f : mov edi, 0x890007df ; ret
0x00000000005b986f : mov edi, 0x89000c7c ; ret
0x00000000005b546f : mov edi, 0x89000cc0 ; ret
0x00000000006453d4 : mov edi, 0x89480003 ; ret
0x0000000000635312 : mov edi, 0x89480004 ; ret
0x000000000060edc9 : mov edi, 0x89480007 ; ret
0x0000000000628832 : mov edi, 0x8948000a ; ret
0x00000000005eca7f : mov edi, 0x8948000b ; ret 0x8949
0x0000000000593b94 : mov edi, 0x8948000e ; ret
0x000000000057eda9 : mov edi, 0x89480010 ; ret
0x00000000005a87ce : mov edi, 0x89480012 ; ret
0x000000000053e85f : mov edi, 0x89480016 ; ret
0x000000000049e8c8 : mov edi, 0x89480020 ; ret
0x000000000065bdc5 : mov edi, 0x8948ffda ; ret
0x000000000058915d : mov edi, 0x8948ffe7 ; ret
0x00000000007e8a0d : mov edi, 0x9fc0011 ; retf 0x12
0x0000000000674411 : mov edi, 0xa029c0 ; call 0x68066d
0x0000000000523b95 : mov edi, 0xa02a40 ; call 0x68066d
0x0000000000408a70 : mov edi, 0xa02ca8 ; jmp rax
0x000000000041b2c7 : mov edi, 0xa02ec0 ; call 0x6a7db7
0x000000000052c685 : mov edi, 0xa03e00 ; call rax
0x000000000062571d : mov edi, 0xa087e0 ; call 0x6819f7
0x0000000000554456 : mov edi, 0xa0a2c8 ; call 0x6c06d7
0x00000000006cb2c9 : mov edi, 0xa0d280 ; call 0x6a7da7
0x00000000006cb2d9 : mov edi, 0xa0d280 ; jmp 0x6a7db7
0x0000000000748089 : mov edi, 0xaf900007 ; cmc ; call rax
0x00000000005c2376 : mov edi, 0xb0 ; call 0x6be5d7
0x000000000052115a : mov edi, 0xb70f005d ; add dword ptr [rsi + 0x39], esp ; ret
0x00000000004ad42a : mov edi, 0xb8006e ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000004aa21d : mov edi, 0xb8006e ; add byte ptr [rax], al ; add al, ch ; ret 0x1d68
0x00000000004a41e5 : mov edi, 0xb8006e ; add byte ptr [rax], al ; add al, ch ; ret 0x1dc9
0x00000000004af3b4 : mov edi, 0xb8006e ; add byte ptr [rax], al ; add al, ch ; retf
0x00000000004af7dd : mov edi, 0xb8006e ; add byte ptr [rax], al ; add al, ch ; retf 0x1d13
0x00000000007b766d : mov edi, 0xbba00006 ; out dx, eax ; jmp rsi
0x00000000007b773d : mov edi, 0xbcf00006 ; out dx, eax ; call rax
0x00000000005517dc : mov edi, 0xbe000003 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x00000000005534c2 : mov edi, 0xbefffff3 ; ret 0
0x00000000006be452 : mov edi, 0xbf0f4806 ; ror byte ptr [rax - 0x7d], cl ; ret 0x4803
0x00000000004e1b80 : mov edi, 0xc ; call 0x6be5d7
0x00000000006276a9 : mov edi, 0xc0310071 ; add rsp, 8 ; ret
0x00000000004f3b48 : mov edi, 0xc0bf0019 ; retf
0x00000000006be456 : mov edi, 0xc28348d2 ; add ecx, dword ptr [rax + 0x29] ; ret 0xb60f
0x00000000006b6d8a : mov edi, 0xc28348d5 ; add dword ptr [rax + 0x29], ecx ; ret 0x37e9
0x000000000066b84a : mov edi, 0xc89 ; add byte ptr [rbp + 6], dh ; ret
0x0000000000676531 : mov edi, 0xc8a ; add byte ptr [rbp + 7], dh ; ret
0x000000000041d1dd : mov edi, 0xc9002a37 ; ret
0x0000000000453393 : mov edi, 0xc9fffe7c ; ret
0x00000000006802ad : mov edi, 0xe4 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc085
0x00000000005ebf8f : mov edi, 0xeb00093b ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000076772d : mov edi, 0xf57c0001 ; salc ; jmp qword ptr [rax]
0x00000000007cb52d : mov edi, 0xfeb050f ; add bl, bl ; syscall
0x0000000000452e1d : mov edi, 0xff005afa ; ror cl, 1 ; ret
0x000000000043281d : mov edi, 0xff005d00 ; ror cl, 1 ; ret
0x0000000000413c1d : mov edi, 0xff005eec ; ror cl, 1 ; ret
0x00000000006d400a : mov edi, 1 ; call r14
0x00000000006d3f5c : mov edi, 1 ; call rax
0x000000000069a1d8 : mov edi, 1 ; jmp 0x696c4a
0x000000000069ac51 : mov edi, 1 ; jmp 0x697759
0x00000000006d48ec : mov edi, 1 ; jmp rax
0x00000000006b1296 : mov edi, dword ptr [r12 + 0x2c] ; call 0x6adce7
0x0000000000639d33 : mov edi, dword ptr [rax + rax] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000595852 : mov edi, dword ptr [rbp + 0x20] ; call 0x6a1a95
0x000000000068d890 : mov edi, dword ptr [rbp + 8] ; call 0x689ad5
0x00000000004e6055 : mov edi, dword ptr [rbp - 0x108] ; call r11
0x00000000005c9994 : mov edi, dword ptr [rbp - 0x128] ; call rax
0x00000000005baac9 : mov edi, dword ptr [rbp - 0x13b0] ; call rax
0x000000000063bb15 : mov edi, dword ptr [rbp - 0x1a8] ; call rax
0x00000000006554b3 : mov edi, dword ptr [rbp - 0x278] ; call rax
0x00000000005c880e : mov edi, dword ptr [rbp - 0x338] ; call rax
0x00000000005c86c6 : mov edi, dword ptr [rbp - 0x338] ; call rbx
0x000000000054940a : mov edi, dword ptr [rbp - 0x368] ; call rax
0x000000000052c91e : mov edi, dword ptr [rbp - 0x390] ; call rax
0x0000000000531326 : mov edi, dword ptr [rbp - 0x3c0] ; call 0x53ddf8
0x0000000000553525 : mov edi, dword ptr [rbp - 0x3c8] ; call rax
0x0000000000553800 : mov edi, dword ptr [rbp - 0x458] ; call rax
0x000000000051135b : mov edi, dword ptr [rbp - 0x48] ; call rax
0x000000000053384a : mov edi, dword ptr [rbp - 0x88] ; call rax
0x0000000000601e1b : mov edi, dword ptr [rbp - 0x98] ; call 0x6be8b8
0x000000000064a55c : mov edi, dword ptr [rbp - 0xa0] ; call rax
0x00000000006498bc : mov edi, dword ptr [rbp - 0xa8] ; call rax
0x0000000000653134 : mov edi, dword ptr [rbp - 0xc0] ; call rax
0x00000000006d45a9 : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x0000000000595819 : mov edi, dword ptr [rbx + 0x20] ; call 0x6a1a95
0x0000000000660443 : mov edi, dword ptr [rbx + 0x50] ; mov rsi, rax ; call rdx
0x00000000006913b9 : mov edi, dword ptr [rbx + 8] ; call 0x6cde65
0x00000000006281d7 : mov edi, dword ptr [rcx + 5] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000660435 : mov edi, dword ptr [rdi + 0x50] ; call rdx
0x00000000006a696b : mov edi, dword ptr [rdi + 8] ; xor esi, esi ; call 0x403447
0x000000000066078d : mov edi, dword ptr [rsi + 0x50] ; mov esi, 1 ; call rax
0x0000000000653dba : mov edi, dword ptr [rsi] ; jne 0x6557f1 ; call rax
0x00000000005438a3 : mov edi, dword ptr [rsp + 0x10] ; xor eax, eax ; call 0x67fb58
0x00000000005438af : mov edi, dword ptr [rsp + 0x10] ; xor eax, eax ; call 0x67fb5a
0x00000000005349a3 : mov edi, dword ptr [rsp + 0x18] ; call rax
0x00000000006b1297 : mov edi, dword ptr [rsp + 0x2c] ; call 0x6adce6
0x00000000005351a8 : mov edi, dword ptr [rsp + 0x38] ; call rax
0x000000000065cf41 : mov edi, dword ptr [rsp + 8] ; call rax
0x000000000050b6b2 : mov edi, dword ptr [rsp + 8] ; mov rsi, r14 ; call 0x687959
0x0000000000476edc : mov edi, eax ; call 0x4038f4
0x000000000065baff : mov edi, eax ; call 0x407d34
0x0000000000416bd3 : mov edi, eax ; call 0x412e9c
0x000000000043ecf0 : mov edi, eax ; call 0x43af00
0x0000000000440b2d : mov edi, eax ; call 0x43d580
0x00000000004417ef : mov edi, eax ; call 0x43da4c
0x0000000000443aea : mov edi, eax ; call 0x44056e
0x000000000045aac5 : mov edi, eax ; call 0x457514
0x00000000004640de : mov edi, eax ; call 0x4603ca
0x00000000004b9611 : mov edi, eax ; call 0x4660c6
0x000000000046ddde : mov edi, eax ; call 0x46a0ca
0x000000000047b881 : mov edi, eax ; call 0x47837a
0x000000000047c749 : mov edi, eax ; call 0x4791e4
0x000000000049e182 : mov edi, eax ; call 0x49a446
0x00000000004a3721 : mov edi, eax ; call 0x4a0192
0x00000000004a37bd : mov edi, eax ; call 0x4a021e
0x000000000045925a : mov edi, eax ; call 0x4b5ca2
0x0000000000459d78 : mov edi, eax ; call 0x4b67d0
0x00000000004ed710 : mov edi, eax ; call 0x4b99a6
0x00000000004ecfd2 : mov edi, eax ; call 0x4b9a5a
0x000000000048fcc8 : mov edi, eax ; call 0x4bbf0e
0x000000000048ffc8 : mov edi, eax ; call 0x4bc1fc
0x00000000004aa364 : mov edi, eax ; call 0x4f6dc4
0x00000000005e025f : mov edi, eax ; call 0x5ccc88
0x00000000005f4fbc : mov edi, eax ; call 0x5e12c4
0x00000000005ea5dc : mov edi, eax ; call 0x5e70c0
0x000000000043c2bc : mov edi, eax ; call 0x678d74
0x00000000004b56b8 : mov edi, eax ; call 0x6819b4
0x00000000004b56fa : mov edi, eax ; call 0x6819c4
0x0000000000454f80 : mov edi, eax ; call 0x6819f4
0x0000000000414fc6 : mov edi, eax ; call 0x681a34
0x00000000004bd699 : mov edi, eax ; call 0x689914
0x00000000004bd4e6 : mov edi, eax ; call 0x689fb4
0x00000000005d37f8 : mov edi, eax ; call 0x68fa44
0x0000000000495083 : mov edi, eax ; call 0x6a1a94
0x0000000000455076 : mov edi, eax ; call 0x6c1374
0x00000000004184c1 : mov edi, eax ; call 0x6d4744
0x0000000000695e8e : mov edi, eax ; call qword ptr [rip + 0x36ca52]
0x00000000005b5e65 : mov edi, eax ; call qword ptr [rip + 0x44ca7b]
0x000000000051aa3f : mov edi, eax ; call rdx
0x00000000005584d2 : mov edi, eax ; je 0x558501 ; call 0x6d4746
0x0000000000567c5b : mov edi, eax ; je 0x567c7f ; call 0x6d4746
0x0000000000567c6c : mov edi, eax ; je 0x567c97 ; call 0x6d4746
0x0000000000567cf9 : mov edi, eax ; je 0x567d3f ; call 0x6d4746
0x0000000000567d30 : mov edi, eax ; je 0x567d5a ; call 0x6d4746
0x0000000000627c71 : mov edi, eax ; je 0x627c9e ; call 0x6d4746
0x000000000052309f : mov edi, eax ; jne 0x5230f2 ; xor eax, eax ; call 0x67fb58
0x00000000005438d3 : mov edi, eax ; jne 0x54389d ; xor eax, eax ; call 0x67fb58
0x00000000005730c1 : mov edi, eax ; jne 0x573105 ; xor eax, eax ; call 0x67fb58
0x0000000000573935 : mov edi, eax ; jne 0x573993 ; xor eax, eax ; call 0x67fb58
0x0000000000593899 : mov edi, eax ; jne 0x5938f3 ; xor eax, eax ; call 0x67fb58
0x00000000006a3071 : mov edi, eax ; jne 0x6a30dc ; xor eax, eax ; call 0x67fb58
0x00000000004238b6 : mov edi, eax ; mov eax, 0 ; call 0x67fb59
0x00000000004238d2 : mov edi, eax ; mov eax, 0 ; call 0x67fb5b
0x0000000000433940 : mov edi, eax ; mov eax, 0 ; call 0x67fb6f
0x000000000046e5ea : mov edi, eax ; mov eax, 0 ; call 0x6aa8e9
0x00000000006330df : mov edi, eax ; mov esi, 2 ; call rcx
0x000000000067628f : mov edi, eax ; mov rax, rbx ; pop rbx ; jmp rax
0x00000000005584cf : mov edi, eax ; mov rdi, rax ; je 0x558504 ; call 0x6d4749
0x0000000000627c6e : mov edi, eax ; mov rdi, rax ; je 0x627ca1 ; call 0x6d4749
0x00000000005c38ca : mov edi, eax ; xor eax, eax ; call 0x67fb56
0x00000000006c71a3 : mov edi, ebp ; call 0x403c74
0x00000000005f8590 : mov edi, ebp ; call 0x674834
0x00000000006344d5 : mov edi, ebp ; call 0x6806e8
0x000000000068d851 : mov edi, ebp ; call 0x689b24
0x00000000005025e0 : mov edi, ebp ; call 0x6be8b4
0x0000000000672b21 : mov edi, ebp ; call 0x6bf554
0x00000000005a783e : mov edi, ebp ; call 0x6c3b14
0x00000000006b1d8c : mov edi, ebp ; call 0x6cdfd4
0x0000000000671628 : mov edi, ebp ; call 0x6ce0f4
0x0000000000578522 : mov edi, ebp ; call 0x6d4744
0x00000000005100ee : mov edi, ebp ; call r11
0x00000000006cd71a : mov edi, ebp ; call r14
0x000000000050b277 : mov edi, ebp ; call rax
0x00000000005115b9 : mov edi, ebp ; call rcx
0x00000000005101e9 : mov edi, ebp ; call rdx
0x000000000056cf44 : mov edi, ebp ; lea rsi, qword ptr [rbp - 0x100] ; call rax
0x000000000052bfd8 : mov edi, ebp ; mov ebx, 0 ; call rax
0x00000000005a7828 : mov edi, ebp ; mov ecx, r12d ; call 0x6c3b17
0x000000000055451c : mov edi, ebp ; mov esi, dword ptr [rsp + 0x24] ; call rax
0x0000000000502628 : mov edi, ebp ; mov rsi, rbx ; call 0x6be8b7
0x00000000005079e9 : mov edi, ebp ; mov rsi, rbx ; call rax
0x0000000000501dae : mov edi, ebp ; mov rsp, r14 ; call 0x6be8b7
0x0000000000543926 : mov edi, ebp ; xor eax, eax ; call 0x67fb58
0x00000000005c3948 : mov edi, ebp ; xor eax, eax ; call 0x67fb6c
0x00000000005b3106 : mov edi, ebp ; xor eax, eax ; mov r14, rdx ; call 0x67fb5b
0x000000000051a43b : mov edi, ebx ; add rbp, 0x2a1 ; call rax
0x000000000053e3a3 : mov edi, ebx ; add rbp, 8 ; call rax
0x000000000041e966 : mov edi, ebx ; call 0x41b394
0x00000000004fb6b1 : mov edi, ebx ; call 0x4f8194
0x000000000055b17a : mov edi, ebx ; call 0x557434
0x000000000063baf5 : mov edi, ebx ; call 0x5a8584
0x0000000000536146 : mov edi, ebx ; call 0x672404
0x00000000005730cf : mov edi, ebx ; call 0x67fb56
0x000000000057dcd5 : mov edi, ebx ; call 0x689fb4
0x0000000000518448 : mov edi, ebx ; call 0x6d4744
0x00000000004fdac4 : mov edi, ebx ; call r8
0x00000000004043bf : mov edi, ebx ; call rax
0x00000000006109cd : mov edi, ebx ; call rcx
0x000000000040a98b : mov edi, ebx ; call rdx
0x00000000005a84c2 : mov edi, ebx ; jne 0x5a848c ; call 0x6d4746
0x000000000053e456 : mov edi, ebx ; mov edx, 0x6fa4c0 ; call rax
0x00000000006c1de6 : mov edi, ebx ; mov edx, 0x730f50 ; call rax
0x00000000006c2b93 : mov edi, ebx ; mov edx, 0x730fe0 ; call rax
0x0000000000517bf9 : mov edi, ebx ; mov esi, 1 ; call rax
0x00000000005524e7 : mov edi, ebx ; mov esi, 2 ; call rax
0x00000000005498be : mov edi, ebx ; mov esi, 2 ; pop rbx ; pop rbp ; jmp rax
0x000000000062a7cb : mov edi, ebx ; mov r14, rax ; call 0x6272a7
0x0000000000525bf5 : mov edi, ebx ; mov rdx, rax ; mov rax, rdi ; pop rbx ; ret
0x00000000006c193f : mov edi, ebx ; mov rsi, r12 ; call rax
0x00000000004a143e : mov edi, ebx ; mov rsi, r9 ; call rax
0x00000000005ad0ab : mov edi, ebx ; mov rsi, rax ; call 0x5a9b37
0x0000000000491212 : mov edi, ebx ; mov rsi, rbx ; call r9
0x00000000005438df : mov edi, ebx ; xor eax, eax ; call 0x67fb58
0x00000000005c38e4 : mov edi, ebx ; xor eax, eax ; call 0x67fb6c
0x00000000006be67e : mov edi, ebx ; xor eax, eax ; mov rbx, rbp ; call 0x6aa8e9
0x00000000005d7a00 : mov edi, ecx ; call 0x403c74
0x000000000040a501 : mov edi, ecx ; call rax
0x000000000040aafc : mov edi, ecx ; call rdx
0x000000000074adc5 : mov edi, ecx ; jmp qword ptr [rax]
0x00000000007557b1 : mov edi, ecx ; jmp rsi
0x00000000005125e4 : mov edi, ecx ; mov qword ptr [rbp - 0x58], r9 ; call rax
0x00000000004a00c1 : mov edi, ecx ; mov rsi, r8 ; call rax
0x00000000004e8a46 : mov edi, ecx ; mov rsi, rax ; call 0x4554d3
0x00000000004e8a9c : mov edi, ecx ; mov rsi, rax ; call 0x455541
0x00000000004cb33e : mov edi, ecx ; mov rsi, rax ; call 0x6875d7
0x000000000042ea89 : mov edi, ecx ; mov rsi, rax ; call 0x68ad77
0x00000000006155ab : mov edi, ecx ; mov rsi, rax ; call 0x6a1897
0x00000000004a7862 : mov edi, ecx ; mov rsi, rax ; call 0x6c42c7
0x00000000004385b2 : mov edi, ecx ; mov rsi, rax ; call 0x6c5027
0x000000000044279f : mov edi, ecx ; mov rsi, rdx ; call rax
0x00000000004f7982 : mov edi, edi ; call 0x403c74
0x0000000000507c5e : mov edi, edi ; call 0x6d4744
0x00000000004e5dce : mov edi, edi ; call r11
0x000000000052b75b : mov edi, edi ; call rax
0x0000000000503d63 : mov edi, edi ; call rcx
0x0000000000551574 : mov edi, edi ; call rdx
0x0000000000599dc7 : mov edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004136bd : mov edi, edi ; dec ecx ; ret
0x000000000056ea3d : mov edi, edi ; lea rsi, qword ptr [rbp - 0x40] ; call rax
0x000000000054f4e0 : mov edi, edi ; mov ebx, 0 ; call rax
0x000000000052c367 : mov edi, edi ; mov esi, 1 ; call rax
0x00000000006c26e5 : mov edi, edi ; mov rsi, rbx ; call rax
0x00000000006c260f : mov edi, edi ; movsxd r13, r13d ; call rax
0x000000000047c7c1 : mov edi, edx ; call 0x4791e4
0x000000000040b107 : mov edi, edx ; call rax
0x0000000000768191 : mov edi, edx ; jmp qword ptr [rbx]
0x0000000000421feb : mov edi, edx ; mov rsi, rax ; call 0x41ea61
0x000000000043f3b0 : mov edi, edx ; mov rsi, rax ; call 0x43be3d
0x0000000000412633 : mov edi, edx ; mov rsi, rax ; call 0x6be8b7
0x00000000006c1c51 : mov edi, esi ; call r9
0x0000000000511b36 : mov edi, esi ; call rax
0x00000000006c1bc6 : mov edi, esi ; call rcx
0x00000000006516e8 : mov edi, esi ; call rdx
0x00000000005820be : mov edi, esi ; jmp rax
0x000000000052c2d7 : mov edi, esi ; mov ebx, 0 ; call rax
0x0000000000475b9f : mov edi, esi ; mov rsi, rax ; call 0x6a1e67
0x00000000006c70d9 : mov edi, esi ; mov rsi, rax ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000040e0f6 : mov edi, esi ; mov rsi, rcx ; call rax
0x00000000005b38e7 : mov edi, esi ; xor eax, eax ; mov rbx, rdx ; call 0x67fb5b
0x0000000000667816 : mov edi, esp ; call 0x403b04
0x0000000000516b59 : mov edi, esp ; call 0x512d74
0x0000000000575e87 : mov edi, esp ; call 0x572104
0x0000000000577f71 : mov edi, esp ; call 0x5741e4
0x000000000067d4e8 : mov edi, esp ; call 0x689fb4
0x00000000006cd617 : mov edi, esp ; call r14
0x00000000006d4944 : mov edi, esp ; call r15
0x00000000004fbf38 : mov edi, esp ; call rax
0x0000000000512e68 : mov edi, esp ; call rcx
0x000000000055464f : mov edi, esp ; call rdx
0x000000000059846e : mov edi, esp ; jne 0x5983fe ; call 0x6d4746
0x00000000005a79a1 : mov edi, esp ; mov dword ptr [r14 + 4], eax ; call 0x403c78
0x000000000062cef3 : mov edi, esp ; mov ebx, 0 ; call rax
0x000000000054f571 : mov edi, esp ; mov esi, 1 ; call rax
0x000000000055129a : mov edi, esp ; mov esi, dword ptr [rbp - 0xd8] ; call rax
0x00000000005ad464 : mov edi, esp ; mov r13, rbx ; call 0x5a9e97
0x00000000005938f4 : mov edi, esp ; xor eax, eax ; call 0x67fb58
0x00000000005b311e : mov edi, esp ; xor eax, eax ; mov r13, rdx ; call 0x67fb5b
0x0000000000502353 : mov edi, fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x4848
0x0000000000741aa5 : mov edi, fs ; call qword ptr [rax]
0x00000000007b6901 : mov edi, gs ; call rsi
0x00000000007455f5 : mov edi, gs ; jmp qword ptr [rax]
0x00000000007b6899 : mov edi, gs ; jmp qword ptr [rdx]
0x0000000000671627 : mov edi, r13d ; call 0x6ce0f5
0x0000000000606ba5 : mov edx, 0x12 ; ret
0x0000000000595d92 : mov edx, 0x13e9a8e8 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000596e15 : mov edx, 0x15ff0046 ; ret 0x46ba
0x0000000000663f8f : mov edx, 0x1730 ; call rax
0x000000000054e399 : mov edx, 0x1863a1e8 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005451ed : mov edx, 0x18f54de8 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007bfcb0 : mov edx, 0x1a40310 ; insb byte ptr [rdi], dx ; ret
0x000000000050aeb1 : mov edx, 0x1c9889e8 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000433eaf : mov edx, 0x29480025 ; ret
0x000000000072ad4a : mov edx, 0x32547698 ; adc al, dh ; loope 0x72ad2e ; ret
0x000000000072adca : mov edx, 0x32547698 ; adc al, dh ; loope 0x72adae ; ret
0x0000000000622f82 : mov edx, 0x48000b17 ; mov eax, dword ptr [rbp - 0x48] ; leave ; ret
0x00000000006a7d22 : mov edx, 0x480035ab ; mov edi, ebx ; call 0x6d4749
0x00000000007f7e31 : mov edx, 0x501 ; ret 0x501
0x00000000007d54fa : mov edx, 0x502 ; retf 0x502
0x00000000006772ba : mov edx, 0x539f0000 ; retf 0x7cee
0x000000000063a682 : mov edx, 0x580009a0 ; pop rbx ; pop rbp ; ret
0x000000000063a282 : mov edx, 0x580009a4 ; pop rbx ; pop rbp ; ret
0x00000000005ae576 : mov edx, 0x5d5b000d ; pop r12 ; ret
0x00000000004fdabe : mov edx, 0x6ede40 ; mov rdi, rbx ; call r8
0x00000000004f8493 : mov edx, 0x6ede40 ; mov rdi, rbx ; call rax
0x00000000004f84c3 : mov edx, 0x6ede50 ; mov rdi, rbx ; call rax
0x00000000004fa306 : mov edx, 0x6edea0 ; call rax
0x0000000000503d5d : mov edx, 0x6ee560 ; mov rdi, r15 ; call rcx
0x00000000005055aa : mov edx, 0x6ef020 ; call rax
0x000000000050b0f8 : mov edx, 0x6ef540 ; mov rdi, r12 ; call rax
0x0000000000506e07 : mov edx, 0x6ef540 ; mov rdi, rbx ; call rax
0x000000000050b0c0 : mov edx, 0x6ef550 ; mov rdi, r12 ; call rax
0x000000000050704b : mov edx, 0x6ef550 ; mov rdi, rbx ; call rax
0x000000000050b271 : mov edx, 0x6ef560 ; mov rdi, rbp ; call rax
0x0000000000507069 : mov edx, 0x6ef560 ; mov rdi, rbx ; call rax
0x000000000050f668 : mov edx, 0x6f1980 ; call rax
0x000000000050f767 : mov edx, 0x6f1990 ; mov rdi, rbx ; call rax
0x00000000005100e8 : mov edx, 0x6f1a40 ; mov rdi, r13 ; call r11
0x0000000000513e5c : mov edx, 0x6f2110 ; mov rdi, rbx ; call rax
0x0000000000513f20 : mov edx, 0x6f2120 ; mov rdi, rbx ; call rax
0x0000000000513fd5 : mov edx, 0x6f2130 ; mov rdi, rbx ; call rax
0x000000000052ea01 : mov edx, 0x6f2680 ; mov rdi, r14 ; call rax
0x0000000000521618 : mov edx, 0x6f2680 ; mov rdi, rbx ; call rax
0x000000000052543f : mov edx, 0x6f2690 ; mov rdi, r14 ; call rax
0x00000000005184a8 : mov edx, 0x6f2690 ; mov rdi, rbp ; call rax
0x0000000000518b07 : mov edx, 0x6f2690 ; mov rdi, rbx ; call rax
0x00000000005184ff : mov edx, 0x6f26a0 ; call rax
0x0000000000525333 : mov edx, 0x6f26a0 ; mov rdi, r14 ; call rax
0x000000000052a730 : mov edx, 0x6f26a0 ; mov rdi, rbp ; call rax
0x00000000005195cc : mov edx, 0x6f26a0 ; mov rdi, rbx ; call rax
0x000000000051a3d1 : mov edx, 0x6f3090 ; mov rdi, rbx ; call rax
0x0000000000521647 : mov edx, 0x6f4510 ; mov rdi, rbx ; call rax
0x000000000052981d : mov edx, 0x6f54a0 ; mov rdi, rbx ; call rax
0x0000000000529bb2 : mov edx, 0x6f54b0 ; mov rdi, rbx ; call rax
0x00000000005362b7 : mov edx, 0x6f6254 ; mov rdi, rbx ; call rax
0x0000000000538350 : mov edx, 0x6f9200 ; mov rdi, rbx ; call rax
0x0000000000538397 : mov edx, 0x6f92f0 ; mov rdi, rbx ; call rax
0x0000000000538d13 : mov edx, 0x6f9560 ; call rax
0x000000000053a071 : mov edx, 0x6f9830 ; mov rdi, rbp ; call rax
0x000000000053b217 : mov edx, 0x6f9cb0 ; mov rdi, rbx ; call rax
0x000000000053b69f : mov edx, 0x6f9d30 ; mov rdi, rbp ; call rcx
0x000000000053b3bb : mov edx, 0x6f9d30 ; mov rdi, rbx ; call rax
0x000000000053e458 : mov edx, 0x6fa4c0 ; call rax
0x000000000053eba7 : mov edx, 0x6fa4c0 ; mov rdi, r14 ; call rax
0x000000000053e9fe : mov edx, 0x6fa4c0 ; mov rdi, r15 ; call rax
0x000000000053e305 : mov edx, 0x6fa4c0 ; mov rdi, rbx ; call rax
0x000000000053ea83 : mov edx, 0x6fa4d0 ; mov rdi, r15 ; call rax
0x000000000053e37d : mov edx, 0x6fa4d0 ; mov rdi, rbx ; call rax
0x000000000053f51f : mov edx, 0x6fa720 ; call rax
0x0000000000545fc4 : mov edx, 0x6fa720 ; mov rdi, r12 ; call rax
0x000000000053f4b4 : mov edx, 0x6fa720 ; mov rdi, rbp ; call rax
0x000000000053f415 : mov edx, 0x6fa720 ; mov rdi, rbx ; call rax
0x000000000053f435 : mov edx, 0x6fa730 ; mov rdi, rbx ; call rax
0x000000000054c0cd : mov edx, 0x6fc5c0 ; mov rdi, r12 ; call rax
0x000000000054c130 : mov edx, 0x6fc5d0 ; mov rdi, r12 ; call rax
0x000000000054a0e6 : mov edx, 0x6fc5d0 ; mov rdi, rbp ; call rax
0x000000000054a5b7 : mov edx, 0x6fc5d0 ; mov rdi, rbx ; call rax
0x0000000000552c84 : mov edx, 0x6fd570 ; call rax
0x0000000000555087 : mov edx, 0x6fe640 ; mov rdi, rbx ; call rax
0x00000000005552cb : mov edx, 0x6fe650 ; mov rdi, rbx ; call rax
0x0000000000557fb1 : mov edx, 0x6fe660 ; mov rdi, rbp ; call rax
0x00000000005552e9 : mov edx, 0x6fe660 ; mov rdi, rbx ; call rax
0x000000000056305f : mov edx, 0x701f80 ; call rax
0x000000000056a843 : mov edx, 0x701f80 ; mov rdi, r14 ; call rax
0x0000000000563006 : mov edx, 0x701f80 ; mov rdi, rbp ; call rax
0x0000000000563a8c : mov edx, 0x701f80 ; mov rdi, rbx ; call rax
0x00000000005630c7 : mov edx, 0x701f90 ; mov rdi, rbx ; call rax
0x0000000000577adc : mov edx, 0x704400 ; mov rdi, r12 ; call rax
0x000000000056f873 : mov edx, 0x704400 ; mov rdi, r13 ; call rax
0x000000000056f9a7 : mov edx, 0x704410 ; mov rdi, rbx ; call rax
0x00000000005816b7 : mov edx, 0x706a00 ; mov rdi, rbx ; call rax
0x0000000000581dd7 : mov edx, 0x706d00 ; mov rdi, rbx ; call rax
0x00000000005874ef : mov edx, 0x7070c0 ; call rax
0x000000000058871b : mov edx, 0x7070c0 ; mov rdi, r12 ; call rax
0x0000000000594e16 : mov edx, 0x7070c0 ; mov rdi, r15 ; call rax
0x0000000000584064 : mov edx, 0x7070c0 ; mov rdi, rbp ; call rax
0x0000000000584dfc : mov edx, 0x7070c0 ; mov rdi, rbx ; call rax
0x0000000000584667 : mov edx, 0x7070d0 ; mov rdi, rbx ; call rax
0x0000000000588795 : mov edx, 0x708140 ; mov rdi, r12 ; call rax
0x0000000000595550 : mov edx, 0x708140 ; mov rdi, rbp ; call rax
0x00000000005862de : mov edx, 0x708140 ; mov rdi, rbx ; call rax
0x000000000059bd47 : mov edx, 0x70d6c0 ; mov rdi, rbx ; call rax
0x00000000005a2184 : mov edx, 0x70e700 ; mov rdi, r12 ; call rax
0x00000000005a1fc8 : mov edx, 0x70e700 ; mov rdi, rbp ; call rcx
0x00000000005a21f6 : mov edx, 0x70e710 ; mov rdi, r12 ; call rax
0x00000000005a2027 : mov edx, 0x70e710 ; mov rdi, rbp ; call rax
0x00000000005a7107 : mov edx, 0x70fa40 ; mov rdi, rbx ; call rax
0x00000000005a788f : mov edx, 0x70fa50 ; call rax
0x00000000005ad103 : mov edx, 0x70fa50 ; mov rdi, r15 ; call rax
0x00000000005a73bc : mov edx, 0x70fa50 ; mov rdi, rbx ; call rax
0x00000000005fc5f1 : mov edx, 0x717660 ; call 0x6a9097
0x000000000060708f : mov edx, 0x718060 ; mov rdi, r14 ; call rax
0x000000000062a560 : mov edx, 0x71bbc0 ; mov rdi, r12 ; call rax
0x0000000000625f17 : mov edx, 0x71bbc0 ; mov rdi, rbx ; call rax
0x0000000000625fab : mov edx, 0x71bbd0 ; mov rdi, rbx ; call rax
0x000000000062a6f1 : mov edx, 0x71bbe0 ; mov rdi, rbp ; call rax
0x0000000000625fc9 : mov edx, 0x71bbe0 ; mov rdi, rbx ; call rax
0x00000000006568c4 : mov edx, 0x71f280 ; call rax
0x0000000000659097 : mov edx, 0x71f940 ; mov rdi, rbx ; call rax
0x000000000065c117 : mov edx, 0x71fe90 ; mov rdi, rbx ; call rax
0x0000000000678e27 : mov edx, 0x726af0 ; mov rdi, rbx ; call rax
0x0000000000689047 : mov edx, 0x7291f0 ; mov rdi, rbx ; call rax
0x00000000006af5e2 : mov edx, 0x72cd78 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006b37a7 : mov edx, 0x72d510 ; mov rdi, rbx ; call rax
0x00000000006c0d01 : mov edx, 0x730d00 ; call rax
0x00000000006c0d51 : mov edx, 0x730d30 ; call rax
0x00000000006c0da3 : mov edx, 0x730d50 ; call rax
0x00000000006c0e41 : mov edx, 0x730d80 ; call rax
0x00000000006c1111 : mov edx, 0x730e20 ; call rax
0x00000000006c1bc0 : mov edx, 0x730f20 ; mov rdi, r14 ; call rcx
0x00000000006c2555 : mov edx, 0x730f20 ; mov rdi, r15 ; call rax
0x00000000006c22e3 : mov edx, 0x730f20 ; mov rdi, rbp ; call rax
0x00000000006c1795 : mov edx, 0x730f20 ; mov rdi, rbx ; call rax
0x00000000006c1c4b : mov edx, 0x730f30 ; mov rdi, r14 ; call r9
0x00000000006c29ef : mov edx, 0x730f30 ; mov rdi, r15 ; call rax
0x00000000006c237b : mov edx, 0x730f30 ; mov rdi, rbp ; call rcx
0x00000000006c1869 : mov edx, 0x730f30 ; mov rdi, rbx ; call rax
0x00000000006c1de8 : mov edx, 0x730f50 ; call rax
0x00000000006c1a35 : mov edx, 0x730f50 ; mov rdi, r13 ; call rax
0x00000000006c1dc4 : mov edx, 0x730f50 ; mov rdi, rbx ; call rax
0x00000000006c2b95 : mov edx, 0x730fe0 ; call rax
0x00000000006c27e5 : mov edx, 0x730fe0 ; mov rdi, r13 ; call rax
0x00000000006c374e : mov edx, 0x730fe0 ; mov rdi, r15 ; call rax
0x00000000006c2b72 : mov edx, 0x730fe0 ; mov rdi, rbx ; call rax
0x00000000006c3080 : mov edx, 0x731040 ; mov rdi, r15 ; call rax
0x00000000006c2c65 : mov edx, 0x731040 ; mov rdi, rbx ; call rax
0x00000000006d68dc : mov edx, 0x80f1cff9 ; int1 ; ret
0x000000000066298a : mov edx, 0x8900000a ; ret 0xe283
0x00000000004e0eb2 : mov edx, 0x89480000 ; ret
0x00000000006458cd : mov edx, 0x89480003 ; ret
0x0000000000614129 : mov edx, 0x89480006 ; ret
0x0000000000564c14 : mov edx, 0x89480015 ; ret
0x0000000000528d10 : mov edx, 0x8948001a ; ret
0x0000000000424dd1 : mov edx, 0x89480027 ; ret 0x858b
0x0000000000412bc2 : mov edx, 0x8948002a ; ret
0x0000000000559639 : mov edx, 0x8948b8eb ; ret
0x00000000004c1df3 : mov edx, 0x8948ffff ; ret
0x0000000000644117 : mov edx, 0x89490003 ; fucomp st(1) ; ret 0xffee
0x00000000004753cb : mov edx, 0x89490022 ; ret 0x8949
0x00000000005e5902 : mov edx, 0x89ffffb9 ; ret 0x458b
0x0000000000722e7b : mov edx, 0x8d69e067 ; xlatb ; retf
0x0000000000573c26 : mov edx, 0xa048c0 ; call 0x6c06d7
0x0000000000747f41 : mov edx, 0xa5700007 ; cmc ; call rax
0x000000000062a34c : mov edx, 0xaa3eee8 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007b714d : mov edx, 0xb2800006 ; out dx, eax ; jmp qword ptr [rcx]
0x00000000007b7185 : mov edx, 0xb2c80006 ; out dx, eax ; call qword ptr [rbx]
0x000000000062e5f6 : mov edx, 0xbe000525 ; retf
0x0000000000618212 : mov edx, 0xc9000a84 ; ret
0x00000000005cdb12 : mov edx, 0xc9000f2b ; ret
0x00000000004a1bb2 : mov edx, 0xc90021f7 ; ret
0x000000000048c312 : mov edx, 0xc9002343 ; ret
0x00000000004f0ca2 : mov edx, 0xc990fff5 ; ret
0x000000000045f980 : mov edx, 0xc9ffff8b ; ret
0x0000000000442dea : mov edx, 0xc9ffff93 ; ret
0x00000000005ed4a0 : mov edx, 0xc9ffff9b ; ret
0x00000000007fa625 : mov edx, 0xcd050183 ; je 0x7fa633 ; retf
0x00000000006776f3 : mov edx, 0xeae47bf0 ; ret 0x4841
0x00000000007cda98 : mov edx, 0xfbf050f ; add ah, dl ; syscall
0x00000000007d439a : mov edx, 0xfe3050f ; add eax, esp ; syscall
0x00000000007cd45a : mov edx, 0xff5050f ; add cl, cl ; syscall
0x00000000005a1f22 : mov edx, 1 ; add rsp, 8 ; ret
0x00000000006c5a60 : mov edx, 1 ; mov eax, edx ; pop rbx ; ret
0x0000000000517f42 : mov edx, 1 ; ret
0x0000000000519f10 : mov edx, 1 ; xor eax, eax ; ret
0x00000000006c59c9 : mov edx, 6 ; mov eax, edx ; pop rbx ; ret
0x000000000073570c : mov edx, ds ; iretd ; call rax
0x000000000052223c : mov edx, dword ptr [rax + 0x10] ; test rdx, rdx ; jne 0x522240 ; ret
0x0000000000522354 : mov edx, dword ptr [rax + 0x10] ; test rdx, rdx ; jne 0x522358 ; ret
0x000000000052723c : mov edx, dword ptr [rax + 0x10] ; test rdx, rdx ; jne 0x527240 ; ret
0x0000000000527354 : mov edx, dword ptr [rax + 0x10] ; test rdx, rdx ; jne 0x527358 ; ret
0x0000000000542c0c : mov edx, dword ptr [rax + 0x10] ; test rdx, rdx ; jne 0x542c10 ; ret
0x0000000000542d24 : mov edx, dword ptr [rax + 0x10] ; test rdx, rdx ; jne 0x542d28 ; ret
0x000000000056712c : mov edx, dword ptr [rax + 0x10] ; test rdx, rdx ; jne 0x567130 ; ret
0x0000000000567244 : mov edx, dword ptr [rax + 0x10] ; test rdx, rdx ; jne 0x567248 ; ret
0x0000000000590e7c : mov edx, dword ptr [rax + 0x10] ; test rdx, rdx ; jne 0x590e80 ; ret
0x0000000000590f94 : mov edx, dword ptr [rax + 0x10] ; test rdx, rdx ; jne 0x590f98 ; ret
0x00000000005a976c : mov edx, dword ptr [rax + 0x10] ; test rdx, rdx ; jne 0x5a9770 ; ret
0x00000000005a9884 : mov edx, dword ptr [rax + 0x10] ; test rdx, rdx ; jne 0x5a9888 ; ret
0x000000000067fd05 : mov edx, dword ptr [rax + 7] ; mov rdi, rbx ; call rdx
0x00000000004406ae : mov edx, dword ptr [rax + 8] ; mov rax, qword ptr [rax] ; nop ; pop rbp ; ret
0x00000000006a8632 : mov edx, dword ptr [rax + 8] ; mov rax, rbx ; pop rbx ; ret
0x000000000052225c : mov edx, dword ptr [rax + 8] ; test rdx, rdx ; jne 0x522260 ; ret
0x0000000000522284 : mov edx, dword ptr [rax + 8] ; test rdx, rdx ; jne 0x522288 ; ret
0x000000000052725c : mov edx, dword ptr [rax + 8] ; test rdx, rdx ; jne 0x527260 ; ret
0x0000000000527284 : mov edx, dword ptr [rax + 8] ; test rdx, rdx ; jne 0x527288 ; ret
0x0000000000542c2c : mov edx, dword ptr [rax + 8] ; test rdx, rdx ; jne 0x542c30 ; ret
0x0000000000542c54 : mov edx, dword ptr [rax + 8] ; test rdx, rdx ; jne 0x542c58 ; ret
0x000000000056714c : mov edx, dword ptr [rax + 8] ; test rdx, rdx ; jne 0x567150 ; ret
0x0000000000567174 : mov edx, dword ptr [rax + 8] ; test rdx, rdx ; jne 0x567178 ; ret
0x0000000000590e9c : mov edx, dword ptr [rax + 8] ; test rdx, rdx ; jne 0x590ea0 ; ret
0x0000000000590ec4 : mov edx, dword ptr [rax + 8] ; test rdx, rdx ; jne 0x590ec8 ; ret
0x00000000005a978c : mov edx, dword ptr [rax + 8] ; test rdx, rdx ; jne 0x5a9790 ; ret
0x00000000005a97b4 : mov edx, dword ptr [rax + 8] ; test rdx, rdx ; jne 0x5a97b8 ; ret
0x000000000044ce95 : mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; call rax
0x0000000000503c62 : mov edx, dword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x0000000000576f68 : mov edx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007ce2ce : mov edx, dword ptr [rax] ; add dl, ah ; syscall
0x00000000006be89b : mov edx, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000453791 : mov edx, dword ptr [rbp + 0x22] ; add cl, cl ; ret
0x0000000000442e01 : mov edx, dword ptr [rbp - 0x10] ; mov qword ptr [rax + 0x10], rdx ; pop rbp ; ret
0x000000000044f0db : mov edx, dword ptr [rbp - 0x10] ; mov qword ptr [rax + 0x18], rdx ; pop rbp ; ret
0x0000000000413ba8 : mov edx, dword ptr [rbp - 0x10] ; mov qword ptr [rax + 8], rdx ; leave ; ret
0x000000000061a5b3 : mov edx, dword ptr [rbp - 0x10] ; mov qword ptr [rax + 8], rdx ; pop rbp ; ret
0x000000000040c1c5 : mov edx, dword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; pop rbp ; ret
0x000000000041516f : mov edx, dword ptr [rbp - 0x18] ; leave ; ret
0x000000000040ef89 : mov edx, dword ptr [rbp - 0x18] ; nop ; pop rbx ; pop rbp ; ret
0x00000000004689fd : mov edx, dword ptr [rbp - 0x28] ; nop ; leave ; ret
0x000000000041099d : mov edx, dword ptr [rbp - 0x30] ; mov qword ptr [rax + 0x38], rdx ; pop rbp ; ret
0x00000000004209ed : mov edx, dword ptr [rbp - 0x30] ; mov qword ptr [rax + 0x40], rdx ; pop rbp ; ret
0x0000000000620a5f : mov edx, dword ptr [rbp - 0x38] ; nop ; leave ; ret
0x0000000000607459 : mov edx, dword ptr [rbp - 1] ; mov rax, qword ptr [rbp + 7] ; call rax
0x000000000040ef33 : mov edx, dword ptr [rbp - 8] ; nop ; leave ; ret
0x00000000005d4624 : mov edx, dword ptr [rbp - 8] ; nop ; pop rbp ; ret
0x0000000000414304 : mov edx, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000052b0f7 : mov edx, dword ptr [rbx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; pop rbx ; ret
0x00000000006d6e70 : mov edx, dword ptr [rbx + 0x5a81de1f] ; jl 0x6d6ed9 ; retf 0x381a
0x000000000056d178 : mov edx, dword ptr [rbx - 1] ; mov rbx, qword ptr [rbx + 7] ; nop ; call rbx
0x000000000056d6c8 : mov edx, dword ptr [rbx - 1] ; mov rcx, qword ptr [rbx + 7] ; nop ; call rcx
0x000000000054701f : mov edx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000548601 : mov edx, dword ptr [rbx] ; jmp 0x5485cb
0x00000000004163ae : mov edx, dword ptr [rcx - 1] ; mov rcx, qword ptr [rcx + 7] ; call rcx
0x0000000000584f49 : mov edx, dword ptr [rdi + 8] ; mov eax, dword ptr [rdx + rax*4] ; ret
0x00000000005f8470 : mov edx, dword ptr [rdi + 8] ; xor eax, eax ; test edx, edx ; je 0x5f8489 ; ret
0x000000000068f537 : mov edx, dword ptr [rdi - 8] ; movsxd rax, esi ; mov eax, dword ptr [rdx + rax*4] ; ret
0x00000000006d6085 : mov edx, dword ptr [rdi] ; test edx, edx ; jne 0x6d6096 ; ret
0x00000000006d6110 : mov edx, dword ptr [rdi] ; test edx, edx ; jne 0x6d6126 ; ret
0x000000000051b459 : mov edx, dword ptr [rdx + 0x30] ; test dl, 1 ; jne 0x51b4bc ; call rdx
0x000000000054bc59 : mov edx, dword ptr [rdx + 0x30] ; test dl, 1 ; jne 0x54bcbc ; call rdx
0x00000000006c02b8 : mov edx, dword ptr [rdx + 0x50] ; test dl, 1 ; jne 0x6c02d1 ; call rdx
0x000000000062c2f1 : mov edx, dword ptr [rdx + 7] ; jmp 0x62c2c5
0x00000000006525fd : mov edx, dword ptr [rdx + 7] ; mov esi, 1 ; call rdx
0x000000000040a987 : mov edx, dword ptr [rdx + 7] ; mov rdi, rbx ; call rdx
0x0000000000415a4e : mov edx, dword ptr [rdx + 7] ; mov rdi, rcx ; call rdx
0x000000000054da6d : mov edx, dword ptr [rdx + rsi + 0x18] ; add rsp, 8 ; ret
0x000000000062c2ed : mov edx, dword ptr [rdx - 1] ; mov rdx, qword ptr [rdx + 7] ; jmp 0x62c2c9
0x0000000000556fc4 : mov edx, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006a97d1 : mov edx, dword ptr [rdx] ; mov byte ptr [rdx + rax], 0x2d ; ret
0x00000000004dbfc1 : mov edx, dword ptr [rip - 0x70410000] ; ret 0x6e
0x00000000005577b5 : mov edx, dword ptr [rsi + 0x18] ; ret
0x00000000005ad815 : mov edx, dword ptr [rsi + 0x38] ; ret
0x00000000004f6e82 : mov edx, dword ptr [rsi + 4] ; cmp dword ptr [rsi], edx ; jle 0x4f6e97 ; ret
0x0000000000506b6a : mov edx, dword ptr [rsi + rdx*8] ; test rdx, rdx ; je 0x506b68 ; ret
0x000000000050700a : mov edx, dword ptr [rsi + rdx*8] ; test rdx, rdx ; je 0x507009 ; pop rbx ; ret
0x0000000000554daa : mov edx, dword ptr [rsi + rdx*8] ; test rdx, rdx ; je 0x554da8 ; ret
0x000000000055528a : mov edx, dword ptr [rsi + rdx*8] ; test rdx, rdx ; je 0x555289 ; pop rbx ; ret
0x0000000000625ada : mov edx, dword ptr [rsi + rdx*8] ; test rdx, rdx ; je 0x625ad8 ; ret
0x0000000000625dca : mov edx, dword ptr [rsi + rdx*8] ; test rdx, rdx ; je 0x625dc9 ; pop rbx ; ret
0x0000000000690b8b : mov edx, dword ptr [rsp + 0x30] ; jmp 0x690b59
0x0000000000690bdb : mov edx, dword ptr [rsp + 0x30] ; jmp 0x690ba9
0x000000000069115b : mov edx, dword ptr [rsp + 0x30] ; jmp 0x691129
0x00000000006911ab : mov edx, dword ptr [rsp + 0x30] ; jmp 0x691179
0x000000000069c096 : mov edx, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000006cbb32 : mov edx, dword ptr [rsp - 0x10] ; ret
0x00000000006cbafa : mov edx, dword ptr [rsp - 0x20] ; ret
0x00000000006d3f59 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x00000000007faecc : mov edx, eax ; add dword ptr [rax], esp ; mov esi, 0xbb0001be ; ret 0x501
0x000000000043f4a1 : mov edx, eax ; call 0x43b6f6
0x0000000000592dbc : mov edx, eax ; call r8
0x000000000066ccf7 : mov edx, eax ; cmp rsi, rdi ; jne 0x66ccf7 ; ret
0x000000000050ac4d : mov edx, eax ; jne 0x50ac38 ; xor eax, eax ; xor edx, edx ; pop rbx ; ret
0x000000000055794d : mov edx, eax ; jne 0x557938 ; xor eax, eax ; xor edx, edx ; pop rbx ; ret
0x000000000062a0dd : mov edx, eax ; jne 0x62a0c8 ; xor eax, eax ; xor edx, edx ; pop rbx ; ret
0x0000000000622022 : mov edx, eax ; mov rax, qword ptr [rbp - 0x28] ; mov dword ptr [rax], edx ; leave ; ret
0x00000000005043fa : mov edx, eax ; mov rax, rbx ; pop rbx ; ret
0x0000000000525bf8 : mov edx, eax ; mov rax, rdi ; pop rbx ; ret
0x00000000006ca87d : mov edx, eax ; mov rax, rsi ; ret
0x00000000005d79fd : mov edx, eax ; mov rdi, rcx ; call 0x403c77
0x000000000054a333 : mov edx, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rcx
0x00000000006b2a5e : mov edx, eax ; shr edx, 0x12 ; xor eax, edx ; ret
0x0000000000509e5a : mov edx, eax ; xor eax, eax ; pop rbx ; ret
0x000000000054e751 : mov edx, ebp ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000050ab51 : mov edx, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000742c7d : mov edx, ebp ; call qword ptr [rax]
0x00000000004fcf7c : mov edx, ebp ; call rax
0x000000000051d731 : mov edx, ebp ; jne 0x51d784 ; call rdx
0x000000000051d88e : mov edx, ebp ; jne 0x51d8dc ; call rdx
0x000000000052b4b4 : mov edx, ebp ; jne 0x52b4ee ; call rdx
0x0000000000545154 : mov edx, ebp ; jne 0x54518e ; call rdx
0x000000000054e300 : mov edx, ebp ; jne 0x54e33a ; call rdx
0x0000000000589615 : mov edx, ebp ; jne 0x589664 ; call rdx
0x00000000005898a1 : mov edx, ebp ; jne 0x5898f4 ; call rdx
0x00000000005899fe : mov edx, ebp ; jne 0x589a4c ; call rdx
0x000000000058f931 : mov edx, ebp ; jne 0x58f97c ; call rdx
0x0000000000634e7a : mov edx, ebp ; lea rdi, qword ptr [rbp - 0x530] ; call rax
0x000000000054809b : mov edx, ebp ; mov rcx, r14 ; mov rsi, rbx ; call rax
0x0000000000552240 : mov edx, ebp ; mov rdi, r12 ; call rax
0x0000000000535913 : mov edx, ebp ; mov rdi, rbx ; call rax
0x00000000004fd877 : mov edx, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006ae83e : mov edx, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004cc6ed : mov edx, ebx ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000005199e1 : mov edx, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000675fdc : mov edx, ebx ; call rax
0x000000000073781d : mov edx, ebx ; jmp qword ptr [rax]
0x000000000047c7bc : mov edx, ebx ; mov esi, eax ; mov rdi, rdx ; call 0x4791e9
0x00000000004e5dcb : mov edx, ebx ; mov rdi, r15 ; call r11
0x00000000005136f5 : mov edx, ebx ; mov rsi, r13 ; call r8
0x000000000051c6ba : mov edx, ebx ; or rdx, 1 ; xor eax, eax ; pop rbx ; ret
0x0000000000631b3a : mov edx, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000502931 : mov edx, ebx ; pop rbx ; pop rbp ; pop r12 ; xor ecx, ecx ; jmp r8
0x00000000005012e3 : mov edx, ebx ; pop rbx ; pop rbp ; pop r12 ; xor ecx, ecx ; jmp rax
0x000000000040f01f : mov edx, ecx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000045da8f : mov edx, ecx ; call rax
0x000000000040d5fb : mov edx, ecx ; nop ; leave ; ret
0x000000000040d5b6 : mov edx, ecx ; nop ; pop rbp ; ret
0x00000000005d4523 : mov edx, ecx ; nop ; pop rbx ; pop rbp ; ret
0x000000000050840e : mov edx, ecx ; pop rbx ; ret
0x000000000051af0c : mov edx, ecx ; ret
0x00000000004d23c2 : mov edx, edi ; call 0x4ce6ba
0x000000000050314a : mov edx, edi ; call rax
0x00000000004b78e7 : mov edx, edi ; dec ecx ; ret
0x000000000049120f : mov edx, edi ; mov rdi, r11 ; mov rsi, rbx ; call r9
0x00000000006c0748 : mov edx, edi ; mov rdi, r12 ; call rax
0x000000000040a4fe : mov edx, edi ; mov rdi, rcx ; call rax
0x000000000052a49a : mov edx, edi ; test rdx, rdx ; jne 0x52a48f ; ret
0x0000000000544b59 : mov edx, edi ; test rdx, rdx ; jne 0x544b4f ; ret
0x0000000000519127 : mov edx, edx ; pop rbx ; ret
0x000000000051aede : mov edx, edx ; ret
0x00000000006b0999 : mov edx, es ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xb8
0x0000000000513006 : mov edx, esi ; add rsp, 8 ; mov rsi, rcx ; jmp rax
0x00000000004ff9d5 : mov edx, esi ; call rax
0x0000000000517f3a : mov edx, esi ; jg 0x517f44 ; ret
0x000000000056f77a : mov edx, esi ; jg 0x56f784 ; ret
0x000000000058402a : mov edx, esi ; jg 0x584034 ; ret
0x00000000005841aa : mov edx, esi ; jg 0x5841b4 ; ret
0x000000000059c0da : mov edx, esi ; jg 0x59c0e4 ; ret
0x0000000000636001 : mov edx, esi ; lea rdi, qword ptr [rbp - 0x2b0] ; call rax
0x000000000047b87e : mov edx, esi ; mov rdi, rax ; call 0x47837d
0x00000000005139fa : mov edx, esi ; mov rsi, r12 ; call rax
0x000000000045fcf5 : mov edx, esi ; mov rsi, r8 ; call rax
0x000000000052ef1e : mov edx, esi ; or rdx, 1 ; xor eax, eax ; ret
0x00000000005502b4 : mov edx, esi ; ret
0x0000000000516e29 : mov edx, esi ; xor al, al ; or rax, rcx ; ret
0x000000000062b051 : mov edx, esi ; xor eax, eax ; ret
0x0000000000548420 : mov edx, esp ; and rbx, 0xfffffffffffffff8 ; call rax
0x000000000050556e : mov edx, esp ; call rax
0x000000000073ea1d : mov edx, esp ; jmp rax
0x0000000000526dd9 : mov edx, esp ; jne 0x526e24 ; call rdx
0x000000000057015e : mov edx, esp ; jne 0x5701ac ; call rdx
0x0000000000571bfa : mov edx, esp ; jne 0x571c44 ; call rdx
0x0000000000589756 : mov edx, esp ; jne 0x5897a4 ; call rdx
0x0000000000590bb9 : mov edx, esp ; jne 0x590c04 ; call rdx
0x0000000000510587 : mov edx, esp ; mov esi, ebp ; mov rdi, rbx ; call rax
0x0000000000606f9d : mov edx, esp ; mov rdi, r14 ; call rax
0x00000000004043bc : mov edx, esp ; mov rdi, rbx ; call rax
0x00000000005600d3 : mov edx, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004f6a4f : mov edx, fs ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x0000000000675175 : mov edx, r12d ; call rax
0x0000000000510586 : mov edx, r12d ; mov esi, ebp ; mov rdi, rbx ; call rax
0x0000000000607ec1 : mov edx, ss ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; retf -0x73f1
0x000000000054a4a5 : mov es, eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x2948
0x000000000059d12e : mov es, edx ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x8c0f
0x000000000073e411 : mov es, word ptr [rax + rax] ; adc byte ptr [rbx], 0xe2 ; call rax
0x0000000000794575 : mov es, word ptr [rax + rax] ; xor bh, byte ptr [rsi - 0x1c] ; call qword ptr [rax]
0x000000000075455d : mov es, word ptr [rax] ; add al, ch ; and bh, cl ; call rsp
0x00000000004f8352 : mov es, word ptr [rbx - 0x76b7ffe8] ; ret
0x0000000000532fa2 : mov es, word ptr [rbx] ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x00000000007c9d30 : mov es, word ptr [rbx] ; add ch, bh ; add dh, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000000007d44c6 : mov es, word ptr [rbx] ; add edi, dword ptr [rbp + rcx + 0x203a000] ; retf
0x00000000005e67af : mov es, word ptr [rcx - 0x7d000000] ; ret
0x00000000007346c1 : mov es, word ptr [rcx] ; add ah, ah ; retf -0x33
0x00000000007346b9 : mov es, word ptr [rcx] ; add byte ptr [rdx], cl ; retf -0x33
0x000000000072293b : mov es, word ptr [rdi + 0x4acf1c98] ; ret 0x5112
0x00000000007ce9da : mov es, word ptr [rdx] ; add dword ptr [rbp + 1], ebp ; retf 0x1e01
0x00000000005d9a02 : mov es, word ptr [rdx] ; call rax
0x00000000005c56e6 : mov es, word ptr [rip - 0x76b7001c] ; ret
0x000000000052731e : mov es, word ptr [rsi + 0x29480016] ; ret
0x0000000000744669 : mov es, word ptr [rsi] ; add al, al ; out dx, al ; jmp rax
0x00000000007b4545 : mov es, word ptr [rsi] ; add al, bh ; out dx, eax ; call qword ptr [rdi]
0x0000000000744641 : mov es, word ptr [rsi] ; add byte ptr [rax + 0x47], bh ; out dx, al ; jmp qword ptr [rax]
0x00000000007ebfd5 : mov es, word ptr [rsi] ; add byte ptr [rbx + rax + 0x69c14], dh ; retf
0x00000000007ca90f : mov es, word ptr [rsi] ; ret
0x0000000000590c68 : mov es, word ptr [rsi] ; str word ptr [rax - 0x77] ; ret
0x00000000007ca90e : mov es, word ptr ds:[rsi] ; ret
0x00000000005d95c4 : mov esi, 0 ; mov rdi, rdx ; call rax
0x0000000000615277 : mov esi, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x00000000005fa2b9 : mov esi, 0x2944d889 ; loopne 0x5fa300 ; ret
0x00000000004a3adf : mov esi, 0x2948001e ; ret
0x000000000068fd24 : mov esi, 0x372f093d ; add byte ptr [rax - 0x7d], cl ; ret 0x4812
0x000000000068fc33 : mov esi, 0x372ffa3d ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000073a00d : mov esi, 0x3b18ffd9 ; add eax, dword ptr [rax] ; pop rsp ; ret
0x00000000007e6fc7 : mov esi, 0x406 ; ret 0x5a06
0x00000000006be4d1 : mov esi, 0x48000034 ; add esp, 8 ; ret
0x00000000006874ee : mov esi, 0x48003d7c ; mov eax, ebx ; jne 0x687546 ; call rax
0x000000000068977e : mov esi, 0x48fffff2 ; add esp, 0x18 ; ret
0x00000000005515fe : mov esi, 0x4c000002 ; mov edi, esi ; call rax
0x00000000007df422 : mov esi, 0x502 ; ret
0x00000000007e5db4 : mov esi, 0x503 ; ret
0x0000000000723218 : mov esi, 0x6e1077f ; ret
0x000000000056ce87 : mov esi, 0x703358 ; call rax
0x000000000056cf73 : mov esi, 0x703368 ; call rax
0x000000000056f2dc : mov esi, 0x703390 ; call rax
0x00000000005c6f6d : mov esi, 0x7128d4 ; call 0x403a07
0x000000000062d5a7 : mov esi, 0x71df48 ; call 0x4d982f
0x00000000005438d6 : mov esi, 0x72e8c031 ; ret 0x13
0x00000000006c741a : mov esi, 0x83c36348 ; ret
0x000000000058ba70 : mov esi, 0x89000f5a ; ret
0x0000000000544570 : mov esi, 0x890013cf ; ret
0x000000000051ea70 : mov esi, 0x8900162a ; ret
0x0000000000645455 : mov esi, 0x89480003 ; ret
0x00000000005b4c4c : mov esi, 0x8948000c ; ret
0x0000000000534c35 : mov esi, 0x89480014 ; ret
0x0000000000523cd7 : mov esi, 0x89480015 ; ret
0x000000000044ea14 : mov esi, 0x89480025 ; ret
0x000000000043ea46 : mov esi, 0x89480026 ; ret
0x0000000000688bfa : mov esi, 0x8948043c ; fdiv dword ptr [rbp + 0x40] ; call rax
0x000000000064f2fe : mov esi, 0x8948a5eb ; ret
0x000000000064daeb : mov esi, 0x8948ffea ; ret
0x0000000000474fea : mov esi, 0x89490022 ; ret 0x8949
0x00000000006884b4 : mov esi, 0x8b48073c ; add al, 0x24 ; jne 0x68850b ; call rax
0x00000000007fa3c4 : mov esi, 0x8c89066c ; add dword ptr [rax], eax ; retf
0x0000000000722d0e : mov esi, 0xa8090759 ; fadd qword ptr [rsi] ; retf
0x0000000000748049 : mov esi, 0xae800007 ; cmc ; call qword ptr [rax]
0x00000000007f4038 : mov esi, 0xb20501ca ; retf
0x00000000007b75a5 : mov esi, 0xb9a80006 ; out dx, eax ; jmp qword ptr [rsi]
0x00000000007faed0 : mov esi, 0xbb0001be ; ret 0x501
0x00000000006be53b : mov esi, 0xc0840034 ; cmove eax, edx ; ret
0x000000000070685e : mov esi, 0xc2c1c0bf ; ret
0x00000000005d760e : mov esi, 0xc9000e90 ; ret
0x00000000004c7fee : mov esi, 0xc9001f68 ; ret
0x000000000040fe0e : mov esi, 0xc9002b08 ; ret
0x00000000004b7322 : mov esi, 0xc9fffa68 ; ret
0x0000000000735675 : mov esi, 0xd9e0ffcf ; add dword ptr [rax], eax ; retf -0x3041
0x0000000000687589 : mov esi, 0xe889483b ; jne 0x6875c3 ; call rax
0x0000000000606e78 : mov esi, 0xe88948ff ; jne 0x606ed7 ; call rax
0x000000000059697e : mov esi, 0xeb0013dd ; mov word ptr [rax - 0x77], cs ; ret
0x000000000050b54e : mov esi, 0xebffffe5 ; fisttp dword ptr [rax - 0x77] ; ret
0x00000000007e6851 : mov esi, 0xfd4050f ; add bh, cl ; syscall
0x0000000000432a8b : mov esi, 1 ; call 0x6bed07
0x0000000000404a5f : mov esi, 1 ; call rax
0x000000000065e64a : mov esi, 1 ; call rcx
0x0000000000652600 : mov esi, 1 ; call rdx
0x00000000005011bf : mov esi, 1 ; jmp rax
0x0000000000511355 : mov esi, 1 ; mov rdi, qword ptr [rbp - 0x48] ; call rax
0x00000000005111f3 : mov esi, 1 ; mov rdi, r12 ; call rax
0x000000000063d6fc : mov esi, 1 ; mov rdi, r12 ; call rcx
0x0000000000554649 : mov esi, 1 ; mov rdi, r12 ; call rdx
0x000000000052bad2 : mov esi, 1 ; mov rdi, r13 ; call rax
0x000000000062df11 : mov esi, 1 ; mov rdi, r13 ; call rdx
0x0000000000511b30 : mov esi, 1 ; mov rdi, r14 ; call rax
0x00000000006516e2 : mov esi, 1 ; mov rdi, r14 ; call rdx
0x000000000052ca27 : mov esi, 1 ; mov rdi, r15 ; call rax
0x000000000055156e : mov esi, 1 ; mov rdi, r15 ; call rdx
0x0000000000511b85 : mov esi, 1 ; mov rdi, rbp ; call rax
0x0000000000503a2f : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000040ab77 : mov esi, 1 ; mov rdi, rbx ; call rdx
0x000000000040b08e : mov esi, 1 ; mov rdi, rcx ; call rax
0x000000000040aaf6 : mov esi, 1 ; mov rdi, rcx ; call rdx
0x000000000040b101 : mov esi, 1 ; mov rdi, rdx ; call rax
0x00000000005524e9 : mov esi, 2 ; call rax
0x00000000006330e1 : mov esi, 2 ; call rcx
0x000000000063383c : mov esi, 2 ; mov rdi, r12 ; call rax
0x0000000000636716 : mov esi, 2 ; mov rdi, rax ; call rdx
0x0000000000404401 : mov esi, 2 ; mov rdi, rbx ; call rax
0x00000000005498c0 : mov esi, 2 ; pop rbx ; pop rbp ; jmp rax
0x000000000073be75 : mov esi, ds ; call qword ptr [rax]
0x0000000000780f41 : mov esi, ds ; jmp qword ptr [rdx]
0x000000000073be6d : mov esi, ds ; jmp rax
0x00000000005189dd : mov esi, dword ptr [rax + 0x10] ; jne 0x518a8b ; call rdx
0x00000000005524b4 : mov esi, dword ptr [rax + 0x30] ; test sil, 1 ; jne 0x55251a ; call rsi
0x0000000000595815 : mov esi, dword ptr [rbp + 0x20] ; mov rdi, qword ptr [rbx + 0x20] ; call 0x6a1a99
0x00000000006d45a5 : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000651db7 : mov esi, dword ptr [rbp - 0x4e0] ; call 0x6be8b8
0x000000000064267e : mov esi, dword ptr [rbp - 0x528] ; call 0x6be8b8
0x00000000005512c3 : mov esi, dword ptr [rbp - 0xd4] ; mov rdi, r12 ; call rax
0x000000000055129c : mov esi, dword ptr [rbp - 0xd8] ; call rax
0x000000000059584e : mov esi, dword ptr [rbx + 0x20] ; mov rdi, qword ptr [rbp + 0x20] ; call 0x6a1a99
0x00000000006d4a49 : mov esi, dword ptr [rbx] ; call r14
0x0000000000584821 : mov esi, dword ptr [rcx + 0x29480010] ; ret
0x0000000000722a3b : mov esi, dword ptr [rdi - 0x1f] ; push rbx ; retf -0x4446
0x00000000006d4a98 : mov esi, dword ptr [rdi] ; call r14
0x000000000055bf9f : mov esi, dword ptr [rdx] ; call 0x6881f5
0x00000000006787f6 : mov esi, dword ptr [rdx] ; mov byte ptr [rdi + rcx], sil ; jne 0x6787e9 ; ret
0x00000000006787b8 : mov esi, dword ptr [rdx] ; ret
0x000000000055451e : mov esi, dword ptr [rsp + 0x24] ; call rax
0x00000000005306a2 : mov esi, dword ptr [rsp] ; mov rdi, rbx ; call rax
0x00000000005130b3 : mov esi, eax ; add rsp, 8 ; jmp rax
0x0000000000421fee : mov esi, eax ; call 0x41ea5e
0x000000000043f3b3 : mov esi, eax ; call 0x43be3a
0x00000000004e8a49 : mov esi, eax ; call 0x4554d0
0x00000000004e8a9f : mov esi, eax ; call 0x45553e
0x00000000005ad0ae : mov esi, eax ; call 0x5a9b34
0x000000000062a7ce : mov esi, eax ; call 0x6272a4
0x00000000005f8505 : mov esi, eax ; call 0x6747e4
0x00000000004cb341 : mov esi, eax ; call 0x6875d4
0x000000000042ea8c : mov esi, eax ; call 0x68ad74
0x00000000006155ae : mov esi, eax ; call 0x6a1894
0x0000000000475ba2 : mov esi, eax ; call 0x6a1e64
0x0000000000412636 : mov esi, eax ; call 0x6be8b4
0x00000000004a7865 : mov esi, eax ; call 0x6c42c4
0x00000000004385b5 : mov esi, eax ; call 0x6c5024
0x00000000006965f1 : mov esi, eax ; call qword ptr [rip + 0x36c2ef]
0x0000000000695eb5 : mov esi, eax ; call qword ptr [rip + 0x36ca2b]
0x00000000006466cd : mov esi, eax ; call qword ptr [rip + 0x3bc213]
0x0000000000645ec6 : mov esi, eax ; call qword ptr [rip + 0x3bca1a]
0x00000000005b5e44 : mov esi, eax ; call qword ptr [rip + 0x44ca9c]
0x0000000000555ec0 : mov esi, eax ; call qword ptr [rip + 0x4aca20]
0x000000000045fcf8 : mov esi, eax ; call rax
0x0000000000660447 : mov esi, eax ; call rdx
0x000000000040d565 : mov esi, eax ; mov eax, 1 ; jmp 0x40d539
0x0000000000410d51 : mov esi, eax ; mov eax, 1 ; jmp 0x410d25
0x000000000041d064 : mov esi, eax ; mov eax, 1 ; jmp 0x41d038
0x0000000000420da4 : mov esi, eax ; mov eax, 1 ; jmp 0x420d78
0x000000000042c04b : mov esi, eax ; mov eax, 1 ; jmp 0x42c01f
0x000000000042f837 : mov esi, eax ; mov eax, 1 ; jmp 0x42f80b
0x00000000005cf361 : mov esi, eax ; mov eax, 1 ; jmp 0x5cf335
0x00000000005d4be1 : mov esi, eax ; mov eax, 1 ; jmp 0x5d4bbd
0x00000000005d7f6b : mov esi, eax ; mov eax, 1 ; jmp 0x5d7f3f
0x00000000005dbfcc : mov esi, eax ; mov eax, 1 ; jmp 0x5dbfa0
0x00000000005e1aba : mov esi, eax ; mov eax, 1 ; jmp 0x5e1a96
0x00000000005e545c : mov esi, eax ; mov eax, 1 ; jmp 0x5e5430
0x0000000000478a40 : mov esi, eax ; mov ebx, 1 ; jmp 0x478a14
0x00000000005cf582 : mov esi, eax ; mov ebx, 1 ; jmp 0x5cf556
0x00000000005d818d : mov esi, eax ; mov ebx, 1 ; jmp 0x5d8161
0x00000000005dc1fb : mov esi, eax ; mov ebx, 1 ; jmp 0x5dc1cf
0x00000000005e568c : mov esi, eax ; mov ebx, 1 ; jmp 0x5e5660
0x00000000006143c7 : mov esi, eax ; mov ebx, 1 ; jmp 0x61439b
0x000000000061486f : mov esi, eax ; mov ebx, 1 ; jmp 0x614843
0x000000000068d84e : mov esi, eax ; mov rdi, rbp ; call 0x689b27
0x000000000047c7be : mov esi, eax ; mov rdi, rdx ; call 0x4791e7
0x000000000040a4fb : mov esi, eax ; mov rdx, rdi ; mov rdi, rcx ; call rax
0x00000000006c70dc : mov esi, eax ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000525e69 : mov esi, ebp ; call qword ptr [rip + 0x4dca77]
0x00000000005136f8 : mov esi, ebp ; call r8
0x000000000051167c : mov esi, ebp ; call rax
0x0000000000744a35 : mov esi, ebp ; jmp qword ptr [rax]
0x00000000004fa304 : mov esi, ebp ; mov edx, 0x6edea0 ; call rax
0x0000000000549407 : mov esi, ebp ; mov rdi, qword ptr [rbp - 0x368] ; call rax
0x000000000068d0b3 : mov esi, ebp ; mov rdi, r13 ; call 0x689b27
0x0000000000510589 : mov esi, ebp ; mov rdi, rbx ; call rax
0x00000000004043b9 : mov esi, ebp ; mov rdx, r12 ; mov rdi, rbx ; call rax
0x000000000055223d : mov esi, ebp ; mov rdx, rbp ; mov rdi, r12 ; call rax
0x00000000005489d0 : mov esi, ebp ; mov rdx, rbp ; mov rdi, rbx ; call rax
0x00000000006b71b7 : mov esi, ebp ; sub rdx, 0x19 ; call 0x403c78
0x000000000055b210 : mov esi, ebx ; call 0x557434
0x00000000005ad03f : mov esi, ebx ; call 0x5a9b34
0x000000000050262b : mov esi, ebx ; call 0x6be8b4
0x0000000000491215 : mov esi, ebx ; call r9
0x00000000005079ec : mov esi, ebx ; call rax
0x000000000073be4d : mov esi, ebx ; jmp rax
0x000000000051110c : mov esi, ebx ; mov rdi, r12 ; call rax
0x00000000005025dd : mov esi, ebx ; mov rdi, r13 ; call 0x6be8b7
0x000000000052ba2f : mov esi, ebx ; mov rdi, r15 ; call rax
0x0000000000459257 : mov esi, ebx ; mov rdi, rax ; call 0x4b5ca5
0x0000000000510155 : mov esi, ebx ; mov rdi, rsp ; call rax
0x00000000004fcf79 : mov esi, ebx ; mov rdx, r13 ; call rax
0x00000000004ff9d2 : mov esi, ebx ; mov rdx, r14 ; call rax
0x0000000000503147 : mov esi, ebx ; mov rdx, r15 ; call rax
0x0000000000501e2f : mov esi, ebx ; mov rsp, r14 ; call 0x6be8b7
0x00000000006d1dc2 : mov esi, ebx ; xor ebx, ebx ; call rax
0x0000000000513213 : mov esi, ecx ; add rsp, 8 ; jmp rax
0x000000000040e0f9 : mov esi, ecx ; call rax
0x000000000051300d : mov esi, ecx ; jmp rax
0x00000000006c1ce2 : mov esi, ecx ; mov rdi, r14 ; call rcx
0x0000000000476ed9 : mov esi, ecx ; mov rdi, rax ; call 0x4038f7
0x00000000004417ec : mov esi, ecx ; mov rdi, rax ; call 0x43da4f
0x00000000004b960e : mov esi, ecx ; mov rdi, rax ; call 0x4660c9
0x00000000004a37ba : mov esi, ecx ; mov rdi, rax ; call 0x4a0221
0x00000000004b56b5 : mov esi, ecx ; mov rdi, rax ; call 0x6819b7
0x00000000004b56f7 : mov esi, ecx ; mov rdi, rax ; call 0x6819c7
0x000000000065dba4 : mov esi, ecx ; mov rdi, rax ; call rdx
0x0000000000493ce1 : mov esi, ecx ; mov rdi, rdx ; call rax
0x000000000069890e : mov esi, edi ; dec dword ptr [rax - 0x7d] ; cli ; xor cl, byte ptr [rax - 0x77] ; ret
0x00000000006d48ea : mov esi, edi ; mov edi, 1 ; jmp rax
0x00000000006336ba : mov esi, edi ; mov rdi, r12 ; call rax
0x00000000006b1d89 : mov esi, edi ; mov rdi, r13 ; call 0x6cdfd7
0x0000000000511213 : mov esi, edi ; mov rdi, rbx ; call rax
0x00000000004e5dc8 : mov esi, edi ; mov rdx, rbx ; mov rdi, r15 ; call r11
0x00000000005b310b : mov esi, edx ; call 0x67fb56
0x00000000004427a2 : mov esi, edx ; call rax
0x00000000006c2a7c : mov esi, edx ; lea rdx, qword ptr [rbp - 0x40] ; mov rdi, r15 ; call rax
0x000000000065bafc : mov esi, edx ; mov rdi, rax ; call 0x407d37
0x00000000005ea5d9 : mov esi, edx ; mov rdi, rax ; call 0x5e70c3
0x0000000000455073 : mov esi, edx ; mov rdi, rax ; call 0x6c1377
0x000000000043f49e : mov esi, edx ; mov rdx, rax ; call 0x43b6f9
0x00000000006a17f2 : mov esi, esi ; add rax, rsi ; ret
0x000000000050b6b7 : mov esi, esi ; call 0x687954
0x00000000006a1812 : mov esi, esi ; imul rax, rsi ; ret
0x00000000006d4941 : mov esi, esi ; mov rdi, r12 ; call r15
0x00000000004f797f : mov esi, esi ; mov rdi, r15 ; call 0x403c77
0x00000000005358f6 : mov esi, esi ; mov rdi, rbx ; call rax
0x00000000006a1833 : mov esi, esi ; shl rax, 0x20 ; or rax, rsi ; ret
0x00000000006671f7 : mov esi, esp ; call 0x403c34
0x000000000068725c : mov esi, esp ; call 0x403c74
0x00000000007410f5 : mov esi, esp ; call qword ptr [rax]
0x000000000050ae00 : mov esi, esp ; call rax
0x000000000050762f : mov esi, esp ; call rcx
0x00000000007410e5 : mov esi, esp ; jmp rax
0x00000000004fdd7b : mov esi, esp ; lea rdi, qword ptr [rax + 0x28] ; call 0x689ff8
0x00000000006bb73e : mov esi, esp ; mov edi, 0x728b80 ; call 0x6881f9
0x000000000050f666 : mov esi, esp ; mov edx, 0x6f1980 ; call rax
0x00000000005184fd : mov esi, esp ; mov edx, 0x6f26a0 ; call rax
0x000000000053f51d : mov esi, esp ; mov edx, 0x6fa720 ; call rax
0x000000000056305d : mov esi, esp ; mov edx, 0x701f80 ; call rax
0x00000000005874ed : mov esi, esp ; mov edx, 0x7070c0 ; call rax
0x00000000005a788d : mov esi, esp ; mov edx, 0x70fa50 ; call rax
0x00000000006c0cff : mov esi, esp ; mov edx, 0x730d00 ; call rax
0x00000000006c0d4f : mov esi, esp ; mov edx, 0x730d30 ; call rax
0x00000000006c0e3f : mov esi, esp ; mov edx, 0x730d80 ; call rax
0x00000000006c110f : mov esi, esp ; mov edx, 0x730e20 ; call rax
0x000000000054ec60 : mov esi, esp ; mov rdi, r15 ; call rax
0x0000000000535910 : mov esi, esp ; mov rdx, rbp ; mov rdi, rbx ; call rax
0x0000000000744a65 : mov esi, gs ; jmp qword ptr [rax]
0x000000000052cc07 : mov esi, r12d ; call rax
0x000000000054ec5f : mov esi, r12d ; mov rdi, r15 ; call rax
0x00000000006336b9 : mov esi, r15d ; mov rdi, r12 ; call rax
0x000000000065dba3 : mov esi, r9d ; mov rdi, rax ; call rdx
0x0000000000684d1d : mov esi, ss ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x000000000051591d : mov esp, 0x15ff0016 ; ret 0x4ecf
0x0000000000775004 : mov esp, 0x18000298 ; retf -0x25
0x00000000007d91f7 : mov esp, 0x1aab050f ; add bl, bl ; syscall
0x00000000007abac4 : mov esp, 0x2000603 ; cmp ch, ch ; jmp qword ptr [rdi]
0x0000000000527fda : mov esp, 0x247c8b48 ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000758fc4 : mov esp, 0x280000d8 ; cmp dl, al ; call qword ptr [rdi]
0x0000000000786ec4 : mov esp, 0x280003b7 ; add ah, al ; jmp qword ptr [rdi]
0x000000000078f6c4 : mov esp, 0x2800043f ; add edx, esp ; jmp qword ptr [rbx]
0x000000000067b317 : mov esp, 0x29000000 ; ret
0x0000000000433d8c : mov esp, 0x29480025 ; ret
0x00000000004e8b80 : mov esp, 0x29489848 ; enter -0x74b8, 4 ; ret 0x8b4c
0x0000000000442fae : mov esp, 0x29489848 ; ret 0x8948
0x0000000000498087 : mov esp, 0x29c0458b ; ret 0xd089
0x000000000079a9c4 : mov esp, 0x2e0004f2 ; mov bl, 0xc6 ; call qword ptr [rdx]
0x00000000006847ab : mov esp, 0x31007288 ; shr al, 0x5e ; ret
0x00000000006d1132 : mov esp, 0x3317 ; mfence ; ret
0x00000000007cdc93 : mov esp, 0x340f ; cld ; syscall
0x0000000000775ec4 : mov esp, 0x380002a7 ; sub esp, ebx ; jmp qword ptr [rax]
0x0000000000498061 : mov esp, 0x39489848 ; ret 0x147d
0x0000000000487f82 : mov esp, 0x39b8458b ; ret 0x147e
0x0000000000774cc4 : mov esp, 0x48000295 ; mov bl, 0xdb ; jmp qword ptr [rax]
0x000000000078cec4 : mov esp, 0x48000417 ; mov fs, ecx ; call qword ptr [rax]
0x00000000005425d0 : mov esp, 0x48fffff5 ; mov eax, dword ptr [rbx + 8] ; pop rbx ; ret
0x00000000006d6b7b : mov esp, 0x4adfc5eb ; scasq rax, qword ptr [rdi] ; ret 0xf8ed
0x0000000000797804 : mov esp, 0x4c0004c0 ; jno 0x7977f7 ; jmp rax
0x000000000078b7c4 : mov esp, 0x58000400 ; adc al, 0xe1 ; call qword ptr [rdx]
0x00000000007bb4c4 : mov esp, 0x580006fd ; loopne 0x7bb4c2 ; call qword ptr [rdi]
0x0000000000767cc4 : mov esp, 0x5c0001c5 ; adc al, 0xd7 ; jmp qword ptr [rbx]
0x000000000075a7c4 : mov esp, 0x5e0000f0 ; mov cl, 0xd0 ; call qword ptr [rcx]
0x000000000076734d : mov esp, 0x5e020001 ; salc ; call rsp
0x00000000007570c4 : mov esp, 0x6e0000b9 ; retf -0x31
0x000000000075f004 : mov esp, 0x7a000138 ; retf -0x2e
0x000000000079cbc4 : mov esp, 0x80000514 ; ret
0x0000000000769c04 : mov esp, 0x880001e4 ; loopne 0x769bea ; call rsi
0x000000000078b2c4 : mov esp, 0x880003fb ; or al, 0xe1 ; jmp qword ptr [rbx]
0x00000000004c1c6e : mov esp, 0x890002ef ; ret 0x38b
0x00000000005e21e0 : mov esp, 0x89000def ; ret
0x0000000000645621 : mov esp, 0x89480003 ; ret
0x0000000000628ab7 : mov esp, 0x8948000a ; ret
0x00000000005b4dfc : mov esp, 0x8948000c ; ret
0x000000000057568f : mov esp, 0x89480010 ; ret
0x000000000059293c : mov esp, 0x89480012 ; ret
0x0000000000523f41 : mov esp, 0x89480015 ; ret
0x00000000004f4efe : mov esp, 0x89480018 ; ret
0x0000000000528a67 : mov esp, 0x8948001a ; ret
0x00000000004c28da : mov esp, 0x8948001f ; ret 0x8948
0x0000000000423f20 : mov esp, 0x89480025 ; ret
0x0000000000546498 : mov esp, 0x8948006f ; ja 0x5464ae ; ret
0x00000000004880ce : mov esp, 0x89489848 ; ret 0x8d48
0x00000000006043bf : mov esp, 0x8948f9eb ; ret
0x00000000004c1c26 : mov esp, 0x8948ffff ; ret
0x00000000005bc75d : mov esp, 0x9024 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000079b2c4 : mov esp, 0xa80004fb ; adc al, 0xe7 ; jmp qword ptr [rcx]
0x0000000000747fa1 : mov esp, 0xa8700007 ; cmc ; jmp qword ptr [rax]
0x0000000000523f11 : mov esp, 0xa8eb0015 ; mov rbx, rax ; jmp 0x523ee7
0x0000000000747fd9 : mov esp, 0xa8f00007 ; cmc ; call rax
0x000000000079eac4 : mov esp, 0xb6000533 ; sub al, 0xe8 ; call rax
0x00000000007fae20 : mov esp, 0xbcfe0501 ; add dword ptr [rax], eax ; ret 0x1bc
0x000000000056f2d8 : mov esp, 0xbe007033 ; nop ; xor esi, dword ptr [rax] ; call rax
0x00000000007abec4 : mov esp, 0xc4000607 ; in eax, dx ; jmp qword ptr [rsi]
0x000000000077cec4 : mov esp, 0xc8000317 ; xchg ch, bl ; call qword ptr [rbx]
0x000000000061abb0 : mov esp, 0xc9000a67 ; ret
0x00000000004989f0 : mov esp, 0xc900225e ; ret
0x000000000042c710 : mov esp, 0xc900293f ; ret
0x0000000000757415 : mov esp, 0xd1e40000 ; iretd ; call rcx
0x000000000079bbc4 : mov esp, 0xd4000504 ; ja 0x79bbb9 ; jmp rdx
0x0000000000773bc4 : mov esp, 0xd8000284 ; jae 0x773bad ; jmp qword ptr [rdx]
0x0000000000785104 : mov esp, 0xd8000399 ; fcmovnu st(0), st(7) ; jmp rcx
0x000000000074d704 : mov esp, 0xe00001f ; jbe 0x74d6de ; call rdx
0x00000000007662c4 : mov esp, 0xe80001ab ; retf
0x0000000000784804 : mov esp, 0xe8000390 ; ret
0x00000000005258f0 : mov esp, 0xebffffe6 ; fisttp dword ptr [rax - 0x77] ; ret
0x0000000000766104 : mov esp, 0xf40001a9 ; ret
0x00000000007aa5c4 : mov esp, 0xf80005ee ; retf
0x00000000007f0269 : mov esp, 0xffe050f ; add dh, al ; syscall
0x00000000006a3af9 : mov esp, 0xffefc705 ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000006a3b54 : mov esp, 0xffefc70d ; dec dword ptr [rax - 0x7d] ; ret 0x4c01
0x00000000005b7faf : mov esp, 0xfffbd015 ; jmp qword ptr [rbx]
0x0000000000573946 : mov esp, 1 ; call 0x67fb59
0x00000000004a2a39 : mov esp, 1 ; call 0x6bed07
0x00000000005d4bd4 : mov esp, 1 ; jmp 0x5d4ba4
0x00000000005e1aad : mov esp, 1 ; jmp 0x5e1a7d
0x00000000004805cb : mov esp, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x8b49
0x0000000000427c8c : mov esp, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x858b
0x00000000006a83d6 : mov esp, dword ptr [rdx + 0x48000035] ; mov eax, edx ; ret
0x0000000000721a38 : mov esp, dword ptr [rdx - 6] ; outsb dx, byte ptr [rsi] ; retf -0x1ead
0x00000000004959f8 : mov esp, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000516c6b : mov esp, dword ptr [rsi - 0x76b7ffea] ; ret
0x0000000000626676 : mov esp, eax ; call qword ptr [rip + 0x3dc26a]
0x00000000005c5e26 : mov esp, eax ; call qword ptr [rip + 0x43caba]
0x00000000005b66ad : mov esp, eax ; call qword ptr [rip + 0x44c233]
0x00000000005965f6 : mov esp, eax ; call qword ptr [rip + 0x46c2ea]
0x00000000005565ed : mov esp, eax ; call qword ptr [rip + 0x4ac2f3]
0x0000000000526667 : mov esp, eax ; call qword ptr [rip + 0x4dc279]
0x00000000005badfe : mov esp, eax ; jmp 0x5badc8
0x000000000043d87f : mov esp, eax ; mov eax, 1 ; jmp 0x43d85b
0x0000000000448851 : mov esp, eax ; mov eax, 1 ; jmp 0x44882d
0x0000000000459505 : mov esp, eax ; mov eax, 1 ; jmp 0x4594e1
0x00000000004622ff : mov esp, eax ; mov eax, 1 ; jmp 0x4622db
0x000000000046bfff : mov esp, eax ; mov eax, 1 ; jmp 0x46bfdb
0x000000000049c37b : mov esp, eax ; mov eax, 1 ; jmp 0x49c357
0x00000000005c38c7 : mov esp, eax ; mov rdi, rax ; xor eax, eax ; call 0x67fb59
0x000000000053bfce : mov esp, ebp ; dec dword ptr [rax - 0x77] ; ret
0x00000000006d4651 : mov esp, ecx ; ret
0x000000000068d84c : mov esp, edi ; mov esi, eax ; mov rdi, rbp ; call 0x689b29
0x0000000000525e66 : mov esp, edx ; mov r14, r13 ; call qword ptr [rip + 0x4dca77]
0x00000000006078ee : mov esp, edx ; mov rbp, rax ; call rcx
0x0000000000501e6b : mov esp, edx ; push rbx ; mov rbp, rdi ; call 0x6be898
0x000000000067eec7 : mov esp, es ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xb8
0x0000000000501db1 : mov esp, esi ; call 0x6be8b4
0x00000000005badfb : mov esp, esp ; mov r12, rax ; jmp 0x5badcb
0x00000000007a8b94 : mov esp, ss ; add eax, 0xec492800 ; call qword ptr [rcx]
0x000000000078cec9 : mov fs, ecx ; call qword ptr [rax]
0x00000000004064ae : mov fs, edx ; sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000057f6cc : mov fs, esi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000741135 : mov fs, esi ; call rax
0x000000000078cec8 : mov fs, rcx ; call qword ptr [rax]
0x00000000005a991e : mov fs, word ptr [rax + 0xe] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000074cfc8 : mov fs, word ptr [rdi - 0x34] ; call rsp
0x000000000054ea88 : mov fs, word ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004956eb : mov fs, word ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004f06de : mov fs, word ptr [rsi - 0x76b7ffe7] ; ret
0x000000000060cd5f : mov gs, ebx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; retf
0x000000000074356d : mov gs, ebx ; call rax
0x00000000006d8f19 : mov gs, word ptr [rbp] ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; retf 0x9f
0x0000000000589bd4 : mov gs, word ptr [rdx + 0xf] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000480bfa : mov gs, word ptr [rsi] ; jmp rax
0x0000000000668021 : mov qword ptr [0xfffffffffffffff8], rdi ; ret
0x00000000005089ad : mov qword ptr [r15], rdx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000066cf7b : mov qword ptr [r8 + 0x20], r8 ; mov qword ptr [r8 + 0x28], r8 ; ret
0x000000000066cf7f : mov qword ptr [r8 + 0x28], r8 ; ret
0x000000000066cf64 : mov qword ptr [r8 + 0x28], rax ; ret
0x000000000054b9a9 : mov qword ptr [r8 + 8], rdx ; add rsp, 8 ; ret
0x000000000054acb0 : mov qword ptr [r8 + rsi + 0x18], rcx ; add rsp, 8 ; ret
0x000000000054b7bd : mov qword ptr [r8], rax ; add rsp, 8 ; ret
0x00000000004511b0 : mov qword ptr [rax + 0x10], 0 ; leave ; ret
0x000000000044fb63 : mov qword ptr [rax + 0x10], 0 ; pop rbp ; ret
0x000000000061d617 : mov qword ptr [rax + 0x10], 0x71b8d8 ; pop rbp ; ret
0x000000000059c5ab : mov qword ptr [rax + 0x10], rcx ; add rsp, 8 ; ret
0x00000000004517a7 : mov qword ptr [rax + 0x10], rdx ; leave ; ret
0x0000000000442e04 : mov qword ptr [rax + 0x10], rdx ; pop rbp ; ret
0x00000000006a89c9 : mov qword ptr [rax + 0x10], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000066cee6 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax], rcx ; ret
0x000000000052243d : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rsi], rax ; ret
0x000000000054a08b : mov qword ptr [rax + 0x10], rsi ; ret
0x0000000000414fdd : mov qword ptr [rax + 0x18], 0 ; leave ; ret
0x0000000000452f09 : mov qword ptr [rax + 0x18], 0 ; pop rbp ; ret
0x000000000054f747 : mov qword ptr [rax + 0x18], r14 ; pop rbx ; pop r13 ; pop r14 ; ret
0x00000000005386af : mov qword ptr [rax + 0x18], rdx ; add rsp, 0x28 ; ret
0x000000000044f0de : mov qword ptr [rax + 0x18], rdx ; pop rbp ; ret
0x0000000000676120 : mov qword ptr [rax + 0x1d0], rdi ; ret
0x0000000000676060 : mov qword ptr [rax + 0x1d8], rdi ; ret
0x000000000061d5e9 : mov qword ptr [rax + 0x20], 0x71b8d8 ; pop rbp ; ret
0x000000000066cf60 : mov qword ptr [rax + 0x20], r8 ; mov qword ptr [r8 + 0x28], rax ; ret
0x00000000004505d1 : mov qword ptr [rax + 0x20], rcx ; mov rax, rdx ; leave ; ret
0x00000000005075a1 : mov qword ptr [rax + 0x20], rdx ; add rsp, 0x38 ; ret
0x000000000052a2a6 : mov qword ptr [rax + 0x28], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000061b97f : mov qword ptr [rax + 0x28], rcx ; mov rax, rdx ; leave ; ret
0x000000000051dec3 : mov qword ptr [rax + 0x28], rdx ; add rsp, 0x38 ; ret
0x000000000052b0fa : mov qword ptr [rax + 0x28], rdx ; pop rbx ; ret
0x00000000006625f4 : mov qword ptr [rax + 0x30], rsi ; xor eax, eax ; ret
0x00000000004109a0 : mov qword ptr [rax + 0x38], rdx ; pop rbp ; ret
0x00000000006acc53 : mov qword ptr [rax + 0x38], rdx ; sub rsp, -0x80 ; pop rbx ; ret
0x00000000004209f0 : mov qword ptr [rax + 0x40], rdx ; pop rbp ; ret
0x000000000040bff7 : mov qword ptr [rax + 8], 0 ; leave ; ret
0x000000000066ce30 : mov qword ptr [rax + 8], rcx ; ret
0x000000000054a094 : mov qword ptr [rax + 8], rdi ; ret
0x000000000041370e : mov qword ptr [rax + 8], rdx ; leave ; ret
0x000000000066cec4 : mov qword ptr [rax + 8], rdx ; mov qword ptr [rax + 0x10], rsi ; ret
0x000000000066cdd5 : mov qword ptr [rax + 8], rdx ; mov qword ptr [rsi + 8], rcx ; ret
0x000000000061a5b6 : mov qword ptr [rax + 8], rdx ; pop rbp ; ret
0x000000000052220d : mov qword ptr [rax + 8], rsi ; mov qword ptr [rsi], rax ; ret
0x00000000006a898e : mov qword ptr [rax + 8], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000051aff0 : mov qword ptr [rax + rdx*8], rcx ; add rsp, 8 ; ret
0x000000000068fab4 : mov qword ptr [rax - 0x10], rcx ; add rsp, 8 ; ret
0x0000000000568c6c : mov qword ptr [rax - 8], rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006b22fa : mov qword ptr [rax - 8], rsi ; pop rbx ; ret
0x00000000006a4128 : mov qword ptr [rax*8 + 0xa09d78], rdi ; ret
0x00000000006a8532 : mov qword ptr [rax*8 + 0xa09ec0], rdi ; ret
0x00000000006a84ec : mov qword ptr [rax*8 + 0xa09ec0], rdx ; ret
0x0000000000455aa9 : mov qword ptr [rax], 0x6dec80 ; pop rbp ; ret
0x0000000000455c13 : mov qword ptr [rax], 0x6dee00 ; pop rbp ; ret
0x0000000000456145 : mov qword ptr [rax], 0x6def40 ; pop rbp ; ret
0x00000000005a3ba9 : mov qword ptr [rax], 0x70dd18 ; jne 0x5a3b99 ; ret
0x00000000006bfaca : mov qword ptr [rax], rbx ; pop rbx ; ret
0x000000000045070b : mov qword ptr [rax], rcx ; leave ; ret
0x000000000066ceea : mov qword ptr [rax], rcx ; ret
0x0000000000538cb4 : mov qword ptr [rax], rdx ; add rsp, 0x18 ; ret
0x0000000000455b77 : mov qword ptr [rax], rdx ; leave ; ret
0x000000000066ce2d : mov qword ptr [rax], rdx ; mov qword ptr [rax + 8], rcx ; ret
0x000000000040c1c8 : mov qword ptr [rax], rdx ; pop rbp ; ret
0x000000000068f038 : mov qword ptr [rax], rsi ; ret
0x0000000000663f8b : mov qword ptr [rbp + 0x68], rdx ; mov edx, 0x1730 ; call rax
0x00000000004eee1d : mov qword ptr [rbp - 0x10], rax ; leave ; ret
0x000000000040dbd6 : mov qword ptr [rbp - 0x10], rax ; mov qword ptr [rbp - 8], rdx ; leave ; ret
0x0000000000455d73 : mov qword ptr [rbp - 0x10], rax ; mov qword ptr [rbp - 8], rdx ; pop rbp ; ret
0x000000000066ae58 : mov qword ptr [rbp - 0x10], rsi ; mov dword ptr [rbp - 0x14], edx ; nop ; pop rbp ; ret
0x0000000000455aca : mov qword ptr [rbp - 0x10], rsi ; mov dword ptr [rbp - 0x14], edx ; pop rbp ; ret
0x000000000066ab77 : mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x000000000047f3fd : mov qword ptr [rbp - 0x18], r10 ; pop rbp ; ret
0x0000000000412660 : mov qword ptr [rbp - 0x30], rax ; call 0x6be896
0x0000000000549448 : mov qword ptr [rbp - 0x358], rsp ; call 0x5a5f59
0x0000000000548fb0 : mov qword ptr [rbp - 0x360], rsp ; call 0x5a5a59
0x00000000005f52ee : mov qword ptr [rbp - 0x38], r10 ; call 0x681538
0x00000000004b527a : mov qword ptr [rbp - 0x48], r10 ; call 0x681538
0x00000000005125e6 : mov qword ptr [rbp - 0x58], r9 ; call rax
0x000000000050dd35 : mov qword ptr [rbp - 0x88], rsp ; call 0x5fa809
0x00000000006c79f4 : mov qword ptr [rbp - 0xf8], rsp ; call 0x403c79
0x0000000000440110 : mov qword ptr [rbp - 8], rax ; leave ; ret
0x000000000066ae66 : mov qword ptr [rbp - 8], rdi ; mov dword ptr [rbp - 0xc], esi ; nop ; pop rbp ; ret
0x000000000066ac36 : mov qword ptr [rbp - 8], rdi ; nop ; pop rbp ; ret
0x000000000040ba6a : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040dbda : mov qword ptr [rbp - 8], rdx ; leave ; ret
0x0000000000455d77 : mov qword ptr [rbp - 8], rdx ; pop rbp ; ret
0x000000000050c99a : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000508e0e : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x00000000005048cd : mov qword ptr [rbx + 0x10], rax ; pop rbx ; ret
0x000000000066cfd4 : mov qword ptr [rbx + 0x10], rdx ; pop rbx ; ret
0x000000000052e7df : mov qword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x000000000051e8c0 : mov qword ptr [rbx + 0x18], rax ; call 0x51b2f6
0x000000000057794e : mov qword ptr [rbx + 0x18], rax ; call 0x573ba6
0x00000000005c3b37 : mov qword ptr [rbx + 0x18], rax ; mov rax, rbx ; pop rbx ; ret
0x00000000005412c5 : mov qword ptr [rbx + 0x20], 0 ; pop rbx ; ret
0x00000000005426b7 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006beb73 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x00000000005c68b3 : mov qword ptr [rbx + 0x458], rax ; pop rbx ; ret
0x00000000005b8450 : mov qword ptr [rbx + 0x460], rax ; pop rbx ; ret
0x00000000006c05a1 : mov qword ptr [rbx + 0x48], 0 ; pop rbx ; ret
0x00000000006ab6b5 : mov qword ptr [rbx + 0x50], rax ; add rsp, 0x30 ; pop rbx ; ret
0x000000000068e80d : mov qword ptr [rbx + 0x58], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000053b639 : mov qword ptr [rbx + 8], 0 ; pop rbx ; ret
0x0000000000630645 : mov qword ptr [rbx + 8], rax ; add rsp, 0x50 ; pop rbx ; ret
0x000000000066cfd0 : mov qword ptr [rbx + 8], rax ; mov qword ptr [rbx + 0x10], rdx ; pop rbx ; ret
0x00000000006b3e8c : mov qword ptr [rbx + 8], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000066d005 : mov qword ptr [rbx + 8], rdx ; pop rbx ; ret
0x00000000006cc455 : mov qword ptr [rbx], rax ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000626d7b : mov qword ptr [rbx], rax ; add rsp, 0x50 ; pop rbx ; ret
0x00000000006588a1 : mov qword ptr [rbx], rax ; mov eax, edx ; pop rbx ; ret
0x000000000066d002 : mov qword ptr [rbx], rax ; mov qword ptr [rbx + 8], rdx ; pop rbx ; ret
0x00000000005f858c : mov qword ptr [rbx], rax ; mov rdi, rbp ; call 0x674838
0x000000000053e587 : mov qword ptr [rbx], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006bc5bc : mov qword ptr [rcx + 0x18], rax ; ret
0x000000000066cf46 : mov qword ptr [rcx + 0x20], r8 ; ret
0x000000000066cd44 : mov qword ptr [rcx + 0x28], 0 ; ret
0x0000000000519d3b : mov qword ptr [rcx + rax*8 + 0x10], rdx ; add rsp, 8 ; ret
0x00000000006164ed : mov qword ptr [rcx + rsi*8 + 8], rdx ; leave ; ret
0x00000000005484e4 : mov qword ptr [rcx], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006d4300 : mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x0000000000532127 : mov qword ptr [rdi + 0x10], 0 ; ret
0x000000000053d0d1 : mov qword ptr [rdi + 0x10], 0x6f9de0 ; ret
0x000000000054a090 : mov qword ptr [rdi + 0x10], rax ; mov qword ptr [rax + 8], rdi ; ret
0x00000000005bd1d1 : mov qword ptr [rdi + 0x10], rax ; mov qword ptr [rdi + 0x18], rax ; ret
0x00000000006bfe14 : mov qword ptr [rdi + 0x10], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000050fb9e : mov qword ptr [rdi + 0x10], rax ; ret
0x000000000054dbbf : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], eax ; ret
0x00000000006b2550 : mov qword ptr [rdi + 0x10], rdx ; mov qword ptr [rdi + 0x18], rcx ; ret
0x000000000050f730 : mov qword ptr [rdi + 0x10], rsi ; ret
0x000000000062cea6 : mov qword ptr [rdi + 0x12d0], rsi ; ret
0x000000000062cb40 : mov qword ptr [rdi + 0x12d8], rsi ; ret
0x00000000006cc2ea : mov qword ptr [rdi + 0x18], -1 ; ret
0x000000000050bce7 : mov qword ptr [rdi + 0x18], 0 ; ret
0x000000000053208c : mov qword ptr [rdi + 0x18], 0x6f30a4 ; ret
0x0000000000542a33 : mov qword ptr [rdi + 0x18], 0x6fac20 ; ret
0x00000000005502dc : mov qword ptr [rdi + 0x18], 0x6fc8b0 ; ret
0x00000000005a55a3 : mov qword ptr [rdi + 0x18], 0x70fa10 ; ret
0x00000000005bd1d5 : mov qword ptr [rdi + 0x18], rax ; ret
0x00000000006b2554 : mov qword ptr [rdi + 0x18], rcx ; ret
0x00000000006bf373 : mov qword ptr [rdi + 0x18], rdx ; add rsp, 8 ; ret
0x0000000000536f45 : mov qword ptr [rdi + 0x18], rdx ; ret
0x000000000065e1f0 : mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x20], edx ; ret
0x000000000050b5d0 : mov qword ptr [rdi + 0x18], rsi ; ret
0x00000000005589cf : mov qword ptr [rdi + 0x20], 0 ; ret
0x00000000006a7d74 : mov qword ptr [rdi + 0x20], rax ; mov qword ptr [rdi + 0x18], rax ; ret
0x0000000000506c0d : mov qword ptr [rdi + 0x20], rdx ; ret
0x0000000000558310 : mov qword ptr [rdi + 0x20], rsi ; ret
0x0000000000504b1c : mov qword ptr [rdi + 0x28], 0 ; ret
0x0000000000542997 : mov qword ptr [rdi + 0x28], 1 ; ret
0x00000000005418dc : mov qword ptr [rdi + 0x28], rax ; add rsp, 8 ; ret
0x000000000063195a : mov qword ptr [rdi + 0x28], rdx ; add rsp, 8 ; ret
0x0000000000518115 : mov qword ptr [rdi + 0x28], rdx ; ret
0x0000000000541945 : mov qword ptr [rdi + 0x28], rsi ; add rsp, 8 ; ret
0x00000000006a7e10 : mov qword ptr [rdi + 0x28], rsi ; ret
0x000000000052db0b : mov qword ptr [rdi + 0x30], 0 ; ret
0x00000000006b2523 : mov qword ptr [rdi + 0x30], rax ; ret
0x000000000054a1d0 : mov qword ptr [rdi + 0x358], rsi ; ret
0x00000000006aaae0 : mov qword ptr [rdi + 0x38], 0 ; ret
0x00000000005a8c33 : mov qword ptr [rdi + 0x38], 0x70ff70 ; ret
0x0000000000504f04 : mov qword ptr [rdi + 0x38], 1 ; ret
0x0000000000632dc3 : mov qword ptr [rdi + 0x40], rax ; ret
0x000000000065e1e4 : mov qword ptr [rdi + 0x40], rdx ; mov qword ptr [rdi + 0x48], rcx ; ret
0x000000000065e0dd : mov qword ptr [rdi + 0x48], 0 ; ret
0x000000000065e1e8 : mov qword ptr [rdi + 0x48], rcx ; ret
0x00000000005051e8 : mov qword ptr [rdi + 0x50], 0 ; ret
0x0000000000632dbf : mov qword ptr [rdi + 0x50], rcx ; mov qword ptr [rdi + 0x40], rax ; ret
0x0000000000667790 : mov qword ptr [rdi + 0x68], 0 ; ret
0x00000000005b47f9 : mov qword ptr [rdi + 0x728], rsi ; ret
0x00000000005b4799 : mov qword ptr [rdi + 0x758], rsi ; ret
0x00000000005b4769 : mov qword ptr [rdi + 0x788], rsi ; ret
0x000000000066de0c : mov qword ptr [rdi + 0x78], 0 ; ret
0x000000000066af1b : mov qword ptr [rdi + 0x78], rax ; ret
0x00000000005b47c9 : mov qword ptr [rdi + 0x7b8], rsi ; ret
0x00000000005b5339 : mov qword ptr [rdi + 0x7e8], rsi ; ret
0x00000000005b52d9 : mov qword ptr [rdi + 0x818], rsi ; ret
0x00000000005b52a9 : mov qword ptr [rdi + 0x848], rsi ; ret
0x00000000005b5309 : mov qword ptr [rdi + 0x878], rsi ; ret
0x00000000005b64a9 : mov qword ptr [rdi + 0x8a8], rsi ; ret
0x00000000005b6239 : mov qword ptr [rdi + 0x8d8], rsi ; ret
0x00000000006d4360 : mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000066c897 : mov qword ptr [rdi + 0xc50], rdx ; ret
0x00000000005072b2 : mov qword ptr [rdi + 8], 0 ; ret
0x000000000050bbe7 : mov qword ptr [rdi + 8], 0x6f0460 ; ret
0x00000000006740b2 : mov qword ptr [rdi + 8], 0x725cfc ; ret
0x0000000000689a8c : mov qword ptr [rdi + 8], 0xa096e0 ; ret
0x00000000005417bb : mov qword ptr [rdi + 8], rax ; ret
0x000000000054db37 : mov qword ptr [rdi + 8], rdi ; jne 0x54db48 ; xor eax, eax ; ret
0x000000000050f9ad : mov qword ptr [rdi + 8], rdx ; ret
0x000000000050bd5b : mov qword ptr [rdi + 8], rsi ; ret
0x00000000006b27fa : mov qword ptr [rdi + rax + 0x3f], rsi ; ret
0x00000000006b24ba : mov qword ptr [rdi + rax + 0x4f], 0 ; ret
0x0000000000674594 : mov qword ptr [rdi + rax*8 + 8], rdx ; ret
0x00000000006a600e : mov qword ptr [rdi + rax*8], 0 ; ret
0x0000000000674590 : mov qword ptr [rdi + rax*8], rsi ; mov qword ptr [rdi + rax*8 + 8], rdx ; ret
0x00000000006c6aaf : mov qword ptr [rdi + rax], 0x40 ; ret
0x00000000006b28f0 : mov qword ptr [rdi + rsi + 0x37], rdx ; ret
0x00000000006b28e0 : mov qword ptr [rdi + rsi + 0x3f], rdx ; ret
0x000000000050fc3b : mov qword ptr [rdi + rsi + 8], 0 ; ret
0x000000000050fc5b : mov qword ptr [rdi + rsi*8], 0 ; ret
0x00000000006d431a : mov qword ptr [rdi + rsi*8], rdx ; add rsp, 8 ; ret
0x000000000068fa99 : mov qword ptr [rdi - 8], r8 ; add rsp, 8 ; ret
0x000000000068ef3e : mov qword ptr [rdi*8 + 0xa096f8], rax ; pop rbx ; ret
0x0000000000550370 : mov qword ptr [rdi], 0 ; ret
0x0000000000503a85 : mov qword ptr [rdi], 0x6ee5a0 ; ret
0x0000000000504675 : mov qword ptr [rdi], 0x6ee7a0 ; ret
0x0000000000536dd5 : mov qword ptr [rdi], 0x6f9020 ; ret
0x0000000000539275 : mov qword ptr [rdi], 0x6f9660 ; ret
0x000000000062e1b5 : mov qword ptr [rdi], 0x71e500 ; ret
0x0000000000681a35 : mov qword ptr [rdi], 0x727e20 ; ret
0x00000000006819f5 : mov qword ptr [rdi], 0x727f80 ; ret
0x0000000000685f05 : mov qword ptr [rdi], 0x728cc0 ; ret
0x00000000006a5f75 : mov qword ptr [rdi], 0x72bd60 ; ret
0x00000000006a8c65 : mov qword ptr [rdi], 0x72c1a0 ; ret
0x00000000006b2345 : mov qword ptr [rdi], 0x72cf60 ; ret
0x00000000006bfc15 : mov qword ptr [rdi], 0x730220 ; ret
0x00000000006c6ec5 : mov qword ptr [rdi], 0x731820 ; ret
0x00000000006c6f45 : mov qword ptr [rdi], 0x731b00 ; ret
0x0000000000536f42 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 0x18], rdx ; ret
0x0000000000506c0a : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 0x20], rdx ; ret
0x0000000000518112 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 0x28], rdx ; ret
0x000000000050f9aa : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000068ef32 : mov qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000507dcf : mov qword ptr [rdi], rax ; ret
0x000000000065e1d0 : mov qword ptr [rdi], rsi ; mov dword ptr [rdi + 8], edx ; ret
0x00000000005260a0 : mov qword ptr [rdi], rsi ; ret
0x00000000006a84dc : mov qword ptr [rdx + 0x10], rax ; ret
0x000000000051af85 : mov qword ptr [rdx + 0x28], rcx ; add rsp, 8 ; ret
0x000000000066b7a4 : mov qword ptr [rdx + 0x458], rax ; ret
0x00000000005c4840 : mov qword ptr [rdx + 0x508], rcx ; pop rbx ; ret
0x000000000066ab66 : mov qword ptr [rdx + 0xca8], rax ; leave ; ret
0x00000000006cddb3 : mov qword ptr [rdx + 8], rsi ; ret
0x00000000006ad4fb : mov qword ptr [rdx + rax*8 - 8], rcx ; ret
0x0000000000777e54 : mov qword ptr [rdx], -0x23842800 ; jmp qword ptr [rdx]
0x00000000006cddaa : mov qword ptr [rdx], rax ; ret
0x000000000054b755 : mov qword ptr [rdx], rcx ; add rsp, 8 ; ret
0x00000000006cddb0 : mov qword ptr [rdx], rdi ; mov qword ptr [rdx + 8], rsi ; ret
0x00000000006b295b : mov qword ptr [rdx], rdx ; ret
0x00000000006bfbe0 : mov qword ptr [rip + 0x342ea1], rdi ; ret
0x00000000006bea70 : mov qword ptr [rip + 0x34e269], rdi ; ret
0x00000000006bea60 : mov qword ptr [rip + 0x34e271], rdi ; ret
0x00000000006a8432 : mov qword ptr [rip + 0x35a22f], rcx ; ret
0x00000000006a832d : mov qword ptr [rip + 0x35a334], rax ; ret
0x000000000069e536 : mov qword ptr [rip + 0x36b7eb], rax ; pop rbx ; ret
0x000000000069c77d : mov qword ptr [rip + 0x36d45c], rax ; pop rbx ; ret
0x000000000068ed12 : mov qword ptr [rip + 0x3736b7], rcx ; ret
0x000000000068ebfd : mov qword ptr [rip + 0x3737cc], rax ; ret
0x0000000000688266 : mov qword ptr [rip + 0x38142b], rax ; ret
0x00000000006699fe : mov qword ptr [rip + 0x3962f3], rdi ; call 0x675cc9
0x000000000066b7b3 : mov qword ptr [rip + 0x396616], rax ; ret
0x0000000000625118 : mov qword ptr [rip + 0x3da7b9], rax ; pop rbp ; ret
0x000000000062513a : mov qword ptr [rip + 0x3e3637], rax ; leave ; ret
0x00000000005b76a9 : mov qword ptr [rip + 0x44e4d8], rdi ; ret
0x00000000005b6d69 : mov qword ptr [rip + 0x44ec38], rdi ; ret
0x00000000005b6979 : mov qword ptr [rip + 0x44ef38], rdi ; ret
0x00000000005b6919 : mov qword ptr [rip + 0x44ef68], rdi ; ret
0x00000000005b49d9 : mov qword ptr [rip + 0x4511d8], rdi ; ret
0x000000000053da90 : mov qword ptr [rip + 0x4c03f9], rdi ; ret
0x00000000004ef17e : mov qword ptr [rip + 0x50e18b], rax ; pop rbp ; ret
0x00000000005221bc : mov qword ptr [rsi + 0x10], 0 ; ret
0x00000000006d606e : mov qword ptr [rsi + 0x28], rax ; ret
0x000000000054a087 : mov qword ptr [rsi + 8], rax ; mov qword ptr [rax + 0x10], rsi ; ret
0x000000000066cdd9 : mov qword ptr [rsi + 8], rcx ; ret
0x00000000006a8a4f : mov qword ptr [rsi + 8], rdi ; mov qword ptr [rdi], rsi ; ret
0x000000000066d409 : mov qword ptr [rsi + 8], rdi ; pop rbx ; pop r14 ; ret
0x000000000062efa2 : mov qword ptr [rsi + rax + 8], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006a8577 : mov qword ptr [rsi*8 + 0xa09ec0], rdi ; ret
0x00000000006ce9c3 : mov qword ptr [rsi], r8 ; ret
0x0000000000522211 : mov qword ptr [rsi], rax ; ret
0x00000000006cb784 : mov qword ptr [rsi], rcx ; jne 0x6cb771 ; add rsp, 8 ; ret
0x00000000006b2681 : mov qword ptr [rsi], rdx ; add rsp, 8 ; ret
0x00000000006d4a92 : mov qword ptr [rsp + 0x10], r9 ; mov rsi, qword ptr [r15] ; call r14
0x0000000000668020 : mov qword ptr fs:[0xfffffffffffffff8], rdi ; ret
0x000000000044ce94 : mov r10, qword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; call rax
0x0000000000503c61 : mov r10, qword ptr [rax - 1] ; mov rax, qword ptr [rax + 7] ; jmp rax
0x0000000000607458 : mov r10, qword ptr [rbp - 1] ; mov rax, qword ptr [rbp + 7] ; call rax
0x000000000056d177 : mov r10, qword ptr [rbx - 1] ; mov rbx, qword ptr [rbx + 7] ; nop ; call rbx
0x000000000056d6c7 : mov r10, qword ptr [rbx - 1] ; mov rcx, qword ptr [rbx + 7] ; nop ; call rcx
0x00000000004163ad : mov r10, qword ptr [rcx - 1] ; mov rcx, qword ptr [rcx + 7] ; call rcx
0x000000000062c2ec : mov r10, qword ptr [rdx - 1] ; mov rdx, qword ptr [rdx + 7] ; jmp 0x62c2ca
0x000000000047b87d : mov r10, r14 ; mov rdi, rax ; call 0x47837e
0x00000000004d23c1 : mov r10, r15 ; call 0x4ce6bb
0x00000000007266c6 : mov r10b, 0 ; retf 0x45a2
0x00000000005a94ef : mov r10b, 0x12 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042476b : mov r10b, 0x26 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004a16d3 : mov r10b, 0xff ; dec ecx ; ret
0x000000000054701e : mov r10d, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005657db : mov r11b, 0x11 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000479e9d : mov r11b, byte ptr [r8] ; call rax
0x0000000000508bf9 : mov r11d, 0x8948001c ; ret
0x00000000005b66ac : mov r12, rax ; call qword ptr [rip + 0x44c233]
0x00000000005badfd : mov r12, rax ; jmp 0x5badc9
0x000000000043d87e : mov r12, rax ; mov eax, 1 ; jmp 0x43d85c
0x0000000000448850 : mov r12, rax ; mov eax, 1 ; jmp 0x44882e
0x0000000000459504 : mov r12, rax ; mov eax, 1 ; jmp 0x4594e2
0x00000000004622fe : mov r12, rax ; mov eax, 1 ; jmp 0x4622dc
0x000000000046bffe : mov r12, rax ; mov eax, 1 ; jmp 0x46bfdc
0x000000000049c37a : mov r12, rax ; mov eax, 1 ; jmp 0x49c358
0x0000000000525e65 : mov r12, rdx ; mov r14, r13 ; call qword ptr [rip + 0x4dca77]
0x0000000000501e6a : mov r12, rdx ; push rbx ; mov rbp, rdi ; call 0x6be899
0x00000000004c3189 : mov r12b, 0x1f ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004876e6 : mov r12b, 0x29 ; ret 0xd089
0x00000000006bd7b0 : mov r12b, 0x39 ; retf
0x00000000004c8b4f : mov r12b, 0x48 ; mov eax, dword ptr [rip + 0x539d90] ; call rax
0x00000000004c3025 : mov r12b, 0x48 ; mov eax, dword ptr [rip + 0x53f8ba] ; call rax
0x000000000067ac26 : mov r12b, 0xe8 ; sar dword ptr [rax - 0x76b7fffe], cl ; ret 0xc148
0x0000000000442fad : mov r12d, 0x29489848 ; ret 0x8948
0x0000000000498060 : mov r12d, 0x39489848 ; ret 0x147d
0x0000000000423f1f : mov r12d, 0x89480025 ; ret
0x00000000004880cd : mov r12d, 0x89489848 ; ret 0x8d48
0x0000000000573945 : mov r12d, 1 ; call 0x67fb5a
0x00000000004a2a38 : mov r12d, 1 ; call 0x6bed08
0x00000000005d4bd3 : mov r12d, 1 ; jmp 0x5d4ba5
0x00000000005e1aac : mov r12d, 1 ; jmp 0x5e1a7e
0x0000000000721a37 : mov r12d, dword ptr [r10 - 6] ; outsb dx, byte ptr [rsi] ; retf -0x1ead
0x0000000000626675 : mov r12d, eax ; call qword ptr [rip + 0x3dc26a]
0x00000000005c5e25 : mov r12d, eax ; call qword ptr [rip + 0x43caba]
0x00000000005965f5 : mov r12d, eax ; call qword ptr [rip + 0x46c2ea]
0x00000000005565ec : mov r12d, eax ; call qword ptr [rip + 0x4ac2f3]
0x0000000000526666 : mov r12d, eax ; call qword ptr [rip + 0x4dc279]
0x00000000006078ed : mov r12d, edx ; mov rbp, rax ; call rcx
0x00000000004b5277 : mov r13, r10 ; mov qword ptr [rbp - 0x48], r10 ; call 0x68153b
0x000000000040ce54 : mov r13, rax ; mov ebx, 1 ; jmp 0x40ce2a
0x0000000000413907 : mov r13, rax ; mov ebx, 1 ; jmp 0x4138dd
0x00000000004140a7 : mov r13, rax ; mov ebx, 1 ; jmp 0x41407d
0x000000000041c948 : mov r13, rax ; mov ebx, 1 ; jmp 0x41c91e
0x0000000000422d79 : mov r13, rax ; mov ebx, 1 ; jmp 0x422d4f
0x0000000000423519 : mov r13, rax ; mov ebx, 1 ; jmp 0x4234ef
0x000000000042b93a : mov r13, rax ; mov ebx, 1 ; jmp 0x42b910
0x0000000000432399 : mov r13, rax ; mov ebx, 1 ; jmp 0x43236f
0x0000000000432b39 : mov r13, rax ; mov ebx, 1 ; jmp 0x432b0f
0x000000000044fe0f : mov r13, rax ; mov ebx, 1 ; jmp 0x44fde5
0x00000000004509d9 : mov r13, rax ; mov ebx, 1 ; jmp 0x4509af
0x00000000004519d1 : mov r13, rax ; mov ebx, 1 ; jmp 0x4519a7
0x00000000004531b5 : mov r13, rax ; mov ebx, 1 ; jmp 0x45318b
0x0000000000453d7f : mov r13, rax ; mov ebx, 1 ; jmp 0x453d55
0x0000000000455249 : mov r13, rax ; mov ebx, 1 ; jmp 0x45521f
0x000000000047169f : mov r13, rax ; mov ebx, 1 ; jmp 0x471675
0x0000000000472269 : mov r13, rax ; mov ebx, 1 ; jmp 0x47223f
0x00000000004a1d69 : mov r13, rax ; mov ebx, 1 ; jmp 0x4a1d3f
0x00000000004a2933 : mov r13, rax ; mov ebx, 1 ; jmp 0x4a2909
0x00000000004b58cb : mov r13, rax ; mov ebx, 1 ; jmp 0x4b58a1
0x00000000004b6495 : mov r13, rax ; mov ebx, 1 ; jmp 0x4b646b
0x00000000004b7b31 : mov r13, rax ; mov ebx, 1 ; jmp 0x4b7b07
0x00000000004b86fb : mov r13, rax ; mov ebx, 1 ; jmp 0x4b86d1
0x00000000004c23f5 : mov r13, rax ; mov ebx, 1 ; jmp 0x4c23cb
0x00000000004c3611 : mov r13, rax ; mov ebx, 1 ; jmp 0x4c35e7
0x00000000005cd087 : mov r13, rax ; mov ebx, 1 ; jmp 0x5cd05d
0x00000000005cd2b5 : mov r13, rax ; mov ebx, 1 ; jmp 0x5cd28b
0x00000000005cd4e3 : mov r13, rax ; mov ebx, 1 ; jmp 0x5cd4b9
0x00000000005cd708 : mov r13, rax ; mov ebx, 1 ; jmp 0x5cd6de
0x00000000005d9bdd : mov r13, rax ; mov ebx, 1 ; jmp 0x5d9bb3
0x00000000005d9e0b : mov r13, rax ; mov ebx, 1 ; jmp 0x5d9de1
0x00000000005da039 : mov r13, rax ; mov ebx, 1 ; jmp 0x5da00f
0x00000000005da25e : mov r13, rax ; mov ebx, 1 ; jmp 0x5da234
0x00000000005e7f3f : mov r13, rax ; mov ebx, 1 ; jmp 0x5e7f15
0x00000000005e86f9 : mov r13, rax ; mov ebx, 1 ; jmp 0x5e86cf
0x00000000005eb257 : mov r13, rax ; mov ebx, 1 ; jmp 0x5eb22d
0x00000000005eba11 : mov r13, rax ; mov ebx, 1 ; jmp 0x5eb9e7
0x0000000000615b5a : mov r13, rax ; mov ebx, 1 ; jmp 0x615b30
0x000000000061b19d : mov r13, rax ; mov ebx, 1 ; jmp 0x61b173
0x000000000061bdab : mov r13, rax ; mov ebx, 1 ; jmp 0x61bd81
0x00000000005ad466 : mov r13, rbx ; call 0x5a9e95
0x00000000005b3122 : mov r13, rdx ; call 0x67fb57
0x000000000050457d : mov r13b, 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006091f5 : mov r13b, 0xc ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000524abe : mov r13d, eax ; call 0x681537
0x00000000006b660a : mov r13d, eax ; call qword ptr [rip + 0x34c2d5]
0x00000000005666cc : mov r13d, eax ; call qword ptr [rip + 0x49c213]
0x000000000055665d : mov r13d, eax ; call qword ptr [rip + 0x4ac282]
0x0000000000515e2a : mov r13d, eax ; call qword ptr [rip + 0x4ecab5]
0x00000000006d45a4 : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000525e68 : mov r14, r13 ; call qword ptr [rip + 0x4dca77]
0x000000000062a7cd : mov r14, rax ; call 0x6272a5
0x00000000005b5e43 : mov r14, rax ; call qword ptr [rip + 0x44ca9c]
0x000000000040d564 : mov r14, rax ; mov eax, 1 ; jmp 0x40d53a
0x0000000000410d50 : mov r14, rax ; mov eax, 1 ; jmp 0x410d26
0x000000000041d063 : mov r14, rax ; mov eax, 1 ; jmp 0x41d039
0x0000000000420da3 : mov r14, rax ; mov eax, 1 ; jmp 0x420d79
0x000000000042c04a : mov r14, rax ; mov eax, 1 ; jmp 0x42c020
0x000000000042f836 : mov r14, rax ; mov eax, 1 ; jmp 0x42f80c
0x00000000005cf360 : mov r14, rax ; mov eax, 1 ; jmp 0x5cf336
0x00000000005d4be0 : mov r14, rax ; mov eax, 1 ; jmp 0x5d4bbe
0x00000000005d7f6a : mov r14, rax ; mov eax, 1 ; jmp 0x5d7f40
0x00000000005dbfcb : mov r14, rax ; mov eax, 1 ; jmp 0x5dbfa1
0x00000000005e1ab9 : mov r14, rax ; mov eax, 1 ; jmp 0x5e1a97
0x00000000005e545b : mov r14, rax ; mov eax, 1 ; jmp 0x5e5431
0x0000000000478a3f : mov r14, rax ; mov ebx, 1 ; jmp 0x478a15
0x00000000005cf581 : mov r14, rax ; mov ebx, 1 ; jmp 0x5cf557
0x00000000005d818c : mov r14, rax ; mov ebx, 1 ; jmp 0x5d8162
0x00000000005dc1fa : mov r14, rax ; mov ebx, 1 ; jmp 0x5dc1d0
0x00000000005e568b : mov r14, rax ; mov ebx, 1 ; jmp 0x5e5661
0x00000000006143c6 : mov r14, rax ; mov ebx, 1 ; jmp 0x61439c
0x000000000061486e : mov r14, rax ; mov ebx, 1 ; jmp 0x614844
0x00000000005b310a : mov r14, rdx ; call 0x67fb57
0x00000000005a90ef : mov r14b, 0x12 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000432a8a : mov r14d, 1 ; call 0x6bed08
0x00000000006965f0 : mov r14d, eax ; call qword ptr [rip + 0x36c2ef]
0x0000000000695eb4 : mov r14d, eax ; call qword ptr [rip + 0x36ca2b]
0x00000000006466cc : mov r14d, eax ; call qword ptr [rip + 0x3bc213]
0x0000000000645ec5 : mov r14d, eax ; call qword ptr [rip + 0x3bca1a]
0x0000000000555ebf : mov r14d, eax ; call qword ptr [rip + 0x4aca20]
0x00000000006d45a8 : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000069a1d7 : mov r15d, 1 ; jmp 0x696c4b
0x000000000069ac50 : mov r15d, 1 ; jmp 0x69775a
0x0000000000695e8d : mov r15d, eax ; call qword ptr [rip + 0x36ca52]
0x00000000005b5e64 : mov r15d, eax ; call qword ptr [rip + 0x44ca7b]
0x00000000004e4ac9 : mov r8, r12 ; call r11
0x00000000004b1552 : mov r8, r9 ; call rax
0x00000000004e76bb : mov r8, rbx ; call r11
0x00000000004b1944 : mov r8, rbx ; call rax
0x0000000000584961 : mov r8b, 0x10 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000555691 : mov r8b, 0x12 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000434151 : mov r8b, 0x2c ; ret
0x00000000004424c8 : mov r8b, 0x40 ; retf
0x0000000000614761 : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x3ee17e] ; call rax
0x00000000006144f5 : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x3ee3ea] ; call rax
0x00000000006142b9 : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x3ee626] ; call rax
0x0000000000613dd2 : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x3eeb0d] ; call rax
0x00000000005e57b9 : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x41d126] ; call rax
0x00000000005e557e : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x41d361] ; call rax
0x00000000005e530d : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x41d5d2] ; call rax
0x00000000005e198e : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x420f51] ; call rax
0x00000000005e0321 : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x4225be] ; call rax
0x00000000005dc0ee : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x4267f1] ; call rax
0x00000000005db345 : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x42759a] ; call rax
0x00000000005da44b : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x428494] ; call rax
0x00000000005d82bb : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x42a624] ; call rax
0x00000000005d808c : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x42a853] ; call rax
0x00000000005d7e29 : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x42aab6] ; call rax
0x00000000005d4ac2 : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x42de1d] ; call rax
0x00000000005d347b : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x42f464] ; call rax
0x00000000005cf482 : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x43345d] ; call rax
0x00000000005ce757 : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x434188] ; call rax
0x00000000005cd8f5 : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x434fea] ; call rax
0x000000000049d33e : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x5655a1] ; call rax
0x0000000000473547 : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x58f398] ; call rax
0x000000000046cfbc : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x595923] ; call rax
0x00000000004632bc : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x59f623] ; call rax
0x000000000045e26d : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x5a4672] ; call rax
0x000000000045a4be : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x5a8421] ; call rax
0x000000000044d691 : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x5b524e] ; call rax
0x000000000044980a : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x5b90d5] ; call rax
0x000000000043e8ca : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x5c4015] ; call rax
0x000000000042f955 : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x5d2f8a] ; call rax
0x000000000042f6d9 : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x5d3206] ; call rax
0x000000000042cb45 : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x5d5d9a] ; call rax
0x000000000042beed : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x5d69f2] ; call rax
0x0000000000420ec3 : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x5e1a1c] ; call rax
0x0000000000420c43 : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x5e1c9c] ; call rax
0x000000000041db77 : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x5e4d68] ; call rax
0x000000000041cf03 : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x5e59dc] ; call rax
0x0000000000410e6f : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x5f1a70] ; call rax
0x0000000000410bf3 : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x5f1cec] ; call rax
0x000000000040e05f : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x5f4880] ; call rax
0x000000000040d407 : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x5f54d8] ; call rax
0x0000000000408c14 : mov r8b, 0x48 ; mov eax, dword ptr [rip + 0x5f9ccb] ; call rax
0x0000000000621ebf : mov r8b, 0x88 ; fxch st(0), st(1) ; ret
0x00000000005d974f : mov r8b, 0x8b ; add al, 0x89 ; ret 0x8b48
0x000000000043bea4 : mov r8b, 0x8b ; push rbp ; fmul qword ptr [rax + 0x29] ; retf -0x74b8
0x00000000004a71d8 : mov r8d, 0x29489848 ; ret 0x8948
0x00000000004f01b0 : mov r8d, 0x3904408b ; ret 0x277e
0x00000000004a62ee : mov r8d, 0x39489848 ; ret 0x147d
0x000000000048672d : mov r8d, 0x39489848 ; ret 0x8d0f
0x0000000000486669 : mov r8d, 0x39489848 ; ret 0x8f0f
0x000000000047f5a0 : mov r8d, 0x3f058b48 ; xor ebx, dword ptr [rax] ; call rax
0x0000000000620864 : mov r8d, 0x68c48348 ; pop rbx ; pop rbp ; ret
0x00000000004e5457 : mov r8d, 0x8901c083 ; ret 0x8b49
0x00000000006452a3 : mov r8d, 0x89480003 ; ret
0x00000000005fc036 : mov r8d, 0x8b8 ; add byte ptr [rdi], cl ; ret
0x00000000004424c4 : mov r8d, 0xb045c748 ; retf
0x0000000000413fd4 : mov r8d, 0xb058b48 ; jmp 0xffffffffd1404046
0x00000000005df0d3 : mov r8d, 0xc058b48 ; cmp byte ptr [rdx], al ; call rax
0x0000000000451902 : mov r8d, 0xdd058b48 ; cvtdq2ps xmm0, xmmword ptr [rax] ; call rax
0x000000000040bbe3 : mov r8d, 0xe8c78948 ; ret
0x000000000044f844 : mov r8d, 0xe8c78948 ; ret 0x2742
0x000000000066a05f : mov r8d, 0xe8c78948 ; retf
0x0000000000424bf6 : mov r8d, 0xe9058b48 ; fcomp qword ptr [rbp] ; call rax
0x000000000061e116 : mov r8d, 0xf85d8b48 ; leave ; ret
0x00000000006a8fab : mov r8d, 5 ; ret
0x000000000069ccf0 : mov r8d, dword ptr [rcx - 0x3f] ; ret 0x4707
0x00000000004b193e : mov r9, r8 ; mov rcx, r11 ; mov r8, rbx ; call rax
0x00000000004b7799 : mov r9b, 0x54 ; add bh, bh ; ror cl, 1 ; ret
0x00000000006b3650 : mov r9b, 0xf8 ; add ecx, dword ptr [rax + 0x29] ; retf -0x67b8
0x00000000006609c0 : mov rax, -0x10000 ; ret
0x0000000000504630 : mov rax, -1 ; ret
0x00000000004f0c5f : mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; nop ; leave ; ret
0x00000000006a84d8 : mov rax, qword ptr [rax + 0x10] ; mov qword ptr [rdx + 0x10], rax ; ret
0x0000000000442108 : mov rax, qword ptr [rax + 0x10] ; nop ; pop rbp ; ret
0x00000000005044a8 : mov rax, qword ptr [rax + 0x10] ; test al, 1 ; jne 0x5044ba ; jmp rax
0x00000000005194cc : mov rax, qword ptr [rax + 0x10] ; test al, 1 ; jne 0x5194de ; jmp rax
0x000000000054aabc : mov rax, qword ptr [rax + 0x10] ; test al, 1 ; jne 0x54aace ; jmp rax
0x000000000044c7ae : mov rax, qword ptr [rax + 0x18] ; nop ; pop rbp ; ret
0x000000000068f064 : mov rax, qword ptr [rax + 0x18] ; ret
0x0000000000519492 : mov rax, qword ptr [rax + 0x18] ; test al, 1 ; jne 0x5194a4 ; jmp rax
0x000000000054aa82 : mov rax, qword ptr [rax + 0x18] ; test al, 1 ; jne 0x54aa94 ; jmp rax
0x00000000006bfca3 : mov rax, qword ptr [rax + 0x18] ; test al, 1 ; jne 0x6bfcb5 ; jmp rax
0x0000000000676160 : mov rax, qword ptr [rax + 0x1d0] ; ret
0x00000000006760e0 : mov rax, qword ptr [rax + 0x1d8] ; ret
0x000000000068f034 : mov rax, qword ptr [rax + 0x20] ; mov qword ptr [rax], rsi ; ret
0x000000000068eda4 : mov rax, qword ptr [rax + 0x20] ; mov rax, qword ptr [rax] ; ret
0x00000000005198d9 : mov rax, qword ptr [rax + 0x20] ; ret
0x00000000006bfcc3 : mov rax, qword ptr [rax + 0x20] ; test al, 1 ; jne 0x6bfcd5 ; jmp rax
0x00000000005290e2 : mov rax, qword ptr [rax + 0x28] ; add rsp, 8 ; ret
0x00000000005198a9 : mov rax, qword ptr [rax + 0x28] ; ret
0x0000000000563b89 : mov rax, qword ptr [rax + 0x30] ; mov eax, dword ptr [rax] ; ret
0x0000000000519849 : mov rax, qword ptr [rax + 0x30] ; mov rax, qword ptr [rax] ; ret
0x000000000051930c : mov rax, qword ptr [rax + 0x30] ; test al, 1 ; jne 0x51932b ; jmp rax
0x000000000054a90c : mov rax, qword ptr [rax + 0x30] ; test al, 1 ; jne 0x54a92b ; jmp rax
0x000000000054badc : mov rax, qword ptr [rax + 0x30] ; test al, 1 ; jne 0x54bafb ; jmp rax
0x000000000068f9fc : mov rax, qword ptr [rax + 0x30] ; test al, 1 ; jne 0x68fa0e ; jmp rax
0x000000000051950c : mov rax, qword ptr [rax + 0x38] ; test al, 1 ; jne 0x51952b ; jmp rax
0x000000000054aafc : mov rax, qword ptr [rax + 0x38] ; test al, 1 ; jne 0x54ab1b ; jmp rax
0x000000000068fba7 : mov rax, qword ptr [rax + 0x40] ; mov byte ptr [rax + rsi*8], dl ; ret
0x000000000068fb67 : mov rax, qword ptr [rax + 0x40] ; mov dword ptr [rax + rsi*8 - 4], edx ; ret
0x000000000068f517 : mov rax, qword ptr [rax + 0x40] ; mov eax, dword ptr [rax + rsi*8 - 4] ; ret
0x000000000068f527 : mov rax, qword ptr [rax + 0x40] ; movzx eax, byte ptr [rax + rsi*8] ; ret
0x000000000068f094 : mov rax, qword ptr [rax + 0x40] ; ret
0x00000000005135d0 : mov rax, qword ptr [rax + 0x40] ; test al, 1 ; jne 0x5135e2 ; jmp rax
0x000000000051944c : mov rax, qword ptr [rax + 0x40] ; test al, 1 ; jne 0x51945e ; jmp rax
0x000000000054aa3c : mov rax, qword ptr [rax + 0x40] ; test al, 1 ; jne 0x54aa4e ; jmp rax
0x0000000000519340 : mov rax, qword ptr [rax + 0x48] ; test al, 1 ; jne 0x51936a ; call rax
0x0000000000519380 : mov rax, qword ptr [rax + 0x48] ; test al, 1 ; jne 0x5193b4 ; call rax
0x00000000005193d0 : mov rax, qword ptr [rax + 0x48] ; test al, 1 ; jne 0x5193fb ; call rax
0x0000000000519410 : mov rax, qword ptr [rax + 0x48] ; test al, 1 ; jne 0x51943e ; call rax
0x000000000054a940 : mov rax, qword ptr [rax + 0x48] ; test al, 1 ; jne 0x54a96a ; call rax
0x000000000054a980 : mov rax, qword ptr [rax + 0x48] ; test al, 1 ; jne 0x54a9a8 ; call rax
0x000000000054a9c0 : mov rax, qword ptr [rax + 0x48] ; test al, 1 ; jne 0x54a9eb ; call rax
0x000000000054aa00 : mov rax, qword ptr [rax + 0x48] ; test al, 1 ; jne 0x54aa2e ; call rax
0x000000000068fa1f : mov rax, qword ptr [rax + 0x50] ; ret
0x00000000006bfd17 : mov rax, qword ptr [rax + 0x50] ; test al, 1 ; jne 0x6bfd29 ; jmp rax
0x00000000006bfdd7 : mov rax, qword ptr [rax + 0x50] ; test al, 1 ; jne 0x6bfde9 ; jmp rax
0x00000000006c03c7 : mov rax, qword ptr [rax + 0x50] ; test al, 1 ; jne 0x6c03d9 ; jmp rax
0x000000000051358c : mov rax, qword ptr [rax + 0x58] ; test al, 1 ; jne 0x51359e ; jmp rax
0x00000000006bfdf7 : mov rax, qword ptr [rax + 0x58] ; test al, 1 ; jne 0x6bfe09 ; jmp rax
0x00000000006c04aa : mov rax, qword ptr [rax + 0x58] ; test al, 1 ; jne 0x6c04bc ; jmp rax
0x000000000050faca : mov rax, qword ptr [rax + 0x70] ; test al, 1 ; jne 0x50fb3d ; call rax
0x00000000005133dc : mov rax, qword ptr [rax + 0x70] ; test al, 1 ; jne 0x5133ee ; jmp rax
0x0000000000518a3b : mov rax, qword ptr [rax + 0x70] ; test al, 1 ; jne 0x518ab9 ; call rax
0x000000000054a316 : mov rax, qword ptr [rax + 0x70] ; test al, 1 ; jne 0x54a396 ; call rax
0x0000000000513510 : mov rax, qword ptr [rax + 0x78] ; test al, 1 ; jne 0x513538 ; call rax
0x0000000000535690 : mov rax, qword ptr [rax + 0x78] ; test al, 1 ; jne 0x5356d0 ; call rax
0x0000000000535748 : mov rax, qword ptr [rax + 0x78] ; test al, 1 ; jne 0x5357b5 ; call rax
0x0000000000631a84 : mov rax, qword ptr [rax + 0x78] ; test al, 1 ; jne 0x631ac1 ; call rax
0x0000000000669d35 : mov rax, qword ptr [rax + 0xca8] ; nop ; pop rbp ; ret
0x000000000044ce98 : mov rax, qword ptr [rax + 7] ; call rax
0x0000000000503c65 : mov rax, qword ptr [rax + 7] ; jmp rax
0x000000000044f45c : mov rax, qword ptr [rax + 7] ; mov ecx, 1 ; call rax
0x0000000000404a5b : mov rax, qword ptr [rax + 7] ; mov esi, 1 ; call rax
0x0000000000655303 : mov rax, qword ptr [rax + 7] ; mov esi, 2 ; call rax
0x00000000004b154e : mov rax, qword ptr [rax + 7] ; mov r8, r9 ; call rax
0x0000000000536377 : mov rax, qword ptr [rax + 7] ; mov rdi, rbx ; call rax
0x000000000040f4fa : mov rax, qword ptr [rax + 7] ; mov rdi, rcx ; call rax
0x0000000000493dd4 : mov rax, qword ptr [rax + 7] ; mov rdi, rdx ; call rax
0x000000000045da8a : mov rax, qword ptr [rax + 7] ; mov rdx, rcx ; call rax
0x0000000000441919 : mov rax, qword ptr [rax + 7] ; mov rsi, rcx ; call rax
0x00000000005412f9 : mov rax, qword ptr [rax + 8] ; add rsp, 8 ; ret
0x0000000000618d4a : mov rax, qword ptr [rax + 8] ; nop ; pop rbp ; ret
0x00000000006a85d6 : mov rax, qword ptr [rax + 8] ; ret
0x0000000000685f97 : mov rax, qword ptr [rax + 8] ; test al, 1 ; jne 0x685fae ; call rax
0x0000000000686003 : mov rax, qword ptr [rax + 8] ; test al, 1 ; jne 0x686015 ; jmp rax
0x00000000006ce617 : mov rax, qword ptr [rax + rsi*8] ; ret
0x0000000000526b47 : mov rax, qword ptr [rax + rsi*8] ; test rax, rax ; je 0x526b5a ; ret
0x0000000000590917 : mov rax, qword ptr [rax + rsi*8] ; test rax, rax ; je 0x59092a ; ret
0x000000000068f9bd : mov rax, qword ptr [rax - 0x10] ; cmp rax, rdx ; je 0x68f9d9 ; ret
0x0000000000456c0e : mov rax, qword ptr [rax*8 + 0x6e1468] ; jmp rax
0x0000000000480bf5 : mov rax, qword ptr [rax*8 + 0x6e8e38] ; jmp rax
0x0000000000483b55 : mov rax, qword ptr [rax*8 + 0x6e8ea8] ; jmp rax
0x000000000048c6c5 : mov rax, qword ptr [rax*8 + 0x6e9060] ; jmp rax
0x000000000048e62d : mov rax, qword ptr [rax*8 + 0x6e9160] ; jmp rax
0x0000000000496953 : mov rax, qword ptr [rax*8 + 0x6e9278] ; jmp rax
0x0000000000496eab : mov rax, qword ptr [rax*8 + 0x6e92f8] ; jmp rax
0x0000000000496fbd : mov rax, qword ptr [rax*8 + 0x6e9330] ; jmp rax
0x00000000004984c7 : mov rax, qword ptr [rax*8 + 0x6e9428] ; jmp rax
0x00000000004ac935 : mov rax, qword ptr [rax*8 + 0x6ec150] ; jmp rax
0x00000000004b9b01 : mov rax, qword ptr [rax*8 + 0x6ec328] ; jmp rax
0x00000000004ba8a8 : mov rax, qword ptr [rax*8 + 0x6ec380] ; jmp rax
0x00000000004c6e90 : mov rax, qword ptr [rax*8 + 0x6eca78] ; jmp rax
0x00000000004d012c : mov rax, qword ptr [rax*8 + 0x6ed198] ; jmp rax
0x00000000004d7151 : mov rax, qword ptr [rax*8 + 0x6ed210] ; jmp rax
0x00000000004dab5e : mov rax, qword ptr [rax*8 + 0x6ed340] ; jmp rax
0x00000000004db19c : mov rax, qword ptr [rax*8 + 0x6ed380] ; jmp rax
0x00000000004e5183 : mov rax, qword ptr [rax*8 + 0x6ed408] ; jmp rax
0x00000000004ead92 : mov rax, qword ptr [rax*8 + 0x6ed578] ; jmp rax
0x00000000004ecd69 : mov rax, qword ptr [rax*8 + 0x6ed6c0] ; jmp rax
0x00000000004ef397 : mov rax, qword ptr [rax*8 + 0x6ed718] ; jmp rax
0x00000000004f27d9 : mov rax, qword ptr [rax*8 + 0x6ed888] ; jmp rax
0x00000000005ee5a4 : mov rax, qword ptr [rax*8 + 0x7170d8] ; jmp rax
0x00000000005f7290 : mov rax, qword ptr [rax*8 + 0x7173b8] ; jmp rax
0x0000000000625183 : mov rax, qword ptr [rax*8 + 0x71baf0] ; jmp rax
0x000000000065e269 : mov rax, qword ptr [rax*8 + 0x7207c0] ; ret
0x000000000065c717 : mov rax, qword ptr [rax*8 + 0xa08e80] ; ret
0x000000000065c727 : mov rax, qword ptr [rax*8 + 0xa08ea0] ; ret
0x00000000005233b6 : mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x00000000006a8d96 : mov rax, qword ptr [rax] ; mov byte ptr [rax + rcx], dl ; ret
0x000000000068ef2f : mov rax, qword ptr [rax] ; mov qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004a8db2 : mov rax, qword ptr [rax] ; nop ; leave ; ret
0x00000000004406b1 : mov rax, qword ptr [rax] ; nop ; pop rbp ; ret
0x000000000051984d : mov rax, qword ptr [rax] ; ret
0x0000000000503c58 : mov rax, qword ptr [rax] ; test al, 1 ; jne 0x503c68 ; jmp rax
0x000000000066c0b8 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x66c0d0 ; ret
0x000000000068ee67 : mov rax, qword ptr [rax] ; test rax, rax ; jne 0x68ee39 ; pop rbx ; ret
0x000000000060745c : mov rax, qword ptr [rbp + 7] ; call rax
0x00000000004517a3 : mov rax, qword ptr [rbp - 0x10] ; mov qword ptr [rax + 0x10], rdx ; leave ; ret
0x000000000041370a : mov rax, qword ptr [rbp - 0x10] ; mov qword ptr [rax + 8], rdx ; leave ; ret
0x00000000004142ff : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000613300 : mov rax, qword ptr [rbp - 0x10] ; nop ; leave ; ret
0x00000000004b5048 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000440963 : mov rax, qword ptr [rbp - 0x18] ; leave ; ret
0x00000000004118b3 : mov rax, qword ptr [rbp - 0x18] ; mov dword ptr [rax + 0x18], edx ; pop rbp ; ret
0x000000000061e13a : mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax] ; nop ; pop rbp ; ret
0x00000000004800da : mov rax, qword ptr [rbp - 0x18] ; nop ; leave ; ret
0x000000000041516a : mov rax, qword ptr [rbp - 0x20] ; mov rdx, qword ptr [rbp - 0x18] ; leave ; ret
0x00000000006a406b : mov rax, qword ptr [rbp - 0x20] ; nop ; pop rbp ; ret
0x00000000006168ff : mov rax, qword ptr [rbp - 0x28] ; leave ; ret
0x0000000000622024 : mov rax, qword ptr [rbp - 0x28] ; mov dword ptr [rax], edx ; leave ; ret
0x0000000000623335 : mov rax, qword ptr [rbp - 0x28] ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000483ae1 : mov rax, qword ptr [rbp - 0x28] ; nop ; leave ; ret
0x0000000000440b28 : mov rax, qword ptr [rbp - 0x38] ; mov rdi, rax ; call 0x43d585
0x0000000000622f86 : mov rax, qword ptr [rbp - 0x48] ; leave ; ret
0x000000000061e114 : mov rax, qword ptr [rbp - 0x48] ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000006253e8 : mov rax, qword ptr [rbp - 8] ; leave ; ret
0x000000000040bfc0 : mov rax, qword ptr [rbp - 8] ; lock add dword ptr [rax], 1 ; pop rbp ; ret
0x000000000040df43 : mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x18], edx ; pop rbp ; ret
0x00000000005d43ea : mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x10] ; nop ; pop rbp ; ret
0x000000000040ee60 : mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x18] ; nop ; pop rbp ; ret
0x00000000004420c4 : mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x20] ; nop ; pop rbp ; ret
0x0000000000618d5a : mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x28] ; nop ; pop rbp ; ret
0x0000000000618f3e : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; nop ; pop rbp ; ret
0x00000000004a371c : mov rax, qword ptr [rbp - 8] ; mov rdi, rax ; call 0x4a0197
0x00000000005f3534 : mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax] ; nop ; pop rbp ; ret
0x00000000004d7f15 : mov rax, qword ptr [rbp - 8] ; nop ; leave ; ret
0x000000000040d847 : mov rax, qword ptr [rbp - 8] ; nop ; pop rbp ; ret
0x00000000006cccb4 : mov rax, qword ptr [rbx + 0x10] ; pop rbx ; ret
0x00000000006ccb69 : mov rax, qword ptr [rbx + 0x18] ; pop rbx ; ret
0x000000000068e349 : mov rax, qword ptr [rbx + 0x58] ; pop rbx ; ret
0x000000000067aa99 : mov rax, qword ptr [rbx + 8] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000005425d4 : mov rax, qword ptr [rbx + 8] ; pop rbx ; ret
0x00000000006927ef : mov rax, qword ptr [rbx] ; mov byte ptr [rax + 0x79], 0 ; pop rbx ; ret
0x00000000005085e9 : mov rax, qword ptr [rcx + rax*8] ; test rax, rax ; je 0x5085e9 ; ret
0x0000000000556969 : mov rax, qword ptr [rcx + rax*8] ; test rax, rax ; je 0x556969 ; ret
0x0000000000627679 : mov rax, qword ptr [rcx + rax*8] ; test rax, rax ; je 0x627679 ; ret
0x000000000059bfb2 : mov rax, qword ptr [rdi + 0x10] ; add rsp, 8 ; ret
0x0000000000518350 : mov rax, qword ptr [rdi + 0x10] ; lock sub dword ptr [rax + 0x14], 1 ; ret
0x0000000000526070 : mov rax, qword ptr [rdi + 0x10] ; ret
0x000000000051aef4 : mov rax, qword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x51af09 ; ret
0x000000000051af14 : mov rax, qword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x51af29 ; ret
0x000000000051af34 : mov rax, qword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x51af49 ; ret
0x000000000051af54 : mov rax, qword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x51af69 ; ret
0x000000000053fce4 : mov rax, qword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x53fcf9 ; ret
0x000000000053fd04 : mov rax, qword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x53fd19 ; ret
0x000000000054b704 : mov rax, qword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x54b719 ; ret
0x000000000054b724 : mov rax, qword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x54b739 ; ret
0x0000000000563de4 : mov rax, qword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x563df9 ; ret
0x0000000000563e04 : mov rax, qword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x563e19 ; ret
0x0000000000585534 : mov rax, qword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x585549 ; ret
0x0000000000585554 : mov rax, qword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x585569 ; ret
0x00000000005a78d4 : mov rax, qword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x5a78e9 ; ret
0x00000000005a78f4 : mov rax, qword ptr [rdi + 0x10] ; test rdx, rdx ; je 0x5a7909 ; ret
0x0000000000668ab0 : mov rax, qword ptr [rdi + 0x138] ; ret
0x000000000050abb0 : mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000060c440 : mov rax, qword ptr [rdi + 0x1b0] ; ret
0x000000000060c450 : mov rax, qword ptr [rdi + 0x1b8] ; ret
0x000000000066c0d0 : mov rax, qword ptr [rdi + 0x1c8] ; ret
0x00000000006b27f6 : mov rax, qword ptr [rdi + 0x20] ; mov qword ptr [rdi + rax + 0x3f], rsi ; ret
0x0000000000512c50 : mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000065e210 : mov rax, qword ptr [rdi + 0x28] ; ret
0x000000000067fbec : mov rax, qword ptr [rdi + 0x40] ; ret
0x00000000006ab6c0 : mov rax, qword ptr [rdi + 0x50] ; ret
0x000000000053d7c0 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000053d7d0 : mov rax, qword ptr [rdi + 0x70] ; ret
0x00000000005af259 : mov rax, qword ptr [rdi + 0x728] ; ret
0x00000000005af1f9 : mov rax, qword ptr [rdi + 0x758] ; ret
0x00000000005af1c9 : mov rax, qword ptr [rdi + 0x788] ; ret
0x0000000000675760 : mov rax, qword ptr [rdi + 0x78] ; mov rax, qword ptr [rax] ; ret
0x00000000005af229 : mov rax, qword ptr [rdi + 0x7b8] ; ret
0x00000000005af739 : mov rax, qword ptr [rdi + 0x7e8] ; ret
0x00000000005af6d9 : mov rax, qword ptr [rdi + 0x818] ; ret
0x00000000005af6a9 : mov rax, qword ptr [rdi + 0x848] ; ret
0x00000000005af709 : mov rax, qword ptr [rdi + 0x878] ; ret
0x00000000005b0169 : mov rax, qword ptr [rdi + 0x8a8] ; ret
0x00000000005b0079 : mov rax, qword ptr [rdi + 0x8d8] ; ret
0x00000000006d42c0 : mov rax, qword ptr [rdi + 0x90] ; ret
0x00000000006d4330 : mov rax, qword ptr [rdi + 0x98] ; ret
0x00000000006d4370 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x00000000006d43d0 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x00000000006d43c0 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x00000000006d4380 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000053b1e1 : mov rax, qword ptr [rdi + 8] ; add dword ptr [rax + 0x10], 1 ; ret
0x00000000006898f0 : mov rax, qword ptr [rdi + 8] ; lock add dword ptr [rax + 4], 1 ; ret
0x0000000000506c60 : mov rax, qword ptr [rdi + 8] ; lock add dword ptr [rax], 1 ; ret
0x0000000000506c70 : mov rax, qword ptr [rdi + 8] ; lock sub dword ptr [rax], 1 ; ret
0x0000000000584f17 : mov rax, qword ptr [rdi + 8] ; mov eax, dword ptr [rax + 4] ; ret
0x0000000000689010 : mov rax, qword ptr [rdi + 8] ; mov eax, dword ptr [rax + 8] ; ret
0x00000000006cdda6 : mov rax, qword ptr [rdi + 8] ; mov qword ptr [rdx], rax ; ret
0x0000000000525bc0 : mov rax, qword ptr [rdi + 8] ; ret
0x00000000005f7c40 : mov rax, qword ptr [rdi + 8] ; test al, 1 ; jne 0x5f7c52 ; jmp rax
0x00000000005f7c80 : mov rax, qword ptr [rdi + 8] ; test al, 1 ; jne 0x5f7c92 ; jmp rax
0x00000000005f8ca0 : mov rax, qword ptr [rdi + 8] ; test al, 1 ; jne 0x5f8cb2 ; jmp rax
0x00000000006c7e0e : mov rax, qword ptr [rdi + rax] ; ret
0x00000000006bc5b7 : mov rax, qword ptr [rdi + rdx + 0x18] ; mov qword ptr [rcx + 0x18], rax ; ret
0x00000000006b2900 : mov rax, qword ptr [rdi + rsi + 0x37] ; ret
0x00000000006b28d0 : mov rax, qword ptr [rdi + rsi + 0x3f] ; ret
0x000000000068f060 : mov rax, qword ptr [rdi - 8] ; mov rax, qword ptr [rax + 0x18] ; ret
0x000000000068f090 : mov rax, qword ptr [rdi - 8] ; mov rax, qword ptr [rax + 0x40] ; ret
0x000000000068fbb5 : mov rax, qword ptr [rdi - 8] ; movzx eax, byte ptr [rax + 0x29] ; ret
0x000000000068f9e0 : mov rax, qword ptr [rdi - 8] ; movzx eax, byte ptr [rax + 0x2a] ; ret
0x000000000068f080 : mov rax, qword ptr [rdi - 8] ; ret
0x0000000000525c60 : mov rax, qword ptr [rdi] ; ret
0x00000000006a84c8 : mov rax, qword ptr [rdx + 0x10] ; test rax, rax ; jne 0x6a84c9 ; ret
0x00000000005298b4 : mov rax, qword ptr [rdx + 7] ; mov rdi, rbx ; call rax
0x0000000000519cd7 : mov rax, qword ptr [rdx + rax*8 + 0x10] ; add rsp, 8 ; ret
0x000000000066fde3 : mov rax, qword ptr [rdx] ; add rsp, 0x18 ; ret
0x000000000068fb27 : mov rax, qword ptr [rdx] ; add rsp, 8 ; ret
0x00000000005222b1 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x5222b0 ; ret
0x0000000000522381 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x522380 ; ret
0x00000000005272b1 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x5272b0 ; ret
0x0000000000527381 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x527380 ; ret
0x0000000000542c81 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x542c80 ; ret
0x0000000000542d51 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x542d50 ; ret
0x00000000005671a1 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x5671a0 ; ret
0x0000000000567271 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x567270 ; ret
0x0000000000590ef1 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x590ef0 ; ret
0x0000000000590fc1 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x590fc0 ; ret
0x00000000005a97e1 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x5a97e0 ; ret
0x00000000005a98b1 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x5a98b0 ; ret
0x00000000006ce020 : mov rax, qword ptr [rip + 0x334c99] ; ret
0x00000000006cde90 : mov rax, qword ptr [rip + 0x334e31] ; ret
0x00000000006cdea0 : mov rax, qword ptr [rip + 0x334e39] ; ret
0x00000000006cde80 : mov rax, qword ptr [rip + 0x334e49] ; ret
0x00000000006c6f96 : mov rax, qword ptr [rip + 0x33b943] ; jmp rax
0x00000000006c6f06 : mov rax, qword ptr [rip + 0x33b9d3] ; jmp rax
0x00000000006c6e86 : mov rax, qword ptr [rip + 0x33ba53] ; jmp rax
0x00000000006c065b : mov rax, qword ptr [rip + 0x34225e] ; pop rbx ; jmp rax
0x00000000006c05e6 : mov rax, qword ptr [rip + 0x3422f3] ; jmp rax
0x00000000006c04f6 : mov rax, qword ptr [rip + 0x3423e3] ; jmp rax
0x00000000006c0416 : mov rax, qword ptr [rip + 0x3424c3] ; jmp rax
0x00000000006bfc66 : mov rax, qword ptr [rip + 0x342c73] ; jmp rax
0x00000000006bed27 : mov rax, qword ptr [rip + 0x343b7a] ; jmp rax
0x00000000006bed00 : mov rax, qword ptr [rip + 0x343bd9] ; jmp rax
0x00000000006bec20 : mov rax, qword ptr [rip + 0x343c61] ; jmp rax
0x00000000006bec10 : mov rax, qword ptr [rip + 0x343c81] ; jmp rax
0x00000000006bebd0 : mov rax, qword ptr [rip + 0x343cb9] ; jmp rax
0x00000000006bebc0 : mov rax, qword ptr [rip + 0x343cd9] ; jmp rax
0x00000000006bea40 : mov rax, qword ptr [rip + 0x34e299] ; ret
0x00000000006bea30 : mov rax, qword ptr [rip + 0x34e2a1] ; ret
0x00000000006b25a6 : mov rax, qword ptr [rip + 0x350333] ; jmp rax
0x00000000006b2427 : mov rax, qword ptr [rip + 0x3504b2] ; jmp rax
0x00000000006b2396 : mov rax, qword ptr [rip + 0x350543] ; jmp rax
0x00000000006aa8f3 : mov rax, qword ptr [rip + 0x357fe6] ; jmp rax
0x00000000006a8aa6 : mov rax, qword ptr [rip + 0x359e13] ; jmp rax
0x00000000006a8226 : mov rax, qword ptr [rip + 0x35a6b3] ; jmp rax
0x00000000006a7e2e : mov rax, qword ptr [rip + 0x35aa8b] ; pop rbx ; jmp rax
0x00000000006a7c2c : mov rax, qword ptr [rip + 0x35acad] ; jmp rax
0x00000000006a5fb6 : mov rax, qword ptr [rip + 0x35c923] ; jmp rax
0x00000000006a5f16 : mov rax, qword ptr [rip + 0x35c9c3] ; jmp rax
0x00000000006a45b9 : mov rax, qword ptr [rip + 0x35e300] ; jmp rax
0x00000000006a45a2 : mov rax, qword ptr [rip + 0x35e317] ; jmp rax
0x0000000000692610 : mov rax, qword ptr [rip + 0x36fe31] ; ret
0x00000000006925f0 : mov rax, qword ptr [rip + 0x36fe59] ; ret
0x00000000006925d0 : mov rax, qword ptr [rip + 0x36fe69] ; ret
0x00000000006904d6 : mov rax, qword ptr [rip + 0x372403] ; jmp rax
0x000000000068e1f6 : mov rax, qword ptr [rip + 0x3746e3] ; jmp rax
0x00000000006905a0 : mov rax, qword ptr [rip + 0x379361] ; ret
0x0000000000690580 : mov rax, qword ptr [rip + 0x379389] ; ret
0x0000000000690560 : mov rax, qword ptr [rip + 0x379399] ; ret
0x0000000000685f46 : mov rax, qword ptr [rip + 0x37c993] ; jmp rax
0x0000000000681a86 : mov rax, qword ptr [rip + 0x380e53] ; jmp rax
0x0000000000681928 : mov rax, qword ptr [rip + 0x380fb1] ; jmp rax
0x0000000000676b33 : mov rax, qword ptr [rip + 0x38bd1e] ; jmp rax
0x00000000006761cd : mov rax, qword ptr [rip + 0x38c70c] ; jmp rax
0x0000000000674106 : mov rax, qword ptr [rip + 0x38e7d3] ; jmp rax
0x000000000067134e : mov rax, qword ptr [rip + 0x39155b] ; call rax
0x0000000000669930 : mov rax, qword ptr [rip + 0x3963c1] ; ret
0x00000000006698cd : mov rax, qword ptr [rip + 0x39900c] ; jmp rax
0x000000000065d256 : mov rax, qword ptr [rip + 0x3a5683] ; jmp rax
0x000000000065901c : mov rax, qword ptr [rip + 0x3a98bd] ; jmp rax
0x0000000000658f18 : mov rax, qword ptr [rip + 0x3a99c1] ; jmp rax
0x000000000064866e : mov rax, qword ptr [rip + 0x3ba26b] ; jmp rax
0x00000000006484f1 : mov rax, qword ptr [rip + 0x3ba3e8] ; jmp rax
0x0000000000648359 : mov rax, qword ptr [rip + 0x3ba580] ; jmp rax
0x00000000006481dc : mov rax, qword ptr [rip + 0x3ba6fd] ; jmp rax
0x00000000006480ae : mov rax, qword ptr [rip + 0x3ba82b] ; jmp rax
0x0000000000647fd0 : mov rax, qword ptr [rip + 0x3ba909] ; jmp rax
0x000000000063b394 : mov rax, qword ptr [rip + 0x3c7545] ; jmp rax
0x000000000063b114 : mov rax, qword ptr [rip + 0x3c77c5] ; jmp rax
0x000000000063a31b : mov rax, qword ptr [rip + 0x3c85be] ; jmp rax
0x0000000000630066 : mov rax, qword ptr [rip + 0x3d2873] ; jmp rax
0x000000000062e1f6 : mov rax, qword ptr [rip + 0x3d46e3] ; jmp rax
0x000000000062be56 : mov rax, qword ptr [rip + 0x3d6a83] ; jmp rax
0x000000000062b2a6 : mov rax, qword ptr [rip + 0x3d7633] ; jmp rax
0x000000000062b216 : mov rax, qword ptr [rip + 0x3d76c3] ; jmp rax
0x000000000062b106 : mov rax, qword ptr [rip + 0x3d77d3] ; jmp rax
0x000000000062b096 : mov rax, qword ptr [rip + 0x3d7843] ; jmp rax
0x00000000006258a2 : mov rax, qword ptr [rip + 0x3dcfc7] ; call rax
0x00000000006257a2 : mov rax, qword ptr [rip + 0x3dd13f] ; call rax
0x0000000000625619 : mov rax, qword ptr [rip + 0x3dd2c8] ; call rax
0x0000000000625488 : mov rax, qword ptr [rip + 0x3dd451] ; call rax
0x0000000000625404 : mov rax, qword ptr [rip + 0x3dd4dd] ; call rax
0x000000000062420d : mov rax, qword ptr [rip + 0x3de6cc] ; call rax
0x000000000062417b : mov rax, qword ptr [rip + 0x3de6de] ; call rax
0x0000000000624172 : mov rax, qword ptr [rip + 0x3de76f] ; call rax
0x0000000000623be7 : mov rax, qword ptr [rip + 0x3dec82] ; call rax
0x0000000000623bbe : mov rax, qword ptr [rip + 0x3deca3] ; call rax
0x00000000006225d8 : mov rax, qword ptr [rip + 0x3e0301] ; call rax
0x00000000006225bc : mov rax, qword ptr [rip + 0x3e0325] ; call rax
0x00000000006223f2 : mov rax, qword ptr [rip + 0x3e04ef] ; call rax
0x000000000062208f : mov rax, qword ptr [rip + 0x3e0852] ; call rax
0x0000000000622064 : mov rax, qword ptr [rip + 0x3e0875] ; call rax
0x0000000000621f2d : mov rax, qword ptr [rip + 0x3e09b4] ; call rax
0x0000000000621efe : mov rax, qword ptr [rip + 0x3e09db] ; call rax
0x00000000006218b7 : mov rax, qword ptr [rip + 0x3e102a] ; call rax
0x0000000000621886 : mov rax, qword ptr [rip + 0x3e1053] ; call rax
0x00000000006216f7 : mov rax, qword ptr [rip + 0x3e11ea] ; call rax
0x00000000006216c6 : mov rax, qword ptr [rip + 0x3e1213] ; call rax
0x00000000006211f9 : mov rax, qword ptr [rip + 0x3e16e8] ; call rax
0x00000000006211c8 : mov rax, qword ptr [rip + 0x3e1711] ; call rax
0x0000000000620ada : mov rax, qword ptr [rip + 0x3e1e07] ; call rax
0x0000000000620a9e : mov rax, qword ptr [rip + 0x3e1e3b] ; call rax
0x00000000006208ec : mov rax, qword ptr [rip + 0x3e1ff5] ; call rax
0x00000000006208a6 : mov rax, qword ptr [rip + 0x3e2033] ; call rax
0x00000000006206cf : mov rax, qword ptr [rip + 0x3e2212] ; call rax
0x000000000062069e : mov rax, qword ptr [rip + 0x3e223b] ; call rax
0x0000000000620517 : mov rax, qword ptr [rip + 0x3e23ca] ; call rax
0x00000000006204ea : mov rax, qword ptr [rip + 0x3e23ef] ; call rax
0x00000000006203bd : mov rax, qword ptr [rip + 0x3e2524] ; call rax
0x0000000000620384 : mov rax, qword ptr [rip + 0x3e2555] ; call rax
0x00000000006201d1 : mov rax, qword ptr [rip + 0x3e2710] ; call rax
0x0000000000620196 : mov rax, qword ptr [rip + 0x3e2743] ; call rax
0x00000000006200ca : mov rax, qword ptr [rip + 0x3e280f] ; call rax
0x000000000062008a : mov rax, qword ptr [rip + 0x3e2857] ; call rax
0x000000000061ff2d : mov rax, qword ptr [rip + 0x3e29ac] ; call rax
0x000000000061fee6 : mov rax, qword ptr [rip + 0x3e29fb] ; call rax
0x000000000061fe9d : mov rax, qword ptr [rip + 0x3e2a44] ; call rax
0x000000000061fd2f : mov rax, qword ptr [rip + 0x3e2bb2] ; call rax
0x000000000061fbd9 : mov rax, qword ptr [rip + 0x3e2d08] ; call rax
0x000000000061fbae : mov rax, qword ptr [rip + 0x3e2d2b] ; call rax
0x000000000061f8da : mov rax, qword ptr [rip + 0x3e3007] ; call rax
0x000000000061f800 : mov rax, qword ptr [rip + 0x3e3069] ; call rax
0x000000000061f7f7 : mov rax, qword ptr [rip + 0x3e30e2] ; call rax
0x000000000061f7ac : mov rax, qword ptr [rip + 0x3e3135] ; call rax
0x000000000061f725 : mov rax, qword ptr [rip + 0x3e313c] ; call rax
0x000000000061f525 : mov rax, qword ptr [rip + 0x3e33b4] ; call rax
0x000000000061f447 : mov rax, qword ptr [rip + 0x3e3412] ; call rax
0x000000000061f43e : mov rax, qword ptr [rip + 0x3e34a3] ; call rax
0x000000000061f1e1 : mov rax, qword ptr [rip + 0x3e3700] ; call rax
0x000000000061ed80 : mov rax, qword ptr [rip + 0x3e3b61] ; call rax
0x000000000061e853 : mov rax, qword ptr [rip + 0x3e408e] ; call rax
0x000000000061e4d1 : mov rax, qword ptr [rip + 0x3e4410] ; call rax
0x000000000061e4a4 : mov rax, qword ptr [rip + 0x3e4435] ; call rax
0x000000000061e3b9 : mov rax, qword ptr [rip + 0x3e4528] ; call rax
0x000000000061e386 : mov rax, qword ptr [rip + 0x3e4553] ; call rax
0x000000000061e18f : mov rax, qword ptr [rip + 0x3e4752] ; call rax
0x000000000061e162 : mov rax, qword ptr [rip + 0x3e4777] ; call rax
0x000000000061d690 : mov rax, qword ptr [rip + 0x3e5249] ; call rax
0x000000000061d654 : mov rax, qword ptr [rip + 0x3e5285] ; call rax
0x000000000061d646 : mov rax, qword ptr [rip + 0x3e529b] ; call rax
0x000000000061cada : mov rax, qword ptr [rip + 0x3e5d8f] ; call rax
0x000000000061cad1 : mov rax, qword ptr [rip + 0x3e5d90] ; call rax
0x000000000061caa5 : mov rax, qword ptr [rip + 0x3e5db4] ; call rax
0x000000000061caae : mov rax, qword ptr [rip + 0x3e5e2b] ; call rax
0x000000000061ca9c : mov rax, qword ptr [rip + 0x3e5e45] ; call rax
0x000000000061c852 : mov rax, qword ptr [rip + 0x3e6087] ; call rax
0x000000000061c82e : mov rax, qword ptr [rip + 0x3e60b3] ; call rax
0x000000000061c3ee : mov rax, qword ptr [rip + 0x3e64eb] ; call rax
0x000000000061c3ca : mov rax, qword ptr [rip + 0x3e6517] ; call rax
0x000000000061be26 : mov rax, qword ptr [rip + 0x3e6abb] ; call rax
0x000000000061bcc4 : mov rax, qword ptr [rip + 0x3e6c1d] ; call rax
0x000000000061bc02 : mov rax, qword ptr [rip + 0x3e6cd7] ; call rax
0x000000000061bbe6 : mov rax, qword ptr [rip + 0x3e6cfb] ; call rax
0x000000000061b64a : mov rax, qword ptr [rip + 0x3e721f] ; call rax
0x000000000061b641 : mov rax, qword ptr [rip + 0x3e7220] ; call rax
0x000000000061b615 : mov rax, qword ptr [rip + 0x3e7244] ; call rax
0x000000000061b61e : mov rax, qword ptr [rip + 0x3e72bb] ; call rax
0x000000000061b60c : mov rax, qword ptr [rip + 0x3e72d5] ; call rax
0x000000000061b4dc : mov rax, qword ptr [rip + 0x3e738d] ; call rax
0x000000000061b4d3 : mov rax, qword ptr [rip + 0x3e738e] ; call rax
0x000000000061b4a7 : mov rax, qword ptr [rip + 0x3e73b2] ; call rax
0x000000000061b4b0 : mov rax, qword ptr [rip + 0x3e7429] ; call rax
0x000000000061b49e : mov rax, qword ptr [rip + 0x3e7443] ; call rax
0x000000000061b262 : mov rax, qword ptr [rip + 0x3e767f] ; call rax
0x000000000061b0e8 : mov rax, qword ptr [rip + 0x3e77f9] ; call rax
0x000000000061b02c : mov rax, qword ptr [rip + 0x3e78ad] ; call rax
0x000000000061b010 : mov rax, qword ptr [rip + 0x3e78d1] ; call rax
0x000000000061add2 : mov rax, qword ptr [rip + 0x3e7a97] ; call rax
0x000000000061adc9 : mov rax, qword ptr [rip + 0x3e7a98] ; call rax
0x000000000061ad9d : mov rax, qword ptr [rip + 0x3e7abc] ; call rax
0x000000000061ada6 : mov rax, qword ptr [rip + 0x3e7b33] ; call rax
0x000000000061ad94 : mov rax, qword ptr [rip + 0x3e7b4d] ; call rax
0x000000000061acf4 : mov rax, qword ptr [rip + 0x3e7b75] ; call rax
0x000000000061aceb : mov rax, qword ptr [rip + 0x3e7b76] ; call rax
0x000000000061acbf : mov rax, qword ptr [rip + 0x3e7b9a] ; call rax
0x000000000061acc8 : mov rax, qword ptr [rip + 0x3e7c11] ; call rax
0x000000000061acb6 : mov rax, qword ptr [rip + 0x3e7c2b] ; call rax
0x000000000061a7ce : mov rax, qword ptr [rip + 0x3e8113] ; call rax
0x000000000061a630 : mov rax, qword ptr [rip + 0x3e82a9] ; call rax
0x000000000061a614 : mov rax, qword ptr [rip + 0x3e82cd] ; call rax
0x000000000061a442 : mov rax, qword ptr [rip + 0x3e8497] ; call rax
0x000000000061a426 : mov rax, qword ptr [rip + 0x3e84bb] ; call rax
0x000000000061a339 : mov rax, qword ptr [rip + 0x3e85a8] ; call rax
0x0000000000619e8f : mov rax, qword ptr [rip + 0x3e8a4a] ; call rax
0x0000000000619e6e : mov rax, qword ptr [rip + 0x3e8a73] ; call rax
0x0000000000619bb5 : mov rax, qword ptr [rip + 0x3e8d24] ; call rax
0x0000000000619b94 : mov rax, qword ptr [rip + 0x3e8d4d] ; call rax
0x000000000061944e : mov rax, qword ptr [rip + 0x3e9493] ; call rax
0x00000000006192ee : mov rax, qword ptr [rip + 0x3e95eb] ; call rax
0x00000000006192d2 : mov rax, qword ptr [rip + 0x3e960f] ; call rax
0x000000000061912c : mov rax, qword ptr [rip + 0x3e97ad] ; call rax
0x0000000000619110 : mov rax, qword ptr [rip + 0x3e97d1] ; call rax
0x0000000000618966 : mov rax, qword ptr [rip + 0x3e9f03] ; call rax
0x000000000061894d : mov rax, qword ptr [rip + 0x3e9f14] ; call rax
0x00000000006189c3 : mov rax, qword ptr [rip + 0x3e9f16] ; call rax
0x00000000006188c9 : mov rax, qword ptr [rip + 0x3e9f90] ; call rax
0x000000000061890c : mov rax, qword ptr [rip + 0x3e9fd5] ; call rax
0x00000000006188d2 : mov rax, qword ptr [rip + 0x3ea007] ; call rax
0x00000000006188c0 : mov rax, qword ptr [rip + 0x3ea021] ; call rax
0x00000000006182ca : mov rax, qword ptr [rip + 0x3ea59f] ; call rax
0x00000000006182b1 : mov rax, qword ptr [rip + 0x3ea5b0] ; call rax
0x0000000000618327 : mov rax, qword ptr [rip + 0x3ea5b2] ; call rax
0x000000000061822d : mov rax, qword ptr [rip + 0x3ea62c] ; call rax
0x0000000000618270 : mov rax, qword ptr [rip + 0x3ea671] ; call rax
0x0000000000618236 : mov rax, qword ptr [rip + 0x3ea6a3] ; call rax
0x0000000000618224 : mov rax, qword ptr [rip + 0x3ea6bd] ; call rax
0x0000000000617d88 : mov rax, qword ptr [rip + 0x3eab51] ; call rax
0x0000000000617d6c : mov rax, qword ptr [rip + 0x3eab75] ; call rax
0x0000000000617c7f : mov rax, qword ptr [rip + 0x3eac62] ; call rax
0x000000000061789e : mov rax, qword ptr [rip + 0x3eb03b] ; call rax
0x0000000000617882 : mov rax, qword ptr [rip + 0x3eb05f] ; call rax
0x00000000006176b1 : mov rax, qword ptr [rip + 0x3eb230] ; call rax
0x000000000061754e : mov rax, qword ptr [rip + 0x3eb393] ; call rax
0x0000000000617415 : mov rax, qword ptr [rip + 0x3eb4c4] ; call rax
0x00000000006173f8 : mov rax, qword ptr [rip + 0x3eb4e9] ; call rax
0x0000000000616dd0 : mov rax, qword ptr [rip + 0x3ebb09] ; call rax
0x0000000000616db4 : mov rax, qword ptr [rip + 0x3ebb2d] ; call rax
0x0000000000616be3 : mov rax, qword ptr [rip + 0x3ebcfe] ; call rax
0x0000000000616a80 : mov rax, qword ptr [rip + 0x3ebe61] ; call rax
0x0000000000616947 : mov rax, qword ptr [rip + 0x3ebf92] ; call rax
0x000000000061692a : mov rax, qword ptr [rip + 0x3ebfb7] ; call rax
0x0000000000615a78 : mov rax, qword ptr [rip + 0x3ece69] ; call rax
0x00000000006159bc : mov rax, qword ptr [rip + 0x3ecf1d] ; call rax
0x00000000006159a0 : mov rax, qword ptr [rip + 0x3ecf41] ; call rax
0x000000000061570f : mov rax, qword ptr [rip + 0x3ed1ca] ; call rax
0x00000000006156ee : mov rax, qword ptr [rip + 0x3ed1f3] ; call rax
0x0000000000615435 : mov rax, qword ptr [rip + 0x3ed4a4] ; call rax
0x0000000000615414 : mov rax, qword ptr [rip + 0x3ed4cd] ; call rax
0x0000000000614763 : mov rax, qword ptr [rip + 0x3ee17e] ; call rax
0x00000000006146a6 : mov rax, qword ptr [rip + 0x3ee233] ; call rax
0x000000000061468a : mov rax, qword ptr [rip + 0x3ee257] ; call rax
0x00000000006144f7 : mov rax, qword ptr [rip + 0x3ee3ea] ; call rax
0x000000000061443a : mov rax, qword ptr [rip + 0x3ee49f] ; call rax
0x000000000061441e : mov rax, qword ptr [rip + 0x3ee4c3] ; call rax
0x00000000006142bb : mov rax, qword ptr [rip + 0x3ee626] ; call rax
0x00000000006141fe : mov rax, qword ptr [rip + 0x3ee6db] ; call rax
0x00000000006141e2 : mov rax, qword ptr [rip + 0x3ee6ff] ; call rax
0x0000000000613e2a : mov rax, qword ptr [rip + 0x3eeab7] ; call rax
0x0000000000613dd4 : mov rax, qword ptr [rip + 0x3eeb0d] ; call rax
0x0000000000613c71 : mov rax, qword ptr [rip + 0x3eec68] ; call rax
0x0000000000613c44 : mov rax, qword ptr [rip + 0x3eec9d] ; call rax
0x0000000000611708 : mov rax, qword ptr [rip + 0x3f11d1] ; call rax
0x00000000006116f6 : mov rax, qword ptr [rip + 0x3f11eb] ; call rax
0x00000000005fd6b9 : mov rax, qword ptr [rip + 0x405220] ; jmp rax
0x00000000005fd246 : mov rax, qword ptr [rip + 0x405693] ; jmp rax
0x00000000005fd166 : mov rax, qword ptr [rip + 0x405773] ; jmp rax
0x00000000005f96c6 : mov rax, qword ptr [rip + 0x409213] ; jmp rax
0x00000000005f9530 : mov rax, qword ptr [rip + 0x4093a9] ; jmp rax
0x00000000005f8cf6 : mov rax, qword ptr [rip + 0x409be3] ; jmp rax
0x00000000005f7a0b : mov rax, qword ptr [rip + 0x40aed6] ; call rax
0x00000000005f7928 : mov rax, qword ptr [rip + 0x40afb9] ; call rax
0x00000000005f7850 : mov rax, qword ptr [rip + 0x40b091] ; call rax
0x00000000005f776d : mov rax, qword ptr [rip + 0x40b174] ; call rax
0x00000000005f7633 : mov rax, qword ptr [rip + 0x40b2ae] ; call rax
0x00000000005f75a8 : mov rax, qword ptr [rip + 0x40b331] ; call rax
0x00000000005f7585 : mov rax, qword ptr [rip + 0x40b35c] ; call rax
0x00000000005f7336 : mov rax, qword ptr [rip + 0x40b5a3] ; call rax
0x00000000005f7276 : mov rax, qword ptr [rip + 0x40b66b] ; call rax
0x00000000005f71bc : mov rax, qword ptr [rip + 0x40b71d] ; call rax
0x00000000005f7176 : mov rax, qword ptr [rip + 0x40b76b] ; call rax
0x00000000005f6cdf : mov rax, qword ptr [rip + 0x40bbfa] ; call rax
0x00000000005f6c9f : mov rax, qword ptr [rip + 0x40bc42] ; call rax
0x00000000005f6c60 : mov rax, qword ptr [rip + 0x40bc81] ; call rax
0x00000000005f6bfa : mov rax, qword ptr [rip + 0x40bcdf] ; call rax
0x00000000005f6bba : mov rax, qword ptr [rip + 0x40bd27] ; call rax
0x00000000005f6b7b : mov rax, qword ptr [rip + 0x40bd66] ; call rax
0x00000000005f6acf : mov rax, qword ptr [rip + 0x40be12] ; call rax
0x00000000005f69b5 : mov rax, qword ptr [rip + 0x40bf24] ; call rax
0x00000000005f6966 : mov rax, qword ptr [rip + 0x40bf7b] ; call rax
0x00000000005f68ae : mov rax, qword ptr [rip + 0x40c02b] ; call rax
0x00000000005f686e : mov rax, qword ptr [rip + 0x40c073] ; call rax
0x00000000005f65a6 : mov rax, qword ptr [rip + 0x40c333] ; call rax
0x00000000005f6563 : mov rax, qword ptr [rip + 0x40c37e] ; call rax
0x00000000005f6526 : mov rax, qword ptr [rip + 0x40c3bb] ; call rax
0x00000000005f61fb : mov rax, qword ptr [rip + 0x40c6de] ; call rax
0x00000000005f619c : mov rax, qword ptr [rip + 0x40c745] ; call rax
0x00000000005f54e6 : mov rax, qword ptr [rip + 0x40d3f3] ; call rax
0x00000000005f5407 : mov rax, qword ptr [rip + 0x40d452] ; call rax
0x00000000005f53fe : mov rax, qword ptr [rip + 0x40d4e3] ; call rax
0x00000000005f5343 : mov rax, qword ptr [rip + 0x40d596] ; call rax
0x00000000005f5300 : mov rax, qword ptr [rip + 0x40d5e1] ; call rax
0x00000000005f50ad : mov rax, qword ptr [rip + 0x40d82c] ; call rax
0x00000000005f5058 : mov rax, qword ptr [rip + 0x40d889] ; call rax
0x00000000005f4651 : mov rax, qword ptr [rip + 0x40e218] ; call rax
0x00000000005f4648 : mov rax, qword ptr [rip + 0x40e291] ; call rax
0x00000000005f4605 : mov rax, qword ptr [rip + 0x40e2dc] ; call rax
0x00000000005f4550 : mov rax, qword ptr [rip + 0x40e311] ; call rax
0x00000000005f450b : mov rax, qword ptr [rip + 0x40e3ce] ; call rax
0x00000000005f44c8 : mov rax, qword ptr [rip + 0x40e419] ; call rax
0x00000000005f4487 : mov rax, qword ptr [rip + 0x40e45a] ; call rax
0x00000000005f426f : mov rax, qword ptr [rip + 0x40e672] ; call rax
0x00000000005f4143 : mov rax, qword ptr [rip + 0x40e796] ; call rax
0x00000000005f4110 : mov rax, qword ptr [rip + 0x40e7d1] ; call rax
0x00000000005f4056 : mov rax, qword ptr [rip + 0x40e883] ; call rax
0x00000000005f400c : mov rax, qword ptr [rip + 0x40e8d5] ; call rax
0x00000000005f3dca : mov rax, qword ptr [rip + 0x40eb0f] ; call rax
0x00000000005f3d80 : mov rax, qword ptr [rip + 0x40eb61] ; call rax
0x00000000005f3b9e : mov rax, qword ptr [rip + 0x40ed3b] ; call rax
0x00000000005f3b4c : mov rax, qword ptr [rip + 0x40ed95] ; call rax
0x00000000005f392d : mov rax, qword ptr [rip + 0x40efac] ; call rax
0x00000000005f38ce : mov rax, qword ptr [rip + 0x40f013] ; call rax
0x00000000005f37c9 : mov rax, qword ptr [rip + 0x40f110] ; call rax
0x00000000005f377e : mov rax, qword ptr [rip + 0x40f163] ; call rax
0x00000000005f348a : mov rax, qword ptr [rip + 0x40f44f] ; call rax
0x00000000005f33f9 : mov rax, qword ptr [rip + 0x40f460] ; call rax
0x00000000005f33f0 : mov rax, qword ptr [rip + 0x40f4f1] ; call rax
0x00000000005f3260 : mov rax, qword ptr [rip + 0x40f609] ; call rax
0x00000000005f3257 : mov rax, qword ptr [rip + 0x40f60a] ; call rax
0x00000000005f307b : mov rax, qword ptr [rip + 0x40f85e] ; call rax
0x00000000005f3018 : mov rax, qword ptr [rip + 0x40f8c9] ; call rax
0x00000000005f2f5e : mov rax, qword ptr [rip + 0x40f97b] ; call rax
0x00000000005f2f34 : mov rax, qword ptr [rip + 0x40f9ad] ; call rax
0x00000000005f249d : mov rax, qword ptr [rip + 0x41043c] ; call rax
0x00000000005f2450 : mov rax, qword ptr [rip + 0x410491] ; call rax
0x00000000005f23b9 : mov rax, qword ptr [rip + 0x410528] ; call rax
0x00000000005f22bc : mov rax, qword ptr [rip + 0x410625] ; call rax
0x00000000005f2193 : mov rax, qword ptr [rip + 0x410746] ; call rax
0x00000000005f2146 : mov rax, qword ptr [rip + 0x41079b] ; call rax
0x00000000005f1ecc : mov rax, qword ptr [rip + 0x410a0d] ; call rax
0x00000000005f1e5a : mov rax, qword ptr [rip + 0x410a87] ; call rax
0x00000000005f1d32 : mov rax, qword ptr [rip + 0x410ba7] ; call rax
0x00000000005f1cf2 : mov rax, qword ptr [rip + 0x410bef] ; call rax
0x00000000005f1c39 : mov rax, qword ptr [rip + 0x410ca0] ; call rax
0x00000000005f1bf6 : mov rax, qword ptr [rip + 0x410ceb] ; call rax
0x00000000005f197e : mov rax, qword ptr [rip + 0x410f5b] ; call rax
0x00000000005f193e : mov rax, qword ptr [rip + 0x410fa3] ; call rax
0x00000000005f18fe : mov rax, qword ptr [rip + 0x410fe3] ; call rax
0x00000000005f17b5 : mov rax, qword ptr [rip + 0x411124] ; call rax
0x00000000005f1775 : mov rax, qword ptr [rip + 0x41116c] ; call rax
0x00000000005f1737 : mov rax, qword ptr [rip + 0x4111aa] ; call rax
0x00000000005f1609 : mov rax, qword ptr [rip + 0x4112d8] ; call rax
0x00000000005f1549 : mov rax, qword ptr [rip + 0x411390] ; call rax
0x00000000005f152c : mov rax, qword ptr [rip + 0x4113b5] ; call rax
0x00000000005f10b5 : mov rax, qword ptr [rip + 0x411824] ; call rax
0x00000000005f0ff8 : mov rax, qword ptr [rip + 0x4118e9] ; call rax
0x00000000005f0d89 : mov rax, qword ptr [rip + 0x411b50] ; call rax
0x00000000005f0cee : mov rax, qword ptr [rip + 0x411bf3] ; call rax
0x00000000005ef9b6 : mov rax, qword ptr [rip + 0x412f23] ; call rax
0x00000000005ef8de : mov rax, qword ptr [rip + 0x413003] ; call rax
0x00000000005ef696 : mov rax, qword ptr [rip + 0x413243] ; call rax
0x00000000005ef64a : mov rax, qword ptr [rip + 0x413297] ; call rax
0x00000000005ef0ba : mov rax, qword ptr [rip + 0x41381f] ; call rax
0x00000000005eefe2 : mov rax, qword ptr [rip + 0x4138ff] ; call rax
0x00000000005eeda3 : mov rax, qword ptr [rip + 0x413b36] ; call rax
0x00000000005eed56 : mov rax, qword ptr [rip + 0x413b8b] ; call rax
0x00000000005ee5f9 : mov rax, qword ptr [rip + 0x4142e0] ; call rax
0x00000000005ee520 : mov rax, qword ptr [rip + 0x4143c1] ; call rax
0x00000000005edfaa : mov rax, qword ptr [rip + 0x414937] ; call rax
0x00000000005edda0 : mov rax, qword ptr [rip + 0x414b41] ; call rax
0x00000000005edcdd : mov rax, qword ptr [rip + 0x414bfc] ; call rax
0x00000000005edcbc : mov rax, qword ptr [rip + 0x414c25] ; call rax
0x00000000005ed314 : mov rax, qword ptr [rip + 0x415555] ; call rax
0x00000000005ed30b : mov rax, qword ptr [rip + 0x415556] ; call rax
0x00000000005ed2df : mov rax, qword ptr [rip + 0x41557a] ; call rax
0x00000000005ed2e8 : mov rax, qword ptr [rip + 0x4155f1] ; call rax
0x00000000005ed2d6 : mov rax, qword ptr [rip + 0x41560b] ; call rax
0x00000000005ecb61 : mov rax, qword ptr [rip + 0x415d80] ; call rax
0x00000000005ec470 : mov rax, qword ptr [rip + 0x416469] ; call rax
0x00000000005ec44c : mov rax, qword ptr [rip + 0x416495] ; call rax
0x00000000005ec00c : mov rax, qword ptr [rip + 0x4168cd] ; call rax
0x00000000005ebfe8 : mov rax, qword ptr [rip + 0x4168f9] ; call rax
0x00000000005eba8c : mov rax, qword ptr [rip + 0x416e55] ; call rax
0x00000000005eb948 : mov rax, qword ptr [rip + 0x416f99] ; call rax
0x00000000005eb88c : mov rax, qword ptr [rip + 0x41704d] ; call rax
0x00000000005eb870 : mov rax, qword ptr [rip + 0x417071] ; call rax
0x00000000005eb704 : mov rax, qword ptr [rip + 0x417165] ; call rax
0x00000000005eb6fb : mov rax, qword ptr [rip + 0x417166] ; call rax
0x00000000005eb6cf : mov rax, qword ptr [rip + 0x41718a] ; call rax
0x00000000005eb6d8 : mov rax, qword ptr [rip + 0x417201] ; call rax
0x00000000005eb6c6 : mov rax, qword ptr [rip + 0x41721b] ; call rax
0x00000000005eb596 : mov rax, qword ptr [rip + 0x4172d3] ; call rax
0x00000000005eb58d : mov rax, qword ptr [rip + 0x4172d4] ; call rax
0x00000000005eb561 : mov rax, qword ptr [rip + 0x4172f8] ; call rax
0x00000000005eb56a : mov rax, qword ptr [rip + 0x41736f] ; call rax
0x00000000005eb558 : mov rax, qword ptr [rip + 0x417389] ; call rax
0x00000000005eb31c : mov rax, qword ptr [rip + 0x4175c5] ; call rax
0x00000000005eb1a2 : mov rax, qword ptr [rip + 0x41773f] ; call rax
0x00000000005eb0e6 : mov rax, qword ptr [rip + 0x4177f3] ; call rax
0x00000000005eb0ca : mov rax, qword ptr [rip + 0x417817] ; call rax
0x00000000005eaf22 : mov rax, qword ptr [rip + 0x417947] ; call rax
0x00000000005eaf19 : mov rax, qword ptr [rip + 0x417948] ; call rax
0x00000000005eaeed : mov rax, qword ptr [rip + 0x41796c] ; call rax
0x00000000005eaef6 : mov rax, qword ptr [rip + 0x4179e3] ; call rax
0x00000000005eaee4 : mov rax, qword ptr [rip + 0x4179fd] ; call rax
0x00000000005eae44 : mov rax, qword ptr [rip + 0x417a25] ; call rax
0x00000000005eae3b : mov rax, qword ptr [rip + 0x417a26] ; call rax
0x00000000005eae0f : mov rax, qword ptr [rip + 0x417a4a] ; call rax
0x00000000005eae18 : mov rax, qword ptr [rip + 0x417ac1] ; call rax
0x00000000005eae06 : mov rax, qword ptr [rip + 0x417adb] ; call rax
0x00000000005e9f7a : mov rax, qword ptr [rip + 0x4188ef] ; call rax
0x00000000005e9f71 : mov rax, qword ptr [rip + 0x4188f0] ; call rax
0x00000000005e9f45 : mov rax, qword ptr [rip + 0x418914] ; call rax
0x00000000005e9f4e : mov rax, qword ptr [rip + 0x41898b] ; call rax
0x00000000005e9f3c : mov rax, qword ptr [rip + 0x4189a5] ; call rax
0x00000000005e9813 : mov rax, qword ptr [rip + 0x4190ce] ; call rax
0x00000000005e9158 : mov rax, qword ptr [rip + 0x419781] ; call rax
0x00000000005e9134 : mov rax, qword ptr [rip + 0x4197ad] ; call rax
0x00000000005e8cf4 : mov rax, qword ptr [rip + 0x419be5] ; call rax
0x00000000005e8cd0 : mov rax, qword ptr [rip + 0x419c11] ; call rax
0x00000000005e8774 : mov rax, qword ptr [rip + 0x41a16d] ; call rax
0x00000000005e8630 : mov rax, qword ptr [rip + 0x41a2b1] ; call rax
0x00000000005e8574 : mov rax, qword ptr [rip + 0x41a365] ; call rax
0x00000000005e8558 : mov rax, qword ptr [rip + 0x41a389] ; call rax
0x00000000005e83ec : mov rax, qword ptr [rip + 0x41a47d] ; call rax
0x00000000005e83e3 : mov rax, qword ptr [rip + 0x41a47e] ; call rax
0x00000000005e83b7 : mov rax, qword ptr [rip + 0x41a4a2] ; call rax
0x00000000005e83c0 : mov rax, qword ptr [rip + 0x41a519] ; call rax
0x00000000005e83ae : mov rax, qword ptr [rip + 0x41a533] ; call rax
0x00000000005e827e : mov rax, qword ptr [rip + 0x41a5eb] ; call rax
0x00000000005e8275 : mov rax, qword ptr [rip + 0x41a5ec] ; call rax
0x00000000005e8249 : mov rax, qword ptr [rip + 0x41a610] ; call rax
0x00000000005e8252 : mov rax, qword ptr [rip + 0x41a687] ; call rax
0x00000000005e8240 : mov rax, qword ptr [rip + 0x41a6a1] ; call rax
0x00000000005e8004 : mov rax, qword ptr [rip + 0x41a8dd] ; call rax
0x00000000005e7e8a : mov rax, qword ptr [rip + 0x41aa57] ; call rax
0x00000000005e7dce : mov rax, qword ptr [rip + 0x41ab0b] ; call rax
0x00000000005e7db2 : mov rax, qword ptr [rip + 0x41ab2f] ; call rax
0x00000000005e7c0a : mov rax, qword ptr [rip + 0x41ac5f] ; call rax
0x00000000005e7c01 : mov rax, qword ptr [rip + 0x41ac60] ; call rax
0x00000000005e7bd5 : mov rax, qword ptr [rip + 0x41ac84] ; call rax
0x00000000005e7bde : mov rax, qword ptr [rip + 0x41acfb] ; call rax
0x00000000005e7bcc : mov rax, qword ptr [rip + 0x41ad15] ; call rax
0x00000000005e7b2c : mov rax, qword ptr [rip + 0x41ad3d] ; call rax
0x00000000005e7b23 : mov rax, qword ptr [rip + 0x41ad3e] ; call rax
0x00000000005e7af7 : mov rax, qword ptr [rip + 0x41ad62] ; call rax
0x00000000005e7b00 : mov rax, qword ptr [rip + 0x41add9] ; call rax
0x00000000005e7aee : mov rax, qword ptr [rip + 0x41adf3] ; call rax
0x00000000005e6b00 : mov rax, qword ptr [rip + 0x41bde1] ; call rax
0x00000000005e6a38 : mov rax, qword ptr [rip + 0x41bea1] ; call rax
0x00000000005e6a1c : mov rax, qword ptr [rip + 0x41bec5] ; call rax
0x00000000005e6964 : mov rax, qword ptr [rip + 0x41bf75] ; call rax
0x00000000005e6948 : mov rax, qword ptr [rip + 0x41bf99] ; call rax
0x00000000005e65c6 : mov rax, qword ptr [rip + 0x41c313] ; call rax
0x00000000005e65aa : mov rax, qword ptr [rip + 0x41c337] ; call rax
0x00000000005e5ecd : mov rax, qword ptr [rip + 0x41ca14] ; call rax
0x00000000005e5ce9 : mov rax, qword ptr [rip + 0x41cbf8] ; call rax
0x00000000005e59da : mov rax, qword ptr [rip + 0x41ceff] ; call rax
0x00000000005e59b4 : mov rax, qword ptr [rip + 0x41cf2d] ; call rax
0x00000000005e57bb : mov rax, qword ptr [rip + 0x41d126] ; call rax
0x00000000005e56fe : mov rax, qword ptr [rip + 0x41d1db] ; call rax
0x00000000005e56e2 : mov rax, qword ptr [rip + 0x41d1ff] ; call rax
0x00000000005e5580 : mov rax, qword ptr [rip + 0x41d361] ; call rax
0x00000000005e54c0 : mov rax, qword ptr [rip + 0x41d419] ; call rax
0x00000000005e54a4 : mov rax, qword ptr [rip + 0x41d43d] ; call rax
0x00000000005e530f : mov rax, qword ptr [rip + 0x41d5d2] ; call rax
0x00000000005e51e4 : mov rax, qword ptr [rip + 0x41d6f5] ; call rax
0x00000000005e51c8 : mov rax, qword ptr [rip + 0x41d719] ; call rax
0x00000000005e4eff : mov rax, qword ptr [rip + 0x41d9e2] ; call rax
0x00000000005e4d75 : mov rax, qword ptr [rip + 0x41db6c] ; call rax
0x00000000005e4b30 : mov rax, qword ptr [rip + 0x41dda9] ; call rax
0x00000000005e4b0a : mov rax, qword ptr [rip + 0x41ddd7] ; call rax
0x00000000005e468f : mov rax, qword ptr [rip + 0x41e252] ; call rax
0x00000000005e43ee : mov rax, qword ptr [rip + 0x41e4f3] ; call rax
0x00000000005e4145 : mov rax, qword ptr [rip + 0x41e79c] ; call rax
0x00000000005e3dfb : mov rax, qword ptr [rip + 0x41eae6] ; call rax
0x00000000005e3b55 : mov rax, qword ptr [rip + 0x41ed8c] ; call rax
0x00000000005e38af : mov rax, qword ptr [rip + 0x41f032] ; call rax
0x00000000005e35a8 : mov rax, qword ptr [rip + 0x41f339] ; call rax
0x00000000005e331b : mov rax, qword ptr [rip + 0x41f5be] ; call rax
0x00000000005e32fa : mov rax, qword ptr [rip + 0x41f5e7] ; call rax
0x00000000005e305b : mov rax, qword ptr [rip + 0x41f87e] ; call rax
0x00000000005e303a : mov rax, qword ptr [rip + 0x41f8a7] ; call rax
0x00000000005e2eb6 : mov rax, qword ptr [rip + 0x41fa23] ; call rax
0x00000000005e2e92 : mov rax, qword ptr [rip + 0x41fa4f] ; call rax
0x00000000005e2dda : mov rax, qword ptr [rip + 0x41faff] ; call rax
0x00000000005e2db4 : mov rax, qword ptr [rip + 0x41fb2d] ; call rax
0x00000000005e2cfc : mov rax, qword ptr [rip + 0x41fbdd] ; call rax
0x00000000005e2cd6 : mov rax, qword ptr [rip + 0x41fc0b] ; call rax
0x00000000005e2c1e : mov rax, qword ptr [rip + 0x41fcbb] ; call rax
0x00000000005e2bf8 : mov rax, qword ptr [rip + 0x41fce9] ; call rax
0x00000000005e2715 : mov rax, qword ptr [rip + 0x4201cc] ; call rax
0x00000000005e26ef : mov rax, qword ptr [rip + 0x4201ea] ; call rax
0x00000000005e26af : mov rax, qword ptr [rip + 0x420232] ; call rax
0x00000000005e266d : mov rax, qword ptr [rip + 0x420274] ; call rax
0x00000000005e25c3 : mov rax, qword ptr [rip + 0x420316] ; call rax
0x00000000005e2583 : mov rax, qword ptr [rip + 0x42035e] ; call rax
0x00000000005e2541 : mov rax, qword ptr [rip + 0x4203a0] ; call rax
0x00000000005e24c4 : mov rax, qword ptr [rip + 0x420415] ; call rax
0x00000000005e2484 : mov rax, qword ptr [rip + 0x42045d] ; call rax
0x00000000005e2444 : mov rax, qword ptr [rip + 0x42049d] ; call rax
0x00000000005e23cd : mov rax, qword ptr [rip + 0x42050c] ; call rax
0x00000000005e238d : mov rax, qword ptr [rip + 0x420554] ; call rax
0x00000000005e234d : mov rax, qword ptr [rip + 0x420594] ; call rax
0x00000000005e2295 : mov rax, qword ptr [rip + 0x42064c] ; call rax
0x00000000005e20f4 : mov rax, qword ptr [rip + 0x4207e5] ; call rax
0x00000000005e20ba : mov rax, qword ptr [rip + 0x420827] ; call rax
0x00000000005e1deb : mov rax, qword ptr [rip + 0x420af6] ; call rax
0x00000000005e1d17 : mov rax, qword ptr [rip + 0x420bca] ; call rax
0x00000000005e1b9e : mov rax, qword ptr [rip + 0x420d3b] ; call rax
0x00000000005e1b78 : mov rax, qword ptr [rip + 0x420d69] ; call rax
0x00000000005e1990 : mov rax, qword ptr [rip + 0x420f51] ; call rax
0x00000000005e18d0 : mov rax, qword ptr [rip + 0x421009] ; call rax
0x00000000005e18b4 : mov rax, qword ptr [rip + 0x42102d] ; call rax
0x00000000005e170e : mov rax, qword ptr [rip + 0x4211cb] ; call rax
0x00000000005e16f2 : mov rax, qword ptr [rip + 0x4211ef] ; call rax
0x00000000005e0f1e : mov rax, qword ptr [rip + 0x42194b] ; call rax
0x00000000005e0f05 : mov rax, qword ptr [rip + 0x42195c] ; call rax
0x00000000005e0f7b : mov rax, qword ptr [rip + 0x42195e] ; call rax
0x00000000005e0e81 : mov rax, qword ptr [rip + 0x4219d8] ; call rax
0x00000000005e0ec4 : mov rax, qword ptr [rip + 0x421a1d] ; call rax
0x00000000005e0e8a : mov rax, qword ptr [rip + 0x421a4f] ; call rax
0x00000000005e0e78 : mov rax, qword ptr [rip + 0x421a69] ; call rax
0x00000000005e087e : mov rax, qword ptr [rip + 0x421feb] ; call rax
0x00000000005e0865 : mov rax, qword ptr [rip + 0x421ffc] ; call rax
0x00000000005e08db : mov rax, qword ptr [rip + 0x421ffe] ; call rax
0x00000000005e07e1 : mov rax, qword ptr [rip + 0x422078] ; call rax
0x00000000005e0824 : mov rax, qword ptr [rip + 0x4220bd] ; call rax
0x00000000005e07ea : mov rax, qword ptr [rip + 0x4220ef] ; call rax
0x00000000005e07d8 : mov rax, qword ptr [rip + 0x422109] ; call rax
0x00000000005e0323 : mov rax, qword ptr [rip + 0x4225be] ; call rax
0x00000000005e0266 : mov rax, qword ptr [rip + 0x422673] ; call rax
0x00000000005e024a : mov rax, qword ptr [rip + 0x422697] ; call rax
0x00000000005dfdca : mov rax, qword ptr [rip + 0x422b17] ; call rax
0x00000000005dfcd9 : mov rax, qword ptr [rip + 0x422c08] ; call rax
0x00000000005df374 : mov rax, qword ptr [rip + 0x42356d] ; call rax
0x00000000005df281 : mov rax, qword ptr [rip + 0x423658] ; call rax
0x00000000005df258 : mov rax, qword ptr [rip + 0x423689] ; call rax
0x00000000005df0d5 : mov rax, qword ptr [rip + 0x42380c] ; call rax
0x00000000005df00b : mov rax, qword ptr [rip + 0x4238ce] ; call rax
0x00000000005defe2 : mov rax, qword ptr [rip + 0x4238ff] ; call rax
0x00000000005de4fa : mov rax, qword ptr [rip + 0x4243df] ; call rax
0x00000000005de4ca : mov rax, qword ptr [rip + 0x424417] ; call rax
0x00000000005de412 : mov rax, qword ptr [rip + 0x4244c7] ; call rax
0x00000000005de3e0 : mov rax, qword ptr [rip + 0x424501] ; call rax
0x00000000005de2b4 : mov rax, qword ptr [rip + 0x424625] ; call rax
0x00000000005de282 : mov rax, qword ptr [rip + 0x42465f] ; call rax
0x00000000005de1ca : mov rax, qword ptr [rip + 0x42470f] ; call rax
0x00000000005de198 : mov rax, qword ptr [rip + 0x424749] ; call rax
0x00000000005ddef5 : mov rax, qword ptr [rip + 0x4249ec] ; call rax
0x00000000005dda70 : mov rax, qword ptr [rip + 0x424e71] ; call rax
0x00000000005dd882 : mov rax, qword ptr [rip + 0x425057] ; call rax
0x00000000005dd7e7 : mov rax, qword ptr [rip + 0x4250fa] ; call rax
0x00000000005dd528 : mov rax, qword ptr [rip + 0x4253b1] ; call rax
0x00000000005dd48d : mov rax, qword ptr [rip + 0x425454] ; call rax
0x00000000005dcf87 : mov rax, qword ptr [rip + 0x425952] ; call rax
0x00000000005dceec : mov rax, qword ptr [rip + 0x4259f5] ; call rax
0x00000000005dcb05 : mov rax, qword ptr [rip + 0x425dd4] ; call rax
0x00000000005dca6d : mov rax, qword ptr [rip + 0x425e74] ; call rax
0x00000000005dc0f0 : mov rax, qword ptr [rip + 0x4267f1] ; call rax
0x00000000005dc030 : mov rax, qword ptr [rip + 0x4268a9] ; call rax
0x00000000005dc014 : mov rax, qword ptr [rip + 0x4268cd] ; call rax
0x00000000005dbe69 : mov rax, qword ptr [rip + 0x426a78] ; call rax
0x00000000005dbd1c : mov rax, qword ptr [rip + 0x426bbd] ; call rax
0x00000000005dbd00 : mov rax, qword ptr [rip + 0x426be1] ; call rax
0x00000000005dbb87 : mov rax, qword ptr [rip + 0x426d5a] ; call rax
0x00000000005db347 : mov rax, qword ptr [rip + 0x42759a] ; call rax
0x00000000005db230 : mov rax, qword ptr [rip + 0x4276a9] ; call rax
0x00000000005db214 : mov rax, qword ptr [rip + 0x4276cd] ; call rax
0x00000000005dafc7 : mov rax, qword ptr [rip + 0x427912] ; call rax
0x00000000005dafa6 : mov rax, qword ptr [rip + 0x42793b] ; call rax
0x00000000005dad07 : mov rax, qword ptr [rip + 0x427bd2] ; call rax
0x00000000005dace6 : mov rax, qword ptr [rip + 0x427bfb] ; call rax
0x00000000005da9a5 : mov rax, qword ptr [rip + 0x427f3c] ; call rax
0x00000000005da4a3 : mov rax, qword ptr [rip + 0x42843e] ; call rax
0x00000000005da44d : mov rax, qword ptr [rip + 0x428494] ; call rax
0x00000000005da2e5 : mov rax, qword ptr [rip + 0x4285f4] ; call rax
0x00000000005da2b8 : mov rax, qword ptr [rip + 0x428629] ; call rax
0x00000000005da169 : mov rax, qword ptr [rip + 0x428778] ; call rax
0x00000000005da0ac : mov rax, qword ptr [rip + 0x42882d] ; call rax
0x00000000005da090 : mov rax, qword ptr [rip + 0x428851] ; call rax
0x00000000005d9f3b : mov rax, qword ptr [rip + 0x4289a6] ; call rax
0x00000000005d9e7e : mov rax, qword ptr [rip + 0x428a5b] ; call rax
0x00000000005d9e62 : mov rax, qword ptr [rip + 0x428a7f] ; call rax
0x00000000005d9d0d : mov rax, qword ptr [rip + 0x428bd4] ; call rax
0x00000000005d9c50 : mov rax, qword ptr [rip + 0x428c89] ; call rax
0x00000000005d9c34 : mov rax, qword ptr [rip + 0x428cad] ; call rax
0x00000000005d9ad7 : mov rax, qword ptr [rip + 0x428e0a] ; call rax
0x00000000005d9a1a : mov rax, qword ptr [rip + 0x428ebf] ; call rax
0x00000000005d99fe : mov rax, qword ptr [rip + 0x428ee3] ; call rax
0x00000000005d9508 : mov rax, qword ptr [rip + 0x4293d9] ; call rax
0x00000000005d9440 : mov rax, qword ptr [rip + 0x429499] ; call rax
0x00000000005d9424 : mov rax, qword ptr [rip + 0x4294bd] ; call rax
0x00000000005d936c : mov rax, qword ptr [rip + 0x42956d] ; call rax
0x00000000005d9350 : mov rax, qword ptr [rip + 0x429591] ; call rax
0x00000000005d8ffa : mov rax, qword ptr [rip + 0x4298df] ; call rax
0x00000000005d8fde : mov rax, qword ptr [rip + 0x429903] ; call rax
0x00000000005d893f : mov rax, qword ptr [rip + 0x429fa2] ; call rax
0x00000000005d87b6 : mov rax, qword ptr [rip + 0x42a12b] ; call rax
0x00000000005d84dc : mov rax, qword ptr [rip + 0x42a3fd] ; call rax
0x00000000005d84b6 : mov rax, qword ptr [rip + 0x42a42b] ; call rax
0x00000000005d82bd : mov rax, qword ptr [rip + 0x42a624] ; call rax
0x00000000005d8200 : mov rax, qword ptr [rip + 0x42a6d9] ; call rax
0x00000000005d81e4 : mov rax, qword ptr [rip + 0x42a6fd] ; call rax
0x00000000005d808e : mov rax, qword ptr [rip + 0x42a853] ; call rax
0x00000000005d7fce : mov rax, qword ptr [rip + 0x42a90b] ; call rax
0x00000000005d7fb2 : mov rax, qword ptr [rip + 0x42a92f] ; call rax
0x00000000005d7e2b : mov rax, qword ptr [rip + 0x42aab6] ; call rax
0x00000000005d7d00 : mov rax, qword ptr [rip + 0x42abd9] ; call rax
0x00000000005d7ce4 : mov rax, qword ptr [rip + 0x42abfd] ; call rax
0x00000000005d7a4e : mov rax, qword ptr [rip + 0x42ae93] ; call rax
0x00000000005d7912 : mov rax, qword ptr [rip + 0x42afcf] ; call rax
0x00000000005d76da : mov rax, qword ptr [rip + 0x42b1ff] ; call rax
0x00000000005d76b4 : mov rax, qword ptr [rip + 0x42b22d] ; call rax
0x00000000005d7245 : mov rax, qword ptr [rip + 0x42b69c] ; call rax
0x00000000005d6faf : mov rax, qword ptr [rip + 0x42b932] ; call rax
0x00000000005d6d1c : mov rax, qword ptr [rip + 0x42bbc5] ; call rax
0x00000000005d6a0d : mov rax, qword ptr [rip + 0x42bed4] ; call rax
0x00000000005d6797 : mov rax, qword ptr [rip + 0x42c14a] ; call rax
0x00000000005d6525 : mov rax, qword ptr [rip + 0x42c3bc] ; call rax
0x00000000005d6252 : mov rax, qword ptr [rip + 0x42c68f] ; call rax
0x00000000005d5fd1 : mov rax, qword ptr [rip + 0x42c908] ; call rax
0x00000000005d5fb0 : mov rax, qword ptr [rip + 0x42c931] ; call rax
0x00000000005d5d1d : mov rax, qword ptr [rip + 0x42cbbc] ; call rax
0x00000000005d5cfc : mov rax, qword ptr [rip + 0x42cbe5] ; call rax
0x00000000005d5b78 : mov rax, qword ptr [rip + 0x42cd61] ; call rax
0x00000000005d5b54 : mov rax, qword ptr [rip + 0x42cd8d] ; call rax
0x00000000005d5a9c : mov rax, qword ptr [rip + 0x42ce3d] ; call rax
0x00000000005d5a76 : mov rax, qword ptr [rip + 0x42ce6b] ; call rax
0x00000000005d59be : mov rax, qword ptr [rip + 0x42cf1b] ; call rax
0x00000000005d5998 : mov rax, qword ptr [rip + 0x42cf49] ; call rax
0x00000000005d58e0 : mov rax, qword ptr [rip + 0x42cff9] ; call rax
0x00000000005d58ba : mov rax, qword ptr [rip + 0x42d027] ; call rax
0x00000000005d52fb : mov rax, qword ptr [rip + 0x42d5e6] ; call rax
0x00000000005d52d5 : mov rax, qword ptr [rip + 0x42d604] ; call rax
0x00000000005d5295 : mov rax, qword ptr [rip + 0x42d64c] ; call rax
0x00000000005d5253 : mov rax, qword ptr [rip + 0x42d68e] ; call rax
0x00000000005d51a9 : mov rax, qword ptr [rip + 0x42d730] ; call rax
0x00000000005d5169 : mov rax, qword ptr [rip + 0x42d778] ; call rax
0x00000000005d5127 : mov rax, qword ptr [rip + 0x42d7ba] ; call rax
0x00000000005d50aa : mov rax, qword ptr [rip + 0x42d82f] ; call rax
0x00000000005d506a : mov rax, qword ptr [rip + 0x42d877] ; call rax
0x00000000005d502a : mov rax, qword ptr [rip + 0x42d8b7] ; call rax
0x00000000005d4fb3 : mov rax, qword ptr [rip + 0x42d926] ; call rax
0x00000000005d4f73 : mov rax, qword ptr [rip + 0x42d96e] ; call rax
0x00000000005d4f33 : mov rax, qword ptr [rip + 0x42d9ae] ; call rax
0x00000000005d4e7b : mov rax, qword ptr [rip + 0x42da66] ; call rax
0x00000000005d4cda : mov rax, qword ptr [rip + 0x42dbff] ; call rax
0x00000000005d4ca0 : mov rax, qword ptr [rip + 0x42dc41] ; call rax
0x00000000005d4ac4 : mov rax, qword ptr [rip + 0x42de1d] ; call rax
0x00000000005d4a04 : mov rax, qword ptr [rip + 0x42ded5] ; call rax
0x00000000005d49e8 : mov rax, qword ptr [rip + 0x42def9] ; call rax
0x00000000005d4842 : mov rax, qword ptr [rip + 0x42e097] ; call rax
0x00000000005d4826 : mov rax, qword ptr [rip + 0x42e0bb] ; call rax
0x00000000005d4078 : mov rax, qword ptr [rip + 0x42e7f1] ; call rax
0x00000000005d405f : mov rax, qword ptr [rip + 0x42e802] ; call rax
0x00000000005d40d5 : mov rax, qword ptr [rip + 0x42e804] ; call rax
0x00000000005d3fdb : mov rax, qword ptr [rip + 0x42e87e] ; call rax
0x00000000005d401e : mov rax, qword ptr [rip + 0x42e8c3] ; call rax
0x00000000005d3fe4 : mov rax, qword ptr [rip + 0x42e8f5] ; call rax
0x00000000005d3fd2 : mov rax, qword ptr [rip + 0x42e90f] ; call rax
0x00000000005d39d8 : mov rax, qword ptr [rip + 0x42ee91] ; call rax
0x00000000005d39bf : mov rax, qword ptr [rip + 0x42eea2] ; call rax
0x00000000005d3a35 : mov rax, qword ptr [rip + 0x42eea4] ; call rax
0x00000000005d393b : mov rax, qword ptr [rip + 0x42ef1e] ; call rax
0x00000000005d397e : mov rax, qword ptr [rip + 0x42ef63] ; call rax
0x00000000005d3944 : mov rax, qword ptr [rip + 0x42ef95] ; call rax
0x00000000005d3932 : mov rax, qword ptr [rip + 0x42efaf] ; call rax
0x00000000005d347d : mov rax, qword ptr [rip + 0x42f464] ; call rax
0x00000000005d33c0 : mov rax, qword ptr [rip + 0x42f519] ; call rax
0x00000000005d33a4 : mov rax, qword ptr [rip + 0x42f53d] ; call rax
0x00000000005d2f2f : mov rax, qword ptr [rip + 0x42f9b2] ; call rax
0x00000000005d2e49 : mov rax, qword ptr [rip + 0x42fa98] ; call rax
0x00000000005d252e : mov rax, qword ptr [rip + 0x4303b3] ; call rax
0x00000000005d243c : mov rax, qword ptr [rip + 0x43049d] ; call rax
0x00000000005d2416 : mov rax, qword ptr [rip + 0x4304cb] ; call rax
0x00000000005d2296 : mov rax, qword ptr [rip + 0x43064b] ; call rax
0x00000000005d21d0 : mov rax, qword ptr [rip + 0x430709] ; call rax
0x00000000005d21aa : mov rax, qword ptr [rip + 0x430737] ; call rax
0x00000000005d1710 : mov rax, qword ptr [rip + 0x4311c9] ; call rax
0x00000000005d16e0 : mov rax, qword ptr [rip + 0x431201] ; call rax
0x00000000005d1628 : mov rax, qword ptr [rip + 0x4312b1] ; call rax
0x00000000005d15f6 : mov rax, qword ptr [rip + 0x4312eb] ; call rax
0x00000000005d14ca : mov rax, qword ptr [rip + 0x43140f] ; call rax
0x00000000005d1498 : mov rax, qword ptr [rip + 0x431449] ; call rax
0x00000000005d13e0 : mov rax, qword ptr [rip + 0x4314f9] ; call rax
0x00000000005d13ae : mov rax, qword ptr [rip + 0x431533] ; call rax
0x00000000005d1116 : mov rax, qword ptr [rip + 0x4317cb] ; call rax
0x00000000005d0c9c : mov rax, qword ptr [rip + 0x431c45] ; call rax
0x00000000005d0ad7 : mov rax, qword ptr [rip + 0x431e02] ; call rax
0x00000000005d0a3c : mov rax, qword ptr [rip + 0x431ea5] ; call rax
0x00000000005d07aa : mov rax, qword ptr [rip + 0x43212f] ; call rax
0x00000000005d070f : mov rax, qword ptr [rip + 0x4321d2] ; call rax
0x00000000005d024b : mov rax, qword ptr [rip + 0x43268e] ; call rax
0x00000000005d01b0 : mov rax, qword ptr [rip + 0x432731] ; call rax
0x00000000005cfe1f : mov rax, qword ptr [rip + 0x432aba] ; call rax
0x00000000005cfd87 : mov rax, qword ptr [rip + 0x432b5a] ; call rax
0x00000000005cf484 : mov rax, qword ptr [rip + 0x43345d] ; call rax
0x00000000005cf3c4 : mov rax, qword ptr [rip + 0x433515] ; call rax
0x00000000005cf3a8 : mov rax, qword ptr [rip + 0x433539] ; call rax
0x00000000005cf20b : mov rax, qword ptr [rip + 0x4336d6] ; call rax
0x00000000005cf0be : mov rax, qword ptr [rip + 0x43381b] ; call rax
0x00000000005cf0a2 : mov rax, qword ptr [rip + 0x43383f] ; call rax
0x00000000005cef33 : mov rax, qword ptr [rip + 0x4339ae] ; call rax
0x00000000005ce759 : mov rax, qword ptr [rip + 0x434188] ; call rax
0x00000000005ce642 : mov rax, qword ptr [rip + 0x434297] ; call rax
0x00000000005ce626 : mov rax, qword ptr [rip + 0x4342bb] ; call rax
0x00000000005ce3e5 : mov rax, qword ptr [rip + 0x4344f4] ; call rax
0x00000000005ce3c4 : mov rax, qword ptr [rip + 0x43451d] ; call rax
0x00000000005ce131 : mov rax, qword ptr [rip + 0x4347a8] ; call rax
0x00000000005ce110 : mov rax, qword ptr [rip + 0x4347d1] ; call rax
0x00000000005cde03 : mov rax, qword ptr [rip + 0x434ade] ; call rax
0x00000000005cd94d : mov rax, qword ptr [rip + 0x434f94] ; call rax
0x00000000005cd8f7 : mov rax, qword ptr [rip + 0x434fea] ; call rax
0x00000000005cd78f : mov rax, qword ptr [rip + 0x43514a] ; call rax
0x00000000005cd762 : mov rax, qword ptr [rip + 0x43517f] ; call rax
0x00000000005cd613 : mov rax, qword ptr [rip + 0x4352ce] ; call rax
0x00000000005cd556 : mov rax, qword ptr [rip + 0x435383] ; call rax
0x00000000005cd53a : mov rax, qword ptr [rip + 0x4353a7] ; call rax
0x00000000005cd3e5 : mov rax, qword ptr [rip + 0x4354fc] ; call rax
0x00000000005cd328 : mov rax, qword ptr [rip + 0x4355b1] ; call rax
0x00000000005cd30c : mov rax, qword ptr [rip + 0x4355d5] ; call rax
0x00000000005cd1b7 : mov rax, qword ptr [rip + 0x43572a] ; call rax
0x00000000005cd0fa : mov rax, qword ptr [rip + 0x4357df] ; call rax
0x00000000005cd0de : mov rax, qword ptr [rip + 0x435803] ; call rax
0x00000000005ccf81 : mov rax, qword ptr [rip + 0x435960] ; call rax
0x00000000005ccec4 : mov rax, qword ptr [rip + 0x435a15] ; call rax
0x00000000005ccea8 : mov rax, qword ptr [rip + 0x435a39] ; call rax
0x00000000005be9c6 : mov rax, qword ptr [rip + 0x443f13] ; jmp rax
0x00000000005b078c : mov rax, qword ptr [rip + 0x45214d] ; jmp rax
0x00000000005b0689 : mov rax, qword ptr [rip + 0x4554f8] ; ret
0x00000000005b0379 : mov rax, qword ptr [rip + 0x455538] ; ret
0x00000000005b0319 : mov rax, qword ptr [rip + 0x455568] ; ret
0x00000000005af559 : mov rax, qword ptr [rip + 0x456658] ; ret
0x00000000005a9656 : mov rax, qword ptr [rip + 0x459283] ; jmp rax
0x00000000005a8d86 : mov rax, qword ptr [rip + 0x459b53] ; jmp rax
0x00000000005a8cf6 : mov rax, qword ptr [rip + 0x459be3] ; jmp rax
0x00000000005a8bc6 : mov rax, qword ptr [rip + 0x459d13] ; jmp rax
0x00000000005a8b56 : mov rax, qword ptr [rip + 0x459d83] ; jmp rax
0x00000000005a3c76 : mov rax, qword ptr [rip + 0x45ec63] ; jmp rax
0x00000000005a2dc6 : mov rax, qword ptr [rip + 0x45fb13] ; jmp rax
0x00000000005a2d36 : mov rax, qword ptr [rip + 0x45fba3] ; jmp rax
0x00000000005a2c46 : mov rax, qword ptr [rip + 0x45fc93] ; jmp rax
0x00000000005a2bd6 : mov rax, qword ptr [rip + 0x45fd03] ; jmp rax
0x0000000000598b06 : mov rax, qword ptr [rip + 0x469dd3] ; jmp rax
0x0000000000597f46 : mov rax, qword ptr [rip + 0x46a993] ; jmp rax
0x0000000000597eb6 : mov rax, qword ptr [rip + 0x46aa23] ; jmp rax
0x0000000000597d86 : mov rax, qword ptr [rip + 0x46ab53] ; jmp rax
0x0000000000597d16 : mov rax, qword ptr [rip + 0x46abc3] ; jmp rax
0x0000000000597be6 : mov rax, qword ptr [rip + 0x46acf3] ; jmp rax
0x0000000000596fe6 : mov rax, qword ptr [rip + 0x46b8f3] ; jmp rax
0x0000000000596f56 : mov rax, qword ptr [rip + 0x46b983] ; jmp rax
0x0000000000596e66 : mov rax, qword ptr [rip + 0x46ba73] ; jmp rax
0x0000000000596df6 : mov rax, qword ptr [rip + 0x46bae3] ; jmp rax
0x0000000000596cc6 : mov rax, qword ptr [rip + 0x46bc13] ; jmp rax
0x0000000000596186 : mov rax, qword ptr [rip + 0x46c753] ; jmp rax
0x00000000005960f6 : mov rax, qword ptr [rip + 0x46c7e3] ; jmp rax
0x0000000000596006 : mov rax, qword ptr [rip + 0x46c8d3] ; jmp rax
0x0000000000595f96 : mov rax, qword ptr [rip + 0x46c943] ; jmp rax
0x000000000058807c : mov rax, qword ptr [rip + 0x47a85d] ; jmp rax
0x0000000000578396 : mov rax, qword ptr [rip + 0x48a543] ; jmp rax
0x0000000000572fd6 : mov rax, qword ptr [rip + 0x48f903] ; jmp rax
0x0000000000572f46 : mov rax, qword ptr [rip + 0x48f993] ; jmp rax
0x0000000000572e56 : mov rax, qword ptr [rip + 0x48fa83] ; jmp rax
0x0000000000572de6 : mov rax, qword ptr [rip + 0x48faf3] ; jmp rax
0x000000000056ca16 : mov rax, qword ptr [rip + 0x495ec3] ; jmp rax
0x000000000056c456 : mov rax, qword ptr [rip + 0x496483] ; jmp rax
0x000000000056b896 : mov rax, qword ptr [rip + 0x497043] ; jmp rax
0x000000000056b806 : mov rax, qword ptr [rip + 0x4970d3] ; jmp rax
0x000000000056b6d6 : mov rax, qword ptr [rip + 0x497203] ; jmp rax
0x000000000056b666 : mov rax, qword ptr [rip + 0x497273] ; jmp rax
0x00000000005593f6 : mov rax, qword ptr [rip + 0x4a94e3] ; jmp rax
0x0000000000558b26 : mov rax, qword ptr [rip + 0x4a9db3] ; jmp rax
0x0000000000558a96 : mov rax, qword ptr [rip + 0x4a9e43] ; jmp rax
0x0000000000558976 : mov rax, qword ptr [rip + 0x4a9f63] ; jmp rax
0x0000000000558906 : mov rax, qword ptr [rip + 0x4a9fd3] ; jmp rax
0x0000000000550f2a : mov rax, qword ptr [rip + 0x4b19af] ; jmp rax
0x0000000000550db6 : mov rax, qword ptr [rip + 0x4b1b23] ; jmp rax
0x0000000000550336 : mov rax, qword ptr [rip + 0x4b25a3] ; jmp rax
0x00000000005501b6 : mov rax, qword ptr [rip + 0x4b2723] ; jmp rax
0x000000000054f9b6 : mov rax, qword ptr [rip + 0x4b2f23] ; jmp rax
0x000000000054f926 : mov rax, qword ptr [rip + 0x4b2fb3] ; jmp rax
0x000000000054f836 : mov rax, qword ptr [rip + 0x4b30a3] ; jmp rax
0x000000000054f7c6 : mov rax, qword ptr [rip + 0x4b3113] ; jmp rax
0x00000000005481bc : mov rax, qword ptr [rip + 0x4ba71d] ; jmp rax
0x0000000000547c15 : mov rax, qword ptr [rip + 0x4bacc4] ; jmp rax
0x0000000000547838 : mov rax, qword ptr [rip + 0x4bb0a1] ; jmp rax
0x0000000000547415 : mov rax, qword ptr [rip + 0x4bb4c4] ; jmp rax
0x0000000000547116 : mov rax, qword ptr [rip + 0x4bb7c3] ; jmp rax
0x0000000000546576 : mov rax, qword ptr [rip + 0x4bc363] ; jmp rax
0x00000000005464e6 : mov rax, qword ptr [rip + 0x4bc3f3] ; jmp rax
0x0000000000545456 : mov rax, qword ptr [rip + 0x4bd483] ; jmp rax
0x00000000005453e6 : mov rax, qword ptr [rip + 0x4bd4f3] ; jmp rax
0x0000000000535ab9 : mov rax, qword ptr [rip + 0x4cce20] ; jmp rax
0x0000000000535939 : mov rax, qword ptr [rip + 0x4ccfa0] ; jmp rax
0x00000000005320e6 : mov rax, qword ptr [rip + 0x4d07f3] ; jmp rax
0x0000000000531f76 : mov rax, qword ptr [rip + 0x4d0963] ; jmp rax
0x0000000000530116 : mov rax, qword ptr [rip + 0x4d27c3] ; jmp rax
0x0000000000530086 : mov rax, qword ptr [rip + 0x4d2853] ; jmp rax
0x000000000052ff66 : mov rax, qword ptr [rip + 0x4d2973] ; jmp rax
0x000000000052fef6 : mov rax, qword ptr [rip + 0x4d29e3] ; jmp rax
0x000000000052fad6 : mov rax, qword ptr [rip + 0x4d2e03] ; jmp rax
0x000000000052eed6 : mov rax, qword ptr [rip + 0x4d3a03] ; jmp rax
0x000000000052ee46 : mov rax, qword ptr [rip + 0x4d3a93] ; jmp rax
0x000000000052ed56 : mov rax, qword ptr [rip + 0x4d3b83] ; jmp rax
0x000000000052ece6 : mov rax, qword ptr [rip + 0x4d3bf3] ; jmp rax
0x000000000052e826 : mov rax, qword ptr [rip + 0x4d40b3] ; jmp rax
0x000000000052dc66 : mov rax, qword ptr [rip + 0x4d4c73] ; jmp rax
0x000000000052dbd6 : mov rax, qword ptr [rip + 0x4d4d03] ; jmp rax
0x000000000052daa6 : mov rax, qword ptr [rip + 0x4d4e33] ; jmp rax
0x000000000052da36 : mov rax, qword ptr [rip + 0x4d4ea3] ; jmp rax
0x0000000000529699 : mov rax, qword ptr [rip + 0x4d9240] ; jmp rax
0x00000000005295d9 : mov rax, qword ptr [rip + 0x4d9300] ; jmp rax
0x000000000050d94d : mov rax, qword ptr [rip + 0x4f4f8c] ; jmp rax
0x000000000050c9e6 : mov rax, qword ptr [rip + 0x4f5ef3] ; jmp rax
0x000000000050be36 : mov rax, qword ptr [rip + 0x4f6aa3] ; jmp rax
0x000000000050bda6 : mov rax, qword ptr [rip + 0x4f6b33] ; jmp rax
0x000000000050bc96 : mov rax, qword ptr [rip + 0x4f6c43] ; jmp rax
0x000000000050bc26 : mov rax, qword ptr [rip + 0x4f6cb3] ; jmp rax
0x0000000000505e26 : mov rax, qword ptr [rip + 0x4fcab3] ; jmp rax
0x0000000000505cb6 : mov rax, qword ptr [rip + 0x4fcc23] ; jmp rax
0x0000000000505236 : mov rax, qword ptr [rip + 0x4fd6a3] ; jmp rax
0x0000000000504f46 : mov rax, qword ptr [rip + 0x4fd993] ; jmp rax
0x0000000000504b66 : mov rax, qword ptr [rip + 0x4fdd73] ; jmp rax
0x00000000005045f6 : mov rax, qword ptr [rip + 0x4fe2e3] ; jmp rax
0x0000000000503a46 : mov rax, qword ptr [rip + 0x4fee93] ; jmp rax
0x0000000000501a91 : mov rax, qword ptr [rip + 0x500e48] ; jmp rax
0x00000000004f4146 : mov rax, qword ptr [rip + 0x50e79b] ; call rax
0x00000000004f40e6 : mov rax, qword ptr [rip + 0x50e7fb] ; call rax
0x00000000004f4086 : mov rax, qword ptr [rip + 0x50e85b] ; call rax
0x00000000004f4026 : mov rax, qword ptr [rip + 0x50e8bb] ; call rax
0x00000000004f3f01 : mov rax, qword ptr [rip + 0x50e9e0] ; call rax
0x00000000004f3dd8 : mov rax, qword ptr [rip + 0x50eb09] ; call rax
0x00000000004f3c0e : mov rax, qword ptr [rip + 0x50ecd3] ; call rax
0x00000000004f3abd : mov rax, qword ptr [rip + 0x50ee24] ; call rax
0x00000000004f3a6b : mov rax, qword ptr [rip + 0x50ee76] ; call rax
0x00000000004f37bc : mov rax, qword ptr [rip + 0x50f125] ; call rax
0x00000000004f364a : mov rax, qword ptr [rip + 0x50f297] ; call rax
0x00000000004f34ca : mov rax, qword ptr [rip + 0x50f417] ; call rax
0x00000000004f346c : mov rax, qword ptr [rip + 0x50f475] ; call rax
0x00000000004f341d : mov rax, qword ptr [rip + 0x50f4c4] ; call rax
0x00000000004f32cf : mov rax, qword ptr [rip + 0x50f612] ; call rax
0x00000000004f31a9 : mov rax, qword ptr [rip + 0x50f738] ; call rax
0x00000000004f3132 : mov rax, qword ptr [rip + 0x50f7af] ; call rax
0x00000000004f3110 : mov rax, qword ptr [rip + 0x50f7c9] ; call rax
0x00000000004f30cd : mov rax, qword ptr [rip + 0x50f814] ; call rax
0x00000000004f2fed : mov rax, qword ptr [rip + 0x50f8ec] ; call rax
0x00000000004f2fa4 : mov rax, qword ptr [rip + 0x50f93d] ; call rax
0x00000000004f2ee4 : mov rax, qword ptr [rip + 0x50f9f5] ; call rax
0x00000000004f2e9b : mov rax, qword ptr [rip + 0x50fa46] ; call rax
0x00000000004f28a9 : mov rax, qword ptr [rip + 0x510030] ; call rax
0x00000000004f2747 : mov rax, qword ptr [rip + 0x51019a] ; call rax
0x00000000004f2603 : mov rax, qword ptr [rip + 0x5102d6] ; call rax
0x00000000004f259e : mov rax, qword ptr [rip + 0x510343] ; call rax
0x00000000004f2338 : mov rax, qword ptr [rip + 0x5105a1] ; call rax
0x00000000004f22eb : mov rax, qword ptr [rip + 0x5105f6] ; call rax
0x00000000004f18e4 : mov rax, qword ptr [rip + 0x510ff5] ; call rax
0x00000000004f18c2 : mov rax, qword ptr [rip + 0x51101f] ; call rax
0x00000000004f1661 : mov rax, qword ptr [rip + 0x511280] ; call rax
0x00000000004f1557 : mov rax, qword ptr [rip + 0x511382] ; call rax
0x00000000004f153a : mov rax, qword ptr [rip + 0x5113a7] ; call rax
0x00000000004f13c4 : mov rax, qword ptr [rip + 0x511515] ; call rax
0x00000000004f138c : mov rax, qword ptr [rip + 0x511555] ; call rax
0x00000000004f12d4 : mov rax, qword ptr [rip + 0x511605] ; call rax
0x00000000004f12b8 : mov rax, qword ptr [rip + 0x511629] ; call rax
0x00000000004f113b : mov rax, qword ptr [rip + 0x5117a6] ; call rax
0x00000000004f0b9a : mov rax, qword ptr [rip + 0x511d3f] ; call rax
0x00000000004f0b5a : mov rax, qword ptr [rip + 0x511d87] ; call rax
0x00000000004f0aa1 : mov rax, qword ptr [rip + 0x511e38] ; call rax
0x00000000004f0a5e : mov rax, qword ptr [rip + 0x511e83] ; call rax
0x00000000004f083a : mov rax, qword ptr [rip + 0x51209f] ; call rax
0x00000000004f07fa : mov rax, qword ptr [rip + 0x5120e7] ; call rax
0x00000000004f07c0 : mov rax, qword ptr [rip + 0x512121] ; call rax
0x00000000004f0763 : mov rax, qword ptr [rip + 0x512176] ; call rax
0x00000000004f0723 : mov rax, qword ptr [rip + 0x5121be] ; call rax
0x00000000004f06e9 : mov rax, qword ptr [rip + 0x5121f8] ; call rax
0x00000000004f051c : mov rax, qword ptr [rip + 0x5123bd] ; call rax
0x00000000004f04dc : mov rax, qword ptr [rip + 0x512405] ; call rax
0x00000000004f03a9 : mov rax, qword ptr [rip + 0x512530] ; call rax
0x00000000004f0368 : mov rax, qword ptr [rip + 0x512579] ; call rax
0x00000000004f0323 : mov rax, qword ptr [rip + 0x5125be] ; call rax
0x00000000004efe0a : mov rax, qword ptr [rip + 0x512ad7] ; call rax
0x00000000004ef606 : mov rax, qword ptr [rip + 0x5132db] ; call rax
0x00000000004ef431 : mov rax, qword ptr [rip + 0x5134b0] ; call rax
0x00000000004ec83c : mov rax, qword ptr [rip + 0x51609d] ; call rax
0x00000000004ec7ea : mov rax, qword ptr [rip + 0x5160f7] ; call rax
0x00000000004ec731 : mov rax, qword ptr [rip + 0x5161a8] ; call rax
0x00000000004ec6dc : mov rax, qword ptr [rip + 0x516205] ; call rax
0x00000000004ec616 : mov rax, qword ptr [rip + 0x5162c3] ; call rax
0x00000000004ec5ae : mov rax, qword ptr [rip + 0x516333] ; call rax
0x00000000004ec4e6 : mov rax, qword ptr [rip + 0x5163f3] ; call rax
0x00000000004ec47e : mov rax, qword ptr [rip + 0x516463] ; call rax
0x00000000004ec2f5 : mov rax, qword ptr [rip + 0x5165e4] ; call rax
0x00000000004ec2a0 : mov rax, qword ptr [rip + 0x516641] ; call rax
0x00000000004ec123 : mov rax, qword ptr [rip + 0x5167b6] ; call rax
0x00000000004ec104 : mov rax, qword ptr [rip + 0x5167dd] ; call rax
0x00000000004ec04b : mov rax, qword ptr [rip + 0x51688e] ; call rax
0x00000000004ec00e : mov rax, qword ptr [rip + 0x5168d3] ; call rax
0x00000000004ebee3 : mov rax, qword ptr [rip + 0x5169f6] ; call rax
0x00000000004ebe78 : mov rax, qword ptr [rip + 0x516a69] ; call rax
0x00000000004ebce5 : mov rax, qword ptr [rip + 0x516bf4] ; call rax
0x00000000004ebc62 : mov rax, qword ptr [rip + 0x516c7f] ; call rax
0x00000000004ebb9a : mov rax, qword ptr [rip + 0x516d3f] ; call rax
0x00000000004ebb32 : mov rax, qword ptr [rip + 0x516daf] ; call rax
0x00000000004eba74 : mov rax, qword ptr [rip + 0x516e65] ; call rax
0x00000000004eba1e : mov rax, qword ptr [rip + 0x516ec3] ; call rax
0x00000000004eabb4 : mov rax, qword ptr [rip + 0x517d2d] ; call rax
0x00000000004e9695 : mov rax, qword ptr [rip + 0x519244] ; call rax
0x00000000004e9648 : mov rax, qword ptr [rip + 0x519299] ; call rax
0x00000000004e91cf : mov rax, qword ptr [rip + 0x51970a] ; call rax
0x00000000004e9182 : mov rax, qword ptr [rip + 0x51975f] ; call rax
0x00000000004e8cff : mov rax, qword ptr [rip + 0x519bda] ; call rax
0x00000000004e8cbc : mov rax, qword ptr [rip + 0x519c25] ; call rax
0x00000000004e8c6c : mov rax, qword ptr [rip + 0x519c75] ; call rax
0x00000000004e89f1 : mov rax, qword ptr [rip + 0x519ef0] ; call rax
0x00000000004e8472 : mov rax, qword ptr [rip + 0x51a467] ; call rax
0x00000000004e844a : mov rax, qword ptr [rip + 0x51a497] ; call rax
0x00000000004e7ec9 : mov rax, qword ptr [rip + 0x51aa10] ; call rax
0x00000000004e7e74 : mov rax, qword ptr [rip + 0x51aa6d] ; call rax
0x00000000004e7bfe : mov rax, qword ptr [rip + 0x51acdb] ; call rax
0x00000000004e7bbb : mov rax, qword ptr [rip + 0x51ad26] ; call rax
0x00000000004e7531 : mov rax, qword ptr [rip + 0x51b3b0] ; call rax
0x00000000004e73f7 : mov rax, qword ptr [rip + 0x51b4e2] ; call rax
0x00000000004e73da : mov rax, qword ptr [rip + 0x51b507] ; call rax
0x00000000004e7321 : mov rax, qword ptr [rip + 0x51b5b8] ; call rax
0x00000000004e7300 : mov rax, qword ptr [rip + 0x51b5e1] ; call rax
0x00000000004e69ea : mov rax, qword ptr [rip + 0x51beef] ; call rax
0x00000000004e69c8 : mov rax, qword ptr [rip + 0x51bf19] ; call rax
0x00000000004e6303 : mov rax, qword ptr [rip + 0x51c5d6] ; call rax
0x00000000004e6288 : mov rax, qword ptr [rip + 0x51c659] ; call rax
0x00000000004e4712 : mov rax, qword ptr [rip + 0x51e1c7] ; call rax
0x00000000004e46c5 : mov rax, qword ptr [rip + 0x51e21c] ; call rax
0x00000000004e388b : mov rax, qword ptr [rip + 0x51f04e] ; call rax
0x00000000004e3836 : mov rax, qword ptr [rip + 0x51f0ab] ; call rax
0x00000000004e3491 : mov rax, qword ptr [rip + 0x51f448] ; call rax
0x00000000004e344e : mov rax, qword ptr [rip + 0x51f493] ; call rax
0x00000000004e3401 : mov rax, qword ptr [rip + 0x51f4e0] ; call rax
0x00000000004e32ce : mov rax, qword ptr [rip + 0x51f613] ; call rax
0x00000000004e31cb : mov rax, qword ptr [rip + 0x51f716] ; call rax
0x00000000004e30e0 : mov rax, qword ptr [rip + 0x51f801] ; call rax
0x00000000004e2e9a : mov rax, qword ptr [rip + 0x51fa3f] ; call rax
0x00000000004e2e50 : mov rax, qword ptr [rip + 0x51fa91] ; call rax
0x00000000004e2d24 : mov rax, qword ptr [rip + 0x51fbb5] ; call rax
0x00000000004e2c88 : mov rax, qword ptr [rip + 0x51fc59] ; call rax
0x00000000004e2a18 : mov rax, qword ptr [rip + 0x51fec1] ; call rax
0x00000000004e2987 : mov rax, qword ptr [rip + 0x51ff5a] ; call rax
0x00000000004e15a9 : mov rax, qword ptr [rip + 0x521330] ; call rax
0x00000000004e1544 : mov rax, qword ptr [rip + 0x52139d] ; call rax
0x00000000004e1014 : mov rax, qword ptr [rip + 0x5218c5] ; call rax
0x00000000004e0fc7 : mov rax, qword ptr [rip + 0x52191a] ; call rax
0x00000000004ddffd : mov rax, qword ptr [rip + 0x5248dc] ; call rax
0x00000000004ddfa8 : mov rax, qword ptr [rip + 0x524939] ; call rax
0x00000000004dd98b : mov rax, qword ptr [rip + 0x524f4e] ; call rax
0x00000000004dd936 : mov rax, qword ptr [rip + 0x524fab] ; call rax
0x00000000004dd389 : mov rax, qword ptr [rip + 0x525550] ; call rax
0x00000000004dd333 : mov rax, qword ptr [rip + 0x5255ae] ; call rax
0x00000000004dcdbf : mov rax, qword ptr [rip + 0x525b1a] ; call rax
0x00000000004dcd69 : mov rax, qword ptr [rip + 0x525b78] ; call rax
0x00000000004dbe02 : mov rax, qword ptr [rip + 0x526ad7] ; call rax
0x00000000004dbdad : mov rax, qword ptr [rip + 0x526b34] ; call rax
0x00000000004daedf : mov rax, qword ptr [rip + 0x5279fa] ; call rax
0x00000000004dae94 : mov rax, qword ptr [rip + 0x527a4d] ; call rax
0x00000000004dabc4 : mov rax, qword ptr [rip + 0x527d15] ; call rax
0x00000000004dab48 : mov rax, qword ptr [rip + 0x527d99] ; call rax
0x00000000004da437 : mov rax, qword ptr [rip + 0x5284aa] ; call rax
0x00000000004da3e0 : mov rax, qword ptr [rip + 0x528501] ; call rax
0x00000000004da39e : mov rax, qword ptr [rip + 0x528543] ; call rax
0x00000000004d9a91 : mov rax, qword ptr [rip + 0x528e50] ; call rax
0x00000000004d9794 : mov rax, qword ptr [rip + 0x529145] ; call rax
0x00000000004d975c : mov rax, qword ptr [rip + 0x529185] ; call rax
0x00000000004d9598 : mov rax, qword ptr [rip + 0x529341] ; call rax
0x00000000004d9560 : mov rax, qword ptr [rip + 0x529381] ; call rax
0x00000000004d9390 : mov rax, qword ptr [rip + 0x529549] ; call rax
0x00000000004d9358 : mov rax, qword ptr [rip + 0x529589] ; call rax
0x00000000004d903f : mov rax, qword ptr [rip + 0x52989a] ; call rax
0x00000000004d8ffc : mov rax, qword ptr [rip + 0x5298e5] ; call rax
0x00000000004d8ea3 : mov rax, qword ptr [rip + 0x529a36] ; call rax
0x00000000004d8e60 : mov rax, qword ptr [rip + 0x529a81] ; call rax
0x00000000004d8da8 : mov rax, qword ptr [rip + 0x529b31] ; call rax
0x00000000004d8d62 : mov rax, qword ptr [rip + 0x529b7f] ; call rax
0x00000000004d8caa : mov rax, qword ptr [rip + 0x529c2f] ; call rax
0x00000000004d8c64 : mov rax, qword ptr [rip + 0x529c7d] ; call rax
0x00000000004d8bac : mov rax, qword ptr [rip + 0x529d2d] ; call rax
0x00000000004d8b66 : mov rax, qword ptr [rip + 0x529d7b] ; call rax
0x00000000004d8aae : mov rax, qword ptr [rip + 0x529e2b] ; call rax
0x00000000004d8a68 : mov rax, qword ptr [rip + 0x529e79] ; call rax
0x00000000004d7c85 : mov rax, qword ptr [rip + 0x52ac54] ; call rax
0x00000000004d7c18 : mov rax, qword ptr [rip + 0x52acc9] ; call rax
0x00000000004d7b0d : mov rax, qword ptr [rip + 0x52adcc] ; call rax
0x00000000004d7abe : mov rax, qword ptr [rip + 0x52ae23] ; call rax
0x00000000004d6f2b : mov rax, qword ptr [rip + 0x52b9ae] ; call rax
0x00000000004d6df2 : mov rax, qword ptr [rip + 0x52baef] ; call rax
0x00000000004d6d2b : mov rax, qword ptr [rip + 0x52bbae] ; call rax
0x00000000004d6cd2 : mov rax, qword ptr [rip + 0x52bc0f] ; call rax
0x00000000004d6c18 : mov rax, qword ptr [rip + 0x52bcc1] ; call rax
0x00000000004d6bd2 : mov rax, qword ptr [rip + 0x52bd0f] ; call rax
0x00000000004d65ee : mov rax, qword ptr [rip + 0x52c2eb] ; call rax
0x00000000004d65ab : mov rax, qword ptr [rip + 0x52c336] ; call rax
0x00000000004d656a : mov rax, qword ptr [rip + 0x52c377] ; call rax
0x00000000004d645e : mov rax, qword ptr [rip + 0x52c47b] ; call rax
0x00000000004d641b : mov rax, qword ptr [rip + 0x52c4c6] ; call rax
0x00000000004d63da : mov rax, qword ptr [rip + 0x52c507] ; call rax
0x00000000004d6044 : mov rax, qword ptr [rip + 0x52c895] ; call rax
0x00000000004d5f6c : mov rax, qword ptr [rip + 0x52c975] ; call rax
0x00000000004d5cfc : mov rax, qword ptr [rip + 0x52cbe5] ; call rax
0x00000000004d5737 : mov rax, qword ptr [rip + 0x52d1a2] ; call rax
0x00000000004d56f0 : mov rax, qword ptr [rip + 0x52d1f1] ; call rax
0x00000000004d552e : mov rax, qword ptr [rip + 0x52d3ab] ; call rax
0x00000000004d54cc : mov rax, qword ptr [rip + 0x52d415] ; call rax
0x00000000004d3e5e : mov rax, qword ptr [rip + 0x52ea7b] ; call rax
0x00000000004d3e1b : mov rax, qword ptr [rip + 0x52eac6] ; call rax
0x00000000004d3dde : mov rax, qword ptr [rip + 0x52eb03] ; call rax
0x00000000004d3d31 : mov rax, qword ptr [rip + 0x52eba8] ; call rax
0x00000000004d3cee : mov rax, qword ptr [rip + 0x52ebf3] ; call rax
0x00000000004d3cb4 : mov rax, qword ptr [rip + 0x52ec2d] ; call rax
0x00000000004d3c09 : mov rax, qword ptr [rip + 0x52ecd0] ; call rax
0x00000000004d3bc6 : mov rax, qword ptr [rip + 0x52ed1b] ; call rax
0x00000000004d3b8c : mov rax, qword ptr [rip + 0x52ed55] ; call rax
0x00000000004d3adc : mov rax, qword ptr [rip + 0x52edfd] ; call rax
0x00000000004d3a99 : mov rax, qword ptr [rip + 0x52ee48] ; call rax
0x00000000004d3a5c : mov rax, qword ptr [rip + 0x52ee85] ; call rax
0x00000000004d39aa : mov rax, qword ptr [rip + 0x52ef2f] ; call rax
0x00000000004d3967 : mov rax, qword ptr [rip + 0x52ef7a] ; call rax
0x00000000004d392a : mov rax, qword ptr [rip + 0x52efb7] ; call rax
0x00000000004d3127 : mov rax, qword ptr [rip + 0x52f7ba] ; call rax
0x00000000004d2457 : mov rax, qword ptr [rip + 0x530482] ; call rax
0x00000000004d2414 : mov rax, qword ptr [rip + 0x5304cd] ; call rax
0x00000000004d2122 : mov rax, qword ptr [rip + 0x5307b7] ; call rax
0x00000000004d20df : mov rax, qword ptr [rip + 0x530802] ; call rax
0x00000000004d20a2 : mov rax, qword ptr [rip + 0x53083f] ; call rax
0x00000000004d1d09 : mov rax, qword ptr [rip + 0x530bd8] ; call rax
0x00000000004d11a7 : mov rax, qword ptr [rip + 0x53173a] ; call rax
0x00000000004d0e31 : mov rax, qword ptr [rip + 0x531ab0] ; call rax
0x00000000004d0a1d : mov rax, qword ptr [rip + 0x531ec4] ; call rax
0x00000000004cd9fc : mov rax, qword ptr [rip + 0x534edd] ; call rax
0x00000000004cd9b5 : mov rax, qword ptr [rip + 0x534f2c] ; call rax
0x00000000004cd5ab : mov rax, qword ptr [rip + 0x535336] ; call rax
0x00000000004cd43a : mov rax, qword ptr [rip + 0x53549f] ; call rax
0x00000000004cd40a : mov rax, qword ptr [rip + 0x5354d7] ; call rax
0x00000000004cd28a : mov rax, qword ptr [rip + 0x535657] ; call rax
0x00000000004cd192 : mov rax, qword ptr [rip + 0x535747] ; call rax
0x00000000004cd176 : mov rax, qword ptr [rip + 0x53576b] ; call rax
0x00000000004cd00f : mov rax, qword ptr [rip + 0x5358ca] ; call rax
0x00000000004ccfb0 : mov rax, qword ptr [rip + 0x535931] ; call rax
0x00000000004cce97 : mov rax, qword ptr [rip + 0x535a42] ; call rax
0x00000000004cce49 : mov rax, qword ptr [rip + 0x535a98] ; call rax
0x00000000004cc771 : mov rax, qword ptr [rip + 0x536168] ; call rax
0x00000000004cc71c : mov rax, qword ptr [rip + 0x5361c5] ; call rax
0x00000000004cc286 : mov rax, qword ptr [rip + 0x536653] ; call rax
0x00000000004cc246 : mov rax, qword ptr [rip + 0x53669b] ; call rax
0x00000000004cc169 : mov rax, qword ptr [rip + 0x536770] ; call rax
0x00000000004cc126 : mov rax, qword ptr [rip + 0x5367bb] ; call rax
0x00000000004cbc54 : mov rax, qword ptr [rip + 0x536c85] ; call rax
0x00000000004cbc11 : mov rax, qword ptr [rip + 0x536cd0] ; call rax
0x00000000004cbbb9 : mov rax, qword ptr [rip + 0x536d28] ; call rax
0x00000000004cb77d : mov rax, qword ptr [rip + 0x53715c] ; call rax
0x00000000004cb73a : mov rax, qword ptr [rip + 0x5371a7] ; call rax
0x00000000004cb6d7 : mov rax, qword ptr [rip + 0x53720a] ; call rax
0x00000000004ca7d8 : mov rax, qword ptr [rip + 0x538101] ; call rax
0x00000000004ca795 : mov rax, qword ptr [rip + 0x53814c] ; call rax
0x00000000004ca745 : mov rax, qword ptr [rip + 0x53819c] ; call rax
0x00000000004ca21d : mov rax, qword ptr [rip + 0x5386c4] ; call rax
0x00000000004ca0a9 : mov rax, qword ptr [rip + 0x538830] ; call rax
0x00000000004ca05e : mov rax, qword ptr [rip + 0x538883] ; call rax
0x00000000004c99ac : mov rax, qword ptr [rip + 0x538f35] ; call rax
0x00000000004c98d8 : mov rax, qword ptr [rip + 0x539009] ; call rax
0x00000000004c96f3 : mov rax, qword ptr [rip + 0x5391ee] ; call rax
0x00000000004c9627 : mov rax, qword ptr [rip + 0x5392ba] ; call rax
0x00000000004c9380 : mov rax, qword ptr [rip + 0x539561] ; call rax
0x00000000004c91ec : mov rax, qword ptr [rip + 0x5396ed] ; call rax
0x00000000004c91ac : mov rax, qword ptr [rip + 0x539735] ; call rax
0x00000000004c90f3 : mov rax, qword ptr [rip + 0x5397e6] ; call rax
0x00000000004c90b0 : mov rax, qword ptr [rip + 0x539831] ; call rax
0x00000000004c8fea : mov rax, qword ptr [rip + 0x5398ef] ; call rax
0x00000000004c8f94 : mov rax, qword ptr [rip + 0x53994d] ; call rax
0x00000000004c8ed9 : mov rax, qword ptr [rip + 0x539a00] ; call rax
0x00000000004c8ebc : mov rax, qword ptr [rip + 0x539a25] ; call rax
0x00000000004c8cf5 : mov rax, qword ptr [rip + 0x539be4] ; call rax
0x00000000004c8cad : mov rax, qword ptr [rip + 0x539c34] ; call rax
0x00000000004c8b51 : mov rax, qword ptr [rip + 0x539d90] ; call rax
0x00000000004c86ba : mov rax, qword ptr [rip + 0x53a227] ; call rax
0x00000000004c8665 : mov rax, qword ptr [rip + 0x53a274] ; call rax
0x00000000004c8622 : mov rax, qword ptr [rip + 0x53a2bf] ; call rax
0x00000000004c85e3 : mov rax, qword ptr [rip + 0x53a2fe] ; call rax
0x00000000004c850f : mov rax, qword ptr [rip + 0x53a3d2] ; call rax
0x00000000004c841a : mov rax, qword ptr [rip + 0x53a4bf] ; call rax
0x00000000004c83d3 : mov rax, qword ptr [rip + 0x53a50e] ; call rax
0x00000000004c8393 : mov rax, qword ptr [rip + 0x53a54e] ; call rax
0x00000000004c7f78 : mov rax, qword ptr [rip + 0x53a969] ; call rax
0x00000000004c7923 : mov rax, qword ptr [rip + 0x53afbe] ; call rax
0x00000000004c782e : mov rax, qword ptr [rip + 0x53b0ab] ; call rax
0x00000000004c7812 : mov rax, qword ptr [rip + 0x53b0cf] ; call rax
0x00000000004c6a94 : mov rax, qword ptr [rip + 0x53be45] ; call rax
0x00000000004c6a78 : mov rax, qword ptr [rip + 0x53be69] ; call rax
0x00000000004c69a1 : mov rax, qword ptr [rip + 0x53bf40] ; call rax
0x00000000004c6961 : mov rax, qword ptr [rip + 0x53bf80] ; call rax
0x00000000004c5fe3 : mov rax, qword ptr [rip + 0x53c8f6] ; call rax
0x00000000004c5f7c : mov rax, qword ptr [rip + 0x53c965] ; call rax
0x00000000004c59d9 : mov rax, qword ptr [rip + 0x53cf00] ; call rax
0x00000000004c5956 : mov rax, qword ptr [rip + 0x53cf8b] ; call rax
0x00000000004c589c : mov rax, qword ptr [rip + 0x53d03d] ; call rax
0x00000000004c585c : mov rax, qword ptr [rip + 0x53d085] ; call rax
0x00000000004c56b6 : mov rax, qword ptr [rip + 0x53d223] ; call rax
0x00000000004c5675 : mov rax, qword ptr [rip + 0x53d26c] ; call rax
0x00000000004c551e : mov rax, qword ptr [rip + 0x53d3bb] ; call rax
0x00000000004c54de : mov rax, qword ptr [rip + 0x53d403] ; call rax
0x00000000004c5303 : mov rax, qword ptr [rip + 0x53d5d6] ; call rax
0x00000000004c52c3 : mov rax, qword ptr [rip + 0x53d61e] ; call rax
0x00000000004c511c : mov rax, qword ptr [rip + 0x53d7bd] ; call rax
0x00000000004c50dc : mov rax, qword ptr [rip + 0x53d805] ; call rax
0x00000000004c4f29 : mov rax, qword ptr [rip + 0x53d9b0] ; call rax
0x00000000004c4ee9 : mov rax, qword ptr [rip + 0x53d9f8] ; call rax
0x00000000004c4d74 : mov rax, qword ptr [rip + 0x53db65] ; call rax
0x00000000004c4d34 : mov rax, qword ptr [rip + 0x53dbad] ; call rax
0x00000000004c4b8d : mov rax, qword ptr [rip + 0x53dd4c] ; call rax
0x00000000004c4b4c : mov rax, qword ptr [rip + 0x53dd95] ; call rax
0x00000000004c49e6 : mov rax, qword ptr [rip + 0x53def3] ; call rax
0x00000000004c49a6 : mov rax, qword ptr [rip + 0x53df3b] ; call rax
0x00000000004c44e8 : mov rax, qword ptr [rip + 0x53e3f1] ; call rax
0x00000000004c44a8 : mov rax, qword ptr [rip + 0x53e439] ; call rax
0x00000000004c4464 : mov rax, qword ptr [rip + 0x53e47d] ; call rax
0x00000000004c41a6 : mov rax, qword ptr [rip + 0x53e733] ; call rax
0x00000000004c4166 : mov rax, qword ptr [rip + 0x53e77b] ; call rax
0x00000000004c3b3d : mov rax, qword ptr [rip + 0x53ed9c] ; call rax
0x00000000004c3afd : mov rax, qword ptr [rip + 0x53ede4] ; call rax
0x00000000004c3ab9 : mov rax, qword ptr [rip + 0x53ee28] ; call rax
0x00000000004c3684 : mov rax, qword ptr [rip + 0x53f255] ; call rax
0x00000000004c3668 : mov rax, qword ptr [rip + 0x53f279] ; call rax
0x00000000004c3537 : mov rax, qword ptr [rip + 0x53f3aa] ; call rax
0x00000000004c3426 : mov rax, qword ptr [rip + 0x53f4b3] ; call rax
0x00000000004c33e6 : mov rax, qword ptr [rip + 0x53f4fb] ; call rax
0x00000000004c332d : mov rax, qword ptr [rip + 0x53f5ac] ; call rax
0x00000000004c3310 : mov rax, qword ptr [rip + 0x53f5d1] ; call rax
0x00000000004c3132 : mov rax, qword ptr [rip + 0x53f7a7] ; call rax
0x00000000004c30ed : mov rax, qword ptr [rip + 0x53f7f4] ; call rax
0x00000000004c30ab : mov rax, qword ptr [rip + 0x53f836] ; call rax
0x00000000004c3027 : mov rax, qword ptr [rip + 0x53f8ba] ; call rax
0x00000000004c2b4d : mov rax, qword ptr [rip + 0x53fd8c] ; call rax
0x00000000004c2acc : mov rax, qword ptr [rip + 0x53fe15] ; call rax
0x00000000004c27ce : mov rax, qword ptr [rip + 0x54010b] ; call rax
0x00000000004c278b : mov rax, qword ptr [rip + 0x540156] ; call rax
0x00000000004c2468 : mov rax, qword ptr [rip + 0x540471] ; call rax
0x00000000004c244c : mov rax, qword ptr [rip + 0x540495] ; call rax
0x00000000004c2317 : mov rax, qword ptr [rip + 0x5405ca] ; call rax
0x00000000004c225a : mov rax, qword ptr [rip + 0x54067f] ; call rax
0x00000000004c223e : mov rax, qword ptr [rip + 0x5406a3] ; call rax
0x00000000004c198c : mov rax, qword ptr [rip + 0x540f4d] ; call rax
0x00000000004c1970 : mov rax, qword ptr [rip + 0x540f71] ; call rax
0x00000000004c18b8 : mov rax, qword ptr [rip + 0x541021] ; call rax
0x00000000004c1870 : mov rax, qword ptr [rip + 0x541071] ; call rax
0x00000000004c17b7 : mov rax, qword ptr [rip + 0x541122] ; call rax
0x00000000004c179a : mov rax, qword ptr [rip + 0x541147] ; call rax
0x00000000004c166f : mov rax, qword ptr [rip + 0x54126a] ; call rax
0x00000000004c15f0 : mov rax, qword ptr [rip + 0x5412f1] ; call rax
0x00000000004c10c7 : mov rax, qword ptr [rip + 0x541812] ; call rax
0x00000000004c1079 : mov rax, qword ptr [rip + 0x541868] ; call rax
0x00000000004c0f94 : mov rax, qword ptr [rip + 0x54194d] ; call rax
0x00000000004c0b3d : mov rax, qword ptr [rip + 0x541d9c] ; call rax
0x00000000004c0ad7 : mov rax, qword ptr [rip + 0x541e0a] ; call rax
0x00000000004c09ef : mov rax, qword ptr [rip + 0x541ef2] ; call rax
0x00000000004c044e : mov rax, qword ptr [rip + 0x54248b] ; call rax
0x00000000004c0432 : mov rax, qword ptr [rip + 0x5424af] ; call rax
0x00000000004c037a : mov rax, qword ptr [rip + 0x54255f] ; call rax
0x00000000004c0332 : mov rax, qword ptr [rip + 0x5425af] ; call rax
0x00000000004c0279 : mov rax, qword ptr [rip + 0x542660] ; call rax
0x00000000004c025c : mov rax, qword ptr [rip + 0x542685] ; call rax
0x00000000004c0131 : mov rax, qword ptr [rip + 0x5427a8] ; call rax
0x00000000004c00b2 : mov rax, qword ptr [rip + 0x54282f] ; call rax
0x00000000004bfaba : mov rax, qword ptr [rip + 0x542e1f] ; call rax
0x00000000004bfa6c : mov rax, qword ptr [rip + 0x542e75] ; call rax
0x00000000004bf987 : mov rax, qword ptr [rip + 0x542f5a] ; call rax
0x00000000004bf607 : mov rax, qword ptr [rip + 0x5432d2] ; call rax
0x00000000004bf5a1 : mov rax, qword ptr [rip + 0x543340] ; call rax
0x00000000004bf4b9 : mov rax, qword ptr [rip + 0x543428] ; call rax
0x00000000004bf141 : mov rax, qword ptr [rip + 0x543798] ; call rax
0x00000000004bf0fa : mov rax, qword ptr [rip + 0x5437e7] ; call rax
0x00000000004beed3 : mov rax, qword ptr [rip + 0x543a06] ; call rax
0x00000000004bee90 : mov rax, qword ptr [rip + 0x543a51] ; call rax
0x00000000004bedd8 : mov rax, qword ptr [rip + 0x543b01] ; call rax
0x00000000004bedbc : mov rax, qword ptr [rip + 0x543b25] ; call rax
0x00000000004bed04 : mov rax, qword ptr [rip + 0x543bd5] ; call rax
0x00000000004becbc : mov rax, qword ptr [rip + 0x543c25] ; call rax
0x00000000004bec03 : mov rax, qword ptr [rip + 0x543cd6] ; call rax
0x00000000004bebe6 : mov rax, qword ptr [rip + 0x543cfb] ; call rax
0x00000000004beabb : mov rax, qword ptr [rip + 0x543e1e] ; call rax
0x00000000004bea3c : mov rax, qword ptr [rip + 0x543ea5] ; call rax
0x00000000004be445 : mov rax, qword ptr [rip + 0x544494] ; call rax
0x00000000004be3f7 : mov rax, qword ptr [rip + 0x5444ea] ; call rax
0x00000000004be312 : mov rax, qword ptr [rip + 0x5445cf] ; call rax
0x00000000004bdf2f : mov rax, qword ptr [rip + 0x5449aa] ; call rax
0x00000000004bdec9 : mov rax, qword ptr [rip + 0x544a18] ; call rax
0x00000000004bdde1 : mov rax, qword ptr [rip + 0x544b00] ; call rax
0x00000000004bda69 : mov rax, qword ptr [rip + 0x544e70] ; call rax
0x00000000004bda22 : mov rax, qword ptr [rip + 0x544ebf] ; call rax
0x00000000004bd82d : mov rax, qword ptr [rip + 0x5450ac] ; call rax
0x00000000004bd7ea : mov rax, qword ptr [rip + 0x5450f7] ; call rax
0x00000000004bbbd9 : mov rax, qword ptr [rip + 0x546d08] ; call rax
0x00000000004b93b6 : mov rax, qword ptr [rip + 0x5494b3] ; call rax
0x00000000004b93ad : mov rax, qword ptr [rip + 0x5494b4] ; call rax
0x00000000004b9381 : mov rax, qword ptr [rip + 0x5494d8] ; call rax
0x00000000004b938a : mov rax, qword ptr [rip + 0x54954f] ; call rax
0x00000000004b9378 : mov rax, qword ptr [rip + 0x549569] ; call rax
0x00000000004b919a : mov rax, qword ptr [rip + 0x54973f] ; call rax
0x00000000004b9176 : mov rax, qword ptr [rip + 0x54976b] ; call rax
0x00000000004b8d36 : mov rax, qword ptr [rip + 0x549ba3] ; call rax
0x00000000004b8d12 : mov rax, qword ptr [rip + 0x549bcf] ; call rax
0x00000000004b8776 : mov rax, qword ptr [rip + 0x54a16b] ; call rax
0x00000000004b8622 : mov rax, qword ptr [rip + 0x54a2bf] ; call rax
0x00000000004b8566 : mov rax, qword ptr [rip + 0x54a373] ; call rax
0x00000000004b854a : mov rax, qword ptr [rip + 0x54a397] ; call rax
0x00000000004b7fde : mov rax, qword ptr [rip + 0x54a88b] ; call rax
0x00000000004b7fd5 : mov rax, qword ptr [rip + 0x54a88c] ; call rax
0x00000000004b7fa9 : mov rax, qword ptr [rip + 0x54a8b0] ; call rax
0x00000000004b7fb2 : mov rax, qword ptr [rip + 0x54a927] ; call rax
0x00000000004b7fa0 : mov rax, qword ptr [rip + 0x54a941] ; call rax
0x00000000004b7e70 : mov rax, qword ptr [rip + 0x54a9f9] ; call rax
0x00000000004b7e67 : mov rax, qword ptr [rip + 0x54a9fa] ; call rax
0x00000000004b7e3b : mov rax, qword ptr [rip + 0x54aa1e] ; call rax
0x00000000004b7e44 : mov rax, qword ptr [rip + 0x54aa95] ; call rax
0x00000000004b7e32 : mov rax, qword ptr [rip + 0x54aaaf] ; call rax
0x00000000004b7bf6 : mov rax, qword ptr [rip + 0x54aceb] ; call rax
0x00000000004b7a7c : mov rax, qword ptr [rip + 0x54ae65] ; call rax
0x00000000004b79c0 : mov rax, qword ptr [rip + 0x54af19] ; call rax
0x00000000004b79a4 : mov rax, qword ptr [rip + 0x54af3d] ; call rax
0x00000000004b77c2 : mov rax, qword ptr [rip + 0x54b0a7] ; call rax
0x00000000004b77b9 : mov rax, qword ptr [rip + 0x54b0a8] ; call rax
0x00000000004b778d : mov rax, qword ptr [rip + 0x54b0cc] ; call rax
0x00000000004b7796 : mov rax, qword ptr [rip + 0x54b143] ; call rax
0x00000000004b7784 : mov rax, qword ptr [rip + 0x54b15d] ; call rax
0x00000000004b76e4 : mov rax, qword ptr [rip + 0x54b185] ; call rax
0x00000000004b76db : mov rax, qword ptr [rip + 0x54b186] ; call rax
0x00000000004b76af : mov rax, qword ptr [rip + 0x54b1aa] ; call rax
0x00000000004b76b8 : mov rax, qword ptr [rip + 0x54b221] ; call rax
0x00000000004b76a6 : mov rax, qword ptr [rip + 0x54b23b] ; call rax
0x00000000004b7150 : mov rax, qword ptr [rip + 0x54b719] ; call rax
0x00000000004b7147 : mov rax, qword ptr [rip + 0x54b71a] ; call rax
0x00000000004b711b : mov rax, qword ptr [rip + 0x54b73e] ; call rax
0x00000000004b7124 : mov rax, qword ptr [rip + 0x54b7b5] ; call rax
0x00000000004b7112 : mov rax, qword ptr [rip + 0x54b7cf] ; call rax
0x00000000004b6f34 : mov rax, qword ptr [rip + 0x54b9a5] ; call rax
0x00000000004b6f10 : mov rax, qword ptr [rip + 0x54b9d1] ; call rax
0x00000000004b6ad0 : mov rax, qword ptr [rip + 0x54be09] ; call rax
0x00000000004b6aac : mov rax, qword ptr [rip + 0x54be35] ; call rax
0x00000000004b6510 : mov rax, qword ptr [rip + 0x54c3d1] ; call rax
0x00000000004b63bc : mov rax, qword ptr [rip + 0x54c525] ; call rax
0x00000000004b6300 : mov rax, qword ptr [rip + 0x54c5d9] ; call rax
0x00000000004b62e4 : mov rax, qword ptr [rip + 0x54c5fd] ; call rax
0x00000000004b5d78 : mov rax, qword ptr [rip + 0x54caf1] ; call rax
0x00000000004b5d6f : mov rax, qword ptr [rip + 0x54caf2] ; call rax
0x00000000004b5d43 : mov rax, qword ptr [rip + 0x54cb16] ; call rax
0x00000000004b5d4c : mov rax, qword ptr [rip + 0x54cb8d] ; call rax
0x00000000004b5d3a : mov rax, qword ptr [rip + 0x54cba7] ; call rax
0x00000000004b5c0a : mov rax, qword ptr [rip + 0x54cc5f] ; call rax
0x00000000004b5c01 : mov rax, qword ptr [rip + 0x54cc60] ; call rax
0x00000000004b5bd5 : mov rax, qword ptr [rip + 0x54cc84] ; call rax
0x00000000004b5bde : mov rax, qword ptr [rip + 0x54ccfb] ; call rax
0x00000000004b5bcc : mov rax, qword ptr [rip + 0x54cd15] ; call rax
0x00000000004b5990 : mov rax, qword ptr [rip + 0x54cf51] ; call rax
0x00000000004b5816 : mov rax, qword ptr [rip + 0x54d0cb] ; call rax
0x00000000004b575a : mov rax, qword ptr [rip + 0x54d17f] ; call rax
0x00000000004b573e : mov rax, qword ptr [rip + 0x54d1a3] ; call rax
0x00000000004b555c : mov rax, qword ptr [rip + 0x54d30d] ; call rax
0x00000000004b5553 : mov rax, qword ptr [rip + 0x54d30e] ; call rax
0x00000000004b5527 : mov rax, qword ptr [rip + 0x54d332] ; call rax
0x00000000004b5530 : mov rax, qword ptr [rip + 0x54d3a9] ; call rax
0x00000000004b551e : mov rax, qword ptr [rip + 0x54d3c3] ; call rax
0x00000000004b547e : mov rax, qword ptr [rip + 0x54d3eb] ; call rax
0x00000000004b5475 : mov rax, qword ptr [rip + 0x54d3ec] ; call rax
0x00000000004b5449 : mov rax, qword ptr [rip + 0x54d410] ; call rax
0x00000000004b5452 : mov rax, qword ptr [rip + 0x54d487] ; call rax
0x00000000004b5440 : mov rax, qword ptr [rip + 0x54d4a1] ; call rax
0x00000000004b34f0 : mov rax, qword ptr [rip + 0x54f3f1] ; call rax
0x00000000004b330e : mov rax, qword ptr [rip + 0x54f5cb] ; call rax
0x00000000004b32f2 : mov rax, qword ptr [rip + 0x54f5ef] ; call rax
0x00000000004b26a8 : mov rax, qword ptr [rip + 0x550239] ; call rax
0x00000000004b255f : mov rax, qword ptr [rip + 0x55037a] ; call rax
0x00000000004b2542 : mov rax, qword ptr [rip + 0x55039f] ; call rax
0x00000000004b236d : mov rax, qword ptr [rip + 0x55056c] ; call rax
0x00000000004b2323 : mov rax, qword ptr [rip + 0x5505be] ; call rax
0x00000000004b1d0b : mov rax, qword ptr [rip + 0x550bce] ; call rax
0x00000000004b1ca6 : mov rax, qword ptr [rip + 0x550c3b] ; call rax
0x00000000004b1ba3 : mov rax, qword ptr [rip + 0x550d36] ; call rax
0x00000000004b1b82 : mov rax, qword ptr [rip + 0x550d5f] ; call rax
0x00000000004b1aca : mov rax, qword ptr [rip + 0x550e0f] ; call rax
0x00000000004b1aa8 : mov rax, qword ptr [rip + 0x550e39] ; call rax
0x00000000004b12d2 : mov rax, qword ptr [rip + 0x551607] ; call rax
0x00000000004b12b0 : mov rax, qword ptr [rip + 0x551631] ; call rax
0x00000000004b0487 : mov rax, qword ptr [rip + 0x552452] ; call rax
0x00000000004b0434 : mov rax, qword ptr [rip + 0x5524ad] ; call rax
0x00000000004b029e : mov rax, qword ptr [rip + 0x55263b] ; call rax
0x00000000004b01d6 : mov rax, qword ptr [rip + 0x55270b] ; call rax
0x00000000004b00ea : mov rax, qword ptr [rip + 0x5527ef] ; call rax
0x00000000004b0094 : mov rax, qword ptr [rip + 0x55284d] ; call rax
0x00000000004af728 : mov rax, qword ptr [rip + 0x5531b1] ; call rax
0x00000000004af6b3 : mov rax, qword ptr [rip + 0x55322e] ; call rax
0x00000000004af66f : mov rax, qword ptr [rip + 0x553272] ; call rax
0x00000000004af05c : mov rax, qword ptr [rip + 0x55387d] ; call rax
0x00000000004af019 : mov rax, qword ptr [rip + 0x5538c8] ; call rax
0x00000000004aefd8 : mov rax, qword ptr [rip + 0x553909] ; call rax
0x00000000004aed4b : mov rax, qword ptr [rip + 0x553b96] ; call rax
0x00000000004aecf8 : mov rax, qword ptr [rip + 0x553be9] ; call rax
0x00000000004ae928 : mov rax, qword ptr [rip + 0x553fb1] ; call rax
0x00000000004ae8fa : mov rax, qword ptr [rip + 0x553fe7] ; call rax
0x00000000004ae748 : mov rax, qword ptr [rip + 0x554191] ; call rax
0x00000000004ae708 : mov rax, qword ptr [rip + 0x5541d9] ; call rax
0x00000000004ae62b : mov rax, qword ptr [rip + 0x5542ae] ; call rax
0x00000000004ae5e8 : mov rax, qword ptr [rip + 0x5542f9] ; call rax
0x00000000004adb23 : mov rax, qword ptr [rip + 0x554dbe] ; call rax
0x00000000004ada98 : mov rax, qword ptr [rip + 0x554e41] ; call rax
0x00000000004ada55 : mov rax, qword ptr [rip + 0x554e8c] ; call rax
0x00000000004ada14 : mov rax, qword ptr [rip + 0x554ecd] ; call rax
0x00000000004ad783 : mov rax, qword ptr [rip + 0x555156] ; call rax
0x00000000004ad740 : mov rax, qword ptr [rip + 0x5551a1] ; call rax
0x00000000004ad6ff : mov rax, qword ptr [rip + 0x5551e2] ; call rax
0x00000000004ad4fc : mov rax, qword ptr [rip + 0x5553e5] ; call rax
0x00000000004ad40b : mov rax, qword ptr [rip + 0x5554ce] ; call rax
0x00000000004ad3ee : mov rax, qword ptr [rip + 0x5554f3] ; call rax
0x00000000004a8a03 : mov rax, qword ptr [rip + 0x559ede] ; call rax
0x00000000004a35ee : mov rax, qword ptr [rip + 0x55f27b] ; call rax
0x00000000004a35e5 : mov rax, qword ptr [rip + 0x55f27c] ; call rax
0x00000000004a35b9 : mov rax, qword ptr [rip + 0x55f2a0] ; call rax
0x00000000004a35c2 : mov rax, qword ptr [rip + 0x55f317] ; call rax
0x00000000004a35b0 : mov rax, qword ptr [rip + 0x55f331] ; call rax
0x00000000004a33d2 : mov rax, qword ptr [rip + 0x55f507] ; call rax
0x00000000004a33ae : mov rax, qword ptr [rip + 0x55f533] ; call rax
0x00000000004a2f6e : mov rax, qword ptr [rip + 0x55f96b] ; call rax
0x00000000004a2f4a : mov rax, qword ptr [rip + 0x55f997] ; call rax
0x00000000004a29ae : mov rax, qword ptr [rip + 0x55ff33] ; call rax
0x00000000004a285a : mov rax, qword ptr [rip + 0x560087] ; call rax
0x00000000004a279e : mov rax, qword ptr [rip + 0x56013b] ; call rax
0x00000000004a2782 : mov rax, qword ptr [rip + 0x56015f] ; call rax
0x00000000004a2216 : mov rax, qword ptr [rip + 0x560653] ; call rax
0x00000000004a220d : mov rax, qword ptr [rip + 0x560654] ; call rax
0x00000000004a21e1 : mov rax, qword ptr [rip + 0x560678] ; call rax
0x00000000004a21ea : mov rax, qword ptr [rip + 0x5606ef] ; call rax
0x00000000004a21d8 : mov rax, qword ptr [rip + 0x560709] ; call rax
0x00000000004a20a8 : mov rax, qword ptr [rip + 0x5607c1] ; call rax
0x00000000004a209f : mov rax, qword ptr [rip + 0x5607c2] ; call rax
0x00000000004a2073 : mov rax, qword ptr [rip + 0x5607e6] ; call rax
0x00000000004a207c : mov rax, qword ptr [rip + 0x56085d] ; call rax
0x00000000004a206a : mov rax, qword ptr [rip + 0x560877] ; call rax
0x00000000004a1e2e : mov rax, qword ptr [rip + 0x560ab3] ; call rax
0x00000000004a1cb4 : mov rax, qword ptr [rip + 0x560c2d] ; call rax
0x00000000004a1bf8 : mov rax, qword ptr [rip + 0x560ce1] ; call rax
0x00000000004a1bdc : mov rax, qword ptr [rip + 0x560d05] ; call rax
0x00000000004a19fa : mov rax, qword ptr [rip + 0x560e6f] ; call rax
0x00000000004a19f1 : mov rax, qword ptr [rip + 0x560e70] ; call rax
0x00000000004a19c5 : mov rax, qword ptr [rip + 0x560e94] ; call rax
0x00000000004a19ce : mov rax, qword ptr [rip + 0x560f0b] ; call rax
0x00000000004a19bc : mov rax, qword ptr [rip + 0x560f25] ; call rax
0x00000000004a191c : mov rax, qword ptr [rip + 0x560f4d] ; call rax
0x00000000004a1913 : mov rax, qword ptr [rip + 0x560f4e] ; call rax
0x00000000004a18e7 : mov rax, qword ptr [rip + 0x560f72] ; call rax
0x00000000004a18f0 : mov rax, qword ptr [rip + 0x560fe9] ; call rax
0x00000000004a18de : mov rax, qword ptr [rip + 0x561003] ; call rax
0x00000000004a132d : mov rax, qword ptr [rip + 0x5615b4] ; call rax
0x00000000004a1122 : mov rax, qword ptr [rip + 0x5617b7] ; call rax
0x00000000004a1106 : mov rax, qword ptr [rip + 0x5617db] ; call rax
0x00000000004a0a01 : mov rax, qword ptr [rip + 0x561ed8] ; call rax
0x00000000004a09e0 : mov rax, qword ptr [rip + 0x561f01] ; call rax
0x00000000004a06f5 : mov rax, qword ptr [rip + 0x5621e4] ; call rax
0x00000000004a06d4 : mov rax, qword ptr [rip + 0x56220d] ; call rax
0x000000000049ffb3 : mov rax, qword ptr [rip + 0x56292e] ; call rax
0x000000000049fde4 : mov rax, qword ptr [rip + 0x562af5] ; call rax
0x000000000049fdc8 : mov rax, qword ptr [rip + 0x562b19] ; call rax
0x000000000049fc22 : mov rax, qword ptr [rip + 0x562cb7] ; call rax
0x000000000049fc06 : mov rax, qword ptr [rip + 0x562cdb] ; call rax
0x000000000049f68a : mov rax, qword ptr [rip + 0x5631df] ; call rax
0x000000000049f671 : mov rax, qword ptr [rip + 0x5631f0] ; call rax
0x000000000049f6e7 : mov rax, qword ptr [rip + 0x5631f2] ; call rax
0x000000000049f5ed : mov rax, qword ptr [rip + 0x56326c] ; call rax
0x000000000049f630 : mov rax, qword ptr [rip + 0x5632b1] ; call rax
0x000000000049f5f6 : mov rax, qword ptr [rip + 0x5632e3] ; call rax
0x000000000049f5e4 : mov rax, qword ptr [rip + 0x5632fd] ; call rax
0x000000000049f1c6 : mov rax, qword ptr [rip + 0x563713] ; call rax
0x000000000049f1aa : mov rax, qword ptr [rip + 0x563737] ; call rax
0x000000000049f0bd : mov rax, qword ptr [rip + 0x563824] ; call rax
0x000000000049d340 : mov rax, qword ptr [rip + 0x5655a1] ; call rax
0x000000000049d214 : mov rax, qword ptr [rip + 0x5656c5] ; call rax
0x000000000049d1f8 : mov rax, qword ptr [rip + 0x5656e9] ; call rax
0x000000000049cf0b : mov rax, qword ptr [rip + 0x5659ce] ; call rax
0x000000000049ceea : mov rax, qword ptr [rip + 0x5659f7] ; call rax
0x000000000049cbff : mov rax, qword ptr [rip + 0x565cda] ; call rax
0x000000000049cbde : mov rax, qword ptr [rip + 0x565d03] ; call rax
0x000000000049c28e : mov rax, qword ptr [rip + 0x566653] ; call rax
0x000000000049c1bc : mov rax, qword ptr [rip + 0x56671d] ; call rax
0x000000000049c1a0 : mov rax, qword ptr [rip + 0x566741] ; call rax
0x000000000049c0ba : mov rax, qword ptr [rip + 0x566827] ; call rax
0x000000000049bfe4 : mov rax, qword ptr [rip + 0x5668f5] ; call rax
0x000000000049bfc8 : mov rax, qword ptr [rip + 0x566919] ; call rax
0x000000000049bdd2 : mov rax, qword ptr [rip + 0x566b0f] ; call rax
0x000000000049bd79 : mov rax, qword ptr [rip + 0x566b68] ; call rax
0x000000000049bc07 : mov rax, qword ptr [rip + 0x566cd2] ; call rax
0x000000000049bbda : mov rax, qword ptr [rip + 0x566d07] ; call rax
0x000000000049a940 : mov rax, qword ptr [rip + 0x567fa1] ; call rax
0x000000000049a86a : mov rax, qword ptr [rip + 0x56806f] ; call rax
0x000000000049a84e : mov rax, qword ptr [rip + 0x568093] ; call rax
0x000000000049a12e : mov rax, qword ptr [rip + 0x5687b3] ; call rax
0x00000000004993d7 : mov rax, qword ptr [rip + 0x569502] ; call rax
0x0000000000499392 : mov rax, qword ptr [rip + 0x56954f] ; call rax
0x0000000000499289 : mov rax, qword ptr [rip + 0x569650] ; call rax
0x0000000000499246 : mov rax, qword ptr [rip + 0x56969b] ; call rax
0x0000000000498f00 : mov rax, qword ptr [rip + 0x5699d9] ; call rax
0x0000000000498eb8 : mov rax, qword ptr [rip + 0x569a29] ; call rax
0x0000000000498c84 : mov rax, qword ptr [rip + 0x569c55] ; call rax
0x0000000000498c41 : mov rax, qword ptr [rip + 0x569ca0] ; call rax
0x000000000049689f : mov rax, qword ptr [rip + 0x56c03a] ; call rax
0x000000000049685a : mov rax, qword ptr [rip + 0x56c087] ; call rax
0x0000000000496473 : mov rax, qword ptr [rip + 0x56c466] ; call rax
0x000000000049642f : mov rax, qword ptr [rip + 0x56c4b2] ; call rax
0x0000000000496384 : mov rax, qword ptr [rip + 0x56c55d] ; call rax
0x0000000000493464 : mov rax, qword ptr [rip + 0x56f47d] ; call rax
0x0000000000492c4f : mov rax, qword ptr [rip + 0x56fc8a] ; call rax
0x0000000000492c16 : mov rax, qword ptr [rip + 0x56fccb] ; call rax
0x0000000000492b0c : mov rax, qword ptr [rip + 0x56fdcd] ; call rax
0x0000000000492acc : mov rax, qword ptr [rip + 0x56fe15] ; call rax
0x00000000004929c3 : mov rax, qword ptr [rip + 0x56ff16] ; call rax
0x0000000000492980 : mov rax, qword ptr [rip + 0x56ff61] ; call rax
0x0000000000492853 : mov rax, qword ptr [rip + 0x570086] ; call rax
0x0000000000492810 : mov rax, qword ptr [rip + 0x5700d1] ; call rax
0x00000000004923a9 : mov rax, qword ptr [rip + 0x570530] ; call rax
0x0000000000492366 : mov rax, qword ptr [rip + 0x57057b] ; call rax
0x0000000000492323 : mov rax, qword ptr [rip + 0x5705be] ; call rax
0x0000000000492056 : mov rax, qword ptr [rip + 0x570883] ; call rax
0x0000000000492013 : mov rax, qword ptr [rip + 0x5708ce] ; call rax
0x0000000000491fd0 : mov rax, qword ptr [rip + 0x570911] ; call rax
0x0000000000491b89 : mov rax, qword ptr [rip + 0x570d50] ; call rax
0x0000000000491b46 : mov rax, qword ptr [rip + 0x570d9b] ; call rax
0x0000000000491b05 : mov rax, qword ptr [rip + 0x570ddc] ; call rax
0x0000000000491986 : mov rax, qword ptr [rip + 0x570f5b] ; call rax
0x0000000000491933 : mov rax, qword ptr [rip + 0x570fae] ; call rax
0x00000000004917a9 : mov rax, qword ptr [rip + 0x571130] ; call rax
0x0000000000491768 : mov rax, qword ptr [rip + 0x571179] ; call rax
0x00000000004915b3 : mov rax, qword ptr [rip + 0x571326] ; call rax
0x000000000049155e : mov rax, qword ptr [rip + 0x571383] ; call rax
0x00000000004912be : mov rax, qword ptr [rip + 0x57161b] ; call rax
0x000000000049127b : mov rax, qword ptr [rip + 0x571666] ; call rax
0x0000000000491238 : mov rax, qword ptr [rip + 0x5716a9] ; call rax
0x0000000000490f9b : mov rax, qword ptr [rip + 0x57193e] ; call rax
0x0000000000490f58 : mov rax, qword ptr [rip + 0x571989] ; call rax
0x0000000000490d4e : mov rax, qword ptr [rip + 0x571b8b] ; call rax
0x0000000000490cfa : mov rax, qword ptr [rip + 0x571be7] ; call rax
0x000000000049093c : mov rax, qword ptr [rip + 0x571fa5] ; call rax
0x0000000000490553 : mov rax, qword ptr [rip + 0x57238e] ; call rax
0x000000000048fe46 : mov rax, qword ptr [rip + 0x572a93] ; call rax
0x000000000048fdfa : mov rax, qword ptr [rip + 0x572ae7] ; call rax
0x000000000048fce2 : mov rax, qword ptr [rip + 0x572bf7] ; call rax
0x000000000048fc90 : mov rax, qword ptr [rip + 0x572c51] ; call rax
0x000000000048ee85 : mov rax, qword ptr [rip + 0x573a54] ; call rax
0x000000000048ee38 : mov rax, qword ptr [rip + 0x573aa9] ; call rax
0x000000000048dc1a : mov rax, qword ptr [rip + 0x574cc7] ; call rax
0x000000000048dbc3 : mov rax, qword ptr [rip + 0x574d1e] ; call rax
0x000000000048dafd : mov rax, qword ptr [rip + 0x574ddc] ; call rax
0x000000000048dae0 : mov rax, qword ptr [rip + 0x574e01] ; call rax
0x000000000048d9ca : mov rax, qword ptr [rip + 0x574f0f] ; call rax
0x000000000048d970 : mov rax, qword ptr [rip + 0x574f71] ; call rax
0x000000000048d6e5 : mov rax, qword ptr [rip + 0x5751f4] ; call rax
0x000000000048d69d : mov rax, qword ptr [rip + 0x575244] ; call rax
0x000000000048d5ef : mov rax, qword ptr [rip + 0x5752f2] ; call rax
0x000000000048cda7 : mov rax, qword ptr [rip + 0x575b32] ; call rax
0x000000000048cd86 : mov rax, qword ptr [rip + 0x575b5b] ; call rax
0x000000000048cc57 : mov rax, qword ptr [rip + 0x575c82] ; call rax
0x000000000048cba8 : mov rax, qword ptr [rip + 0x575d39] ; call rax
0x000000000048caee : mov rax, qword ptr [rip + 0x575deb] ; call rax
0x000000000048caa8 : mov rax, qword ptr [rip + 0x575e39] ; call rax
0x000000000048c9cb : mov rax, qword ptr [rip + 0x575f0e] ; call rax
0x000000000048c9a6 : mov rax, qword ptr [rip + 0x575f3b] ; call rax
0x000000000048c226 : mov rax, qword ptr [rip + 0x5766b3] ; call rax
0x000000000048c1cc : mov rax, qword ptr [rip + 0x576715] ; call rax
0x000000000048c105 : mov rax, qword ptr [rip + 0x5767d4] ; call rax
0x000000000048c0aa : mov rax, qword ptr [rip + 0x576837] ; call rax
0x000000000048bf7d : mov rax, qword ptr [rip + 0x57695c] ; call rax
0x000000000048bf2c : mov rax, qword ptr [rip + 0x5769b5] ; call rax
0x000000000048bdff : mov rax, qword ptr [rip + 0x576ada] ; call rax
0x000000000048bdac : mov rax, qword ptr [rip + 0x576b35] ; call rax
0x000000000048bcf2 : mov rax, qword ptr [rip + 0x576be7] ; call rax
0x000000000048bcca : mov rax, qword ptr [rip + 0x576c17] ; call rax
0x000000000048bb3a : mov rax, qword ptr [rip + 0x576d9f] ; call rax
0x000000000048baa8 : mov rax, qword ptr [rip + 0x576e39] ; call rax
0x000000000048b916 : mov rax, qword ptr [rip + 0x576fc3] ; call rax
0x000000000048b884 : mov rax, qword ptr [rip + 0x57705d] ; call rax
0x000000000048b758 : mov rax, qword ptr [rip + 0x577181] ; call rax
0x000000000048b6fc : mov rax, qword ptr [rip + 0x5771e5] ; call rax
0x000000000048b642 : mov rax, qword ptr [rip + 0x577297] ; call rax
0x000000000048b61a : mov rax, qword ptr [rip + 0x5772c7] ; call rax
0x000000000048b562 : mov rax, qword ptr [rip + 0x577377] ; call rax
0x000000000048b53a : mov rax, qword ptr [rip + 0x5773a7] ; call rax
0x000000000048851b : mov rax, qword ptr [rip + 0x57a3be] ; call rax
0x00000000004884d3 : mov rax, qword ptr [rip + 0x57a40e] ; call rax
0x0000000000488392 : mov rax, qword ptr [rip + 0x57a54f] ; call rax
0x0000000000488245 : mov rax, qword ptr [rip + 0x57a694] ; call rax
0x00000000004881fd : mov rax, qword ptr [rip + 0x57a6e4] ; call rax
0x00000000004880bc : mov rax, qword ptr [rip + 0x57a825] ; call rax
0x0000000000487db8 : mov rax, qword ptr [rip + 0x57ab29] ; call rax
0x0000000000487bd3 : mov rax, qword ptr [rip + 0x57ad06] ; call rax
0x0000000000487b88 : mov rax, qword ptr [rip + 0x57ad59] ; call rax
0x000000000048749a : mov rax, qword ptr [rip + 0x57b43f] ; call rax
0x0000000000487436 : mov rax, qword ptr [rip + 0x57b4ab] ; call rax
0x00000000004870c2 : mov rax, qword ptr [rip + 0x57b817] ; call rax
0x000000000048707f : mov rax, qword ptr [rip + 0x57b862] ; call rax
0x000000000048703e : mov rax, qword ptr [rip + 0x57b8a3] ; call rax
0x0000000000486e4d : mov rax, qword ptr [rip + 0x57ba94] ; call rax
0x00000000004860ba : mov rax, qword ptr [rip + 0x57c81f] ; call rax
0x000000000048607a : mov rax, qword ptr [rip + 0x57c867] ; call rax
0x0000000000485be2 : mov rax, qword ptr [rip + 0x57ccf7] ; call rax
0x0000000000485ba0 : mov rax, qword ptr [rip + 0x57cd41] ; call rax
0x000000000048582d : mov rax, qword ptr [rip + 0x57d0b4] ; call rax
0x00000000004850e1 : mov rax, qword ptr [rip + 0x57d7f8] ; call rax
0x00000000004850ac : mov rax, qword ptr [rip + 0x57d835] ; call rax
0x0000000000484b4f : mov rax, qword ptr [rip + 0x57dd92] ; call rax
0x0000000000484981 : mov rax, qword ptr [rip + 0x57df60] ; call rax
0x0000000000484669 : mov rax, qword ptr [rip + 0x57e278] ; call rax
0x000000000048449b : mov rax, qword ptr [rip + 0x57e446] ; call rax
0x00000000004841e6 : mov rax, qword ptr [rip + 0x57e6fb] ; call rax
0x000000000048357e : mov rax, qword ptr [rip + 0x57f35b] ; call rax
0x0000000000483536 : mov rax, qword ptr [rip + 0x57f3ab] ; call rax
0x00000000004830dd : mov rax, qword ptr [rip + 0x57f804] ; call rax
0x0000000000483016 : mov rax, qword ptr [rip + 0x57f8c3] ; call rax
0x0000000000482fce : mov rax, qword ptr [rip + 0x57f913] ; call rax
0x0000000000482ef8 : mov rax, qword ptr [rip + 0x57f9e9] ; call rax
0x0000000000482b80 : mov rax, qword ptr [rip + 0x57fd61] ; call rax
0x0000000000482b27 : mov rax, qword ptr [rip + 0x57fdba] ; call rax
0x00000000004829b0 : mov rax, qword ptr [rip + 0x57ff29] ; call rax
0x0000000000482962 : mov rax, qword ptr [rip + 0x57ff7f] ; call rax
0x0000000000482858 : mov rax, qword ptr [rip + 0x580081] ; call rax
0x0000000000482818 : mov rax, qword ptr [rip + 0x5800c9] ; call rax
0x0000000000482625 : mov rax, qword ptr [rip + 0x5802b4] ; call rax
0x00000000004825e3 : mov rax, qword ptr [rip + 0x5802fe] ; call rax
0x000000000048233c : mov rax, qword ptr [rip + 0x5805a5] ; call rax
0x0000000000482239 : mov rax, qword ptr [rip + 0x5806a0] ; call rax
0x0000000000482204 : mov rax, qword ptr [rip + 0x5806dd] ; call rax
0x00000000004817de : mov rax, qword ptr [rip + 0x5810fb] ; call rax
0x000000000048179b : mov rax, qword ptr [rip + 0x581146] ; call rax
0x0000000000481577 : mov rax, qword ptr [rip + 0x581362] ; call rax
0x0000000000481522 : mov rax, qword ptr [rip + 0x5813bf] ; call rax
0x0000000000480f3d : mov rax, qword ptr [rip + 0x5819a4] ; call rax
0x000000000047fee5 : mov rax, qword ptr [rip + 0x5829f4] ; call rax
0x000000000047fe9c : mov rax, qword ptr [rip + 0x582a45] ; call rax
0x000000000047f72e : mov rax, qword ptr [rip + 0x5831b3] ; call rax
0x000000000047f5a2 : mov rax, qword ptr [rip + 0x58333f] ; call rax
0x000000000047f4d1 : mov rax, qword ptr [rip + 0x583408] ; call rax
0x000000000047f4ae : mov rax, qword ptr [rip + 0x583433] ; call rax
0x000000000047ed7e : mov rax, qword ptr [rip + 0x583b63] ; call rax
0x000000000047ebd1 : mov rax, qword ptr [rip + 0x583d10] ; call rax
0x000000000047eb09 : mov rax, qword ptr [rip + 0x583dd0] ; call rax
0x000000000047eae6 : mov rax, qword ptr [rip + 0x583dfb] ; call rax
0x000000000047e5a0 : mov rax, qword ptr [rip + 0x584341] ; call rax
0x000000000047e359 : mov rax, qword ptr [rip + 0x584580] ; call rax
0x000000000047e336 : mov rax, qword ptr [rip + 0x5845ab] ; call rax
0x000000000047dc04 : mov rax, qword ptr [rip + 0x584cd5] ; call rax
0x000000000047dbdc : mov rax, qword ptr [rip + 0x584d05] ; call rax
0x000000000047d89e : mov rax, qword ptr [rip + 0x58503b] ; call rax
0x000000000047d876 : mov rax, qword ptr [rip + 0x58506b] ; call rax
0x000000000047d16c : mov rax, qword ptr [rip + 0x5856fd] ; call rax
0x000000000047d153 : mov rax, qword ptr [rip + 0x58570e] ; call rax
0x000000000047d1ca : mov rax, qword ptr [rip + 0x58570f] ; call rax
0x000000000047d0c5 : mov rax, qword ptr [rip + 0x585794] ; call rax
0x000000000047d108 : mov rax, qword ptr [rip + 0x5857d9] ; call rax
0x000000000047d0ce : mov rax, qword ptr [rip + 0x58580b] ; call rax
0x000000000047d0bc : mov rax, qword ptr [rip + 0x585825] ; call rax
0x000000000047cc65 : mov rax, qword ptr [rip + 0x585c74] ; call rax
0x000000000047cc42 : mov rax, qword ptr [rip + 0x585c9f] ; call rax
0x000000000047cb4e : mov rax, qword ptr [rip + 0x585d93] ; call rax
0x000000000047b3f3 : mov rax, qword ptr [rip + 0x5874ee] ; call rax
0x000000000047b2ad : mov rax, qword ptr [rip + 0x58762c] ; call rax
0x000000000047b28a : mov rax, qword ptr [rip + 0x587657] ; call rax
0x000000000047af60 : mov rax, qword ptr [rip + 0x587979] ; call rax
0x000000000047af38 : mov rax, qword ptr [rip + 0x5879a9] ; call rax
0x000000000047abfa : mov rax, qword ptr [rip + 0x587cdf] ; call rax
0x000000000047abd2 : mov rax, qword ptr [rip + 0x587d0f] ; call rax
0x000000000047a1a5 : mov rax, qword ptr [rip + 0x58873c] ; call rax
0x000000000047a0c7 : mov rax, qword ptr [rip + 0x588812] ; call rax
0x000000000047a0a4 : mov rax, qword ptr [rip + 0x58883d] ; call rax
0x0000000000479fa2 : mov rax, qword ptr [rip + 0x58893f] ; call rax
0x0000000000479ebd : mov rax, qword ptr [rip + 0x588a1c] ; call rax
0x0000000000479e9a : mov rax, qword ptr [rip + 0x588a47] ; call rax
0x0000000000479c81 : mov rax, qword ptr [rip + 0x588c60] ; call rax
0x0000000000479c1a : mov rax, qword ptr [rip + 0x588cc7] ; call rax
0x0000000000479a98 : mov rax, qword ptr [rip + 0x588e41] ; call rax
0x0000000000479a5e : mov rax, qword ptr [rip + 0x588e83] ; call rax
0x0000000000478996 : mov rax, qword ptr [rip + 0x589f4b] ; call rax
0x00000000004788b1 : mov rax, qword ptr [rip + 0x58a028] ; call rax
0x000000000047888e : mov rax, qword ptr [rip + 0x58a053] ; call rax
0x00000000004780cb : mov rax, qword ptr [rip + 0x58a816] ; call rax
0x00000000004740df : mov rax, qword ptr [rip + 0x58e7fa] ; call rax
0x000000000047404d : mov rax, qword ptr [rip + 0x58e80c] ; call rax
0x0000000000474044 : mov rax, qword ptr [rip + 0x58e89d] ; call rax
0x0000000000473b51 : mov rax, qword ptr [rip + 0x58ed18] ; call rax
0x0000000000473b48 : mov rax, qword ptr [rip + 0x58ed19] ; call rax
0x0000000000473549 : mov rax, qword ptr [rip + 0x58f398] ; call rax
0x000000000047347e : mov rax, qword ptr [rip + 0x58f45b] ; call rax
0x0000000000473462 : mov rax, qword ptr [rip + 0x58f47f] ; call rax
0x0000000000472f24 : mov rax, qword ptr [rip + 0x58f945] ; call rax
0x0000000000472f1b : mov rax, qword ptr [rip + 0x58f946] ; call rax
0x0000000000472eef : mov rax, qword ptr [rip + 0x58f96a] ; call rax
0x0000000000472ef8 : mov rax, qword ptr [rip + 0x58f9e1] ; call rax
0x0000000000472ee6 : mov rax, qword ptr [rip + 0x58f9fb] ; call rax
0x0000000000472d08 : mov rax, qword ptr [rip + 0x58fbd1] ; call rax
0x0000000000472ce4 : mov rax, qword ptr [rip + 0x58fbfd] ; call rax
0x00000000004728a4 : mov rax, qword ptr [rip + 0x590035] ; call rax
0x0000000000472880 : mov rax, qword ptr [rip + 0x590061] ; call rax
0x00000000004722e4 : mov rax, qword ptr [rip + 0x5905fd] ; call rax
0x0000000000472190 : mov rax, qword ptr [rip + 0x590751] ; call rax
0x00000000004720d4 : mov rax, qword ptr [rip + 0x590805] ; call rax
0x00000000004720b8 : mov rax, qword ptr [rip + 0x590829] ; call rax
0x0000000000471b4c : mov rax, qword ptr [rip + 0x590d1d] ; call rax
0x0000000000471b43 : mov rax, qword ptr [rip + 0x590d1e] ; call rax
0x0000000000471b17 : mov rax, qword ptr [rip + 0x590d42] ; call rax
0x0000000000471b20 : mov rax, qword ptr [rip + 0x590db9] ; call rax
0x0000000000471b0e : mov rax, qword ptr [rip + 0x590dd3] ; call rax
0x00000000004719de : mov rax, qword ptr [rip + 0x590e8b] ; call rax
0x00000000004719d5 : mov rax, qword ptr [rip + 0x590e8c] ; call rax
0x00000000004719a9 : mov rax, qword ptr [rip + 0x590eb0] ; call rax
0x00000000004719b2 : mov rax, qword ptr [rip + 0x590f27] ; call rax
0x00000000004719a0 : mov rax, qword ptr [rip + 0x590f41] ; call rax
0x0000000000471764 : mov rax, qword ptr [rip + 0x59117d] ; call rax
0x00000000004715ea : mov rax, qword ptr [rip + 0x5912f7] ; call rax
0x000000000047152e : mov rax, qword ptr [rip + 0x5913ab] ; call rax
0x0000000000471512 : mov rax, qword ptr [rip + 0x5913cf] ; call rax
0x0000000000471330 : mov rax, qword ptr [rip + 0x591539] ; call rax
0x0000000000471327 : mov rax, qword ptr [rip + 0x59153a] ; call rax
0x00000000004712fb : mov rax, qword ptr [rip + 0x59155e] ; call rax
0x0000000000471304 : mov rax, qword ptr [rip + 0x5915d5] ; call rax
0x00000000004712f2 : mov rax, qword ptr [rip + 0x5915ef] ; call rax
0x0000000000471252 : mov rax, qword ptr [rip + 0x591617] ; call rax
0x0000000000471249 : mov rax, qword ptr [rip + 0x591618] ; call rax
0x000000000047121d : mov rax, qword ptr [rip + 0x59163c] ; call rax
0x0000000000471226 : mov rax, qword ptr [rip + 0x5916b3] ; call rax
0x0000000000471214 : mov rax, qword ptr [rip + 0x5916cd] ; call rax
0x0000000000470d5d : mov rax, qword ptr [rip + 0x591b84] ; call rax
0x0000000000470b52 : mov rax, qword ptr [rip + 0x591d87] ; call rax
0x0000000000470b36 : mov rax, qword ptr [rip + 0x591dab] ; call rax
0x000000000047046b : mov rax, qword ptr [rip + 0x59246e] ; call rax
0x000000000047044a : mov rax, qword ptr [rip + 0x592497] ; call rax
0x000000000047015f : mov rax, qword ptr [rip + 0x59277a] ; call rax
0x000000000047013e : mov rax, qword ptr [rip + 0x5927a3] ; call rax
0x000000000046fba1 : mov rax, qword ptr [rip + 0x592d40] ; call rax
0x000000000046f9d2 : mov rax, qword ptr [rip + 0x592f07] ; call rax
0x000000000046f9b6 : mov rax, qword ptr [rip + 0x592f2b] ; call rax
0x000000000046f810 : mov rax, qword ptr [rip + 0x5930c9] ; call rax
0x000000000046f7f4 : mov rax, qword ptr [rip + 0x5930ed] ; call rax
0x000000000046f278 : mov rax, qword ptr [rip + 0x5935f1] ; call rax
0x000000000046f25f : mov rax, qword ptr [rip + 0x593602] ; call rax
0x000000000046f2d5 : mov rax, qword ptr [rip + 0x593604] ; call rax
0x000000000046f1db : mov rax, qword ptr [rip + 0x59367e] ; call rax
0x000000000046f21e : mov rax, qword ptr [rip + 0x5936c3] ; call rax
0x000000000046f1e4 : mov rax, qword ptr [rip + 0x5936f5] ; call rax
0x000000000046f1d2 : mov rax, qword ptr [rip + 0x59370f] ; call rax
0x000000000046edb4 : mov rax, qword ptr [rip + 0x593b25] ; call rax
0x000000000046ed98 : mov rax, qword ptr [rip + 0x593b49] ; call rax
0x000000000046ecab : mov rax, qword ptr [rip + 0x593c36] ; call rax
0x000000000046cfbe : mov rax, qword ptr [rip + 0x595923] ; call rax
0x000000000046ce92 : mov rax, qword ptr [rip + 0x595a47] ; call rax
0x000000000046ce76 : mov rax, qword ptr [rip + 0x595a6b] ; call rax
0x000000000046cb89 : mov rax, qword ptr [rip + 0x595d50] ; call rax
0x000000000046cb68 : mov rax, qword ptr [rip + 0x595d79] ; call rax
0x000000000046c87d : mov rax, qword ptr [rip + 0x59605c] ; call rax
0x000000000046c85c : mov rax, qword ptr [rip + 0x596085] ; call rax
0x000000000046bf12 : mov rax, qword ptr [rip + 0x5969cf] ; call rax
0x000000000046be40 : mov rax, qword ptr [rip + 0x596a99] ; call rax
0x000000000046be24 : mov rax, qword ptr [rip + 0x596abd] ; call rax
0x000000000046bd3e : mov rax, qword ptr [rip + 0x596ba3] ; call rax
0x000000000046bc68 : mov rax, qword ptr [rip + 0x596c71] ; call rax
0x000000000046bc4c : mov rax, qword ptr [rip + 0x596c95] ; call rax
0x000000000046ba56 : mov rax, qword ptr [rip + 0x596e8b] ; call rax
0x000000000046b9fd : mov rax, qword ptr [rip + 0x596ee4] ; call rax
0x000000000046b88b : mov rax, qword ptr [rip + 0x59704e] ; call rax
0x000000000046b85e : mov rax, qword ptr [rip + 0x597083] ; call rax
0x000000000046a5c4 : mov rax, qword ptr [rip + 0x59831d] ; call rax
0x000000000046a4ee : mov rax, qword ptr [rip + 0x5983eb] ; call rax
0x000000000046a4d2 : mov rax, qword ptr [rip + 0x59840f] ; call rax
0x0000000000468c91 : mov rax, qword ptr [rip + 0x599c48] ; call rax
0x0000000000468c49 : mov rax, qword ptr [rip + 0x599c98] ; call rax
0x0000000000468a90 : mov rax, qword ptr [rip + 0x599e49] ; call rax
0x0000000000468a2a : mov rax, qword ptr [rip + 0x599eb7] ; call rax
0x0000000000467ed4 : mov rax, qword ptr [rip + 0x59aa0d] ; call rax
0x0000000000467808 : mov rax, qword ptr [rip + 0x59b0d1] ; call rax
0x00000000004677c1 : mov rax, qword ptr [rip + 0x59b120] ; call rax
0x00000000004675e0 : mov rax, qword ptr [rip + 0x59b2f9] ; call rax
0x000000000046757a : mov rax, qword ptr [rip + 0x59b367] ; call rax
0x000000000046705d : mov rax, qword ptr [rip + 0x59b884] ; call rax
0x0000000000466e52 : mov rax, qword ptr [rip + 0x59ba87] ; call rax
0x0000000000466e36 : mov rax, qword ptr [rip + 0x59baab] ; call rax
0x000000000046676b : mov rax, qword ptr [rip + 0x59c16e] ; call rax
0x000000000046674a : mov rax, qword ptr [rip + 0x59c197] ; call rax
0x000000000046645f : mov rax, qword ptr [rip + 0x59c47a] ; call rax
0x000000000046643e : mov rax, qword ptr [rip + 0x59c4a3] ; call rax
0x0000000000465ea1 : mov rax, qword ptr [rip + 0x59ca40] ; call rax
0x0000000000465cd2 : mov rax, qword ptr [rip + 0x59cc07] ; call rax
0x0000000000465cb6 : mov rax, qword ptr [rip + 0x59cc2b] ; call rax
0x0000000000465b10 : mov rax, qword ptr [rip + 0x59cdc9] ; call rax
0x0000000000465af4 : mov rax, qword ptr [rip + 0x59cded] ; call rax
0x0000000000465578 : mov rax, qword ptr [rip + 0x59d2f1] ; call rax
0x000000000046555f : mov rax, qword ptr [rip + 0x59d302] ; call rax
0x00000000004655d5 : mov rax, qword ptr [rip + 0x59d304] ; call rax
0x00000000004654db : mov rax, qword ptr [rip + 0x59d37e] ; call rax
0x000000000046551e : mov rax, qword ptr [rip + 0x59d3c3] ; call rax
0x00000000004654e4 : mov rax, qword ptr [rip + 0x59d3f5] ; call rax
0x00000000004654d2 : mov rax, qword ptr [rip + 0x59d40f] ; call rax
0x00000000004650b4 : mov rax, qword ptr [rip + 0x59d825] ; call rax
0x0000000000465098 : mov rax, qword ptr [rip + 0x59d849] ; call rax
0x0000000000464fab : mov rax, qword ptr [rip + 0x59d936] ; call rax
0x00000000004632be : mov rax, qword ptr [rip + 0x59f623] ; call rax
0x0000000000463192 : mov rax, qword ptr [rip + 0x59f747] ; call rax
0x0000000000463176 : mov rax, qword ptr [rip + 0x59f76b] ; call rax
0x0000000000462e89 : mov rax, qword ptr [rip + 0x59fa50] ; call rax
0x0000000000462e68 : mov rax, qword ptr [rip + 0x59fa79] ; call rax
0x0000000000462b7d : mov rax, qword ptr [rip + 0x59fd5c] ; call rax
0x0000000000462b5c : mov rax, qword ptr [rip + 0x59fd85] ; call rax
0x0000000000462212 : mov rax, qword ptr [rip + 0x5a06cf] ; call rax
0x0000000000462140 : mov rax, qword ptr [rip + 0x5a0799] ; call rax
0x0000000000462124 : mov rax, qword ptr [rip + 0x5a07bd] ; call rax
0x000000000046203e : mov rax, qword ptr [rip + 0x5a08a3] ; call rax
0x0000000000461f68 : mov rax, qword ptr [rip + 0x5a0971] ; call rax
0x0000000000461f4c : mov rax, qword ptr [rip + 0x5a0995] ; call rax
0x0000000000461d56 : mov rax, qword ptr [rip + 0x5a0b8b] ; call rax
0x0000000000461cfd : mov rax, qword ptr [rip + 0x5a0be4] ; call rax
0x0000000000461b8b : mov rax, qword ptr [rip + 0x5a0d4e] ; call rax
0x0000000000461b5e : mov rax, qword ptr [rip + 0x5a0d83] ; call rax
0x00000000004608c4 : mov rax, qword ptr [rip + 0x5a201d] ; call rax
0x00000000004607ee : mov rax, qword ptr [rip + 0x5a20eb] ; call rax
0x00000000004607d2 : mov rax, qword ptr [rip + 0x5a210f] ; call rax
0x000000000045fbeb : mov rax, qword ptr [rip + 0x5a2cf6] ; call rax
0x000000000045f9e0 : mov rax, qword ptr [rip + 0x5a2ef9] ; call rax
0x000000000045f9c4 : mov rax, qword ptr [rip + 0x5a2f1d] ; call rax
0x000000000045f812 : mov rax, qword ptr [rip + 0x5a30cf] ; call rax
0x000000000045f415 : mov rax, qword ptr [rip + 0x5a34cc] ; call rax
0x000000000045ef2f : mov rax, qword ptr [rip + 0x5a39aa] ; call rax
0x000000000045ef0e : mov rax, qword ptr [rip + 0x5a39d3] ; call rax
0x000000000045ec23 : mov rax, qword ptr [rip + 0x5a3cb6] ; call rax
0x000000000045ec02 : mov rax, qword ptr [rip + 0x5a3cdf] ; call rax
0x000000000045eafa : mov rax, qword ptr [rip + 0x5a3ddf] ; call rax
0x000000000045eacc : mov rax, qword ptr [rip + 0x5a3e15] ; call rax
0x000000000045ea14 : mov rax, qword ptr [rip + 0x5a3ec5] ; call rax
0x000000000045e9f0 : mov rax, qword ptr [rip + 0x5a3ef1] ; call rax
0x000000000045e709 : mov rax, qword ptr [rip + 0x5a41d8] ; call rax
0x000000000045e6d1 : mov rax, qword ptr [rip + 0x5a4208] ; call rax
0x000000000045e68d : mov rax, qword ptr [rip + 0x5a4254] ; call rax
0x000000000045e648 : mov rax, qword ptr [rip + 0x5a4299] ; call rax
0x000000000045e5a0 : mov rax, qword ptr [rip + 0x5a4341] ; call rax
0x000000000045e466 : mov rax, qword ptr [rip + 0x5a4473] ; call rax
0x000000000045e42c : mov rax, qword ptr [rip + 0x5a44b5] ; call rax
0x000000000045e26f : mov rax, qword ptr [rip + 0x5a4672] ; call rax
0x000000000045e1ac : mov rax, qword ptr [rip + 0x5a472d] ; call rax
0x000000000045e186 : mov rax, qword ptr [rip + 0x5a475b] ; call rax
0x000000000045dea0 : mov rax, qword ptr [rip + 0x5a4a39] ; call rax
0x000000000045de53 : mov rax, qword ptr [rip + 0x5a4a8e] ; call rax
0x000000000045d987 : mov rax, qword ptr [rip + 0x5a4f5a] ; call rax
0x000000000045d7b8 : mov rax, qword ptr [rip + 0x5a5121] ; call rax
0x000000000045d79c : mov rax, qword ptr [rip + 0x5a5145] ; call rax
0x000000000045d5f6 : mov rax, qword ptr [rip + 0x5a52e3] ; call rax
0x000000000045d5da : mov rax, qword ptr [rip + 0x5a5307] ; call rax
0x000000000045d05e : mov rax, qword ptr [rip + 0x5a580b] ; call rax
0x000000000045d045 : mov rax, qword ptr [rip + 0x5a581c] ; call rax
0x000000000045d0bb : mov rax, qword ptr [rip + 0x5a581e] ; call rax
0x000000000045cfc1 : mov rax, qword ptr [rip + 0x5a5898] ; call rax
0x000000000045d004 : mov rax, qword ptr [rip + 0x5a58dd] ; call rax
0x000000000045cfca : mov rax, qword ptr [rip + 0x5a590f] ; call rax
0x000000000045cfb8 : mov rax, qword ptr [rip + 0x5a5929] ; call rax
0x000000000045cb9a : mov rax, qword ptr [rip + 0x5a5d3f] ; call rax
0x000000000045cb7e : mov rax, qword ptr [rip + 0x5a5d63] ; call rax
0x000000000045ca91 : mov rax, qword ptr [rip + 0x5a5e50] ; call rax
0x000000000045c7ab : mov rax, qword ptr [rip + 0x5a6136] ; call rax
0x000000000045c08e : mov rax, qword ptr [rip + 0x5a6853] ; call rax
0x000000000045b9f1 : mov rax, qword ptr [rip + 0x5a6ef0] ; call rax
0x000000000045b8dc : mov rax, qword ptr [rip + 0x5a7005] ; call rax
0x000000000045a81b : mov rax, qword ptr [rip + 0x5a80c6] ; call rax
0x000000000045a4c0 : mov rax, qword ptr [rip + 0x5a8421] ; call rax
0x000000000045a394 : mov rax, qword ptr [rip + 0x5a8545] ; call rax
0x000000000045a378 : mov rax, qword ptr [rip + 0x5a8569] ; call rax
0x000000000045a08b : mov rax, qword ptr [rip + 0x5a884e] ; call rax
0x000000000045a06a : mov rax, qword ptr [rip + 0x5a8877] ; call rax
0x0000000000459d7f : mov rax, qword ptr [rip + 0x5a8b5a] ; call rax
0x0000000000459d5e : mov rax, qword ptr [rip + 0x5a8b83] ; call rax
0x0000000000459418 : mov rax, qword ptr [rip + 0x5a94c9] ; call rax
0x0000000000459346 : mov rax, qword ptr [rip + 0x5a9593] ; call rax
0x000000000045932a : mov rax, qword ptr [rip + 0x5a95b7] ; call rax
0x0000000000459244 : mov rax, qword ptr [rip + 0x5a969d] ; call rax
0x000000000045916e : mov rax, qword ptr [rip + 0x5a976b] ; call rax
0x0000000000459152 : mov rax, qword ptr [rip + 0x5a978f] ; call rax
0x0000000000458f5c : mov rax, qword ptr [rip + 0x5a9985] ; call rax
0x0000000000458f03 : mov rax, qword ptr [rip + 0x5a99de] ; call rax
0x0000000000458d91 : mov rax, qword ptr [rip + 0x5a9b48] ; call rax
0x0000000000458d64 : mov rax, qword ptr [rip + 0x5a9b7d] ; call rax
0x0000000000457aca : mov rax, qword ptr [rip + 0x5aae17] ; call rax
0x00000000004579f4 : mov rax, qword ptr [rip + 0x5aaee5] ; call rax
0x00000000004579d8 : mov rax, qword ptr [rip + 0x5aaf09] ; call rax
0x0000000000456ccf : mov rax, qword ptr [rip + 0x5abc0a] ; call rax
0x0000000000456b68 : mov rax, qword ptr [rip + 0x5abd79] ; call rax
0x0000000000455a02 : mov rax, qword ptr [rip + 0x5acedf] ; call rax
0x0000000000455324 : mov rax, qword ptr [rip + 0x5ad5bd] ; call rax
0x000000000045517c : mov rax, qword ptr [rip + 0x5ad765] ; call rax
0x00000000004550c0 : mov rax, qword ptr [rip + 0x5ad819] ; call rax
0x00000000004550a4 : mov rax, qword ptr [rip + 0x5ad83d] ; call rax
0x0000000000454a3a : mov rax, qword ptr [rip + 0x5ade2f] ; call rax
0x0000000000454a31 : mov rax, qword ptr [rip + 0x5ade30] ; call rax
0x0000000000454a05 : mov rax, qword ptr [rip + 0x5ade54] ; call rax
0x0000000000454a0e : mov rax, qword ptr [rip + 0x5adecb] ; call rax
0x00000000004549fc : mov rax, qword ptr [rip + 0x5adee5] ; call rax
0x000000000045481e : mov rax, qword ptr [rip + 0x5ae0bb] ; call rax
0x00000000004547fa : mov rax, qword ptr [rip + 0x5ae0e7] ; call rax
0x00000000004543ba : mov rax, qword ptr [rip + 0x5ae51f] ; call rax
0x0000000000454396 : mov rax, qword ptr [rip + 0x5ae54b] ; call rax
0x0000000000453dfa : mov rax, qword ptr [rip + 0x5aeae7] ; call rax
0x0000000000453ca6 : mov rax, qword ptr [rip + 0x5aec3b] ; call rax
0x0000000000453bea : mov rax, qword ptr [rip + 0x5aecef] ; call rax
0x0000000000453bce : mov rax, qword ptr [rip + 0x5aed13] ; call rax
0x0000000000453662 : mov rax, qword ptr [rip + 0x5af207] ; call rax
0x0000000000453659 : mov rax, qword ptr [rip + 0x5af208] ; call rax
0x000000000045362d : mov rax, qword ptr [rip + 0x5af22c] ; call rax
0x0000000000453636 : mov rax, qword ptr [rip + 0x5af2a3] ; call rax
0x0000000000453624 : mov rax, qword ptr [rip + 0x5af2bd] ; call rax
0x00000000004534f4 : mov rax, qword ptr [rip + 0x5af375] ; call rax
0x00000000004534eb : mov rax, qword ptr [rip + 0x5af376] ; call rax
0x00000000004534bf : mov rax, qword ptr [rip + 0x5af39a] ; call rax
0x00000000004534c8 : mov rax, qword ptr [rip + 0x5af411] ; call rax
0x00000000004534b6 : mov rax, qword ptr [rip + 0x5af42b] ; call rax
0x000000000045327a : mov rax, qword ptr [rip + 0x5af667] ; call rax
0x0000000000453100 : mov rax, qword ptr [rip + 0x5af7e1] ; call rax
0x0000000000453044 : mov rax, qword ptr [rip + 0x5af895] ; call rax
0x0000000000453028 : mov rax, qword ptr [rip + 0x5af8b9] ; call rax
0x0000000000452e46 : mov rax, qword ptr [rip + 0x5afa23] ; call rax
0x0000000000452e3d : mov rax, qword ptr [rip + 0x5afa24] ; call rax
0x0000000000452e11 : mov rax, qword ptr [rip + 0x5afa48] ; call rax
0x0000000000452e1a : mov rax, qword ptr [rip + 0x5afabf] ; call rax
0x0000000000452e08 : mov rax, qword ptr [rip + 0x5afad9] ; call rax
0x0000000000452d68 : mov rax, qword ptr [rip + 0x5afb01] ; call rax
0x0000000000452d5f : mov rax, qword ptr [rip + 0x5afb02] ; call rax
0x0000000000452d33 : mov rax, qword ptr [rip + 0x5afb26] ; call rax
0x0000000000452d3c : mov rax, qword ptr [rip + 0x5afb9d] ; call rax
0x0000000000452d2a : mov rax, qword ptr [rip + 0x5afbb7] ; call rax
0x0000000000452ac5 : mov rax, qword ptr [rip + 0x5afe1c] ; call rax
0x0000000000451aac : mov rax, qword ptr [rip + 0x5b0e35] ; call rax
0x0000000000451904 : mov rax, qword ptr [rip + 0x5b0fdd] ; call rax
0x0000000000451848 : mov rax, qword ptr [rip + 0x5b1091] ; call rax
0x000000000045182c : mov rax, qword ptr [rip + 0x5b10b5] ; call rax
0x000000000045124e : mov rax, qword ptr [rip + 0x5b161b] ; call rax
0x0000000000451245 : mov rax, qword ptr [rip + 0x5b161c] ; call rax
0x0000000000451219 : mov rax, qword ptr [rip + 0x5b1640] ; call rax
0x0000000000451222 : mov rax, qword ptr [rip + 0x5b16b7] ; call rax
0x0000000000451210 : mov rax, qword ptr [rip + 0x5b16d1] ; call rax
0x0000000000451032 : mov rax, qword ptr [rip + 0x5b18a7] ; call rax
0x000000000045100e : mov rax, qword ptr [rip + 0x5b18d3] ; call rax
0x0000000000450a54 : mov rax, qword ptr [rip + 0x5b1e8d] ; call rax
0x0000000000450900 : mov rax, qword ptr [rip + 0x5b1fe1] ; call rax
0x0000000000450844 : mov rax, qword ptr [rip + 0x5b2095] ; call rax
0x0000000000450828 : mov rax, qword ptr [rip + 0x5b20b9] ; call rax
0x00000000004502bc : mov rax, qword ptr [rip + 0x5b25ad] ; call rax
0x00000000004502b3 : mov rax, qword ptr [rip + 0x5b25ae] ; call rax
0x0000000000450287 : mov rax, qword ptr [rip + 0x5b25d2] ; call rax
0x0000000000450290 : mov rax, qword ptr [rip + 0x5b2649] ; call rax
0x000000000045027e : mov rax, qword ptr [rip + 0x5b2663] ; call rax
0x000000000045014e : mov rax, qword ptr [rip + 0x5b271b] ; call rax
0x0000000000450145 : mov rax, qword ptr [rip + 0x5b271c] ; call rax
0x0000000000450119 : mov rax, qword ptr [rip + 0x5b2740] ; call rax
0x0000000000450122 : mov rax, qword ptr [rip + 0x5b27b7] ; call rax
0x0000000000450110 : mov rax, qword ptr [rip + 0x5b27d1] ; call rax
0x000000000044fed4 : mov rax, qword ptr [rip + 0x5b2a0d] ; call rax
0x000000000044fd5a : mov rax, qword ptr [rip + 0x5b2b87] ; call rax
0x000000000044fc9e : mov rax, qword ptr [rip + 0x5b2c3b] ; call rax
0x000000000044fc82 : mov rax, qword ptr [rip + 0x5b2c5f] ; call rax
0x000000000044faac : mov rax, qword ptr [rip + 0x5b2dbd] ; call rax
0x000000000044faa3 : mov rax, qword ptr [rip + 0x5b2dbe] ; call rax
0x000000000044fa77 : mov rax, qword ptr [rip + 0x5b2de2] ; call rax
0x000000000044fa80 : mov rax, qword ptr [rip + 0x5b2e59] ; call rax
0x000000000044fa6e : mov rax, qword ptr [rip + 0x5b2e73] ; call rax
0x000000000044f9ce : mov rax, qword ptr [rip + 0x5b2e9b] ; call rax
0x000000000044f9c5 : mov rax, qword ptr [rip + 0x5b2e9c] ; call rax
0x000000000044f999 : mov rax, qword ptr [rip + 0x5b2ec0] ; call rax
0x000000000044f9a2 : mov rax, qword ptr [rip + 0x5b2f37] ; call rax
0x000000000044f990 : mov rax, qword ptr [rip + 0x5b2f51] ; call rax
0x000000000044f335 : mov rax, qword ptr [rip + 0x5b35ac] ; call rax
0x000000000044f124 : mov rax, qword ptr [rip + 0x5b37b5] ; call rax
0x000000000044f108 : mov rax, qword ptr [rip + 0x5b37d9] ; call rax
0x000000000044ef42 : mov rax, qword ptr [rip + 0x5b399f] ; call rax
0x000000000044eb17 : mov rax, qword ptr [rip + 0x5b3dca] ; call rax
0x000000000044e617 : mov rax, qword ptr [rip + 0x5b42c2] ; call rax
0x000000000044e5f6 : mov rax, qword ptr [rip + 0x5b42eb] ; call rax
0x000000000044e30b : mov rax, qword ptr [rip + 0x5b45ce] ; call rax
0x000000000044e2ea : mov rax, qword ptr [rip + 0x5b45f7] ; call rax
0x000000000044e1e2 : mov rax, qword ptr [rip + 0x5b46f7] ; call rax
0x000000000044e1b4 : mov rax, qword ptr [rip + 0x5b472d] ; call rax
0x000000000044e0fc : mov rax, qword ptr [rip + 0x5b47dd] ; call rax
0x000000000044e0d8 : mov rax, qword ptr [rip + 0x5b4809] ; call rax
0x000000000044e020 : mov rax, qword ptr [rip + 0x5b48b9] ; call rax
0x000000000044dffa : mov rax, qword ptr [rip + 0x5b48e7] ; call rax
0x000000000044dc96 : mov rax, qword ptr [rip + 0x5b4c4b] ; call rax
0x000000000044dc4f : mov rax, qword ptr [rip + 0x5b4c8a] ; call rax
0x000000000044dc0f : mov rax, qword ptr [rip + 0x5b4cd2] ; call rax
0x000000000044dbd0 : mov rax, qword ptr [rip + 0x5b4d11] ; call rax
0x000000000044db4a : mov rax, qword ptr [rip + 0x5b4d8f] ; call rax
0x000000000044db0a : mov rax, qword ptr [rip + 0x5b4dd7] ; call rax
0x000000000044dacb : mov rax, qword ptr [rip + 0x5b4e16] ; call rax
0x000000000044da34 : mov rax, qword ptr [rip + 0x5b4ead] ; call rax
0x000000000044d896 : mov rax, qword ptr [rip + 0x5b5043] ; call rax
0x000000000044d85c : mov rax, qword ptr [rip + 0x5b5085] ; call rax
0x000000000044d693 : mov rax, qword ptr [rip + 0x5b524e] ; call rax
0x000000000044d5ca : mov rax, qword ptr [rip + 0x5b530f] ; call rax
0x000000000044d5a4 : mov rax, qword ptr [rip + 0x5b533d] ; call rax
0x000000000044d2be : mov rax, qword ptr [rip + 0x5b561b] ; call rax
0x000000000044d271 : mov rax, qword ptr [rip + 0x5b5670] ; call rax
0x000000000044cd71 : mov rax, qword ptr [rip + 0x5b5b70] ; call rax
0x000000000044cba2 : mov rax, qword ptr [rip + 0x5b5d37] ; call rax
0x000000000044cb86 : mov rax, qword ptr [rip + 0x5b5d5b] ; call rax
0x000000000044c9e0 : mov rax, qword ptr [rip + 0x5b5ef9] ; call rax
0x000000000044c9c4 : mov rax, qword ptr [rip + 0x5b5f1d] ; call rax
0x000000000044c448 : mov rax, qword ptr [rip + 0x5b6421] ; call rax
0x000000000044c42f : mov rax, qword ptr [rip + 0x5b6432] ; call rax
0x000000000044c4a5 : mov rax, qword ptr [rip + 0x5b6434] ; call rax
0x000000000044c3ab : mov rax, qword ptr [rip + 0x5b64ae] ; call rax
0x000000000044c3ee : mov rax, qword ptr [rip + 0x5b64f3] ; call rax
0x000000000044c3b4 : mov rax, qword ptr [rip + 0x5b6525] ; call rax
0x000000000044c3a2 : mov rax, qword ptr [rip + 0x5b653f] ; call rax
0x000000000044bf84 : mov rax, qword ptr [rip + 0x5b6955] ; call rax
0x000000000044bf68 : mov rax, qword ptr [rip + 0x5b6979] ; call rax
0x000000000044be7b : mov rax, qword ptr [rip + 0x5b6a66] ; call rax
0x000000000044bb80 : mov rax, qword ptr [rip + 0x5b6d61] ; call rax
0x000000000044b434 : mov rax, qword ptr [rip + 0x5b74ad] ; call rax
0x000000000044ad6c : mov rax, qword ptr [rip + 0x5b7b75] ; call rax
0x000000000044ac46 : mov rax, qword ptr [rip + 0x5b7c9b] ; call rax
0x0000000000449b84 : mov rax, qword ptr [rip + 0x5b8d5d] ; call rax
0x000000000044980c : mov rax, qword ptr [rip + 0x5b90d5] ; call rax
0x00000000004496e0 : mov rax, qword ptr [rip + 0x5b91f9] ; call rax
0x00000000004496c4 : mov rax, qword ptr [rip + 0x5b921d] ; call rax
0x00000000004493d7 : mov rax, qword ptr [rip + 0x5b9502] ; call rax
0x00000000004493b6 : mov rax, qword ptr [rip + 0x5b952b] ; call rax
0x00000000004490cb : mov rax, qword ptr [rip + 0x5b980e] ; call rax
0x00000000004490aa : mov rax, qword ptr [rip + 0x5b9837] ; call rax
0x0000000000448764 : mov rax, qword ptr [rip + 0x5ba17d] ; call rax
0x0000000000448692 : mov rax, qword ptr [rip + 0x5ba247] ; call rax
0x0000000000448676 : mov rax, qword ptr [rip + 0x5ba26b] ; call rax
0x0000000000448590 : mov rax, qword ptr [rip + 0x5ba351] ; call rax
0x00000000004484ba : mov rax, qword ptr [rip + 0x5ba41f] ; call rax
0x000000000044849e : mov rax, qword ptr [rip + 0x5ba443] ; call rax
0x00000000004482a8 : mov rax, qword ptr [rip + 0x5ba639] ; call rax
0x000000000044824f : mov rax, qword ptr [rip + 0x5ba692] ; call rax
0x00000000004480dd : mov rax, qword ptr [rip + 0x5ba7fc] ; call rax
0x00000000004480b0 : mov rax, qword ptr [rip + 0x5ba831] ; call rax
0x0000000000446e16 : mov rax, qword ptr [rip + 0x5bbacb] ; call rax
0x0000000000446d40 : mov rax, qword ptr [rip + 0x5bbb99] ; call rax
0x0000000000446d24 : mov rax, qword ptr [rip + 0x5bbbbd] ; call rax
0x0000000000446688 : mov rax, qword ptr [rip + 0x5bc251] ; call rax
0x000000000044666c : mov rax, qword ptr [rip + 0x5bc275] ; call rax
0x0000000000446482 : mov rax, qword ptr [rip + 0x5bc457] ; call rax
0x0000000000446454 : mov rax, qword ptr [rip + 0x5bc48d] ; call rax
0x0000000000445f47 : mov rax, qword ptr [rip + 0x5bc992] ; call rax
0x0000000000445f2a : mov rax, qword ptr [rip + 0x5bc9b7] ; call rax
0x0000000000445b1a : mov rax, qword ptr [rip + 0x5bcdc7] ; call rax
0x0000000000445ab7 : mov rax, qword ptr [rip + 0x5bce2a] ; call rax
0x00000000004459e9 : mov rax, qword ptr [rip + 0x5bcef8] ; call rax
0x0000000000444cf4 : mov rax, qword ptr [rip + 0x5bdbe5] ; call rax
0x0000000000444cd8 : mov rax, qword ptr [rip + 0x5bdc09] ; call rax
0x0000000000444c20 : mov rax, qword ptr [rip + 0x5bdcb9] ; call rax
0x0000000000444c04 : mov rax, qword ptr [rip + 0x5bdcdd] ; call rax
0x0000000000443ec3 : mov rax, qword ptr [rip + 0x5bea16] ; call rax
0x0000000000443e96 : mov rax, qword ptr [rip + 0x5bea4b] ; call rax
0x0000000000443562 : mov rax, qword ptr [rip + 0x5bf377] ; call rax
0x0000000000443534 : mov rax, qword ptr [rip + 0x5bf3ad] ; call rax
0x0000000000443397 : mov rax, qword ptr [rip + 0x5bf54a] ; call rax
0x000000000044333f : mov rax, qword ptr [rip + 0x5bf5a2] ; call rax
0x000000000044328e : mov rax, qword ptr [rip + 0x5bf653] ; call rax
0x0000000000443230 : mov rax, qword ptr [rip + 0x5bf6b1] ; call rax
0x000000000044273b : mov rax, qword ptr [rip + 0x5c01a6] ; call rax
0x00000000004425ac : mov rax, qword ptr [rip + 0x5c032d] ; call rax
0x0000000000442590 : mov rax, qword ptr [rip + 0x5c0351] ; call rax
0x00000000004423ea : mov rax, qword ptr [rip + 0x5c04ef] ; call rax
0x00000000004423ce : mov rax, qword ptr [rip + 0x5c0513] ; call rax
0x0000000000441f2e : mov rax, qword ptr [rip + 0x5c093b] ; call rax
0x0000000000441f15 : mov rax, qword ptr [rip + 0x5c094c] ; call rax
0x0000000000441f8b : mov rax, qword ptr [rip + 0x5c094e] ; call rax
0x0000000000441e91 : mov rax, qword ptr [rip + 0x5c09c8] ; call rax
0x0000000000441ed4 : mov rax, qword ptr [rip + 0x5c0a0d] ; call rax
0x0000000000441e9a : mov rax, qword ptr [rip + 0x5c0a3f] ; call rax
0x0000000000441e88 : mov rax, qword ptr [rip + 0x5c0a59] ; call rax
0x0000000000441a6a : mov rax, qword ptr [rip + 0x5c0e6f] ; call rax
0x0000000000441a4e : mov rax, qword ptr [rip + 0x5c0e93] ; call rax
0x0000000000441961 : mov rax, qword ptr [rip + 0x5c0f80] ; call rax
0x0000000000441720 : mov rax, qword ptr [rip + 0x5c11b9] ; call rax
0x0000000000441704 : mov rax, qword ptr [rip + 0x5c11dd] ; call rax
0x000000000043f72e : mov rax, qword ptr [rip + 0x5c31ab] ; call rax
0x000000000043f712 : mov rax, qword ptr [rip + 0x5c31cf] ; call rax
0x000000000043e8cc : mov rax, qword ptr [rip + 0x5c4015] ; call rax
0x000000000043e7a0 : mov rax, qword ptr [rip + 0x5c4139] ; call rax
0x000000000043e784 : mov rax, qword ptr [rip + 0x5c415d] ; call rax
0x000000000043e435 : mov rax, qword ptr [rip + 0x5c44a4] ; call rax
0x000000000043e414 : mov rax, qword ptr [rip + 0x5c44cd] ; call rax
0x000000000043dd5c : mov rax, qword ptr [rip + 0x5c4b85] ; call rax
0x000000000043dbbc : mov rax, qword ptr [rip + 0x5c4d1d] ; call rax
0x000000000043dba0 : mov rax, qword ptr [rip + 0x5c4d41] ; call rax
0x000000000043d792 : mov rax, qword ptr [rip + 0x5c514f] ; call rax
0x000000000043d6c0 : mov rax, qword ptr [rip + 0x5c5219] ; call rax
0x000000000043d6a4 : mov rax, qword ptr [rip + 0x5c523d] ; call rax
0x000000000043d5be : mov rax, qword ptr [rip + 0x5c5323] ; call rax
0x000000000043d4e8 : mov rax, qword ptr [rip + 0x5c53f1] ; call rax
0x000000000043d4cc : mov rax, qword ptr [rip + 0x5c5415] ; call rax
0x000000000043d2d6 : mov rax, qword ptr [rip + 0x5c560b] ; call rax
0x000000000043d27d : mov rax, qword ptr [rip + 0x5c5664] ; call rax
0x000000000043d10b : mov rax, qword ptr [rip + 0x5c57ce] ; call rax
0x000000000043d0de : mov rax, qword ptr [rip + 0x5c5803] ; call rax
0x000000000043cee6 : mov rax, qword ptr [rip + 0x5c59fb] ; call rax
0x000000000043ce8d : mov rax, qword ptr [rip + 0x5c5a54] ; call rax
0x000000000043cd1b : mov rax, qword ptr [rip + 0x5c5bbe] ; call rax
0x000000000043ccee : mov rax, qword ptr [rip + 0x5c5bf3] ; call rax
0x000000000043b734 : mov rax, qword ptr [rip + 0x5c71ad] ; call rax
0x000000000043b65e : mov rax, qword ptr [rip + 0x5c727b] ; call rax
0x000000000043b642 : mov rax, qword ptr [rip + 0x5c729f] ; call rax
0x000000000043a990 : mov rax, qword ptr [rip + 0x5c7f49] ; call rax
0x000000000043a847 : mov rax, qword ptr [rip + 0x5c809a] ; call rax
0x000000000043a303 : mov rax, qword ptr [rip + 0x5c85d6] ; call rax
0x000000000043a26a : mov rax, qword ptr [rip + 0x5c8677] ; call rax
0x000000000043a02d : mov rax, qword ptr [rip + 0x5c88ac] ; call rax
0x0000000000439fe5 : mov rax, qword ptr [rip + 0x5c88fc] ; call rax
0x0000000000439d77 : mov rax, qword ptr [rip + 0x5c8b6a] ; call rax
0x0000000000439c75 : mov rax, qword ptr [rip + 0x5c8c6c] ; call rax
0x0000000000439a96 : mov rax, qword ptr [rip + 0x5c8e43] ; call rax
0x0000000000439a26 : mov rax, qword ptr [rip + 0x5c8ebb] ; call rax
0x0000000000439909 : mov rax, qword ptr [rip + 0x5c8fd0] ; call rax
0x0000000000439828 : mov rax, qword ptr [rip + 0x5c90b9] ; call rax
0x000000000043961d : mov rax, qword ptr [rip + 0x5c92bc] ; call rax
0x0000000000439584 : mov rax, qword ptr [rip + 0x5c935d] ; call rax
0x00000000004392b1 : mov rax, qword ptr [rip + 0x5c9628] ; call rax
0x000000000043926e : mov rax, qword ptr [rip + 0x5c9673] ; call rax
0x00000000004391b6 : mov rax, qword ptr [rip + 0x5c9723] ; call rax
0x0000000000439170 : mov rax, qword ptr [rip + 0x5c9771] ; call rax
0x00000000004390b7 : mov rax, qword ptr [rip + 0x5c9822] ; call rax
0x000000000043906c : mov rax, qword ptr [rip + 0x5c9875] ; call rax
0x0000000000438f5e : mov rax, qword ptr [rip + 0x5c997b] ; call rax
0x0000000000438f00 : mov rax, qword ptr [rip + 0x5c99e1] ; call rax
0x0000000000438e38 : mov rax, qword ptr [rip + 0x5c9aa1] ; call rax
0x0000000000438da3 : mov rax, qword ptr [rip + 0x5c9ab6] ; call rax
0x0000000000438d9a : mov rax, qword ptr [rip + 0x5c9b47] ; call rax
0x0000000000438243 : mov rax, qword ptr [rip + 0x5ca696] ; call rax
0x0000000000438200 : mov rax, qword ptr [rip + 0x5ca6e1] ; call rax
0x00000000004381bd : mov rax, qword ptr [rip + 0x5ca724] ; call rax
0x0000000000437fc4 : mov rax, qword ptr [rip + 0x5ca915] ; call rax
0x0000000000437f81 : mov rax, qword ptr [rip + 0x5ca960] ; call rax
0x0000000000437f40 : mov rax, qword ptr [rip + 0x5ca9a1] ; call rax
0x0000000000437d47 : mov rax, qword ptr [rip + 0x5cab92] ; call rax
0x0000000000437cff : mov rax, qword ptr [rip + 0x5cabe2] ; call rax
0x0000000000437c4a : mov rax, qword ptr [rip + 0x5cac97] ; call rax
0x00000000004376a4 : mov rax, qword ptr [rip + 0x5cb235] ; call rax
0x000000000043765c : mov rax, qword ptr [rip + 0x5cb285] ; call rax
0x00000000004375a7 : mov rax, qword ptr [rip + 0x5cb33a] ; call rax
0x00000000004374b7 : mov rax, qword ptr [rip + 0x5cb3b2] ; call rax
0x00000000004374ae : mov rax, qword ptr [rip + 0x5cb3b3] ; call rax
0x00000000004373a5 : mov rax, qword ptr [rip + 0x5cb53c] ; call rax
0x000000000043729e : mov rax, qword ptr [rip + 0x5cb63b] ; call rax
0x0000000000437266 : mov rax, qword ptr [rip + 0x5cb67b] ; call rax
0x0000000000437156 : mov rax, qword ptr [rip + 0x5cb783] ; call rax
0x00000000004370f8 : mov rax, qword ptr [rip + 0x5cb7e9] ; call rax
0x0000000000437030 : mov rax, qword ptr [rip + 0x5cb8a9] ; call rax
0x0000000000436f9b : mov rax, qword ptr [rip + 0x5cb8be] ; call rax
0x0000000000436f92 : mov rax, qword ptr [rip + 0x5cb94f] ; call rax
0x0000000000436685 : mov rax, qword ptr [rip + 0x5cc254] ; call rax
0x000000000043663d : mov rax, qword ptr [rip + 0x5cc2a4] ; call rax
0x0000000000436588 : mov rax, qword ptr [rip + 0x5cc359] ; call rax
0x00000000004364a1 : mov rax, qword ptr [rip + 0x5cc3c8] ; call rax
0x0000000000436498 : mov rax, qword ptr [rip + 0x5cc3c9] ; call rax
0x000000000043639c : mov rax, qword ptr [rip + 0x5cc545] ; call rax
0x0000000000436294 : mov rax, qword ptr [rip + 0x5cc645] ; call rax
0x000000000043625c : mov rax, qword ptr [rip + 0x5cc685] ; call rax
0x00000000004361a2 : mov rax, qword ptr [rip + 0x5cc737] ; call rax
0x0000000000436162 : mov rax, qword ptr [rip + 0x5cc77f] ; call rax
0x00000000004360a9 : mov rax, qword ptr [rip + 0x5cc830] ; call rax
0x0000000000436066 : mov rax, qword ptr [rip + 0x5cc87b] ; call rax
0x00000000004359c9 : mov rax, qword ptr [rip + 0x5ccf10] ; call rax
0x0000000000435986 : mov rax, qword ptr [rip + 0x5ccf5b] ; call rax
0x0000000000435945 : mov rax, qword ptr [rip + 0x5ccf9c] ; call rax
0x00000000004357de : mov rax, qword ptr [rip + 0x5cd0fb] ; call rax
0x000000000043579b : mov rax, qword ptr [rip + 0x5cd146] ; call rax
0x000000000043575a : mov rax, qword ptr [rip + 0x5cd187] ; call rax
0x00000000004355ef : mov rax, qword ptr [rip + 0x5cd2f2] ; call rax
0x00000000004354e9 : mov rax, qword ptr [rip + 0x5cd3f0] ; call rax
0x00000000004354b4 : mov rax, qword ptr [rip + 0x5cd42d] ; call rax
0x00000000004353a4 : mov rax, qword ptr [rip + 0x5cd535] ; call rax
0x0000000000435346 : mov rax, qword ptr [rip + 0x5cd59b] ; call rax
0x000000000043527e : mov rax, qword ptr [rip + 0x5cd65b] ; call rax
0x00000000004351e9 : mov rax, qword ptr [rip + 0x5cd670] ; call rax
0x00000000004351e0 : mov rax, qword ptr [rip + 0x5cd701] ; call rax
0x000000000043466c : mov rax, qword ptr [rip + 0x5ce26d] ; call rax
0x0000000000434624 : mov rax, qword ptr [rip + 0x5ce2bd] ; call rax
0x000000000043456f : mov rax, qword ptr [rip + 0x5ce372] ; call rax
0x000000000043447f : mov rax, qword ptr [rip + 0x5ce3ea] ; call rax
0x0000000000434476 : mov rax, qword ptr [rip + 0x5ce3eb] ; call rax
0x000000000043440a : mov rax, qword ptr [rip + 0x5ce4d7] ; call rax
0x0000000000434324 : mov rax, qword ptr [rip + 0x5ce5b5] ; call rax
0x00000000004342ec : mov rax, qword ptr [rip + 0x5ce5f5] ; call rax
0x0000000000433b0e : mov rax, qword ptr [rip + 0x5ced5b] ; call rax
0x0000000000433b05 : mov rax, qword ptr [rip + 0x5ced5c] ; call rax
0x0000000000433ad9 : mov rax, qword ptr [rip + 0x5ced80] ; call rax
0x0000000000433ae2 : mov rax, qword ptr [rip + 0x5cedf7] ; call rax
0x0000000000433ad0 : mov rax, qword ptr [rip + 0x5cee11] ; call rax
0x00000000004335d0 : mov rax, qword ptr [rip + 0x5cf309] ; call rax
0x00000000004335ac : mov rax, qword ptr [rip + 0x5cf335] ; call rax
0x000000000043316c : mov rax, qword ptr [rip + 0x5cf76d] ; call rax
0x0000000000433148 : mov rax, qword ptr [rip + 0x5cf799] ; call rax
0x0000000000432bb4 : mov rax, qword ptr [rip + 0x5cfd2d] ; call rax
0x0000000000432a68 : mov rax, qword ptr [rip + 0x5cfe79] ; call rax
0x00000000004329ac : mov rax, qword ptr [rip + 0x5cff2d] ; call rax
0x0000000000432990 : mov rax, qword ptr [rip + 0x5cff51] ; call rax
0x0000000000432846 : mov rax, qword ptr [rip + 0x5d0023] ; call rax
0x000000000043283d : mov rax, qword ptr [rip + 0x5d0024] ; call rax
0x0000000000432811 : mov rax, qword ptr [rip + 0x5d0048] ; call rax
0x000000000043281a : mov rax, qword ptr [rip + 0x5d00bf] ; call rax
0x0000000000432808 : mov rax, qword ptr [rip + 0x5d00d9] ; call rax
0x00000000004326d8 : mov rax, qword ptr [rip + 0x5d0191] ; call rax
0x00000000004326cf : mov rax, qword ptr [rip + 0x5d0192] ; call rax
0x00000000004326a3 : mov rax, qword ptr [rip + 0x5d01b6] ; call rax
0x00000000004326ac : mov rax, qword ptr [rip + 0x5d022d] ; call rax
0x000000000043269a : mov rax, qword ptr [rip + 0x5d0247] ; call rax
0x000000000043245e : mov rax, qword ptr [rip + 0x5d0483] ; call rax
0x00000000004322e4 : mov rax, qword ptr [rip + 0x5d05fd] ; call rax
0x0000000000432228 : mov rax, qword ptr [rip + 0x5d06b1] ; call rax
0x000000000043220c : mov rax, qword ptr [rip + 0x5d06d5] ; call rax
0x0000000000432064 : mov rax, qword ptr [rip + 0x5d0805] ; call rax
0x000000000043205b : mov rax, qword ptr [rip + 0x5d0806] ; call rax
0x000000000043202f : mov rax, qword ptr [rip + 0x5d082a] ; call rax
0x0000000000432038 : mov rax, qword ptr [rip + 0x5d08a1] ; call rax
0x0000000000432026 : mov rax, qword ptr [rip + 0x5d08bb] ; call rax
0x0000000000431f86 : mov rax, qword ptr [rip + 0x5d08e3] ; call rax
0x0000000000431f7d : mov rax, qword ptr [rip + 0x5d08e4] ; call rax
0x0000000000431f51 : mov rax, qword ptr [rip + 0x5d0908] ; call rax
0x0000000000431f5a : mov rax, qword ptr [rip + 0x5d097f] ; call rax
0x0000000000431f48 : mov rax, qword ptr [rip + 0x5d0999] ; call rax
0x0000000000430ccb : mov rax, qword ptr [rip + 0x5d1c16] ; call rax
0x0000000000430b8e : mov rax, qword ptr [rip + 0x5d1d4b] ; call rax
0x0000000000430b72 : mov rax, qword ptr [rip + 0x5d1d6f] ; call rax
0x0000000000430702 : mov rax, qword ptr [rip + 0x5d21df] ; call rax
0x000000000043066b : mov rax, qword ptr [rip + 0x5d2276] ; call rax
0x00000000004303e7 : mov rax, qword ptr [rip + 0x5d24f2] ; call rax
0x00000000004303c6 : mov rax, qword ptr [rip + 0x5d251b] ; call rax
0x000000000042f957 : mov rax, qword ptr [rip + 0x5d2f8a] ; call rax
0x000000000042f89a : mov rax, qword ptr [rip + 0x5d303f] ; call rax
0x000000000042f87e : mov rax, qword ptr [rip + 0x5d3063] ; call rax
0x000000000042f6db : mov rax, qword ptr [rip + 0x5d3206] ; call rax
0x000000000042f5c4 : mov rax, qword ptr [rip + 0x5d3315] ; call rax
0x000000000042f5a8 : mov rax, qword ptr [rip + 0x5d3339] ; call rax
0x000000000042f29e : mov rax, qword ptr [rip + 0x5d3643] ; call rax
0x000000000042efd5 : mov rax, qword ptr [rip + 0x5d3904] ; call rax
0x000000000042efb4 : mov rax, qword ptr [rip + 0x5d392d] ; call rax
0x000000000042ee30 : mov rax, qword ptr [rip + 0x5d3aa9] ; call rax
0x000000000042ee0c : mov rax, qword ptr [rip + 0x5d3ad5] ; call rax
0x000000000042ed54 : mov rax, qword ptr [rip + 0x5d3b85] ; call rax
0x000000000042ed2e : mov rax, qword ptr [rip + 0x5d3bb3] ; call rax
0x000000000042eb1d : mov rax, qword ptr [rip + 0x5d3dbc] ; call rax
0x000000000042eadc : mov rax, qword ptr [rip + 0x5d3e05] ; call rax
0x000000000042ea9a : mov rax, qword ptr [rip + 0x5d3e47] ; call rax
0x000000000042ea2f : mov rax, qword ptr [rip + 0x5d3eaa] ; call rax
0x000000000042e9ea : mov rax, qword ptr [rip + 0x5d3ef7] ; call rax
0x000000000042e9a4 : mov rax, qword ptr [rip + 0x5d3f3d] ; call rax
0x000000000042e816 : mov rax, qword ptr [rip + 0x5d40c3] ; call rax
0x000000000042e7f2 : mov rax, qword ptr [rip + 0x5d40ef] ; call rax
0x000000000042e73a : mov rax, qword ptr [rip + 0x5d419f] ; call rax
0x000000000042e714 : mov rax, qword ptr [rip + 0x5d41cd] ; call rax
0x000000000042e503 : mov rax, qword ptr [rip + 0x5d43d6] ; call rax
0x000000000042e4c2 : mov rax, qword ptr [rip + 0x5d441f] ; call rax
0x000000000042e480 : mov rax, qword ptr [rip + 0x5d4461] ; call rax
0x000000000042e415 : mov rax, qword ptr [rip + 0x5d44c4] ; call rax
0x000000000042e3d0 : mov rax, qword ptr [rip + 0x5d4511] ; call rax
0x000000000042e38a : mov rax, qword ptr [rip + 0x5d4557] ; call rax
0x000000000042df85 : mov rax, qword ptr [rip + 0x5d495c] ; call rax
0x000000000042de7a : mov rax, qword ptr [rip + 0x5d4a5f] ; call rax
0x000000000042de5e : mov rax, qword ptr [rip + 0x5d4a83] ; call rax
0x000000000042dcb8 : mov rax, qword ptr [rip + 0x5d4c21] ; call rax
0x000000000042dc9c : mov rax, qword ptr [rip + 0x5d4c45] ; call rax
0x000000000042d69a : mov rax, qword ptr [rip + 0x5d51cf] ; call rax
0x000000000042d681 : mov rax, qword ptr [rip + 0x5d51e0] ; call rax
0x000000000042d6f7 : mov rax, qword ptr [rip + 0x5d51e2] ; call rax
0x000000000042d5fd : mov rax, qword ptr [rip + 0x5d525c] ; call rax
0x000000000042d640 : mov rax, qword ptr [rip + 0x5d52a1] ; call rax
0x000000000042d606 : mov rax, qword ptr [rip + 0x5d52d3] ; call rax
0x000000000042d5f4 : mov rax, qword ptr [rip + 0x5d52ed] ; call rax
0x000000000042d06a : mov rax, qword ptr [rip + 0x5d57ff] ; call rax
0x000000000042d051 : mov rax, qword ptr [rip + 0x5d5810] ; call rax
0x000000000042d0c7 : mov rax, qword ptr [rip + 0x5d5812] ; call rax
0x000000000042cfcd : mov rax, qword ptr [rip + 0x5d588c] ; call rax
0x000000000042d010 : mov rax, qword ptr [rip + 0x5d58d1] ; call rax
0x000000000042cfd6 : mov rax, qword ptr [rip + 0x5d5903] ; call rax
0x000000000042cfc4 : mov rax, qword ptr [rip + 0x5d591d] ; call rax
0x000000000042cb47 : mov rax, qword ptr [rip + 0x5d5d9a] ; call rax
0x000000000042ca8a : mov rax, qword ptr [rip + 0x5d5e4f] ; call rax
0x000000000042ca6e : mov rax, qword ptr [rip + 0x5d5e73] ; call rax
0x000000000042c210 : mov rax, qword ptr [rip + 0x5d66d1] ; call rax
0x000000000042beef : mov rax, qword ptr [rip + 0x5d69f2] ; call rax
0x000000000042bdd8 : mov rax, qword ptr [rip + 0x5d6b01] ; call rax
0x000000000042bdbc : mov rax, qword ptr [rip + 0x5d6b25] ; call rax
0x000000000042b86b : mov rax, qword ptr [rip + 0x5d7076] ; call rax
0x000000000042b7b2 : mov rax, qword ptr [rip + 0x5d7127] ; call rax
0x000000000042b796 : mov rax, qword ptr [rip + 0x5d714b] ; call rax
0x000000000042b507 : mov rax, qword ptr [rip + 0x5d73d2] ; call rax
0x000000000042b4e6 : mov rax, qword ptr [rip + 0x5d73fb] ; call rax
0x000000000042aed2 : mov rax, qword ptr [rip + 0x5d7a0f] ; call rax
0x000000000042ae79 : mov rax, qword ptr [rip + 0x5d7a68] ; call rax
0x000000000042ad07 : mov rax, qword ptr [rip + 0x5d7bd2] ; call rax
0x000000000042acda : mov rax, qword ptr [rip + 0x5d7c07] ; call rax
0x000000000042a4db : mov rax, qword ptr [rip + 0x5d8406] ; call rax
0x000000000042a3d9 : mov rax, qword ptr [rip + 0x5d8508] ; call rax
0x000000000042a1fa : mov rax, qword ptr [rip + 0x5d86df] ; call rax
0x000000000042a18a : mov rax, qword ptr [rip + 0x5d8757] ; call rax
0x000000000042a06d : mov rax, qword ptr [rip + 0x5d886c] ; call rax
0x0000000000429f8c : mov rax, qword ptr [rip + 0x5d8955] ; call rax
0x0000000000429d61 : mov rax, qword ptr [rip + 0x5d8b78] ; call rax
0x0000000000429cc8 : mov rax, qword ptr [rip + 0x5d8c19] ; call rax
0x00000000004299bf : mov rax, qword ptr [rip + 0x5d8f1a] ; call rax
0x000000000042997e : mov rax, qword ptr [rip + 0x5d8f63] ; call rax
0x000000000042983f : mov rax, qword ptr [rip + 0x5d901a] ; call rax
0x00000000004298b7 : mov rax, qword ptr [rip + 0x5d9022] ; call rax
0x0000000000429836 : mov rax, qword ptr [rip + 0x5d90ab] ; call rax
0x0000000000429003 : mov rax, qword ptr [rip + 0x5d98d6] ; call rax
0x0000000000428fbb : mov rax, qword ptr [rip + 0x5d9926] ; call rax
0x0000000000428ef6 : mov rax, qword ptr [rip + 0x5d99eb] ; call rax
0x0000000000428e06 : mov rax, qword ptr [rip + 0x5d9a63] ; call rax
0x0000000000428dfd : mov rax, qword ptr [rip + 0x5d9a64] ; call rax
0x0000000000428ca5 : mov rax, qword ptr [rip + 0x5d9c3c] ; call rax
0x0000000000428b9c : mov rax, qword ptr [rip + 0x5d9d3d] ; call rax
0x0000000000428b64 : mov rax, qword ptr [rip + 0x5d9d7d] ; call rax
0x000000000042890a : mov rax, qword ptr [rip + 0x5d9fd7] ; call rax
0x000000000042884b : mov rax, qword ptr [rip + 0x5da08e] ; call rax
0x000000000042882e : mov rax, qword ptr [rip + 0x5da0b3] ; call rax
0x00000000004286fc : mov rax, qword ptr [rip + 0x5da1dd] ; call rax
0x000000000042869e : mov rax, qword ptr [rip + 0x5da243] ; call rax
0x00000000004285d6 : mov rax, qword ptr [rip + 0x5da303] ; call rax
0x0000000000428541 : mov rax, qword ptr [rip + 0x5da318] ; call rax
0x0000000000428538 : mov rax, qword ptr [rip + 0x5da3a9] ; call rax
0x00000000004276d3 : mov rax, qword ptr [rip + 0x5db206] ; call rax
0x000000000042768b : mov rax, qword ptr [rip + 0x5db256] ; call rax
0x00000000004275c6 : mov rax, qword ptr [rip + 0x5db31b] ; call rax
0x00000000004274cc : mov rax, qword ptr [rip + 0x5db39d] ; call rax
0x00000000004274c3 : mov rax, qword ptr [rip + 0x5db39e] ; call rax
0x0000000000427457 : mov rax, qword ptr [rip + 0x5db48a] ; call rax
0x0000000000427372 : mov rax, qword ptr [rip + 0x5db567] ; call rax
0x000000000042733a : mov rax, qword ptr [rip + 0x5db5a7] ; call rax
0x000000000042727f : mov rax, qword ptr [rip + 0x5db65a] ; call rax
0x000000000042723c : mov rax, qword ptr [rip + 0x5db6a5] ; call rax
0x0000000000427183 : mov rax, qword ptr [rip + 0x5db756] ; call rax
0x0000000000427138 : mov rax, qword ptr [rip + 0x5db7a9] ; call rax
0x0000000000427072 : mov rax, qword ptr [rip + 0x5db867] ; call rax
0x0000000000426fdd : mov rax, qword ptr [rip + 0x5db87c] ; call rax
0x0000000000426fd4 : mov rax, qword ptr [rip + 0x5db90d] ; call rax
0x0000000000426ee8 : mov rax, qword ptr [rip + 0x5db9f1] ; call rax
0x0000000000426e8a : mov rax, qword ptr [rip + 0x5dba57] ; call rax
0x0000000000426dc2 : mov rax, qword ptr [rip + 0x5dbb17] ; call rax
0x0000000000426d2d : mov rax, qword ptr [rip + 0x5dbb2c] ; call rax
0x0000000000426d24 : mov rax, qword ptr [rip + 0x5dbbbd] ; call rax
0x0000000000426762 : mov rax, qword ptr [rip + 0x5dc177] ; call rax
0x000000000042671f : mov rax, qword ptr [rip + 0x5dc1c2] ; call rax
0x00000000004266dc : mov rax, qword ptr [rip + 0x5dc205] ; call rax
0x00000000004264f4 : mov rax, qword ptr [rip + 0x5dc3e5] ; call rax
0x00000000004264ac : mov rax, qword ptr [rip + 0x5dc435] ; call rax
0x00000000004263f0 : mov rax, qword ptr [rip + 0x5dc4f1] ; call rax
0x000000000042624d : mov rax, qword ptr [rip + 0x5dc61c] ; call rax
0x0000000000426244 : mov rax, qword ptr [rip + 0x5dc61d] ; call rax
0x0000000000425d71 : mov rax, qword ptr [rip + 0x5dcb68] ; call rax
0x0000000000425d29 : mov rax, qword ptr [rip + 0x5dcbb8] ; call rax
0x0000000000425c64 : mov rax, qword ptr [rip + 0x5dcc7d] ; call rax
0x0000000000425b74 : mov rax, qword ptr [rip + 0x5dccf5] ; call rax
0x0000000000425b6b : mov rax, qword ptr [rip + 0x5dccf6] ; call rax
0x00000000004259b5 : mov rax, qword ptr [rip + 0x5dcf2c] ; call rax
0x00000000004258c2 : mov rax, qword ptr [rip + 0x5dd017] ; call rax
0x000000000042588a : mov rax, qword ptr [rip + 0x5dd057] ; call rax
0x00000000004257d0 : mov rax, qword ptr [rip + 0x5dd109] ; call rax
0x0000000000425790 : mov rax, qword ptr [rip + 0x5dd151] ; call rax
0x00000000004256d7 : mov rax, qword ptr [rip + 0x5dd202] ; call rax
0x0000000000425694 : mov rax, qword ptr [rip + 0x5dd24d] ; call rax
0x00000000004255db : mov rax, qword ptr [rip + 0x5dd2fe] ; call rax
0x0000000000425598 : mov rax, qword ptr [rip + 0x5dd349] ; call rax
0x000000000042504d : mov rax, qword ptr [rip + 0x5dd88c] ; call rax
0x000000000042500a : mov rax, qword ptr [rip + 0x5dd8d7] ; call rax
0x0000000000424fc7 : mov rax, qword ptr [rip + 0x5dd91a] ; call rax
0x0000000000424ee0 : mov rax, qword ptr [rip + 0x5dd9f9] ; call rax
0x0000000000424e9d : mov rax, qword ptr [rip + 0x5dda44] ; call rax
0x0000000000424e5c : mov rax, qword ptr [rip + 0x5dda85] ; call rax
0x0000000000424d75 : mov rax, qword ptr [rip + 0x5ddb64] ; call rax
0x0000000000424d32 : mov rax, qword ptr [rip + 0x5ddbaf] ; call rax
0x0000000000424cf1 : mov rax, qword ptr [rip + 0x5ddbf0] ; call rax
0x0000000000424bf8 : mov rax, qword ptr [rip + 0x5ddce9] ; call rax
0x0000000000424ae9 : mov rax, qword ptr [rip + 0x5dddf0] ; call rax
0x0000000000424ab4 : mov rax, qword ptr [rip + 0x5dde2d] ; call rax
0x00000000004244ee : mov rax, qword ptr [rip + 0x5de37b] ; call rax
0x00000000004244e5 : mov rax, qword ptr [rip + 0x5de37c] ; call rax
0x00000000004244b9 : mov rax, qword ptr [rip + 0x5de3a0] ; call rax
0x00000000004244c2 : mov rax, qword ptr [rip + 0x5de417] ; call rax
0x00000000004244b0 : mov rax, qword ptr [rip + 0x5de431] ; call rax
0x0000000000423fb0 : mov rax, qword ptr [rip + 0x5de929] ; call rax
0x0000000000423f8c : mov rax, qword ptr [rip + 0x5de955] ; call rax
0x0000000000423b4c : mov rax, qword ptr [rip + 0x5ded8d] ; call rax
0x0000000000423b28 : mov rax, qword ptr [rip + 0x5dedb9] ; call rax
0x0000000000423594 : mov rax, qword ptr [rip + 0x5df34d] ; call rax
0x0000000000423448 : mov rax, qword ptr [rip + 0x5df499] ; call rax
0x000000000042338c : mov rax, qword ptr [rip + 0x5df54d] ; call rax
0x0000000000423370 : mov rax, qword ptr [rip + 0x5df571] ; call rax
0x0000000000423226 : mov rax, qword ptr [rip + 0x5df643] ; call rax
0x000000000042321d : mov rax, qword ptr [rip + 0x5df644] ; call rax
0x00000000004231f1 : mov rax, qword ptr [rip + 0x5df668] ; call rax
0x00000000004231fa : mov rax, qword ptr [rip + 0x5df6df] ; call rax
0x00000000004231e8 : mov rax, qword ptr [rip + 0x5df6f9] ; call rax
0x00000000004230b8 : mov rax, qword ptr [rip + 0x5df7b1] ; call rax
0x00000000004230af : mov rax, qword ptr [rip + 0x5df7b2] ; call rax
0x0000000000423083 : mov rax, qword ptr [rip + 0x5df7d6] ; call rax
0x000000000042308c : mov rax, qword ptr [rip + 0x5df84d] ; call rax
0x000000000042307a : mov rax, qword ptr [rip + 0x5df867] ; call rax
0x0000000000422e3e : mov rax, qword ptr [rip + 0x5dfaa3] ; call rax
0x0000000000422cc4 : mov rax, qword ptr [rip + 0x5dfc1d] ; call rax
0x0000000000422c08 : mov rax, qword ptr [rip + 0x5dfcd1] ; call rax
0x0000000000422bec : mov rax, qword ptr [rip + 0x5dfcf5] ; call rax
0x0000000000422a44 : mov rax, qword ptr [rip + 0x5dfe25] ; call rax
0x0000000000422a3b : mov rax, qword ptr [rip + 0x5dfe26] ; call rax
0x0000000000422a0f : mov rax, qword ptr [rip + 0x5dfe4a] ; call rax
0x0000000000422a18 : mov rax, qword ptr [rip + 0x5dfec1] ; call rax
0x0000000000422a06 : mov rax, qword ptr [rip + 0x5dfedb] ; call rax
0x0000000000422966 : mov rax, qword ptr [rip + 0x5dff03] ; call rax
0x000000000042295d : mov rax, qword ptr [rip + 0x5dff04] ; call rax
0x0000000000422931 : mov rax, qword ptr [rip + 0x5dff28] ; call rax
0x000000000042293a : mov rax, qword ptr [rip + 0x5dff9f] ; call rax
0x0000000000422928 : mov rax, qword ptr [rip + 0x5dffb9] ; call rax
0x000000000042225d : mov rax, qword ptr [rip + 0x5e0684] ; call rax
0x0000000000422120 : mov rax, qword ptr [rip + 0x5e07b9] ; call rax
0x0000000000422104 : mov rax, qword ptr [rip + 0x5e07dd] ; call rax
0x0000000000421c86 : mov rax, qword ptr [rip + 0x5e0c5b] ; call rax
0x0000000000421be7 : mov rax, qword ptr [rip + 0x5e0cfa] ; call rax
0x0000000000421955 : mov rax, qword ptr [rip + 0x5e0f84] ; call rax
0x0000000000421934 : mov rax, qword ptr [rip + 0x5e0fad] ; call rax
0x0000000000420ec5 : mov rax, qword ptr [rip + 0x5e1a1c] ; call rax
0x0000000000420e08 : mov rax, qword ptr [rip + 0x5e1ad1] ; call rax
0x0000000000420dec : mov rax, qword ptr [rip + 0x5e1af5] ; call rax
0x0000000000420c45 : mov rax, qword ptr [rip + 0x5e1c9c] ; call rax
0x0000000000420b2e : mov rax, qword ptr [rip + 0x5e1dab] ; call rax
0x0000000000420b12 : mov rax, qword ptr [rip + 0x5e1dcf] ; call rax
0x0000000000420800 : mov rax, qword ptr [rip + 0x5e20e1] ; call rax
0x0000000000420537 : mov rax, qword ptr [rip + 0x5e23a2] ; call rax
0x0000000000420516 : mov rax, qword ptr [rip + 0x5e23cb] ; call rax
0x0000000000420392 : mov rax, qword ptr [rip + 0x5e2547] ; call rax
0x000000000042036e : mov rax, qword ptr [rip + 0x5e2573] ; call rax
0x00000000004202b6 : mov rax, qword ptr [rip + 0x5e2623] ; call rax
0x0000000000420290 : mov rax, qword ptr [rip + 0x5e2651] ; call rax
0x00000000004201d8 : mov rax, qword ptr [rip + 0x5e2701] ; call rax
0x00000000004201b2 : mov rax, qword ptr [rip + 0x5e272f] ; call rax
0x000000000041fee8 : mov rax, qword ptr [rip + 0x5e29f1] ; call rax
0x000000000041fea8 : mov rax, qword ptr [rip + 0x5e2a39] ; call rax
0x000000000041fe66 : mov rax, qword ptr [rip + 0x5e2a7b] ; call rax
0x000000000041fdef : mov rax, qword ptr [rip + 0x5e2aea] ; call rax
0x000000000041fdaf : mov rax, qword ptr [rip + 0x5e2b32] ; call rax
0x000000000041fd6d : mov rax, qword ptr [rip + 0x5e2b74] ; call rax
0x000000000041fcf6 : mov rax, qword ptr [rip + 0x5e2be3] ; call rax
0x000000000041fcb9 : mov rax, qword ptr [rip + 0x5e2c28] ; call rax
0x000000000041fc7b : mov rax, qword ptr [rip + 0x5e2c66] ; call rax
0x000000000041fae4 : mov rax, qword ptr [rip + 0x5e2df5] ; call rax
0x000000000041fac0 : mov rax, qword ptr [rip + 0x5e2e21] ; call rax
0x000000000041fa08 : mov rax, qword ptr [rip + 0x5e2ed1] ; call rax
0x000000000041f9e2 : mov rax, qword ptr [rip + 0x5e2eff] ; call rax
0x000000000041f92a : mov rax, qword ptr [rip + 0x5e2faf] ; call rax
0x000000000041f904 : mov rax, qword ptr [rip + 0x5e2fdd] ; call rax
0x000000000041f63a : mov rax, qword ptr [rip + 0x5e329f] ; call rax
0x000000000041f5fa : mov rax, qword ptr [rip + 0x5e32e7] ; call rax
0x000000000041f5b8 : mov rax, qword ptr [rip + 0x5e3329] ; call rax
0x000000000041f541 : mov rax, qword ptr [rip + 0x5e3398] ; call rax
0x000000000041f501 : mov rax, qword ptr [rip + 0x5e33e0] ; call rax
0x000000000041f4bf : mov rax, qword ptr [rip + 0x5e3422] ; call rax
0x000000000041f448 : mov rax, qword ptr [rip + 0x5e3491] ; call rax
0x000000000041f40b : mov rax, qword ptr [rip + 0x5e34d6] ; call rax
0x000000000041f3cd : mov rax, qword ptr [rip + 0x5e3514] ; call rax
0x000000000041efbf : mov rax, qword ptr [rip + 0x5e3922] ; call rax
0x000000000041eeb4 : mov rax, qword ptr [rip + 0x5e3a25] ; call rax
0x000000000041ee98 : mov rax, qword ptr [rip + 0x5e3a49] ; call rax
0x000000000041ecf2 : mov rax, qword ptr [rip + 0x5e3be7] ; call rax
0x000000000041ecd6 : mov rax, qword ptr [rip + 0x5e3c0b] ; call rax
0x000000000041e6cc : mov rax, qword ptr [rip + 0x5e419d] ; call rax
0x000000000041e6b3 : mov rax, qword ptr [rip + 0x5e41ae] ; call rax
0x000000000041e729 : mov rax, qword ptr [rip + 0x5e41b0] ; call rax
0x000000000041e62f : mov rax, qword ptr [rip + 0x5e422a] ; call rax
0x000000000041e672 : mov rax, qword ptr [rip + 0x5e426f] ; call rax
0x000000000041e638 : mov rax, qword ptr [rip + 0x5e42a1] ; call rax
0x000000000041e626 : mov rax, qword ptr [rip + 0x5e42bb] ; call rax
0x000000000041e09c : mov rax, qword ptr [rip + 0x5e47cd] ; call rax
0x000000000041e083 : mov rax, qword ptr [rip + 0x5e47de] ; call rax
0x000000000041e0f9 : mov rax, qword ptr [rip + 0x5e47e0] ; call rax
0x000000000041dfff : mov rax, qword ptr [rip + 0x5e485a] ; call rax
0x000000000041e042 : mov rax, qword ptr [rip + 0x5e489f] ; call rax
0x000000000041e008 : mov rax, qword ptr [rip + 0x5e48d1] ; call rax
0x000000000041dff6 : mov rax, qword ptr [rip + 0x5e48eb] ; call rax
0x000000000041db79 : mov rax, qword ptr [rip + 0x5e4d68] ; call rax
0x000000000041dabc : mov rax, qword ptr [rip + 0x5e4e1d] ; call rax
0x000000000041daa0 : mov rax, qword ptr [rip + 0x5e4e41] ; call rax
0x000000000041d232 : mov rax, qword ptr [rip + 0x5e56af] ; call rax
0x000000000041cf05 : mov rax, qword ptr [rip + 0x5e59dc] ; call rax
0x000000000041cdee : mov rax, qword ptr [rip + 0x5e5aeb] ; call rax
0x000000000041cdd2 : mov rax, qword ptr [rip + 0x5e5b0f] ; call rax
0x000000000041c879 : mov rax, qword ptr [rip + 0x5e6068] ; call rax
0x000000000041c7c0 : mov rax, qword ptr [rip + 0x5e6119] ; call rax
0x000000000041c7a4 : mov rax, qword ptr [rip + 0x5e613d] ; call rax
0x000000000041c515 : mov rax, qword ptr [rip + 0x5e63c4] ; call rax
0x000000000041c4f4 : mov rax, qword ptr [rip + 0x5e63ed] ; call rax
0x000000000041beca : mov rax, qword ptr [rip + 0x5e6a17] ; call rax
0x000000000041be71 : mov rax, qword ptr [rip + 0x5e6a70] ; call rax
0x000000000041bcff : mov rax, qword ptr [rip + 0x5e6bda] ; call rax
0x000000000041bcd2 : mov rax, qword ptr [rip + 0x5e6c0f] ; call rax
0x000000000041b2e5 : mov rax, qword ptr [rip + 0x5e75fc] ; call rax
0x000000000041b1e3 : mov rax, qword ptr [rip + 0x5e76fe] ; call rax
0x000000000041b004 : mov rax, qword ptr [rip + 0x5e78d5] ; call rax
0x000000000041af94 : mov rax, qword ptr [rip + 0x5e794d] ; call rax
0x000000000041ae77 : mov rax, qword ptr [rip + 0x5e7a62] ; call rax
0x000000000041ad96 : mov rax, qword ptr [rip + 0x5e7b4b] ; call rax
0x000000000041ab8b : mov rax, qword ptr [rip + 0x5e7d4e] ; call rax
0x000000000041aaf2 : mov rax, qword ptr [rip + 0x5e7def] ; call rax
0x000000000041a81f : mov rax, qword ptr [rip + 0x5e80ba] ; call rax
0x000000000041a7dc : mov rax, qword ptr [rip + 0x5e8105] ; call rax
0x000000000041a724 : mov rax, qword ptr [rip + 0x5e81b5] ; call rax
0x000000000041a6de : mov rax, qword ptr [rip + 0x5e8203] ; call rax
0x000000000041a625 : mov rax, qword ptr [rip + 0x5e82b4] ; call rax
0x000000000041a5da : mov rax, qword ptr [rip + 0x5e8307] ; call rax
0x000000000041a4cc : mov rax, qword ptr [rip + 0x5e840d] ; call rax
0x000000000041a46e : mov rax, qword ptr [rip + 0x5e8473] ; call rax
0x000000000041a3a6 : mov rax, qword ptr [rip + 0x5e8533] ; call rax
0x000000000041a311 : mov rax, qword ptr [rip + 0x5e8548] ; call rax
0x000000000041a308 : mov rax, qword ptr [rip + 0x5e85d9] ; call rax
0x00000000004197b1 : mov rax, qword ptr [rip + 0x5e9128] ; call rax
0x000000000041976e : mov rax, qword ptr [rip + 0x5e9173] ; call rax
0x000000000041972b : mov rax, qword ptr [rip + 0x5e91b6] ; call rax
0x0000000000419532 : mov rax, qword ptr [rip + 0x5e93a7] ; call rax
0x00000000004194ef : mov rax, qword ptr [rip + 0x5e93f2] ; call rax
0x00000000004194ae : mov rax, qword ptr [rip + 0x5e9433] ; call rax
0x00000000004192b5 : mov rax, qword ptr [rip + 0x5e9624] ; call rax
0x000000000041926d : mov rax, qword ptr [rip + 0x5e9674] ; call rax
0x00000000004191b8 : mov rax, qword ptr [rip + 0x5e9729] ; call rax
0x0000000000418c12 : mov rax, qword ptr [rip + 0x5e9cc7] ; call rax
0x0000000000418bca : mov rax, qword ptr [rip + 0x5e9d17] ; call rax
0x0000000000418b15 : mov rax, qword ptr [rip + 0x5e9dcc] ; call rax
0x0000000000418a25 : mov rax, qword ptr [rip + 0x5e9e44] ; call rax
0x0000000000418a1c : mov rax, qword ptr [rip + 0x5e9e45] ; call rax
0x0000000000418913 : mov rax, qword ptr [rip + 0x5e9fce] ; call rax
0x000000000041880c : mov rax, qword ptr [rip + 0x5ea0cd] ; call rax
0x00000000004187d4 : mov rax, qword ptr [rip + 0x5ea10d] ; call rax
0x00000000004186c4 : mov rax, qword ptr [rip + 0x5ea215] ; call rax
0x0000000000418666 : mov rax, qword ptr [rip + 0x5ea27b] ; call rax
0x000000000041859e : mov rax, qword ptr [rip + 0x5ea33b] ; call rax
0x0000000000418509 : mov rax, qword ptr [rip + 0x5ea350] ; call rax
0x0000000000418500 : mov rax, qword ptr [rip + 0x5ea3e1] ; call rax
0x0000000000417bf3 : mov rax, qword ptr [rip + 0x5eace6] ; call rax
0x0000000000417bab : mov rax, qword ptr [rip + 0x5ead36] ; call rax
0x0000000000417af6 : mov rax, qword ptr [rip + 0x5eadeb] ; call rax
0x0000000000417a0f : mov rax, qword ptr [rip + 0x5eae5a] ; call rax
0x0000000000417a06 : mov rax, qword ptr [rip + 0x5eae5b] ; call rax
0x000000000041790a : mov rax, qword ptr [rip + 0x5eafd7] ; call rax
0x0000000000417802 : mov rax, qword ptr [rip + 0x5eb0d7] ; call rax
0x00000000004177ca : mov rax, qword ptr [rip + 0x5eb117] ; call rax
0x0000000000417710 : mov rax, qword ptr [rip + 0x5eb1c9] ; call rax
0x00000000004176d0 : mov rax, qword ptr [rip + 0x5eb211] ; call rax
0x0000000000417617 : mov rax, qword ptr [rip + 0x5eb2c2] ; call rax
0x00000000004175d4 : mov rax, qword ptr [rip + 0x5eb30d] ; call rax
0x0000000000417048 : mov rax, qword ptr [rip + 0x5eb891] ; call rax
0x0000000000417005 : mov rax, qword ptr [rip + 0x5eb8dc] ; call rax
0x0000000000416fc4 : mov rax, qword ptr [rip + 0x5eb91d] ; call rax
0x0000000000416d4c : mov rax, qword ptr [rip + 0x5ebb8d] ; call rax
0x0000000000416d09 : mov rax, qword ptr [rip + 0x5ebbd8] ; call rax
0x0000000000416cc8 : mov rax, qword ptr [rip + 0x5ebc19] ; call rax
0x0000000000416b5d : mov rax, qword ptr [rip + 0x5ebd84] ; call rax
0x0000000000416a57 : mov rax, qword ptr [rip + 0x5ebe82] ; call rax
0x0000000000416a22 : mov rax, qword ptr [rip + 0x5ebebf] ; call rax
0x0000000000416912 : mov rax, qword ptr [rip + 0x5ebfc7] ; call rax
0x00000000004168b4 : mov rax, qword ptr [rip + 0x5ec02d] ; call rax
0x00000000004167ec : mov rax, qword ptr [rip + 0x5ec0ed] ; call rax
0x0000000000416757 : mov rax, qword ptr [rip + 0x5ec102] ; call rax
0x000000000041674e : mov rax, qword ptr [rip + 0x5ec193] ; call rax
0x0000000000415bda : mov rax, qword ptr [rip + 0x5eccff] ; call rax
0x0000000000415b92 : mov rax, qword ptr [rip + 0x5ecd4f] ; call rax
0x0000000000415add : mov rax, qword ptr [rip + 0x5ece04] ; call rax
0x00000000004159ed : mov rax, qword ptr [rip + 0x5ece7c] ; call rax
0x00000000004159e4 : mov rax, qword ptr [rip + 0x5ece7d] ; call rax
0x0000000000415978 : mov rax, qword ptr [rip + 0x5ecf69] ; call rax
0x0000000000415892 : mov rax, qword ptr [rip + 0x5ed047] ; call rax
0x000000000041585a : mov rax, qword ptr [rip + 0x5ed087] ; call rax
0x000000000041507c : mov rax, qword ptr [rip + 0x5ed7ed] ; call rax
0x0000000000415073 : mov rax, qword ptr [rip + 0x5ed7ee] ; call rax
0x0000000000415047 : mov rax, qword ptr [rip + 0x5ed812] ; call rax
0x0000000000415050 : mov rax, qword ptr [rip + 0x5ed889] ; call rax
0x000000000041503e : mov rax, qword ptr [rip + 0x5ed8a3] ; call rax
0x0000000000414b3e : mov rax, qword ptr [rip + 0x5edd9b] ; call rax
0x0000000000414b1a : mov rax, qword ptr [rip + 0x5eddc7] ; call rax
0x00000000004146da : mov rax, qword ptr [rip + 0x5ee1ff] ; call rax
0x00000000004146b6 : mov rax, qword ptr [rip + 0x5ee22b] ; call rax
0x0000000000414122 : mov rax, qword ptr [rip + 0x5ee7bf] ; call rax
0x0000000000413fd6 : mov rax, qword ptr [rip + 0x5ee90b] ; call rax
0x0000000000413f1a : mov rax, qword ptr [rip + 0x5ee9bf] ; call rax
0x0000000000413efe : mov rax, qword ptr [rip + 0x5ee9e3] ; call rax
0x0000000000413db4 : mov rax, qword ptr [rip + 0x5eeab5] ; call rax
0x0000000000413dab : mov rax, qword ptr [rip + 0x5eeab6] ; call rax
0x0000000000413d7f : mov rax, qword ptr [rip + 0x5eeada] ; call rax
0x0000000000413d88 : mov rax, qword ptr [rip + 0x5eeb51] ; call rax
0x0000000000413d76 : mov rax, qword ptr [rip + 0x5eeb6b] ; call rax
0x0000000000413c46 : mov rax, qword ptr [rip + 0x5eec23] ; call rax
0x0000000000413c3d : mov rax, qword ptr [rip + 0x5eec24] ; call rax
0x0000000000413c11 : mov rax, qword ptr [rip + 0x5eec48] ; call rax
0x0000000000413c1a : mov rax, qword ptr [rip + 0x5eecbf] ; call rax
0x0000000000413c08 : mov rax, qword ptr [rip + 0x5eecd9] ; call rax
0x00000000004139cc : mov rax, qword ptr [rip + 0x5eef15] ; call rax
0x0000000000413852 : mov rax, qword ptr [rip + 0x5ef08f] ; call rax
0x0000000000413796 : mov rax, qword ptr [rip + 0x5ef143] ; call rax
0x000000000041377a : mov rax, qword ptr [rip + 0x5ef167] ; call rax
0x00000000004135d2 : mov rax, qword ptr [rip + 0x5ef297] ; call rax
0x00000000004135c9 : mov rax, qword ptr [rip + 0x5ef298] ; call rax
0x000000000041359d : mov rax, qword ptr [rip + 0x5ef2bc] ; call rax
0x00000000004135a6 : mov rax, qword ptr [rip + 0x5ef333] ; call rax
0x0000000000413594 : mov rax, qword ptr [rip + 0x5ef34d] ; call rax
0x00000000004134f4 : mov rax, qword ptr [rip + 0x5ef375] ; call rax
0x00000000004134eb : mov rax, qword ptr [rip + 0x5ef376] ; call rax
0x00000000004134bf : mov rax, qword ptr [rip + 0x5ef39a] ; call rax
0x00000000004134c8 : mov rax, qword ptr [rip + 0x5ef411] ; call rax
0x00000000004134b6 : mov rax, qword ptr [rip + 0x5ef42b] ; call rax
0x00000000004121e5 : mov rax, qword ptr [rip + 0x5f06fc] ; call rax
0x00000000004120a8 : mov rax, qword ptr [rip + 0x5f0831] ; call rax
0x000000000041208c : mov rax, qword ptr [rip + 0x5f0855] ; call rax
0x0000000000411c1c : mov rax, qword ptr [rip + 0x5f0cc5] ; call rax
0x0000000000411b85 : mov rax, qword ptr [rip + 0x5f0d5c] ; call rax
0x0000000000411901 : mov rax, qword ptr [rip + 0x5f0fd8] ; call rax
0x00000000004118e0 : mov rax, qword ptr [rip + 0x5f1001] ; call rax
0x0000000000410e71 : mov rax, qword ptr [rip + 0x5f1a70] ; call rax
0x0000000000410db4 : mov rax, qword ptr [rip + 0x5f1b25] ; call rax
0x0000000000410d98 : mov rax, qword ptr [rip + 0x5f1b49] ; call rax
0x0000000000410bf5 : mov rax, qword ptr [rip + 0x5f1cec] ; call rax
0x0000000000410ade : mov rax, qword ptr [rip + 0x5f1dfb] ; call rax
0x0000000000410ac2 : mov rax, qword ptr [rip + 0x5f1e1f] ; call rax
0x00000000004107b8 : mov rax, qword ptr [rip + 0x5f2129] ; call rax
0x00000000004104ef : mov rax, qword ptr [rip + 0x5f23ea] ; call rax
0x00000000004104ce : mov rax, qword ptr [rip + 0x5f2413] ; call rax
0x000000000041034a : mov rax, qword ptr [rip + 0x5f258f] ; call rax
0x0000000000410326 : mov rax, qword ptr [rip + 0x5f25bb] ; call rax
0x000000000041026e : mov rax, qword ptr [rip + 0x5f266b] ; call rax
0x0000000000410248 : mov rax, qword ptr [rip + 0x5f2699] ; call rax
0x0000000000410037 : mov rax, qword ptr [rip + 0x5f28a2] ; call rax
0x000000000040fff6 : mov rax, qword ptr [rip + 0x5f28eb] ; call rax
0x000000000040ffb4 : mov rax, qword ptr [rip + 0x5f292d] ; call rax
0x000000000040ff49 : mov rax, qword ptr [rip + 0x5f2990] ; call rax
0x000000000040ff04 : mov rax, qword ptr [rip + 0x5f29dd] ; call rax
0x000000000040febe : mov rax, qword ptr [rip + 0x5f2a23] ; call rax
0x000000000040fd30 : mov rax, qword ptr [rip + 0x5f2ba9] ; call rax
0x000000000040fd0c : mov rax, qword ptr [rip + 0x5f2bd5] ; call rax
0x000000000040fc54 : mov rax, qword ptr [rip + 0x5f2c85] ; call rax
0x000000000040fc2e : mov rax, qword ptr [rip + 0x5f2cb3] ; call rax
0x000000000040fa1d : mov rax, qword ptr [rip + 0x5f2ebc] ; call rax
0x000000000040f9dc : mov rax, qword ptr [rip + 0x5f2f05] ; call rax
0x000000000040f99a : mov rax, qword ptr [rip + 0x5f2f47] ; call rax
0x000000000040f92f : mov rax, qword ptr [rip + 0x5f2faa] ; call rax
0x000000000040f8ea : mov rax, qword ptr [rip + 0x5f2ff7] ; call rax
0x000000000040f8a4 : mov rax, qword ptr [rip + 0x5f303d] ; call rax
0x000000000040f49f : mov rax, qword ptr [rip + 0x5f3442] ; call rax
0x000000000040f394 : mov rax, qword ptr [rip + 0x5f3545] ; call rax
0x000000000040f378 : mov rax, qword ptr [rip + 0x5f3569] ; call rax
0x000000000040f1d2 : mov rax, qword ptr [rip + 0x5f3707] ; call rax
0x000000000040f1b6 : mov rax, qword ptr [rip + 0x5f372b] ; call rax
0x000000000040ebb4 : mov rax, qword ptr [rip + 0x5f3cb5] ; call rax
0x000000000040eb9b : mov rax, qword ptr [rip + 0x5f3cc6] ; call rax
0x000000000040ec11 : mov rax, qword ptr [rip + 0x5f3cc8] ; call rax
0x000000000040eb17 : mov rax, qword ptr [rip + 0x5f3d42] ; call rax
0x000000000040eb5a : mov rax, qword ptr [rip + 0x5f3d87] ; call rax
0x000000000040eb20 : mov rax, qword ptr [rip + 0x5f3db9] ; call rax
0x000000000040eb0e : mov rax, qword ptr [rip + 0x5f3dd3] ; call rax
0x000000000040e584 : mov rax, qword ptr [rip + 0x5f42e5] ; call rax
0x000000000040e56b : mov rax, qword ptr [rip + 0x5f42f6] ; call rax
0x000000000040e5e1 : mov rax, qword ptr [rip + 0x5f42f8] ; call rax
0x000000000040e4e7 : mov rax, qword ptr [rip + 0x5f4372] ; call rax
0x000000000040e52a : mov rax, qword ptr [rip + 0x5f43b7] ; call rax
0x000000000040e4f0 : mov rax, qword ptr [rip + 0x5f43e9] ; call rax
0x000000000040e4de : mov rax, qword ptr [rip + 0x5f4403] ; call rax
0x000000000040e061 : mov rax, qword ptr [rip + 0x5f4880] ; call rax
0x000000000040dfa4 : mov rax, qword ptr [rip + 0x5f4935] ; call rax
0x000000000040df88 : mov rax, qword ptr [rip + 0x5f4959] ; call rax
0x000000000040d72a : mov rax, qword ptr [rip + 0x5f51b7] ; call rax
0x000000000040d409 : mov rax, qword ptr [rip + 0x5f54d8] ; call rax
0x000000000040d2f2 : mov rax, qword ptr [rip + 0x5f55e7] ; call rax
0x000000000040d2d6 : mov rax, qword ptr [rip + 0x5f560b] ; call rax
0x000000000040cd85 : mov rax, qword ptr [rip + 0x5f5b5c] ; call rax
0x000000000040cccc : mov rax, qword ptr [rip + 0x5f5c0d] ; call rax
0x000000000040ccb0 : mov rax, qword ptr [rip + 0x5f5c31] ; call rax
0x000000000040ca21 : mov rax, qword ptr [rip + 0x5f5eb8] ; call rax
0x000000000040ca00 : mov rax, qword ptr [rip + 0x5f5ee1] ; call rax
0x000000000040c3ec : mov rax, qword ptr [rip + 0x5f64f5] ; call rax
0x000000000040c393 : mov rax, qword ptr [rip + 0x5f654e] ; call rax
0x000000000040c221 : mov rax, qword ptr [rip + 0x5f66b8] ; call rax
0x000000000040c1f4 : mov rax, qword ptr [rip + 0x5f66ed] ; call rax
0x000000000040b9a1 : mov rax, qword ptr [rip + 0x5f6f40] ; call rax
0x000000000040b577 : mov rax, qword ptr [rip + 0x5f7362] ; call rax
0x000000000040b52b : mov rax, qword ptr [rip + 0x5f73b6] ; call rax
0x000000000040b35f : mov rax, qword ptr [rip + 0x5f757a] ; call rax
0x000000000040b31a : mov rax, qword ptr [rip + 0x5f75c7] ; call rax
0x000000000040b276 : mov rax, qword ptr [rip + 0x5f7663] ; call rax
0x000000000040b253 : mov rax, qword ptr [rip + 0x5f768e] ; call rax
0x000000000040b10b : mov rax, qword ptr [rip + 0x5f77ce] ; call rax
0x000000000040b02a : mov rax, qword ptr [rip + 0x5f78b7] ; call rax
0x000000000040aba7 : mov rax, qword ptr [rip + 0x5f7d32] ; call rax
0x000000000040ab0e : mov rax, qword ptr [rip + 0x5f7dd3] ; call rax
0x0000000000408c16 : mov rax, qword ptr [rip + 0x5f9ccb] ; call rax
0x0000000000408b5e : mov rax, qword ptr [rip + 0x5f9d7b] ; call rax
0x0000000000408b3a : mov rax, qword ptr [rip + 0x5f9da7] ; call rax
0x00000000006d4c0b : mov rax, qword ptr [rsi + 0x10] ; add rsp, 8 ; ret
0x00000000005577b0 : mov rax, qword ptr [rsi + 0x10] ; mov rdx, qword ptr [rsi + 0x18] ; ret
0x000000000050aaa0 : mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000005086e0 : mov rax, qword ptr [rsi + 0x18] ; test rax, rax ; je 0x5086f9 ; ret
0x0000000000627770 : mov rax, qword ptr [rsi + 0x18] ; test rax, rax ; je 0x627789 ; ret
0x000000000052b1f5 : mov rax, qword ptr [rsi + 0x20] ; ret
0x0000000000556a60 : mov rax, qword ptr [rsi + 0x20] ; test rax, rax ; je 0x556a79 ; ret
0x000000000052b105 : mov rax, qword ptr [rsi + 0x28] ; ret
0x00000000005ad810 : mov rax, qword ptr [rsi + 0x30] ; mov rdx, qword ptr [rsi + 0x38] ; ret
0x0000000000525970 : mov rax, qword ptr [rsi + 0x30] ; ret
0x00000000006d4c40 : mov rax, qword ptr [rsi + 8] ; add rsp, 8 ; ret
0x000000000054db25 : mov rax, qword ptr [rsi] ; ret
0x0000000000677691 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000069442f : mov rax, qword ptr [rsp + 0x18] ; add rsp, 0x28 ; ret
0x00000000006cfea1 : mov rax, qword ptr [rsp + 0x18] ; add rsp, 0x38 ; ret
0x00000000006aaf37 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000507dca : mov rax, qword ptr [rsp - 0x18] ; mov qword ptr [rdi], rax ; ret
0x00000000006c0d5e : mov rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000006884b7 : mov rax, qword ptr [rsp] ; jne 0x688508 ; call rax
0x000000000066c0b7 : mov rax, qword ptr fs:[rax] ; test rax, rax ; je 0x66c0d1 ; ret
0x000000000051886f : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000051f804 : mov rax, r13 ; jne 0x51f854 ; mov rdi, r12 ; call rax
0x0000000000570d34 : mov rax, r13 ; jne 0x570d84 ; mov rdi, r12 ; call rax
0x000000000058ccb4 : mov rax, r13 ; jne 0x58cd04 ; mov rdi, r12 ; call rax
0x000000000058ce44 : mov rax, r13 ; jne 0x58ce94 ; mov rdi, r12 ; call rax
0x000000000068d999 : mov rax, r13 ; jne 0x68d9bb ; call rax
0x00000000004e84ee : mov rax, r13 ; mov rdi, rax ; call 0x6d4748
0x00000000005a025c : mov rax, r14 ; jne 0x5a02ac ; mov rdi, r12 ; call rax
0x0000000000448460 : mov rax, r14 ; mov rdi, rax ; call 0x6d4748
0x0000000000487c50 : mov rax, r15 ; mov rdi, rax ; call 0x6d4748
0x0000000000519b5e : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000606c5e : mov rax, rbp ; jne 0x606dd7 ; call rax
0x0000000000606e7a : mov rax, rbp ; jne 0x606ed5 ; call rax
0x000000000060737e : mov rax, rbp ; jne 0x607461 ; call rax
0x000000000068758b : mov rax, rbp ; jne 0x6875c1 ; call rax
0x000000000068dbde : mov rax, rbp ; jne 0x68dc04 ; call rax
0x000000000068db71 : mov rax, rbp ; jne 0x68dc12 ; call rax
0x00000000004f7793 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000544d7a : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000687a9f : mov rax, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000687b25 : mov rax, rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000005fd4b5 : mov rax, rbx ; add rsp, 0x30 ; pop rbx ; ret
0x00000000006ab651 : mov rax, rbx ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000677c36 : mov rax, rbx ; add rsp, 0x40 ; pop rbx ; ret
0x00000000006ab341 : mov rax, rbx ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000069e1eb : mov rax, rbx ; add rsp, 0x50 ; pop rbx ; ret
0x00000000006ab9eb : mov rax, rbx ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000058367a : mov rax, rbx ; add rsp, 0x70 ; pop rbx ; ret
0x00000000004f75e0 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006874f2 : mov rax, rbx ; jne 0x687542 ; call rax
0x0000000000688bfd : mov rax, rbx ; jne 0x688c47 ; call rax
0x0000000000688b3d : mov rax, rbx ; jne 0x688c55 ; call rax
0x00000000005e025b : mov rax, rbx ; mov rdi, rax ; call 0x5ccc8c
0x00000000005e846b : mov rax, rbx ; mov rdi, rax ; call 0x6d4748
0x000000000050840a : mov rax, rbx ; mov rdx, rcx ; pop rbx ; ret
0x0000000000676291 : mov rax, rbx ; pop rbx ; jmp rax
0x000000000050848f : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006cdeff : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000005043fc : mov rax, rbx ; pop rbx ; ret
0x00000000006c72fc : mov rax, rbx ; sub rsp, -0x80 ; pop rbx ; ret
0x00000000006777d2 : mov rax, rcx ; pop rbx ; ret
0x00000000005091b8 : mov rax, rdi ; add rsp, 8 ; ret
0x00000000005a4b50 : mov rax, rdi ; je 0x5a4b70 ; lea edx, dword ptr [rsi + 1] ; ret
0x00000000006c6d10 : mov rax, rdi ; mov al, sil ; ret
0x0000000000517f37 : mov rax, rdi ; mov edx, esi ; jg 0x517f47 ; ret
0x000000000056f777 : mov rax, rdi ; mov edx, esi ; jg 0x56f787 ; ret
0x0000000000584027 : mov rax, rdi ; mov edx, esi ; jg 0x584037 ; ret
0x00000000005841a7 : mov rax, rdi ; mov edx, esi ; jg 0x5841b7 ; ret
0x000000000059c0d7 : mov rax, rdi ; mov edx, esi ; jg 0x59c0e7 ; ret
0x00000000005502b0 : mov rax, rdi ; mov rdx, rsi ; ret
0x00000000006642b3 : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000525bfa : mov rax, rdi ; pop rbx ; ret
0x0000000000506b22 : mov rax, rdi ; ret
0x00000000006a1880 : mov rax, rdi ; shr rax, 0x20 ; ret
0x00000000006a1822 : mov rax, rdi ; xor edx, edx ; div rsi ; ret
0x000000000066bac0 : mov rax, rdi ; xor edx, edx ; ret
0x000000000065dfac : mov rax, rdx ; add rsp, 0x18 ; ret
0x000000000047f299 : mov rax, rdx ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000006914b9 : mov rax, rdx ; add rsp, 8 ; ret
0x00000000004505d5 : mov rax, rdx ; leave ; ret
0x000000000068ec95 : mov rax, rdx ; ret
0x0000000000676ef4 : mov rax, rdx ; sub rax, rdi ; ret
0x000000000066ba73 : mov rax, rdx ; test al, 1 ; jne 0x66baa3 ; call rax
0x000000000066d212 : mov rax, rdx ; test al, 1 ; jne 0x66d28c ; mov esi, ebp ; call rax
0x000000000066d22f : mov rax, rdx ; test al, 1 ; jne 0x66d296 ; mov esi, ebp ; call rax
0x000000000052701b : mov rax, rsi ; add rsp, 8 ; ret
0x0000000000504700 : mov rax, rsi ; ret
0x00000000006d464c : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004052a8 : mov rbp, r10 ; push rdx ; call 0x681538
0x00000000005c5de9 : mov rbp, rax ; call qword ptr [rip + 0x43caf6]
0x00000000006078f0 : mov rbp, rax ; call rcx
0x000000000057c8af : mov rbp, rax ; jmp 0x57c87b
0x0000000000501e6e : mov rbp, rdi ; call 0x6be895
0x000000000051aa3b : mov rbp, rdi ; mov rdi, rax ; call rdx
0x000000000051f995 : mov rbp, rsi ; jne 0x51f9e6 ; mov rdi, r12 ; call rax
0x0000000000570ec5 : mov rbp, rsi ; jne 0x570f16 ; mov rdi, r12 ; call rax
0x000000000058cfd5 : mov rbp, rsi ; jne 0x58d026 ; mov rdi, r12 ; call rax
0x000000000058d165 : mov rbp, rsi ; jne 0x58d1b6 ; mov rdi, r12 ; call rax
0x00000000005a0415 : mov rbp, rsi ; jne 0x5a0466 ; mov rdi, r12 ; call rax
0x00000000006b4f75 : mov rbp, rsi ; sub rsp, 0x18 ; call 0x6819b9
0x0000000000408b0b : mov rbp, rsp ; call rax
0x000000000066ac33 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; nop ; pop rbp ; ret
0x000000000040ba67 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000066ac3f : mov rbp, rsp ; nop ; pop rbp ; ret
0x000000000053de8f : mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000056d17b : mov rbx, qword ptr [rbx + 7] ; nop ; call rbx
0x00000000005f52eb : mov rbx, r10 ; mov qword ptr [rbp - 0x38], r10 ; call 0x68153b
0x0000000000424a9f : mov rbx, r10 ; mov qword ptr [rbp - 0x48], r10 ; call 0x68153b
0x00000000005b1da0 : mov rbx, r10 ; sub rsp, 0x18 ; call 0x6be899
0x00000000005b65e5 : mov rbx, rax ; call qword ptr [rip + 0x44c2f2]
0x0000000000575e1f : mov rbx, rax ; call qword ptr [rip + 0x48cab8]
0x00000000005566ce : mov rbx, rax ; call qword ptr [rip + 0x4ac209]
0x00000000005266a0 : mov rbx, rax ; call qword ptr [rip + 0x4dc237]
0x0000000000516609 : mov rbx, rax ; call qword ptr [rip + 0x4ec2ce]
0x0000000000515e6b : mov rbx, rax ; call qword ptr [rip + 0x4eca6c]
0x0000000000515e07 : mov rbx, rax ; call qword ptr [rip + 0x4ecad0]
0x0000000000515de7 : mov rbx, rax ; call qword ptr [rip + 0x4ecaf0]
0x0000000000505e39 : mov rbx, rax ; call qword ptr [rip + 0x4fcaa6]
0x0000000000509a05 : mov rbx, rax ; jmp 0x5099d1
0x0000000000523f16 : mov rbx, rax ; jmp 0x523ee2
0x0000000000538bba : mov rbx, rax ; jmp 0x538b8e
0x00000000005693d6 : mov rbx, rax ; jmp 0x5693a2
0x0000000000628a65 : mov rbx, rax ; jmp 0x628a31
0x0000000000543940 : mov rbx, rax ; xor eax, eax ; call 0x67fb59
0x000000000059eea1 : mov rbx, rax ; xor ebp, ebp ; jmp 0x59ee79
0x0000000000564a8e : mov rbx, rax ; xor r12d, r12d ; call 0x68153a
0x0000000000514a42 : mov rbx, rax ; xor r14d, r14d ; call 0x68153a
0x0000000000514a91 : mov rbx, rax ; xor r14d, r14d ; call 0x68153b
0x00000000006be682 : mov rbx, rbp ; call 0x6aa8e5
0x0000000000505df1 : mov rbx, rdi ; call qword ptr [rip + 0x4fca6e]
0x00000000005b38eb : mov rbx, rdx ; call 0x67fb57
0x00000000004b41b5 : mov rbx, rdx ; mov eax, ecx ; pop rbx ; pop rbp ; ret
0x000000000066cf42 : mov rcx, qword ptr [r8 + 0x28] ; mov qword ptr [rcx + 0x20], r8 ; ret
0x00000000004e8e28 : mov rcx, qword ptr [rbp - 0x768] ; call rax
0x000000000056d6cb : mov rcx, qword ptr [rbx + 7] ; nop ; call rcx
0x000000000040ed6b : mov rcx, qword ptr [rcx + 0x10] ; mov rdx, rcx ; nop ; pop rbp ; ret
0x000000000040d5f6 : mov rcx, qword ptr [rcx + 0x18] ; mov rdx, rcx ; nop ; leave ; ret
0x0000000000618bf5 : mov rcx, qword ptr [rcx + 0x18] ; mov rdx, rcx ; nop ; pop rbp ; ret
0x00000000004163b1 : mov rcx, qword ptr [rcx + 7] ; call rcx
0x000000000040d5b1 : mov rcx, qword ptr [rcx + 8] ; mov rdx, rcx ; nop ; pop rbp ; ret
0x00000000004b1941 : mov rcx, r11 ; mov r8, rbx ; call rax
0x0000000000507629 : mov rcx, r12 ; jne 0x5076ab ; mov rsi, rsp ; call rcx
0x000000000051df4e : mov rcx, r12 ; jne 0x51dfc0 ; mov rsi, rsp ; call rcx
0x00000000005646ad : mov rcx, r12 ; jne 0x56471e ; mov rsi, rsp ; call rcx
0x0000000000589b6a : mov rcx, r12 ; jne 0x589bbd ; call rcx
0x000000000058a03a : mov rcx, r12 ; jne 0x58a0bc ; mov rsi, rsp ; call rcx
0x0000000000675fd8 : mov rcx, r12 ; mov rdx, rbx ; call rax
0x000000000054809d : mov rcx, r14 ; mov rsi, rbx ; call rax
0x000000000054a2b9 : mov rcx, r8 ; jne 0x54a368 ; call rcx
0x00000000004e4ac6 : mov rcx, r8 ; mov r8, r12 ; call r11
0x00000000006bfdad : mov rcx, rax ; pop rbp ; pop r12 ; pop r13 ; jmp r8
0x000000000051d9ce : mov rcx, rbp ; jne 0x51da0f ; call rcx
0x000000000051dbb5 : mov rcx, rbp ; jne 0x51dc05 ; call rcx
0x00000000005405ec : mov rcx, rbp ; jne 0x540628 ; call rcx
0x000000000054c647 : mov rcx, rbp ; jne 0x54c689 ; call rcx
0x0000000000589cf5 : mov rcx, rbp ; jne 0x589d45 ; call rcx
0x0000000000512e62 : mov rcx, rbx ; jne 0x512e88 ; mov rdi, r12 ; call rcx
0x00000000006c07d4 : mov rcx, rbx ; mov rdx, r15 ; mov rdi, r12 ; call rax
0x00000000004ecbe6 : mov rcx, rdx ; mov rdx, r9 ; call rax
0x0000000000555a7f : mov rcx, rsp ; lea rsi, qword ptr [rsp + 0x10] ; call rax
0x000000000065cf40 : mov rdi, qword ptr [r12 + 8] ; call rax
0x0000000000595851 : mov rdi, qword ptr [rbp + 0x20] ; call 0x6a1a96
0x00000000004e6054 : mov rdi, qword ptr [rbp - 0x108] ; call r11
0x00000000005c9993 : mov rdi, qword ptr [rbp - 0x128] ; call rax
0x00000000005baac8 : mov rdi, qword ptr [rbp - 0x13b0] ; call rax
0x000000000063bb14 : mov rdi, qword ptr [rbp - 0x1a8] ; call rax
0x00000000006554b2 : mov rdi, qword ptr [rbp - 0x278] ; call rax
0x00000000005c880d : mov rdi, qword ptr [rbp - 0x338] ; call rax
0x00000000005c86c5 : mov rdi, qword ptr [rbp - 0x338] ; call rbx
0x0000000000549409 : mov rdi, qword ptr [rbp - 0x368] ; call rax
0x000000000052c91d : mov rdi, qword ptr [rbp - 0x390] ; call rax
0x0000000000531325 : mov rdi, qword ptr [rbp - 0x3c0] ; call 0x53ddf9
0x0000000000553524 : mov rdi, qword ptr [rbp - 0x3c8] ; call rax
0x00000000005537ff : mov rdi, qword ptr [rbp - 0x458] ; call rax
0x000000000051135a : mov rdi, qword ptr [rbp - 0x48] ; call rax
0x0000000000533849 : mov rdi, qword ptr [rbp - 0x88] ; call rax
0x0000000000601e1a : mov rdi, qword ptr [rbp - 0x98] ; call 0x6be8b9
0x000000000064a55b : mov rdi, qword ptr [rbp - 0xa0] ; call rax
0x00000000006498bb : mov rdi, qword ptr [rbp - 0xa8] ; call rax
0x0000000000653133 : mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x0000000000595818 : mov rdi, qword ptr [rbx + 0x20] ; call 0x6a1a96
0x0000000000660442 : mov rdi, qword ptr [rbx + 0x50] ; mov rsi, rax ; call rdx
0x00000000006913b8 : mov rdi, qword ptr [rbx + 8] ; call 0x6cde66
0x0000000000660434 : mov rdi, qword ptr [rdi + 0x50] ; call rdx
0x00000000006a696a : mov rdi, qword ptr [rdi + 8] ; xor esi, esi ; call 0x403448
0x000000000066078c : mov rdi, qword ptr [rsi + 0x50] ; mov esi, 1 ; call rax
0x0000000000653db9 : mov rdi, qword ptr [rsi] ; jne 0x6557f2 ; call rax
0x00000000005438a2 : mov rdi, qword ptr [rsp + 0x10] ; xor eax, eax ; call 0x67fb59
0x00000000005438ae : mov rdi, qword ptr [rsp + 0x10] ; xor eax, eax ; call 0x67fb5b
0x00000000005349a2 : mov rdi, qword ptr [rsp + 0x18] ; call rax
0x00000000005351a7 : mov rdi, qword ptr [rsp + 0x38] ; call rax
0x00000000004a143d : mov rdi, r11 ; mov rsi, r9 ; call rax
0x0000000000491211 : mov rdi, r11 ; mov rsi, rbx ; call r9
0x0000000000516b58 : mov rdi, r12 ; call 0x512d75
0x000000000067d4e7 : mov rdi, r12 ; call 0x689fb5
0x00000000006cd616 : mov rdi, r12 ; call r14
0x00000000006d4943 : mov rdi, r12 ; call r15
0x00000000004fbf37 : mov rdi, r12 ; call rax
0x0000000000512e67 : mov rdi, r12 ; call rcx
0x000000000055464e : mov rdi, r12 ; call rdx
0x000000000059846d : mov rdi, r12 ; jne 0x5983ff ; call 0x6d4747
0x00000000005a79a0 : mov rdi, r12 ; mov dword ptr [r14 + 4], eax ; call 0x403c79
0x000000000062cef2 : mov rdi, r12 ; mov ebx, 0 ; call rax
0x000000000054f570 : mov rdi, r12 ; mov esi, 1 ; call rax
0x0000000000551299 : mov rdi, r12 ; mov esi, dword ptr [rbp - 0xd8] ; call rax
0x00000000005ad463 : mov rdi, r12 ; mov r13, rbx ; call 0x5a9e98
0x00000000005938f3 : mov rdi, r12 ; xor eax, eax ; call 0x67fb59
0x00000000006c71a2 : mov rdi, r13 ; call 0x403c75
0x00000000006344d4 : mov rdi, r13 ; call 0x6806e9
0x000000000068d0b5 : mov rdi, r13 ; call 0x689b25
0x00000000005025df : mov rdi, r13 ; call 0x6be8b5
0x00000000006b1d8b : mov rdi, r13 ; call 0x6cdfd5
0x00000000005100ed : mov rdi, r13 ; call r11
0x00000000006cd719 : mov rdi, r13 ; call r14
0x000000000051020c : mov rdi, r13 ; call rax
0x00000000005101e8 : mov rdi, r13 ; call rdx
0x000000000052bfd7 : mov rdi, r13 ; mov ebx, 0 ; call rax
0x0000000000502627 : mov rdi, r13 ; mov rsi, rbx ; call 0x6be8b8
0x0000000000502626 : mov rdi, r13 ; mov rsi, rbx ; call 0x6be8b9
0x0000000000501dad : mov rdi, r13 ; mov rsp, r14 ; call 0x6be8b8
0x0000000000543925 : mov rdi, r13 ; xor eax, eax ; call 0x67fb59
0x00000000006c1c50 : mov rdi, r14 ; call r9
0x0000000000511b35 : mov rdi, r14 ; call rax
0x00000000006c1bc5 : mov rdi, r14 ; call rcx
0x00000000006516e7 : mov rdi, r14 ; call rdx
0x000000000052c2d6 : mov rdi, r14 ; mov ebx, 0 ; call rax
0x00000000004f7981 : mov rdi, r15 ; call 0x403c75
0x0000000000507c5d : mov rdi, r15 ; call 0x6d4745
0x00000000004e5dcd : mov rdi, r15 ; call r11
0x000000000052b75a : mov rdi, r15 ; call rax
0x0000000000503d62 : mov rdi, r15 ; call rcx
0x0000000000551573 : mov rdi, r15 ; call rdx
0x000000000056ea3c : mov rdi, r15 ; lea rsi, qword ptr [rbp - 0x40] ; call rax
0x000000000054f4df : mov rdi, r15 ; mov ebx, 0 ; call rax
0x000000000052c366 : mov rdi, r15 ; mov esi, 1 ; call rax
0x00000000006c26e4 : mov rdi, r15 ; mov rsi, rbx ; call rax
0x00000000006c260e : mov rdi, r15 ; movsxd r13, r13d ; call rax
0x00000000005125e3 : mov rdi, r9 ; mov qword ptr [rbp - 0x58], r9 ; call rax
0x00000000004a00c0 : mov rdi, r9 ; mov rsi, r8 ; call rax
0x0000000000476edb : mov rdi, rax ; call 0x4038f5
0x000000000065bafe : mov rdi, rax ; call 0x407d35
0x0000000000416bd2 : mov rdi, rax ; call 0x412e9d
0x000000000043ecef : mov rdi, rax ; call 0x43af01
0x0000000000440b2c : mov rdi, rax ; call 0x43d581
0x00000000004417ee : mov rdi, rax ; call 0x43da4d
0x0000000000443ae9 : mov rdi, rax ; call 0x44056f
0x000000000045aac4 : mov rdi, rax ; call 0x457515
0x00000000004640dd : mov rdi, rax ; call 0x4603cb
0x00000000004b9610 : mov rdi, rax ; call 0x4660c7
0x000000000046dddd : mov rdi, rax ; call 0x46a0cb
0x000000000047b880 : mov rdi, rax ; call 0x47837b
0x000000000047b87f : mov rdi, rax ; call 0x47837c
0x000000000047c748 : mov rdi, rax ; call 0x4791e5
0x000000000049e181 : mov rdi, rax ; call 0x49a447
0x00000000004a3720 : mov rdi, rax ; call 0x4a0193
0x00000000004a37bc : mov rdi, rax ; call 0x4a021f
0x0000000000459259 : mov rdi, rax ; call 0x4b5ca3
0x0000000000459d77 : mov rdi, rax ; call 0x4b67d1
0x000000000048fcc7 : mov rdi, rax ; call 0x4bbf0f
0x00000000005e025e : mov rdi, rax ; call 0x5ccc89
0x00000000005f4fbb : mov rdi, rax ; call 0x5e12c5
0x00000000005ea5db : mov rdi, rax ; call 0x5e70c1
0x00000000004b56b7 : mov rdi, rax ; call 0x6819b5
0x00000000004b56f9 : mov rdi, rax ; call 0x6819c5
0x0000000000454f7f : mov rdi, rax ; call 0x6819f5
0x0000000000414fc5 : mov rdi, rax ; call 0x681a35
0x00000000004bd698 : mov rdi, rax ; call 0x689915
0x00000000004bd4e5 : mov rdi, rax ; call 0x689fb5
0x00000000005d37f7 : mov rdi, rax ; call 0x68fa45
0x0000000000495082 : mov rdi, rax ; call 0x6a1a95
0x0000000000455075 : mov rdi, rax ; call 0x6c1375
0x00000000004184c0 : mov rdi, rax ; call 0x6d4745
0x000000000051aa3e : mov rdi, rax ; call rdx
0x00000000005584d1 : mov rdi, rax ; je 0x558502 ; call 0x6d4747
0x0000000000567c5a : mov rdi, rax ; je 0x567c80 ; call 0x6d4747
0x0000000000567c6b : mov rdi, rax ; je 0x567c98 ; call 0x6d4747
0x0000000000567cf8 : mov rdi, rax ; je 0x567d40 ; call 0x6d4747
0x0000000000567d2f : mov rdi, rax ; je 0x567d5b ; call 0x6d4747
0x0000000000627c70 : mov rdi, rax ; je 0x627c9f ; call 0x6d4747
0x000000000052309e : mov rdi, rax ; jne 0x5230f3 ; xor eax, eax ; call 0x67fb59
0x00000000005438d2 : mov rdi, rax ; jne 0x54389e ; xor eax, eax ; call 0x67fb59
0x00000000005730c0 : mov rdi, rax ; jne 0x573106 ; xor eax, eax ; call 0x67fb59
0x0000000000573934 : mov rdi, rax ; jne 0x573994 ; xor eax, eax ; call 0x67fb59
0x0000000000593898 : mov rdi, rax ; jne 0x5938f4 ; xor eax, eax ; call 0x67fb59
0x00000000006a3070 : mov rdi, rax ; jne 0x6a30dd ; xor eax, eax ; call 0x67fb59
0x00000000006330de : mov rdi, rax ; mov esi, 2 ; call rcx
0x000000000067628e : mov rdi, rax ; mov rax, rbx ; pop rbx ; jmp rax
0x00000000005c38c9 : mov rdi, rax ; xor eax, eax ; call 0x67fb57
0x00000000005f858f : mov rdi, rbp ; call 0x674835
0x000000000068d850 : mov rdi, rbp ; call 0x689b25
0x0000000000672b20 : mov rdi, rbp ; call 0x6bf555
0x00000000005a783d : mov rdi, rbp ; call 0x6c3b15
0x0000000000578521 : mov rdi, rbp ; call 0x6d4745
0x000000000050b276 : mov rdi, rbp ; call rax
0x00000000005115b8 : mov rdi, rbp ; call rcx
0x00000000005a7827 : mov rdi, rbp ; mov ecx, r12d ; call 0x6c3b18
0x000000000055451b : mov rdi, rbp ; mov esi, dword ptr [rsp + 0x24] ; call rax
0x00000000005079e8 : mov rdi, rbp ; mov rsi, rbx ; call rax
0x0000000000523102 : mov rdi, rbp ; xor eax, eax ; call 0x67fb59
0x00000000005c3947 : mov rdi, rbp ; xor eax, eax ; call 0x67fb6d
0x000000000053e3a2 : mov rdi, rbx ; add rbp, 8 ; call rax
0x000000000041e965 : mov rdi, rbx ; call 0x41b395
0x00000000004fb6b0 : mov rdi, rbx ; call 0x4f8195
0x000000000055b179 : mov rdi, rbx ; call 0x557435
0x000000000063baf4 : mov rdi, rbx ; call 0x5a8585
0x0000000000536145 : mov rdi, rbx ; call 0x672405
0x00000000005730ce : mov rdi, rbx ; call 0x67fb57
0x000000000057dcd4 : mov rdi, rbx ; call 0x689fb5
0x0000000000518447 : mov rdi, rbx ; call 0x6d4745
0x00000000004fdac3 : mov rdi, rbx ; call r8
0x00000000004043be : mov rdi, rbx ; call rax
0x00000000006109cc : mov rdi, rbx ; call rcx
0x000000000040a98a : mov rdi, rbx ; call rdx
0x00000000005a84c1 : mov rdi, rbx ; jne 0x5a848d ; call 0x6d4747
0x000000000053e455 : mov rdi, rbx ; mov edx, 0x6fa4c0 ; call rax
0x00000000006c1de5 : mov rdi, rbx ; mov edx, 0x730f50 ; call rax
0x00000000006c2b92 : mov rdi, rbx ; mov edx, 0x730fe0 ; call rax
0x0000000000517bf8 : mov rdi, rbx ; mov esi, 1 ; call rax
0x00000000005524e6 : mov rdi, rbx ; mov esi, 2 ; call rax
0x000000000062a7ca : mov rdi, rbx ; mov r14, rax ; call 0x6272a8
0x00000000006c193e : mov rdi, rbx ; mov rsi, r12 ; call rax
0x00000000005ad0aa : mov rdi, rbx ; mov rsi, rax ; call 0x5a9b38
0x00000000005438de : mov rdi, rbx ; xor eax, eax ; call 0x67fb59
0x00000000005c38e3 : mov rdi, rbx ; xor eax, eax ; call 0x67fb6d
0x00000000005d79ff : mov rdi, rcx ; call 0x403c75
0x000000000040a500 : mov rdi, rcx ; call rax
0x000000000040aafb : mov rdi, rcx ; call rdx
0x00000000004e8a45 : mov rdi, rcx ; mov rsi, rax ; call 0x4554d4
0x00000000004e8a9b : mov rdi, rcx ; mov rsi, rax ; call 0x455542
0x00000000004cb33d : mov rdi, rcx ; mov rsi, rax ; call 0x6875d8
0x000000000042ea88 : mov rdi, rcx ; mov rsi, rax ; call 0x68ad78
0x00000000006155aa : mov rdi, rcx ; mov rsi, rax ; call 0x6a1898
0x00000000004a7861 : mov rdi, rcx ; mov rsi, rax ; call 0x6c42c8
0x00000000004385b1 : mov rdi, rcx ; mov rsi, rax ; call 0x6c5028
0x000000000044279e : mov rdi, rcx ; mov rsi, rdx ; call rax
0x000000000047c7c0 : mov rdi, rdx ; call 0x4791e5
0x000000000040b106 : mov rdi, rdx ; call rax
0x0000000000421fea : mov rdi, rdx ; mov rsi, rax ; call 0x41ea62
0x000000000043f3af : mov rdi, rdx ; mov rsi, rax ; call 0x43be3e
0x0000000000412632 : mov rdi, rdx ; mov rsi, rax ; call 0x6be8b8
0x00000000005820bd : mov rdi, rsi ; jmp rax
0x0000000000475b9e : mov rdi, rsi ; mov rsi, rax ; call 0x6a1e68
0x00000000006c70d8 : mov rdi, rsi ; mov rsi, rax ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000040e0f5 : mov rdi, rsi ; mov rsi, rcx ; call rax
0x0000000000667815 : mov rdi, rsp ; call 0x403b05
0x0000000000575e86 : mov rdi, rsp ; call 0x572105
0x0000000000577f70 : mov rdi, rsp ; call 0x5741e5
0x0000000000510157 : mov rdi, rsp ; call rax
0x00000000006d3f58 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000052223b : mov rdx, qword ptr [rax + 0x10] ; test rdx, rdx ; jne 0x522241 ; ret
0x0000000000522353 : mov rdx, qword ptr [rax + 0x10] ; test rdx, rdx ; jne 0x522359 ; ret
0x000000000052723b : mov rdx, qword ptr [rax + 0x10] ; test rdx, rdx ; jne 0x527241 ; ret
0x0000000000527353 : mov rdx, qword ptr [rax + 0x10] ; test rdx, rdx ; jne 0x527359 ; ret
0x0000000000542c0b : mov rdx, qword ptr [rax + 0x10] ; test rdx, rdx ; jne 0x542c11 ; ret
0x0000000000542d23 : mov rdx, qword ptr [rax + 0x10] ; test rdx, rdx ; jne 0x542d29 ; ret
0x000000000056712b : mov rdx, qword ptr [rax + 0x10] ; test rdx, rdx ; jne 0x567131 ; ret
0x0000000000567243 : mov rdx, qword ptr [rax + 0x10] ; test rdx, rdx ; jne 0x567249 ; ret
0x0000000000590e7b : mov rdx, qword ptr [rax + 0x10] ; test rdx, rdx ; jne 0x590e81 ; ret
0x0000000000590f93 : mov rdx, qword ptr [rax + 0x10] ; test rdx, rdx ; jne 0x590f99 ; ret
0x00000000005a976b : mov rdx, qword ptr [rax + 0x10] ; test rdx, rdx ; jne 0x5a9771 ; ret
0x00000000005a9883 : mov rdx, qword ptr [rax + 0x10] ; test rdx, rdx ; jne 0x5a9889 ; ret
0x000000000067fd04 : mov rdx, qword ptr [rax + 7] ; mov rdi, rbx ; call rdx
0x00000000004406ad : mov rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rax] ; nop ; pop rbp ; ret
0x00000000006a8631 : mov rdx, qword ptr [rax + 8] ; mov rax, rbx ; pop rbx ; ret
0x000000000052225b : mov rdx, qword ptr [rax + 8] ; test rdx, rdx ; jne 0x522261 ; ret
0x0000000000522283 : mov rdx, qword ptr [rax + 8] ; test rdx, rdx ; jne 0x522289 ; ret
0x000000000052725b : mov rdx, qword ptr [rax + 8] ; test rdx, rdx ; jne 0x527261 ; ret
0x0000000000527283 : mov rdx, qword ptr [rax + 8] ; test rdx, rdx ; jne 0x527289 ; ret
0x0000000000542c2b : mov rdx, qword ptr [rax + 8] ; test rdx, rdx ; jne 0x542c31 ; ret
0x0000000000542c53 : mov rdx, qword ptr [rax + 8] ; test rdx, rdx ; jne 0x542c59 ; ret
0x000000000056714b : mov rdx, qword ptr [rax + 8] ; test rdx, rdx ; jne 0x567151 ; ret
0x0000000000567173 : mov rdx, qword ptr [rax + 8] ; test rdx, rdx ; jne 0x567179 ; ret
0x0000000000590e9b : mov rdx, qword ptr [rax + 8] ; test rdx, rdx ; jne 0x590ea1 ; ret
0x0000000000590ec3 : mov rdx, qword ptr [rax + 8] ; test rdx, rdx ; jne 0x590ec9 ; ret
0x00000000005a978b : mov rdx, qword ptr [rax + 8] ; test rdx, rdx ; jne 0x5a9791 ; ret
0x00000000005a97b3 : mov rdx, qword ptr [rax + 8] ; test rdx, rdx ; jne 0x5a97b9 ; ret
0x00000000006be89a : mov rdx, qword ptr [rax] ; add rsp, 8 ; ret
0x0000000000442e00 : mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax + 0x10], rdx ; pop rbp ; ret
0x000000000044f0da : mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax + 0x18], rdx ; pop rbp ; ret
0x0000000000413ba7 : mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax + 8], rdx ; leave ; ret
0x000000000061a5b2 : mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax + 8], rdx ; pop rbp ; ret
0x000000000040c1c4 : mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; pop rbp ; ret
0x000000000041516e : mov rdx, qword ptr [rbp - 0x18] ; leave ; ret
0x000000000040ef88 : mov rdx, qword ptr [rbp - 0x18] ; nop ; pop rbx ; pop rbp ; ret
0x00000000004689fc : mov rdx, qword ptr [rbp - 0x28] ; nop ; leave ; ret
0x000000000041099c : mov rdx, qword ptr [rbp - 0x30] ; mov qword ptr [rax + 0x38], rdx ; pop rbp ; ret
0x00000000004209ec : mov rdx, qword ptr [rbp - 0x30] ; mov qword ptr [rax + 0x40], rdx ; pop rbp ; ret
0x0000000000620a5e : mov rdx, qword ptr [rbp - 0x38] ; nop ; leave ; ret
0x000000000040ef32 : mov rdx, qword ptr [rbp - 8] ; nop ; leave ; ret
0x00000000005d4623 : mov rdx, qword ptr [rbp - 8] ; nop ; pop rbp ; ret
0x0000000000414303 : mov rdx, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000052b0f6 : mov rdx, qword ptr [rbx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; pop rbx ; ret
0x0000000000548600 : mov rdx, qword ptr [rbx] ; jmp 0x5485cc
0x0000000000584f48 : mov rdx, qword ptr [rdi + 8] ; mov eax, dword ptr [rdx + rax*4] ; ret
0x000000000051b458 : mov rdx, qword ptr [rdx + 0x30] ; test dl, 1 ; jne 0x51b4bd ; call rdx
0x000000000054bc58 : mov rdx, qword ptr [rdx + 0x30] ; test dl, 1 ; jne 0x54bcbd ; call rdx
0x00000000006c02b7 : mov rdx, qword ptr [rdx + 0x50] ; test dl, 1 ; jne 0x6c02d2 ; call rdx
0x000000000062c2f0 : mov rdx, qword ptr [rdx + 7] ; jmp 0x62c2c6
0x00000000006525fc : mov rdx, qword ptr [rdx + 7] ; mov esi, 1 ; call rdx
0x000000000040a986 : mov rdx, qword ptr [rdx + 7] ; mov rdi, rbx ; call rdx
0x0000000000415a4d : mov rdx, qword ptr [rdx + 7] ; mov rdi, rcx ; call rdx
0x000000000054da6c : mov rdx, qword ptr [rdx + rsi + 0x18] ; add rsp, 8 ; ret
0x00000000006a97d0 : mov rdx, qword ptr [rdx] ; mov byte ptr [rdx + rax], 0x2d ; ret
0x00000000005577b4 : mov rdx, qword ptr [rsi + 0x18] ; ret
0x00000000005ad814 : mov rdx, qword ptr [rsi + 0x38] ; ret
0x0000000000506b69 : mov rdx, qword ptr [rsi + rdx*8] ; test rdx, rdx ; je 0x506b69 ; ret
0x0000000000554da9 : mov rdx, qword ptr [rsi + rdx*8] ; test rdx, rdx ; je 0x554da9 ; ret
0x0000000000625ad9 : mov rdx, qword ptr [rsi + rdx*8] ; test rdx, rdx ; je 0x625ad9 ; ret
0x0000000000690b8a : mov rdx, qword ptr [rsp + 0x30] ; jmp 0x690b5a
0x0000000000690bda : mov rdx, qword ptr [rsp + 0x30] ; jmp 0x690baa
0x000000000069115a : mov rdx, qword ptr [rsp + 0x30] ; jmp 0x69112a
0x00000000006911aa : mov rdx, qword ptr [rsp + 0x30] ; jmp 0x69117a
0x000000000069c095 : mov rdx, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000006cbb31 : mov rdx, qword ptr [rsp - 0x10] ; ret
0x00000000006cbaf9 : mov rdx, qword ptr [rsp - 0x20] ; ret
0x0000000000526dd8 : mov rdx, r12 ; jne 0x526e25 ; call rdx
0x000000000057015d : mov rdx, r12 ; jne 0x5701ad ; call rdx
0x0000000000571bf9 : mov rdx, r12 ; jne 0x571c45 ; call rdx
0x0000000000589755 : mov rdx, r12 ; jne 0x5897a5 ; call rdx
0x0000000000590bb8 : mov rdx, r12 ; jne 0x590c05 ; call rdx
0x00000000004043bb : mov rdx, r12 ; mov rdi, rbx ; call rax
0x00000000005600d2 : mov rdx, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004fcf7b : mov rdx, r13 ; call rax
0x000000000054809a : mov rdx, r13 ; mov rcx, r14 ; mov rsi, rbx ; call rax
0x00000000004ff9d4 : mov rdx, r14 ; call rax
0x0000000000503149 : mov rdx, r15 ; call rax
0x00000000006c0747 : mov rdx, r15 ; mov rdi, r12 ; call rax
0x000000000040f01e : mov rdx, r9 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004ecbe9 : mov rdx, r9 ; call rax
0x000000000043f4a0 : mov rdx, rax ; call 0x43b6f7
0x0000000000592dbb : mov rdx, rax ; call r8
0x00000000005043f9 : mov rdx, rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000525bf7 : mov rdx, rax ; mov rax, rdi ; pop rbx ; ret
0x00000000006ca87c : mov rdx, rax ; mov rax, rsi ; ret
0x00000000005d79fc : mov rdx, rax ; mov rdi, rcx ; call 0x403c78
0x0000000000509e59 : mov rdx, rax ; xor eax, eax ; pop rbx ; ret
0x000000000054e750 : mov rdx, rbp ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000050ab50 : mov rdx, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000051d730 : mov rdx, rbp ; jne 0x51d785 ; call rdx
0x000000000051d88d : mov rdx, rbp ; jne 0x51d8dd ; call rdx
0x000000000052b4b3 : mov rdx, rbp ; jne 0x52b4ef ; call rdx
0x0000000000545153 : mov rdx, rbp ; jne 0x54518f ; call rdx
0x000000000054e2ff : mov rdx, rbp ; jne 0x54e33b ; call rdx
0x0000000000589614 : mov rdx, rbp ; jne 0x589665 ; call rdx
0x00000000005898a0 : mov rdx, rbp ; jne 0x5898f5 ; call rdx
0x00000000005899fd : mov rdx, rbp ; jne 0x589a4d ; call rdx
0x000000000058f930 : mov rdx, rbp ; jne 0x58f97d ; call rdx
0x000000000055223f : mov rdx, rbp ; mov rdi, r12 ; call rax
0x0000000000535912 : mov rdx, rbp ; mov rdi, rbx ; call rax
0x00000000004fd876 : mov rdx, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006ae83d : mov rdx, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004cc6ec : mov rdx, rbx ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000005199e0 : mov rdx, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000675fdb : mov rdx, rbx ; call rax
0x00000000004e5dca : mov rdx, rbx ; mov rdi, r15 ; call r11
0x00000000005136f4 : mov rdx, rbx ; mov rsi, r13 ; call r8
0x0000000000631b39 : mov rdx, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005012e2 : mov rdx, rbx ; pop rbx ; pop rbp ; pop r12 ; xor ecx, ecx ; jmp rax
0x000000000045da8e : mov rdx, rcx ; call rax
0x000000000040d5fa : mov rdx, rcx ; nop ; leave ; ret
0x000000000040d5b5 : mov rdx, rcx ; nop ; pop rbp ; ret
0x00000000005d4522 : mov rdx, rcx ; nop ; pop rbx ; pop rbp ; ret
0x000000000050840d : mov rdx, rcx ; pop rbx ; ret
0x000000000051af0b : mov rdx, rcx ; ret
0x000000000040a4fd : mov rdx, rdi ; mov rdi, rcx ; call rax
0x000000000052a499 : mov rdx, rdi ; test rdx, rdx ; jne 0x52a490 ; ret
0x0000000000544b58 : mov rdx, rdi ; test rdx, rdx ; jne 0x544b50 ; ret
0x00000000005139f9 : mov rdx, rsi ; mov rsi, r12 ; call rax
0x000000000045fcf4 : mov rdx, rsi ; mov rsi, r8 ; call rax
0x000000000052ef1d : mov rdx, rsi ; or rdx, 1 ; xor eax, eax ; ret
0x00000000005502b3 : mov rdx, rsi ; ret
0x0000000000516e28 : mov rdx, rsi ; xor al, al ; or rax, rcx ; ret
0x000000000062b050 : mov rdx, rsi ; xor eax, eax ; ret
0x000000000054841f : mov rdx, rsp ; and rbx, 0xfffffffffffffff8 ; call rax
0x000000000050556d : mov rdx, rsp ; call rax
0x0000000000606f9c : mov rdx, rsp ; mov rdi, r14 ; call rax
0x00000000005489a4 : mov rdx, rsp ; mov rdi, rbx ; call rax
0x00000000006d4a97 : mov rsi, qword ptr [r15] ; call r14
0x0000000000651db6 : mov rsi, qword ptr [rbp - 0x4e0] ; call 0x6be8b9
0x000000000064267d : mov rsi, qword ptr [rbp - 0x528] ; call 0x6be8b9
0x00000000006d4a48 : mov rsi, qword ptr [rbx] ; call r14
0x00000000005306a1 : mov rsi, qword ptr [rsp] ; mov rdi, rbx ; call rax
0x000000000068725b : mov rsi, r12 ; call 0x403c75
0x00000000005139fc : mov rsi, r12 ; call rax
0x00000000004fdd7a : mov rsi, r12 ; lea rdi, qword ptr [rax + 0x28] ; call 0x689ff9
0x000000000053590f : mov rsi, r12 ; mov rdx, rbp ; mov rdi, rbx ; call rax
0x00000000005136f7 : mov rsi, r13 ; call r8
0x000000000051167b : mov rsi, r13 ; call rax
0x00000000004fa303 : mov rsi, r13 ; mov edx, 0x6edea0 ; call rax
0x00000000005359b4 : mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000004043b8 : mov rsi, r13 ; mov rdx, r12 ; mov rdi, rbx ; call rax
0x000000000055223c : mov rsi, r13 ; mov rdx, rbp ; mov rdi, r12 ; call rax
0x00000000005489cf : mov rsi, r13 ; mov rdx, rbp ; mov rdi, rbx ; call rax
0x00000000006b71b6 : mov rsi, r13 ; sub rdx, 0x19 ; call 0x403c79
0x000000000050b6b6 : mov rsi, r14 ; call 0x687955
0x00000000006d4940 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x00000000004f797e : mov rsi, r14 ; mov rdi, r15 ; call 0x403c78
0x00000000005358f5 : mov rsi, r14 ; mov rdi, rbx ; call rax
0x00000000006b1d88 : mov rsi, r15 ; mov rdi, r13 ; call 0x6cdfd8
0x0000000000511212 : mov rsi, r15 ; mov rdi, rbx ; call rax
0x00000000005130b2 : mov rsi, r8 ; add rsp, 8 ; jmp rax
0x000000000045fcf7 : mov rsi, r8 ; call rax
0x000000000040a4fa : mov rsi, r8 ; mov rdx, rdi ; mov rdi, rcx ; call rax
0x0000000000513212 : mov rsi, r9 ; add rsp, 8 ; jmp rax
0x00000000004a1440 : mov rsi, r9 ; call rax
0x00000000006c1ce1 : mov rsi, r9 ; mov rdi, r14 ; call rcx
0x0000000000421fed : mov rsi, rax ; call 0x41ea5f
0x000000000043f3b2 : mov rsi, rax ; call 0x43be3b
0x00000000004e8a48 : mov rsi, rax ; call 0x4554d1
0x00000000004e8a9e : mov rsi, rax ; call 0x45553f
0x00000000005ad0ad : mov rsi, rax ; call 0x5a9b35
0x00000000005f8504 : mov rsi, rax ; call 0x6747e5
0x00000000004cb340 : mov rsi, rax ; call 0x6875d5
0x000000000042ea8b : mov rsi, rax ; call 0x68ad75
0x00000000006155ad : mov rsi, rax ; call 0x6a1895
0x0000000000475ba1 : mov rsi, rax ; call 0x6a1e65
0x0000000000412635 : mov rsi, rax ; call 0x6be8b5
0x00000000004a7864 : mov rsi, rax ; call 0x6c42c5
0x00000000004385b4 : mov rsi, rax ; call 0x6c5025
0x0000000000660446 : mov rsi, rax ; call rdx
0x00000000006c70db : mov rsi, rax ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000547ea6 : mov rsi, rbp ; call rax
0x00000000005359ce : mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000005ad03e : mov rsi, rbx ; call 0x5a9b35
0x000000000050262a : mov rsi, rbx ; call 0x6be8b5
0x0000000000491214 : mov rsi, rbx ; call r9
0x00000000005079eb : mov rsi, rbx ; call rax
0x00000000005025dc : mov rsi, rbx ; mov rdi, r13 ; call 0x6be8b8
0x0000000000459256 : mov rsi, rbx ; mov rdi, rax ; call 0x4b5ca6
0x0000000000510154 : mov rsi, rbx ; mov rdi, rsp ; call rax
0x00000000004fcf78 : mov rsi, rbx ; mov rdx, r13 ; call rax
0x00000000004ff9d1 : mov rsi, rbx ; mov rdx, r14 ; call rax
0x0000000000503146 : mov rsi, rbx ; mov rdx, r15 ; call rax
0x0000000000501e2e : mov rsi, rbx ; mov rsp, r14 ; call 0x6be8b8
0x00000000006d1dc1 : mov rsi, rbx ; xor ebx, ebx ; call rax
0x000000000040e0f8 : mov rsi, rcx ; call rax
0x000000000051300c : mov rsi, rcx ; jmp rax
0x0000000000476ed8 : mov rsi, rcx ; mov rdi, rax ; call 0x4038f8
0x00000000004417eb : mov rsi, rcx ; mov rdi, rax ; call 0x43da50
0x00000000004b960d : mov rsi, rcx ; mov rdi, rax ; call 0x4660ca
0x00000000004a37b9 : mov rsi, rcx ; mov rdi, rax ; call 0x4a0222
0x00000000004b56b4 : mov rsi, rcx ; mov rdi, rax ; call 0x6819b8
0x00000000004b56f6 : mov rsi, rcx ; mov rdi, rax ; call 0x6819c8
0x0000000000493ce0 : mov rsi, rcx ; mov rdi, rdx ; call rax
0x00000000006d48e9 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x00000000004427a1 : mov rsi, rdx ; call rax
0x000000000065bafb : mov rsi, rdx ; mov rdi, rax ; call 0x407d38
0x00000000005ea5d8 : mov rsi, rdx ; mov rdi, rax ; call 0x5e70c4
0x0000000000455072 : mov rsi, rdx ; mov rdi, rax ; call 0x6c1378
0x000000000043f49d : mov rsi, rdx ; mov rdx, rax ; call 0x43b6fa
0x00000000006671f6 : mov rsi, rsp ; call 0x403c35
0x000000000050adff : mov rsi, rsp ; call rax
0x000000000050762e : mov rsi, rsp ; call rcx
0x000000000050f665 : mov rsi, rsp ; mov edx, 0x6f1980 ; call rax
0x00000000005184fc : mov rsi, rsp ; mov edx, 0x6f26a0 ; call rax
0x000000000053f51c : mov rsi, rsp ; mov edx, 0x6fa720 ; call rax
0x000000000056305c : mov rsi, rsp ; mov edx, 0x701f80 ; call rax
0x00000000005874ec : mov rsi, rsp ; mov edx, 0x7070c0 ; call rax
0x00000000005a788c : mov rsi, rsp ; mov edx, 0x70fa50 ; call rax
0x00000000006c0cfe : mov rsi, rsp ; mov edx, 0x730d00 ; call rax
0x00000000006c0d4e : mov rsi, rsp ; mov edx, 0x730d30 ; call rax
0x00000000006c0e3e : mov rsi, rsp ; mov edx, 0x730d80 ; call rax
0x00000000006c110e : mov rsi, rsp ; mov edx, 0x730e20 ; call rax
0x00000000005badfa : mov rsp, r12 ; mov r12, rax ; jmp 0x5badcc
0x0000000000501db0 : mov rsp, r14 ; call 0x6be8b5
0x00000000006d4650 : mov rsp, rcx ; ret
0x000000000075a0f1 : mov ss, eax ; call rbx
0x00000000007363a5 : mov ss, ecx ; call qword ptr [rax]
0x000000000068aa0a : mov ss, edi ; dec dword ptr [rax + 0x63] ; ret
0x000000000073908d : mov ss, edi ; jmp rax
0x000000000050edba : mov ss, esp ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x80], al ; jl 0x50edea ; jmp qword ptr [rsi]
0x00000000005b5a69 : mov ss, word ptr [r8] ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x0000000000510f66 : mov ss, word ptr [rax + rax] ; add rsp, 8 ; ret
0x00000000005b5a6a : mov ss, word ptr [rax] ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x00000000007cc591 : mov ss, word ptr [rax] ; add eax, 0x930010c7 ; adc byte ptr [rsi], al ; ret 0x10
0x000000000060a2b7 : mov ss, word ptr [rcx + rax + 0x634c0000] ; ret 0x144
0x00000000006d690e : mov ss, word ptr [rcx] ; ret
0x00000000007397bc : mov ss, word ptr [rdi - 0x28] ; call qword ptr [rax]
0x0000000000610ee1 : mov ss, word ptr [rdx] ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret 0x8d0f
0x0000000000556d5f : mov ss, word ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004d9a95 : mov ss, word ptr [rdx] ; call rax
0x00000000006b6e71 : mov word ptr [r10 + 0x22], ax ; ret
0x00000000006b6eb5 : mov word ptr [r10 + 0x22], dx ; add rsp, 0x18 ; ret
0x00000000006aea63 : mov word ptr [rax + 0x29000000], gs ; ret 0xb8
0x00000000004e3cbf : mov word ptr [rax + 0x29], cs ; ror dword ptr [rax - 0x77], 1 ; retf -0x7eb8
0x0000000000440023 : mov word ptr [rax + 0x39000000], es ; ret 0x117c
0x000000000050db60 : mov word ptr [rax + 0x39000001], gs ; retf
0x0000000000637df6 : mov word ptr [rax + 0x39000004], fs ; ret
0x00000000007aff94 : mov word ptr [rax + 6], cs ; add byte ptr [rax - 6], bl ; in eax, dx ; jmp qword ptr [rax]
0x000000000065dc03 : mov word ptr [rax + rax + 0x5d5b0000], es ; pop r12 ; ret
0x000000000057626d : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xb60f
0x00000000004e2966 : mov word ptr [rax + rax*8], fs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf -0x76b8
0x00000000007dd96c : mov word ptr [rax + rax], cs ; cdq ; or al, 5 ; ret 0xc
0x00000000007df675 : mov word ptr [rax + rax], es ; ret
0x0000000000794445 : mov word ptr [rax + rax], es ; xchg eax, esp ; js 0x794435 ; call rsp
0x00000000006d2728 : mov word ptr [rax + rbx*2], fs ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x000000000054b6b0 : mov word ptr [rax - 0x76b7ffe8], ss ; ret
0x000000000040856b : mov word ptr [rax - 0x77], cs ; ret
0x000000000074ae51 : mov word ptr [rax], cs ; add byte ptr [rax - 0x71], dh ; stc ; jmp qword ptr [rax]
0x0000000000479c1e : mov word ptr [rax], ds ; call rax
0x000000000063da50 : mov word ptr [rax], es ; add byte ptr [rax], al ; mov rdi, r15 ; call rax
0x000000000067b09b : mov word ptr [rax], es ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000004804fb : mov word ptr [rax], fs ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x8b49
0x00000000006d2e6a : mov word ptr [rax], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007ee66d : mov word ptr [rax], ss ; add al, dl ; syscall
0x000000000068cdbe : mov word ptr [rbp - 0x77000000], ds ; ret 0xf229
0x000000000068bcd6 : mov word ptr [rbp - 0x77000000], es ; ret 0xfa29
0x0000000000538a02 : mov word ptr [rbp - 0xad], ax ; call 0x6c5479
0x0000000000429ccc : mov word ptr [rbp], ds ; call rax
0x000000000041c340 : mov word ptr [rbx + 0x2a], es ; add cl, cl ; ret
0x000000000067b440 : mov word ptr [rbx], cs ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000004d2095 : mov word ptr [rbx], ds ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006486d4 : mov word ptr [rbx], es ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005c416d : mov word ptr [rbx], fs ; jno 0x5c4179 ; xor eax, eax ; call 0x680b94
0x0000000000585927 : mov word ptr [rbx], ss ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004cbb0b : mov word ptr [rcx + 0x39c889f2], cs ; ret 0x287c
0x00000000007653d4 : mov word ptr [rcx + rax - 0x2a9d5e00], ds ; call qword ptr [rsi]
0x000000000050e927 : mov word ptr [rcx + rax], cs ; add byte ptr [rcx], ch ; ret
0x00000000007c0187 : mov word ptr [rcx], cs ; add byte ptr [rdx + 0xe08], al ; ret 0x508
0x00000000007ee151 : mov word ptr [rcx], es ; retf
0x000000000079e094 : mov word ptr [rcx], gs ; add eax, 0xe7f4d000 ; call qword ptr [rsi]
0x0000000000665ee2 : mov word ptr [rdi + 0x1720], ax ; ret
0x000000000067bc46 : mov word ptr [rdi + 0x29000000], fs ; ret
0x000000000068dece : mov word ptr [rdi + 0x39000000], gs ; retf
0x00000000006cbb80 : mov word ptr [rdi + 2], si ; ret
0x000000000064a2e4 : mov word ptr [rdi], cs ; add al, byte ptr [rax] ; add byte ptr [rcx], ch ; ret
0x00000000007cd44e : mov word ptr [rdi], cs ; add eax, 0x9e090fa8 ; syscall
0x00000000007f14c0 : mov word ptr [rdi], es ; add byte ptr [rbp + 0x2e02], bl ; retf
0x00000000007476b1 : mov word ptr [rdi], es ; add byte ptr [rdx - 0x2c], bh ; hlt ; jmp rax
0x00000000007476c1 : mov word ptr [rdi], es ; add byte ptr [rsi - 0x2a], bl ; hlt ; jmp qword ptr [rax]
0x00000000004b5cf8 : mov word ptr [rdi], ss ; cli ; dec ecx ; ret
0x00000000006cb395 : mov word ptr [rdx + 0x10], cx ; add rsp, 8 ; ret
0x00000000006cb3dd : mov word ptr [rdx + 0x14], si ; add rsp, 8 ; ret
0x00000000005132de : mov word ptr [rdx + 2], cx ; add rsp, 8 ; ret
0x000000000055fd9d : mov word ptr [rdx + 8], cx ; pop rbx ; ret
0x000000000076253c : mov word ptr [rdx + rax], es ; ret
0x000000000069fa2d : mov word ptr [rdx + rsi*2], r9w ; jne 0x69fa20 ; pop rbx ; ret
0x000000000069fc3e : mov word ptr [rdx + rsi*2], r9w ; jne 0x69fc30 ; pop rbx ; ret
0x00000000006b1241 : mov word ptr [rdx], ds ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x0000000000737c29 : mov word ptr [rdx], es ; add ah, ah ; in eax, -0x2d ; call qword ptr [rax]
0x000000000078b994 : mov word ptr [rdx], es ; add al, 0 ; clc ; and ecx, esp ; jmp rdi
0x00000000007c8840 : mov word ptr [rdx], es ; add bh, bh ; add dword ptr [rbx], esi ; add byte ptr [rax], al ; ret 0x502
0x00000000005d9c38 : mov word ptr [rdx], es ; call rax
0x00000000007f32e4 : mov word ptr [rdx], es ; retf
0x00000000007c682b : mov word ptr [rdx], es ; retf 0x2a
0x00000000004958f4 : mov word ptr [rdx], fs ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000060700c : mov word ptr [rdx], fs ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf
0x00000000005aba79 : mov word ptr [rdx], ss ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007f0db7 : mov word ptr [rip + 0x30bef06], es ; ret 0x7105
0x00000000007c3eb3 : mov word ptr [rip + 0x5bb2f], es ; retf 0x505
0x0000000000409bca : mov word ptr [rip + 0x5f3a87], ax ; call 0x505e79
0x00000000004d80e6 : mov word ptr [rip - 0x70410000], cs ; ret 0x6e
0x00000000004c4f16 : mov word ptr [rip - 0x70410000], es ; ret 0x6e
0x0000000000539815 : mov word ptr [rsi + 0x29000002], ds ; ret
0x000000000053e803 : mov word ptr [rsi + 4], ax ; add rsp, 0x18 ; ret
0x000000000053e781 : mov word ptr [rsi + 4], ax ; add rsp, 8 ; ret
0x000000000053de8b : mov word ptr [rsi + 4], ax ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000007fa02f : mov word ptr [rsi + 5], cs ; ret
0x00000000007ad394 : mov word ptr [rsi + rax], ds ; add byte ptr [rax], ch ; jns 0x7ad38f ; jmp qword ptr [rcx]
0x000000000068cf7d : mov word ptr [rsi - 0x77000000], cs ; retf -0x3dd7
0x0000000000721b1c : mov word ptr [rsi], cs ; ret 0x4374
0x00000000004d7a45 : mov word ptr [rsi], ds ; add cl, cl ; ret
0x00000000007444c4 : mov word ptr [rsi], ds ; out dx, al ; jmp rax
0x00000000007b43a5 : mov word ptr [rsi], es ; add al, ch ; out dx, eax ; jmp qword ptr [rdi]
0x00000000007b434d : mov word ptr [rsi], es ; add al, dl ; out dx, eax ; jmp qword ptr [rdi]
0x0000000000744601 : mov word ptr [rsi], es ; add byte ptr [rsi + 0x41], dl ; out dx, al ; jmp rax
0x0000000000773fb4 : mov word ptr [rsi], es ; add dword ptr [r15], 3 ; ret
0x00000000007a7918 : mov word ptr [rsi], es ; add dword ptr [rdi], 2 ; push rdx ; ret
0x00000000007b00e8 : mov word ptr [rsi], es ; add dword ptr [rdi], 2 ; ret 0xc0a
0x00000000007ac9d8 : mov word ptr [rsi], es ; add dword ptr [rdi], 2 ; retf 0x70c
0x000000000074b890 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; ret
0x0000000000796764 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; ret 0xc01
0x000000000075d47c : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; ret 0xc02
0x00000000007540f4 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; ret 0xc03
0x00000000007953bc : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; retf
0x000000000075a8cc : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; retf 0xc02
0x000000000076a5ec : mov word ptr [rsi], es ; add qword ptr [rdi], 2 ; ret 0xc0a
0x000000000076a06c : mov word ptr [rsi], es ; push rcx ; add dword ptr [rdi], 3 ; ret
0x0000000000793538 : mov word ptr [rsp], ss ; call rsp
0x00000000005abb06 : mov word ptr ss:[rdx], ss ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b087e : movabs al, byte ptr [0x148b8452b489848] ; ret 0x8b48
0x00000000007dcb9a : movabs al, byte ptr [0x15b6050fc2000f] ; retf 0x60f
0x00000000007d5112 : movabs al, byte ptr [0x15da0515b20015] ; retf
0x000000000064e608 : movabs al, byte ptr [0x15ff0003b301e800] ; retf
0x0000000000604011 : movabs al, byte ptr [0x15ff00085fd8e800] ; ret 0x3fe8
0x00000000006a87e8 : movabs al, byte ptr [0x15ff9a751865394c] ; retf
0x00000000007dd1a8 : movabs al, byte ptr [0x16f50516c00017] ; retf 0x516
0x00000000007cc4b0 : movabs al, byte ptr [0x1a93060ac1001a] ; retf 0x50a
0x00000000007ce247 : movabs al, byte ptr [0x1e09a6000cfb0609] ; retf
0x000000000054ba8f : movabs al, byte ptr [0x28be00134bd0e800] ; retf
0x000000000068f22c : movabs al, byte ptr [0x2948fb8948000000] ; ret
0x000000000054b7d2 : movabs al, byte ptr [0x38be00134e8de800] ; retf 0x6f
0x0000000000607bd3 : movabs al, byte ptr [0x3948e0294cd88948] ; ret
0x00000000007e542a : movabs al, byte ptr [0x3c830529f1003c] ; ret 0x52a
0x000000000071e6f0 : movabs al, byte ptr [0x40000000000062cd] ; retf
0x0000000000721883 : movabs al, byte ptr [0x4e048354d70dd2ee] ; ret 0x3b3
0x00000000006d8e18 : movabs al, byte ptr [0x5000000000006d8d] ; retf 0x9f
0x000000000073a82c : movabs al, byte ptr [0x50000367f0ffdcbb] ; retf -0x24
0x00000000007d15e4 : movabs al, byte ptr [0x501d40002f60501] ; ret 3
0x00000000007e180d : movabs al, byte ptr [0x504b90105a90904] ; ret
0x00000000007f26ba : movabs al, byte ptr [0x504c60004a50504] ; retf
0x00000000007cd538 : movabs al, byte ptr [0x505c20018a11405] ; retf 0x917
0x00000000007ea459 : movabs al, byte ptr [0x50ff60018a2340f] ; ret
0x00000000006f78f0 : movabs al, byte ptr [0x5210] ; ret
0x000000000054a7bf : movabs al, byte ptr [0x5d5b08c483480012] ; ret
0x00000000005ea48a : movabs al, byte ptr [0x5d5b28c48348fffe] ; ret
0x00000000004249fe : movabs al, byte ptr [0x5d5b28c48348ffff] ; ret
0x00000000006242fd : movabs al, byte ptr [0x5d90ffff9e6ae800] ; ret
0x00000000005ca512 : movabs al, byte ptr [0x6348c68941fffffe] ; ret 0x8348
0x0000000000722c7d : movabs al, byte ptr [0x6547ecf37e5ed0d9] ; ret 0x6cad
0x000000000041b228 : movabs al, byte ptr [0x6ce800a02ec0bf00] ; retf
0x0000000000710da0 : movabs al, byte ptr [0x8000000000005ac4] ; ret 0x5a
0x000000000059ba13 : movabs al, byte ptr [0x81e800a04c20bf00] ; ret
0x0000000000578c35 : movabs al, byte ptr [0x8341da2941fffffe] ; ret 0x8501
0x0000000000578c7c : movabs al, byte ptr [0x8348da294cfffffe] ; ret 0x4801
0x0000000000642b23 : movabs al, byte ptr [0x890003ea07e8ffe8] ; ret
0x0000000000642a8d : movabs al, byte ptr [0x890003ea9de8ffe8] ; ret
0x000000000043cb7d : movabs al, byte ptr [0x8904408b10408b48] ; ret 0x8b48
0x000000000040ddaa : movabs al, byte ptr [0x894800000055e800] ; ret
0x000000000040da77 : movabs al, byte ptr [0x89480000009ae800] ; ret
0x000000000041d587 : movabs al, byte ptr [0x8948000000a2e800] ; ret
0x000000000040c755 : movabs al, byte ptr [0x8948000000a6e800] ; ret
0x000000000041c241 : movabs al, byte ptr [0x8948000000aee800] ; ret
0x00000000004c281d : movabs al, byte ptr [0x894800000232e800] ; ret
0x00000000004816d7 : movabs al, byte ptr [0x894800000266e800] ; ret
0x000000000048252e : movabs al, byte ptr [0x8948000003b7e800] ; ret
0x00000000004e125f : movabs al, byte ptr [0x89480000044ae800] ; ret
0x000000000048f9f8 : movabs al, byte ptr [0x8948000004e9e800] ; ret
0x000000000048f7d4 : movabs al, byte ptr [0x8948000005a9e800] ; ret
0x0000000000496235 : movabs al, byte ptr [0x8948000005aae800] ; ret
0x00000000005d2b6d : movabs al, byte ptr [0x8948000005d0e800] ; ret
0x00000000005df9e3 : movabs al, byte ptr [0x894800000600e800] ; ret
0x00000000004c42a8 : movabs al, byte ptr [0x894800000607e800] ; ret
0x0000000000485adf : movabs al, byte ptr [0x894800000668e800] ; ret
0x000000000040f69f : movabs al, byte ptr [0x89480000071ee800] ; ret
0x00000000004c392c : movabs al, byte ptr [0x894800000743e800] ; ret
0x00000000005d6e2d : movabs al, byte ptr [0x894800000790e800] ; ret
0x0000000000492402 : movabs al, byte ptr [0x894800000797e800] ; ret
0x00000000005e426c : movabs al, byte ptr [0x8948000007a7e800] ; ret
0x00000000004c6e1a : movabs al, byte ptr [0x89480000097de800] ; ret
0x000000000041f1bf : movabs al, byte ptr [0x8948000009b2e800] ; ret
0x0000000000492094 : movabs al, byte ptr [0x8948000009bde800] ; ret
0x00000000005d6af3 : movabs al, byte ptr [0x8948000009ece800] ; ret
0x00000000005e3ef7 : movabs al, byte ptr [0x894800000a3ee800] ; ret
0x0000000000491e84 : movabs al, byte ptr [0x894800000a81e800] ; ret
0x000000000048f070 : movabs al, byte ptr [0x894800000ba3e800] ; ret
0x000000000045ddfd : movabs al, byte ptr [0x894800000d8ae800] ; ret 0x8948
0x00000000004c05c7 : movabs al, byte ptr [0x894800000f2ce800] ; ret
0x00000000004bf01f : movabs al, byte ptr [0x894800000f96e800] ; ret
0x00000000004bd952 : movabs al, byte ptr [0x894800000fede800] ; ret
0x00000000005d0342 : movabs al, byte ptr [0x894800001215e800] ; ret
0x00000000005dd093 : movabs al, byte ptr [0x8948000012aee800] ; ret
0x000000000067e7fe : movabs al, byte ptr [0x894800001e61e800] ; ret
0x000000000067c79e : movabs al, byte ptr [0x894800003ec1e800] ; ret
0x00000000004d3828 : movabs al, byte ptr [0x8948000049e7e800] ; ret
0x00000000004d35c0 : movabs al, byte ptr [0x894800004bdbe800] ; ret
0x00000000004d3249 : movabs al, byte ptr [0x894800004bf0e800] ; ret
0x00000000004d305f : movabs al, byte ptr [0x894800004d4ce800] ; ret
0x00000000004d4094 : movabs al, byte ptr [0x894800004e9de800] ; ret
0x00000000004d226b : movabs al, byte ptr [0x894800005930e800] ; ret
0x00000000004d1fec : movabs al, byte ptr [0x894800005a57e800] ; ret
0x00000000004d1e2b : movabs al, byte ptr [0x894800005bc8e800] ; ret
0x00000000004d1c67 : movabs al, byte ptr [0x894800005cfee800] ; ret
0x00000000004d18b4 : movabs al, byte ptr [0x894800006061e800] ; ret
0x00000000004d1089 : movabs al, byte ptr [0x8948000067fee800] ; ret
0x00000000004d08c2 : movabs al, byte ptr [0x894800006ef9e800] ; ret
0x00000000004cff33 : movabs al, byte ptr [0x894800007838e800] ; ret
0x00000000004cd7ad : movabs al, byte ptr [0x89480000b7d4e800] ; ret
0x00000000004cd87e : movabs al, byte ptr [0x89480000b84fe800] ; ret
0x000000000065c314 : movabs al, byte ptr [0x89480002434be800] ; ret
0x000000000065c204 : movabs al, byte ptr [0x89480002445be800] ; ret
0x0000000000658f2e : movabs al, byte ptr [0x894800027731e800] ; ret
0x0000000000646e6e : movabs al, byte ptr [0x8948000397f1e800] ; ret
0x0000000000646d38 : movabs al, byte ptr [0x894800039927e800] ; ret
0x000000000063d0f6 : movabs al, byte ptr [0x894800043569e800] ; ret
0x0000000000658ab5 : movabs al, byte ptr [0x89480004f2e4e900] ; ret
0x000000000062c314 : movabs al, byte ptr [0x89480005434be800] ; ret
0x0000000000629e45 : movabs al, byte ptr [0x89480005681ae800] ; ret
0x000000000060fda9 : movabs al, byte ptr [0x8948000708b6e800] ; ret
0x00000000005b1eea : movabs al, byte ptr [0x8948000ce775e800] ; ret
0x00000000005aad4a : movabs al, byte ptr [0x8948000d5915e800] ; ret
0x00000000005aaa6a : movabs al, byte ptr [0x8948000d5bf5e800] ; ret
0x00000000005a943b : movabs al, byte ptr [0x8948000d7224e800] ; ret
0x00000000005a90bb : movabs al, byte ptr [0x8948000d75a4e800] ; ret
0x00000000005a4e89 : movabs al, byte ptr [0x8948000db7d6e800] ; ret
0x00000000005a170e : movabs al, byte ptr [0x8948000def51e800] ; ret
0x00000000005a12c1 : movabs al, byte ptr [0x8948000df39ee800] ; ret
0x00000000005a0e7b : movabs al, byte ptr [0x8948000df7e4e800] ; ret
0x000000000059ef13 : movabs al, byte ptr [0x8948000e174ce800] ; ret
0x000000000059e8f9 : movabs al, byte ptr [0x8948000e1d66e800] ; ret
0x000000000059e749 : movabs al, byte ptr [0x8948000e1f16e800] ; ret
0x000000000059795e : movabs al, byte ptr [0x8948000e8d01e800] ; ret
0x000000000059744e : movabs al, byte ptr [0x8948000e9211e800] ; ret
0x0000000000590c19 : movabs al, byte ptr [0x8948000efa46e800] ; ret
0x000000000058f98f : movabs al, byte ptr [0x8948000f0cd0e800] ; ret
0x000000000058c6a1 : movabs al, byte ptr [0x8948000f3fbee800] ; ret
0x000000000058c4da : movabs al, byte ptr [0x8948000f4185e800] ; ret
0x000000000058b833 : movabs al, byte ptr [0x8948000f4e2ce800] ; ret
0x0000000000589d57 : movabs al, byte ptr [0x8948000f6908e800] ; ret
0x0000000000589bd1 : movabs al, byte ptr [0x8948000f6a8ee800] ; ret
0x0000000000589a5f : movabs al, byte ptr [0x8948000f6c00e800] ; ret
0x0000000000589907 : movabs al, byte ptr [0x8948000f6d58e800] ; ret
0x00000000005897b9 : movabs al, byte ptr [0x8948000f6ea6e800] ; ret
0x0000000000589677 : movabs al, byte ptr [0x8948000f6fe8e800] ; ret
0x000000000057c2b2 : movabs al, byte ptr [0x8948001043ade800] ; ret
0x0000000000571c59 : movabs al, byte ptr [0x89480010ea06e800] ; ret
0x0000000000570740 : movabs al, byte ptr [0x89480010ff1fe800] ; ret
0x0000000000570329 : movabs al, byte ptr [0x894800110336e800] ; ret
0x00000000005701c1 : movabs al, byte ptr [0x89480011049ee800] ; ret
0x0000000000570071 : movabs al, byte ptr [0x8948001105eee800] ; ret
0x000000000055e2bc : movabs al, byte ptr [0x8948001223a3e800] ; ret
0x000000000055b2d5 : movabs al, byte ptr [0x89480012538ae800] ; ret
0x000000000055a7ea : movabs al, byte ptr [0x894800125e75e800] ; ret
0x000000000055a50a : movabs al, byte ptr [0x894800126155e800] ; ret
0x000000000055920b : movabs al, byte ptr [0x894800127454e800] ; ret
0x0000000000558e8b : movabs al, byte ptr [0x8948001277d4e800] ; ret
0x00000000005927a3 : movabs al, byte ptr [0x89480012df26e800] ; ret
0x000000000053fd84 : movabs al, byte ptr [0x8948001408dbe800] ; ret
0x000000000053cf54 : movabs al, byte ptr [0x89480014370be800] ; ret
0x000000000053cb34 : movabs al, byte ptr [0x894800143b2be800] ; ret
0x000000000053a31a : movabs al, byte ptr [0x894800146345e800] ; ret
0x000000000052f84e : movabs al, byte ptr [0x894800150e11e800] ; ret
0x000000000052f33e : movabs al, byte ptr [0x894800151321e800] ; ret
0x0000000000526e39 : movabs al, byte ptr [0x894800159826e800] ; ret
0x000000000051f199 : movabs al, byte ptr [0x8948001614c6e800] ; ret
0x000000000051dc17 : movabs al, byte ptr [0x894800162a48e800] ; ret
0x000000000051d8ef : movabs al, byte ptr [0x894800162d70e800] ; ret
0x000000000051d797 : movabs al, byte ptr [0x894800162ec8e800] ; ret
0x000000000055c872 : movabs al, byte ptr [0x894800163e57e800] ; ret
0x000000000055c7a3 : movabs al, byte ptr [0x894800163f26e800] ; ret
0x0000000000515bc6 : movabs al, byte ptr [0x89480016aa99e800] ; ret
0x000000000050a9b5 : movabs al, byte ptr [0x894800175caae800] ; ret
0x000000000054572d : movabs al, byte ptr [0x89480017af9ce800] ; ret
0x0000000000544d13 : movabs al, byte ptr [0x89480017b9b6e800] ; ret
0x000000000051294f : movabs al, byte ptr [0x89480019544ae900] ; ret
0x000000000050fff3 : movabs al, byte ptr [0x8948001b06d6e800] ; ret
0x0000000000504d1c : movabs al, byte ptr [0x8948001bb9ade800] ; ret
0x000000000049bb6c : movabs al, byte ptr [0x8948001e4af3e800] ; ret
0x00000000004799f0 : movabs al, byte ptr [0x894800206c6fe800] ; ret
0x000000000046b7f0 : movabs al, byte ptr [0x894800214e6fe800] ; ret
0x0000000000461af0 : movabs al, byte ptr [0x89480021eb6fe800] ; ret
0x0000000000458cf6 : movabs al, byte ptr [0x894800227969e800] ; ret
0x0000000000448042 : movabs al, byte ptr [0x89480023861de800] ; ret
0x000000000043c960 : movabs al, byte ptr [0x894800243cffe800] ; ret
0x000000000050af16 : movabs al, byte ptr [0x894801ea83489eeb] ; ret
0x000000000064a6ca : movabs al, byte ptr [0x894802fa83480008] ; ret
0x0000000000516b86 : movabs al, byte ptr [0x894802fa83480016] ; ret
0x00000000006cb02c : movabs al, byte ptr [0x8948e2894cffff35] ; ret
0x00000000004525c1 : movabs al, byte ptr [0x8948e8294cc36348] ; ret 0x8948
0x00000000004bb6c5 : movabs al, byte ptr [0x8948e8294cc36348] ; ret 0x8d48
0x00000000006b1680 : movabs al, byte ptr [0x8948fffcefdfe800] ; ret
0x00000000006acac1 : movabs al, byte ptr [0x8948fffd3b9ee800] ; ret
0x00000000006a7806 : movabs al, byte ptr [0x8948fffd8e59e800] ; ret
0x00000000006a74d0 : movabs al, byte ptr [0x8948fffd918fe800] ; ret
0x00000000006a692f : movabs al, byte ptr [0x8948fffd9d30e800] ; ret
0x00000000006cb2dc : movabs al, byte ptr [0x8948fffdcacde900] ; ret
0x00000000006a30bd : movabs al, byte ptr [0x8948fffdd5a2e800] ; ret
0x0000000000698b1f : movabs al, byte ptr [0x8948fffe7b40e800] ; ret
0x000000000068c230 : movabs al, byte ptr [0x8948ffff442fe800] ; ret
0x000000000068bda9 : movabs al, byte ptr [0x8948ffff48b6e800] ; ret
0x000000000068a75e : movabs al, byte ptr [0x8948ffff5f01e800] ; ret
0x000000000068a2fd : movabs al, byte ptr [0x8948ffff6362e800] ; ret
0x00000000005df774 : movabs al, byte ptr [0x8948fffffd95e800] ; ret
0x00000000005d2923 : movabs al, byte ptr [0x8948fffffda0e800] ; ret
0x000000000044b396 : movabs al, byte ptr [0x8948fffffdd3e800] ; ret
0x000000000044ea7f : movabs al, byte ptr [0x8948fffffdfae800] ; ret
0x000000000040dd40 : movabs al, byte ptr [0x8948fffffe99e800] ; ret
0x000000000040d9c7 : movabs al, byte ptr [0x8948fffffea2e800] ; ret
0x00000000005da75c : movabs al, byte ptr [0x8948fffffedde800] ; ret
0x00000000005e6488 : movabs al, byte ptr [0x8948fffffee1e800] ; ret
0x00000000005cdbd9 : movabs al, byte ptr [0x8948fffffee8e800] ; ret
0x00000000005d8ebb : movabs al, byte ptr [0x8948fffffeece800] ; ret
0x000000000040c6ab : movabs al, byte ptr [0x8948ffffff26e800] ; ret
0x00000000004c26d0 : movabs al, byte ptr [0x8948ffffff29e800] ; ret
0x000000000048d4aa : movabs al, byte ptr [0x8948ffffff3de800] ; ret
0x000000000040f615 : movabs al, byte ptr [0x8948ffffff4ce800] ; ret
0x00000000004cc9a4 : movabs al, byte ptr [0x8948ffffff63e800] ; ret
0x000000000068c90b : movabs al, byte ptr [0x8948ffffff77e900] ; ret
0x00000000005cf1e0 : movabs al, byte ptr [0x894cc1894c00714f] ; retf
0x0000000000558103 : movabs al, byte ptr [0x89e80012855ce800] ; retf
0x00000000006a0816 : movabs al, byte ptr [0x8c48348c0310000] ; ret
0x000000000054e7b4 : movabs al, byte ptr [0x90be00131eabe800] ; retf 0x6f
0x00000000006d9218 : movabs al, byte ptr [0xa000000000006d91] ; retf 0x9f
0x000000000070c350 : movabs al, byte ptr [0xa0000000000070c3] ; ret
0x000000000072c250 : movabs al, byte ptr [0xa0000000000072c2] ; ret 0x72
0x000000000062b5e3 : movabs al, byte ptr [0xa8be0005507ce800] ; retf
0x0000000000714328 : movabs al, byte ptr [0xaa00000000005e61] ; ret
0x0000000000706650 : movabs al, byte ptr [0xb0000000000057cb] ; retf
0x0000000000720050 : movabs al, byte ptr [0xb0000000000065c1] ; ret 0x65
0x000000000074a14c : movabs al, byte ptr [0xb0000852d0fff8c2] ; ret 0xfff8
0x000000000074a1f4 : movabs al, byte ptr [0xb0000855a8fff8ca] ; retf -8
0x0000000000733c10 : movabs al, byte ptr [0xb8ffcd09f40003cb] ; retf
0x000000000073ee78 : movabs al, byte ptr [0xb8ffe335500004ca] ; retf 4
0x0000000000742148 : movabs al, byte ptr [0xb8ffe827c00005cb] ; retf
0x0000000000748198 : movabs al, byte ptr [0xb8fff5ba800007c3] ; ret
0x00000000007482d4 : movabs al, byte ptr [0xc00007c8f0fff5ca] ; retf -0xb
0x00000000007351b8 : movabs al, byte ptr [0xc0ffcf0cb20001c2] ; ret 1
0x00000000006cb2c7 : movabs al, byte ptr [0xcde800a0d280bf00] ; retf -3
0x0000000000735340 : movabs al, byte ptr [0xd0ffcf6e980001ca] ; retf 1
0x000000000073fbb8 : movabs al, byte ptr [0xd0ffe4ddc000050f] ; syscall
0x0000000000748388 : movabs al, byte ptr [0xd0fff5da000007cb] ; retf
0x000000000062848b : movabs al, byte ptr [0xd8be000581d4e800] ; ret
0x00000000006283b3 : movabs al, byte ptr [0xd8be000582ace800] ; ret
0x00000000006aa948 : movabs al, byte ptr [0xd8befffd5d17e800] ; ret
0x000000000073d72c : movabs al, byte ptr [0xe000045058ffe0ff] ; jmp rax
0x0000000000741f84 : movabs al, byte ptr [0xe00005c1c8ffe7cb] ; retf
0x000000000054e78c : movabs al, byte ptr [0xe0be00131ed3e800] ; retf 0x6f
0x000000000054bc20 : movabs al, byte ptr [0xe0be00134a3fe800] ; retf
0x000000000058880e : movabs al, byte ptr [0xe7894c007070c0ba] ; call rax
0x0000000000588794 : movabs al, byte ptr [0xe7894c00708140ba] ; call rax
0x000000000070c710 : movabs al, byte ptr [0xe8000000000070c2] ; ret
0x000000000056a6a1 : movabs al, byte ptr [0xe808247c8d480016] ; ret 0xffed
0x000000000051ed20 : movabs al, byte ptr [0xe818438948006f76] ; ret
0x000000000065b911 : movabs al, byte ptr [0xe850708d48fffffc] ; ret 0x6e1
0x000000000057dd79 : movabs al, byte ptr [0xe8de8948e7894c00] ; retf 0x1082
0x00000000007da17b : movabs byte ptr [0x201a60102cd0401], al ; retf
0x0000000000668f8a : movabs byte ptr [0x24046948ffd9ac], al ; retf 0x3b9a
0x000000000065ea42 : movabs byte ptr [0x291024548b000001], al ; ret 0x8b41
0x0000000000574491 : movabs byte ptr [0x33e808408d4c00a0], al ; ret 0x14
0x00000000007d5b77 : movabs byte ptr [0x502bc0502d80502], al ; ret 3
0x00000000007ed104 : movabs byte ptr [0x511bd0011c70511], al ; ret 0x11
0x00000000007f726e : movabs byte ptr [0x535b40035be0535], al ; ret
0x0000000000519265 : movabs byte ptr [0x5c415d5b10c48348], al ; ret
0x0000000000578687 : movabs byte ptr [0x5d5b08c483480048], al ; jmp rax
0x0000000000769c59 : movabs byte ptr [0x60040000011fffc9], al ; retf 0x7c
0x00000000007bfcef : movabs byte ptr [0x713b3050aa50014], al ; retf
0x00000000005742b2 : movabs byte ptr [0x834830d26b4800a0], al ; ret 0xe808
0x000000000062e9ee : movabs byte ptr [0x8348f8e2834800a0], al ; ret 0xe940
0x0000000000642961 : movabs byte ptr [0x890003ebc9e8ffe8], al ; ret
0x00000000006428cb : movabs byte ptr [0x890003ec5fe8ffe8], al ; ret
0x0000000000647068 : movabs byte ptr [0x894804fa83480003], al ; ret
0x000000000067a4b5 : movabs byte ptr [0x894805fa83480005], al ; ret
0x0000000000637041 : movabs byte ptr [0x894807fa83480004], al ; ret
0x0000000000646124 : movabs byte ptr [0x894858fa8348ffff], al ; ret
0x000000000063d744 : movabs byte ptr [0x8948e28949000434], al ; ret
0x0000000000722fdb : movabs byte ptr [0xa8af4dcb95e811c0], al ; retf -0x3a71
0x0000000000737a2c : movabs byte ptr [0xc600028430ffd3c3], al ; ret
0x0000000000620bb4 : movabs byte ptr [0xc90009fb14e800a0], al ; ret
0x000000000061fb6b : movabs byte ptr [0xc9000a0e2de800a0], al ; ret
0x000000000061f01d : movabs byte ptr [0xc9000a197be800a0], al ; ret
0x000000000061eacd : movabs byte ptr [0xc9000a1ecbe800a0], al ; ret
0x000000000061ea8f : movabs byte ptr [0xc9000a1f09e800a0], al ; ret
0x000000000061e61a : movabs byte ptr [0xc9000a20aee800a0], al ; ret
0x00000000005e66a0 : movabs byte ptr [0xc9000da028e800a0], al ; ret
0x00000000005e63b6 : movabs byte ptr [0xc9000da312e800a0], al ; ret
0x00000000005e4a60 : movabs byte ptr [0xc9000dbc68e800a0], al ; ret
0x00000000005e49d2 : movabs byte ptr [0xc9000dbcf6e800a0], al ; ret
0x00000000005e4982 : movabs byte ptr [0xc9000dbd46e800a0], al ; ret
0x00000000005e48f4 : movabs byte ptr [0xc9000dbdd4e800a0], al ; ret
0x00000000005e4adb : movabs byte ptr [0xc9000dbebde800a0], al ; ret
0x00000000005e4a9d : movabs byte ptr [0xc9000dbefbe800a0], al ; ret
0x00000000005e4a0f : movabs byte ptr [0xc9000dbf89e800a0], al ; ret
0x00000000005e4931 : movabs byte ptr [0xc9000dc067e800a0], al ; ret
0x00000000005e3abf : movabs byte ptr [0xc9000dced9e800a0], al ; ret
0x00000000005e0030 : movabs byte ptr [0xc9000e0698e800a0], al ; ret
0x00000000005e00ab : movabs byte ptr [0xc9000e08ede800a0], al ; ret
0x00000000005e006d : movabs byte ptr [0xc9000e092be800a0], al ; ret
0x00000000005df556 : movabs byte ptr [0xc9000e1172e800a0], al ; ret
0x00000000005de38e : movabs byte ptr [0xc9000e233ae800a0], al ; ret
0x00000000005de5ff : movabs byte ptr [0xc9000e2399e800a0], al ; ret
0x00000000005de5c1 : movabs byte ptr [0xc9000e23d7e800a0], al ; ret
0x00000000005dc482 : movabs byte ptr [0xc9000e4246e800a0], al ; ret
0x00000000005dbb23 : movabs byte ptr [0xc9000e4e75e800a0], al ; ret
0x00000000005da686 : movabs byte ptr [0xc9000e6042e800a0], al ; ret
0x00000000005d90d4 : movabs byte ptr [0xc9000e75f4e800a0], al ; ret
0x00000000005d8df4 : movabs byte ptr [0xc9000e78d4e800a0], al ; ret
0x00000000005d760a : movabs byte ptr [0xc9000e90bee800a0], al ; ret
0x00000000005d757c : movabs byte ptr [0xc9000e914ce800a0], al ; ret
0x00000000005d752c : movabs byte ptr [0xc9000e919ce800a0], al ; ret
0x00000000005d749e : movabs byte ptr [0xc9000e922ae800a0], al ; ret
0x00000000005d7685 : movabs byte ptr [0xc9000e9313e800a0], al ; ret
0x00000000005d7647 : movabs byte ptr [0xc9000e9351e800a0], al ; ret
0x00000000005d75b9 : movabs byte ptr [0xc9000e93dfe800a0], al ; ret
0x00000000005d74db : movabs byte ptr [0xc9000e94bde800a0], al ; ret
0x00000000005d6701 : movabs byte ptr [0xc9000ea297e800a0], al ; ret
0x00000000005d318a : movabs byte ptr [0xc9000ed53ee800a0], al ; ret
0x00000000005d3205 : movabs byte ptr [0xc9000ed793e800a0], al ; ret
0x00000000005d31c7 : movabs byte ptr [0xc9000ed7d1e800a0], al ; ret
0x00000000005d2710 : movabs byte ptr [0xc9000edfb8e800a0], al ; ret
0x00000000005d15a4 : movabs byte ptr [0xc9000ef124e800a0], al ; ret
0x00000000005d1815 : movabs byte ptr [0xc9000ef183e800a0], al ; ret
0x00000000005d17d7 : movabs byte ptr [0xc9000ef1c1e800a0], al ; ret
0x00000000005cf7fc : movabs byte ptr [0xc9000f0ecce800a0], al ; ret
0x00000000005ceecf : movabs byte ptr [0xc9000f1ac9e800a0], al ; ret
0x00000000005cdb0e : movabs byte ptr [0xc9000f2bbae800a0], al ; ret
0x00000000004f00f5 : movabs byte ptr [0xc9001d08a3e800a0], al ; ret
0x00000000004f00b7 : movabs byte ptr [0xc9001d08e1e800a0], al ; ret
0x00000000004f0079 : movabs byte ptr [0xc9001d091fe800a0], al ; ret
0x00000000004e16f6 : movabs byte ptr [0xc9001defd2e800a0], al ; ret
0x00000000004d911a : movabs byte ptr [0xc9001e75aee800a0], al ; ret
0x00000000004d8fce : movabs byte ptr [0xc9001e76fae800a0], al ; ret
0x00000000004d8f7e : movabs byte ptr [0xc9001e774ae800a0], al ; ret
0x00000000004d825c : movabs byte ptr [0xc9001e846ce800a0], al ; ret
0x00000000004d81e8 : movabs byte ptr [0xc9001e84e0e800a0], al ; ret
0x00000000004d7e86 : movabs byte ptr [0xc9001e8842e800a0], al ; ret
0x00000000004d7df8 : movabs byte ptr [0xc9001e88d0e800a0], al ; ret
0x00000000004d7be8 : movabs byte ptr [0xc9001e8ae0e800a0], al ; ret
0x00000000004d7e35 : movabs byte ptr [0xc9001e8b63e800a0], al ; ret
0x00000000004d7a90 : movabs byte ptr [0xc9001e8c38e800a0], al ; ret
0x00000000004d7a40 : movabs byte ptr [0xc9001e8c88e800a0], al ; ret
0x00000000004d79b2 : movabs byte ptr [0xc9001e8d16e800a0], al ; ret
0x00000000004d7962 : movabs byte ptr [0xc9001e8d66e800a0], al ; ret
0x00000000004d78d4 : movabs byte ptr [0xc9001e8df4e800a0], al ; ret
0x00000000004d7808 : movabs byte ptr [0xc9001e8ec0e800a0], al ; ret
0x00000000004d77b8 : movabs byte ptr [0xc9001e8f10e800a0], al ; ret
0x00000000004d79ef : movabs byte ptr [0xc9001e8fa9e800a0], al ; ret
0x00000000004d7911 : movabs byte ptr [0xc9001e9087e800a0], al ; ret
0x00000000004d7883 : movabs byte ptr [0xc9001e9115e800a0], al ; ret
0x00000000004d7845 : movabs byte ptr [0xc9001e9153e800a0], al ; ret
0x00000000004cca10 : movabs byte ptr [0xc9001f3cb8e800a0], al ; ret
0x00000000004cc954 : movabs byte ptr [0xc9001f3d74e800a0], al ; ret
0x00000000004c9d27 : movabs byte ptr [0xc9001f6c71e800a0], al ; ret
0x00000000004c9ce9 : movabs byte ptr [0xc9001f6cafe800a0], al ; ret
0x00000000004c9cab : movabs byte ptr [0xc9001f6cede800a0], al ; ret
0x00000000004c94e3 : movabs byte ptr [0xc9001f74b5e800a0], al ; ret
0x00000000004c92b3 : movabs byte ptr [0xc9001f76e5e800a0], al ; ret
0x00000000004c77e4 : movabs byte ptr [0xc9001f8ee4e800a0], al ; ret
0x00000000004c48fc : movabs byte ptr [0xc9001fbdcce800a0], al ; ret
0x00000000004c40bc : movabs byte ptr [0xc9001fc60ce800a0], al ; ret
0x00000000004c406c : movabs byte ptr [0xc9001fc65ce800a0], al ; ret
0x00000000004c2a9c : movabs byte ptr [0xc9001fdc2ce800a0], al ; ret
0x00000000004c2646 : movabs byte ptr [0xc9001fe082e800a0], al ; ret
0x00000000004c1540 : movabs byte ptr [0xc9001ff188e800a0], al ; ret
0x00000000004c0528 : movabs byte ptr [0xc9002001a0e800a0], al ; ret
0x00000000004c0002 : movabs byte ptr [0xc9002006c6e800a0], al ; ret
0x00000000004be98c : movabs byte ptr [0xc900201d3ce800a0], al ; ret
0x00000000004a8d62 : movabs byte ptr [0xc900217c36e800a0], al ; ret
0x0000000000499f33 : movabs byte ptr [0xc900226a65e800a0], al ; ret
0x000000000049971c : movabs byte ptr [0xc900226face800a0], al ; ret
0x0000000000499552 : movabs byte ptr [0xc900227176e800a0], al ; ret
0x0000000000499502 : movabs byte ptr [0xc9002271c6e800a0], al ; ret
0x00000000004994b2 : movabs byte ptr [0xc900227216e800a0], al ; ret
0x0000000000499364 : movabs byte ptr [0xc900227364e800a0], al ; ret
0x0000000000497208 : movabs byte ptr [0xc9002294c0e800a0], al ; ret
0x000000000049682c : movabs byte ptr [0xc900229e9ce800a0], al ; ret
0x0000000000493423 : movabs byte ptr [0xc90022d575e800a0], al ; ret
0x0000000000492be6 : movabs byte ptr [0xc90022dae2e800a0], al ; ret
0x0000000000492a9e : movabs byte ptr [0xc90022dc2ae800a0], al ; ret
0x0000000000492952 : movabs byte ptr [0xc90022dd76e800a0], al ; ret
0x000000000049169a : movabs byte ptr [0xc90022f02ee800a0], al ; ret
0x0000000000490885 : movabs byte ptr [0xc900230113e800a0], al ; ret
0x00000000004904c3 : movabs byte ptr [0xc9002304d5e800a0], al ; ret
0x000000000048ff2e : movabs byte ptr [0xc90023079ae800a0], al ; ret
0x000000000048fdca : movabs byte ptr [0xc9002308fee800a0], al ; ret
0x000000000048fc60 : movabs byte ptr [0xc900230a68e800a0], al ; ret
0x000000000048dab2 : movabs byte ptr [0xc900232c16e800a0], al ; ret
0x000000000048d434 : movabs byte ptr [0xc900233294e800a0], al ; ret
0x000000000048d3e4 : movabs byte ptr [0xc9002332e4e800a0], al ; ret
0x000000000048c30e : movabs byte ptr [0xc9002343bae800a0], al ; ret
0x0000000000486194 : movabs byte ptr [0xc90023a534e800a0], al ; ret
0x00000000004862ed : movabs byte ptr [0xc90023a6abe800a0], al ; ret
0x00000000004862af : movabs byte ptr [0xc90023a6e9e800a0], al ; ret
0x0000000000486271 : movabs byte ptr [0xc90023a727e800a0], al ; ret
0x0000000000486233 : movabs byte ptr [0xc90023a765e800a0], al ; ret
0x00000000004861f5 : movabs byte ptr [0xc90023a7a3e800a0], al ; ret
0x0000000000483a51 : movabs byte ptr [0xc90023cf47e800a0], al ; ret
0x0000000000482932 : movabs byte ptr [0xc90023dd96e800a0], al ; ret
0x000000000048198a : movabs byte ptr [0xc90023ed3ee800a0], al ; ret
0x0000000000468835 : movabs byte ptr [0xc900258163e800a0], al ; ret
0x000000000045f955 : movabs byte ptr [0xc900261043e800a0], al ; ret
0x000000000045f654 : movabs byte ptr [0xc900261074e800a0], al ; ret
0x000000000045f603 : movabs byte ptr [0xc900261395e800a0], al ; ret
0x000000000045f1de : movabs byte ptr [0xc9002614eae800a0], al ; ret
0x000000000045ebd4 : movabs byte ptr [0xc900261af4e800a0], al ; ret
0x000000000045c91b : movabs byte ptr [0xc90026407de800a0], al ; ret
0x000000000045c5e0 : movabs byte ptr [0xc9002640e8e800a0], al ; ret
0x000000000045c269 : movabs byte ptr [0xc90026472fe800a0], al ; ret
0x000000000045be30 : movabs byte ptr [0xc900264898e800a0], al ; ret
0x000000000045bd25 : movabs byte ptr [0xc900264c73e800a0], al ; ret
0x000000000045b843 : movabs byte ptr [0xc900265155e800a0], al ; ret
0x000000000045a98b : movabs byte ptr [0xc90026600de800a0], al ; ret
0x000000000045a632 : movabs byte ptr [0xc900266096e800a0], al ; ret
0x000000000044f099 : movabs byte ptr [0xc9002718ffe800a0], al ; ret
0x000000000044ed6a : movabs byte ptr [0xc90027195ee800a0], al ; ret
0x000000000044ed19 : movabs byte ptr [0xc900271c7fe800a0], al ; ret
0x000000000044e8c6 : movabs byte ptr [0xc900271e02e800a0], al ; ret
0x000000000044e2bc : movabs byte ptr [0xc90027240ce800a0], al ; ret
0x000000000044bd05 : movabs byte ptr [0xc900274c93e800a0], al ; ret
0x000000000044b99a : movabs byte ptr [0xc900274d2ee800a0], al ; ret
0x000000000044b623 : movabs byte ptr [0xc900275375e800a0], al ; ret
0x000000000044b1b6 : movabs byte ptr [0xc900275512e800a0], al ; ret
0x000000000044b0ab : movabs byte ptr [0xc9002758ede800a0], al ; ret
0x000000000044abad : movabs byte ptr [0xc900275debe800a0], al ; ret
0x0000000000449d09 : movabs byte ptr [0xc900276c8fe800a0], al ; ret
0x000000000044997e : movabs byte ptr [0xc900276d4ae800a0], al ; ret
0x000000000042e8f0 : movabs byte ptr [0xc900291dd8e800a0], al ; ret
0x000000000042e094 : movabs byte ptr [0xc900292634e800a0], al ; ret
0x000000000042c932 : movabs byte ptr [0xc900293d96e800a0], al ; ret
0x000000000042c70c : movabs byte ptr [0xc900293fbce800a0], al ; ret
0x000000000042c644 : movabs byte ptr [0xc900294084e800a0], al ; ret
0x000000000042c39c : movabs byte ptr [0xc90029432ce800a0], al ; ret
0x000000000042c1b7 : movabs byte ptr [0xc9002947e1e800a0], al ; ret
0x000000000042b32e : movabs byte ptr [0xc90029539ae800a0], al ; ret
0x000000000042b104 : movabs byte ptr [0xc9002955c4e800a0], al ; ret
0x000000000041fbbe : movabs byte ptr [0xc9002a0b0ae800a0], al ; ret
0x000000000041f0ce : movabs byte ptr [0xc9002a15fae800a0], al ; ret
0x000000000041d964 : movabs byte ptr [0xc9002a2d64e800a0], al ; ret
0x000000000041d73e : movabs byte ptr [0xc9002a2f8ae800a0], al ; ret
0x000000000041d676 : movabs byte ptr [0xc9002a3052e800a0], al ; ret
0x000000000041d3be : movabs byte ptr [0xc9002a330ae800a0], al ; ret
0x000000000041d1d9 : movabs byte ptr [0xc9002a37bfe800a0], al ; ret
0x000000000041c33c : movabs byte ptr [0xc9002a438ce800a0], al ; ret
0x000000000041c102 : movabs byte ptr [0xc9002a45c6e800a0], al ; ret
0x000000000040fe0a : movabs byte ptr [0xc9002b08bee800a0], al ; ret
0x000000000040f5ae : movabs byte ptr [0xc9002b111ae800a0], al ; ret
0x000000000040de4c : movabs byte ptr [0xc9002b287ce800a0], al ; ret
0x000000000040dc26 : movabs byte ptr [0xc9002b2aa2e800a0], al ; ret
0x000000000040db5e : movabs byte ptr [0xc9002b2b6ae800a0], al ; ret
0x000000000040d8b6 : movabs byte ptr [0xc9002b2e12e800a0], al ; ret
0x000000000040d6d1 : movabs byte ptr [0xc9002b32c7e800a0], al ; ret
0x000000000040c848 : movabs byte ptr [0xc9002b3e80e800a0], al ; ret
0x000000000040c61e : movabs byte ptr [0xc9002b40aae800a0], al ; ret
0x000000000073655c : movabs byte ptr [0xce00022280ffd1c3], al ; ret
0x0000000000738eec : movabs byte ptr [0xe20002e758ffd6ff], al ; call rsi
0x00000000007e5ef0 : movabs byte ptr [0xe60000300faa000f], al ; syscall
0x0000000000536ec8 : movabs byte ptr [0xe800a04140bf00a0], al ; retf
0x0000000000547ad0 : movabs byte ptr [0xe800a043a0bf00a0], al ; ret
0x00000000006395c9 : movabs byte ptr [0xe800a08ba0bf00a0], al ; retf 0x6e7
0x00000000006cd1ba : movabs byte ptr [0xf62975c085ffd368], al ; ret
0x00000000007f0356 : movabs dword ptr [0x105a10702bb0105], eax ; ret 0xb02
0x00000000007ee6b0 : movabs dword ptr [0x2b30502840002], eax ; ret
0x00000000007e0ed5 : movabs dword ptr [0x4db0504b30003], eax ; ret 0x504
0x00000000007d9b81 : movabs dword ptr [0x506ba0321c01406], eax ; retf
0x00000000005b8529 : movabs dword ptr [0x5d5b08c483480044], eax ; jmp rax
0x000000000045757c : movabs dword ptr [0x5d5b18c483480024], eax ; ret
0x00000000007ce09c : movabs dword ptr [0x60fd50018cf060f], eax ; retf 0x18
0x00000000005f1759 : movabs dword ptr [0x850f01fb83000cd5], eax ; retf 2
0x0000000000642835 : movabs dword ptr [0x890003ecf5e8ffe8], eax ; ret
0x00000000005233e9 : movabs dword ptr [0x8948c08548fffffd], eax ; ret 0xb8
0x000000000042c129 : movabs dword ptr [0x8948c18948002924], eax ; retf -0x74b8
0x00000000006985b9 : movabs dword ptr [0x89fffe8f71e80036], eax ; ret
0x00000000007f3f2a : movabs dword ptr [0xa30501c2cb00019c], eax ; ret
0x0000000000677e24 : movabs dword ptr [0xaf0f49007009d32d], eax ; ret
0x00000000007d45dd : movabs dword ptr [0xb70000050f85000f], eax ; syscall
0x00000000007f3f7b : movabs dword ptr [0xdb0501c4fe00019c], eax ; ret
0x00000000007ee673 : movabs dword ptr [0xfc0000000fdb0010], eax ; syscall
0x00000000007e65dc : movabs eax, dword ptr [0x10940608f00712] ; ret
0x000000000067fbe7 : movabs eax, dword ptr [0x40478b4890000001] ; ret
0x00000000007e1888 : movabs eax, dword ptr [0x4cf0504b30004] ; ret
0x00000000007eebb5 : movabs eax, dword ptr [0x502d50008dc2c02] ; ret 8
0x00000000007f6394 : movabs eax, dword ptr [0x511da0b209b1a11] ; ret
0x00000000007ed836 : movabs eax, dword ptr [0x52dae002db8052d] ; ret 0x2d
0x00000000005ea510 : movabs eax, dword ptr [0x5d5b28c48348fffe] ; ret
0x0000000000424a84 : movabs eax, dword ptr [0x5d5b28c48348ffff] ; ret
0x00000000007e4bc2 : movabs eax, dword ptr [0x601a90501d00501] ; retf
0x0000000000510e20 : movabs eax, dword ptr [0x834801c183000000] ; ret 0x3901
0x0000000000456bff : movabs eax, dword ptr [0x870f0ef883005a61] ; ret
0x00000000005947ad : movabs eax, dword ptr [0x87e8df8948000eb3] ; call qword ptr [rbx]
0x00000000006429f7 : movabs eax, dword ptr [0x890003eb33e8ffe8] ; ret
0x00000000006bb6c8 : movabs eax, dword ptr [0x8941f0394400000c] ; ret 0xe37e
0x000000000053444f : movabs eax, dword ptr [0x894801243c800018] ; ret
0x000000000066f034 : movabs eax, dword ptr [0x89481c244c8bffff] ; ret
0x00000000006468fd : movabs eax, dword ptr [0x89485efa83480003] ; ret
0x000000000058a5ef : movabs eax, dword ptr [0x89488feb91eb0014] ; ret
0x000000000058a5d6 : movabs eax, dword ptr [0x8948a8ebaaeb0014] ; ret
0x0000000000544f6b : movabs eax, dword ptr [0x8948c08548ffffdd] ; ret 0xb8
0x000000000040d22b : movabs eax, dword ptr [0x8948c18948002b13] ; retf -0x74b8
0x00000000005566cb : movabs eax, dword ptr [0x915ffc3894882eb] ; ret 0x4a
0x0000000000617beb : movabs eax, dword ptr [0xc9901fe8c100089e] ; ret
0x00000000007dd954 : movabs eax, dword ptr [0xca6050bc1000d] ; retf
0x00000000006a4b9c : movapd xmm0, xmm1 ; add eax, 1 ; jne 0x6a4b99 ; ret
0x00000000006a4e59 : movapd xmm0, xmm1 ; add rsp, 0x18 ; ret
0x0000000000681fe6 : movapd xmm0, xmm1 ; add rsp, 0x28 ; ret
0x00000000006825bc : movapd xmm0, xmm1 ; add rsp, 0x38 ; ret
0x000000000068282c : movapd xmm0, xmm1 ; add rsp, 0x48 ; ret
0x00000000006a5138 : movapd xmm0, xmm1 ; jmp 0x6a5106
0x00000000006a4a51 : movapd xmm0, xmm1 ; ret
0x00000000006a51c6 : movapd xmm0, xmm2 ; add rsp, 0x18 ; ret
0x00000000006820ef : movapd xmm0, xmm2 ; add rsp, 8 ; ret
0x00000000006a4fba : movapd xmm0, xmm2 ; ret
0x00000000006821ec : movapd xmm0, xmm3 ; add rsp, 0x18 ; ret
0x0000000000683d18 : movapd xmm0, xmm3 ; add rsp, 0x48 ; ret
0x0000000000683740 : movapd xmm0, xmm6 ; add rsp, 0x28 ; ret
0x00000000006a4e68 : movapd xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x00000000006a4fc6 : movapd xmm2, xmm0 ; movapd xmm0, xmm2 ; ret
0x00000000006a4b9d : movaps xmm0, xmm1 ; add eax, 1 ; jne 0x6a4b98 ; ret
0x00000000006a4e5a : movaps xmm0, xmm1 ; add rsp, 0x18 ; ret
0x0000000000681fe7 : movaps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x00000000006825bd : movaps xmm0, xmm1 ; add rsp, 0x38 ; ret
0x000000000068282d : movaps xmm0, xmm1 ; add rsp, 0x48 ; ret
0x00000000006a5139 : movaps xmm0, xmm1 ; jmp 0x6a5105
0x00000000006a4a52 : movaps xmm0, xmm1 ; ret
0x00000000006a51c7 : movaps xmm0, xmm2 ; add rsp, 0x18 ; ret
0x00000000006820f0 : movaps xmm0, xmm2 ; add rsp, 8 ; ret
0x00000000006a4fbb : movaps xmm0, xmm2 ; ret
0x00000000006821ed : movaps xmm0, xmm3 ; add rsp, 0x18 ; ret
0x0000000000683d19 : movaps xmm0, xmm3 ; add rsp, 0x48 ; ret
0x0000000000683741 : movaps xmm0, xmm6 ; add rsp, 0x28 ; ret
0x00000000006a4e69 : movaps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x00000000006a4a79 : movaps xmm1, xmm0 ; xor eax, eax ; movapd xmm0, xmm1 ; ret
0x00000000006a4fc7 : movaps xmm2, xmm0 ; movapd xmm0, xmm2 ; ret
0x000000000078f7ac : movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0 ; nop ; add ah, dl ; jmp qword ptr [rdx]
0x000000000078ffac : movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0 ; rol byte ptr [rbp - 0x1e], 1 ; jmp qword ptr [rbx]
0x000000000074b9ec : movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rsi], al ; stc ; retf
0x0000000000775bd5 : movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rax] ; clc ; adc al, 0xdc ; call rdi
0x0000000000661cbe : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x2944
0x000000000064b19f : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000007faac1 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; ret 0x1a3
0x00000000007d5663 : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0x7028400 ; ret 5
0x00000000004c5993 : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0x8fbf0000 ; ret 0x6e
0x00000000007a5bb5 : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0xeb6b6800 ; call qword ptr [rax]
0x00000000007a5b9d : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0xeb6b7000 ; call qword ptr [rax]
0x00000000007a5bfd : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0xeb6b8000 ; jmp qword ptr [rax]
0x000000000073b491 : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, dword ptr [rax] ; push rax ; ret 0xffdd
0x00000000007cf214 : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, dword ptr [rsi] ; retf
0x00000000007a05ec : movsb byte ptr [rdi], byte ptr [rsi] ; add rax, -0x17770000 ; jmp rsi
0x0000000000565049 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x70 ; add byte ptr [rcx], dh ; shr al, 0xa6 ; ret 0x11
0x000000000056473c : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x70 ; add byte ptr [rcx], dh ; shr al, 0xb3 ; retf
0x000000000076d9ac : movsb byte ptr [rdi], byte ptr [rsi] ; and al, byte ptr [rdx] ; add byte ptr [rax + 0x67], bl ; leave ; call qword ptr [rdx]
0x0000000000562c8a : movsb byte ptr [rdi], byte ptr [rsi] ; call 0xffffffffc3df2ca6
0x0000000000746175 : movsb byte ptr [rdi], byte ptr [rsi] ; call rax
0x00000000007650ec : movsb byte ptr [rdi], byte ptr [rsi] ; cdq ; add dword ptr [rax], eax ; retf -0x2ab0
0x00000000007aafac : movsb byte ptr [rdi], byte ptr [rsi] ; clc ; add eax, 0xece29000 ; jmp qword ptr [rax]
0x000000000055ba0d : movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; outsd dx, dword ptr [rsi] ; add byte ptr [rax + 0x29], cl ; retf -0x7eb8
0x00000000006783c8 : movsb byte ptr [rdi], byte ptr [rsi] ; cmp byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000736e14 : movsb byte ptr [rdi], byte ptr [rsi] ; cmp edx, edx ; call qword ptr [rax]
0x0000000000647e98 : movsb byte ptr [rdi], byte ptr [rsi] ; enter 8, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000074725d : movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; call qword ptr [rax]
0x0000000000643887 : movsb byte ptr [rdi], byte ptr [rsi] ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000785088 : movsb byte ptr [rdi], byte ptr [rsi] ; inc edi ; call qword ptr [rdx]
0x00000000007552a0 : movsb byte ptr [rdi], byte ptr [rsi] ; insb byte ptr [rdi], dx ; iretd ; call rsp
0x00000000006d6b0b : movsb byte ptr [rdi], byte ptr [rsi] ; ja 0x6d6b3c ; xchg eax, ebx ; retf 0x69bc
0x000000000075fee8 : movsb byte ptr [rdi], byte ptr [rsi] ; je 0x75fec1 ; jmp qword ptr [rbx]
0x00000000007434ac : movsb byte ptr [rdi], byte ptr [rsi] ; jg 0x74349d ; call qword ptr [rax]
0x00000000007b34ac : movsb byte ptr [rdi], byte ptr [rsi] ; jge 0x7b34bc ; add al, ah ; sbb bh, ch ; jmp qword ptr [rcx]
0x00000000007a40b9 : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x7d0bc1
0x00000000005a90be : movsb byte ptr [rdi], byte ptr [rsi] ; jne 0x5a90d4 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007628ac : movsb byte ptr [rdi], byte ptr [rsi] ; jno 0x7628b7 ; add byte ptr [rbp + rcx*4 - 0x2c], bl ; jmp qword ptr [rbx]
0x00000000007527ac : movsb byte ptr [rdi], byte ptr [rsi] ; jo 0x7527b6 ; add byte ptr [rdx + rcx*2 - 0x32], ch ; jmp qword ptr [rbx]
0x00000000007627ac : movsb byte ptr [rdi], byte ptr [rsi] ; jo 0x7627b7 ; add byte ptr [rdx], bl ; jl 0x76278e ; call qword ptr [rdx]
0x00000000007980ac : movsb byte ptr [rdi], byte ptr [rsi] ; leave ; add al, 0 ; rcl bh, 0xe5 ; jmp qword ptr [rbx]
0x00000000007b67ac : movsb byte ptr [rdi], byte ptr [rsi] ; mov al, 6 ; add byte ptr [rax], ah ; mov ch, bh ; call qword ptr [rbx]
0x0000000000423038 : movsb byte ptr [rdi], byte ptr [rsi] ; mov bh, bh ; dec ecx ; ret
0x00000000005f3208 : movsb byte ptr [rdi], byte ptr [rsi] ; mov dh, 0xc ; add cl, cl ; ret
0x0000000000757eac : movsb byte ptr [rdi], byte ptr [rsi] ; mov dword ptr [rax], 0xcfe2c000 ; call qword ptr [rcx]
0x00000000006d6a8c : movsb byte ptr [rdi], byte ptr [rsi] ; mov dword ptr [rbx - 0xa], ecx ; push 0x1cf1daf2 ; retf -0x903
0x00000000007572ec : movsb byte ptr [rdi], byte ptr [rsi] ; mov ebx, 0xcea80000 ; iretd ; call rcx
0x000000000060edc8 : movsb byte ptr [rdi], byte ptr [rsi] ; mov edi, 0x89480007 ; ret
0x0000000000678b48 : movsb byte ptr [rdi], byte ptr [rsi] ; nop dword ptr [rax] ; ret
0x000000000074b451 : movsb byte ptr [rdi], byte ptr [rsi] ; or byte ptr [rax], al ; adc dl, dl ; stc ; call qword ptr [rax]
0x000000000063a283 : movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007f6245 : movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rip - 0x56fcef29], eax ; or dword ptr [rsi], eax ; retf 0x10
0x00000000005f371e : movsb byte ptr [rdi], byte ptr [rsi] ; out 0xff, al ; dec dword ptr [rax - 0x77] ; ret
0x00000000006a6098 : movsb byte ptr [rdi], byte ptr [rsi] ; out 2, al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000744bc5 : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; jmp qword ptr [rax]
0x0000000000744bb5 : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; jmp rax
0x00000000007334e8 : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; stc ; jmp rsp
0x000000000053ea00 : movsb byte ptr [rdi], byte ptr [rsi] ; outsd dx, dword ptr [rsi] ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000053eba9 : movsb byte ptr [rdi], byte ptr [rsi] ; outsd dx, dword ptr [rsi] ; add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x000000000053ded1 : movsb byte ptr [rdi], byte ptr [rsi] ; outsd dx, dword ptr [rsi] ; add byte ptr [rdi], cl ; ret 0x6b9
0x000000000074616d : movsb byte ptr [rdi], byte ptr [rsi] ; push qword ptr [rax - 0xffff8d9] ; movsb byte ptr [rdi], byte ptr [rsi] ; call rax
0x00000000007366b4 : movsb byte ptr [rdi], byte ptr [rsi] ; rcl ecx, 1 ; jmp qword ptr [rax]
0x000000000073a584 : movsb byte ptr [rdi], byte ptr [rsi] ; rcr bl, cl ; call rax
0x00000000004347d1 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000721bb4 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x1ba9
0x000000000040aa05 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4803
0x0000000000436640 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x5c
0x00000000007693d9 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x7c
0x00000000005a481c : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xd
0x00000000006438a8 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 3
0x00000000007a79ac : movsb byte ptr [rdi], byte ptr [rsi] ; ret 5
0x00000000007582ac : movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000005c5e38 : movsb byte ptr [rdi], byte ptr [rsi] ; retf 0x43
0x00000000006ea090 : movsb byte ptr [rdi], byte ptr [rsi] ; retf 0x49
0x00000000007981ac : movsb byte ptr [rdi], byte ptr [rsi] ; retf 4
0x0000000000798aac : movsb byte ptr [rdi], byte ptr [rsi] ; rol dword ptr [rax + rax], cl ; nop ; add al, 0xe6 ; jmp qword ptr [rax]
0x0000000000643f52 : movsb byte ptr [rdi], byte ptr [rsi] ; rol dword ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000738a15 : movsb byte ptr [rdi], byte ptr [rsi] ; salc ; jmp qword ptr [rax]
0x00000000007dcd0e : movsb byte ptr [rdi], byte ptr [rsi] ; sbb al, 0x21 ; retf 0x1c
0x0000000000480f40 : movsb byte ptr [rdi], byte ptr [rsi] ; sbb dword ptr [rax], ebx ; call rax
0x00000000007ad4ac : movsb byte ptr [rdi], byte ptr [rsi] ; sbb eax, 0x8ae00006 ; in eax, dx ; jmp qword ptr [rax]
0x00000000004f8388 : movsb byte ptr [rdi], byte ptr [rsi] ; sbb ecx, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000074b10d : movsb byte ptr [rdi], byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x000000000074e3ac : movsb byte ptr [rdi], byte ptr [rsi] ; sub al, 0 ; add byte ptr [rax - 0x34], cl ; call rsp
0x00000000004abd28 : movsb byte ptr [rdi], byte ptr [rsi] ; sub byte ptr [rcx], ah ; add byte ptr [rax - 0x77], cl ; ret 0x2c7
0x000000000058ba28 : movsb byte ptr [rdi], byte ptr [rsi] ; sub edx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007cda92 : movsb byte ptr [rdi], byte ptr [rsi] ; syscall
0x00000000005f76be : movsb byte ptr [rdi], byte ptr [rsi] ; test byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000076aeac : movsb byte ptr [rdi], byte ptr [rsi] ; test dword ptr [rcx], 0xd99a3000 ; call qword ptr [rbx]
0x0000000000495e28 : movsb byte ptr [rdi], byte ptr [rsi] ; xchg dword ptr [rdx], esp ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000006895f2 : movsb byte ptr [rdi], byte ptr [rsi] ; xlatb ; inc dword ptr [rbp - 0x3f6bf040] ; pop rdx ; ret
0x0000000000532090 : movsb byte ptr [rdi], byte ptr [rsi] ; xor byte ptr [rdi], ch ; ret
0x00000000007ae8ac : movsb byte ptr [rdi], byte ptr [rsi] ; xor dword ptr [rsi], eax ; add al, dh ; mov dl, 0xed ; jmp qword ptr [rcx]
0x000000000055b228 : movsb byte ptr [rdi], byte ptr [rsi] ; xor edx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e6194 : movsd dword ptr [rdi], dword ptr [rsi] ; adc byte ptr [rax], al ; xchg eax, edx ; syscall
0x00000000007e6cec : movsd dword ptr [rdi], dword ptr [rsi] ; adc eax, 0x3209b0b ; retf
0x00000000007d01e7 : movsd dword ptr [rdi], dword ptr [rsi] ; adc eax, dword ptr [rax] ; ret
0x00000000007e0cd8 : movsd dword ptr [rdi], dword ptr [rsi] ; add al, 0 ; mov ch, 4 ; adc ah, dl ; add al, 0 ; retf 0x504
0x00000000007df67b : movsd dword ptr [rdi], dword ptr [rsi] ; add al, 0 ; retf
0x00000000007f833a : movsd dword ptr [rdi], dword ptr [rsi] ; add bl, byte ptr [rcx] ; int1 ; add al, byte ptr [rax] ; retf 0x2702
0x0000000000549f8c : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [r8 - 0x77], cl ; ret
0x00000000005a83b7 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000769d2c : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax + rdx*2], al ; retf
0x0000000000610007 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf
0x0000000000755cc5 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; xchg eax, esi ; lahf ; iretd ; call rsp
0x00000000007eed0e : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x1e01
0x00000000007cbc93 : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rcx], eax ; add byte ptr [rcx], 0x33 ; add byte ptr [rax], al ; ret
0x00000000007f3abb : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rip + 0x19ca3], ebp ; ret
0x00000000007a5c4d : movsd dword ptr [rdi], dword ptr [rsi] ; add eax, 0xeb6bd000 ; jmp qword ptr [rcx]
0x00000000005e83c4 : movsd dword ptr [rdi], dword ptr [rsi] ; add r15b, dil ; ror cl, 1 ; ret
0x0000000000486199 : movsd dword ptr [rdi], dword ptr [rsi] ; and eax, dword ptr [rax] ; leave ; ret
0x00000000007cab23 : movsd dword ptr [rdi], dword ptr [rsi] ; cdq ; add dword ptr [rip + 0x199d3], eax ; ret 0x199
0x0000000000747f45 : movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; call rax
0x0000000000678318 : movsd dword ptr [rdi], dword ptr [rsi] ; cmp byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x000000000064835d : movsd dword ptr [rdi], dword ptr [rsi] ; cmp eax, dword ptr [rax] ; jmp rax
0x0000000000406797 : movsd dword ptr [rdi], dword ptr [rsi] ; fild qword ptr [rax + rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000560127 : movsd dword ptr [rdi], dword ptr [rsi] ; in al, 0x15 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000630f1f : movsd dword ptr [rdi], dword ptr [rsi] ; ja 0x630f65 ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000005e6fce : movsd dword ptr [rdi], dword ptr [rsi] ; leave ; ret
0x00000000005e9f3f : movsd dword ptr [rdi], dword ptr [rsi] ; mov dword ptr [rcx], eax ; call rax
0x00000000006b2f1c : movsd dword ptr [rdi], dword ptr [rsi] ; mov dword ptr [rdx + 0x9c8], eax ; ret
0x00000000006c86e6 : movsd dword ptr [rdi], dword ptr [rsi] ; mov rax, rbx ; pop rbx ; ret
0x0000000000678317 : movsd dword ptr [rdi], dword ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; cmp byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x000000000074b471 : movsd dword ptr [rdi], dword ptr [rsi] ; or byte ptr [rax], al ; adc ah, 0xf9 ; jmp qword ptr [rax]
0x00000000005febbf : movsd dword ptr [rdi], dword ptr [rsi] ; or byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000006242cd : movsd dword ptr [rdi], dword ptr [rsi] ; or dword ptr [rax], eax ; leave ; ret
0x000000000063a1d3 : movsd dword ptr [rdi], dword ptr [rsi] ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007e845e : movsd dword ptr [rdi], dword ptr [rsi] ; or eax, 0xf7000000 ; syscall
0x00000000007b6be9 : movsd dword ptr [rdi], dword ptr [rsi] ; out dx, eax ; jmp rdx
0x000000000053ed64 : movsd dword ptr [rdi], dword ptr [rsi] ; outsd dx, dword ptr [rsi] ; add bh, dh ; shl byte ptr [rcx], cl ; ret 0xb70f
0x00000000004f3727 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000695289 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xfffe
0x00000000004ad407 : movsd dword ptr [rdi], dword ptr [rsi] ; retf
0x000000000074b145 : movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rax]
0x00000000007d3218 : movsd dword ptr [rdi], dword ptr [rsi] ; syscall
0x00000000006cb327 : movsd dword ptr [rdi], dword ptr [rsi] ; xor bh, bh ; dec dword ptr [rax - 0x77] ; ret 0xc7
0x00000000005a83b6 : movsd dword ptr [rdi], dword ptr cs:[rsi] ; add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000006a47d0 : movsd xmm0, qword ptr [rip + 0x73248] ; ret
0x00000000006822f0 : movsd xmm0, qword ptr [rip + 0x95728] ; ret
0x0000000000683fd8 : movsd xmm0, qword ptr [rip + 0xa4770] ; ret
0x0000000000682adc : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000006c0eee : movsd xmm0, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000006b2f1b : movsq qword ptr [rdi], qword ptr [rsi] ; mov dword ptr [rdx + 0x9c8], eax ; ret
0x00000000006c86e5 : movsq qword ptr [rdi], qword ptr [rsi] ; mov rax, rbx ; pop rbx ; ret
0x00000000006b2f47 : movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000006a4760 : movss xmm0, dword ptr [rip + 0x73c34] ; ret
0x00000000006c0e4e : movss xmm0, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000606e77 : movsx edi, bh ; mov rax, rbp ; jne 0x606ed8 ; call rax
0x0000000000687588 : movsx edi, byte ptr [rbx] ; mov rax, rbp ; jne 0x6875c4 ; call rax
0x0000000000723217 : movsx edi, byte ptr [rdi + 7] ; loope 0x723229 ; ret
0x0000000000688bf9 : movsx edi, byte ptr [rsp + rax] ; mov rax, rbx ; jne 0x688c4b ; call rax
0x00000000006bce3e : movsx edi, di ; call 0x6a9095
0x00000000006c2611 : movsxd r13, r13d ; call rax
0x0000000000562314 : movsxd r13, r13d ; sub r13, 0xf ; call 0x6be5d9
0x00000000006d3411 : movsxd r8, dword ptr [r13 + r8*4] ; add r8, r13 ; jmp r8
0x00000000006d2b4c : movsxd rax, dword ptr [r11 + rax*4] ; add rax, r11 ; jmp rax
0x00000000006d3a49 : movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x00000000006d4ce6 : movsxd rax, dword ptr [r9 + r8*4] ; add r9, rax ; jmp r9
0x0000000000527100 : movsxd rax, dword ptr [rdi] ; mov eax, dword ptr [rdi + rax*8 + 8] ; ret
0x000000000066bcbc : movsxd rax, dword ptr [rsi + 4] ; cmp rcx, rax ; jne 0x66bc61 ; ret
0x000000000058f6b5 : movsxd rax, esi ; lea rax, qword ptr [rdx + rax*4] ; ret
0x000000000068f53b : movsxd rax, esi ; mov eax, dword ptr [rdx + rax*4] ; ret
0x0000000000742315 : movsxd rbp, eax ; call qword ptr [rax]
0x0000000000744045 : movsxd rbp, ebp ; call qword ptr [rax]
0x00000000006c2612 : movsxd rbp, ebp ; call rax
0x0000000000562315 : movsxd rbp, ebp ; sub r13, 0xf ; call 0x6be5d8
0x00000000004f1139 : movsxd rbx, eax ; mov rax, qword ptr [rip + 0x5117a6] ; call rax
0x00000000005b7982 : movsxd rbx, ebx ; call 0x403c74
0x00000000005b7981 : movsxd rbx, ebx ; call 0x403c75
0x00000000006d2c48 : movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00000000006d20c1 : movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x00000000006d3632 : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x000000000058ef3e : movsxd rcx, edx ; mov dword ptr [rax + rcx*4], esi ; mov dword ptr [rdi + 0x10], edx ; ret
0x000000000068a301 : movsxd rdi, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000061b37c : movsxd rdi, edi ; dec ecx ; ret
0x00000000006ce0e8 : movsxd rdi, edi ; movzx eax, byte ptr [rax + rdi] ; ret
0x0000000000722e92 : movsxd rdi, esp ; sbb al, 9 ; retf
0x00000000006d31eb : movsxd rdx, dword ptr [rbp + rdx*4] ; add rdx, rbp ; jmp rdx
0x00000000006a71f4 : movsxd rdx, eax ; call 0x403c74
0x00000000006a71f3 : movsxd rdx, eax ; call 0x403c75
0x00000000006cd613 : movsxd rdx, ebx ; dec dword ptr [rcx + rcx*4 - 0x19] ; call r14
0x000000000065e74e : movsxd rdx, edx ; add qword ptr [rax + 0x48], rdx ; xor eax, eax ; ret
0x00000000005855cf : movsxd rdx, edx ; mov dword ptr [rax + rdx*4], ecx ; add rsp, 8 ; ret
0x00000000006d1efe : movsxd rsi, dword ptr [r15 + r8*4] ; add rsi, r15 ; jmp rsi
0x0000000000747dfd : movsxd rsi, ebp ; call rax
0x0000000000747e05 : movsxd rsi, ebp ; jmp qword ptr [rax]
0x0000000000745e1d : movsxd rsi, edx ; jmp qword ptr [rax]
0x0000000000585585 : movsxd rsi, esi ; mov dword ptr [rax + rsi*4], edx ; add rsp, 8 ; ret
0x000000000058f673 : movsxd rsi, esi ; mov eax, dword ptr [rax + rsi*4] ; add rsp, 8 ; ret
0x0000000000584efa : movsxd rsi, esi ; mov eax, dword ptr [rax + rsi*4] ; ret
0x000000000068fba5 : movsxd rsi, esi ; mov rax, qword ptr [rax + 0x40] ; mov byte ptr [rax + rsi*8], dl ; ret
0x00000000006ce615 : movsxd rsi, esi ; mov rax, qword ptr [rax + rsi*8] ; ret
0x000000000068998a : movsxd rsi, esi ; movzx eax, byte ptr [rax + rsi + 0xb] ; ret
0x000000000073ce95 : movsxd rsp, eax ; jmp qword ptr [rax]
0x0000000000740505 : movsxd rsp, ebp ; call qword ptr [rax]
0x00000000006a47d1 : movups xmm0, xmmword ptr [rip + 0x73248] ; ret
0x00000000006a4761 : movups xmm0, xmmword ptr [rip + 0x73c34] ; ret
0x00000000006822f1 : movups xmm0, xmmword ptr [rip + 0x95728] ; ret
0x0000000000683fd9 : movups xmm0, xmmword ptr [rip + 0xa4770] ; ret
0x000000000068209b : movups xmm0, xmmword ptr [rsp + 0x18] ; add rsp, 0x28 ; ret
0x00000000006a47ab : movups xmm0, xmmword ptr [rsp + 0x1c] ; add rsp, 0x28 ; ret
0x0000000000681f05 : movups xmm0, xmmword ptr [rsp + 0x28] ; add rsp, 0x38 ; ret
0x000000000068308f : movups xmm0, xmmword ptr [rsp + 0x38] ; add rsp, 0x48 ; ret
0x0000000000682b29 : movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000682add : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x00000000006c0e4f : movups xmm0, xmmword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000006a4fd7 : movups xmm2, xmmword ptr [rsp - 0x18] ; movapd xmm0, xmm2 ; ret
0x0000000000651603 : movups xmmword ptr [rax], xmm0 ; add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x00000000005193da : movzx eax, ah ; add rsp, 0x18 ; ret
0x00000000006cd3bc : movzx eax, ah ; pop rbx ; pop rbp ; ret
0x00000000006c9dbb : movzx eax, al ; mov dword ptr [rsi + 0xc], eax ; ret
0x00000000004ed70d : movzx eax, al ; mov edi, eax ; call 0x4b99a9
0x00000000004ecfcf : movzx eax, al ; mov edi, eax ; call 0x4b9a5d
0x000000000048ffc5 : movzx eax, al ; mov edi, eax ; call 0x4bc1ff
0x00000000006cd999 : movzx eax, al ; neg eax ; pop rbx ; pop rbp ; ret
0x00000000006be43f : movzx eax, al ; or byte ptr [rdi + rax], dl ; ret
0x0000000000661afa : movzx eax, al ; pop r14 ; ret
0x00000000006cbc9d : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000666a43 : movzx eax, al ; ret
0x0000000000678ab1 : movzx eax, bh ; ret
0x00000000006153e8 : movzx eax, byte ptr [rax + 0x18] ; nop ; pop rbp ; ret
0x000000000068fbb9 : movzx eax, byte ptr [rax + 0x29] ; ret
0x000000000068f9e4 : movzx eax, byte ptr [rax + 0x2a] ; ret
0x000000000050f9d9 : movzx eax, byte ptr [rax + 0xd8] ; ret
0x00000000006ce0ea : movzx eax, byte ptr [rax + rdi] ; ret
0x000000000068998c : movzx eax, byte ptr [rax + rsi + 0xb] ; ret
0x000000000068f52b : movzx eax, byte ptr [rax + rsi*8] ; ret
0x00000000006d4f3a : movzx eax, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000005f3538 : movzx eax, byte ptr [rax] ; nop ; pop rbp ; ret
0x000000000067aa9d : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000005134eb : movzx eax, byte ptr [rax] ; ret
0x0000000000621ebd : movzx eax, byte ptr [rbp - 0x50] ; mov byte ptr [rbp - 0x21], al ; leave ; ret
0x0000000000622281 : movzx eax, byte ptr [rbp - 1] ; nop ; leave ; ret
0x00000000006ccf44 : movzx eax, byte ptr [rbx + 0xa] ; pop rbx ; ret
0x00000000006cce34 : movzx eax, byte ptr [rbx + 4] ; pop rbx ; ret
0x00000000006cd064 : movzx eax, byte ptr [rbx + 5] ; pop rbx ; ret
0x00000000006ccfd4 : movzx eax, byte ptr [rbx + 6] ; pop rbx ; ret
0x00000000006cced4 : movzx eax, byte ptr [rbx + 9] ; pop rbx ; ret
0x00000000004f74e0 : movzx eax, byte ptr [rdi + 0x10] ; ret
0x00000000004f74f0 : movzx eax, byte ptr [rdi + 0x11] ; ret
0x00000000006bdad8 : movzx eax, byte ptr [rdi + 0x15] ; mov byte ptr [rdi + 2], al ; ret
0x00000000005047f0 : movzx eax, byte ptr [rdi + 0x18] ; ret
0x00000000005b00d9 : movzx eax, byte ptr [rdi + 0x1b8] ; ret
0x000000000060b460 : movzx eax, byte ptr [rdi + 0x1c8] ; ret
0x000000000060bc10 : movzx eax, byte ptr [rdi + 0x1d0] ; ret
0x0000000000536f79 : movzx eax, byte ptr [rdi + 0x1f] ; ret
0x000000000060b470 : movzx eax, byte ptr [rdi + 0x200] ; ret
0x0000000000609dd0 : movzx eax, byte ptr [rdi + 0x201] ; ret
0x000000000067c625 : movzx eax, byte ptr [rdi + 0x28] ; ret
0x00000000005b0439 : movzx eax, byte ptr [rdi + 0x2a8] ; ret
0x00000000005af679 : movzx eax, byte ptr [rdi + 0x2d8] ; ret
0x00000000005af139 : movzx eax, byte ptr [rdi + 0x308] ; ret
0x00000000006a7d60 : movzx eax, byte ptr [rdi + 0x30] ; ret
0x000000000068e365 : movzx eax, byte ptr [rdi + 0x38] ; ret
0x0000000000518290 : movzx eax, byte ptr [rdi + 0x40] ; ret
0x000000000063e0c9 : movzx eax, byte ptr [rdi + 0x538] ; ret
0x00000000005b02a9 : movzx eax, byte ptr [rdi + 0x6c8] ; ret
0x00000000006785d4 : movzx eax, byte ptr [rdi + 0x728980] ; ret
0x0000000000678994 : movzx eax, byte ptr [rdi + 0x728a80] ; ret
0x00000000006787b4 : movzx eax, byte ptr [rdi + 0x728b80] ; ret
0x00000000006c8a90 : movzx eax, byte ptr [rdi + 0x7317e8] ; ret
0x0000000000691500 : movzx eax, byte ptr [rdi + 0x7c] ; mov byte ptr [rdi + 0x7b], 0 ; pop rbx ; ret
0x0000000000562f40 : movzx eax, byte ptr [rdi + 0x90] ; ret
0x00000000005b00a9 : movzx eax, byte ptr [rdi + 0xa28] ; ret
0x000000000063e0e9 : movzx eax, byte ptr [rdi + 0xa48] ; ret
0x00000000005af169 : movzx eax, byte ptr [rdi + 0xa58] ; ret
0x00000000005af0d9 : movzx eax, byte ptr [rdi + 0xa88] ; ret
0x00000000004f74b0 : movzx eax, byte ptr [rdi + 0xa8] ; ret
0x00000000004f74d0 : movzx eax, byte ptr [rdi + 0xa9] ; ret
0x000000000067fc00 : movzx eax, byte ptr [rdi + 1] ; ret
0x0000000000504345 : movzx eax, byte ptr [rdi + 8] ; ret
0x00000000006747c0 : movzx eax, byte ptr [rdi + 9] ; ret
0x000000000060c517 : movzx eax, byte ptr [rdi + rax + 0x298] ; ret
0x000000000060c527 : movzx eax, byte ptr [rdi + rax + 0x299] ; ret
0x0000000000632917 : movzx eax, byte ptr [rdi + rax + 0x31] ; add rsp, 8 ; ret
0x000000000053ad11 : movzx eax, byte ptr [rdi + rax + 0x50] ; ret
0x0000000000673b83 : movzx eax, byte ptr [rdi + rdi + 0xa01e3f] ; ret
0x00000000006be45f : movzx eax, byte ptr [rdi + rdx] ; ret
0x00000000006be3f9 : movzx eax, byte ptr [rdi + rdx] ; shl eax, 8 ; add eax, esi ; ret
0x00000000006881f4 : movzx eax, byte ptr [rdi + rsi] ; ret
0x000000000068f550 : movzx eax, byte ptr [rdi - 0x1b] ; ret
0x00000000005429c0 : movzx eax, byte ptr [rdi] ; cmp al, byte ptr [rsi] ; je 0x5429d9 ; xor eax, eax ; ret
0x00000000005a5530 : movzx eax, byte ptr [rdi] ; cmp al, byte ptr [rsi] ; je 0x5a5549 ; xor eax, eax ; ret
0x000000000057e630 : movzx eax, byte ptr [rdi] ; cmp byte ptr [rsi], al ; je 0x57e649 ; xor eax, eax ; ret
0x000000000053d7e0 : movzx eax, byte ptr [rdi] ; ret
0x000000000067fbf8 : movzx eax, byte ptr [rdi] ; xor eax, 1 ; ret
0x0000000000513372 : movzx eax, byte ptr [rdx + 0x6f2170] ; ret
0x00000000006c5c64 : movzx eax, byte ptr [rdx + rax] ; ret
0x00000000005af7f9 : movzx eax, byte ptr [rip + 0x4562f8] ; ret
0x00000000006ccf20 : movzx eax, byte ptr [rsi + 0xa] ; cmp al, 0x7f ; je 0x6ccf38 ; ret
0x00000000006cce10 : movzx eax, byte ptr [rsi + 4] ; cmp al, 0x7f ; je 0x6cce28 ; ret
0x00000000006cd040 : movzx eax, byte ptr [rsi + 5] ; cmp al, 0x7f ; je 0x6cd058 ; ret
0x00000000006ccfb0 : movzx eax, byte ptr [rsi + 6] ; cmp al, 0x7f ; je 0x6ccfc8 ; ret
0x00000000006cd2d0 : movzx eax, byte ptr [rsi + 8] ; cmp al, 0x7f ; je 0x6cd2e8 ; ret
0x00000000006cceb0 : movzx eax, byte ptr [rsi + 9] ; cmp al, 0x7f ; je 0x6ccec8 ; ret
0x0000000000687bdf : movzx eax, byte ptr [rsi + rax] ; shr al, cl ; and eax, 1 ; ret
0x00000000005218e0 : movzx eax, byte ptr [rsi] ; cmp al, byte ptr [rdi] ; je 0x5218f9 ; xor eax, eax ; ret
0x000000000055eab0 : movzx eax, byte ptr [rsi] ; cmp al, byte ptr [rdi] ; je 0x55eac9 ; xor eax, eax ; ret
0x00000000005ae340 : movzx eax, byte ptr [rsi] ; cmp al, byte ptr [rdi] ; je 0x5ae359 ; xor eax, eax ; ret
0x0000000000578490 : movzx eax, byte ptr [rsi] ; cmp byte ptr [rdi], al ; je 0x5784a9 ; xor eax, eax ; ret
0x00000000006ccf9e : movzx eax, byte ptr [rsp + 0xa] ; add rsp, 0x28 ; ret
0x00000000006aaeb7 : movzx eax, byte ptr [rsp + 0xf] ; add rsp, 0x18 ; ret
0x00000000006cce8e : movzx eax, byte ptr [rsp + 4] ; add rsp, 0x28 ; ret
0x00000000006cd0be : movzx eax, byte ptr [rsp + 5] ; add rsp, 0x28 ; ret
0x00000000006cd02e : movzx eax, byte ptr [rsp + 6] ; add rsp, 0x28 ; ret
0x00000000006ccdfe : movzx eax, byte ptr [rsp + 9] ; add rsp, 0x28 ; ret
0x00000000006a00d0 : movzx eax, di ; ret
0x0000000000678ab0 : movzx eax, dil ; ret
0x00000000007cbf51 : movzx eax, word ptr [rip + 0x2702b100] ; ret 6
0x00000000006aaee7 : movzx eax, word ptr [rsp + 0xe] ; add rsp, 0x18 ; ret
0x00000000006c111e : movzx eax, word ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000547ea1 : movzx edi, bl ; jne 0x547ecb ; mov rsi, rbp ; call rax
0x000000000061a599 : movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x18], dl ; pop rbp ; ret
0x00000000006aa9f0 : movzx edx, byte ptr [rsi] ; cmp dl, byte ptr [rdi] ; je 0x6aaa09 ; xor eax, eax ; ret
0x00000000006c6b50 : movzx edx, byte ptr [rsi] ; cmp dl, byte ptr [rdi] ; je 0x6c6b69 ; xor eax, eax ; ret
0x00000000006c6810 : movzx edx, byte ptr [rsi] ; xor eax, eax ; cmp dl, byte ptr [rdi] ; je 0x6c6829 ; ret
0x00000000006acdf7 : movzx edx, word ptr [rbx + 0x12] ; jmp qword ptr [rdx*8 + 0x72ca00]
0x00000000006c5bff : movzx esi, dh ; add eax, esi ; add rsp, 8 ; ret
0x00000000006881f1 : movzx esi, dh ; movzx eax, byte ptr [rdi + rsi] ; ret
0x00000000006881f0 : movzx esi, sil ; movzx eax, byte ptr [rdi + rsi] ; ret
0x000000000073ecd5 : mul dl ; call rax
0x00000000007dba2b : mul dword ptr [rbx + rax] ; ret 0x505
0x00000000004a1bb3 : mul dword ptr [rcx] ; add cl, cl ; ret
0x000000000056e445 : mul dword ptr [rdx + 0x16] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000798549 : mul ebp ; call qword ptr [rdx]
0x0000000000642425 : mul edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000073ed15 : mul edx ; lcall ptr [rax] ; ret 4
0x00000000006a47e1 : mulps xmm0, xmm0 ; mulsd xmm0, xmm0 ; ret
0x00000000006a4771 : mulps xmm0, xmm0 ; mulss xmm0, xmm0 ; ret
0x00000000006a4775 : mulps xmm0, xmm0 ; ret
0x00000000006a4788 : mulps xmm0, xmm1 ; ret
0x0000000000682d62 : mulps xmm0, xmm2 ; add rsp, 0x38 ; ret
0x00000000006a4df4 : mulps xmm0, xmm2 ; jne 0x6a4df1 ; movapd xmm0, xmm1 ; ret
0x00000000004719a3 : mulps xmm0, xmmword ptr [r8] ; call rax
0x00000000004719a4 : mulps xmm0, xmmword ptr [rax] ; call rax
0x00000000006a47f5 : mulps xmm1, xmm0 ; mulsd xmm0, xmm1 ; ret
0x00000000006a4784 : mulps xmm1, xmm0 ; mulss xmm0, xmm1 ; ret
0x0000000000683fc9 : mulps xmm2, xmm0 ; addsd xmm0, xmm2 ; ret
0x000000000045cfcd : mulps xmm3, xmmword ptr [rdx] ; call rax
0x00000000006a47e0 : mulsd xmm0, xmm0 ; mulsd xmm0, xmm0 ; ret
0x00000000006a47e4 : mulsd xmm0, xmm0 ; ret
0x00000000006a47f8 : mulsd xmm0, xmm1 ; ret
0x0000000000682d61 : mulsd xmm0, xmm2 ; add rsp, 0x38 ; ret
0x00000000006a47f4 : mulsd xmm1, xmm0 ; mulsd xmm0, xmm1 ; ret
0x0000000000683fc8 : mulsd xmm2, xmm0 ; addsd xmm0, xmm2 ; ret
0x00000000006a4770 : mulss xmm0, xmm0 ; mulss xmm0, xmm0 ; ret
0x00000000006a4774 : mulss xmm0, xmm0 ; ret
0x00000000006a4787 : mulss xmm0, xmm1 ; ret
0x00000000006a4783 : mulss xmm1, xmm0 ; mulss xmm0, xmm1 ; ret
0x000000000077a481 : neg ah ; call rdx
0x000000000045327d : neg byte ptr [edx] ; call rax
0x0000000000423229 : neg byte ptr [r13] ; call rax
0x000000000061313c : neg byte ptr [rbp] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004231ec : neg byte ptr [rbp] ; call rax
0x00000000004cb6ca : neg byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e6d68 : neg byte ptr [rbx] ; add eax, 0xac031bff ; sbb al, 5 ; retf 0x31e
0x0000000000443234 : neg byte ptr [rbx] ; call rax
0x0000000000535071 : neg byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004632c2 : neg byte ptr [rcx] ; call rax
0x0000000000475806 : neg byte ptr [rdx - 0x76b7ffdf] ; ret
0x000000000045327e : neg byte ptr [rdx] ; call rax
0x0000000000768d58 : neg byte ptr [rsi - 0x28] ; jmp qword ptr [rbx]
0x000000000073c14d : neg dh ; jmp rax
0x0000000000463195 : neg dword ptr [r9] ; call rax
0x0000000000423087 : neg dword ptr [rbp] ; call rax
0x00000000005c71b9 : neg dword ptr [rcx - 0x76b7fff5] ; ret
0x000000000046317a : neg dword ptr [rcx] ; call rax
0x000000000052a6e9 : neg dword ptr [rdi + 0x15] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000524f82 : neg dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000453104 : neg dword ptr [rdx] ; call rax
0x0000000000706997 : neg eax ; fstpnce st(2), st(0) ; fcmovnu st(0), st(4) ; fstp st(6) ; jmp qword ptr [rdx]
0x00000000006cd99c : neg eax ; pop rbx ; pop rbp ; ret
0x00000000006ce402 : neg eax ; ret
0x00000000006a17c3 : neg eax ; test rax, rax ; jg 0x6a17d2 ; ret
0x000000000077ee49 : neg ebp ; jmp qword ptr [rdx]
0x00000000006cb6a6 : neg esi ; lea rax, qword ptr [rdi + rsi*8] ; ret
0x00000000006a17c2 : neg rax ; test rax, rax ; jg 0x6a17d3 ; ret
0x00000000006cb6a5 : neg rsi ; lea rax, qword ptr [rdi + rsi*8] ; ret
0x000000000073e3d4 : nop ; adc ah, dl ; call qword ptr [rax]
0x00000000006b341e : nop ; adc eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000005f154c : nop ; adc eax, dword ptr [rcx] ; call rax
0x000000000078f7b0 : nop ; add ah, dl ; jmp qword ptr [rdx]
0x0000000000798ab0 : nop ; add al, 0xe6 ; jmp qword ptr [rax]
0x0000000000413ac2 : nop ; add al, byte ptr [rax] ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop rbp ; ret
0x00000000005b986b : nop ; add al, r13b ; mov edi, 0x89000c7c ; ret
0x00000000007e76eb : nop ; add bh, bh ; xor eax, 0x36af05 ; retf
0x000000000073ed6c : nop ; add bl, ah ; call qword ptr [rax]
0x00000000005bc75f : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000648477 : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rax
0x000000000046ef49 : nop ; add byte ptr cs:[r8 - 0x77], r9b ; ret 0xbe
0x000000000074a4fc : nop ; add cl, bh ; call rax
0x00000000007e4b79 : nop ; add cl, byte ptr [rcx] ; add byte ptr [rax], al ; loope 0x7e4b89 ; ret 0xa301
0x00000000007fa7f7 : nop ; add dword ptr [rax], eax ; ret
0x00000000007fa7f3 : nop ; add dword ptr [rip + 0x190f8], eax ; ret
0x00000000007a4805 : nop ; add eax, 0xc6334a00 ; call qword ptr [rdx]
0x00000000007a47ed : nop ; add eax, 0xc6335000 ; call qword ptr [rdx]
0x00000000007a47bd : nop ; add eax, 0xc6335800 ; call qword ptr [rdx]
0x00000000007a47a5 : nop ; add eax, 0xc6335e00 ; call qword ptr [rdx]
0x00000000007a478d : nop ; add eax, 0xc6336400 ; call qword ptr [rdx]
0x0000000000740610 : nop ; add eax, 0xe59cd000 ; jmp rax
0x000000000073a1d0 : nop ; add eax, dword ptr [r8] ; retf -0x25a2
0x00000000007359ac : nop ; add edx, eax ; call rax
0x000000000040ba5c : nop ; add rsp, 0x10 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000040d27a : nop ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000048c94a : nop ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000040c7f9 : nop ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004468bf : nop ; add rsp, 0x30 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000413252 : nop ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000047ab12 : nop ; add rsp, 0x40 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000040d065 : nop ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000004c9f23 : nop ; add rsp, 0x50 ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000006b21ff : nop ; add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004791d7 : nop ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000040f7f1 : nop ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000005855d3 : nop ; add rsp, 8 ; ret
0x00000000004575c1 : nop ; and al, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040e70c : nop ; and ch, byte ptr [rbx] ; add cl, cl ; ret
0x00000000007d0923 : nop ; and dword ptr [rax], eax ; in eax, dx ; and al, 5 ; ret 0x25
0x00000000007ed4e6 : nop ; and eax, dword ptr [rax] ; ret
0x000000000067e014 : nop ; call 0x67aa73
0x0000000000510b30 : nop ; call qword ptr [rsi]
0x000000000056d17f : nop ; call rbx
0x000000000056d6cf : nop ; call rcx
0x000000000066893c : nop ; clc ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000006720ec : nop ; clc ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000639863 : nop ; cmp al, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000006c6adf : nop ; cmp dil, 5 ; setne al ; ret
0x000000000066980e : nop ; cmp dword ptr [rax], eax ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000006698d1 : nop ; cmp dword ptr [rax], eax ; jmp rax
0x0000000000544e5f : nop ; cmp dword ptr [rsi + 0x1c], edi ; setl al ; ret
0x000000000045cd3c : nop ; cmp dword ptr [rsi], esp ; add cl, cl ; ret
0x0000000000544dff : nop ; cmp edi, esi ; sete al ; ret
0x00000000006a431f : nop ; cmp qword ptr [rdi + 0x10], 0 ; je 0x6a4338 ; ret
0x00000000006a431e : nop ; cmp qword ptr [rdi + 0x10], 0 ; je 0x6a4339 ; ret
0x000000000066d01f : nop ; cmp qword ptr [rdi + 0x28], 0 ; setne al ; ret
0x0000000000747f8c : nop ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rax
0x0000000000642d81 : nop ; dec dword ptr [rax - 0x77] ; ret
0x000000000074a33c : nop ; fprem ; jmp qword ptr [rax]
0x00000000006a5b9f : nop ; fstp st(0) ; add rsp, 0x28 ; ret
0x00000000006a56af : nop ; fstp st(0) ; fstp st(0) ; ret
0x0000000000746f54 : nop ; hlt ; call qword ptr [rax]
0x0000000000746e9c : nop ; hlt ; call rax
0x0000000000743cbd : nop ; in al, dx ; call rax
0x00000000007439ec : nop ; in al, dx ; jmp rax
0x000000000073cba4 : nop ; in eax, -0x21 ; call qword ptr [rax]
0x0000000000748bc4 : nop ; in eax, -0xa ; jmp qword ptr [rax]
0x00000000006596ec : nop ; inc dword ptr [rsi] ; add byte ptr [rax - 1], bh ; ret
0x000000000053d4ac : nop ; jb 0x53d4ce ; add byte ptr [rax - 0x77], cl ; ret
0x000000000074947c : nop ; jb 0x749479 ; jmp rax
0x000000000079fee0 : nop ; jbe 0x79fece ; call qword ptr [rax]
0x000000000074aa80 : nop ; jl 0x74aa92 ; add byte ptr [rax], dh ; stc ; call rax
0x0000000000745acc : nop ; jne 0x745ac2 ; jmp qword ptr [rax]
0x000000000074a820 : nop ; jno 0x74a832 ; add byte ptr [rax + 0x33], dl ; stc ; call rax
0x00000000006031dc : nop ; jnp 0x6031ed ; add byte ptr [rax - 0x77], cl ; ret
0x000000000074a9e8 : nop ; jns 0x74a9fa ; add byte ptr [rax], al ; pop rdx ; stc ; jmp rax
0x00000000006bda8f : nop ; lea eax, dword ptr [rdi + 3] ; ret
0x00000000006be46f : nop ; lea eax, dword ptr [rdi + 4] ; ret
0x00000000006a7d8f : nop ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000006a89ef : nop ; lea rax, qword ptr [rsi + rdi] ; ret
0x000000000073d564 : nop ; leave ; loopne 0x73d570 ; push 0x447 ; retf
0x000000000040a0bd : nop ; leave ; ret
0x0000000000566fcf : nop ; lock add dword ptr [rdi], 1 ; ret
0x0000000000507d9f : nop ; lock sub dword ptr [rdi], 1 ; ret
0x00000000007aafb0 : nop ; loop 0x7aafa2 ; jmp qword ptr [rax]
0x000000000073c954 : nop ; mov ah, 0xdf ; call qword ptr [rax]
0x000000000074a084 : nop ; mov bh, 0xf8 ; jmp rax
0x00000000005693ac : nop ; mov bl, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000774d30 : nop ; mov bl, 0xdb ; call qword ptr [rax]
0x00000000006922af : nop ; mov byte ptr [rax + 0x7a], r9b ; add rsp, 0x18 ; ret
0x00000000006a08af : nop ; mov byte ptr [rsi], dil ; ret
0x00000000005fcafc : nop ; mov ch, 0x40 ; add al, ch ; retf
0x000000000073d34c : nop ; mov ch, 0xe0 ; jmp rax
0x000000000074a04c : nop ; mov cl, 0xf8 ; jmp qword ptr [rax]
0x00000000005f5a1c : nop ; mov cs, word ptr [rax + rax] ; leave ; ret
0x0000000000747204 : nop ; mov dh, ah ; call rax
0x000000000076b810 : nop ; mov dl, 0xd9 ; call qword ptr [rcx]
0x0000000000741cf4 : nop ; mov dl, 0xe7 ; jmp qword ptr [rax]
0x00000000006bf2bf : nop ; mov dword ptr [rdi + 0x2c], 0 ; ret
0x000000000067456f : nop ; mov dword ptr [rdi + 0x84], esi ; ret
0x00000000006c6d5f : nop ; mov dword ptr [rdi], 0xffffffff ; ret
0x00000000006a7d2f : nop ; mov eax, 0x1c0 ; ret
0x0000000000536d2f : nop ; mov eax, 0x40 ; ret
0x00000000004f749f : nop ; mov eax, 0x580 ; ret
0x000000000068029f : nop ; mov eax, 0x6802a0 ; ret
0x000000000065e23f : nop ; mov eax, 0x720738 ; ret
0x00000000005f7c2f : nop ; mov eax, 0x80 ; ret
0x000000000066097f : nop ; mov eax, 0xfffffffe ; ret
0x00000000006cc47f : nop ; mov eax, 0xffffffff ; ret
0x000000000053adef : nop ; mov eax, 1 ; ret
0x00000000006cd9bf : nop ; mov eax, 4 ; ret
0x000000000067f73b : nop ; mov eax, dword ptr [rdi + 0x10] ; ret
0x00000000006ce62f : nop ; mov eax, dword ptr [rdi + 0x14] ; ret
0x0000000000551d8f : nop ; mov eax, dword ptr [rdi + 0x18] ; test eax, eax ; jne 0x551da8 ; ret
0x0000000000551d8e : nop ; mov eax, dword ptr [rdi + 0x18] ; test eax, eax ; jne 0x551da9 ; ret
0x0000000000506b7f : nop ; mov eax, dword ptr [rdi + 0x20] ; test eax, eax ; sete al ; ret
0x0000000000507d8f : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x507da0 ; ret
0x0000000000507d8e : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x507da1 ; ret
0x000000000052200f : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x522020 ; ret
0x000000000052200e : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x522021 ; ret
0x000000000052208f : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x5220a0 ; ret
0x000000000052208e : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x5220a1 ; ret
0x000000000052210f : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x522120 ; ret
0x000000000052210e : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x522121 ; ret
0x0000000000542adf : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x542af0 ; ret
0x0000000000542ade : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x542af1 ; ret
0x000000000054dacf : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x54dae0 ; ret
0x000000000054dace : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x54dae1 ; ret
0x000000000055601f : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x556030 ; ret
0x000000000055601e : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x556031 ; ret
0x0000000000566fff : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x567010 ; ret
0x0000000000566ffe : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x567011 ; ret
0x000000000057190f : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x571920 ; ret
0x000000000057190e : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x571921 ; ret
0x000000000058ed7f : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x58ed90 ; ret
0x000000000058ed7e : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x58ed91 ; ret
0x000000000058edff : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x58ee10 ; ret
0x000000000058edfe : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x58ee11 ; ret
0x000000000058ee7f : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x58ee90 ; ret
0x000000000058ee7e : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x58ee91 ; ret
0x00000000005a2b4f : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x5a2b60 ; ret
0x00000000005a2b4e : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x5a2b61 ; ret
0x00000000005a8acf : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x5a8ae0 ; ret
0x00000000005a8ace : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x5a8ae1 ; ret
0x0000000000626e0f : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x626e20 ; ret
0x0000000000626e0e : nop ; mov eax, dword ptr [rdi + 4] ; test eax, eax ; jne 0x626e21 ; ret
0x000000000067455f : nop ; mov eax, dword ptr [rdi + 8] ; ret
0x00000000006c705f : nop ; mov eax, dword ptr [rdi] ; ret
0x0000000000621185 : nop ; mov eax, ebx ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000006a66bf : nop ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b1c76 : nop ; mov eax, ecx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000006a17ef : nop ; mov eax, edi ; mov esi, esi ; add rax, rsi ; ret
0x000000000066768f : nop ; mov eax, edi ; ret
0x000000000057e61f : nop ; mov eax, edi ; xor eax, 1 ; ret
0x0000000000517f6f : nop ; mov eax, esi ; ret
0x000000000069ca8f : nop ; mov eax, esi ; xor eax, edx ; xor eax, edi ; ret
0x000000000073b204 : nop ; mov ebp, ds ; call rax
0x000000000074adc4 : nop ; mov edi, ecx ; jmp qword ptr [rax]
0x00000000005887e0 : nop ; mov edx, 0x7070c0 ; mov rdi, r12 ; call rax
0x00000000006c5a5f : nop ; mov edx, 1 ; mov eax, edx ; pop rbx ; ret
0x000000000073be6c : nop ; mov esi, ds ; jmp rax
0x00000000006d42ff : nop ; mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x00000000006a7d9f : nop ; mov qword ptr [rdi + 0x10], rsi ; ret
0x000000000065e1ef : nop ; mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x20], edx ; ret
0x000000000066778f : nop ; mov qword ptr [rdi + 0x68], 0 ; ret
0x00000000006cddaf : nop ; mov qword ptr [rdx], rdi ; mov qword ptr [rdx + 8], rsi ; ret
0x00000000006d429f : nop ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000061639a : nop ; mov rax, qword ptr [rbp - 8] ; nop ; leave ; ret
0x00000000005adfef : nop ; mov rax, qword ptr [rdi + 0x10] ; ret
0x000000000050abaf : nop ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000005578af : nop ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000006a7d4f : nop ; mov rax, qword ptr [rdi + 0x28] ; ret
0x000000000067fbeb : nop ; mov rax, qword ptr [rdi + 0x40] ; ret
0x00000000006ab6bf : nop ; mov rax, qword ptr [rdi + 0x50] ; ret
0x00000000006d42bf : nop ; mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000051832f : nop ; mov rax, qword ptr [rdi + 8] ; lock sub dword ptr [rax], 1 ; ret
0x0000000000525bbf : nop ; mov rax, qword ptr [rdi + 8] ; ret
0x000000000068f08f : nop ; mov rax, qword ptr [rdi - 8] ; mov rax, qword ptr [rax + 0x40] ; ret
0x000000000068f9df : nop ; mov rax, qword ptr [rdi - 8] ; movzx eax, byte ptr [rax + 0x2a] ; ret
0x00000000006cde7f : nop ; mov rax, qword ptr [rip + 0x334e49] ; ret
0x000000000069055f : nop ; mov rax, qword ptr [rip + 0x379399] ; ret
0x0000000000613e29 : nop ; mov rax, qword ptr [rip + 0x3eeab7] ; call rax
0x00000000005e5ecc : nop ; mov rax, qword ptr [rip + 0x41ca14] ; call rax
0x00000000005e4efe : nop ; mov rax, qword ptr [rip + 0x41d9e2] ; call rax
0x00000000005da4a2 : nop ; mov rax, qword ptr [rip + 0x42843e] ; call rax
0x00000000005d893e : nop ; mov rax, qword ptr [rip + 0x429fa2] ; call rax
0x00000000005d7a4d : nop ; mov rax, qword ptr [rip + 0x42ae93] ; call rax
0x00000000005cd94c : nop ; mov rax, qword ptr [rip + 0x434f94] ; call rax
0x00000000004f07bf : nop ; mov rax, qword ptr [rip + 0x512121] ; call rax
0x00000000004da436 : nop ; mov rax, qword ptr [rip + 0x5284aa] ; call rax
0x00000000004da3df : nop ; mov rax, qword ptr [rip + 0x528501] ; call rax
0x00000000004c69a0 : nop ; mov rax, qword ptr [rip + 0x53bf40] ; call rax
0x00000000004c4463 : nop ; mov rax, qword ptr [rip + 0x53e47d] ; call rax
0x00000000004c30aa : nop ; mov rax, qword ptr [rip + 0x53f836] ; call rax
0x00000000004aed4a : nop ; mov rax, qword ptr [rip + 0x553b96] ; call rax
0x000000000049bdd1 : nop ; mov rax, qword ptr [rip + 0x566b0f] ; call rax
0x0000000000496383 : nop ; mov rax, qword ptr [rip + 0x56c55d] ; call rax
0x0000000000491985 : nop ; mov rax, qword ptr [rip + 0x570f5b] ; call rax
0x000000000048d5ee : nop ; mov rax, qword ptr [rip + 0x5752f2] ; call rax
0x0000000000482b7f : nop ; mov rax, qword ptr [rip + 0x57fd61] ; call rax
0x0000000000479c80 : nop ; mov rax, qword ptr [rip + 0x588c60] ; call rax
0x000000000046ba55 : nop ; mov rax, qword ptr [rip + 0x596e8b] ; call rax
0x0000000000461d55 : nop ; mov rax, qword ptr [rip + 0x5a0b8b] ; call rax
0x000000000045e708 : nop ; mov rax, qword ptr [rip + 0x5a41d8] ; call rax
0x0000000000458f5b : nop ; mov rax, qword ptr [rip + 0x5a9985] ; call rax
0x00000000004482a7 : nop ; mov rax, qword ptr [rip + 0x5ba639] ; call rax
0x000000000043d2d5 : nop ; mov rax, qword ptr [rip + 0x5c560b] ; call rax
0x000000000043cee5 : nop ; mov rax, qword ptr [rip + 0x5c59fb] ; call rax
0x0000000000430701 : nop ; mov rax, qword ptr [rip + 0x5d21df] ; call rax
0x000000000042ea99 : nop ; mov rax, qword ptr [rip + 0x5d3e47] ; call rax
0x000000000042e47f : nop ; mov rax, qword ptr [rip + 0x5d4461] ; call rax
0x000000000042aed1 : nop ; mov rax, qword ptr [rip + 0x5d7a0f] ; call rax
0x0000000000421c85 : nop ; mov rax, qword ptr [rip + 0x5e0c5b] ; call rax
0x000000000041bec9 : nop ; mov rax, qword ptr [rip + 0x5e6a17] ; call rax
0x0000000000411c1b : nop ; mov rax, qword ptr [rip + 0x5f0cc5] ; call rax
0x000000000040ffb3 : nop ; mov rax, qword ptr [rip + 0x5f292d] ; call rax
0x000000000040f999 : nop ; mov rax, qword ptr [rip + 0x5f2f47] ; call rax
0x000000000040c3eb : nop ; mov rax, qword ptr [rip + 0x5f64f5] ; call rax
0x00000000005502af : nop ; mov rax, rdi ; mov rdx, rsi ; ret
0x00000000006674ef : nop ; mov rax, rdi ; ret
0x000000000066babf : nop ; mov rax, rdi ; xor edx, edx ; ret
0x0000000000516608 : nop ; mov rbx, rax ; call qword ptr [rip + 0x4ec2ce]
0x000000000074b144 : nop ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rax]
0x00000000006a47cf : nop ; movsd xmm0, qword ptr [rip + 0x73248] ; ret
0x00000000006a475f : nop ; movss xmm0, dword ptr [rip + 0x73c34] ; ret
0x0000000000523b9f : nop ; movzx eax, byte ptr [rdi + 0x18] ; ret
0x00000000006a7d5f : nop ; movzx eax, byte ptr [rdi + 0x30] ; ret
0x00000000006c8a8f : nop ; movzx eax, byte ptr [rdi + 0x7317e8] ; ret
0x000000000067fbff : nop ; movzx eax, byte ptr [rdi + 1] ; ret
0x00000000006747cf : nop ; movzx eax, byte ptr [rdi + 8] ; ret
0x00000000006747bf : nop ; movzx eax, byte ptr [rdi + 9] ; ret
0x00000000006aad1f : nop ; movzx eax, byte ptr [rdi] ; ret
0x000000000067fbf7 : nop ; movzx eax, byte ptr [rdi] ; xor eax, 1 ; ret
0x00000000006a00cf : nop ; movzx eax, di ; ret
0x0000000000678aaf : nop ; movzx eax, dil ; ret
0x00000000004c8b0e : nop ; nop ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000544e5d : nop ; nop ; cmp dword ptr [rsi + 0x1c], edi ; setl al ; ret
0x0000000000743cbc : nop ; nop ; in al, dx ; call rax
0x0000000000617b4c : nop ; nop ; leave ; ret
0x00000000005a2b1d : nop ; nop ; lock add dword ptr [rdi], 1 ; ret
0x0000000000517f6d : nop ; nop ; mov eax, esi ; ret
0x000000000043b61a : nop ; nop ; pop rbp ; ret
0x000000000055eb3d : nop ; nop ; ret
0x000000000050f527 : nop ; nop dword ptr [rax + rax] ; ret
0x000000000052b14b : nop ; nop dword ptr [rax] ; lea rax, qword ptr [rsi + 0x28] ; ret
0x00000000005fc7fb : nop ; nop dword ptr [rax] ; mov byte ptr [rdi], 0 ; ret
0x0000000000517f0b : nop ; nop dword ptr [rax] ; mov eax, dword ptr [rdi + 0x10] ; ret
0x00000000005c311b : nop ; nop dword ptr [rax] ; mov rax, qword ptr [rdi + 0x10] ; ret
0x000000000060c67b : nop ; nop dword ptr [rax] ; mov rax, qword ptr [rdi] ; ret
0x000000000052194b : nop ; nop dword ptr [rax] ; ret
0x000000000056fe6b : nop ; nop dword ptr [rax] ; test esi, esi ; jne 0x56fe81 ; ret
0x000000000054a1b9 : nop ; nop word ptr [rax + rax] ; mov eax, esi ; ret
0x00000000005f8a19 : nop ; nop word ptr [rax + rax] ; ret
0x000000000073ff0c : nop ; or ah, ch ; call qword ptr [rax]
0x000000000066b14b : nop ; or al, 0 ; add byte ptr [rcx], al ; add rsp, 8 ; ret
0x000000000066b810 : nop ; or al, 0 ; add byte ptr [rcx], al ; je 0x66b828 ; pop rbx ; ret
0x0000000000671bd2 : nop ; or al, 0 ; add byte ptr [rcx], al ; je 0x671be8 ; pop rbx ; ret
0x000000000066b132 : nop ; or al, 0 ; add byte ptr [rcx], al ; ret
0x00000000005f588e : nop ; or al, 0 ; leave ; ret
0x00000000007ea6b3 : nop ; or al, byte ptr [rax] ; retf
0x000000000073c148 : nop ; out 3, al ; add al, dl ; neg dh ; jmp rax
0x00000000007b4300 : nop ; out dx, eax ; call qword ptr [rcx]
0x00000000007b4ad0 : nop ; out dx, eax ; call qword ptr [rdi]
0x0000000000745635 : nop ; out dx, eax ; jmp qword ptr [rax]
0x00000000005184a9 : nop ; outsd dx, dword ptr es:[rsi] ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000525440 : nop ; outsd dx, dword ptr es:[rsi] ; add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x0000000000409397 : nop ; pop rbp ; ret
0x00000000007b53f0 : nop ; pop rbx ; out dx, eax ; jmp qword ptr [rcx]
0x000000000050a84f : nop ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040ef8c : nop ; pop rbx ; pop rbp ; ret
0x00000000005246df : nop ; pop rbx ; ret
0x00000000004fe472 : nop ; pop rdx ; lock dec dword ptr [rax - 0x77] ; ret
0x0000000000746794 : nop ; pop rsi ; jmp qword ptr [rax]
0x0000000000745a4c : nop ; push 0xf0 ; jmp qword ptr [rax]
0x0000000000746654 : nop ; push rax ; jmp rax
0x000000000066ac3d : nop ; push rbp ; mov rbp, rsp ; nop ; pop rbp ; ret
0x0000000000740980 : nop ; push rdi ; add eax, 0xe5f8d000 ; jmp rax
0x000000000066259c : nop ; rcl byte ptr [rbx], 0x72 ; add byte ptr [rdi], cl ; mov bh, 0x88 ; ret 0x7213
0x0000000000735dcc : nop ; rcl eax, -1 ; and ch, bh ; add dword ptr [rax], eax ; pop rax ; ret
0x00000000004024e0 : nop ; ret
0x00000000005984ac : nop ; ret 0x13
0x000000000073e1e4 : nop ; ret 0xffe1
0x00000000005c776c : nop ; ret 0xffe3
0x000000000079a310 : nop ; ret 0xffe6
0x00000000007a1a60 : nop ; ret 0xffe8
0x00000000007aeca0 : nop ; ret 0xffed
0x00000000007bad50 : nop ; ret 0xfff0
0x000000000074a144 : nop ; ret 0xfff8
0x000000000073bae8 : nop ; ret 3
0x000000000073ed30 : nop ; ret 4
0x00000000007451a0 : nop ; ret 6
0x000000000057499e : nop ; retf
0x000000000076c580 : nop ; retf -0x27
0x00000000007482cc : nop ; retf -0xb
0x000000000047c74c : nop ; retf -1
0x000000000074a1ec : nop ; retf -8
0x0000000000484058 : nop ; retf 0x1f
0x000000000072f518 : nop ; retf 0x6b
0x000000000054bab0 : nop ; retf 0x6f
0x00000000006d8f20 : nop ; retf 0x9f
0x0000000000745300 : nop ; retf 6
0x000000000073897d : nop ; salc ; call qword ptr [rax]
0x000000000074b4a4 : nop ; salc ; stc ; call qword ptr [rax]
0x000000000075a171 : nop ; sar bh, 1 ; ret
0x000000000074a114 : nop ; sar eax, -1 ; and byte ptr [rdx + 8], dl ; add byte ptr [rax], al ; ret 0xfff8
0x0000000000740154 : nop ; sbb ah, ch ; call rax
0x000000000066ab46 : nop ; sbb byte ptr [rax], 0 ; pop rbp ; ret
0x000000000050f768 : nop ; sbb dword ptr [rdi], ebp ; mov rdi, rbx ; call rax
0x0000000000748e04 : nop ; sbb esi, edi ; call qword ptr [rax]
0x000000000074808c : nop ; scasd eax, dword ptr [rdi] ; cmc ; call rax
0x00000000005876b2 : nop ; str word ptr [rax - 0x77] ; ret
0x000000000073d9ec : nop ; sub ah, cl ; jmp rax
0x000000000040ff4c : nop ; sub dword ptr [rdi], ebx ; call rax
0x000000000061ce1c : nop ; sub eax, dword ptr [rdi] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000007d4947 : nop ; syscall
0x0000000000741290 : nop ; test byte ptr [rip - 0x19355000], al ; jmp rax
0x00000000006786ff : nop ; test dil, dil ; mov eax, edi ; cmovs eax, esi ; ret
0x000000000055ea8f : nop ; test dil, dil ; setne al ; ret
0x0000000000745ee4 : nop ; test dl, dh ; call rax
0x000000000074ac50 : nop ; test dword ptr [rax], ecx ; add byte ptr [rax + 0x7f], al ; stc ; jmp rax
0x00000000006a07ff : nop ; test rdi, rdi ; jne 0x6a0818 ; xor eax, eax ; ret
0x0000000000737e00 : nop ; xchg eax, ebp ; add al, byte ptr [rax] ; ret 0xd447
0x000000000077f8c0 : nop ; xor al, 0xde ; call qword ptr [rcx]
0x00000000007f5aeb : nop ; xor al, 5 ; ret
0x000000000051a3d2 : nop ; xor byte ptr [rdi], ch ; mov rdi, rbx ; call rax
0x0000000000525a3f : nop ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006ce8af : nop ; xor eax, eax ; cmp edi, 2 ; sete al ; ret
0x0000000000517f3f : nop ; xor eax, eax ; mov edx, 1 ; ret
0x000000000060660f : nop ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000508bbf : nop ; xor eax, eax ; ret
0x0000000000525bff : nop ; xor edi, edi ; xor edx, edx ; mov rax, rdi ; pop rbx ; ret
0x000000000052b28f : nop ; xor edi, edi ; xor edx, edx ; mov rax, rdi ; ret
0x000000000068ecbf : nop ; xor edx, edx ; mov rax, rdx ; ret
0x000000000056f2dd : nop ; xor esi, dword ptr [rax] ; call rax
0x00000000006a5aa3 : nop dword ptr [rax + rax] ; add rsp, 0x48 ; ret
0x00000000006a4843 : nop dword ptr [rax + rax] ; fstp st(0) ; fld1 ; ret
0x00000000006a07eb : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000542aab : nop dword ptr [rax + rax] ; lock add dword ptr [rdi], 1 ; ret
0x00000000006cdf1b : nop dword ptr [rax + rax] ; mov byte ptr [rbx], 0 ; jmp 0x6cdef1
0x000000000050341b : nop dword ptr [rax + rax] ; mov byte ptr [rdi + 0x10], sil ; ret
0x000000000057b8fb : nop dword ptr [rax + rax] ; mov byte ptr [rdi], sil ; ret
0x00000000006cbb5b : nop dword ptr [rax + rax] ; mov dword ptr [rdi + 4], esi ; ret
0x000000000068ea1b : nop dword ptr [rax + rax] ; mov dword ptr [rdi], esi ; ret
0x000000000059bcdb : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x10] ; ret
0x0000000000506b8b : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x20] ; ret
0x000000000066784b : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x64] ; ret
0x000000000053882b : nop dword ptr [rax + rax] ; mov eax, edi ; ret
0x000000000054a1bb : nop dword ptr [rax + rax] ; mov eax, esi ; ret
0x00000000006b291b : nop dword ptr [rax + rax] ; mov qword ptr [rdi], rsi ; ret
0x000000000063eabb : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 0x10] ; ret
0x00000000005c313b : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000006ce5fb : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi] ; ret
0x000000000066d00b : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000006aacdb : nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi + 0x10] ; ret
0x000000000068f54b : nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi - 0x1b] ; ret
0x00000000006675d7 : nop dword ptr [rax + rax] ; nop ; ret
0x0000000000408a78 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x000000000051c2e3 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x00000000004f5658 : nop dword ptr [rax + rax] ; ret
0x00000000005861eb : nop dword ptr [rax + rax] ; test esi, esi ; jne 0x586201 ; ret
0x0000000000664583 : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000506adb : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000054e133 : nop dword ptr [rax + rax] ; xor eax, eax ; xor edx, edx ; ret
0x000000000060a713 : nop dword ptr [rax + rax] ; xor ebx, ebx ; jmp 0x60a6e7
0x0000000000506b73 : nop dword ptr [rax + rax] ; xor edx, edx ; xor eax, eax ; ret
0x00000000006a59ac : nop dword ptr [rax] ; add rsp, 0x48 ; ret
0x0000000000630ced : nop dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000051cff5 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x000000000067710d : nop dword ptr [rax] ; cmp rdi, rsi ; setl al ; ret
0x00000000006a4855 : nop dword ptr [rax] ; fld st(0) ; fmul st(1) ; fmulp st(1) ; ret
0x00000000006a484d : nop dword ptr [rax] ; fmul st(0) ; fmul st(0) ; ret
0x00000000006a5b4d : nop dword ptr [rax] ; fstp st(1) ; fchs ; ret
0x000000000068f2fc : nop dword ptr [rax] ; lea rax, qword ptr [rdi - 0x20] ; ret
0x000000000052b14c : nop dword ptr [rax] ; lea rax, qword ptr [rsi + 0x28] ; ret
0x00000000005fc7fc : nop dword ptr [rax] ; mov byte ptr [rdi], 0 ; ret
0x00000000006c692d : nop dword ptr [rax] ; mov dword ptr [rdi], esi ; ret
0x00000000006a8b1d : nop dword ptr [rax] ; mov eax, 0x10 ; ret
0x00000000005053ac : nop dword ptr [rax] ; mov eax, 0x10200 ; ret
0x000000000053ee2c : nop dword ptr [rax] ; mov eax, 0x140 ; ret
0x0000000000504dfc : nop dword ptr [rax] ; mov eax, 0x200 ; ret
0x0000000000504fac : nop dword ptr [rax] ; mov eax, 0x380 ; ret
0x0000000000538bfc : nop dword ptr [rax] ; mov eax, 0x40 ; ret
0x00000000006c672d : nop dword ptr [rax] ; mov eax, 0x540 ; ret
0x00000000006642bc : nop dword ptr [rax] ; mov eax, 0x721500 ; ret
0x000000000050459c : nop dword ptr [rax] ; mov eax, 0x80 ; ret
0x00000000006cd89d : nop dword ptr [rax] ; mov eax, 0xa0d344 ; ret
0x000000000058165d : nop dword ptr [rax] ; mov eax, 0xc0 ; ret
0x000000000065e6dc : nop dword ptr [rax] ; mov eax, 0xfffffffa ; ret
0x0000000000522ad4 : nop dword ptr [rax] ; mov eax, 1 ; ret
0x0000000000517f0c : nop dword ptr [rax] ; mov eax, dword ptr [rdi + 0x10] ; ret
0x00000000006aad5d : nop dword ptr [rax] ; mov eax, dword ptr [rdi + 0x14] ; ret
0x000000000066909c : nop dword ptr [rax] ; mov eax, dword ptr [rdi + 0x20] ; ret
0x000000000066c09d : nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x00000000006739ad : nop dword ptr [rax] ; mov eax, edi ; ret
0x000000000068f541 : nop dword ptr [rax] ; mov eax, esi ; ret
0x000000000069d5ad : nop dword ptr [rax] ; mov eax, esi ; xor eax, edx ; xor eax, edi ; ret
0x00000000006a89dc : nop dword ptr [rax] ; mov qword ptr [rdi + 0x10], rsi ; ret
0x00000000006be8ac : nop dword ptr [rax] ; mov qword ptr [rdi], rsi ; ret
0x00000000005c311c : nop dword ptr [rax] ; mov rax, qword ptr [rdi + 0x10] ; ret
0x000000000060c67c : nop dword ptr [rax] ; mov rax, qword ptr [rdi] ; ret
0x000000000068eb3d : nop dword ptr [rax] ; mov rax, rdi ; mov rdx, rsi ; ret
0x000000000066767d : nop dword ptr [rax] ; mov rax, rdi ; ret
0x00000000005046fc : nop dword ptr [rax] ; mov rax, rsi ; ret
0x00000000006cbb7c : nop dword ptr [rax] ; mov word ptr [rdi + 2], si ; ret
0x00000000006a5135 : nop dword ptr [rax] ; movapd xmm0, xmm1 ; jmp 0x6a5109
0x000000000051828d : nop dword ptr [rax] ; movzx eax, byte ptr [rdi + 0x40] ; ret
0x00000000006a7d7d : nop dword ptr [rax] ; movzx eax, byte ptr [rdi + 8] ; ret
0x0000000000408ac5 : nop dword ptr [rax] ; pop rbp ; ret
0x0000000000633164 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005279ec : nop dword ptr [rax] ; pop rbx ; ret
0x0000000000509c91 : nop dword ptr [rax] ; ret
0x0000000000668fcc : nop dword ptr [rax] ; test dil, dil ; jne 0x668fe9 ; ret
0x000000000056fe6c : nop dword ptr [rax] ; test esi, esi ; jne 0x56fe80 ; ret
0x00000000006a330c : nop dword ptr [rax] ; test rsi, rsi ; jne 0x6a3329 ; ret
0x00000000006ceb7d : nop dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000503e89 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000050ac34 : nop dword ptr [rax] ; xor eax, eax ; xor edx, edx ; ret
0x0000000000507014 : nop dword ptr [rax] ; xor edx, edx ; xor eax, eax ; pop rbx ; ret
0x000000000054ad34 : nop dword ptr [rax] ; xor edx, edx ; xor eax, eax ; ret
0x0000000000501897 : nop dword ptr cs:[rax + rax] ; ret
0x000000000057b8fa : nop word ptr [rax + rax] ; mov byte ptr [rdi], sil ; ret
0x000000000059bcda : nop word ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x10] ; ret
0x0000000000506b8a : nop word ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x20] ; ret
0x000000000053882a : nop word ptr [rax + rax] ; mov eax, edi ; ret
0x000000000054a1ba : nop word ptr [rax + rax] ; mov eax, esi ; ret
0x00000000006b291a : nop word ptr [rax + rax] ; mov qword ptr [rdi], rsi ; ret
0x00000000006ce5fa : nop word ptr [rax + rax] ; mov rax, qword ptr [rdi] ; ret
0x000000000051c2e2 : nop word ptr [rax + rax] ; pop rbx ; ret
0x0000000000505bba : nop word ptr [rax + rax] ; ret
0x0000000000664582 : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000506ada : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000737d3d : not bl ; call qword ptr [rax]
0x000000000062f646 : not byte ptr [rax + 0xa] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000571c95 : not byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e111b : not byte ptr [rax] ; add ch, dl ; syscall
0x00000000004f32d3 : not byte ptr [rax] ; call rax
0x00000000004e32d2 : not byte ptr [rcx] ; call rax
0x0000000000555048 : not byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000550460 : not byte ptr [rdx] ; add bl, ch ; test dword ptr [rax - 0x77], ecx ; ret
0x00000000005650aa : not byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f3114 : not dword ptr [rax] ; call rax
0x00000000004c30f1 : not dword ptr [rbx] ; call rax
0x000000000059ee07 : not dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004e31cf : not dword ptr [rcx] ; call rax
0x00000000004d312b : not dword ptr [rdx] ; call rax
0x000000000069ca14 : not eax ; and edx, eax ; mov eax, edx ; or eax, esi ; ret
0x000000000069ca54 : not eax ; and esi, eax ; mov eax, esi ; or eax, edx ; ret
0x00000000006ce5a2 : not eax ; and qword ptr [rdi + rdx*8], rax ; ret
0x000000000069cad2 : not eax ; or eax, edi ; xor eax, esi ; ret
0x000000000066457e : not eax ; pop rbx ; ret
0x0000000000678472 : not eax ; shr al, 7 ; ret
0x0000000000689435 : not eax ; shr eax, 0x1f ; add rsp, 8 ; ret
0x0000000000737d6d : not ebx ; call rax
0x0000000000761371 : not ebx ; call rbx
0x000000000075de29 : not ecx ; call rdx
0x000000000075de09 : not ecx ; jmp qword ptr [rbx]
0x0000000000768871 : not edi ; jmp qword ptr [rbx]
0x0000000000768849 : not edi ; jmp rdx
0x000000000075f431 : not edx ; jmp qword ptr [rbx]
0x00000000006ce5a1 : not rax ; and qword ptr [rdi + rdx*8], rax ; ret
0x000000000075f430 : not rdx ; jmp qword ptr [rbx]
0x00000000006c9542 : or ah, 0x40 ; ret
0x000000000073c0c0 : or ah, ah ; add eax, dword ptr [rax] ; out -0x22, eax ; jmp qword ptr [rax]
0x000000000073f82d : or ah, ah ; call qword ptr [rax]
0x00000000006740b5 : or ah, bh ; pop rsp ; jb 0x6740bf ; ret
0x000000000073ee25 : or ah, bl ; jmp qword ptr [rax]
0x00000000004529e2 : or ah, byte ptr [rax + 0x25] ; add byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000063a732 : or ah, byte ptr [rax + 0x5b580009] ; pop rbp ; ret
0x000000000048fc65 : or ah, byte ptr [rbx] ; add cl, cl ; ret
0x00000000006a51c5 : or ah, byte ptr [rsi + 0xf] ; sub dl, al ; add rsp, 0x18 ; ret
0x000000000073ff0d : or ah, ch ; call qword ptr [rax]
0x000000000073fefd : or ah, ch ; jmp rax
0x0000000000674016 : or ah, ch ; pop rsp ; jb 0x674022 ; jne 0x673fff ; ret
0x0000000000798e01 : or ah, dh ; call rdi
0x000000000066b5f9 : or al, 0 ; add byte ptr [rax + 0x39], cl ; dec byte ptr [rdi] ; xchg eax, ebp ; ret
0x00000000006568d9 : or al, 0 ; add byte ptr [rax + 0x63], cl ; ror dword ptr [rax + 0x29], cl ; ret 0x14c
0x000000000063b7a6 : or al, 0 ; add byte ptr [rax + 1], cl ; fmul dword ptr [rax + 0x39] ; ret
0x00000000006682bc : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000006906e1 : or al, 0 ; add byte ptr [rax], al ; add dword ptr [rbx + 0x60], 1 ; pop rbx ; ret
0x00000000004e1b81 : or al, 0 ; add byte ptr [rax], al ; call 0x6be5d6
0x000000000066b84c : or al, 0 ; add byte ptr [rax], al ; jne 0x66b85e ; ret
0x000000000066b86c : or al, 0 ; add byte ptr [rax], al ; jne 0x66b87e ; ret
0x0000000000676533 : or al, 0 ; add byte ptr [rax], al ; jne 0x676546 ; ret
0x00000000006735f5 : or al, 0 ; add byte ptr [rax], al ; mfence ; ret
0x000000000051345e : or al, 0 ; add byte ptr [rax], al ; test al, 1 ; jne 0x513472 ; jmp rax
0x0000000000672722 : or al, 0 ; add byte ptr [rcx + rcx + 0x48], dh ; add esp, 0x28 ; ret
0x0000000000552882 : or al, 0 ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000530cde : or al, 0 ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000066b14c : or al, 0 ; add byte ptr [rcx], al ; add rsp, 8 ; ret
0x000000000066b811 : or al, 0 ; add byte ptr [rcx], al ; je 0x66b827 ; pop rbx ; ret
0x0000000000671bd3 : or al, 0 ; add byte ptr [rcx], al ; je 0x671be7 ; pop rbx ; ret
0x0000000000672597 : or al, 0 ; add byte ptr [rcx], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000066b133 : or al, 0 ; add byte ptr [rcx], al ; ret
0x0000000000530cfd : or al, 0 ; add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000006757ec : or al, 0 ; add byte ptr [rdi + rcx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000067663c : or al, 0 ; add byte ptr [rdi + rcx + 0x5b], bh ; pop rbp ; pop r12 ; ret
0x000000000066de61 : or al, 0 ; add byte ptr [rdx + rcx + 0x48], dh ; add esp, 0x18 ; ret
0x00000000007693d5 : or al, 0 ; add byte ptr [rsp], al ; ret 0x7c
0x000000000066ab6a : or al, 0 ; add cl, cl ; ret
0x0000000000614149 : or al, 0 ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000005b8deb : or al, 0 ; call 0x405852
0x00000000005c5e34 : or al, 0 ; call qword ptr [rip + 0x43caa4]
0x00000000005c5e18 : or al, 0 ; call qword ptr [rip + 0x43cac0]
0x00000000005b5e7e : or al, 0 ; call qword ptr [rip + 0x44ca62]
0x00000000007dd96d : or al, 0 ; cdq ; or al, 5 ; ret 0xc
0x00000000007ce24b : or al, 0 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; or dword ptr [rsi], ebx ; retf
0x00000000007ed078 : or al, 0 ; hlt ; or al, 5 ; ret 0xd
0x00000000005f313b : or al, 0 ; leave ; ret
0x00000000007d0d63 : or al, 0 ; loope 0x7d0d7f ; add eax, 0xeb001080 ; syscall
0x00000000007d0d4b : or al, 0 ; mov cl, byte ptr [rdi] ; add eax, 0x94000fa9 ; syscall
0x00000000005fe2b7 : or al, 0 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005b66ca : or al, 0 ; mov ebx, eax ; call qword ptr [rip + 0x44c214]
0x00000000007d0d57 : or al, 0 ; mov ecx, 0xffb050f ; add bl, al ; syscall
0x00000000007cd458 : or al, 0 ; mov edx, 0xff5050f ; add cl, cl ; syscall
0x00000000005b5e62 : or al, 0 ; mov r15d, eax ; call qword ptr [rip + 0x44ca7b]
0x00000000005f61f9 : or al, 0 ; mov rax, qword ptr [rip + 0x40c6de] ; call rax
0x00000000005f54e4 : or al, 0 ; mov rax, qword ptr [rip + 0x40d3f3] ; call rax
0x00000000005f4141 : or al, 0 ; mov rax, qword ptr [rip + 0x40e796] ; call rax
0x00000000005f392b : or al, 0 ; mov rax, qword ptr [rip + 0x40efac] ; call rax
0x00000000005f3488 : or al, 0 ; mov rax, qword ptr [rip + 0x40f44f] ; call rax
0x00000000005f3079 : or al, 0 ; mov rax, qword ptr [rip + 0x40f85e] ; call rax
0x00000000005f1eca : or al, 0 ; mov rax, qword ptr [rip + 0x410a0d] ; call rax
0x00000000005f0d87 : or al, 0 ; mov rax, qword ptr [rip + 0x411b50] ; call rax
0x00000000005ef9b4 : or al, 0 ; mov rax, qword ptr [rip + 0x412f23] ; call rax
0x00000000005ef0b8 : or al, 0 ; mov rax, qword ptr [rip + 0x41381f] ; call rax
0x00000000005c5de7 : or al, 0 ; mov rbp, rax ; call qword ptr [rip + 0x43caf6]
0x00000000005b30dd : or al, 0 ; mov rdi, r13 ; xor eax, eax ; call 0x67fb5b
0x00000000005b30d3 : or al, 0 ; mov rdi, rax ; xor eax, eax ; call 0x67fb59
0x00000000005badf8 : or al, 0 ; mov rsp, r12 ; mov r12, rax ; jmp 0x5badce
0x00000000007ce2bd : or al, 0 ; popfq ; syscall
0x00000000007c30e3 : or al, 0 ; ret
0x00000000007ce2db : or al, 0 ; ret 0x1410
0x00000000007f52c9 : or al, 0 ; ret 0x401
0x00000000007ecc27 : or al, 0 ; ret 0x501
0x00000000007d44a0 : or al, 0 ; ret 0x602
0x00000000007dd95b : or al, 0 ; retf
0x00000000007e5ade : or al, 0 ; stosb byte ptr [rdi], al ; add eax, 0x30afe05 ; retf
0x00000000007eb985 : or al, 0 ; xlatb ; syscall
0x000000000068818c : or al, 0x10 ; cmp rsi, rdi ; jne 0x688177 ; ret
0x0000000000550600 : or al, 0x13 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000569c1c : or al, 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000573a67 : or al, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e5ecc : or al, 0x19 ; add byte ptr [rax], al ; ret
0x0000000000533b1b : or al, 0x1a ; add byte ptr [rcx], dh ; fisttp dword ptr [rbp - 0x7b] ; in al, 0x74 ; retf
0x00000000004b810e : or al, 0x1c ; add cl, cl ; ret
0x00000000007eca2a : or al, 0x1d ; ret
0x000000000049ef05 : or al, 0x1e ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007eca30 : or al, 0x1f ; retf
0x000000000047ee5c : or al, 0x20 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000006ce14c : or al, 0x24 ; add byte ptr [rdi + rax - 0xd], dh ; ret
0x000000000050adf9 : or al, 0x24 ; test al, 1 ; jne 0x50ae55 ; mov rsi, rsp ; call rax
0x0000000000525ea1 : or al, 0x24 ; test al, 1 ; jne 0x525f11 ; mov rsi, rsp ; call rax
0x000000000056b3b0 : or al, 0x24 ; test al, 1 ; jne 0x56b420 ; mov rsi, rsp ; call rax
0x0000000000595cda : or al, 0x24 ; test al, 1 ; jne 0x595d36 ; mov rsi, rsp ; call rax
0x000000000045dc43 : or al, 0x26 ; add cl, cl ; ret
0x000000000079e114 : or al, 0x2a ; add eax, 0xe7f50a00 ; call qword ptr [rdi]
0x000000000063220b : or al, 0x31 ; fisttp dword ptr [rcx + 0x415d5bd8] ; pop rsp ; ret
0x000000000068bd6c : or al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc2 ; add dword ptr [rax + 0x29], ecx ; retf -0x7415
0x00000000006b2031 : or al, 0x31 ; ror byte ptr [rcx + 0xfc985c0], cl ; xchg eax, esp ; ret 0xc148
0x000000000076e914 : or al, 0x32 ; add al, byte ptr [rax] ; call 0x1876c36b
0x000000000069f828 : or al, 0x32 ; jne 0x69f815 ; pop rbx ; ret
0x00000000004e4c7f : or al, 0x39 ; ret 0x107e
0x00000000004b439f : or al, 0x39 ; ret 0x5774
0x00000000005623bd : or al, 0x39 ; retf -0x71f1
0x000000000079f214 : or al, 0x3b ; add eax, 0xe850de00 ; call qword ptr [rcx]
0x00000000006a4980 : or al, 0x3f ; or byte ptr [rax], al ; xorpd xmm0, xmm1 ; ret
0x0000000000601c60 : or al, 0x40 ; add al, ch ; retf 0x7f8
0x000000000075fe14 : or al, 0x47 ; add dword ptr [rax], eax ; cmp byte ptr [rcx - 0x2d], dh ; jmp qword ptr [rcx]
0x000000000065e6a1 : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006d108c : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00000000006aaf1a : or al, 0x48 ; add esp, 0x18 ; ret
0x0000000000528083 : or al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006c4303 : or al, 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000694372 : or al, 0x48 ; add esp, 0x28 ; ret
0x00000000006cfad5 : or al, 0x48 ; add esp, 0x38 ; ret
0x00000000006cd453 : or al, 0x48 ; add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000062ed63 : or al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000066b433 : or al, 0x48 ; add esp, 8 ; ret
0x0000000000522acb : or al, 0x48 ; cmp esi, dword ptr [rdx + 0x10] ; sete al ; ret
0x00000000006625f3 : or al, 0x48 ; mov dword ptr [rax + 0x30], esi ; xor eax, eax ; ret
0x00000000006ca87b : or al, 0x48 ; mov edx, eax ; mov rax, rsi ; ret
0x00000000006d1dc0 : or al, 0x48 ; mov esi, ebx ; xor ebx, ebx ; call rax
0x00000000006c6833 : or al, 0x48 ; or edx, eax ; sete al ; ret
0x00000000007d735e : or al, 0x4a ; retf 0x10
0x000000000068d995 : or al, 0x4d ; test edi, edi ; mov rax, r13 ; jne 0x68d9bf ; call rax
0x0000000000685fc8 : or al, 0x5b ; ret
0x0000000000782514 : or al, 0x6e ; add eax, dword ptr [rax] ; clc ; fcomp st(6) ; call qword ptr [rbx]
0x00000000007a2854 : or al, 0x71 ; add eax, 0xe9044800 ; call rsi
0x000000000069fa30 : or al, 0x72 ; jne 0x69fa1d ; pop rbx ; ret
0x000000000069fc41 : or al, 0x72 ; jne 0x69fc2d ; pop rbx ; ret
0x0000000000668b3d : or al, 0x74 ; add eax, 0x8c48348 ; ret
0x000000000066782a : or al, 0x75 ; ret 0x10be
0x00000000006883c7 : or al, 0x75 ; ret 0x8341
0x00000000004a74b5 : or al, 0x7e ; adc al, 0xbe ; retf
0x00000000006a1c13 : or al, 0x7f ; out dx, eax ; mov eax, 0xffffffff ; ret
0x00000000004c3a49 : or al, 0x83 ; ret 0x8901
0x00000000004c3c9a : or al, 0x83 ; rol byte ptr [rcx], 0x39 ; ret 0x4d0f
0x00000000006d2c4a : or al, 0x88 ; add rax, rcx ; jmp rax
0x00000000006c6104 : or al, 0x89 ; ret
0x00000000004e4e26 : or al, 0x89 ; ret 0x8b41
0x00000000004c3c61 : or al, 0x89 ; ret 0x8b48
0x00000000004c8113 : or al, 0x89 ; ret 0xb848
0x00000000006c5c91 : or al, 0x89 ; ret 0xe283
0x000000000051c0be : or al, 0x89 ; retf 0x708d
0x00000000006d3634 : or al, 0x8a ; add rdx, rcx ; jmp rdx
0x00000000004876e1 : or al, 0x8b ; push rbp ; mov al, 0x8b ; mov r12b, 0x29 ; ret 0xd089
0x00000000006d20c3 : or al, 0x8f ; add rcx, rdi ; jmp rcx
0x00000000005855d2 : or al, 0x90 ; add rsp, 8 ; ret
0x00000000006698d0 : or al, 0x90 ; cmp dword ptr [rax], eax ; jmp rax
0x0000000000765354 : or al, 0x9c ; add dword ptr [rax], eax ; retf -0x2aa0
0x000000000069fe57 : or al, 0xb2 ; jne 0x69fe45 ; pop rbx ; ret
0x00000000007a6b14 : or al, 0xb4 ; add eax, 0xebbac800 ; jmp qword ptr [rsi]
0x00000000005210b3 : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000757154 : or al, 0xba ; add byte ptr [rax], al ; retf
0x00000000004fda40 : or al, 0xba ; push rax ; fisubr word ptr [rsi] ; mov rdi, rbx ; call rax
0x0000000000777614 : or al, 0xbf ; add al, byte ptr [rax] ; clc ; jbe 0x7775fe ; jmp qword ptr [rax]
0x00000000005c062f : or al, 0xc ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006d94a0 : or al, 0xc1 ; add byte ptr [r8], al ; add byte ptr [rax], al ; add ah, bh ; ret
0x0000000000767814 : or al, 0xc1 ; add dword ptr [rax], eax ; cli ; call rsi
0x0000000000757c14 : or al, 0xc5 ; add byte ptr [rax], al ; adc al, 0xe0 ; iretd ; call qword ptr [rcx]
0x0000000000757d14 : or al, 0xc6 ; add byte ptr [rax], al ; loopne 0x757cf1 ; call qword ptr [rdi]
0x00000000006761d0 : or al, 0xc7 ; cmp byte ptr [rax], al ; jmp rax
0x0000000000733c3d : or al, 0xcd ; jmp rax
0x0000000000751d11 : or al, 0xce ; call rsp
0x00000000007351bd : or al, 0xcf ; inc eax ; ret 1
0x00000000007351c5 : or al, 0xcf ; jmp rax
0x00000000005aeeab : or al, 0xd ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000788714 : or al, 0xd0 ; add eax, dword ptr [rax] ; sbb byte ptr [rax - 0x20], dh ; jmp qword ptr [rax]
0x000000000051aff2 : or al, 0xd0 ; add rsp, 8 ; ret
0x000000000075e249 : or al, 0xd2 ; call qword ptr [rbx]
0x0000000000766b71 : or al, 0xd6 ; call rsp
0x000000000073aa25 : or al, 0xdd ; call qword ptr [rax]
0x000000000059ff43 : or al, 0xe ; add byte ptr [rax - 0x77], cl ; ret
0x000000000073d76d : or al, 0xe1 ; call qword ptr [rax]
0x000000000078b169 : or al, 0xe1 ; call qword ptr [rbx]
0x000000000078b301 : or al, 0xe1 ; call qword ptr [rsi]
0x000000000078b051 : or al, 0xe1 ; jmp qword ptr [rbx]
0x000000000078b141 : or al, 0xe1 ; jmp qword ptr [rdi]
0x000000000073f855 : or al, 0xe4 ; call rax
0x000000000073ff95 : or al, 0xe5 ; call qword ptr [rax]
0x00000000005a47d1 : or al, 0xe6 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000693a78 : or al, 0xe8 ; ret 0x308
0x00000000006b3f38 : or al, 0xe8 ; ret 0xfffe
0x0000000000587a1f : or al, 0xe8 ; retf
0x00000000005a2970 : or al, 0xe8 ; retf 0x131d
0x000000000066fdf7 : or al, 0xeb ; retf 0xf66
0x000000000058f993 : or al, 0xf ; add byte ptr [rax - 0x77], cl ; ret
0x000000000067aa83 : or al, 0xf ; mov dh, 0 ; ret
0x00000000006614a6 : or al, 0xf6 ; ret 0xc602
0x000000000079ae14 : or al, 0xf7 ; add al, 0 ; clc ; add esp, edi ; call qword ptr [rbx]
0x00000000007ab054 : or al, 0xf9 ; add eax, 0xece44800 ; jmp rbx
0x00000000007cfa67 : or al, 0xfd ; add dword ptr [rax], eax ; retf
0x0000000000738edc : or al, 0xff ; salc ; call qword ptr [rax]
0x00000000006beb39 : or al, 1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000666171 : or al, 2 ; jne 0x666160 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000065061d : or al, 3 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e6167 : or al, 3 ; fmul dword ptr [rsi + rax] ; retf 0xf
0x00000000007e61a7 : or al, 3 ; fmul qword ptr [rdi] ; adc eax, 0xf60010bf ; syscall
0x00000000007d4398 : or al, 3 ; mov edx, 0xfe3050f ; add eax, esp ; syscall
0x00000000007d4362 : or al, 3 ; retf 0x50d
0x00000000007e651e : or al, 3 ; ror byte ptr [rdi], cl ; adc eax, 0xec0010b5 ; syscall
0x000000000078bb14 : or al, 4 ; add al, 0 ; sub spl, cl ; call qword ptr [rcx]
0x00000000007e67ff : or al, 5 ; call qword ptr [rcx]
0x00000000007e6164 : or al, 5 ; enter 0x30c, -0x28 ; or al, 6 ; retf 0xf
0x00000000007ed075 : or al, 5 ; in al, 0xc ; add ah, dh ; or al, 5 ; ret 0xd
0x00000000007cc524 : or al, 5 ; ret
0x00000000007c72be : or al, 5 ; ret 0xc
0x00000000007ed07b : or al, 5 ; ret 0xd
0x00000000007e75cd : or al, 5 ; retf
0x00000000007f7d6d : or al, 5 ; ror dword ptr [rbx], 5 ; out dx, al ; syscall
0x00000000007efc9e : or al, 5 ; test dword ptr [rax + rax], ecx ; retf
0x00000000007ac3fd : or al, 6 ; add ah, ch ; in eax, dx ; call qword ptr [rbx]
0x00000000007ac3cd : or al, 6 ; add ah, dh ; in eax, dx ; call qword ptr [rbx]
0x0000000000742cb1 : or al, 6 ; add al, bh ; test al, 0xea ; jmp qword ptr [rax]
0x00000000007ac3e5 : or al, 6 ; add al, dh ; in eax, dx ; call qword ptr [rbx]
0x00000000007e51d9 : or al, 6 ; loopne 0x7e5206 ; add dl, cl ; or al, 6 ; ret
0x00000000007e51df : or al, 6 ; ret
0x00000000007e616a : or al, 6 ; retf 0xf
0x00000000007979f5 : or al, 7 ; or byte ptr [rax + rax], ah ; add byte ptr [rax], al ; hlt ; ret 4
0x0000000000767a95 : or al, 7 ; or byte ptr [rax + rax], bl ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x0000000000767b3d : or al, 7 ; or byte ptr [rax + rax], ch ; add byte ptr [rax], al ; cld ; ret
0x00000000007b6b50 : or al, 7 ; or byte ptr [rbx + rcx + 2], al ; ret
0x0000000000678b78 : or al, 8 ; cmp dword ptr [rax], eax ; je 0x678b86 ; ret
0x000000000041de6b : or al, ah ; retf 0x9f
0x000000000066c036 : or al, al ; jb 0x66c042 ; jne 0x66c01f ; ret
0x000000000066c035 : or al, al ; jb 0x66c043 ; jne 0x66c020 ; ret
0x000000000061abb1 : or al, byte ptr [eax] ; leave ; ret
0x0000000000601cf4 : or al, byte ptr [rax + rax] ; add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000491e88 : or al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006d4032 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x00000000006914f8 : or al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000007d0cd4 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ror dword ptr [rdx], 5 ; ret
0x0000000000633d77 : or al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret 0x8f0f
0x0000000000651d57 : or al, byte ptr [rax] ; add byte ptr [rsi + 1], bh ; call rax
0x0000000000414100 : or al, byte ptr [rax] ; add cl, cl ; ret
0x00000000005f3572 : or al, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000068380b : or al, byte ptr [rax] ; add rsp, 0x18 ; ret
0x00000000004f75fb : or al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000062c0ac : or al, byte ptr [rax] ; lea rdi, qword ptr [rbx + 0x10] ; call 0x628b78
0x0000000000617f0a : or al, byte ptr [rax] ; leave ; ret
0x00000000005e2eb4 : or al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x41fa23] ; call rax
0x00000000005e2dd8 : or al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x41faff] ; call rax
0x00000000005e2cfa : or al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x41fbdd] ; call rax
0x00000000005e2c1c : or al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x41fcbb] ; call rax
0x00000000005dd880 : or al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x425057] ; call rax
0x00000000005dd526 : or al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x4253b1] ; call rax
0x00000000005dcf85 : or al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x425952] ; call rax
0x00000000005dcb03 : or al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x425dd4] ; call rax
0x00000000005d52d3 : or al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x42d604] ; call rax
0x00000000005d51a7 : or al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x42d730] ; call rax
0x00000000005d50a8 : or al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x42d82f] ; call rax
0x00000000005d4fb1 : or al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x42d926] ; call rax
0x00000000006262c9 : or al, byte ptr [rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007d455a : or al, byte ptr [rax] ; popfq ; or dl, byte ptr [rdi] ; add byte ptr [rax], al ; retf 0x50a
0x0000000000683fde : or al, byte ptr [rax] ; ret
0x00000000007dd54f : or al, byte ptr [rax] ; ret 0x1104
0x00000000007c2ac1 : or al, byte ptr [rax] ; ret 0x7102
0x00000000007c6f0b : or al, byte ptr [rax] ; retf
0x00000000007cf6d8 : or al, byte ptr [rax] ; retf 0x301
0x00000000007fbb49 : or al, byte ptr [rax] ; retf 0x52c
0x00000000007ecfea : or al, byte ptr [rax] ; retf 8
0x00000000006d67af : or al, byte ptr [rbx + 0x4a] ; ret 0xf812
0x0000000000687e07 : or al, byte ptr [rbx + 0x634801c3] ; retf
0x0000000000680278 : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8001
0x0000000000512527 : or al, byte ptr [rbx] ; add byte ptr [rax], al ; call rax
0x00000000007c726c : or al, byte ptr [rbx] ; ret 0xaf02
0x00000000007e5ae4 : or al, byte ptr [rbx] ; retf
0x00000000007e9d0c : or al, byte ptr [rbx] ; retf -0x62f8
0x0000000000503cb5 : or al, byte ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005c50c1 : or al, byte ptr [rcx - 0x77] ; retf 0x2941
0x00000000005293d5 : or al, byte ptr [rcx] ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000005f1e5e : or al, byte ptr [rcx] ; call rax
0x000000000069d403 : or al, byte ptr [rcx] ; ret 0xd109
0x00000000006c8882 : or al, byte ptr [rdx] ; add byte ptr [rax], al ; ret
0x000000000076c1cd : or al, byte ptr [rdx] ; add byte ptr [rax], dl ; ret 0xffd9
0x00000000005e1def : or al, byte ptr [rdx] ; call rax
0x00000000007f079b : or al, byte ptr [rdx] ; ret
0x000000000079c1a5 : or al, byte ptr [rip - 0x18682c00] ; call rsp
0x000000000073faf9 : or al, byte ptr [rip - 0x1b512000] ; jmp qword ptr [rax]
0x00000000007e8a17 : or al, byte ptr [rip - 0x2bf4ee1f] ; or cl, byte ptr [rsi] ; retf 0x12
0x00000000007e5155 : or al, byte ptr [rip - 0x4de8cd50] ; or al, byte ptr [rsi] ; retf
0x00000000007f7d96 : or al, byte ptr [rip - 0x6faf252] ; syscall
0x0000000000742c69 : or al, byte ptr [rsi] ; add byte ptr [rdx], cl ; mov edx, ebp ; call rax
0x00000000007ac1dd : or al, byte ptr [rsi] ; add byte ptr [rsi + 0x44], bl ; in eax, dx ; call qword ptr [rcx]
0x00000000007e5167 : or al, byte ptr [rsi] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; and dword ptr [rax], eax ; ret
0x00000000007e515b : or al, byte ptr [rsi] ; retf
0x00000000007cc4b4 : or al, byte ptr [rsi] ; xchg eax, ebx ; sbb al, byte ptr [rax] ; retf 0x50a
0x00000000005e3efa : or al, byte ptr ds:[rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007d136b : or al, ch ; add al, byte ptr [rax] ; cmp al, byte ptr [rsi] ; retf 2
0x00000000006813c1 : or al, ch ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000005ad14b : or al, ch ; call rsi
0x00000000006a7952 : or al, ch ; cwde ; ret
0x0000000000563dab : or al, ch ; jg 0x563d90 ; adc al, byte ptr [rax] ; pop rbx ; ret
0x00000000005569eb : or al, ch ; jmp rdx
0x00000000006913bb : or al, ch ; lahf ; retf 3
0x00000000005c8a22 : or al, ch ; mov dl, 0xe3 ; dec dword ptr [rax + 0x63] ; retf
0x000000000053e85c : or al, ch ; out dx, al ; mov edi, 0x89480016 ; ret
0x0000000000681339 : or al, ch ; pop rbx ; out -1, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000646c7a : or al, ch ; push rax ; jns 0x646c8e ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000631387 : or al, ch ; ret
0x000000000068ddc8 : or al, ch ; ret 0xffb9
0x00000000005251e8 : or al, ch ; ret 0xffed
0x0000000000586b98 : or al, ch ; ret 0xfff9
0x0000000000545d08 : or al, ch ; ret 0xfffb
0x00000000006c99e8 : or al, ch ; ret 0xfffc
0x00000000006b2ba8 : or al, ch ; ret 0xfffd
0x000000000050a67f : or al, ch ; retf
0x0000000000587d70 : or al, ch ; retf -5
0x0000000000589250 : or al, ch ; retf -7
0x0000000000405f34 : or al, ch ; sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000065e1a2 : or al, ch ; sub byte ptr [rsi + rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x000000000056fa13 : or al, ch ; xchg eax, edi ; call qword ptr [rcx]
0x00000000006898f3 : or al, dh ; add dword ptr [rax + 4], 1 ; ret
0x0000000000506c63 : or al, dh ; add dword ptr [rax], 1 ; ret
0x000000000073c2e8 : or al, dh ; add eax, dword ptr [rax] ; and dil, bl ; jmp qword ptr [rax]
0x0000000000506c73 : or al, dh ; sub dword ptr [rax], 1 ; ret
0x000000000041de6a : or al, spl ; retf 0x9f
0x000000000074756c : or bh, 0xf4 ; call rax
0x000000000053be63 : or bh, al ; adc byte ptr [r8], al ; add byte ptr [rax], al ; add al, ch ; ret 0x1456
0x00000000007cd398 : or bh, al ; adc eax, dword ptr [rax] ; or byte ptr [rdx], 8 ; ret 0x13
0x0000000000684033 : or bh, bl ; call 0xffffffffc428da4f
0x00000000007833a1 : or bh, bl ; jmp qword ptr [rsi]
0x00000000006ccf23 : or bh, byte ptr [rdi + rdi*2] ; je 0x6ccf35 ; ret
0x0000000000637e32 : or bh, byte ptr [rdx + 3] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000007abdd0 : or bh, byte ptr [rsi] ; in eax, dx ; call qword ptr [rcx]
0x00000000006af124 : or bh, ch ; dec dword ptr [rax - 0x77] ; ret
0x0000000000742338 : or bh, dl ; add eax, 0xe8974000 ; jmp qword ptr [rax]
0x000000000074a20c : or bl, 0xf8 ; inc dword ptr [rax] ; push rsi ; or byte ptr [rax], al ; nop ; retf
0x000000000073ee15 : or bl, ah ; call rax
0x0000000000738be4 : or bl, ah ; salc ; jmp qword ptr [rax]
0x0000000000680320 : or bl, al ; mov rax, qword ptr [rdi] ; ret
0x00000000006cd9bc : or bl, al ; nop ; mov eax, 4 ; ret
0x000000000065ca07 : or bl, al ; nop ; nop word ptr [rax + rax] ; ret
0x000000000050fbfd : or bl, al ; nop ; ret
0x0000000000659dfc : or bl, al ; nop ; xor eax, eax ; ret
0x0000000000508621 : or bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000069f52b : or bl, al ; nop dword ptr [rax] ; ret
0x00000000006be4d8 : or bl, al ; nop word ptr [rax + rax] ; ret
0x000000000066996e : or bl, al ; ret
0x0000000000772081 : or bl, bl ; jmp rax
0x0000000000441e9e : or bl, byte ptr [rax + rax - 1] ; ror cl, 1 ; ret
0x0000000000523cec : or bl, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007f7d58 : or bl, byte ptr [rsi] ; retf
0x000000000073a9e5 : or bl, ch ; call qword ptr [rax]
0x0000000000527bce : or bl, ch ; retf 0x1f0f
0x00000000006b2f45 : or bl, dh ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000665f55 : or bl, dh ; ret
0x00000000007f57a4 : or bl, dl ; and dword ptr [rax], eax ; std ; or cl, byte ptr [rcx] ; ret 0x1e
0x000000000075f591 : or bl, dl ; call qword ptr [rbx]
0x000000000075f590 : or bl, r10b ; call qword ptr [rbx]
0x000000000073fdfc : or bpl, spl ; jmp rax
0x000000000072191f : or byte ptr [r10 - 0x44b63727], r9b ; ret 0x8ad1
0x000000000065dbd7 : or byte ptr [r11 - 0x76b7f7be], r9b ; retf
0x0000000000685fc5 : or byte ptr [r13 + 0xc], sil ; pop rbx ; ret
0x000000000051f50f : or byte ptr [r13 + 0xf], r9b ; mov edi, 0x83480045 ; ret
0x00000000005f7ce1 : or byte ptr [r13 - 0x3f6bf040], r8b ; ret
0x000000000068cd6b : or byte ptr [r15 + rax - 0x77], r15b ; retf
0x000000000067aa9b : or byte ptr [r15], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000059de07 : or byte ptr [r15], r9b ; lahf ; ret 0x3944
0x0000000000541f3c : or byte ptr [r8 + 0x39], cl ; ret 0x8f0f
0x00000000006b990e : or byte ptr [r8 + 0x63], cl ; or dword ptr [rax + 0x29], ecx ; retf 0x3c80
0x000000000061da97 : or byte ptr [r8 - 0x39], 0x85 ; sar bl, 0xff ; jmp rax
0x0000000000690185 : or byte ptr [r8 - 0x39], cl ; ret 0xffff
0x0000000000674c92 : or byte ptr [r8 - 0x69f0fe07], al ; ret 0x23c
0x000000000069d514 : or byte ptr [r8 - 0x75], cl ; add ecx, dword ptr [rax - 0x77] ; retf 0x2948
0x000000000049638f : or byte ptr [r8 - 0x77], cl ; ret 0x894c
0x00000000004830e8 : or byte ptr [r8 - 0x77], cl ; ret 0x8d48
0x000000000040d5b3 : or byte ptr [r8 - 0x77], cl ; retf 0x5d90
0x000000000053e899 : or byte ptr [r8 - 0x77], cl ; rol edi, 0x44 ; ret
0x00000000006a8a4d : or byte ptr [r8 - 0x77], r9b ; jle 0x6a8a64 ; mov qword ptr [rdi], rsi ; ret
0x000000000059ccc8 : or byte ptr [r8 - 0x7d], r9b ; ret
0x000000000058bd6d : or byte ptr [r8 - 0x7d], r9b ; ret 0xeb01
0x000000000067a977 : or byte ptr [r8 - 0x7d], r9b ; rol byte ptr [rax + 0x48], 0x39 ; ret
0x00000000006a87ae : or byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000050cc61 : or byte ptr [r8], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000749d01 : or byte ptr [r8], al ; shr byte ptr [rdi], 1 ; clc ; jmp qword ptr [rax]
0x0000000000749d79 : or byte ptr [r8], al ; xor al, 0xf8 ; jmp rax
0x000000000074a091 : or byte ptr [r8], r8b ; mov al, 0xb7 ; clc ; call qword ptr [rax]
0x000000000074a081 : or byte ptr [r8], r8b ; nop ; mov bh, 0xf8 ; jmp rax
0x000000000074a049 : or byte ptr [r8], r8b ; nop ; mov cl, 0xf8 ; jmp qword ptr [rax]
0x00000000006d3a47 : or byte ptr [r9 + 0x63], cl ; add al, 0x84 ; add rax, r12 ; jmp rax
0x0000000000523040 : or byte ptr [r9 - 0x77], cl ; fisttp qword ptr [rax - 0x77] ; ret
0x000000000058c560 : or byte ptr [r9 - 0x77], cl ; ret 0x8948
0x0000000000689094 : or byte ptr [r9], r15b ; ret
0x0000000000674668 : or byte ptr [r9], r8b ; mov byte ptr [rdi + 9], 0 ; ret
0x000000000051f734 : or byte ptr [rax + 0x1b], dl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000055eb00 : or byte ptr [rax + 0x23], cl ; push rdi ; or byte ptr [rax + 0x39], cl ; ret 0xad75
0x000000000055eaff : or byte ptr [rax + 0x23], r9b ; push rdi ; or byte ptr [rax + 0x39], cl ; ret 0xad75
0x000000000061625e : or byte ptr [rax + 0x28c48348], dl ; pop rbx ; pop rbp ; ret
0x0000000000506f93 : or byte ptr [rax + 0x29], cl ; ret
0x0000000000684db2 : or byte ptr [rax + 0x29], cl ; retf
0x00000000006525c7 : or byte ptr [rax + 0x29], cl ; retf -0x7cb8
0x000000000068cdea : or byte ptr [rax + 0x29], cl ; retf -0xfd7
0x0000000000549ecf : or byte ptr [rax + 0x39], cl ; adc al, 7 ; setg al ; ret
0x00000000005a0043 : or byte ptr [rax + 0x39], cl ; inc byte ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8548
0x000000000052b084 : or byte ptr [rax + 0x39], cl ; jp 0x52b0b1 ; setl al ; ret
0x0000000000522485 : or byte ptr [rax + 0x39], cl ; ret
0x00000000004b9acd : or byte ptr [rax + 0x39], cl ; ret 0x1275
0x0000000000451a66 : or byte ptr [rax + 0x39], cl ; ret 0x1c75
0x00000000004111b8 : or byte ptr [rax + 0x39], cl ; ret 0x2275
0x000000000040cf25 : or byte ptr [rax + 0x39], cl ; ret 0x2675
0x000000000053b301 : or byte ptr [rax + 0x39], cl ; ret 0x597e
0x0000000000450621 : or byte ptr [rax + 0x39], cl ; ret 0x6b75
0x00000000004e242f : or byte ptr [rax + 0x39], cl ; ret 0x7074
0x000000000061b9cf : or byte ptr [rax + 0x39], cl ; ret 0x7375
0x000000000045630c : or byte ptr [rax + 0x39], cl ; ret 0x774
0x000000000041399c : or byte ptr [rax + 0x39], cl ; ret 0x775
0x0000000000411254 : or byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000541f3d : or byte ptr [rax + 0x39], cl ; ret 0x8f0f
0x00000000005d18fc : or byte ptr [rax + 0x39], cl ; ret 0x970f
0x00000000004123bd : or byte ptr [rax + 0x39], cl ; ret 0xa74
0x0000000000412551 : or byte ptr [rax + 0x39], cl ; ret 0xa75
0x000000000055eb04 : or byte ptr [rax + 0x39], cl ; ret 0xad75
0x000000000053aea2 : or byte ptr [rax + 0x39], cl ; ret 0xe7f
0x000000000051cb0a : or byte ptr [rax + 0x39], cl ; ret 0xf075
0x000000000069d683 : or byte ptr [rax + 0x39], cl ; retf -0x188b
0x00000000006772a9 : or byte ptr [rax + 0x39], cl ; retf 0x517d
0x0000000000522484 : or byte ptr [rax + 0x39], r9b ; ret
0x000000000052afd4 : or byte ptr [rax + 0x3b], cl ; jp 0x52b001 ; setl al ; ret
0x000000000068ed52 : or byte ptr [rax + 0x3d], cl ; add byte ptr [rcx - 0x128aff60], bl ; ret
0x00000000005043ee : or byte ptr [rax + 0x481e7501], bpl ; mov edi, ebx ; call rax
0x00000000005043ef : or byte ptr [rax + 0x481e7501], ch ; mov edi, ebx ; call rax
0x000000000040e064 : or byte ptr [rax + 0x5f], 0 ; call rax
0x00000000006b990f : or byte ptr [rax + 0x63], cl ; or dword ptr [rax + 0x29], ecx ; retf 0x3c80
0x00000000005268ea : or byte ptr [rax + 0x63], cl ; ret
0x000000000078821d : or byte ptr [rax + 0xb], cl ; add byte ptr [rax], r8b ; add ah, bl ; retf 3
0x00000000007a8652 : or byte ptr [rax + 0xb], cl ; ret
0x000000000050552a : or byte ptr [rax + 1], cl ; ret
0x000000000065fa03 : or byte ptr [rax + 1], cl ; ret 0x894c
0x0000000000733f70 : or byte ptr [rax + 6], ch ; add byte ptr [rdx - 0x33], al ; jmp qword ptr [rax]
0x0000000000743ab8 : or byte ptr [rax + 6], dl ; add al, al ; push rsp ; in al, dx ; jmp qword ptr [rax]
0x0000000000746cb0 : or byte ptr [rax + 7], ah ; add al, dl ; or dh, ah ; jmp qword ptr [rax]
0x00000000007979f7 : or byte ptr [rax + rax], ah ; add byte ptr [rax], al ; hlt ; ret 4
0x000000000067e00e : or byte ptr [rax + rax], al ; lea rdi, qword ptr [rbp - 0x70] ; call 0x67aa79
0x0000000000767a97 : or byte ptr [rax + rax], bl ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x0000000000767b3f : or byte ptr [rax + rax], ch ; add byte ptr [rax], al ; cld ; ret
0x000000000074b598 : or byte ptr [rax + rcx - 0x5f71000], ch ; jmp qword ptr [rax]
0x000000000074b028 : or byte ptr [rax + rcx - 0x6605000], dl ; jmp qword ptr [rax]
0x00000000007498a0 : or byte ptr [rax + rcx], ch ; add al, ah ; mov bl, 0xf7 ; jmp qword ptr [rax]
0x000000000074a698 : or byte ptr [rax + rcx], ch ; and byte ptr [rax], ah ; stc ; jmp qword ptr [rax]
0x000000000068818b : or byte ptr [rax + rdx], cl ; cmp rsi, rdi ; jne 0x688178 ; ret
0x000000000068818a : or byte ptr [rax + rdx], r9b ; cmp rsi, rdi ; jne 0x688179 ; ret
0x0000000000688112 : or byte ptr [rax + rsi], dl ; cmp rdx, rdi ; jne 0x688100 ; ret
0x0000000000688111 : or byte ptr [rax + rsi], r10b ; cmp rdx, rdi ; jne 0x688101 ; ret
0x000000000073feb8 : or byte ptr [rax - 0x1af61000], bl ; jmp qword ptr [rax]
0x0000000000747778 : or byte ptr [rax - 0x219ffff9], dl ; hlt ; jmp qword ptr [rax]
0x000000000061da98 : or byte ptr [rax - 0x39], 0x85 ; sar bl, 0xff ; jmp rax
0x0000000000690186 : or byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000005133a2 : or byte ptr [rax - 0x58000000], 1 ; jne 0x5133cc ; call rax
0x000000000074b140 : or byte ptr [rax - 0x5a6ffff8], bl ; stc ; jmp qword ptr [rax]
0x00000000006a1851 : or byte ptr [rax - 0x67], cl ; xor rax, rdx ; sub rax, rdx ; ret
0x0000000000674c93 : or byte ptr [rax - 0x69f0fe07], al ; ret 0x23c
0x00000000006bf64a : or byte ptr [rax - 0x73], 4 ; ret 0x8b48
0x00000000006c8077 : or byte ptr [rax - 0x75], 0x65 ; mov byte ptr [rax - 0x77], cl ; ret
0x000000000051aa2a : or byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x75], cl ; push rdx ; xor dh, dh ; ret 0xf01
0x00000000005f57a0 : or byte ptr [rax - 0x75], cl ; add byte ptr [rbp - 0x77], cl ; ret 0x894d
0x00000000004735ae : or byte ptr [rax - 0x75], cl ; add byte ptr [rbx + 0x6348cc55], cl ; retf -0x74b8
0x00000000005b0688 : or byte ptr [rax - 0x75], cl ; add eax, 0x4554f8 ; ret
0x00000000005b0378 : or byte ptr [rax - 0x75], cl ; add eax, 0x455538 ; ret
0x00000000005b0318 : or byte ptr [rax - 0x75], cl ; add eax, 0x455568 ; ret
0x00000000005af558 : or byte ptr [rax - 0x75], cl ; add eax, 0x456658 ; ret
0x00000000004780ca : or byte ptr [rax - 0x75], cl ; add eax, 0x58a816 ; call rax
0x000000000069d543 : or byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x39] ; ret 0x147c
0x000000000053ba26 : or byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x39] ; ret 0x8c0f
0x000000000069d515 : or byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax - 0x77] ; retf 0x2948
0x00000000006058fa : or byte ptr [rax - 0x75], cl ; lea edx, dword ptr [rax - 0x76000003] ; ret 0x148
0x0000000000541f39 : or byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x39], cl ; ret 0x8f0f
0x000000000053adcf : or byte ptr [rax - 0x75], cl ; or dword ptr [rax + 0x39], ecx ; retf -0x1584
0x000000000052246b : or byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 + 0x39], r9b ; ret
0x00000000005af1f8 : or byte ptr [rax - 0x75], cl ; xchg dword ptr [rax + 7], ebx ; add byte ptr [rax], al ; ret
0x00000000005af6a8 : or byte ptr [rax - 0x75], cl ; xchg dword ptr [rax + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000005af708 : or byte ptr [rax - 0x75], cl ; xchg dword ptr [rax + 8], edi ; add byte ptr [rax], al ; ret
0x00000000006b7cfa : or byte ptr [rax - 0x75], cl ; xor byte ptr [rax + 0x63], cl ; or dword ptr [rcx + 0x29], ecx ; retf 0xf42
0x0000000000509238 : or byte ptr [rax - 0x75], cl ; xor cl, byte ptr [rax - 0x77] ; retf -0x4318
0x00000000006282a8 : or byte ptr [rax - 0x75], cl ; xor cl, byte ptr [rax - 0x77] ; retf 0x4ce8
0x000000000065dd80 : or byte ptr [rax - 0x76dedbac], cl ; ret 0xe8c1
0x0000000000575e1e : or byte ptr [rax - 0x77], 0xc3 ; call qword ptr [rip + 0x48cab8]
0x00000000005b76a8 : or byte ptr [rax - 0x77], cl ; cmp eax, 0x44e4d8 ; ret
0x00000000005b6d68 : or byte ptr [rax - 0x77], cl ; cmp eax, 0x44ec38 ; ret
0x00000000005b6978 : or byte ptr [rax - 0x77], cl ; cmp eax, 0x44ef38 ; ret
0x00000000005b6918 : or byte ptr [rax - 0x77], cl ; cmp eax, 0x44ef68 ; ret
0x00000000005b49d8 : or byte ptr [rax - 0x77], cl ; cmp eax, 0x4511d8 ; ret
0x00000000006cdefe : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000005a4298 : or byte ptr [rax - 0x77], cl ; fild word ptr [rcx - 0x77] ; add al, 0xe8 ; retf
0x00000000005f835e : or byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x77] ; retf -0x7cb8
0x0000000000545dfd : or byte ptr [rax - 0x77], cl ; fsubp st(0) ; retf -0x2f
0x000000000057c822 : or byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000055e1a5 : or byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xea5a
0x00000000004f81a5 : or byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xfffd
0x0000000000636fb5 : or byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xffff
0x0000000000658b8c : or byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x00000000006a8a4e : or byte ptr [rax - 0x77], cl ; jle 0x6a8a63 ; mov qword ptr [rdi], rsi ; ret
0x000000000054a08a : or byte ptr [rax - 0x77], cl ; jo 0x54a0a4 ; ret
0x000000000066cec7 : or byte ptr [rax - 0x77], cl ; jo 0x66cee1 ; ret
0x000000000066cee5 : or byte ptr [rax - 0x77], cl ; jo 0x66cf02 ; mov qword ptr [rax], rcx ; ret
0x000000000054a086 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], r9b ; jo 0x54a0a8 ; ret
0x00000000005a7826 : or byte ptr [rax - 0x77], cl ; out dx, eax ; mov ecx, r12d ; call 0x6c3b19
0x000000000066cec3 : or byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x77], cl ; jo 0x66cee5 ; ret
0x0000000000505576 : or byte ptr [rax - 0x77], cl ; ret
0x00000000006c7030 : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000005fa261 : or byte ptr [rax - 0x77], cl ; ret 0x8944
0x000000000050d6a2 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000496390 : or byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000004830e9 : or byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000069e66d : or byte ptr [rax - 0x77], cl ; ret 0xc7
0x00000000004c8a96 : or byte ptr [rax - 0x77], cl ; retf
0x00000000006cbebe : or byte ptr [rax - 0x77], cl ; retf -0x238b
0x00000000006cbf11 : or byte ptr [rax - 0x77], cl ; retf -0x268b
0x0000000000574892 : or byte ptr [rax - 0x77], cl ; retf -0x72b8
0x000000000054e595 : or byte ptr [rax - 0x77], cl ; retf -0x76b4
0x000000000044b299 : or byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000040d5b4 : or byte ptr [rax - 0x77], cl ; retf 0x5d90
0x000000000053e89a : or byte ptr [rax - 0x77], cl ; rol edi, 0x44 ; ret
0x0000000000528f35 : or byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; retf -0x7ab8
0x0000000000615353 : or byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0xade8
0x000000000040b077 : or byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0xe283
0x00000000006a42b0 : or byte ptr [rax - 0x77], cl ; shr bl, 1 ; retf -0x3fcf
0x0000000000412631 : or byte ptr [rax - 0x77], cl ; xlatb ; mov rsi, rax ; call 0x6be8b9
0x000000000054a089 : or byte ptr [rax - 0x77], r9b ; jo 0x54a0a5 ; ret
0x000000000052fb13 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; ret 0xff73
0x00000000005594d3 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; ret 0xffe7
0x000000000050ca23 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0x18] ; ret 0xffed
0x00000000005139d1 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000484651 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf
0x000000000052225e : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xc], cl ; ret
0x000000000054e128 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rcx + 0x48], cl ; mov eax, edi ; ret
0x000000000056bc8a : or byte ptr [rax - 0x7d], cl ; in al, dx ; and al, ch ; in al, dx ; ret
0x0000000000505469 : or byte ptr [rax - 0x7d], cl ; ret
0x00000000006b6371 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000005d1924 : or byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000005d1a9e : or byte ptr [rax - 0x7d], cl ; ret 0x4908
0x0000000000563810 : or byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000058bd6e : or byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x000000000067a978 : or byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x39 ; ret
0x000000000069f729 : or byte ptr [rax - 0x7d], cl ; rol dword ptr [rcx], 0x39 ; retf
0x000000000060840f : or byte ptr [rax - 0x7f], cl ; ret
0x00000000006c6b12 : or byte ptr [rax - 0x80], al ; inc dword ptr [rcx] ; seta al ; ret
0x0000000000721862 : or byte ptr [rax - 0xf09590], cl ; retf 0x63b
0x00000000006cb6a4 : or byte ptr [rax - 9], cl ; fimul word ptr [rax - 0x73] ; add al, 0xf7 ; ret
0x000000000074a2aa : or byte ptr [rax], al ; adc ah, 0xf8 ; jmp rax
0x000000000074b472 : or byte ptr [rax], al ; adc ah, 0xf9 ; jmp qword ptr [rax]
0x00000000007b82ae : or byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; retf
0x000000000074a202 : or byte ptr [rax], al ; adc bl, cl ; clc ; jmp rax
0x00000000007492e2 : or byte ptr [rax], al ; adc byte ptr [rdx - 9], ch ; jmp rax
0x000000000074b62a : or byte ptr [rax], al ; adc byte ptr [rdx], dl ; cli ; jmp qword ptr [rax]
0x000000000074b452 : or byte ptr [rax], al ; adc dl, dl ; stc ; call qword ptr [rax]
0x000000000074b38a : or byte ptr [rax], al ; add al, al ; stc ; call rax
0x00000000005dc7bd : or byte ptr [rax], al ; add al, ch ; retf
0x000000000074a232 : or byte ptr [rax], al ; add bh, cl ; clc ; call rax
0x000000000074a2ea : or byte ptr [rax], al ; add bh, dl ; clc ; jmp rax
0x00000000005c7ae9 : or byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000064e89f : or byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000767a6d : or byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x0000000000767af5 : or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; hlt ; ret
0x00000000007679ed : or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, dx ; ret 1
0x00000000007679ad : or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 1
0x00000000007982a5 : or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x0000000000768255 : or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; push rsp ; retf
0x0000000000797995 : or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; xchg eax, esp ; ret 4
0x0000000000797a9d : or byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; pop rsp ; ret
0x000000000079c6a5 : or byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; syscall
0x00000000007579d5 : or byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000007a7aec : or byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000052fcd7 : or byte ptr [rax], al ; add byte ptr [rax], al ; add bh, al ; ret
0x000000000054348b : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006a87af : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000006682ee : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000006794e8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040bffa : or byte ptr [rax], al ; add byte ptr [rax], al ; add cl, cl ; ret
0x00000000006d4ba2 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004f439e : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000757aec : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x0000000000757aac : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x00000000007582a4 : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000007981a4 : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 4
0x000000000075795c : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 0
0x0000000000767a4c : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; ret
0x0000000000758244 : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; retf
0x00000000006b2ef2 : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000797a3c : or byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; cld ; ret 4
0x00000000007682f4 : or byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; hlt ; retf
0x000000000075819c : or byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; pop rsp ; retf 0
0x00000000007579a4 : or byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000007681a4 : or byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; retf 1
0x00000000007d582e : or byte ptr [rax], al ; add byte ptr [rbx + rax + 0x69307], bh ; ret
0x0000000000749022 : or byte ptr [rax], al ; add byte ptr [rbx - 9], al ; jmp qword ptr [rax]
0x000000000052c98b : or byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000005530e5 : or byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x12], cl ; mov rdi, rbx ; call rax
0x00000000004fbf34 : or byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000044185f : or byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x000000000074b6aa : or byte ptr [rax], al ; add byte ptr [rcx], ch ; cli ; jmp rax
0x00000000005c9f4d : or byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x000000000074a9ea : or byte ptr [rax], al ; add byte ptr [rdx - 7], bl ; jmp rax
0x00000000007491fa : or byte ptr [rax], al ; add byte ptr [rdx - 9], dl ; call rax
0x000000000074a5ba : or byte ptr [rax], al ; add byte ptr [rdx], 0xf9 ; call qword ptr [rax]
0x0000000000769405 : or byte ptr [rax], al ; add byte ptr [rsp], al ; ret
0x000000000074b3d2 : or byte ptr [rax], al ; add dh, al ; stc ; call qword ptr [rax]
0x000000000074bfc5 : or byte ptr [rax], al ; add dl, ch ; adc cl, ah ; call rsp
0x00000000006118a5 : or byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000061cdad : or byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000050cc62 : or byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000005fac61 : or byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000000006a59be : or byte ptr [rax], al ; add rsp, 0x48 ; ret
0x0000000000601927 : or byte ptr [rax], al ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000050e028 : or byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004f7672 : or byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000074a69a : or byte ptr [rax], al ; and byte ptr [rax], ah ; stc ; jmp qword ptr [rax]
0x000000000074a792 : or byte ptr [rax], al ; and byte ptr [rax], dh ; stc ; call rax
0x00000000007493d2 : or byte ptr [rax], al ; and byte ptr [rcx - 9], dh ; jmp rax
0x00000000007491aa : or byte ptr [rax], al ; and byte ptr [rcx - 9], dl ; jmp rax
0x000000000074a6ca : or byte ptr [rax], al ; and byte ptr [rdx], ah ; stc ; call rax
0x000000000074a2ba : or byte ptr [rax], al ; and ch, dl ; clc ; jmp qword ptr [rax]
0x0000000000748f9a : or byte ptr [rax], al ; cmp byte ptr [rsi], 0xf7 ; jmp rax
0x0000000000510013 : or byte ptr [rax], al ; je 0x510024 ; ret
0x0000000000540fe2 : or byte ptr [rax], al ; je 0x541008 ; add rsp, 8 ; ret
0x00000000005a55c2 : or byte ptr [rax], al ; je 0x5a55e8 ; add rsp, 8 ; ret
0x000000000074ac52 : or byte ptr [rax], al ; jg 0x74ac55 ; jmp rax
0x0000000000536f75 : or byte ptr [rax], al ; jne 0x536f85 ; movzx eax, byte ptr [rdi + 0x1f] ; ret
0x0000000000679500 : or byte ptr [rax], al ; jne 0x6794c1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000007493e2 : or byte ptr [rax], al ; jno 0x7493e3 ; call qword ptr [rax]
0x000000000074a752 : or byte ptr [rax], al ; jo 0x74a788 ; stc ; call qword ptr [rax]
0x000000000074a962 : or byte ptr [rax], al ; jo 0x74a9b3 ; stc ; call rax
0x000000000074ab02 : or byte ptr [rax], al ; jo 0x74ab78 ; stc ; jmp rax
0x000000000074ae52 : or byte ptr [rax], al ; jo 0x74adea ; stc ; jmp qword ptr [rax]
0x000000000074afea : or byte ptr [rax], al ; jo 0x74af91 ; stc ; jmp qword ptr [rax]
0x000000000074b4e2 : or byte ptr [rax], al ; jo 0x74b4cd ; stc ; jmp qword ptr [rax]
0x000000000074b682 : or byte ptr [rax], al ; jo 0x74b6b1 ; cli ; call qword ptr [rax]
0x00000000005eb81e : or byte ptr [rax], al ; leave ; ret
0x0000000000749eca : or byte ptr [rax], al ; loopne 0x749e7c ; clc ; jmp qword ptr [rax]
0x0000000000749ec9 : or byte ptr [rax], al ; loopne 0x749e7d ; clc ; jmp qword ptr [rax]
0x000000000074aa22 : or byte ptr [rax], al ; loopne 0x74aa86 ; stc ; jmp rax
0x000000000074b2d2 : or byte ptr [rax], al ; loopne 0x74b288 ; stc ; jmp qword ptr [rax]
0x000000000074ae92 : or byte ptr [rax], al ; mov al, 0x92 ; stc ; jmp qword ptr [rax]
0x000000000074af8a : or byte ptr [rax], al ; mov al, 0x9c ; stc ; jmp rax
0x000000000074b02a : or byte ptr [rax], al ; mov al, 0x9f ; stc ; jmp qword ptr [rax]
0x000000000074a092 : or byte ptr [rax], al ; mov al, 0xb7 ; clc ; call qword ptr [rax]
0x000000000074a192 : or byte ptr [rax], al ; mov al, 0xc4 ; clc ; call qword ptr [rax]
0x000000000074a56a : or byte ptr [rax], al ; mov al, 1 ; stc ; jmp qword ptr [rax]
0x00000000007e2b61 : or byte ptr [rax], al ; mov bh, 2 ; add al, 0xde ; or byte ptr [rax], al ; ret
0x0000000000749892 : or byte ptr [rax], al ; mov bl, 0xf7 ; jmp rax
0x0000000000625486 : or byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3dd451] ; call rax
0x00000000005f6cdd : or byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40bbfa] ; call rax
0x00000000005f6bf8 : or byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40bcdf] ; call rax
0x00000000005f65a4 : or byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40c333] ; call rax
0x00000000005f50ab : or byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40d82c] ; call rax
0x00000000005f4646 : or byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40e291] ; call rax
0x00000000005f4509 : or byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40e3ce] ; call rax
0x00000000005f3b9c : or byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40ed3b] ; call rax
0x00000000005f37c7 : or byte ptr [rax], al ; mov rax, qword ptr [rip + 0x40f110] ; call rax
0x00000000005f249b : or byte ptr [rax], al ; mov rax, qword ptr [rip + 0x41043c] ; call rax
0x00000000005f2191 : or byte ptr [rax], al ; mov rax, qword ptr [rip + 0x410746] ; call rax
0x00000000005f197c : or byte ptr [rax], al ; mov rax, qword ptr [rip + 0x410f5b] ; call rax
0x00000000005f17b3 : or byte ptr [rax], al ; mov rax, qword ptr [rip + 0x411124] ; call rax
0x00000000005f8524 : or byte ptr [rax], al ; mov rdi, rbx ; call 0x6d4747
0x000000000074a4fa : or byte ptr [rax], al ; nop ; add cl, bh ; call rax
0x000000000074a33a : or byte ptr [rax], al ; nop ; fprem ; jmp qword ptr [rax]
0x000000000074947a : or byte ptr [rax], al ; nop ; jb 0x74947b ; jmp rax
0x000000000074a082 : or byte ptr [rax], al ; nop ; mov bh, 0xf8 ; jmp rax
0x000000000074a04a : or byte ptr [rax], al ; nop ; mov cl, 0xf8 ; jmp qword ptr [rax]
0x000000000074adc2 : or byte ptr [rax], al ; nop ; mov edi, ecx ; jmp qword ptr [rax]
0x000000000074b142 : or byte ptr [rax], al ; nop ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rax]
0x000000000074b3a2 : or byte ptr [rax], al ; nop ; ret
0x000000000074a142 : or byte ptr [rax], al ; nop ; ret 0xfff8
0x000000000074a212 : or byte ptr [rax], al ; nop ; retf
0x000000000074a1ea : or byte ptr [rax], al ; nop ; retf -8
0x000000000074b4a2 : or byte ptr [rax], al ; nop ; salc ; stc ; call qword ptr [rax]
0x00000000005f87ca : or byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x0000000000647c0f : or byte ptr [rax], al ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000648125 : or byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000052c262 : or byte ptr [rax], al ; pop rbx ; ret
0x000000000074b61a : or byte ptr [rax], al ; push rax ; adc edx, edi ; call rax
0x000000000074b532 : or byte ptr [rax], al ; push rax ; add bh, dl ; jmp qword ptr [rax]
0x00000000007499e2 : or byte ptr [rax], al ; push rax ; fcompi st(7) ; call rax
0x000000000074a3aa : or byte ptr [rax], al ; push rax ; fdiv st(0), st(0) ; jmp rax
0x0000000000749a12 : or byte ptr [rax], al ; push rax ; loop 0x749a13 ; call rax
0x0000000000749ffa : or byte ptr [rax], al ; push rax ; mov al, 0xf8 ; jmp qword ptr [rax]
0x00000000007498da : or byte ptr [rax], al ; push rax ; mov bh, 0xf7 ; jmp qword ptr [rax]
0x000000000074a172 : or byte ptr [rax], al ; push rax ; ret
0x000000000074a9aa : or byte ptr [rax], al ; push rax ; stc ; jmp qword ptr [rax]
0x00000000007497aa : or byte ptr [rax], al ; push rax ; test al, 0xf7 ; call rax
0x000000000074a822 : or byte ptr [rax], al ; push rax ; xor edi, ecx ; call rax
0x000000000074a36a : or byte ptr [rax], al ; rcr dl, 1 ; clc ; jmp rax
0x0000000000723fea : or byte ptr [rax], al ; ret
0x00000000007d2430 : or byte ptr [rax], al ; ret 0x403
0x00000000007ebca4 : or byte ptr [rax], al ; ret 0x508
0x0000000000723bca : or byte ptr [rax], al ; ret 0x800
0x0000000000749932 : or byte ptr [rax], al ; ret 0xfff7
0x000000000074a12a : or byte ptr [rax], al ; ret 0xfff8
0x00000000007dddb5 : or byte ptr [rax], al ; retf
0x00000000007cd162 : or byte ptr [rax], al ; retf 0x506
0x00000000007c0a06 : or byte ptr [rax], al ; retf 0x6305
0x0000000000723c0a : or byte ptr [rax], al ; retf 0x800
0x00000000007cd277 : or byte ptr [rax], al ; ror byte ptr [rax], 5 ; retf 8
0x00000000007dbdd1 : or byte ptr [rax], al ; ror byte ptr [rcx], 5 ; ret
0x0000000000749152 : or byte ptr [rax], al ; ror byte ptr [rdi - 9], 1 ; call rax
0x000000000074a4aa : or byte ptr [rax], al ; sar bh, 1 ; clc ; jmp rax
0x000000000074b52a : or byte ptr [rax], al ; sar dh, 0xf9 ; call rax
0x0000000000749f8a : or byte ptr [rax], al ; scasd eax, dword ptr [rdi] ; clc ; call rax
0x000000000053ad43 : or byte ptr [rax], al ; sete al ; ret
0x000000000065cc33 : or byte ptr [rax], al ; setne al ; ret
0x000000000074a70a : or byte ptr [rax], al ; shr byte ptr [rcx + rdi*8], 1 ; jmp qword ptr [rax]
0x0000000000749d02 : or byte ptr [rax], al ; shr byte ptr [rdi], 1 ; clc ; jmp qword ptr [rax]
0x000000000074b512 : or byte ptr [rax], al ; shr ch, 0xf9 ; jmp rax
0x0000000000617b9b : or byte ptr [rax], al ; shr eax, 0x1f ; nop ; leave ; ret
0x000000000074aa8a : or byte ptr [rax], al ; stc ; call qword ptr [rax]
0x000000000074a6da : or byte ptr [rax], al ; sub byte ptr [rbx], 0xf9 ; jmp qword ptr [rax]
0x000000000074b6ba : or byte ptr [rax], al ; sub edx, edi ; call qword ptr [rax]
0x00000000007cc229 : or byte ptr [rax], al ; test byte ptr [rdi], 0x44 ; add byte ptr [rax], al ; retf 0x1d08
0x0000000000777aee : or byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x0000000000749d7a : or byte ptr [rax], al ; xor al, 0xf8 ; jmp rax
0x000000000074a46a : or byte ptr [rax], al ; xor bh, bh ; clc ; jmp qword ptr [rax]
0x000000000074a37a : or byte ptr [rax], al ; xor bl, bl ; clc ; jmp qword ptr [rax]
0x0000000000749d3a : or byte ptr [rax], al ; xor byte ptr [rax], 0xf8 ; call rax
0x000000000074a932 : or byte ptr [rax], al ; xor byte ptr [rbx - 7], al ; call qword ptr [rax]
0x000000000074a83a : or byte ptr [rax], al ; xor byte ptr [rcx + rdi*8], dh ; jmp qword ptr [rax]
0x0000000000748fca : or byte ptr [rax], al ; xor byte ptr [rcx - 9], al ; call rax
0x000000000074a7da : or byte ptr [rax], al ; xor byte ptr [rcx], 0xf9 ; call rax
0x000000000074a32a : or byte ptr [rax], al ; xor cl, bl ; clc ; jmp rax
0x000000000074a262 : or byte ptr [rax], al ; xor dl, dl ; clc ; call rax
0x00000000006a4982 : or byte ptr [rax], al ; xorpd xmm0, xmm1 ; ret
0x0000000000740418 : or byte ptr [rax], bh ; add eax, 0xe5437000 ; jmp qword ptr [rax]
0x00000000004bd16e : or byte ptr [rax], bh ; ret 0x1575
0x00000000004bd129 : or byte ptr [rax], bh ; ret 0x2a75
0x000000000073fd80 : or byte ptr [rax], bl ; add eax, 0xe505a000 ; jmp qword ptr [rax]
0x00000000005a3b76 : or byte ptr [rax], bl ; fnsave dword ptr [rax] ; jne 0x5a3b5f ; ret
0x00000000005a3b75 : or byte ptr [rax], bl ; fnsave dword ptr [rax] ; jne 0x5a3b60 ; ret
0x00000000007c0e6d : or byte ptr [rax], bl ; retf 0x11
0x000000000060029b : or byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004bd16d : or byte ptr [rax], dil ; ret 0x1575
0x00000000004bd128 : or byte ptr [rax], dil ; ret 0x2a75
0x0000000000749ff9 : or byte ptr [rax], r8b ; push rax ; mov al, 0xf8 ; jmp qword ptr [rax]
0x0000000000749f89 : or byte ptr [rax], r8b ; scasd eax, dword ptr [rdi] ; clc ; call rax
0x000000000057a5ee : or byte ptr [rbp + 0x10], ch ; add byte ptr [rax - 0x77], cl ; ret
0x000000000068d83a : or byte ptr [rbp + 0x5b0975c0], al ; pop rbp ; pop r12 ; ret
0x0000000000787aa4 : or byte ptr [rbp + 0xb], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; ret
0x000000000078830c : or byte ptr [rbp + 0xb], al ; add byte ptr [rax + rax], dl ; add ah, cl ; retf
0x0000000000685fc6 : or byte ptr [rbp + 0xc], dh ; pop rbx ; ret
0x000000000051f510 : or byte ptr [rbp + 0xf], cl ; mov edi, 0x83480045 ; ret
0x000000000069c86f : or byte ptr [rbp + 1], al ; ret 0x19eb
0x000000000054db3a : or byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x000000000067fb5c : or byte ptr [rbp + 5], 0 ; add rsp, 8 ; ret
0x0000000000747298 : or byte ptr [rbp + 7], bh ; add byte ptr [rax - 0x52], al ; hlt ; jmp qword ptr [rax]
0x0000000000747128 : or byte ptr [rbp + 7], dh ; add al, al ; push rdi ; hlt ; jmp qword ptr [rax]
0x0000000000741df0 : or byte ptr [rbp + rax - 0x1842b000], bh ; jmp qword ptr [rax]
0x000000000062a489 : or byte ptr [rbp + rax*8 + 0x71], bh ; add byte ptr [rax - 0x77], cl ; ret
0x000000000062a488 : or byte ptr [rbp + rax*8 + 0x71], dil ; add byte ptr [rax - 0x77], cl ; ret
0x000000000053d83b : or byte ptr [rbp + rcx*4 + 0x60], cl ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000005faa25 : or byte ptr [rbp + rcx*4 + 0x60], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000060bea1 : or byte ptr [rbp + rcx*4 + 0x68], cl ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000057ee1e : or byte ptr [rbp + rcx*4 + 0x74], 0xc1 ; sbb byte ptr [rax + 0x63], cl ; ret 0x8948
0x00000000004f796c : or byte ptr [rbp + rcx*4 + 0x78], cl ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000517f66 : or byte ptr [rbp - 0x3f60f040], al ; ret
0x00000000006895b0 : or byte ptr [rbp - 0x3f61f037], al ; ret
0x00000000005f7ce2 : or byte ptr [rbp - 0x3f6bf040], al ; ret
0x000000000074b2d0 : or byte ptr [rbp - 0x521ffff8], bl ; stc ; jmp qword ptr [rax]
0x0000000000747fe8 : or byte ptr [rbp - 0x55effff9], bh ; cmc ; jmp qword ptr [rax]
0x0000000000453b94 : or byte ptr [rbp - 1], ch ; dec ecx ; ret
0x0000000000431f81 : or byte ptr [rbp], bl ; call rax
0x0000000000665f4e : or byte ptr [rbx + 0x1724af], al ; add byte ptr [rax], cl ; ret
0x0000000000745028 : or byte ptr [rbx + 0x21400006], bh ; out dx, eax ; jmp qword ptr [rax]
0x0000000000747a38 : or byte ptr [rbx + 0x25f00007], bl ; cmc ; jmp qword ptr [rax]
0x000000000043bba8 : or byte ptr [rbx + 0x2948bc55], cl ; retf -0x74b8
0x000000000043b47d : or byte ptr [rbx + 0x2948bc55], cl ; retf -0x76b8
0x000000000043b87c : or byte ptr [rbx + 0x2948cc55], cl ; retf -0x74b8
0x000000000043d925 : or byte ptr [rbx + 0x2948d455], cl ; retf -0x74b8
0x0000000000440a92 : or byte ptr [rbx + 0x2948dc55], cl ; retf -0x74b8
0x0000000000440af2 : or byte ptr [rbx + 0x2948dc55], cl ; retf -0x76b8
0x000000000043ca1b : or byte ptr [rbx + 0x2948e455], cl ; retf -0x74b8
0x00000000004791a8 : or byte ptr [rbx + 0x2948ec55], cl ; retf -0x74b8
0x000000000043daac : or byte ptr [rbx + 0x2948f455], cl ; retf -0x74b8
0x000000000043bd94 : or byte ptr [rbx + 0x2948fc55], cl ; retf -0x74b8
0x00000000005a0c33 : or byte ptr [rbx + 0x39441058], cl ; ret
0x000000000066d40c : or byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x000000000041b34d : or byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x00000000005fbc02 : or byte ptr [rbx + 0x47801e8], al ; mov dword ptr [rdi + 8], eax ; ret
0x000000000067ae3c : or byte ptr [rbx + 0x4c0f08f8], al ; ret 0x9848
0x000000000062e6a1 : or byte ptr [rbx + 0x4e885], cl ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000050469f : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000068d8c7 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp 0x689ba7
0x00000000005359f7 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; jmp rax
0x0000000000689c3d : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004f7b6a : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000062efa6 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004f75e6 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000058f2e4 : or byte ptr [rbx + 0x634801c2], al ; retf 0x1c89
0x00000000006d4b26 : or byte ptr [rbx + 0x634801eb], al ; ret
0x000000000074aba0 : or byte ptr [rbx + 0x7a600008], al ; stc ; jmp qword ptr [rax]
0x00000000005f7ca8 : or byte ptr [rbx + 0x8473907], cl ; setl al ; ret
0x000000000076aa8c : or byte ptr [rbx + 0xb], al ; ret
0x0000000000743e38 : or byte ptr [rbx + 6], ah ; add byte ptr [rax - 0x46], dl ; in al, dx ; jmp qword ptr [rax]
0x000000000073b460 : or byte ptr [rbx + rax - 0x223ea000], ah ; jmp qword ptr [rax]
0x00000000007b6b52 : or byte ptr [rbx + rcx + 2], al ; ret
0x0000000000770ff7 : or byte ptr [rbx + rcx + 2], al ; ret 0xe0a
0x000000000057ec49 : or byte ptr [rbx + rcx*4 + 4], cl ; cmp dword ptr [rcx], edi ; ret 0x894c
0x000000000077823c : or byte ptr [rbx + rcx], al ; add byte ptr [rax], r8b ; add ah, bh ; retf 2
0x00000000005764c3 : or byte ptr [rbx - 0x1576ef96], 0xe8 ; ret 0xfffa
0x0000000000747620 : or byte ptr [rbx - 0x2e61fff9], cl ; hlt ; jmp qword ptr [rax]
0x00000000006895ad : or byte ptr [rbx - 0x367af7b8], cl ; setle al ; ret
0x000000000059eba2 : or byte ptr [rbx - 0x3f7aefbd], cl ; jg 0x59eb69 ; pop rbx ; ret
0x000000000074b238 : or byte ptr [rbx - 0x550ffff8], bl ; stc ; jmp qword ptr [rax]
0x000000000074afe8 : or byte ptr [rbx - 0x618ffff8], dl ; stc ; jmp qword ptr [rax]
0x00000000005f9a65 : or byte ptr [rbx - 0x73], cl ; je 0x5f9aaf ; add byte ptr [rax - 0x77], cl ; ret
0x000000000060c62b : or byte ptr [rbx - 0x73], cl ; je 0x60c65d ; add byte ptr [rax - 0x77], cl ; ret
0x000000000074adc0 : or byte ptr [rbx - 0x746ffff8], cl ; stc ; jmp qword ptr [rax]
0x00000000004f704c : or byte ptr [rbx - 0x74bfdbbc], cl ; push rcx ; add al, 0x39 ; ret 0x2f7c
0x000000000047e2e1 : or byte ptr [rbx - 0x76b60bbb], cl ; retf -0x3977
0x0000000000600c36 : or byte ptr [rbx - 0x76b667ab], cl ; ret 0x894c
0x000000000065dbd8 : or byte ptr [rbx - 0x76b7f7be], cl ; retf
0x00000000006b49e6 : or byte ptr [rbx - 0x7cb76fb4], cl ; ret
0x000000000048fdcf : or byte ptr [rbx], ah ; add cl, cl ; ret
0x00000000005af13c : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000007d1f3a : or byte ptr [rbx], al ; retf 0x507
0x0000000000523eed : or byte ptr [rbx], bl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040fe0f : or byte ptr [rbx], ch ; add cl, cl ; ret
0x0000000000550a58 : or byte ptr [rbx], dl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004d20a6 : or byte ptr [rbx], dl ; call rax
0x00000000006b2e95 : or byte ptr [rcx + 0x39], al ; retf
0x00000000005fa3b2 : or byte ptr [rcx + 0x39], cl ; ret 0xef72
0x00000000005291d4 : or byte ptr [rcx + 0x5d5b4443], cl ; pop r12 ; ret
0x00000000006d3a48 : or byte ptr [rcx + 0x63], cl ; add al, 0x84 ; add rax, r12 ; jmp rax
0x000000000066bbdd : or byte ptr [rcx + 0x72], 0 ; ret
0x0000000000787a34 : or byte ptr [rcx + 0xb], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; hlt ; ret 3
0x00000000007b795d : or byte ptr [rcx + 0xb], al ; and al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 6
0x0000000000778155 : or byte ptr [rcx + 0xb], al ; sub al, 0 ; add byte ptr [rax], al ; push rsp ; retf 2
0x0000000000589d5a : or byte ptr [rcx + 0xf], ch ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000746cf0 : or byte ptr [rcx + 7], ah ; add byte ptr [rax + 0xd], al ; hlt ; jmp qword ptr [rax]
0x000000000050b6b5 : or byte ptr [rcx + rcx*4 - 0xa], cl ; call 0x687956
0x00000000007885a8 : or byte ptr [rcx - 0x20], ch ; call qword ptr [rbx]
0x00000000006bd383 : or byte ptr [rcx - 0x73], al ; add al, 0 ; add eax, edx ; ret
0x00000000006b8291 : or byte ptr [rcx - 0x73], al ; push rcx ; add dword ptr [rsi + 0x39], esp ; retf 0x137d
0x00000000006d4a43 : or byte ptr [rcx - 0x73], cl ; sbb al, 0xcc ; mov rsi, qword ptr [rbx] ; call r14
0x0000000000686f63 : or byte ptr [rcx - 0x76b7fb98], cl ; ret
0x0000000000523041 : or byte ptr [rcx - 0x77], cl ; fisttp qword ptr [rax - 0x77] ; ret
0x00000000005a0f67 : or byte ptr [rcx - 0x77], cl ; fmul qword ptr [rax - 0x7d] ; ret
0x000000000058c561 : or byte ptr [rcx - 0x77], cl ; ret 0x8948
0x00000000004ec422 : or byte ptr [rcx - 0x77], cl ; retf -0x2877
0x000000000047a964 : or byte ptr [rcx - 0x77], cl ; retf -0x76b8
0x0000000000480229 : or byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], cl ; ret 0x1fe8
0x000000000068dd73 : or byte ptr [rcx - 0x7c14d62d], cl ; ret
0x00000000005f988b : or byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000073f920 : or byte ptr [rcx], al ; add eax, 0xe4443000 ; jmp qword ptr [rax]
0x00000000006706f7 : or byte ptr [rcx], al ; mfence ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000674669 : or byte ptr [rcx], al ; mov byte ptr [rdi + 9], 0 ; ret
0x000000000063914c : or byte ptr [rcx], al ; mov byte ptr [rsp + 9], 0 ; call 0x675419
0x0000000000663768 : or byte ptr [rcx], al ; ret 0x8348
0x00000000005870ab : or byte ptr [rcx], bh ; enter 0x57f, -0x73 ; push rcx ; add dword ptr [rcx], ebp ; ret 0xc189
0x000000000051bd30 : or byte ptr [rcx], bh ; ret
0x00000000004b438d : or byte ptr [rcx], bh ; ret 0x1275
0x00000000005633fc : or byte ptr [rcx], bh ; ret 0x2f7d
0x000000000068a631 : or byte ptr [rcx], bh ; ret 0x8f0f
0x00000000004cf16e : or byte ptr [rcx], bh ; retf -0x72f1
0x000000000058efd9 : or byte ptr [rcx], bh ; retf -0x7af1
0x0000000000559cc3 : or byte ptr [rcx], bh ; retf 0xa7c
0x0000000000543ed1 : or byte ptr [rcx], bl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000073fdc8 : or byte ptr [rcx], bl ; add eax, 0xe5072000 ; jmp qword ptr [rax]
0x00000000004720bc : or byte ptr [rcx], bl ; call rax
0x00000000006d5626 : or byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x1c ; and al, 0xf ; ret 0x8348
0x00000000006d4e4f : or byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x34 ; and al, 0xf ; ret 0x8348
0x000000000042ddb7 : or byte ptr [rcx], ch ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000066a7ed : or byte ptr [rcx], ch ; ret 0x8d44
0x00000000004e48e4 : or byte ptr [rcx], ch ; ret 0xd089
0x00000000005e8505 : or byte ptr [rcx], cl ; add cl, cl ; ret
0x0000000000721195 : or byte ptr [rcx], dh ; add byte ptr [rax], cl ; xor dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret
0x0000000000720d95 : or byte ptr [rcx], dh ; add byte ptr [rax], cl ; xor dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0x1000
0x00000000006a696d : or byte ptr [rcx], dh ; imul al ; retf
0x00000000004b438c : or byte ptr [rcx], dil ; ret 0x1275
0x00000000004cf16d : or byte ptr [rcx], dil ; retf -0x72f1
0x00000000004c37c4 : or byte ptr [rdi + 0x19], dl ; add cl, cl ; ret
0x00000000007450e0 : or byte ptr [rdi + 0x26a00006], bh ; out dx, eax ; jmp qword ptr [rax]
0x0000000000787adc : or byte ptr [rdi + 0xb], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; pushfq ; ret
0x00000000007a6c37 : or byte ptr [rdi + 0xb], al ; add dl, byte ptr [rax + 0x41380e0a] ; ret
0x000000000076c1e2 : or byte ptr [rdi + 0xb], al ; pop rdi ; ret
0x00000000007ab081 : or byte ptr [rdi + 0xb], al ; ret
0x000000000073a710 : or byte ptr [rdi + 3], bl ; add al, ah ; cmp ebx, esp ; jmp qword ptr [rax]
0x0000000000746fa8 : or byte ptr [rdi + 7], ch ; add byte ptr [rax], ah ; hlt ; jmp qword ptr [rax]
0x00000000006cd2d2 : or byte ptr [rdi + r15*2], r15b ; je 0x6cd2e6 ; ret
0x000000000068cd6c : or byte ptr [rdi + rax - 0x77], bh ; retf
0x00000000007470f0 : or byte ptr [rdi + rax], dh ; loopne 0x747151 ; hlt ; jmp qword ptr [rax]
0x00000000006be442 : or byte ptr [rdi + rax], dl ; ret
0x000000000050f7de : or byte ptr [rdi + rcx + 0x48], dh ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006cd2d3 : or byte ptr [rdi + rdi*2], bh ; je 0x6cd2e5 ; ret
0x00000000006881e5 : or byte ptr [rdi + rdx], dh ; ret
0x00000000006881e4 : or byte ptr [rdi + rdx], sil ; ret
0x0000000000557d0a : or byte ptr [rdi + rsi*8 - 0x76b7ff91], dh ; ret
0x0000000000557d09 : or byte ptr [rdi + rsi*8 - 0x76b7ff91], sil ; ret
0x000000000074b108 : or byte ptr [rdi - 0x5beffff8], dl ; stc ; jmp qword ptr [rax]
0x000000000074acb8 : or byte ptr [rdi - 0x7f0ffff8], al ; stc ; jmp qword ptr [rax]
0x00000000007c6733 : or byte ptr [rdi], 0 ; xchg eax, ebx ; syscall
0x000000000079b0d0 : or byte ptr [rdi], 0xe7 ; call qword ptr [rdx]
0x000000000074453c : or byte ptr [rdi], ah ; out dx, al ; call qword ptr [rax]
0x0000000000745b81 : or byte ptr [rdi], al ; add byte ptr [rax + 0x38], dh ; int1 ; jmp qword ptr [rax]
0x000000000060fdad : or byte ptr [rdi], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007d05ad : or byte ptr [rdi], al ; add byte ptr [rax], al ; retf 0x1d08
0x0000000000412090 : or byte ptr [rdi], bl ; call rax
0x00000000006941bc : or byte ptr [rdi], bl ; sbb al, byte ptr [r8] ; ret
0x0000000000668a72 : or byte ptr [rdi], cl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000007bd538 : or byte ptr [rdi], cl ; int1 ; jmp qword ptr [rdx]
0x000000000059de08 : or byte ptr [rdi], cl ; lahf ; ret 0x3944
0x000000000067aa9c : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000050f9d8 : or byte ptr [rdi], cl ; mov dh, 0x80 ; fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000005b02a8 : or byte ptr [rdi], cl ; mov dh, 0x87 ; enter 6, 0 ; ret
0x00000000005af678 : or byte ptr [rdi], cl ; mov dh, 0x87 ; fadd dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000000005af0d8 : or byte ptr [rdi], cl ; mov dh, 0x87 ; mov byte ptr [rdx], cl ; add byte ptr [rax], al ; ret
0x00000000005af138 : or byte ptr [rdi], cl ; mov dh, 0x87 ; or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000005b00a8 : or byte ptr [rdi], cl ; mov dh, 0x87 ; sub byte ptr [rdx], cl ; add byte ptr [rax], al ; ret
0x00000000005b0438 : or byte ptr [rdi], cl ; mov dh, 0x87 ; test al, 2 ; add byte ptr [rax], al ; ret
0x00000000006d49f6 : or byte ptr [rdi], cl ; ret 0x90c3
0x000000000067ae3f : or byte ptr [rdi], cl ; ret 0x9848
0x00000000005c657e : or byte ptr [rdi], cl ; sahf ; ret 0xc085
0x00000000006a50d8 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5a74
0x0000000000492017 : or byte ptr [rdi], dl ; call rax
0x00000000006d49f5 : or byte ptr [rdi], r9b ; ret 0x90c3
0x00000000004247a4 : or byte ptr [rdx + 0x29480026], dh ; ret
0x0000000000747cb0 : or byte ptr [rdx + 0x58200007], ch ; cmc ; jmp qword ptr [rax]
0x0000000000772b22 : or byte ptr [rdx + 0xb], al ; ret
0x0000000000743c98 : or byte ptr [rdx + 6], bl ; add byte ptr [rax - 0x73], dh ; in al, dx ; jmp qword ptr [rax]
0x000000000074a838 : or byte ptr [rdx + 8], dh ; add byte ptr [rax], dh ; xor al, 0xf9 ; jmp qword ptr [rax]
0x00000000007c6507 : or byte ptr [rdx - 0x3bfffff9], al ; syscall
0x0000000000721920 : or byte ptr [rdx - 0x44b63727], cl ; ret 0x8ad1
0x00000000007cd39c : or byte ptr [rdx], 8 ; ret 0x13
0x00000000007d05a7 : or byte ptr [rdx], ah ; popfq ; adc al, 0 ; ret
0x000000000064c699 : or byte ptr [rdx], al ; add byte ptr [rax], al ; call 0x689146
0x00000000005e20be : or byte ptr [rdx], al ; call rax
0x00000000007f6902 : or byte ptr [rdx], al ; fadd dword ptr [rcx + 9] ; ret 0x308
0x00000000007d7c3c : or byte ptr [rdx], al ; ret
0x00000000007ea119 : or byte ptr [rdx], al ; ret 0x16
0x0000000000462042 : or byte ptr [rdx], bl ; call rax
0x0000000000651d56 : or byte ptr [rdx], cl ; add byte ptr [rax], al ; mov esi, 1 ; call rax
0x00000000007463b8 : or byte ptr [rip + 0x11e00007], dh ; jmp qword ptr [rax]
0x00000000007465b0 : or byte ptr [rip + 0x3d000007], bh ; jmp qword ptr [rax]
0x0000000000403eab : or byte ptr [rip + 0x5d5b5800], ch ; ret
0x0000000000672ac3 : or byte ptr [rip + 0x9480000], al ; ret 0x840f
0x000000000079bf8d : or byte ptr [rip - 0x186e7c00], al ; jmp rdi
0x000000000073fa81 : or byte ptr [rip - 0x1b56e000], al ; call rax
0x00000000007e89ff : or byte ptr [rip - 0x4bffec14], bl ; or dword ptr [rcx], ebx ; retf 0x12
0x0000000000747bd8 : or byte ptr [rsi + 0x47000007], ah ; cmc ; jmp qword ptr [rax]
0x0000000000747de8 : or byte ptr [rsi + 0x61300007], ch ; cmc ; jmp qword ptr [rax]
0x0000000000682d41 : or byte ptr [rsi + 0xf], ah ; push rsp ; retf
0x00000000006a5175 : or byte ptr [rsi + 0xf], ah ; push rsp ; retf 0xf66
0x00000000006a52be : or byte ptr [rsi + 0xf], ah ; retf
0x000000000074a708 : or byte ptr [rsi + 8], ch ; add al, dl ; sub al, 0xf9 ; jmp qword ptr [rax]
0x0000000000749ff8 : or byte ptr [rsi + 8], cl ; add byte ptr [rax - 0x50], dl ; clc ; jmp qword ptr [rax]
0x00000000004268d8 : or byte ptr [rsi - 0x76b7ffdb], bl ; ret
0x00000000005ac134 : or byte ptr [rsi - 0x76b7ffee], al ; ret
0x00000000006cb3dc : or byte ptr [rsi - 0x77], ah ; jb 0x6cb3fe ; add rsp, 8 ; ret
0x000000000041f27c : or byte ptr [rsi], ah ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000749020 : or byte ptr [rsi], al ; or byte ptr [rax], al ; add byte ptr [rbx - 9], al ; jmp qword ptr [rax]
0x00000000007d209c : or byte ptr [rsi], al ; retf
0x00000000007e65e0 : or byte ptr [rsi], al ; xchg eax, esp ; adc byte ptr [rax], al ; ret
0x0000000000622068 : or byte ptr [rsi], bh ; add bh, bh ; ror cl, 1 ; ret
0x00000000007990f8 : or byte ptr [rsi], bl ; jmp rax
0x00000000005a02bc : or byte ptr [rsi], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007c018b : or byte ptr [rsi], cl ; add byte ptr [rax], al ; ret 0x508
0x00000000005e00b0 : or byte ptr [rsi], cl ; add cl, cl ; ret
0x00000000004a206e : or byte ptr [rsi], dl ; call rax
0x000000000073e518 : or byte ptr [rsp + rax - 0x1de51000], dl ; jmp qword ptr [rax]
0x0000000000749939 : or byte ptr cs:[rax], al ; ret
0x0000000000749931 : or byte ptr cs:[rax], al ; ret 0xfff7
0x00000000007c6732 : or byte ptr ds:[rdi], 0 ; xchg eax, ebx ; syscall
0x00000000004f83e3 : or byte ptr gs:[rax - 0x77], cl ; retf -0x76b8
0x000000000074a5b9 : or byte ptr gs:[rax], al ; add byte ptr [rdx], 0xf9 ; call qword ptr [rax]
0x000000000074a569 : or byte ptr gs:[rax], al ; mov al, 1 ; stc ; jmp qword ptr [rax]
0x00000000007848f0 : or ch, 0xdf ; jmp qword ptr [rax]
0x000000000073fe0d : or ch, ah ; call qword ptr [rax]
0x000000000073fe4d : or ch, ah ; call rax
0x000000000073fdfd : or ch, ah ; jmp rax
0x0000000000742010 : or ch, al ; add eax, 0xe80b1000 ; jmp qword ptr [rax]
0x000000000077afd1 : or ch, bl ; call qword ptr [rbx]
0x00000000007f47fe : or ch, byte ptr [rbx - 0x36] ; add byte ptr [rax + 0xb], ch ; retf
0x000000000050de7e : or ch, byte ptr [rip - 0x76b7ffe9] ; ret
0x0000000000742190 : or ch, cl ; add eax, 0xe82de000 ; jmp qword ptr [rax]
0x00000000007a29b1 : or ch, cl ; call qword ptr [rsi]
0x0000000000733c05 : or ch, cl ; push qword ptr [rax] ; retf 3
0x00000000005779aa : or ch, dl ; call 0xffffffffc3e0c2b6
0x00000000007e6e24 : or ch, dl ; xor dword ptr [rax], eax ; ret 0x420f
0x000000000074be19 : or cl, ah ; call rsp
0x000000000073518d : or cl, bh ; inc dword ptr [rax] ; ret 1
0x0000000000684043 : or cl, bl ; in eax, dx ; fxch st(1) ; fyl2x ; ret
0x00000000006b331a : or cl, byte ptr [rax + 0x29] ; retf 0x4489
0x0000000000565a29 : or cl, byte ptr [rax + 0x63] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000006b9787 : or cl, byte ptr [rax + 0x63] ; ror dword ptr [rax + 0x29], cl ; ret 0x8348
0x00000000006adbb3 : or cl, byte ptr [rax + 0x63] ; ror dword ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000054e12d : or cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004f55d5 : or cl, byte ptr [rax - 0x77] ; ret
0x00000000006ab962 : or cl, byte ptr [rax - 0x77] ; ret 0x65e8
0x0000000000541c12 : or cl, byte ptr [rax - 0x77] ; retf 0x294c
0x00000000005092a0 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000664176 : or cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000006cd698 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000007cd39d : or cl, byte ptr [rax] ; ret 0x13
0x00000000005139ba : or cl, byte ptr [rbp + 0x4f] ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000051a078 : or cl, byte ptr [rbp + 0x63] ; ret 0x8349
0x0000000000551df3 : or cl, byte ptr [rbx] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000041fbc2 : or cl, byte ptr [rbx] ; sub al, byte ptr [rax] ; leave ; ret
0x00000000005fd5d5 : or cl, byte ptr [rcx + 0x63] ; retf
0x00000000005af3fd : or cl, byte ptr [rcx + 0x63] ; ror byte ptr [rax + 0x29], 1 ; retf -0x72b8
0x00000000005c9ac9 : or cl, byte ptr [rcx + 0x63] ; ror byte ptr [rax + 0x29], cl ; retf -0x72b8
0x00000000004ffd9f : or cl, byte ptr [rcx + 0x63] ; ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000007f57a9 : or cl, byte ptr [rcx] ; ret 0x1e
0x00000000007b6b4f : or cl, byte ptr [rdi + rax] ; or byte ptr [rbx + rcx + 2], al ; ret
0x0000000000513cba : or cl, byte ptr [rdx + 0x4f] ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000006ea089 : or cl, byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0x49
0x00000000007f57a3 : or cl, byte ptr [rdx] ; fisub dword ptr [rcx] ; add ch, bh ; or cl, byte ptr [rcx] ; ret 0x1e
0x00000000004d280e : or cl, byte ptr [rip - 0x70410000] ; ret 0x6e
0x00000000006d12ce : or cl, byte ptr [rsi - 0x48] ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000007dd5cb : or cl, byte ptr [rsi] ; or byte ptr [rax], al ; ret
0x00000000007e8a1d : or cl, byte ptr [rsi] ; retf 0x12
0x000000000066355c : or cl, ch ; ret
0x00000000006c8d88 : or cl, ch ; ret 0xfffe
0x000000000068c4ac : or cl, ch ; retf
0x0000000000413711 : or cl, cl ; ret
0x00000000007bcbb9 : or cl, dh ; call qword ptr [rbx]
0x0000000000738ddc : or cl, dh ; salc ; push qword ptr [rax - 0x1e] ; add al, byte ptr [rax] ; retf -0x290f
0x000000000075b331 : or cl, dl ; call rsp
0x0000000000722923 : or cl, dl ; ret 0x49bb
0x00000000006278bc : or dh, 0xa ; add bl, ch ; retf -0x76b8
0x0000000000746cb5 : or dh, ah ; jmp qword ptr [rax]
0x00000000006922a4 : or dh, al ; jp 0x6922b8 ; add rsp, 0x18 ; ret
0x0000000000748cf5 : or dh, bh ; call qword ptr [rax]
0x00000000007c6c02 : or dh, bh ; cmp al, byte ptr [rax] ; ret 0x52c
0x00000000006d63b5 : or dh, bl ; ret
0x00000000004f987e : or dh, byte ptr [rbx + 0x18] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041d3c2 : or dh, byte ptr [rbx] ; sub al, byte ptr [rax] ; leave ; ret
0x00000000006bd7de : or dh, byte ptr [rdi + rax - 0x7d] ; ret
0x000000000068025b : or dh, byte ptr [rdx + rdi - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret 0xeb02
0x0000000000751a29 : or dh, cl ; call qword ptr [rax]
0x0000000000748695 : or dh, dh ; call qword ptr [rax]
0x00000000004e1b4c : or dl, 0x1d ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000748350 : or dl, 7 ; add byte ptr [rax - 0x3f000a33], ah ; retf 7
0x000000000078fa81 : or dl, ah ; jmp qword ptr [rbx]
0x000000000078fad1 : or dl, ah ; jmp qword ptr [rdx]
0x0000000000758701 : or dl, al ; call rsp
0x00000000007aa098 : or dl, al ; in al, dx ; call qword ptr [rcx]
0x000000000074b59d : or dl, bh ; jmp qword ptr [rax]
0x00000000007aefe8 : or dl, bl ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000757900 : or dl, bl ; iretd ; jmp qword ptr [rbx]
0x00000000007d455d : or dl, byte ptr [rdi] ; add byte ptr [rax], al ; retf 0x50a
0x00000000004a1e32 : or dl, byte ptr [rsi] ; call rax
0x000000000075b391 : or dl, cl ; call rsp
0x0000000000736a7d : or dl, dl ; jmp qword ptr [rax]
0x000000000067466c : or dword ptr [r8], r8d ; ret
0x0000000000508b17 : or dword ptr [rax + 0x29], ecx ; retf
0x00000000006b9912 : or dword ptr [rax + 0x29], ecx ; retf 0x3c80
0x000000000053add2 : or dword ptr [rax + 0x39], ecx ; retf -0x1584
0x00000000005820b8 : or dword ptr [rax + 0x48157501], ebp ; mov edi, esi ; jmp rax
0x0000000000689988 : or dword ptr [rax + 0x63], ecx ; test byte ptr [rdi], 0xb6 ; xor byte ptr [rbx], r9b ; ret
0x00000000007ee5c9 : or dword ptr [rax + rax], eax ; add byte ptr [rbx], bh ; lea eax, dword ptr [rdx] ; retf 0x102
0x00000000006743ba : or dword ptr [rax - 0x75000000], 0x50 ; and al, 0x83 ; ret 0x8901
0x000000000067134d : or dword ptr [rax - 0x75], ecx ; add eax, 0x39155b ; call rax
0x000000000068fbb4 : or dword ptr [rax - 0x75], ecx ; clc ; movzx eax, byte ptr [rax + 0x29] ; ret
0x00000000006a42ac : or dword ptr [rax - 0x75], ecx ; or byte ptr [rax - 0x77], cl ; shr bl, 1 ; retf -0x3fcf
0x000000000068fa1e : or dword ptr [rax - 0x75], ecx ; push rax ; ret
0x0000000000507aed : or dword ptr [rax - 0x76b7ffe9], ebx ; ret
0x0000000000553c7f : or dword ptr [rax - 0x77], ecx ; ret
0x00000000005705ef : or dword ptr [rax - 0x7d], ecx ; ret
0x000000000059e044 : or dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x00000000005f87c9 : or dword ptr [rax], 0 ; nop dword ptr [rax] ; ret
0x000000000074ab59 : or dword ptr [rax], 0xf9786000 ; jmp qword ptr [rax]
0x00000000007c64ad : or dword ptr [rax], 5 ; call qword ptr [rbx]
0x00000000007ebf99 : or dword ptr [rax], eax ; add al, ah ; add dword ptr [rdi + rdi*8], edx ; or byte ptr [rax], al ; ret
0x00000000005c5851 : or dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000004f4ab5 : or dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf 0x294c
0x000000000064ce6f : or dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rdi ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000041f1c3 : or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000706644 : or dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; retf
0x00000000006d7544 : or dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x4136
0x0000000000717b44 : or dword ptr [rax], eax ; add byte ptr [rax], al ; retf
0x00000000006d79c4 : or dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0x413e
0x00000000006dcac4 : or dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0x44fb
0x00000000006b306e : or dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000005f9025 : or dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000007ccb80 : or dword ptr [rax], eax ; add byte ptr [rbx], ch ; add byte ptr [rcx], 0xd7 ; add al, 0 ; ret 0x501
0x00000000004fbf54 : or dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000006336b6 : or dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 2], al ; mov rdi, r12 ; call rax
0x0000000000655053 : or dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x8d4c
0x00000000005cb200 : or dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret 0xb8
0x00000000007dabd7 : or dword ptr [rax], eax ; add ch, bl ; syscall
0x00000000006846fc : or dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x0000000000502551 : or dword ptr [rax], eax ; add rsp, 8 ; ret
0x0000000000639151 : or dword ptr [rax], eax ; call 0x675414
0x00000000007ecc22 : or dword ptr [rax], eax ; jne 0x7ecc32 ; lodsd eax, dword ptr [rsi] ; or al, 0 ; ret 0x501
0x00000000005e8506 : or dword ptr [rax], eax ; leave ; ret
0x000000000062420b : or dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x3de6cc] ; call rax
0x000000000061f523 : or dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x3e33b4] ; call rax
0x00000000005f7926 : or dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x40afb9] ; call rax
0x00000000005f776b : or dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x40b174] ; call rax
0x00000000005f7334 : or dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x40b5a3] ; call rax
0x00000000005f71ba : or dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x40b71d] ; call rax
0x00000000005f69b3 : or dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x40bf24] ; call rax
0x00000000005f68ac : or dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x40c02b] ; call rax
0x00000000005f5341 : or dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x40d596] ; call rax
0x00000000005f1d30 : or dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x410ba7] ; call rax
0x00000000005f1c37 : or dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x410ca0] ; call rax
0x00000000005f1547 : or dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x411390] ; call rax
0x00000000005f10b3 : or dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x411824] ; call rax
0x00000000005ef694 : or dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x413243] ; call rax
0x00000000005eeda1 : or dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x413b36] ; call rax
0x00000000005e26ed : or dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x4201ea] ; call rax
0x00000000005e25c1 : or dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x420316] ; call rax
0x00000000005e24c2 : or dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x420415] ; call rax
0x00000000005e23cb : or dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x42050c] ; call rax
0x00000000005f3a13 : or dword ptr [rax], eax ; nop ; leave ; ret
0x000000000062e9fc : or dword ptr [rax], eax ; nop ; ret
0x00000000007d739d : or dword ptr [rax], eax ; out dx, al ; syscall
0x0000000000639781 : or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000067466d : or dword ptr [rax], eax ; ret
0x00000000007ea00a : or dword ptr [rax], eax ; ret 0x2706
0x0000000000723e16 : or dword ptr [rax], eax ; retf
0x00000000007d1ce4 : or dword ptr [rax], eax ; retf 0x401
0x00000000007e5dd5 : or dword ptr [rax], eax ; retf 0x506
0x00000000007c5d12 : or dword ptr [rax], eax ; retf 0x508
0x000000000050020e : or dword ptr [rax], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005001cf : or dword ptr [rax], ebx ; add byte ptr [rax - 0x7d], cl ; cli ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000553de6 : or dword ptr [rax], ebx ; add byte ptr [rax - 0x7d], cl ; cli ; or ecx, dword ptr [rax - 0x77] ; ret
0x00000000007e8a0b : or dword ptr [rax], ebx ; mov edi, 0x9fc0011 ; retf 0x12
0x00000000007e7afb : or dword ptr [rax], ebx ; ret
0x000000000059c09d : or dword ptr [rbp + 0x481678c0], eax ; add esp, 8 ; ret
0x00000000007e65ea : or dword ptr [rbp + 0xe0b], esi ; retf
0x00000000007f0db6 : or dword ptr [rbp + rax + 0x30bef06], ecx ; ret 0x7105
0x00000000005fef6a : or dword ptr [rbp + rcx*4 + 0x60], ecx ; or byte ptr [rax - 0x77], cl ; ret
0x00000000005fb9cb : or dword ptr [rbp + rcx*4 + 0x70], ecx ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000722b08 : or dword ptr [rbp - 0x51ef3606], esi ; retf
0x00000000004055e3 : or dword ptr [rbp - 0x77], eax ; fiadd dword ptr [rcx + 0x29] ; rol byte ptr [rcx - 1], cl ; ret 0x8545
0x0000000000431f4c : or dword ptr [rbp], ebx ; call rax
0x0000000000531f7a : or dword ptr [rbp], ecx ; jmp rax
0x000000000069fffd : or dword ptr [rbx + 0x394d045e], ecx ; retf
0x00000000007d204f : or dword ptr [rbx + 0x3fd0304], esp ; add byte ptr [rax], al ; retf
0x000000000067353f : or dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000062ef3e : or dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00000000007ceea3 : or dword ptr [rbx + rax + 0x1303a203], edi ; add byte ptr [rax], al ; retf 0x503
0x000000000054ae14 : or dword ptr [rbx - 0x3f7adfb9], ecx ; setg al ; ret
0x0000000000552bc6 : or dword ptr [rbx], edx ; add byte ptr [rax], al ; call rax
0x00000000006b7d00 : or dword ptr [rcx + 0x29], ecx ; retf 0xf42
0x000000000066e7a6 : or dword ptr [rcx + 0x415d5bd8], ecx ; pop rsp ; ret
0x000000000040560c : or dword ptr [rcx + 0x63], ecx ; retf
0x0000000000407fb1 : or dword ptr [rcx + 0x63], ecx ; retf -0xb8
0x00000000006692c6 : or dword ptr [rcx - 0x3b7cb730], ecx ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000722f71 : or dword ptr [rcx - 0x6c], eax ; cmc ; retf
0x0000000000666b52 : or dword ptr [rcx - 0x7d], eax ; ret 0x4501
0x000000000043bf7d : or dword ptr [rcx], ebp ; ret 0xd089
0x00000000007e8a05 : or dword ptr [rcx], ebx ; retf 0x12
0x00000000006a977a : or dword ptr [rcx], edi ; cli ; mov byte ptr [rcx + rax], 0x20 ; jne 0x6a9769 ; ret
0x0000000000526f46 : or dword ptr [rcx], edi ; ja 0x526f60 ; jl 0x526f56 ; ret
0x0000000000571d46 : or dword ptr [rcx], edi ; ja 0x571d60 ; jl 0x571d56 ; ret
0x000000000058fa86 : or dword ptr [rcx], edi ; ja 0x58faa0 ; jl 0x58fa96 ; ret
0x0000000000590d26 : or dword ptr [rcx], edi ; ja 0x590d40 ; jl 0x590d36 ; ret
0x00000000005a5016 : or dword ptr [rcx], edi ; ja 0x5a5030 ; jl 0x5a5026 ; ret
0x00000000005623ea : or dword ptr [rcx], edi ; retf -0x71f1
0x00000000005092c1 : or dword ptr [rcx], edi ; retf 0x1a7c
0x000000000055b562 : or dword ptr [rcx], edi ; retf 0x1b7c
0x00000000005ad901 : or dword ptr [rcx], edi ; retf 0x2a7c
0x000000000055b553 : or dword ptr [rcx], edi ; retf 0x387d
0x0000000000667ca0 : or dword ptr [rcx], edi ; retf 0x3c7c
0x000000000050959e : or dword ptr [rcx], edi ; retf 0x4d7c
0x0000000000669618 : or dword ptr [rcx], edi ; retf 0xd7d
0x000000000069d1cf : or dword ptr [rcx], esi ; ret 0x848d
0x000000000052192e : or dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000007e58cb : or dword ptr [rdi + 5], esp ; ret
0x00000000006cceb2 : or dword ptr [rdi + r15*2], r15d ; je 0x6ccec6 ; ret
0x00000000006ce562 : or dword ptr [rdi + rax*8], edx ; ret
0x00000000006cceb3 : or dword ptr [rdi + rdi*2], edi ; je 0x6ccec5 ; ret
0x00000000007f674a : or dword ptr [rdi], 0x22c207 ; wait ; syscall
0x00000000006cd634 : or dword ptr [rdi], 0xffffffb6 ; push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000061ea93 : or dword ptr [rdi], ebx ; or al, byte ptr [rax] ; leave ; ret
0x000000000067adb0 : or dword ptr [rdi], ecx ; ret 0x9848
0x0000000000606504 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8040
0x00000000006d09e3 : or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8040
0x000000000040bf59 : or dword ptr [rdi], edi ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000613829 : or dword ptr [rdi], edx ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000491fd4 : or dword ptr [rdi], edx ; call rax
0x000000000042de61 : or dword ptr [rdx + 0x5d], 0 ; call rax
0x00000000006cdac3 : or dword ptr [rdx + rax*8], esi ; ret
0x00000000007de0f9 : or dword ptr [rdx - 0x4affffff], ebp ; add dword ptr [rsi], eax ; retf
0x0000000000491e87 : or dword ptr [rdx], 0x89480000 ; ret
0x00000000004cf18a : or dword ptr [rdx], 0x8fbf0000 ; ret 0x6e
0x0000000000461f50 : or dword ptr [rdx], ebx ; call rax
0x00000000005df1e1 : or dword ptr [rdx], ecx ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000005df1cd : or dword ptr [rdx], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000447d95 : or dword ptr [rdx], ecx ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000061df19 : or dword ptr [rdx], ecx ; add cl, cl ; ret
0x0000000000631fbf : or dword ptr [rip + 0x5bd88900], edi ; pop rbp ; pop r12 ; ret
0x0000000000403d9f : or dword ptr [rip + 0x5d5b5800], ebp ; ret
0x000000000079c0a5 : or dword ptr [rip - 0x186ccc00], eax ; call qword ptr [rbx]
0x000000000073fad1 : or dword ptr [rip - 0x1b540000], eax ; call qword ptr [rax]
0x00000000007f6246 : or dword ptr [rip - 0x56fcef29], eax ; or dword ptr [rsi], eax ; retf 0x10
0x00000000005c94b7 : or dword ptr [rsi + 0xb], esi ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005d9fc3 : or dword ptr [rsi + 0xe], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000006a5316 : or dword ptr [rsi + 0xf], esp ; sub dl, al ; add rsp, 0x18 ; ret
0x00000000007e8ec8 : or dword ptr [rsi], 0x2058200 ; ror dword ptr [rax + rax], 1 ; ret
0x00000000007f672c : or dword ptr [rsi], 0x20d403 ; ret
0x00000000005984fa : or dword ptr [rsi], 0xea834800 ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000007ac0d5 : or dword ptr [rsi], eax ; add byte ptr [rbx + rax*2 - 0x13], ah ; call qword ptr [rcx]
0x00000000007ac0ed : or dword ptr [rsi], eax ; add byte ptr [rsi + 0x43], bl ; in eax, dx ; call rcx
0x00000000007d05db : or dword ptr [rsi], eax ; out dx, eax ; sbb byte ptr [rax], al ; retf
0x00000000007e4d3e : or dword ptr [rsi], eax ; ret
0x00000000007f624c : or dword ptr [rsi], eax ; retf 0x10
0x00000000007ce248 : or dword ptr [rsi], eax ; sti ; or al, 0 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; or dword ptr [rsi], ebx ; retf
0x00000000007d48f7 : or dword ptr [rsi], eax ; test byte ptr [rax + rax], dl ; retf 0x1e09
0x00000000007ce24e : or dword ptr [rsi], ebx ; retf
0x00000000005e0072 : or dword ptr [rsi], ecx ; add cl, cl ; ret
0x0000000000621f02 : or dword ptr [rsi], edi ; add bh, bh ; ror cl, 1 ; ret
0x00000000007e8a11 : or dword ptr [rsi], esp ; retf 0x12
0x00000000007f699c : or dword ptr [rsp + rcx + 0xb4af61e], esp ; ret 0x60c
0x00000000006ce14b : or dword ptr [rsp], 0 ; je 0x6ce15f ; ret
0x00000000007de0f8 : or dword ptr cs:[rdx - 0x4affffff], ebp ; add dword ptr [rsi], eax ; retf
0x00000000007edc54 : or eax, 0x128d05 ; retf 0x490d
0x0000000000578cab : or eax, 0x1440000 ; ret 0x3941
0x0000000000689552 : or eax, 0x147dd139 ; xor eax, eax ; ret
0x00000000007c672b : or eax, 0x148505 ; ret 0x3e0e
0x00000000005601ef : or eax, 0x15e3dbe8 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e68d3 : or eax, 0x16139b00 ; add byte ptr [rax], al ; retf 0x513
0x00000000007c143c : or eax, 0x169f34 ; ret 0x50e
0x00000000006a51b2 : or eax, 0x18c48348 ; ret
0x00000000007c355d : or eax, 0x190 ; ret
0x00000000005b66bf : or eax, 0x1915ff00 ; ret 0x44
0x00000000007f36f8 : or eax, 0x19ca3 ; ret 0x18a
0x00000000007f2b74 : or eax, 0x19ca3 ; ret 0x511
0x00000000007ede74 : or eax, 0x1de ; ret
0x0000000000544b3a : or eax, 0x1f0f23eb ; add byte ptr [rax - 0x77], cl ; retf -0x7ab8
0x000000000052a47a : or eax, 0x1f0f24eb ; add byte ptr [rax - 0x77], cl ; retf -0x7ab8
0x00000000007e51f7 : or eax, 0x1f1bf405 ; ret 0x60d
0x00000000007c3694 : or eax, 0x1fe ; ret 0x2802
0x00000000007d44ca : or eax, 0x203a000 ; retf
0x00000000007f57ba : or eax, 0x21da23 ; ret 0x90d
0x00000000007f88f7 : or eax, 0x304af00 ; retf
0x00000000007d435f : or eax, 0x30cb105 ; retf 0x50d
0x00000000006a8454 : or eax, 0x35a2 ; ret
0x00000000006a8434 : or eax, 0x35a22f ; ret
0x000000000068ed14 : or eax, 0x3736b7 ; ret
0x0000000000762537 : or eax, 0x38d4806 ; mov word ptr [rdx + rax], es ; ret
0x00000000005b1615 : or eax, 0x3d8b4800 ; retf 0x4545
0x00000000007d4950 : or eax, 0x410fb700 ; ficom word ptr [rcx] ; add ch, bh ; syscall
0x00000000005ae437 : or eax, 0x415d5b00 ; pop rsp ; ret
0x00000000007ac505 : or eax, 0x46c00006 ; in eax, dx ; call qword ptr [rbx]
0x00000000007ac4ed : or eax, 0x46c40006 ; in eax, dx ; call qword ptr [rbx]
0x00000000007ac4d5 : or eax, 0x46c80006 ; in eax, dx ; call qword ptr [rbx]
0x00000000007ac4bd : or eax, 0x46cc0006 ; in eax, dx ; call qword ptr [rbx]
0x00000000007ac4a5 : or eax, 0x46d00006 ; in eax, dx ; call qword ptr [rbx]
0x00000000007ac48d : or eax, 0x46d40006 ; in eax, dx ; call qword ptr [rbx]
0x00000000007ac475 : or eax, 0x46d80006 ; in eax, dx ; call qword ptr [rbx]
0x00000000007ac45d : or eax, 0x46dc0006 ; in eax, dx ; call qword ptr [rbx]
0x00000000007ac445 : or eax, 0x46e00006 ; in eax, dx ; call qword ptr [rbx]
0x00000000007ac42d : or eax, 0x46e40006 ; in eax, dx ; call qword ptr [rbx]
0x00000000007ac415 : or eax, 0x46e80006 ; in eax, dx ; call qword ptr [rbx]
0x0000000000583f3f : or eax, 0x4800117d ; mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x0000000000721886 : or eax, 0x48354d7 ; ret 0x3b3
0x00000000006917f5 : or eax, 0x4864408b ; add esp, 8 ; ret
0x00000000006917be : or eax, 0x4864478b ; add esp, 8 ; ret
0x0000000000691935 : or eax, 0x4868408b ; add esp, 8 ; ret
0x00000000006918fe : or eax, 0x4868478b ; add esp, 8 ; ret
0x00000000005adacc : or eax, 0x48906600 ; mov eax, dword ptr [rdi + 8] ; ret
0x00000000007d735b : or eax, 0x4a0cfb07 ; retf 0x10
0x00000000007ea529 : or eax, 0x4f00002e ; outsb dx, byte ptr [rsi] ; ret 0x102
0x00000000007c7266 : or eax, 0x5029c00 ; stc ; or al, byte ptr [rbx] ; ret 0xaf02
0x00000000007dd829 : or eax, 0x5038e00 ; retf 0xd
0x00000000007dd955 : or eax, 0x50bc100 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, 0 ; retf
0x00000000007c72bb : or eax, 0x50c9600 ; ret 0xc
0x00000000007cc521 : or eax, 0x50cfc00 ; ret
0x000000000063982f : or eax, 0x580009af ; pop rbx ; pop rbp ; ret
0x00000000005b1415 : or eax, 0x5894800 ; ret 0x4547
0x00000000006089fa : or eax, 0x5d5bc031 ; pop r12 ; ret
0x00000000007e6879 : or eax, 0x610c400 ; salc ; adc al, byte ptr [rax] ; retf 0xe10
0x00000000005b5e73 : or eax, 0x6515ff00 ; retf 0x44
0x000000000057414a : or eax, 0x6690ffe9 ; nop ; ret
0x0000000000643a4d : or eax, 0x74c48949 ; sbb dword ptr [rax - 0x77], ecx ; ret
0x00000000007c64a8 : or eax, 0x7f6 ; or dword ptr [rax], 5 ; call qword ptr [rbx]
0x00000000005b5e57 : or eax, 0x8115ff00 ; retf 0x44
0x00000000006a497f : or eax, 0x83f0c ; xorpd xmm0, xmm1 ; ret
0x00000000005016e0 : or eax, 0x89000000 ; ret
0x00000000005cbb21 : or eax, 0x89000b5a ; ret
0x0000000000557b21 : or eax, 0x8900129a ; ret
0x000000000069cf90 : or eax, 0x8944f4d5 ; ret 0x8941
0x000000000045de01 : or eax, 0x89480000 ; ret 0x8948
0x00000000006123f4 : or eax, 0x89480000 ; ret 0x8b48
0x0000000000630585 : or eax, 0x89480005 ; ret
0x000000000060fd81 : or eax, 0x89480007 ; ret
0x000000000059fdd8 : or eax, 0x8948000e ; ret
0x00000000005c3a11 : or eax, 0x89480011 ; ret
0x00000000005305c2 : or eax, 0x89480015 ; ret
0x000000000054394f : or eax, 0x89480019 ; ret
0x00000000006215f7 : or eax, 0x894816eb ; ret
0x000000000055eb62 : or eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x00000000004d251c : or eax, 0x8fbf0000 ; ret 0x6e
0x0000000000684c2d : or eax, 0xa3ce2 ; ret
0x0000000000684beb : or eax, 0xa3d24 ; ret
0x0000000000684bad : or eax, 0xa3d62 ; ret
0x0000000000684b6b : or eax, 0xa3da4 ; ret
0x00000000005b6531 : or eax, 0xa715ff00 ; ret
0x00000000007ebdc5 : or eax, 0xb2001382 ; syscall
0x00000000007d3419 : or eax, 0xb97213c8 ; and al, byte ptr [rax] ; retf
0x0000000000437865 : or eax, 0xbf000001 ; scasb al, byte ptr [rdi] ; ret 0x6d
0x00000000005b6516 : or eax, 0xc215ff00 ; ret
0x00000000005ccb19 : or eax, 0xc4834800 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000005b66aa : or eax, 0xc4894900 ; call qword ptr [rip + 0x44c233]
0x00000000005b5e41 : or eax, 0xc6894900 ; call qword ptr [rip + 0x44ca9c]
0x000000000045a98f : or eax, 0xc9002660 ; ret
0x000000000045000d : or eax, 0xc9fffeae ; ret
0x00000000004327f5 : or eax, 0xc9ffff83 ; ret
0x00000000007f88fd : or eax, 0xd04b200 ; add byte ptr [rax], al ; ret
0x0000000000471b24 : or eax, 0xd0ff0059 ; leave ; ret
0x00000000006c134d : or eax, 0xd0ff0073 ; add rsp, 0x18 ; ret
0x00000000006c14f0 : or eax, 0xd0ff0073 ; add rsp, 0x28 ; ret
0x00000000007695cd : or eax, 0xd4040000 ; ret
0x00000000007f55ff : or eax, 0xd6000034 ; syscall
0x00000000005a347f : or eax, 0xea834800 ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000005c1241 : or eax, 0xeb000be9 ; fimul word ptr [rax - 0x77] ; ret
0x00000000005928cf : or eax, 0xeb004700 ; fimul dword ptr [rax - 0x77] ; ret
0x000000000058241f : or eax, 0xebfffff5 ; fisttp qword ptr [rax - 0x77] ; ret
0x00000000005a8521 : or eax, 0xef894800 ; call 0x6d4747
0x00000000007e845f : or eax, 0xf7000000 ; syscall
0x00000000005ae48e : or eax, 0xfa834800 ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000005016f4 : or eax, 0xff66348 ; ret 0x9848
0x00000000007a9d06 : or eax, dword ptr [r11] ; retf
0x0000000000771bc2 : or eax, dword ptr [r14 + rcx + 0x18] ; ret
0x00000000007b826c : or eax, dword ptr [r8] ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x0000000000787a35 : or eax, dword ptr [r8] ; xor al, 0 ; add byte ptr [rax], al ; hlt ; ret 3
0x00000000006d6ecf : or eax, dword ptr [rax - 0x18435349] ; ret 0xe747
0x00000000007c70db : or eax, dword ptr [rax] ; add ah, ah ; syscall
0x00000000007b826d : or eax, dword ptr [rax] ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x000000000048f074 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000664f66 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf -0x72b8
0x0000000000640d07 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7af0fb06], al ; ret 0x56
0x00000000007a79f4 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; hlt ; ret 5
0x00000000007b7ae4 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, ah ; ret
0x00000000006d12d1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000007b79ec : or eax, dword ptr [rax] ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; in al, dx ; ret 6
0x000000000077823e : or eax, dword ptr [rax] ; add byte ptr [rax], r8b ; add ah, bh ; retf 2
0x000000000048efb0 : or eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; adc byte ptr [r9 - 0x77], r9b ; ret
0x000000000064fc84 : or eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret 0x187c
0x00000000006568eb : or eax, dword ptr [rax] ; add byte ptr [rcx], ch ; ret
0x0000000000547eba : or eax, dword ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000548025 : or eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x00000000005ea24d : or eax, dword ptr [rax] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000547c8c : or eax, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005f8f77 : or eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000007e9cef : or eax, dword ptr [rax] ; mov ecx, 0x303 ; mov cl, 4 ; retf -0x78ff
0x00000000005c5e23 : or eax, dword ptr [rax] ; mov r12d, eax ; call qword ptr [rip + 0x43caba]
0x0000000000622f84 : or eax, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x48] ; leave ; ret
0x00000000005f7a09 : or eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x40aed6] ; call rax
0x00000000005f784e : or eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x40b091] ; call rax
0x00000000005ee5f7 : or eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x4142e0] ; call rax
0x00000000005d5b76 : or eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x42cd61] ; call rax
0x00000000005d5a9a : or eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x42ce3d] ; call rax
0x00000000005d59bc : or eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x42cf1b] ; call rax
0x00000000005d58de : or eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x42cff9] ; call rax
0x00000000005d0ad5 : or eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x431e02] ; call rax
0x00000000005d07a8 : or eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x43212f] ; call rax
0x00000000005d0249 : or eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x43268e] ; call rax
0x00000000005cfe1d : or eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x432aba] ; call rax
0x00000000005cc96b : or eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000078830e : or eax, dword ptr [rax] ; push rsp ; add byte ptr [rax], al ; add ah, cl ; retf
0x00000000007e8d7b : or eax, dword ptr [rax] ; ret 0x206
0x00000000007e9dbe : or eax, dword ptr [rax] ; ret 0x508
0x00000000007c7591 : or eax, dword ptr [rax] ; retf
0x0000000000787a36 : or eax, dword ptr [rax] ; xor al, 0 ; add byte ptr [rax], al ; hlt ; ret 3
0x0000000000787ade : or eax, dword ptr [rax] ; xor al, 0 ; add byte ptr [rax], al ; pushfq ; ret
0x0000000000787aa6 : or eax, dword ptr [rax] ; xor al, 0 ; add byte ptr [rax], al ; ret
0x0000000000650726 : or eax, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007d43aa : or eax, dword ptr [rbx] ; out dx, al ; syscall
0x00000000007d43da : or eax, dword ptr [rbx] ; ret
0x00000000007f0f50 : or eax, dword ptr [rbx] ; ret 0x51b
0x00000000007f0dbb : or eax, dword ptr [rbx] ; ret 0x7105
0x00000000007a9d07 : or eax, dword ptr [rbx] ; retf
0x00000000007d4392 : or eax, dword ptr [rbx] ; sahf ; syscall
0x00000000007d435c : or eax, dword ptr [rbx] ; xchg eax, edx ; or eax, 0x30cb105 ; retf 0x50d
0x0000000000672f14 : or eax, dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006a0e9c : or eax, dword ptr [rcx + rdi - 0x36] ; setbe al ; ret
0x000000000067a23e : or eax, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005f1cf6 : or eax, dword ptr [rcx] ; call rax
0x000000000076c33d : or eax, dword ptr [rdx] ; add al, al ; ret
0x000000000076c28d : or eax, dword ptr [rdx] ; add byte ptr [rax], dh ; ret
0x00000000005e1d1b : or eax, dword ptr [rdx] ; call rax
0x00000000007b6b54 : or eax, dword ptr [rdx] ; ret
0x0000000000770ff9 : or eax, dword ptr [rdx] ; ret 0xe0a
0x000000000073fb19 : or eax, dword ptr [rip - 0x1b4f5000] ; jmp rax
0x00000000007dd96a : or eax, dword ptr [rip - 0x66fff374] ; or al, 5 ; ret 0xc
0x00000000007c72b8 : or eax, dword ptr [rip - 0x69fff265] ; or al, 5 ; ret 0xc
0x0000000000771bc3 : or eax, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000007ac25d : or eax, dword ptr [rsi] ; add byte ptr [rsi + 0x44], ch ; in eax, dx ; call qword ptr [rsi]
0x0000000000547eb9 : or eax, dword ptr ds:[rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000005663d9 : or eax, ebp ; add byte ptr [r8 - 0x77], cl ; fucompi st(0) ; retf
0x00000000007d05d9 : or eax, ebp ; or dword ptr [rsi], eax ; out dx, eax ; sbb byte ptr [rax], al ; retf
0x0000000000562276 : or eax, ebp ; push rsp ; ret
0x00000000007ec24d : or eax, ebp ; syscall
0x0000000000664a46 : or eax, ebx ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000516e2e : or eax, ecx ; ret
0x00000000006c96cf : or eax, ecx ; shl edx, 0x18 ; or eax, edx ; ret
0x00000000006c6fd2 : or eax, edi ; ret
0x000000000069cad4 : or eax, edi ; xor eax, esi ; ret
0x0000000000511551 : or eax, edx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000006939fc : or eax, edx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000053e72a : or eax, edx ; add rsp, 0x18 ; ret
0x00000000006a26d2 : or eax, edx ; add rsp, 0x20 ; pop rbx ; ret
0x00000000006b2bc2 : or eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006c5728 : or eax, edx ; add rsp, 8 ; ret
0x00000000006c5ca5 : or eax, edx ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000006ce9c1 : or eax, edx ; mov qword ptr [rsi], r8 ; ret
0x0000000000664b1d : or eax, edx ; pop r15 ; ret
0x00000000006a206d : or eax, edx ; pop rbx ; ret
0x000000000053ed83 : or eax, edx ; ret
0x0000000000522b33 : or eax, edx ; xor eax, 1 ; ret
0x00000000005c6835 : or eax, edx ; xor edx, edx ; mov dl, cl ; pop rbx ; ret
0x000000000068865e : or eax, esi ; add rsp, 8 ; ret
0x000000000068875d : or eax, esi ; ret
0x0000000000778156 : or ebp, dword ptr [r8 + rax] ; add byte ptr [rax], al ; push rsp ; retf 2
0x0000000000778157 : or ebp, dword ptr [rax + rax] ; add byte ptr [rax], al ; push rsp ; retf 2
0x00000000004b7019 : or ebp, dword ptr [rbx - 6] ; dec ecx ; ret
0x0000000000584aa1 : or ebp, dword ptr [rdi + 0x29480010] ; ret
0x0000000000518fa1 : or ebp, dword ptr [rdx + 0x17] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000041fbc3 : or ebp, dword ptr [rdx] ; add cl, cl ; ret
0x00000000006a9743 : or ebp, dword ptr [rip + 0x5c415d5b] ; ret
0x0000000000742015 : or ebp, eax ; jmp qword ptr [rax]
0x00000000006a2527 : or ebp, eax ; ret
0x000000000064d048 : or ebp, ebx ; dec dword ptr [rax - 0x77] ; ret
0x00000000007d9c75 : or ebp, esi ; sub al, 3 ; call qword ptr [rsi]
0x000000000073febd : or ebp, esp ; jmp qword ptr [rax]
0x000000000047d0d1 : or ebx, dword ptr [rax + 0x58] ; add bh, bh ; ror cl, 1 ; ret
0x00000000004ffff4 : or ebx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000053da5f : or ebx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x000000000068d2dc : or ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000057e6bc : or ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000461d01 : or ebx, dword ptr [rdx] ; call rax
0x0000000000699d43 : or ebx, dword ptr [rsi - 2] ; dec dword ptr [rcx - 0x77] ; fsubp st(1) ; ret 0xfffe
0x000000000073aa1d : or ebx, ebp ; call rax
0x0000000000490aa1 : or ebx, esi ; and al, byte ptr [rax] ; leave ; ret
0x00000000006ce0fe : or ebx, esi ; ret
0x00000000007d1d57 : or ebx, esp ; add eax, 0xb03a701 ; retf
0x00000000007758e9 : or ebx, esp ; call qword ptr [rsi]
0x00000000005d451f : or ecx, 1 ; mov rdx, rcx ; nop ; pop rbx ; pop rbp ; ret
0x00000000005a71a1 : or ecx, dword ptr [rax + 0x2948000e] ; ret
0x00000000006b7d80 : or ecx, dword ptr [rax + 0x29] ; retf 0xf44
0x00000000005fb8ae : or ecx, dword ptr [rax + 0x63] ; fisttp dword ptr [rax + 0x63] ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000006ba8a5 : or ecx, dword ptr [rax + 0x63] ; ret
0x00000000006b0367 : or ecx, dword ptr [rax + 0x63] ; retf
0x000000000068de25 : or ecx, dword ptr [rax + 0x63] ; shr eax, cl ; ret 0xd75a
0x000000000078821f : or ecx, dword ptr [rax + rax] ; add ah, bl ; retf 3
0x000000000068cde5 : or ecx, dword ptr [rax - 0x77] ; jl 0x68ce16 ; or byte ptr [rax + 0x29], cl ; retf -0xfd7
0x000000000040b2d6 : or ecx, dword ptr [rax - 0x77] ; ret
0x0000000000651bb4 : or ecx, dword ptr [rax - 0x7d] ; out -4, eax ; call 0x6be5d7
0x000000000068cd33 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000503b60 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4817
0x0000000000510adf : or ecx, dword ptr [rax - 0x7d] ; ret 0x481f
0x0000000000506ea1 : or ecx, dword ptr [rbx + 0x29480018] ; ret
0x000000000066d124 : or ecx, dword ptr [rbx - 0x74bec7b0] ; cmp byte ptr [r9], r15b ; ret 0x107d
0x00000000004e6948 : or ecx, dword ptr [rbx - 0x76b61bab] ; retf -0x2977
0x00000000007e8bcd : or ecx, dword ptr [rcx - 0x64ffffff] ; add dword ptr [rdx], eax ; ret
0x0000000000666b73 : or ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000004a19d1 : or ecx, dword ptr [rdi] ; push rsi ; add bh, bh ; ror cl, 1 ; ret
0x000000000078448b : or ecx, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000006377b1 : or ecx, dword ptr [rsi] ; add byte ptr [rax], al ; mov rdi, r14 ; call rax
0x00000000007e65ec : or ecx, dword ptr [rsi] ; add byte ptr [rax], al ; retf
0x0000000000517b5b : or ecx, eax ; add byte ptr [rax - 0x77], r9b ; retf -0x76b3
0x00000000007a2979 : or ecx, ebp ; call qword ptr [rsi]
0x00000000006d68f5 : or ecx, ebx ; fsubr dword ptr [rbx] ; retf
0x0000000000471d83 : or ecx, edi ; and al, 0 ; leave ; ret
0x0000000000735195 : or ecx, edi ; jmp qword ptr [rax]
0x00000000005cf66c : or ecx, esi ; mov rdx, rcx ; nop ; leave ; ret
0x00000000005d8d64 : or ecx, esi ; mov rdx, rcx ; nop ; pop rbp ; ret
0x00000000005011e8 : or edi, 1 ; and rax, rdi ; ret
0x0000000000526b74 : or edi, dword ptr [rcx] ; ja 0x526b8f ; setge al ; ret
0x0000000000590944 : or edi, dword ptr [rcx] ; ja 0x59095f ; setge al ; ret
0x00000000005a4b24 : or edi, dword ptr [rcx] ; ja 0x5a4b3f ; setge al ; ret
0x000000000055b8f9 : or edi, dword ptr [rcx] ; ret 0x4489
0x0000000000581516 : or edi, dword ptr [rcx] ; retf -0x73f1
0x0000000000628831 : or edi, dword ptr [rdi - 0x76b7fff6] ; ret
0x0000000000412bc1 : or edi, dword ptr [rdx - 0x76b7ffd6] ; ret
0x00000000007542c9 : or edi, ecx ; call rsp
0x00000000007de419 : or edi, edi ; add dword ptr [rcx], eax ; retf
0x000000000069c8a3 : or edi, edi ; add ebx, r9d ; mov dword ptr [rdi + 4], ebx ; pop rbx ; ret
0x000000000044a8e8 : or edi, edi ; dec ecx ; ret
0x0000000000748ced : or edi, esi ; jmp rax
0x000000000051c6bd : or edx, 1 ; xor eax, eax ; pop rbx ; ret
0x000000000052ef21 : or edx, 1 ; xor eax, eax ; ret
0x00000000004b1d0f : or edx, dword ptr [rbp] ; call rax
0x00000000004d1d0d : or edx, dword ptr [rbx] ; call rax
0x000000000051a3af : or edx, dword ptr [rdx + rax] ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000007d7d2a : or edx, eax ; and al, 0 ; ret 0x1b
0x0000000000758761 : or edx, eax ; call rsp
0x00000000006c6835 : or edx, eax ; sete al ; ret
0x0000000000742905 : or edx, ebp ; call qword ptr [rax]
0x00000000007428f5 : or edx, ebp ; call rax
0x000000000051bf94 : or edx, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000007374cd : or edx, ebx ; call rax
0x000000000051bec1 : or edx, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000066d407 : or edx, ecx ; mov qword ptr [rsi + 8], rdi ; pop rbx ; pop r14 ; ret
0x000000000053ede8 : or edx, ecx ; or rax, rdx ; ret
0x000000000066d47d : or edx, ecx ; pop rbx ; pop r14 ; ret
0x0000000000526bd9 : or edx, ecx ; ret
0x000000000075e0c1 : or edx, edx ; call qword ptr [rbx]
0x0000000000736a6d : or edx, edx ; call rax
0x00000000007d28fc : or edx, esp ; add dword ptr [rcx], eax ; retf 0x1801
0x0000000000761bd1 : or edx, esp ; call rsp
0x000000000078fb89 : or edx, esp ; jmp qword ptr [rbx]
0x000000000078fc01 : or edx, esp ; jmp qword ptr [rdx]
0x00000000007e8a1b : or edx, esp ; or cl, byte ptr [rsi] ; retf 0x12
0x00000000005768ec : or esi, dword ptr [rbp + 0x21] ; add rsp, 8 ; ret
0x00000000007dec69 : or esi, dword ptr [rcx + rax + 0x11018a01] ; add byte ptr [rax], al ; ret 0x501
0x00000000007deb3e : or esi, dword ptr [rcx + rax + 0x11019201] ; add byte ptr [rax], al ; ret 0x501
0x000000000069d12d : or esi, dword ptr [rcx] ; ret 0x8d41
0x00000000006b2a42 : or esi, dword ptr [rcx] ; ret 0xd089
0x000000000053a1d4 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000518443 : or esi, dword ptr [rdi + 0x16] ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; int1 ; ret 0x1b
0x0000000000589531 : or esi, dword ptr [rdx - 0x76b7ffec] ; ret
0x000000000074637d : or esi, ebx ; call rax
0x0000000000660714 : or esi, ebx ; ret
0x00000000007bcf29 : or esi, ecx ; call qword ptr [rdi]
0x00000000007bcf11 : or esi, ecx ; jmp qword ptr [rdx]
0x000000000073492d : or esi, ecx ; jmp rax
0x0000000000748685 : or esi, esi ; jmp rax
0x000000000065f75d : or esi, esi ; ret 0xf02
0x00000000007f69eb : or esi, esi ; syscall
0x00000000007b795e : or esp, dword ptr [r8 + rax] ; add byte ptr [rax], al ; pop rsp ; ret 6
0x00000000007b795f : or esp, dword ptr [rax + rax] ; add byte ptr [rax], al ; pop rsp ; ret 6
0x000000000050a731 : or esp, dword ptr [rax - 0x76b7ffe4] ; ret
0x000000000064024c : or esp, dword ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000007f7d6a : or esp, dword ptr [rcx] ; sti ; or al, 5 ; ror dword ptr [rbx], 5 ; out dx, al ; syscall
0x000000000073ff4d : or esp, ebp ; call rax
0x00000000007f0e7c : or esp, ecx ; adc esi, dword ptr [rbp - 0x11] ; or eax, dword ptr [rbx] ; retf
0x0000000000746ca5 : or esp, esi ; call rax
0x00000000007f20c2 : or esp, esp ; syscall
0x00000000007f699b : or qword ptr [r12 + r9 + 0xb4af61e], rsp ; ret 0x60c
0x00000000005623e9 : or qword ptr [r9], r15 ; retf -0x71f1
0x00000000006ce561 : or qword ptr [rdi + rax*8], rdx ; ret
0x00000000006cdac2 : or qword ptr [rdx + rax*8], rsi ; ret
0x00000000006740b4 : or r12b, r15b ; pop rsp ; jb 0x6740c0 ; ret
0x00000000007f69ea : or r14d, r14d ; syscall
0x000000000044a8e7 : or r15, rdi ; dec ecx ; ret
0x00000000006ccf22 : or r15b, byte ptr [rdi + r15*2] ; je 0x6ccf36 ; ret
0x00000000006ce9c0 : or r8, rdx ; mov qword ptr [rsi], r8 ; ret
0x000000000068380a : or r8b, byte ptr [r8] ; add rsp, 0x18 ; ret
0x0000000000683fdd : or r8b, byte ptr [r8] ; ret
0x00000000006839da : or r8b, byte ptr [rax] ; add rsp, 0x18 ; ret
0x000000000050a67e : or r8b, r13b ; retf
0x00000000006898f2 : or r8b, r14b ; add dword ptr [rax + 4], 1 ; ret
0x0000000000506c62 : or r8b, r14b ; add dword ptr [rax], 1 ; ret
0x0000000000506c72 : or r8b, r14b ; sub dword ptr [rax], 1 ; ret
0x00000000007a86ba : or r8d, dword ptr [r10] ; ret 0xe0a
0x000000000078830d : or r8d, dword ptr [r8] ; push rsp ; add byte ptr [rax], al ; add ah, cl ; retf
0x0000000000787add : or r8d, dword ptr [r8] ; xor al, 0 ; add byte ptr [rax], al ; pushfq ; ret
0x0000000000787aa5 : or r8d, dword ptr [r8] ; xor al, 0 ; add byte ptr [rax], al ; ret
0x000000000077823d : or r8d, dword ptr [rax] ; add byte ptr [rax], r8b ; add ah, bh ; retf 2
0x00000000007b6b53 : or r8d, dword ptr [rdx] ; ret
0x0000000000770ff8 : or r8d, dword ptr [rdx] ; ret 0xe0a
0x00000000006c8d87 : or r9b, bpl ; ret 0xfffe
0x0000000000735194 : or r9d, edi ; jmp qword ptr [rax]
0x000000000059fdd7 : or rax, 0x8948000e ; ret
0x00000000004d3138 : or rax, 0x8fbf0000 ; ret 0x6e
0x00000000005ccb18 : or rax, 0xc4834800 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000005b5e40 : or rax, 0xc6894900 ; call qword ptr [rip + 0x44ca9c]
0x0000000000788e3a : or rax, qword ptr [r14 + r9 + 0x18] ; ret
0x0000000000664a45 : or rax, r11 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000516e2d : or rax, rcx ; ret
0x0000000000511550 : or rax, rdx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000006939fb : or rax, rdx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000053e729 : or rax, rdx ; add rsp, 0x18 ; ret
0x00000000006a26d1 : or rax, rdx ; add rsp, 0x20 ; pop rbx ; ret
0x00000000006b2bc1 : or rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006c5727 : or rax, rdx ; add rsp, 8 ; ret
0x0000000000664b1c : or rax, rdx ; pop r15 ; ret
0x00000000006a206c : or rax, rdx ; pop rbx ; ret
0x000000000053ed82 : or rax, rdx ; ret
0x00000000005c6834 : or rax, rdx ; xor edx, edx ; mov dl, cl ; pop rbx ; ret
0x000000000068865d : or rax, rsi ; add rsp, 8 ; ret
0x000000000068875c : or rax, rsi ; ret
0x000000000078821e : or rcx, qword ptr [rax + rax] ; add ah, bl ; retf 3
0x000000000078448a : or rcx, qword ptr [rsi + rcx + 0x18] ; ret
0x00000000005cf66b : or rcx, rsi ; mov rdx, rcx ; nop ; leave ; ret
0x00000000005d8d63 : or rcx, rsi ; mov rdx, rcx ; nop ; pop rbp ; ret
0x00000000005011e7 : or rdi, 1 ; and rax, rdi ; ret
0x000000000051c6bc : or rdx, 1 ; xor eax, eax ; pop rbx ; ret
0x000000000052ef20 : or rdx, 1 ; xor eax, eax ; ret
0x00000000006c6834 : or rdx, rax ; sete al ; ret
0x000000000051bf93 : or rdx, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000051bec0 : or rdx, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000053ede7 : or rdx, rcx ; or rax, rdx ; ret
0x000000000066d47c : or rdx, rcx ; pop rbx ; pop r14 ; ret
0x0000000000526bd8 : or rdx, rcx ; ret
0x0000000000674015 : or spl, bpl ; pop rsp ; jb 0x674023 ; jne 0x674000 ; ret
0x00000000004a18eb : orps xmm0, xmmword ptr [rax] ; call rax
0x00000000004a191f : orps xmm8, xmmword ptr [r8] ; call rax
0x00000000004a1916 : orps xmm8, xmmword ptr [rax] ; call rax
0x000000000072238b : out -0x15, eax ; mov dh, 0xde ; pop rdi ; push rdx ; mov cs, word ptr [rcx] ; ret 0xe937
0x000000000050e1dd : out -0x18, eax ; add dword ptr [rip - 0x76b7ffe9], esp ; ret
0x0000000000540f19 : out -0x18, eax ; cmp edx, 0x15ff0017 ; ret
0x000000000051c4ff : out -0x18, eax ; fild word ptr [rcx + 0x16] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005775e9 : out -0x18, eax ; int1 ; retf
0x000000000057d2ed : out -0x18, eax ; int1 ; xor edx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b652d : out -0x18, eax ; jge 0x5b6574 ; or eax, 0xa715ff00 ; ret
0x0000000000659197 : out -0x18, eax ; jne 0x6591a6 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006902b6 : out -0x18, eax ; mov ah, 0x38 ; xlatb ; dec dword ptr [rax + 0x39] ; ret
0x0000000000524617 : out -0x18, eax ; mov eax, 0x89480015 ; ret
0x00000000004f8350 : out -0x18, eax ; mov es, word ptr [rbx - 0x76b7ffe8] ; ret
0x000000000055568f : out -0x18, eax ; mov r8b, 0x12 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000052a6e7 : out -0x18, eax ; neg dword ptr [rdi + 0x15] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000572470 : out -0x18, eax ; outsb dx, byte ptr [rsi] ; loop 0x57248d ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000628c7f : out -0x18, eax ; pop rdi ; jp 0x628c91 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000539f37 : out -0x18, eax ; ret
0x00000000004f76e8 : out -0x18, eax ; ret 0x1c71
0x00000000006045c8 : out -0x18, eax ; ret 0x858
0x00000000006bf1a8 : out -0x18, eax ; ret 0xd44a
0x000000000068bae8 : out -0x18, eax ; ret 0xffe4
0x000000000059f128 : out -0x18, eax ; ret 0xfffa
0x000000000040489f : out -0x18, eax ; retf
0x000000000064a440 : out -0x18, eax ; retf -0x1023
0x000000000058fdb0 : out -0x18, eax ; retf -0x80
0x00000000005115e0 : out -0x18, eax ; retf 0x1ad2
0x00000000005b4fe0 : out -0x18, eax ; retf 0xd4f
0x00000000005b40e0 : out -0x18, eax ; retf 0xd5e
0x0000000000587f57 : out -0x18, eax ; xchg dword ptr [rdi - 0x76b7fff1], eax ; ret
0x000000000079da71 : out -0x19, eax ; call rcx
0x00000000007f2fce : out -0x1e, eax ; add dword ptr [rdx + 0x63ee901], esi ; ret 0x1e2
0x000000000073c0c5 : out -0x22, eax ; jmp qword ptr [rax]
0x00000000006a4740 : out -0x23, eax ; fstpnce st(0), st(0) ; cmp eax, 0x73c53 ; ret
0x000000000073a2cd : out -0x26, eax ; call rax
0x0000000000659578 : out -0x26, eax ; dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 0x77] ; ret
0x0000000000739bfd : out -0x28, eax ; call rax
0x0000000000738d05 : out -0x2a, eax ; jmp rax
0x0000000000721994 : out -0x30, eax ; call 0xffffffffc4509cc7
0x00000000007581a9 : out -0x31, eax ; call rcx
0x00000000007f406c : out -0x36, eax ; add dword ptr [rax], eax ; jmp 0x7f4042
0x0000000000721ae3 : out -0x41, eax ; ret 0xfefd
0x000000000054f572 : out -0x42, eax ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000062cef4 : out -0x45, eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000005f8f75 : out -0x5f, eax ; or eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000064a2de : out -0x75, eax ; add bh, byte ptr [rcx] ; ret
0x000000000066e78c : out -0x77, eax ; ret
0x00000000005b1cbd : out -0x7d, eax ; ret
0x0000000000741f96 : out -1, eax ; add dl, al ; add eax, 0xe7cc4000 ; jmp qword ptr [rax]
0x000000000074181e : out -1, eax ; clc ; lahf ; add eax, 0xe7508000 ; call qword ptr [rax]
0x0000000000741a9e : out -1, eax ; clc ; lodsb al, byte ptr [rsi] ; add eax, 0xe78c8000 ; call qword ptr [rax]
0x0000000000741606 : out -1, eax ; clc ; xchg eax, ebp ; add eax, 0xe7348000 ; call qword ptr [rax]
0x00000000007415a6 : out -1, eax ; clc ; xchg eax, ebx ; add eax, 0xe7227000 ; jmp qword ptr [rax]
0x000000000074152e : out -1, eax ; clc ; xchg eax, ecx ; add eax, 0xe7163000 ; call qword ptr [rax]
0x0000000000741566 : out -1, eax ; clc ; xchg eax, edx ; add eax, 0xe71af000 ; call qword ptr [rax]
0x00000000005bd175 : out -1, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000006149fc : out -1, eax ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000424096 : out -1, eax ; dec ecx ; ret
0x0000000000741556 : out -1, eax ; enter 0x592, 0 ; sbb byte ptr [rdx], 0xe7 ; jmp rax
0x00000000007415f6 : out -1, eax ; enter 0x595, 0 ; xor byte ptr [rdi], dh ; jmp rax
0x000000000074185e : out -1, eax ; enter 0x5a0, 0 ; and byte ptr [rdx - 0x19], dl ; jmp rax
0x0000000000741726 : out -1, eax ; loopne 0x7416cd ; add eax, 0xe73d5000 ; call qword ptr [rax]
0x00000000007418b6 : out -1, eax ; loopne 0x741864 ; add eax, 0xe7549000 ; call qword ptr [rax]
0x00000000007419fe : out -1, eax ; loopne 0x7419b3 ; add eax, 0xe777e000 ; jmp qword ptr [rax]
0x000000000074148e : out -1, eax ; mov al, 0x8f ; add eax, 0xe7101000 ; jmp rax
0x000000000074171e : out -1, eax ; mov al, 0x9a ; add eax, 0xe73c8000 ; jmp rax
0x0000000000741fb6 : out -1, eax ; mov al, 0xc2 ; add eax, 0xe7e2f000 ; jmp rax
0x00000000007419d6 : out -1, eax ; mov eax, 0xb00005a7 ; jno 0x7419cf ; call rax
0x000000000058ed8c : out -1, eax ; nop ; lock sub dword ptr [rdi], 1 ; ret
0x0000000000741dee : out -1, eax ; or byte ptr [rbp + rax - 0x1842b000], bh ; jmp qword ptr [rax]
0x000000000079b052 : out -1, eax ; ret 0
0x000000000079c20a : out -1, eax ; retf
0x0000000000531105 : out -1, eax ; ror byte ptr [rax - 0x77], 1 ; ret
0x0000000000741d56 : out -1, eax ; sar byte ptr [rcx - 0x48dffffb], 0xe7 ; jmp rax
0x0000000000741d8e : out -1, eax ; sar byte ptr [rdx - 0x44effffb], 0xe7 ; jmp rax
0x00000000007419ae : out -1, eax ; shl byte ptr [rsi + 0x6cc00005], 0xe7 ; jmp rax
0x00000000007419f6 : out -1, eax ; shr byte ptr [rax + 0x77500005], 0xe7 ; jmp rax
0x0000000000741a2e : out -1, eax ; shr byte ptr [rcx + 0x7b600005], 0xe7 ; jmp rax
0x00000000005ae446 : out -2, eax ; lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000651bb7 : out -4, eax ; call 0x6be5d4
0x00000000006cf481 : out 0x10, al ; jne 0x6cf496 ; xor eax, eax ; ret
0x00000000007cc57c : out 0x10, eax ; add cl, ah ; syscall
0x00000000005b6132 : out 0x11, al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007ddc14 : out 0x11, eax ; add eax, 0xae0511f5 ; adc al, byte ptr [rax] ; call qword ptr [rcx]
0x000000000055c6fd : out 0x12, al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000585f74 : out 0x14, eax ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000054c19d : out 0x15, al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054c101 : out 0x15, eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054ff01 : out 0x16, al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000555fc6 : out 0x17, eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000545f80 : out 0x18, eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000051ff6e : out 0x19, al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000051fdff : out 0x19, eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000525f56 : out 0x1a, eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f028f : out 0x1c, al ; add cl, cl ; ret
0x00000000004dfee8 : out 0x1d, al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a1ef2 : out 0x1d, eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e5377 : out 0x1f, eax ; add byte ptr [rdi + rbx + 0x3323ce05], bh ; ret
0x0000000000688758 : out 0x20, al ; mov eax, eax ; or rax, rsi ; ret
0x000000000068865b : out 0x20, al ; or rax, rsi ; add rsp, 8 ; ret
0x0000000000688767 : out 0x20, al ; or rax, rsi ; ret
0x00000000006a175e : out 0x20, al ; sub eax, ecx ; or rax, rsi ; ret
0x00000000004b01ab : out 0x20, eax ; add cl, cl ; ret
0x00000000004a0278 : out 0x21, al ; add cl, cl ; ret
0x00000000004413db : out 0x23, eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047f1a5 : out 0x24, eax ; and al, 0 ; leave ; ret
0x0000000000537025 : out 0x28, eax ; add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000422bc3 : out 0x29, eax ; add cl, cl ; ret
0x0000000000406053 : out 0x2c, al ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x0000000000405fc5 : out 0x2c, eax ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000007e54a8 : out 0x30, al ; add eax, 0xed373285 ; xor byte ptr [rsi], al ; retf
0x000000000064af5d : out 0x31, eax ; rol dh, 0x45 ; ret 0xe802
0x00000000005b311f : out 0x31, eax ; ror byte ptr [rcx - 0x77], 0xd5 ; call 0x67fb5a
0x0000000000643839 : out 0x31, eax ; shr al, 0x11 ; ret
0x0000000000643911 : out 0x31, eax ; shr al, 0x39 ; ret 3
0x0000000000573801 : out 0x31, eax ; shr al, 0x49 ; ret
0x00000000005938f5 : out 0x31, eax ; shr al, 0x55 ; ret 0xe
0x00000000005b38be : out 0x31, eax ; shr al, 0x8c ; ret 0xc
0x00000000006438ae : out 0x31, eax ; shr al, 0x9c ; ret 3
0x0000000000643895 : out 0x31, eax ; shr al, 0xb5 ; ret 3
0x00000000005c3090 : out 0x31, eax ; shr al, 0xba ; retf 0xb
0x00000000005c2f85 : out 0x31, eax ; shr al, 0xc5 ; retf
0x000000000064377c : out 0x31, eax ; shr al, 0xce ; ret
0x000000000053326e : out 0x31, eax ; shr al, 0xdc ; enter 0x14, -0x17 ; retf
0x00000000005c2f69 : out 0x31, eax ; shr al, 0xe1 ; retf
0x00000000005b3049 : out 0x31, eax ; shr al, 1 ; retf
0x000000000051f4f6 : out 0x33, al ; add byte ptr [rax + 0x63], r9b ; adc byte ptr [r9], r15b ; ret
0x00000000006b123d : out 0x39, al ; ret
0x00000000006d4945 : out 0x41, eax ; call rdi
0x00000000006cd618 : out 0x41, eax ; call rsi
0x00000000005a79a2 : out 0x41, eax ; mov dword ptr [rsi + 4], eax ; call 0x403c77
0x00000000005b4205 : out 0x44, al ; add al, ch ; and eax, 0x89000cd3 ; ret
0x00000000006918c5 : out 0x47, eax ; add dword ptr [rax], eax ; mov eax, dword ptr [rbx + 0x58] ; pop rbx ; ret
0x00000000004fdd7c : out 0x48, al ; lea edi, dword ptr [rax + 0x28] ; call 0x689ff7
0x000000000053e454 : out 0x48, al ; mov edi, ebx ; mov edx, 0x6fa4c0 ; call rax
0x00000000006c1de4 : out 0x48, al ; mov edi, ebx ; mov edx, 0x730f50 ; call rax
0x00000000006c2b91 : out 0x48, al ; mov edi, ebx ; mov edx, 0x730fe0 ; call rax
0x0000000000535911 : out 0x48, al ; mov edx, ebp ; mov rdi, rbx ; call rax
0x00000000006cdabd : out 0x48, al ; shr eax, 6 ; or qword ptr [rdx + rax*8], rsi ; ret
0x00000000006d0aa8 : out 0x48, eax ; add esp, 8 ; ret
0x00000000005ad465 : out 0x49, eax ; mov ebp, ebx ; call 0x5a9e96
0x00000000005541cb : out 0x4a, eax ; add byte ptr [rcx], dh ; in eax, dx ; jmp 0x55419b
0x000000000053a044 : out 0x4c, al ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000054ec61 : out 0x4c, al ; mov edi, edi ; call rax
0x00000000006d1399 : out 0x4c, al ; sub eax, eax ; mov byte ptr [rsi + rax], dl ; ret
0x0000000000539f43 : out 0x4c, eax ; add byte ptr [rax - 0x7f], cl ; ret 0x2a1
0x0000000000722a87 : out 0x57, al ; retf
0x0000000000721860 : out 0x5a, al ; or byte ptr [rax - 0xf09590], cl ; retf 0x63b
0x0000000000722a85 : out 0x5a, al ; out 0x57, al ; retf
0x0000000000450397 : out 0x5d, al ; ret
0x0000000000723388 : out 0x62, eax ; ror dword ptr [rsi - 0x144921a1], 1 ; ret 0x8e09
0x0000000000738844 : out 0x68, al ; salc ; jmp qword ptr [rax]
0x0000000000557fb3 : out 0x6f, al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000005a2029 : out 0x70, eax ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000005a1fca : out 0x70, eax ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rcx
0x00000000005a2186 : out 0x70, eax ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000006cc465 : out 0x73, eax ; sar edi, cl ; add rsp, 8 ; ret
0x000000000063e832 : out 0x75, al ; retf
0x000000000059846f : out 0x75, eax ; xchg al, ch ; leave ; ret 0x13
0x00000000007fb0d5 : out 0x7d, eax ; ret
0x0000000000442966 : out 0x7e, al ; add byte ptr es:[rax - 0x77], cl ; ret
0x0000000000587c7b : out 0x7e, eax ; str word ptr [rax - 0x77] ; ret
0x0000000000678531 : out 0x7f, eax ; cmp dil, 0x20 ; sete al ; ret
0x00000000006881e0 : out 0x83, al ; loop 0x68820b ; or byte ptr [rdi + rdx], sil ; ret
0x0000000000506752 : out 0x89, al ; ret
0x00000000006ca06a : out 0x89, al ; ret 0xdf89
0x000000000054ddae : out 0x90, al ; ret
0x00000000005d35ed : out 0x9e, al ; pop rsi ; add byte ptr [rax - 0x77], cl ; ret 0xbe
0x0000000000744c24 : out 0xa9, al ; out dx, al ; jmp rax
0x00000000005c2587 : out 0xb, al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005c13a3 : out 0xb, eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a2026 : out 0xba, al ; adc bh, ah ; jo 0x5a2035 ; mov rdi, rbp ; call rax
0x00000000005a2095 : out 0xba, al ; adc bh, ah ; jo 0x5a20a4 ; mov rdi, rbp ; call rax
0x000000000056f9a6 : out 0xba, al ; adc byte ptr [rax + rsi*2], al ; mov rdi, rbx ; call rax
0x00000000006c2c64 : out 0xba, al ; adc byte ptr [rbx], sil ; mov rdi, rbx ; call rax
0x00000000006b37a6 : out 0xba, al ; adc ch, dl ; jb 0x6b37b5 ; mov rdi, rbx ; call rax
0x00000000006b4f8d : out 0xba, al ; adc ch, dl ; jb 0x6b4f9c ; mov rdi, rbx ; call rax
0x00000000005a1fc7 : out 0xba, al ; add bh, ah ; jo 0x5a1fd6 ; mov rdi, rbp ; call rcx
0x000000000053f4b3 : out 0xba, al ; and byte ptr [rdi - 0x76b7ff91], ah ; out dx, eax ; call rax
0x00000000006c1794 : out 0xba, al ; and byte ptr [rdi], cl ; jae 0x6c17a3 ; mov rdi, rbx ; call rax
0x00000000006c1eb4 : out 0xba, al ; and byte ptr [rdi], cl ; jae 0x6c1ec3 ; mov rdi, rbx ; call rax
0x00000000006c1110 : out 0xba, al ; and byte ptr [rsi], cl ; jae 0x6c111c ; call rax
0x00000000006c1200 : out 0xba, al ; and byte ptr [rsi], cl ; jae 0x6c120c ; call rax
0x00000000006c12a0 : out 0xba, al ; and byte ptr [rsi], cl ; jae 0x6c12ac ; call rax
0x00000000006c15e5 : out 0xba, al ; and byte ptr [rsi], cl ; jae 0x6c15f1 ; call rax
0x00000000006c1675 : out 0xba, al ; and byte ptr [rsi], cl ; jae 0x6c1681 ; call rax
0x00000000006c16d5 : out 0xba, al ; and byte ptr [rsi], cl ; jae 0x6c16e1 ; call rax
0x00000000005a7106 : out 0xba, al ; cli ; jo 0x5a7115 ; mov rdi, rbx ; call rax
0x00000000005a7355 : out 0xba, al ; cli ; jo 0x5a7364 ; mov rdi, rbx ; call rax
0x00000000005a7379 : out 0xba, al ; cli ; jo 0x5a7388 ; mov rdi, rbx ; call rax
0x00000000005a739d : out 0xba, al ; cli ; jo 0x5a73ac ; mov rdi, rbx ; call rax
0x00000000005a7bed : out 0xba, al ; cli ; jo 0x5a7bfc ; mov rdi, rbx ; call rax
0x00000000005a7cfc : out 0xba, al ; cli ; jo 0x5a7d0b ; mov rdi, rbx ; call rax
0x0000000000625fc8 : out 0xba, al ; loopne 0x625f90 ; jno 0x625fd7 ; mov rdi, rbx ; call rax
0x0000000000625fe6 : out 0xba, al ; loopne 0x625fae ; jno 0x625ff5 ; mov rdi, rbx ; call rax
0x0000000000626004 : out 0xba, al ; loopne 0x625fcc ; jno 0x626013 ; mov rdi, rbx ; call rax
0x00000000006263e1 : out 0xba, al ; loopne 0x6263a9 ; jno 0x6263f0 ; mov rdi, rbx ; call rax
0x000000000062a6f0 : out 0xba, al ; loopne 0x62a6b8 ; jno 0x62a6ff ; mov rdi, rbp ; call rax
0x000000000062ad7a : out 0xba, al ; loopne 0x62ad42 ; jno 0x62ad89 ; mov rdi, rbp ; call rax
0x000000000062ae3a : out 0xba, al ; loopne 0x62ae02 ; jno 0x62ae49 ; mov rdi, rbp ; call rax
0x000000000062aefa : out 0xba, al ; loopne 0x62aec2 ; jno 0x62af09 ; mov rdi, rbp ; call rax
0x000000000062afba : out 0xba, al ; loopne 0x62af82 ; jno 0x62afc9 ; mov rdi, rbp ; call rax
0x00000000006c2b71 : out 0xba, al ; loopne 0x6c2b8d ; jae 0x6c2b80 ; mov rdi, rbx ; call rax
0x00000000006c3241 : out 0xba, al ; loopne 0x6c325d ; jae 0x6c3250 ; mov rdi, rbx ; call rax
0x00000000006c3334 : out 0xba, al ; loopne 0x6c3350 ; jae 0x6c3343 ; mov rdi, rbx ; call rax
0x00000000006c3901 : out 0xba, al ; loopne 0x6c391d ; jae 0x6c3910 ; mov rdi, rbx ; call rax
0x00000000005184a7 : out 0xba, al ; nop ; outsd dx, dword ptr es:[rsi] ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000050f766 : out 0xba, al ; nop ; sbb dword ptr [rdi], ebp ; mov rdi, rbx ; call rax
0x00000000005a73bb : out 0xba, al ; push rax ; cli ; jo 0x5a73ca ; mov rdi, rbx ; call rax
0x00000000005a73d9 : out 0xba, al ; push rax ; cli ; jo 0x5a73e8 ; mov rdi, rbx ; call rax
0x00000000005a73f7 : out 0xba, al ; push rax ; cli ; jo 0x5a7406 ; mov rdi, rbx ; call rax
0x00000000005a788e : out 0xba, al ; push rax ; cli ; jo 0x5a789a ; call rax
0x00000000005a7b1e : out 0xba, al ; push rax ; cli ; jo 0x5a7b2a ; call rax
0x00000000005a7b8e : out 0xba, al ; push rax ; cli ; jo 0x5a7b9a ; call rax
0x00000000005a7d89 : out 0xba, al ; push rax ; cli ; jo 0x5a7d98 ; mov rdi, rbx ; call rax
0x000000000054c0cc : out 0xba, al ; rol ch, 0x6f ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000054a0e5 : out 0xba, al ; rol ch, 1 ; outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000054c12f : out 0xba, al ; rol ch, 1 ; outsd dx, dword ptr [rsi] ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000005874ee : out 0xba, al ; sal byte ptr [rax + 0x70], 0 ; call rax
0x000000000058a204 : out 0xba, al ; sal byte ptr [rax + 0x70], 0 ; mov rdi, r12 ; call rax
0x0000000000584063 : out 0xba, al ; sal byte ptr [rax + 0x70], 0 ; mov rdi, rbp ; call rax
0x0000000000584dfb : out 0xba, al ; sal byte ptr [rax + 0x70], 0 ; mov rdi, rbx ; call rax
0x0000000000625f16 : out 0xba, al ; sar byte ptr [rbx - 0x76b7ff8f], 0xdf ; call rax
0x0000000000563005 : out 0xba, al ; sbb byte ptr [rdi], 0x70 ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000659096 : out 0xba, al ; stc ; jno 0x6590a5 ; mov rdi, rbx ; call rax
0x000000000065961d : out 0xba, al ; stc ; jno 0x65962c ; mov rdi, rbx ; call rax
0x00000000006362f0 : out 0xbe, al ; retf
0x00000000005b1eee : out 0xc, eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007eca29 : out 0xc, eax ; sbb eax, 0xb70508c3 ; or al, 0x1f ; retf
0x0000000000753ef9 : out 0xce, al ; call rsp
0x0000000000734f2d : out 0xce, al ; jmp qword ptr [rax]
0x0000000000735785 : out 0xcf, al ; call qword ptr [rax]
0x0000000000735775 : out 0xcf, al ; call rax
0x0000000000736835 : out 0xd1, al ; call rax
0x000000000075f341 : out 0xd2, al ; jmp qword ptr [rcx]
0x0000000000769d89 : out 0xd8, al ; call rbx
0x000000000077a219 : out 0xdc, al ; call qword ptr [rsi]
0x00000000007d2e5c : out 0xe, eax ; add eax, 0x8a030eec ; syscall
0x000000000078ac89 : out 0xe0, al ; call qword ptr [rdx]
0x000000000073e355 : out 0xe1, al ; jmp qword ptr [rax]
0x000000000078e999 : out 0xe1, al ; jmp qword ptr [rdx]
0x00000000005b6512 : out 0xe8, al ; fdivr dword ptr [rdx] ; or eax, 0xc215ff00 ; ret
0x000000000060fd11 : out 0xe8, al ; fldenv dword ptr [rdx + 0x15ff0007] ; ret
0x000000000064beff : out 0xe8, al ; imul ebp, esi, 3 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005622a7 : out 0xe8, al ; ret
0x00000000007b27f9 : out 0xee, al ; jmp qword ptr [rsi]
0x000000000067be26 : out 0xf, al ; ret 0x9848
0x0000000000659992 : out 0xf, al ; sahf ; ret
0x00000000006bf72a : out 0xf, eax ; ret
0x00000000007bb6d9 : out 0xf0, al ; jmp qword ptr [rdx]
0x000000000074848d : out 0xf5, al ; jmp qword ptr [rax]
0x000000000079acf2 : out 0xff, al ; add ax, word ptr [rax] ; add byte ptr [rsp], al ; retf
0x00000000007412c6 : out 0xff, al ; add byte ptr [rsi - 0x225ffffb], 0xe6 ; call rax
0x00000000007410ee : out 0xff, al ; clc ; jns 0x741101 ; add al, ah ; mov esi, esp ; call qword ptr [rax]
0x0000000000740f0e : out 0xff, al ; clc ; outsd dx, dword ptr [rsi] ; add eax, 0xe6518000 ; call qword ptr [rax]
0x0000000000740eae : out 0xff, al ; cwde ; outsb dx, byte ptr [rsi] ; add eax, 0xe64f2000 ; call rax
0x00000000005f371f : out 0xff, al ; dec dword ptr [rax - 0x77] ; ret
0x000000000066ab5c : out 0xff, al ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000740b2e : out 0xff, al ; enter 0x560, 0 ; and al, 0xe6 ; jmp rax
0x0000000000740bd6 : out 0xff, al ; loopne 0x740c45 ; add eax, 0xe6282000 ; call qword ptr [rax]
0x0000000000740d46 : out 0xff, al ; loopne 0x740dbb ; add eax, 0xe63ba000 ; call qword ptr [rax]
0x0000000000740a06 : out 0xff, al ; mov al, 0x5a ; add eax, 0xe6059000 ; call rax
0x0000000000740f4e : out 0xff, al ; mov al, 0x71 ; add eax, 0xe658d000 ; jmp rax
0x00000000007410ae : out 0xff, al ; mov al, 0x78 ; add eax, 0xe685f000 ; call rax
0x0000000000740cbe : out 0xff, al ; mov eax, 0x80000566 ; xor al, 0xe6 ; call rax
0x0000000000740c6e : out 0xff, al ; mov eax, 0xc0000565 ; xor ah, dh ; call rax
0x000000000074112e : out 0xff, al ; mov eax, 0xe000057b ; mov fs, esi ; call rax
0x00000000005a2b5c : out 0xff, al ; nop ; lock sub dword ptr [rdi], 1 ; ret
0x000000000074128e : out 0xff, al ; nop ; test byte ptr [rip - 0x19355000], al ; jmp rax
0x00000000007990aa : out 0xff, al ; ret 0
0x00000000006c1943 : out 0xff, al ; ror byte ptr [rax - 0x77], 1 ; ret
0x00000000007411d6 : out 0xff, al ; test al, 0x7f ; add eax, 0xe6a98000 ; call qword ptr [rax]
0x0000000000769d85 : out 1, al ; add al, cl ; out 0xd8, al ; call rbx
0x0000000000735909 : out 1, al ; add byte ptr [rsp + rdi*8], bl ; iretd ; jmp qword ptr [rax]
0x00000000007f4462 : out 1, al ; add eax, 0x19ca3 ; ret 0x1e6
0x0000000000735979 : out 1, eax ; add byte ptr [rax], al ; add dl, al ; call qword ptr [rax]
0x0000000000562540 : out 1, eax ; ret 0x858b
0x00000000006524a8 : out 2, al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000738ed9 : out 2, al ; add byte ptr [rdi + rdi*8], cl ; salc ; call qword ptr [rax]
0x0000000000652442 : out 2, eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000738ef1 : out 2, eax ; add dl, ah ; call rsi
0x000000000073c149 : out 3, al ; add al, dl ; neg dh ; jmp rax
0x000000000067fdf5 : out 3, eax ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x0000000000677603 : out 3, eax ; sete al ; ret
0x0000000000636a33 : out 4, al ; add byte ptr [rax], al ; call rax
0x00000000007ded55 : out 4, al ; add byte ptr [rbp + 0x504], ch ; ret 0x504
0x000000000059ddcc : out 4, eax ; add rdi, 8 ; call 0x6aa858
0x00000000007457d1 : out 6, al ; add al, al ; retf
0x00000000007457c9 : out 6, al ; add byte ptr [rax], ah ; retf
0x0000000000602c1e : out 7, al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000748989 : out 7, eax ; add byte ptr [rax], ah ; ret
0x0000000000748979 : out 7, eax ; add byte ptr [rax], al ; ret 0xfff6
0x0000000000748981 : out 7, eax ; add byte ptr [rax], dl ; ret 0xfff6
0x0000000000683b89 : out 8, al ; add al, bl ; ret 0x7cd9
0x000000000041f27b : out 8, eax ; add byte ptr es:[rax - 0x77], cl ; ret
0x00000000006c5ae3 : out 8, eax ; lea eax, dword ptr [rdi + rsi] ; add rsp, 8 ; ret
0x00000000005e1f58 : out 9, eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007ed4e3 : out dx, al ; adc dword ptr [rcx], edx ; nop ; and eax, dword ptr [rax] ; ret
0x00000000007e1229 : out dx, al ; add al, 0x16 ; ret 4
0x000000000077a53d : out dx, al ; add al, byte ptr [rax] ; cmp dl, 0xdc ; jmp qword ptr [rcx]
0x0000000000739059 : out dx, al ; add al, byte ptr [rax] ; pop rsi ; test edi, edx ; jmp rax
0x0000000000739061 : out dx, al ; add al, byte ptr [rax] ; xchg dil, dl ; call qword ptr [rax]
0x00000000007c6eaa : out dx, al ; add al, byte ptr [rbx] ; ret
0x0000000000503a6b : out dx, al ; add byte ptr [r8 - 0x77], r9b ; fucompi st(0) ; retf 0x1d0c
0x000000000056edac : out dx, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf
0x00000000007f4567 : out dx, al ; add dword ptr [rax], eax ; retf 0x1ed
0x00000000007c47ee : out dx, al ; add eax, 0x5059e00 ; retf
0x0000000000570074 : out dx, al ; add eax, 0x89480011 ; ret
0x00000000007e0e97 : out dx, al ; add eax, 0xd02b300 ; add byte ptr [rax], al ; ret
0x00000000007d46b2 : out dx, al ; add eax, dword ptr [rax] ; test byte ptr [rbx], 0x41 ; add byte ptr [rax], al ; ret
0x0000000000688102 : out dx, al ; add eax, dword ptr [rbx - 0x7cb7f81f] ; ret 0x8301
0x0000000000693161 : out dx, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006cba09 : out dx, al ; add rsp, 8 ; ret
0x00000000007f5896 : out dx, al ; and al, byte ptr [rax] ; ret 0x522
0x000000000057244e : out dx, al ; and dl, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007a5f90 : out dx, al ; and eax, esi ; call qword ptr [rdx]
0x00000000006b798d : out dx, al ; call 0x403c73
0x0000000000744466 : out dx, al ; call qword ptr [rax]
0x00000000007b1f2a : out dx, al ; call qword ptr [rdi]
0x00000000007b056a : out dx, al ; call qword ptr [rdx]
0x0000000000626562 : out dx, al ; call qword ptr [rip + 0x3dc37f]
0x0000000000525e6a : out dx, al ; call qword ptr [rip + 0x4dca77]
0x00000000005136f9 : out dx, al ; call r8
0x000000000051167d : out dx, al ; call rax
0x00000000007f6074 : out dx, al ; clts ; fstp dword ptr [rsi] ; add bl, bh ; syscall
0x0000000000748535 : out dx, al ; cmc ; call rax
0x00000000007e55bf : out dx, al ; cmp esp, dword ptr [rax + r8*2 + 0x419f06] ; ret
0x00000000005149d2 : out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x00000000007f2d9e : out dx, al ; fiadd dword ptr [rcx] ; pop rbp ; jmp qword ptr [rdi]
0x00000000006a4721 : out dx, al ; fstp st(1) ; ret
0x0000000000744d9c : out dx, al ; fucomi st(6) ; call rax
0x00000000004514be : out dx, al ; in al, 0x23 ; add byte ptr [rax + 0x29], cl ; ret
0x000000000074463e : out dx, al ; inc dword ptr [rax] ; mov es, word ptr [rsi] ; add byte ptr [rax + 0x47], bh ; out dx, al ; jmp qword ptr [rax]
0x0000000000744676 : out dx, al ; inc dword ptr [rax] ; pop qword ptr [rsi] ; add byte ptr [rsi], bh ; out dx, al ; jmp qword ptr [rax]
0x000000000074449e : out dx, al ; inc dword ptr [rax] ; xchg byte ptr [rsi], al ; add byte ptr [rax + 0x19], dl ; out dx, al ; jmp qword ptr [rax]
0x0000000000744ea6 : out dx, al ; inc eax ; mov ah, 6 ; add byte ptr [rdx], dl ; cmc ; out dx, al ; jmp rax
0x0000000000744dce : out dx, al ; inc eax ; mov al, 6 ; add byte ptr [rsi], ah ; in al, -0x12 ; jmp rax
0x00000000007445fe : out dx, al ; inc eax ; mov word ptr [rsi], es ; add byte ptr [rsi + 0x41], dl ; out dx, al ; jmp rax
0x00000000006772c0 : out dx, al ; jl 0x677333 ; ret
0x00000000006772cf : out dx, al ; jl 0x677344 ; xor eax, eax ; ret
0x00000000007fa52a : out dx, al ; jl 0x7fa536 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jp 0x7fa53e ; fsub dword ptr [rbp] ; retf
0x0000000000602e7e : out dx, al ; jle 0x602e8f ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000744436 : out dx, al ; jmp qword ptr [rax]
0x00000000007b067a : out dx, al ; jmp qword ptr [rcx]
0x00000000007b27fa : out dx, al ; jmp qword ptr [rsi]
0x0000000000744496 : out dx, al ; jmp rax
0x00000000007b0d2a : out dx, al ; jmp rdi
0x00000000007b28b2 : out dx, al ; jmp rdx
0x00000000007b13d2 : out dx, al ; jmp rsi
0x00000000007b2c7a : out dx, al ; jmp rsp
0x0000000000744736 : out dx, al ; ljmp ptr [rax + 0x6c000692] ; pop rsi ; out dx, al ; call rax
0x00000000006cbd19 : out dx, al ; mov byte ptr [rdi], 0 ; ret
0x000000000079c708 : out dx, al ; mov dl, 0xe7 ; call qword ptr [rdi]
0x0000000000554174 : out dx, al ; mov ecx, 0x89480012 ; ret
0x000000000040874e : out dx, al ; mov edi, 0x5d5b002c ; pop r12 ; ret
0x000000000053e85e : out dx, al ; mov edi, 0x89480016 ; ret
0x00000000004fa305 : out dx, al ; mov edx, 0x6edea0 ; call rax
0x000000000058645d : out dx, al ; mov edx, 0x708140 ; mov rdi, rbx ; call rax
0x000000000054a332 : out dx, al ; mov edx, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rcx
0x0000000000506b21 : out dx, al ; mov rax, rdi ; ret
0x0000000000549408 : out dx, al ; mov rdi, qword ptr [rbp - 0x368] ; call rax
0x000000000068d0b4 : out dx, al ; mov rdi, r13 ; call 0x689b26
0x000000000051058a : out dx, al ; mov rdi, rbx ; call rax
0x00000000004043ba : out dx, al ; mov rdx, r12 ; mov rdi, rbx ; call rax
0x000000000055223e : out dx, al ; mov rdx, rbp ; mov rdi, r12 ; call rax
0x00000000005489d1 : out dx, al ; mov rdx, rbp ; mov rdi, rbx ; call rax
0x000000000060029a : out dx, al ; or byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007ecc21 : out dx, al ; or dword ptr [rax], eax ; jne 0x7ecc33 ; lodsd eax, dword ptr [rsi] ; or al, 0 ; ret 0x501
0x00000000005601ee : out dx, al ; or eax, 0x15e3dbe8 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054394e : out dx, al ; or eax, 0x89480019 ; ret
0x00000000007b2939 : out dx, al ; out dx, al ; jmp qword ptr [rcx]
0x00000000007b2901 : out dx, al ; out dx, al ; jmp qword ptr [rsi]
0x0000000000678b31 : out dx, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000507011 : out dx, al ; pop rbx ; ret
0x000000000061f8b0 : out dx, al ; push 0xff ; dec dword ptr [rax - 0x77] ; ret
0x0000000000744c56 : out dx, al ; push qword ptr [rax + 0x1a0006a9] ; stosd dword ptr [rdi], eax ; out dx, al ; call rax
0x0000000000744bae : out dx, al ; push qword ptr [rax + 0x5a0006a6] ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; jmp rax
0x000000000074441e : out dx, al ; push qword ptr [rax + 0x6000683] ; adc dh, ch ; call rax
0x000000000074462e : out dx, al ; push qword ptr [rax + 0x6e00068d] ; out dx, al ; call rax
0x0000000000744d96 : out dx, al ; push qword ptr [rax - 0x11fff951] ; fucomi st(6) ; call rax
0x0000000000744846 : out dx, al ; push qword ptr [rax - 0x1dfff969] ; jno 0x744846 ; call rax
0x00000000007448f6 : out dx, al ; push qword ptr [rax - 0x2dfff966] ; jns 0x7448f6 ; call rax
0x0000000000744666 : out dx, al ; push qword ptr [rax - 0x3ffff972] ; out dx, al ; jmp rax
0x0000000000744c8e : out dx, al ; push qword ptr [rax - 0x77fff956] ; mov ch, 0xee ; call rax
0x000000000074442e : out dx, al ; push rax ; add dword ptr [rsi], 0 ; adc al, 0x12 ; out dx, al ; jmp qword ptr [rax]
0x0000000000744c66 : out dx, al ; push rax ; test eax, 0xab840006 ; out dx, al ; call qword ptr [rax]
0x0000000000506b71 : out dx, al ; ret
0x00000000004f28ee : out dx, al ; ret 0x1c
0x0000000000714340 : out dx, al ; ret 0x5d
0x0000000000542dbe : out dx, al ; retf
0x000000000073912c : out dx, al ; retf -0x29
0x000000000047b884 : out dx, al ; retf -1
0x0000000000564a40 : out dx, al ; retf 0x11
0x000000000072248d : out dx, al ; retf 0x6fc4
0x0000000000651dbe : out dx, al ; retf 6
0x0000000000721884 : out dx, al ; ror byte ptr [rip + 0x48354d7], cl ; ret 0x3b3
0x000000000075ba90 : out dx, al ; sar edi, 1 ; ret 1
0x000000000044cade : out dx, al ; sbb ah, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000007334e9 : out dx, al ; stc ; jmp rsp
0x0000000000405846 : out dx, al ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007d9d73 : out dx, al ; sub eax, 0x23ad03 ; add byte ptr [rax], al ; ret
0x00000000006b71b8 : out dx, al ; sub rdx, 0x19 ; call 0x403c77
0x00000000007d43ac : out dx, al ; syscall
0x00000000006dea28 : out dx, al ; xchg eax, esp ; add byte ptr [rax], r8b ; add byte ptr [rax], al ; add byte ptr [rdx], bl ; retf 0x4c
0x00000000006be9be : out dx, al ; xor al, 0 ; add rsp, 8 ; jmp rax
0x00000000007e355f : out dx, al ; xor al, 3 ; ret 0x1609
0x00000000007b5ab1 : out dx, ax ; call qword ptr [rsi]
0x00000000005e16f5 : out dx, eax ; adc dword ptr [rdx], eax ; call rax
0x0000000000653b4f : out dx, eax ; adc eax, 0x3d800000 ; ret 0x3b4f
0x00000000007c6727 : out dx, eax ; adc eax, dword ptr [rax] ; in al, dx ; or eax, 0x148505 ; ret 0x3e0e
0x00000000006aa9e1 : out dx, eax ; add al, byte ptr [rax - 0x80] ; inc dword ptr [rcx] ; seta al ; ret
0x0000000000739089 : out dx, eax ; add al, byte ptr [rax] ; call 0xffffffffe1736825
0x0000000000739091 : out dx, eax ; add al, byte ptr [rax] ; jl 0x73902f ; xlatb ; call qword ptr [rax]
0x00000000005d3948 : out dx, eax ; add dil, dil ; ror cl, 1 ; ret
0x000000000052e3dd : out dx, eax ; add dword ptr [rcx], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007d4cc1 : out dx, eax ; add dword ptr [rcx], esp ; in eax, dx ; add eax, dword ptr [rax] ; ret 0x302
0x0000000000742729 : out dx, eax ; add eax, 0xe9b43a00 ; call qword ptr [rax]
0x00000000006c6af1 : out dx, eax ; add eax, dword ptr [rax - 0x80] ; inc dword ptr [rcx] ; seta al ; ret
0x0000000000688072 : out dx, eax ; add eax, dword ptr [rbx - 0x7cb7f81f] ; ret 0x8301
0x000000000069f920 : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000050c0dd : out dx, eax ; and al, 0x1b ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e07ed : out dx, eax ; and byte ptr [rdx], al ; call rax
0x00000000007f09e3 : out dx, eax ; and dword ptr [rip - 0x4e8dd64], eax ; and dword ptr [rcx], esp ; ret
0x00000000006204ed : out dx, eax ; and edi, dword ptr [rsi] ; add bh, bh ; ror cl, 1 ; ret
0x00000000006c71a4 : out dx, eax ; call 0x403c73
0x00000000005f8591 : out dx, eax ; call 0x674833
0x00000000006344d6 : out dx, eax ; call 0x6806e7
0x000000000068d852 : out dx, eax ; call 0x689b23
0x00000000005025e1 : out dx, eax ; call 0x6be8b3
0x0000000000672b22 : out dx, eax ; call 0x6bf553
0x00000000005a783f : out dx, eax ; call 0x6c3b13
0x00000000006b1d8d : out dx, eax ; call 0x6cdfd3
0x0000000000671629 : out dx, eax ; call 0x6ce0f3
0x0000000000578523 : out dx, eax ; call 0x6d4743
0x0000000000745266 : out dx, eax ; call qword ptr [rax]
0x00000000007b3cba : out dx, eax ; call qword ptr [rbx]
0x00000000007b3632 : out dx, eax ; call qword ptr [rcx]
0x00000000007b454a : out dx, eax ; call qword ptr [rdi]
0x00000000007b306a : out dx, eax ; call qword ptr [rdx]
0x00000000007b5ab2 : out dx, eax ; call qword ptr [rsi]
0x00000000005100ef : out dx, eax ; call r11
0x00000000006cd71b : out dx, eax ; call r14
0x000000000050b278 : out dx, eax ; call rax
0x00000000007b30ba : out dx, eax ; call rbx
0x00000000005115ba : out dx, eax ; call rcx
0x00000000005101ea : out dx, eax ; call rdx
0x00000000007b3e5a : out dx, eax ; call rsi
0x00000000006b1684 : out dx, eax ; cld ; dec dword ptr [rax - 0x77] ; ret
0x000000000072192a : out dx, eax ; cli ; retf
0x0000000000534811 : out dx, eax ; cli ; xchg eax, ebp ; sub esi, dword ptr [rcx + 0x148d231] ; ret
0x0000000000748545 : out dx, eax ; cmc ; jmp qword ptr [rax]
0x0000000000606517 : out dx, eax ; cmp dil, 0x19 ; setbe al ; ret
0x00000000005d007d : out dx, eax ; cmp esp, ebx ; dec dword ptr [rax + 0x63] ; ret
0x00000000006c9df2 : out dx, eax ; cmp rdx, 0x10 ; jne 0x6c9ddb ; ret
0x000000000050a20b : out dx, eax ; dec dword ptr [rax - 0x73] ; pop rdx ; dec dword ptr [rax - 0x7d] ; ret
0x000000000050a500 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000745026 : out dx, eax ; dec dword ptr [rax] ; mov ebx, 0x21400006 ; out dx, eax ; jmp qword ptr [rax]
0x00000000007450de : out dx, eax ; dec dword ptr [rax] ; mov edi, 0x26a00006 ; out dx, eax ; jmp qword ptr [rax]
0x0000000000745406 : out dx, eax ; dec dword ptr [rax] ; rol dword ptr [rsi], 1 ; add al, dh ; jno 0x745407 ; jmp qword ptr [rax]
0x00000000007451de : out dx, eax ; dec eax ; ret
0x0000000000745496 : out dx, eax ; dec eax ; rol dword ptr [rsi], cl ; add al, al ; ja 0x745497 ; jmp rax
0x0000000000722b75 : out dx, eax ; hlt ; push rdi ; out dx, eax ; ret 0x94a7
0x00000000007afa19 : out dx, eax ; in eax, dx ; jmp qword ptr [rdi]
0x0000000000745426 : out dx, eax ; inc dword ptr [rax + 0x700006d1] ; jae 0x745427 ; call rax
0x000000000074516e : out dx, eax ; inc dword ptr [rax] ; ret 6
0x000000000074530e : out dx, eax ; inc dword ptr [rax] ; retf
0x0000000000651c5c : out dx, eax ; inc dword ptr [rcx - 0x80] ; std ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8348
0x00000000007451ae : out dx, eax ; inc eax ; ret 6
0x0000000000745306 : out dx, eax ; inc eax ; retf 6
0x00000000004f41fd : out dx, eax ; insd dword ptr [rdi], dx ; add al, ch ; retf
0x00000000007451ce : out dx, eax ; jmp qword ptr [rax - 0x3d]
0x0000000000744f56 : out dx, eax ; jmp qword ptr [rax]
0x00000000007b48e2 : out dx, eax ; jmp qword ptr [rbx]
0x00000000007b30f2 : out dx, eax ; jmp qword ptr [rcx]
0x00000000007b2ffa : out dx, eax ; jmp qword ptr [rdi]
0x00000000007b689a : out dx, eax ; jmp qword ptr [rdx]
0x00000000007b4c1a : out dx, eax ; jmp qword ptr [rsi]
0x0000000000744f16 : out dx, eax ; jmp rax
0x00000000007b6bea : out dx, eax ; jmp rdx
0x00000000007b7672 : out dx, eax ; jmp rsi
0x00000000007451b6 : out dx, eax ; lcall ptr [rax] ; ret
0x0000000000745176 : out dx, eax ; lcall ptr [rax] ; ret 6
0x000000000056cf45 : out dx, eax ; lea rsi, qword ptr [rbp - 0x100] ; call rax
0x00000000007457ce : out dx, eax ; ljmp ptr [rax] ; out 6, al ; add al, al ; retf
0x0000000000745316 : out dx, eax ; ljmp ptr [rax] ; retf
0x0000000000642f69 : out dx, eax ; loopne 0x642f70 ; jmp 0x63f1f4
0x00000000005e9f7d : out dx, eax ; mov byte ptr [rcx], al ; call rax
0x00000000005075f5 : out dx, eax ; mov dl, 0x4f ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000495bdd : out dx, eax ; mov dword ptr [rdx], esp ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000050f61f : out dx, eax ; mov eax, 0x80 ; ret
0x00000000006a1c15 : out dx, eax ; mov eax, 0xffffffff ; ret
0x000000000052bfd9 : out dx, eax ; mov ebx, 0 ; call rax
0x00000000005a7829 : out dx, eax ; mov ecx, r12d ; call 0x6c3b16
0x000000000055451d : out dx, eax ; mov esi, dword ptr [rsp + 0x24] ; call rax
0x0000000000502629 : out dx, eax ; mov rsi, rbx ; call 0x6be8b6
0x00000000005079ea : out dx, eax ; mov rsi, rbx ; call rax
0x0000000000501e2d : out dx, eax ; mov rsi, rbx ; mov rsp, r14 ; call 0x6be8b9
0x0000000000501daf : out dx, eax ; mov rsp, r14 ; call 0x6be8b6
0x00000000006a4df8 : out dx, eax ; movapd xmm0, xmm1 ; ret
0x000000000055045f : out dx, eax ; not byte ptr [rdx] ; add bl, ch ; test dword ptr [rax - 0x77], ecx ; ret
0x00000000006c6b11 : out dx, eax ; or byte ptr [rax - 0x80], al ; inc dword ptr [rcx] ; seta al ; ret
0x00000000007f0f4f : out dx, eax ; or eax, dword ptr [rbx] ; ret 0x51b
0x00000000007f0dba : out dx, eax ; or eax, dword ptr [rbx] ; ret 0x7105
0x00000000007f0e80 : out dx, eax ; or eax, dword ptr [rbx] ; retf
0x00000000005f1cf5 : out dx, eax ; or eax, dword ptr [rcx] ; call rax
0x00000000004a1ef1 : out dx, eax ; out 0x1d, eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007458d5 : out dx, eax ; out dx, eax ; call qword ptr [rax]
0x0000000000612443 : out dx, eax ; push 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000007457b6 : out dx, eax ; push qword ptr [rax + 0x6e5] ; retf
0x00000000007451be : out dx, eax ; push qword ptr [rax] ; ret
0x000000000074517e : out dx, eax ; push qword ptr [rax] ; ret 6
0x00000000007455ce : out dx, eax ; push rax ; fadd dword ptr [rsi] ; add al, al ; xchg edi, ebp ; jmp qword ptr [rax]
0x00000000007455ee : out dx, eax ; push rax ; fld dword ptr [rsi] ; add al, ah ; mov edi, gs ; jmp qword ptr [rax]
0x0000000000745066 : out dx, eax ; push rax ; mov ebx, 0x22200006 ; out dx, eax ; jmp qword ptr [rax]
0x00000000007451e6 : out dx, eax ; push rax ; ret
0x000000000050f6cf : out dx, eax ; ret
0x00000000006965f5 : out dx, eax ; ret 0x36
0x0000000000722b78 : out dx, eax ; ret 0x94a7
0x000000000054dc5d : out dx, eax ; retf
0x000000000068283a : out dx, eax ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000000005e1517 : out dx, eax ; sar bh, 1 ; dec ecx ; ret
0x00000000007d05dd : out dx, eax ; sbb byte ptr [rax], al ; retf
0x0000000000439f0d : out dx, eax ; sbb eax, 0x8948001d ; ret
0x0000000000682dba : out dx, eax ; shl byte ptr [rsi + 0xf], 0x2e ; ret 0x5e77
0x0000000000683164 : out dx, eax ; shl byte ptr [rsi + 0xf], cl ; retf 0x7c7a
0x000000000068319a : out dx, eax ; shl byte ptr [rsi + 0xf], cl ; retf 0xa7a
0x000000000044e7dd : out dx, eax ; std ; add byte ptr es:[rax - 0x77], cl ; ret 0x8948
0x00000000004057ba : out dx, eax ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007cd7ed : out dx, eax ; syscall
0x0000000000432577 : out dx, eax ; test bh, bh ; dec ecx ; ret
0x0000000000580b7a : out dx, eax ; verw cx ; ret 0xfff7
0x0000000000678431 : out dx, eax ; xor byte ptr [rax - 0x80], al ; dec dword ptr [rcx] ; setbe al ; ret
0x0000000000543927 : out dx, eax ; xor eax, eax ; call 0x67fb57
0x00000000005c3949 : out dx, eax ; xor eax, eax ; call 0x67fb6b
0x00000000005b3107 : out dx, eax ; xor eax, eax ; mov r14, rdx ; call 0x67fb5a
0x000000000050bf6f : out dx, eax ; xor eax, eax ; xor edx, edx ; ret
0x00000000004dbdef : outsb dx, byte ptr [rsi] ; adc eax, 0x8fbf0000 ; ret 0x6e
0x00000000006a6c9e : outsb dx, byte ptr [rsi] ; add al, 0 ; add dh, al ; ret
0x00000000004fe678 : outsb dx, byte ptr [rsi] ; add al, ch ; and al, 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f36d4 : outsb dx, byte ptr [rsi] ; add al, ch ; cmc ; ret
0x00000000004f36fc : outsb dx, byte ptr [rsi] ; add al, ch ; int 0xc3
0x00000000004f8385 : outsb dx, byte ptr [rsi] ; add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb ecx, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f3724 : outsb dx, byte ptr [rsi] ; add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004f3706 : outsb dx, byte ptr [rsi] ; add al, ch ; ret
0x0000000000505d07 : outsb dx, byte ptr [rsi] ; add al, ch ; ret 0x1893
0x0000000000501207 : outsb dx, byte ptr [rsi] ; add al, ch ; ret 0x18de
0x00000000004f3738 : outsb dx, byte ptr [rsi] ; add al, ch ; xchg eax, ecx ; ret
0x0000000000496fc3 : outsb dx, byte ptr [rsi] ; add bh, bh ; loopne 0x49702a ; ret
0x00000000004fa309 : outsb dx, byte ptr [rsi] ; add bh, bh ; ror byte ptr [rax - 0x77], 1 ; ret
0x00000000005ca1ea : outsb dx, byte ptr [rsi] ; add bh, byte ptr [rcx] ; retf -0x71f1
0x00000000004cdf2f : outsb dx, byte ptr [rsi] ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x485f
0x00000000004cee90 : outsb dx, byte ptr [rsi] ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4c5f
0x00000000004d05e0 : outsb dx, byte ptr [rsi] ; add byte ptr [rax - 0x39], cl ; test dword ptr [rax], ebp ; idiv edi ; call qword ptr [rax]
0x00000000004d0478 : outsb dx, byte ptr [rsi] ; add byte ptr [rax - 0x39], cl ; test eax, ebx ; idiv bh ; call qword ptr [rax]
0x000000000050b1d7 : outsb dx, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; jmp rsi
0x000000000050b274 : outsb dx, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000050afec : outsb dx, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a9e50 : outsb dx, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x00000000006ce0d7 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rdi + 3], bh ; ret
0x0000000000459b1c : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; leave ; ret
0x00000000004847d8 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], bh ; call 0x680acd
0x0000000000484801 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], bh ; call 0x680af5
0x00000000004c493a : outsb dx, byte ptr [rsi] ; add byte ptr [rax], bh ; call 0x680b95
0x00000000004e491f : outsb dx, byte ptr [rsi] ; add byte ptr [rax], bh ; call 0x680bbd
0x00000000004550e0 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], bh ; call 0x681303
0x000000000050b0c3 : outsb dx, byte ptr [rsi] ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000503d60 : outsb dx, byte ptr [rsi] ; add byte ptr [rcx + rcx*4 - 1], cl ; call rcx
0x00000000004f50de : outsb dx, byte ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x13 ; ret 0x18
0x00000000004f486d : outsb dx, byte ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x16 ; ret
0x00000000004f50b9 : outsb dx, byte ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x38 ; ret 0x18
0x0000000000500c3a : outsb dx, byte ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x49 ; call qword ptr [rdi]
0x0000000000500c5c : outsb dx, byte ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x4f ; call qword ptr [rdi]
0x00000000004f485c : outsb dx, byte ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x4f ; ret
0x0000000000404065 : outsb dx, byte ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x56 ; retf 0x27
0x0000000000404053 : outsb dx, byte ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x58 ; retf
0x00000000004f4f89 : outsb dx, byte ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x68 ; ret
0x0000000000500bc8 : outsb dx, byte ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0xbb ; call qword ptr [rdi]
0x0000000000403efd : outsb dx, byte ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0xbe ; retf
0x0000000000500bd9 : outsb dx, byte ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0xd2 ; call qword ptr [rdi]
0x00000000004fecb9 : outsb dx, byte ptr [rsi] ; add byte ptr [rdi], cl ; test dword ptr [rdi], ecx ; add al, 0 ; add al, ch ; retf 0x1bfb
0x000000000050457a : outsb dx, byte ptr [rsi] ; add cl, ch ; mov r13b, 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005047ae : outsb dx, byte ptr [rsi] ; add cl, ch ; sbb esi, dword ptr [rbx - 0x76b7ffe8] ; ret
0x00000000007625d5 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; call 0x2475fa45
0x0000000000740eb1 : outsb dx, byte ptr [rsi] ; add eax, 0xe64f2000 ; call rax
0x0000000000740ec1 : outsb dx, byte ptr [rsi] ; add eax, 0xe64fb000 ; call qword ptr [rax]
0x000000000045b4dc : outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; clc ; leave ; ret
0x0000000000782515 : outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; clc ; fcomp st(6) ; call qword ptr [rbx]
0x0000000000551188 : outsb dx, byte ptr [rsi] ; and byte ptr [rdi + rcx], dh ; ret 0x8d48
0x00000000005b21ce : outsb dx, byte ptr [rsi] ; and byte ptr [rdi], cl ; ret 0x894c
0x0000000000745e9d : outsb dx, byte ptr [rsi] ; call qword ptr [rax]
0x0000000000518a42 : outsb dx, byte ptr [rsi] ; call rax
0x000000000066af52 : outsb dx, byte ptr [rsi] ; cmp dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000066af2d : outsb dx, byte ptr [rsi] ; cmp dword ptr [rax], eax ; ret
0x00000000005d4f76 : outsb dx, byte ptr [rsi] ; fld dword ptr [rdx] ; call rax
0x00000000005149d0 : outsb dx, byte ptr [rsi] ; imul esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000007ac260 : outsb dx, byte ptr [rsi] ; in eax, dx ; call qword ptr [rsi]
0x0000000000735345 : outsb dx, byte ptr [rsi] ; iretd ; call rax
0x0000000000755488 : outsb dx, byte ptr [rsi] ; jae 0x75545d ; call qword ptr [rcx]
0x0000000000745e95 : outsb dx, byte ptr [rsi] ; jmp rax
0x00000000006a66b5 : outsb dx, byte ptr [rsi] ; jne 0x6a66e3 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000452ffe : outsb dx, byte ptr [rsi] ; jrcxz 0x45302c ; add cl, cl ; ret
0x0000000000739b34 : outsb dx, byte ptr [rsi] ; leave ; fdivr st(7) ; mov eax, 0x42000321 ; retf -0x28
0x0000000000739124 : outsb dx, byte ptr [rsi] ; leave ; xlatb ; inc dword ptr [rax] ; add al, byte ptr [rax] ; out dx, al ; retf -0x29
0x0000000000564676 : outsb dx, byte ptr [rsi] ; loop 0x5646c8 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000572472 : outsb dx, byte ptr [rsi] ; loop 0x57248b ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007ca9d5 : outsb dx, byte ptr [rsi] ; loope 0x7ca9dd ; ret
0x0000000000722487 : outsb dx, byte ptr [rsi] ; mov bl, 0x89 ; jbe 0x72250f ; salc ; out dx, al ; retf 0x6fc4
0x00000000005eca7e : outsb dx, byte ptr [rsi] ; mov edi, 0x8948000b ; ret 0x8949
0x000000000059ff42 : outsb dx, byte ptr [rsi] ; or al, 0xe ; add byte ptr [rax - 0x77], cl ; ret
0x000000000074a751 : outsb dx, byte ptr [rsi] ; or byte ptr [rax], al ; jo 0x74a789 ; stc ; call qword ptr [rax]
0x000000000074a709 : outsb dx, byte ptr [rsi] ; or byte ptr [rax], al ; shr byte ptr [rcx + rdi*8], 1 ; jmp qword ptr [rax]
0x00000000005df1e0 : outsb dx, byte ptr [rsi] ; or dword ptr [rdx], ecx ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000053da5e : outsb dx, byte ptr [rsi] ; or ebx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x0000000000744634 : outsb dx, byte ptr [rsi] ; out dx, al ; call rax
0x0000000000530038 : outsb dx, byte ptr [rsi] ; outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ja 0x53004e ; ret
0x00000000006126c4 : outsb dx, byte ptr [rsi] ; push -0x76b80000 ; ret 0x8b48
0x00000000006b78fe : outsb dx, byte ptr [rsi] ; ret
0x00000000007ea52e : outsb dx, byte ptr [rsi] ; ret 0x102
0x000000000079cad0 : outsb dx, byte ptr [rsi] ; ret 0xffe7
0x00000000007e1203 : outsb dx, byte ptr [rsi] ; ret 4
0x00000000005074fc : outsb dx, byte ptr [rsi] ; retf
0x0000000000721a3b : outsb dx, byte ptr [rsi] ; retf -0x1ead
0x00000000007570c8 : outsb dx, byte ptr [rsi] ; retf -0x31
0x000000000053407a : outsb dx, byte ptr [rsi] ; retf 0x14
0x0000000000505df6 : outsb dx, byte ptr [rsi] ; retf 0x4f
0x00000000005d30e0 : outsb dx, byte ptr [rsi] ; retf 0xa
0x0000000000643f88 : outsb dx, byte ptr [rsi] ; rol dword ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000736285 : outsb dx, byte ptr [rsi] ; sar edi, 1 ; rcl byte ptr [rdx + rax], 0 ; retf -0x2e92
0x000000000065973a : outsb dx, byte ptr [rsi] ; sete al ; pop rbx ; ret
0x00000000007224e6 : outsb dx, byte ptr [rsi] ; sti ; ret
0x00000000005897bd : outsb dx, byte ptr [rsi] ; str word ptr [rax - 0x77] ; ret
0x0000000000737924 : outsb dx, byte ptr [rsi] ; test al, 0xd3 ; jmp qword ptr [rax]
0x0000000000495e5e : outsb dx, byte ptr [rsi] ; xchg dword ptr [rdx], esp ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000064e288 : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000056da1a : outsb dx, byte ptr [rsi] ; xor dword ptr [rcx], edx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000551187 : outsb dx, byte ptr gs:[rsi] ; and byte ptr [rdi + rcx], dh ; ret 0x8d48
0x000000000057d7d3 : outsd dx, dword ptr [rsi] ; adc eax, 0xea834800 ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000507db2 : outsd dx, dword ptr [rsi] ; add al, 1 ; lock sub dword ptr [rdi], 1 ; ret
0x00000000005288e3 : outsd dx, dword ptr [rsi] ; add al, ch ; fiadd dword ptr [rcx - 0x76b7ffeb] ; ret
0x000000000054ef1e : outsd dx, dword ptr [rsi] ; add al, ch ; lahf ; sbb edx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000051ff6a : outsd dx, dword ptr [rsi] ; add al, ch ; pop rdi ; out 0x19, al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005367fe : outsd dx, dword ptr [rsi] ; add al, ch ; retf
0x0000000000549af3 : outsd dx, dword ptr [rsi] ; add al, ch ; retf 0x136f
0x000000000053650f : outsd dx, dword ptr [rsi] ; add al, ch ; retf 0x1596
0x000000000053ed65 : outsd dx, dword ptr [rsi] ; add bh, dh ; shl byte ptr [rcx], cl ; ret 0xb70f
0x000000000055ba0f : outsd dx, dword ptr [rsi] ; add byte ptr [rax + 0x29], cl ; retf -0x7eb8
0x000000000050bd59 : outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ja 0x50bd6d ; ret
0x000000000050bde9 : outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ja 0x50bdfd ; ret
0x000000000052db89 : outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ja 0x52db9d ; ret
0x000000000052dc19 : outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ja 0x52dc2d ; ret
0x000000000052edf9 : outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ja 0x52ee0d ; ret
0x000000000052ee89 : outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ja 0x52ee9d ; ret
0x0000000000530039 : outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ja 0x53004d ; ret
0x00000000005300c9 : outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ja 0x5300dd ; ret
0x0000000000546499 : outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ja 0x5464ad ; ret
0x0000000000546529 : outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ja 0x54653d ; ret
0x000000000054f8d9 : outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ja 0x54f8ed ; ret
0x000000000054f969 : outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ja 0x54f97d ; ret
0x0000000000558ad9 : outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ja 0x558aed ; ret
0x00000000005184ab : outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000053b6a2 : outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rcx
0x0000000000557d0d : outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000051ed22 : outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; sbb r8b, bpl ; ret
0x00000000005100eb : outsd dx, dword ptr [rsi] ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call r11
0x0000000000545fc7 : outsd dx, dword ptr [rsi] ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000053ea01 : outsd dx, dword ptr [rsi] ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000525336 : outsd dx, dword ptr [rsi] ; add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x000000000050fbf9 : outsd dx, dword ptr [rsi] ; add byte ptr [rcx - 0x6f3cf789], cl ; ret
0x00000000005340cf : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x14 ; retf 0x14
0x0000000000534fb7 : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x3a ; ret
0x00000000004048b5 : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x3c ; retf 0x27
0x00000000005447a8 : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x49 ; retf
0x00000000005350a0 : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x51 ; ret 0x14
0x0000000000554760 : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x5b ; ret
0x0000000000515091 : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x60 ; ret 0x16
0x0000000000404123 : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x60 ; retf 0x27
0x0000000000534075 : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x6e ; retf 0x14
0x0000000000514f6c : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x85 ; ret
0x0000000000545063 : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x8e ; ret 0x13
0x0000000000404762 : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x8f ; retf
0x0000000000510b2b : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x90 ; call qword ptr [rsi]
0x0000000000404111 : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x9a ; retf 0x27
0x0000000000554813 : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0xa8 ; ret 0x12
0x000000000055473c : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0xb5 ; retf
0x0000000000554802 : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0xb9 ; ret 0x12
0x00000000004047bf : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0xc4 ; ret
0x0000000000535026 : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0xcb ; ret 0x14
0x0000000000515020 : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0xd1 ; ret 0x16
0x000000000040481e : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0xd3 ; retf 0x27
0x00000000005547d7 : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0xe4 ; ret 0x12
0x000000000053500b : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0xe6 ; ret 0x14
0x0000000000514f00 : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0xf1 ; ret
0x0000000000553fbe : outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0xfd ; retf 0x12
0x0000000000523b7f : outsd dx, dword ptr [rsi] ; add byte ptr [rdi + 0xa029c0], bh ; call 0x68066f
0x0000000000523b93 : outsd dx, dword ptr [rsi] ; add byte ptr [rdi + 0xa02a40], bh ; call 0x68066f
0x000000000053ded2 : outsd dx, dword ptr [rsi] ; add byte ptr [rdi], cl ; ret 0x6b9
0x00000000007c4317 : outsd dx, dword ptr [rsi] ; add dword ptr [rax + 5], edi ; add byte ptr [rax], al ; lea eax, dword ptr [rcx] ; retf
0x00000000007626b5 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; xchg eax, esi ; jb 0x762695 ; call rdi
0x0000000000740f01 : outsd dx, dword ptr [rsi] ; add eax, 0xe6516000 ; jmp rax
0x0000000000740f11 : outsd dx, dword ptr [rsi] ; add eax, 0xe6518000 ; call qword ptr [rax]
0x00000000007a265d : outsd dx, dword ptr [rsi] ; add eax, 0xe8fe1000 ; call rsi
0x00000000007a2695 : outsd dx, dword ptr [rsi] ; add eax, 0xe8feb800 ; call rsi
0x00000000005f9dcb : outsd dx, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000499721 : outsd dx, dword ptr [rsi] ; and al, byte ptr [rax] ; leave ; ret
0x00000000004bd7bb : outsd dx, dword ptr [rsi] ; and dword ptr [rax], eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000005edc91 : outsd dx, dword ptr [rsi] ; call 0xffffffffc428dc9b
0x00000000005c2f19 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005eb56d : outsd dx, dword ptr [rsi] ; jae 0x5eb5b8 ; add bh, bh ; ror cl, 1 ; ret
0x00000000004b9253 : outsd dx, dword ptr [rsi] ; loope 0x4b9255 ; dec ecx ; ret
0x00000000005a87cd : outsd dx, dword ptr [rsi] ; mov edi, 0x89480012 ; ret
0x00000000006d6e6f : outsd dx, dword ptr [rsi] ; mov edx, dword ptr [rbx + 0x5a81de1f] ; jl 0x6d6eda ; retf 0x381a
0x0000000000722252 : outsd dx, dword ptr [rsi] ; nop ; call rbx
0x000000000074a791 : outsd dx, dword ptr [rsi] ; or byte ptr [rax], al ; and byte ptr [rax], dh ; stc ; call rax
0x000000000059e043 : outsd dx, dword ptr [rsi] ; or dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x0000000000652441 : outsd dx, dword ptr [rsi] ; out 2, eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b21cd : outsd dx, dword ptr [rsi] ; outsb dx, byte ptr [rsi] ; and byte ptr [rdi], cl ; ret 0x894c
0x00000000005a37df : outsd dx, dword ptr [rsi] ; ret
0x000000000059581d : outsd dx, dword ptr [rsi] ; ret 0x10
0x0000000000555e75 : outsd dx, dword ptr [rsi] ; retf 0x4a
0x0000000000522dcd : outsd dx, dword ptr [rsi] ; sbb dword ptr [rbx], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058967b : outsd dx, dword ptr [rsi] ; str word ptr [rax - 0x77] ; ret
0x00000000005184aa : outsd dx, dword ptr es:[rsi] ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000525335 : outsd dx, dword ptr es:[rsi] ; add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x000000000049bdd5 : packssdw mm2, qword ptr [rsi] ; call rax
0x0000000000500d79 : paddd mm7, mm7 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004654d5 : paddq mm3, qword ptr [rcx] ; call rax
0x00000000006533e9 : paddw mm7, mm7 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004206bd : pandn mm5, qword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000007ddbce : pavgb mm1, qword ptr [rdi] ; add eax, 0xea0018af ; syscall
0x000000000066b692 : pcmpeqb mm1, qword ptr [rbx] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000066278f : pcmpeqb mm7, qword ptr [rsi + 0x48] ; lea eax, dword ptr [rdx + rax + 5] ; ret
0x000000000067861c : pcmpeqw mm4, mm1 ; ret
0x00000000004ca53d : pop qword ptr [rax + 0x1f] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005f9d90 : pop qword ptr [rax + rax + 0x1480000] ; ret
0x00000000007ef913 : pop qword ptr [rax + rax] ; stosd dword ptr [rdi], eax ; add dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x0000000000754685 : pop qword ptr [rax] ; add byte ptr [rax + 0x26], bh ; iretd ; call rsp
0x000000000068db76 : pop qword ptr [rax] ; add byte ptr [rax], al ; call rax
0x0000000000606878 : pop qword ptr [rbx] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000007cdfce : pop qword ptr [rcx] ; call qword ptr [rdi]
0x00000000007c226a : pop qword ptr [rcx] ; ret
0x0000000000737cb9 : pop qword ptr [rdx] ; add byte ptr [rdi + rbp*8 - 0x2d], ah ; call rax
0x0000000000741491 : pop qword ptr [rip - 0x18eff000] ; jmp rax
0x0000000000744679 : pop qword ptr [rsi] ; add byte ptr [rsi], bh ; out dx, al ; jmp qword ptr [rax]
0x000000000059999d : pop qword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000006c6c9a : pop r12 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000068d8ca : pop r12 ; jmp 0x689ba4
0x000000000055cb32 : pop r12 ; jmp rax
0x00000000006a7c2a : pop r12 ; mov rax, qword ptr [rip + 0x35acad] ; jmp rax
0x00000000006761cb : pop r12 ; mov rax, qword ptr [rip + 0x38c70c] ; jmp rax
0x00000000006698cb : pop r12 ; mov rax, qword ptr [rip + 0x39900c] ; jmp rax
0x000000000064866c : pop r12 ; mov rax, qword ptr [rip + 0x3ba26b] ; jmp rax
0x00000000006484ef : pop r12 ; mov rax, qword ptr [rip + 0x3ba3e8] ; jmp rax
0x0000000000648357 : pop r12 ; mov rax, qword ptr [rip + 0x3ba580] ; jmp rax
0x00000000006481da : pop r12 ; mov rax, qword ptr [rip + 0x3ba6fd] ; jmp rax
0x00000000006480ac : pop r12 ; mov rax, qword ptr [rip + 0x3ba82b] ; jmp rax
0x0000000000647fce : pop r12 ; mov rax, qword ptr [rip + 0x3ba909] ; jmp rax
0x000000000063b392 : pop r12 ; mov rax, qword ptr [rip + 0x3c7545] ; jmp rax
0x000000000063b112 : pop r12 ; mov rax, qword ptr [rip + 0x3c77c5] ; jmp rax
0x000000000063a319 : pop r12 ; mov rax, qword ptr [rip + 0x3c85be] ; jmp rax
0x00000000005f96c4 : pop r12 ; mov rax, qword ptr [rip + 0x409213] ; jmp rax
0x00000000005f952e : pop r12 ; mov rax, qword ptr [rip + 0x4093a9] ; jmp rax
0x000000000058807a : pop r12 ; mov rax, qword ptr [rip + 0x47a85d] ; jmp rax
0x0000000000550f28 : pop r12 ; mov rax, qword ptr [rip + 0x4b19af] ; jmp rax
0x0000000000547836 : pop r12 ; mov rax, qword ptr [rip + 0x4bb0a1] ; jmp rax
0x0000000000547413 : pop r12 ; mov rax, qword ptr [rip + 0x4bb4c4] ; jmp rax
0x00000000006bfdb1 : pop r12 ; pop r13 ; jmp r8
0x00000000005359fa : pop r12 ; pop r13 ; jmp rax
0x000000000054a337 : pop r12 ; pop r13 ; jmp rcx
0x000000000059de56 : pop r12 ; pop r13 ; pop r14 ; jmp 0x6aa8e8
0x00000000006c0a0b : pop r12 ; pop r13 ; pop r14 ; jmp r8
0x000000000055c68a : pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000518a58 : pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x000000000051a875 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000408e17 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004f4e92 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408bea : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004f6e62 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040a265 : pop r12 ; pop r13 ; pop rbp ; ret
0x000000000040440e : pop r12 ; pop r13 ; ret
0x000000000040b2f2 : pop r12 ; pop rbp ; ret
0x000000000069178a : pop r12 ; pop rbx ; ret
0x0000000000404046 : pop r12 ; ret
0x0000000000502935 : pop r12 ; xor ecx, ecx ; jmp r8
0x00000000005012e7 : pop r12 ; xor ecx, ecx ; jmp rax
0x00000000006bfdb3 : pop r13 ; jmp r8
0x00000000005359fc : pop r13 ; jmp rax
0x000000000054a339 : pop r13 ; jmp rcx
0x000000000059de58 : pop r13 ; pop r14 ; jmp 0x6aa8e6
0x00000000006c0a0d : pop r13 ; pop r14 ; jmp r8
0x000000000055c68c : pop r13 ; pop r14 ; jmp rax
0x0000000000518a5a : pop r13 ; pop r14 ; jmp rcx
0x000000000068d12b : pop r13 ; pop r14 ; pop r15 ; jmp 0x689ba8
0x000000000051a877 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000408e19 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004f4e94 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408bec : pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004f6e64 : pop r13 ; pop r14 ; ret
0x0000000000661b99 : pop r13 ; pop r14 ; sbb eax, eax ; add eax, 3 ; ret
0x000000000040a267 : pop r13 ; pop rbp ; ret
0x0000000000404410 : pop r13 ; ret
0x0000000000690605 : pop r14 ; add dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000059de5a : pop r14 ; jmp 0x6aa8e4
0x00000000006c0a0f : pop r14 ; jmp r8
0x000000000055c68e : pop r14 ; jmp rax
0x0000000000518a5c : pop r14 ; jmp rcx
0x0000000000535ab7 : pop r14 ; mov rax, qword ptr [rip + 0x4cce20] ; jmp rax
0x0000000000535937 : pop r14 ; mov rax, qword ptr [rip + 0x4ccfa0] ; jmp rax
0x0000000000501a8f : pop r14 ; mov rax, qword ptr [rip + 0x500e48] ; jmp rax
0x000000000068d12d : pop r14 ; pop r15 ; jmp 0x689ba6
0x000000000051a879 : pop r14 ; pop r15 ; jmp rax
0x0000000000408e1b : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004f4e96 : pop r14 ; pop r15 ; ret
0x0000000000408bee : pop r14 ; pop rbp ; ret
0x00000000004f6e66 : pop r14 ; ret
0x0000000000661b9b : pop r14 ; sbb eax, eax ; add eax, 3 ; ret
0x000000000040e4f4 : pop r15 ; add bh, bh ; ror cl, 1 ; ret
0x000000000068d12f : pop r15 ; jmp 0x689ba4
0x000000000051a87b : pop r15 ; jmp rax
0x0000000000408e1d : pop r15 ; pop rbp ; ret
0x00000000004f4e98 : pop r15 ; ret
0x000000000068e80f : pop r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000068e34b : pop r8 ; pop rbx ; ret
0x0000000000584491 : pop r8 ; ret
0x00000000006aad1b : pop r9 ; std ; call qword ptr [rax - 0x3cf849f1]
0x00000000005e6afe : pop rax ; adc al, 0x48 ; mov eax, dword ptr [rip + 0x41bde1] ; call rax
0x00000000005d9506 : pop rax ; adc al, 0x48 ; mov eax, dword ptr [rip + 0x4293d9] ; call rax
0x000000000078b7c8 : pop rax ; adc al, 0xe1 ; call qword ptr [rdx]
0x0000000000733cec : pop rax ; adc ch, cl ; call rax
0x00000000004db65f : pop rax ; adc eax, 0x8fbf0000 ; ret 0x6e
0x000000000078f758 : pop rax ; add ah, dl ; jmp qword ptr [rdi]
0x00000000005c8f1c : pop rax ; add al, 0 ; add al, ch ; retf
0x000000000064b0cd : pop rax ; add al, 0x8b ; add byte ptr [rcx], bh ; ret
0x0000000000472efd : pop rax ; add bh, bh ; ror cl, 1 ; ret
0x0000000000512eab : pop rax ; add byte ptr [r8 - 0x7f], r9b ; ret
0x00000000006871cb : pop rax ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x000000000070c2b2 : pop rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret 0x70
0x000000000070c0d2 : pop rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x58
0x000000000070c9d2 : pop rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; retf 0x70
0x0000000000750f45 : pop rax ; add byte ptr [rax], al ; cwde ; retf -0x33
0x0000000000750fb5 : pop rax ; add byte ptr [rax], al ; push rsi ; retf
0x00000000007d6fdb : pop rax ; add byte ptr [rax], al ; ret
0x0000000000750ff5 : pop rax ; add byte ptr [rax], al ; xchg eax, edx ; retf
0x000000000077adb8 : pop rax ; add ch, bl ; jmp qword ptr [rax]
0x00000000006d272a : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x00000000005b7906 : pop rax ; add dword ptr [rcx], eax ; retf
0x00000000007409a9 : pop rax ; add eax, 0xe5fd9000 ; jmp rax
0x00000000007409b9 : pop rax ; add eax, 0xe5fdb000 ; call qword ptr [rax]
0x00000000007a0f35 : pop rax ; add eax, 0xe8a48800 ; jmp qword ptr [rax]
0x000000000060012b : pop rax ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000780f3d : pop rax ; add eax, dword ptr [rax] ; mov esi, ds ; jmp qword ptr [rdx]
0x0000000000780f5d : pop rax ; add eax, dword ptr [rax] ; push rax ; mov esi, ds ; jmp qword ptr [rdx]
0x000000000073a258 : pop rax ; add r8d, dword ptr [rax] ; pop rsi ; retf -0x26
0x0000000000631ddc : pop rax ; add rsp, 8 ; ret
0x00000000004a132b : pop rax ; and al, 0x48 ; mov eax, dword ptr [rip + 0x5615b4] ; call rax
0x000000000049ffb1 : pop rax ; and al, 0x48 ; mov eax, dword ptr [rip + 0x56292e] ; call rax
0x000000000047e59e : pop rax ; and al, 0x48 ; mov eax, dword ptr [rip + 0x584341] ; call rax
0x0000000000470d5b : pop rax ; and al, 0x48 ; mov eax, dword ptr [rip + 0x591b84] ; call rax
0x000000000046fb9f : pop rax ; and al, 0x48 ; mov eax, dword ptr [rip + 0x592d40] ; call rax
0x000000000046705b : pop rax ; and al, 0x48 ; mov eax, dword ptr [rip + 0x59b884] ; call rax
0x0000000000465e9f : pop rax ; and al, 0x48 ; mov eax, dword ptr [rip + 0x59ca40] ; call rax
0x000000000045fbe9 : pop rax ; and al, 0x48 ; mov eax, dword ptr [rip + 0x5a2cf6] ; call rax
0x000000000045d985 : pop rax ; and al, 0x48 ; mov eax, dword ptr [rip + 0x5a4f5a] ; call rax
0x000000000044f333 : pop rax ; and al, 0x48 ; mov eax, dword ptr [rip + 0x5b35ac] ; call rax
0x000000000044cd6f : pop rax ; and al, 0x48 ; mov eax, dword ptr [rip + 0x5b5b70] ; call rax
0x000000000044328c : pop rax ; and al, 0x48 ; mov eax, dword ptr [rip + 0x5bf653] ; call rax
0x000000000044322e : pop rax ; and al, 0x48 ; mov eax, dword ptr [rip + 0x5bf6b1] ; call rax
0x0000000000442739 : pop rax ; and al, 0x48 ; mov eax, dword ptr [rip + 0x5c01a6] ; call rax
0x000000000066e915 : pop rax ; and byte ptr [rcx - 0x75], al ; and byte ptr [rcx], r15b ; ret
0x000000000047336e : pop rax ; and eax, dword ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000568c6e : pop rax ; clc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000007aff98 : pop rax ; cli ; in eax, dx ; jmp qword ptr [rax]
0x0000000000747cb5 : pop rax ; cmc ; jmp qword ptr [rax]
0x000000000060aabd : pop rax ; cmc ; lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000007a4d58 : pop rax ; cmp ebp, ebx ; call qword ptr [rbx]
0x0000000000605a64 : pop rax ; dec dword ptr [rax - 0x7d] ; ret
0x00000000007bbf18 : pop rax ; div eax ; call qword ptr [rax]
0x00000000007bbf48 : pop rax ; div eax ; call qword ptr [rbx]
0x0000000000681d57 : pop rax ; enter 0xff2, 0x5c ; retf 0xff2
0x0000000000744eb4 : pop rax ; imul esi ; call qword ptr [rax]
0x000000000058990a : pop rax ; insd dword ptr [rdi], dx ; str word ptr [rax - 0x77] ; ret
0x0000000000428db4 : pop rax ; jg 0x428de4 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000058969e : pop rax ; jl 0x5896b6 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000076d9b0 : pop rax ; leave ; call qword ptr [rdx]
0x00000000007bb4c8 : pop rax ; loopne 0x7bb4be ; call qword ptr [rdi]
0x0000000000748250 : pop rax ; mov byte ptr [rdi], 0 ; push rax ; ret
0x00000000007346c0 : pop rax ; mov es, word ptr [rcx] ; add ah, ah ; retf -0x33
0x0000000000554536 : pop rax ; mov rdi, rbp ; call rax
0x0000000000798548 : pop rax ; mul ebp ; call qword ptr [rdx]
0x000000000075de28 : pop rax ; not ecx ; call rdx
0x000000000069e66c : pop rax ; or byte ptr [rax - 0x77], cl ; ret 0xc7
0x000000000074a2a9 : pop rax ; or byte ptr [rax], al ; adc ah, 0xf8 ; jmp rax
0x000000000078fab8 : pop rax ; or dl, ah ; jmp qword ptr [rbx]
0x0000000000738ef0 : pop rax ; out 2, eax ; add dl, ah ; call rsi
0x00000000007b4cf1 : pop rax ; out dx, eax ; call qword ptr [rdi]
0x00000000007b4d41 : pop rax ; out dx, eax ; call rax
0x000000000047d0d2 : pop rax ; pop rax ; add bh, bh ; ror cl, 1 ; ret
0x00000000007b53a8 : pop rax ; pop rbx ; out dx, eax ; jmp qword ptr [rax]
0x000000000043ccbf : pop rax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000040440b : pop rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000068e810 : pop rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000403da2 : pop rax ; pop rbx ; pop rbp ; ret
0x000000000068e34c : pop rax ; pop rbx ; ret
0x000000000074a170 : pop rax ; push rbx ; or byte ptr [rax], al ; push rax ; ret
0x0000000000799c78 : pop rax ; push rcx ; out 0xff, al ; ret 0
0x000000000074a128 : pop rax ; push rdx ; or byte ptr [rax], al ; ret 0xfff8
0x0000000000402438 : pop rax ; ret
0x00000000004f38f4 : pop rax ; ret 0x18
0x0000000000681d63 : pop rax ; ret 0x1972
0x0000000000683a41 : pop rax ; ret 0xa8e8
0x0000000000683fce : pop rax ; ret 0xfc3
0x0000000000682c00 : pop rax ; ret 0xff2
0x000000000076c1f8 : pop rax ; ret 0xffd9
0x000000000073a244 : pop rax ; ret 0xffda
0x00000000007bace8 : pop rax ; ret 0xfff0
0x0000000000404058 : pop rax ; retf
0x0000000000789f48 : pop rax ; retf -0x20
0x0000000000735e14 : pop rax ; retf -0x30
0x00000000005730f6 : pop rax ; retf 0x10
0x0000000000695e84 : pop rax ; retf 0x36
0x0000000000695284 : pop rax ; salc ; add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xfffe
0x00000000006ce3c7 : pop rax ; sar edi, cl ; add rsp, 0x18 ; ret
0x000000000049c28c : pop rax ; sbb al, 0x48 ; mov eax, dword ptr [rip + 0x566653] ; call rax
0x000000000049c0b8 : pop rax ; sbb al, 0x48 ; mov eax, dword ptr [rip + 0x566827] ; call rax
0x000000000049a93e : pop rax ; sbb al, 0x48 ; mov eax, dword ptr [rip + 0x567fa1] ; call rax
0x000000000046bf10 : pop rax ; sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5969cf] ; call rax
0x000000000046bd3c : pop rax ; sbb al, 0x48 ; mov eax, dword ptr [rip + 0x596ba3] ; call rax
0x000000000046a5c2 : pop rax ; sbb al, 0x48 ; mov eax, dword ptr [rip + 0x59831d] ; call rax
0x0000000000462210 : pop rax ; sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5a06cf] ; call rax
0x000000000046203c : pop rax ; sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5a08a3] ; call rax
0x00000000004608c2 : pop rax ; sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5a201d] ; call rax
0x0000000000459416 : pop rax ; sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5a94c9] ; call rax
0x0000000000459242 : pop rax ; sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5a969d] ; call rax
0x0000000000457ac8 : pop rax ; sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5aae17] ; call rax
0x0000000000448762 : pop rax ; sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5ba17d] ; call rax
0x000000000044858e : pop rax ; sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5ba351] ; call rax
0x0000000000446e14 : pop rax ; sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5bbacb] ; call rax
0x000000000043dd5a : pop rax ; sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5c4b85] ; call rax
0x000000000043d790 : pop rax ; sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5c514f] ; call rax
0x000000000043d5bc : pop rax ; sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5c5323] ; call rax
0x000000000043b732 : pop rax ; sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5c71ad] ; call rax
0x0000000000430cc9 : pop rax ; sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5d1c16] ; call rax
0x000000000042df83 : pop rax ; sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5d495c] ; call rax
0x000000000042225b : pop rax ; sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5e0684] ; call rax
0x000000000041efbd : pop rax ; sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5e3922] ; call rax
0x00000000004121e3 : pop rax ; sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5f06fc] ; call rax
0x000000000040f49d : pop rax ; sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5f3442] ; call rax
0x00000000006831db : pop rax ; shr ebx, -0x67 ; nop ; ret
0x00000000007b0178 : pop rax ; std ; in eax, dx ; call qword ptr [rcx]
0x000000000061a7cc : pop rax ; sub al, 0x48 ; mov eax, dword ptr [rip + 0x3e8113] ; call rax
0x000000000061944c : pop rax ; sub al, 0x48 ; mov eax, dword ptr [rip + 0x3e9493] ; call rax
0x000000000043901f : pop rax ; sub byte ptr [rax], al ; leave ; ret
0x0000000000738414 : pop rax ; sub ch, dl ; call rax
0x00000000007bdd68 : pop rax ; sub ecx, esi ; jmp qword ptr [rbx]
0x00000000005d37f3 : pop rax ; sub esi, dword ptr [rcx] ; mov rdi, rax ; call 0x68fa49
0x000000000051358f : pop rax ; test al, 1 ; jne 0x51359b ; jmp rax
0x000000000051358e : pop rax ; test al, 1 ; jne 0x51359c ; jmp rax
0x00000000006bfdfa : pop rax ; test al, 1 ; jne 0x6bfe06 ; jmp rax
0x00000000006bfdf9 : pop rax ; test al, 1 ; jne 0x6bfe07 ; jmp rax
0x00000000006c04ad : pop rax ; test al, 1 ; jne 0x6c04b9 ; jmp rax
0x00000000006c04ac : pop rax ; test al, 1 ; jne 0x6c04ba ; jmp rax
0x00000000004f36d2 : pop rax ; xchg eax, ebp ; outsb dx, byte ptr [rsi] ; add al, ch ; cmc ; ret
0x0000000000797970 : pop rax ; xchg eax, ebx ; in eax, -1 ; retf 1
0x0000000000744adc : pop rax ; xchg eax, edx ; out dx, al ; jmp qword ptr [rax]
0x000000000049c488 : pop rax ; xor eax, 0x89480000 ; ret 0x894c
0x00000000007a47c0 : pop rax ; xor eax, esi ; call qword ptr [rdx]
0x000000000056ce88 : pop rax ; xor esi, dword ptr [rax] ; call rax
0x000000000058a27e : pop rbp ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000052b516 : pop rbp ; adc eax, 0xea834800 ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000067514b : pop rbp ; add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x1a], al ; call rax
0x000000000042293f : pop rbp ; add bh, bh ; ror cl, 1 ; ret
0x0000000000714332 : pop rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], ch ; ret 0x5d
0x000000000071433a : pop rbp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, ch ; ret 0x5d
0x000000000064032b : pop rbp ; add byte ptr [rax], al ; call rax
0x0000000000500b67 : pop rbp ; add byte ptr [rax], bl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000666cfd : pop rbp ; add byte ptr [rcx + 0xf], al ; retf 0x1b8
0x000000000069c7d0 : pop rbp ; add byte ptr [rcx], ch ; retf
0x0000000000419d91 : pop rbp ; add byte ptr es:[rax - 0x77], cl ; ret
0x00000000005121ff : pop rbp ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000007f963a : pop rbp ; add dword ptr [rdx + 0xd], edx ; add al, 0 ; add byte ptr [rbx + 5], al ; ret 2
0x00000000004c399d : pop rbp ; add eax, 0x8fbf0000 ; ret 0x6e
0x0000000000740a89 : pop rbp ; add eax, 0xe61d1000 ; jmp qword ptr [rax]
0x000000000063fd85 : pop rbp ; call 0xffffffffc3ed468f
0x00000000006400ca : pop rbp ; call 0xffffffffc3ed49d4
0x000000000053574f : pop rbp ; call rax
0x000000000053de91 : pop rbp ; clc ; leave ; ret
0x000000000058ac6f : pop rbp ; cmp dword ptr [rbx], edx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f06e7 : pop rbp ; cwde ; mov rax, qword ptr [rip + 0x5121f8] ; call rax
0x000000000042e9a2 : pop rbp ; cwde ; mov rax, qword ptr [rip + 0x5d3f3d] ; call rax
0x000000000042e388 : pop rbp ; cwde ; mov rax, qword ptr [rip + 0x5d4557] ; call rax
0x000000000040febc : pop rbp ; cwde ; mov rax, qword ptr [rip + 0x5f2a23] ; call rax
0x000000000040f8a2 : pop rbp ; cwde ; mov rax, qword ptr [rip + 0x5f303d] ; call rax
0x00000000005775ad : pop rbp ; fld1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005773ad : pop rbp ; fucomi st(0) ; dec dword ptr [rax - 0x77] ; ret
0x00000000007f2da1 : pop rbp ; jmp qword ptr [rdi]
0x00000000006bfdb4 : pop rbp ; jmp r8
0x00000000005046a1 : pop rbp ; jmp rax
0x000000000054a33a : pop rbp ; jmp rcx
0x0000000000629999 : pop rbp ; jns 0x6299a7 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000572f88 : pop rbp ; jo 0x572f92 ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000572f87 : pop rbp ; jo 0x572f93 ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000449b87 : pop rbp ; lea ebx, dword ptr [rbx] ; call rax
0x00000000005564df : pop rbp ; loop 0x5564ff ; add byte ptr [rax - 0x77], cl ; ret
0x000000000067b122 : pop rbp ; mov ah, 0xe8 ; xlatb ; mov bl, 2 ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000044f039 : pop rbp ; mov bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000408ae2 : pop rbp ; mov byte ptr [rip + 0x5fa1fe], 1 ; ret
0x0000000000722bfd : pop rbp ; mov dl, 0x77 ; retf
0x0000000000408a6f : pop rbp ; mov edi, 0xa02ca8 ; jmp rax
0x00000000006c59c8 : pop rbp ; mov edx, 6 ; mov eax, edx ; pop rbx ; ret
0x000000000068d0b2 : pop rbp ; mov esi, ebp ; mov rdi, r13 ; call 0x689b28
0x000000000066de0b : pop rbp ; mov qword ptr [rdi + 0x78], 0 ; ret
0x00000000004f07be : pop rbp ; nop ; mov rax, qword ptr [rip + 0x512121] ; call rax
0x00000000004c4462 : pop rbp ; nop ; mov rax, qword ptr [rip + 0x53e47d] ; call rax
0x00000000004c30a9 : pop rbp ; nop ; mov rax, qword ptr [rip + 0x53f836] ; call rax
0x000000000042ea98 : pop rbp ; nop ; mov rax, qword ptr [rip + 0x5d3e47] ; call rax
0x000000000042e47e : pop rbp ; nop ; mov rax, qword ptr [rip + 0x5d4461] ; call rax
0x000000000040ffb2 : pop rbp ; nop ; mov rax, qword ptr [rip + 0x5f292d] ; call rax
0x000000000040f998 : pop rbp ; nop ; mov rax, qword ptr [rip + 0x5f2f47] ; call rax
0x0000000000527bcd : pop rbp ; or bl, ch ; retf 0x1f0f
0x000000000055e1a4 : pop rbp ; or byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xea5a
0x000000000059c181 : pop rbp ; or byte ptr [rax - 0x77], cl ; retf -0x76b4
0x000000000050e027 : pop rbp ; or byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a207f : pop rbp ; or byte ptr [rsi], dl ; call rax
0x000000000068d8c9 : pop rbp ; pop r12 ; jmp 0x689ba5
0x000000000055cb31 : pop rbp ; pop r12 ; jmp rax
0x00000000006bfdb0 : pop rbp ; pop r12 ; pop r13 ; jmp r8
0x00000000005359f9 : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000054a336 : pop rbp ; pop r12 ; pop r13 ; jmp rcx
0x000000000059de55 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp 0x6aa8e9
0x00000000006c0a0a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp r8
0x000000000055c689 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000518a57 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x000000000051a874 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004f4e91 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004f6e61 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040440d : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000404045 : pop rbp ; pop r12 ; ret
0x0000000000502934 : pop rbp ; pop r12 ; xor ecx, ecx ; jmp r8
0x00000000005012e6 : pop rbp ; pop r12 ; xor ecx, ecx ; jmp rax
0x00000000005b6029 : pop rbp ; pop r13 ; pop r14 ; ret
0x000000000059de59 : pop rbp ; pop r14 ; jmp 0x6aa8e5
0x00000000006c0a0e : pop rbp ; pop r14 ; jmp r8
0x000000000055c68d : pop rbp ; pop r14 ; jmp rax
0x0000000000518a5b : pop rbp ; pop r14 ; jmp rcx
0x000000000068d12c : pop rbp ; pop r14 ; pop r15 ; jmp 0x689ba7
0x000000000051a878 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000408e1a : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004f4e95 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000408bed : pop rbp ; pop r14 ; pop rbp ; ret
0x00000000004f6e65 : pop rbp ; pop r14 ; ret
0x0000000000661b9a : pop rbp ; pop r14 ; sbb eax, eax ; add eax, 3 ; ret
0x000000000040a268 : pop rbp ; pop rbp ; ret
0x00000000005fecc9 : pop rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000403da4 : pop rbp ; ret
0x0000000000406687 : pop rbp ; ret 0x5f
0x0000000000416337 : pop rbp ; retf
0x00000000006d67e1 : pop rbp ; retf -0x403e
0x0000000000644899 : pop rbp ; retf 3
0x000000000047aa90 : pop rbp ; ror byte ptr [rax - 0x75], 1 ; fmul dword ptr [r8 - 0x77] ; ret 0x8b48
0x00000000005224c5 : pop rbp ; sbb byte ptr [rax - 0x77], cl ; fmul dword ptr [rax + 0x39] ; ret
0x00000000006398df : pop rbp ; scasb al, byte ptr [rdi] ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000004469af : pop rbp ; shl dword ptr [rdi], 1 ; add cl, cl ; ret
0x000000000058b5bb : pop rbp ; str word ptr [rax - 0x77] ; ret
0x0000000000428b38 : pop rbp ; sub dword ptr [rax], eax ; leave ; ret
0x0000000000432687 : pop rbp ; test bh, bh ; dec ecx ; ret
0x000000000052a95c : pop rbx ; adc byte ptr [rax - 0x77], cl ; fbstp dword ptr [rcx] ; shr al, 0x78 ; call qword ptr [rdi]
0x00000000004db740 : pop rbx ; adc eax, 0x8fbf0000 ; ret 0x6e
0x000000000079124d : pop rbx ; add al, 0 ; ret 0xffe2
0x0000000000771325 : pop rbx ; add al, byte ptr [rax] ; cwde ; ret
0x000000000044c3b9 : pop rbx ; add bh, bh ; ror cl, 1 ; ret
0x0000000000690536 : pop rbx ; add dword ptr [rax], eax ; mov eax, dword ptr [rbx + 0x60] ; pop rbx ; ret
0x00000000004f4089 : pop rbx ; call 0xffffffffd14e40e3
0x0000000000747d05 : pop rbx ; cmc ; call qword ptr [rax]
0x00000000005f1981 : pop rbx ; cmovno eax, dword ptr [rax] ; call rax
0x0000000000581f51 : pop rbx ; ficom dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000064379b : pop rbx ; fild dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000065399d : pop rbx ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000006387f3 : pop rbx ; jae 0x6387ff ; add cl, ch ; ret
0x000000000066129f : pop rbx ; jl 0x6612ce ; ret 0xd189
0x0000000000676294 : pop rbx ; jmp rax
0x00000000005d9e81 : pop rbx ; mov al, byte ptr [rdx] ; call rax
0x0000000000584851 : pop rbx ; mov cl, 0x10 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000006c6f95 : pop rbx ; mov rax, qword ptr [rip + 0x33b943] ; jmp rax
0x00000000006c6f05 : pop rbx ; mov rax, qword ptr [rip + 0x33b9d3] ; jmp rax
0x00000000006c6e85 : pop rbx ; mov rax, qword ptr [rip + 0x33ba53] ; jmp rax
0x00000000006c05e5 : pop rbx ; mov rax, qword ptr [rip + 0x3422f3] ; jmp rax
0x00000000006c04f5 : pop rbx ; mov rax, qword ptr [rip + 0x3423e3] ; jmp rax
0x00000000006c0415 : pop rbx ; mov rax, qword ptr [rip + 0x3424c3] ; jmp rax
0x00000000006bfc65 : pop rbx ; mov rax, qword ptr [rip + 0x342c73] ; jmp rax
0x00000000006b25a5 : pop rbx ; mov rax, qword ptr [rip + 0x350333] ; jmp rax
0x00000000006b2395 : pop rbx ; mov rax, qword ptr [rip + 0x350543] ; jmp rax
0x00000000006aa8f2 : pop rbx ; mov rax, qword ptr [rip + 0x357fe6] ; jmp rax
0x00000000006a8aa5 : pop rbx ; mov rax, qword ptr [rip + 0x359e13] ; jmp rax
0x00000000006a8225 : pop rbx ; mov rax, qword ptr [rip + 0x35a6b3] ; jmp rax
0x00000000006a5fb5 : pop rbx ; mov rax, qword ptr [rip + 0x35c923] ; jmp rax
0x00000000006a5f15 : pop rbx ; mov rax, qword ptr [rip + 0x35c9c3] ; jmp rax
0x00000000006a45b8 : pop rbx ; mov rax, qword ptr [rip + 0x35e300] ; jmp rax
0x00000000006a45a1 : pop rbx ; mov rax, qword ptr [rip + 0x35e317] ; jmp rax
0x00000000006904d5 : pop rbx ; mov rax, qword ptr [rip + 0x372403] ; jmp rax
0x000000000068e1f5 : pop rbx ; mov rax, qword ptr [rip + 0x3746e3] ; jmp rax
0x0000000000685f45 : pop rbx ; mov rax, qword ptr [rip + 0x37c993] ; jmp rax
0x0000000000681a85 : pop rbx ; mov rax, qword ptr [rip + 0x380e53] ; jmp rax
0x0000000000681927 : pop rbx ; mov rax, qword ptr [rip + 0x380fb1] ; jmp rax
0x0000000000674105 : pop rbx ; mov rax, qword ptr [rip + 0x38e7d3] ; jmp rax
0x000000000065d255 : pop rbx ; mov rax, qword ptr [rip + 0x3a5683] ; jmp rax
0x0000000000658f17 : pop rbx ; mov rax, qword ptr [rip + 0x3a99c1] ; jmp rax
0x0000000000630065 : pop rbx ; mov rax, qword ptr [rip + 0x3d2873] ; jmp rax
0x000000000062e1f5 : pop rbx ; mov rax, qword ptr [rip + 0x3d46e3] ; jmp rax
0x000000000062be55 : pop rbx ; mov rax, qword ptr [rip + 0x3d6a83] ; jmp rax
0x000000000062b2a5 : pop rbx ; mov rax, qword ptr [rip + 0x3d7633] ; jmp rax
0x000000000062b215 : pop rbx ; mov rax, qword ptr [rip + 0x3d76c3] ; jmp rax
0x000000000062b105 : pop rbx ; mov rax, qword ptr [rip + 0x3d77d3] ; jmp rax
0x000000000062b095 : pop rbx ; mov rax, qword ptr [rip + 0x3d7843] ; jmp rax
0x00000000005fd6b8 : pop rbx ; mov rax, qword ptr [rip + 0x405220] ; jmp rax
0x00000000005fd245 : pop rbx ; mov rax, qword ptr [rip + 0x405693] ; jmp rax
0x00000000005fd165 : pop rbx ; mov rax, qword ptr [rip + 0x405773] ; jmp rax
0x00000000005f8cf5 : pop rbx ; mov rax, qword ptr [rip + 0x409be3] ; jmp rax
0x00000000005be9c5 : pop rbx ; mov rax, qword ptr [rip + 0x443f13] ; jmp rax
0x00000000005a9655 : pop rbx ; mov rax, qword ptr [rip + 0x459283] ; jmp rax
0x00000000005a8d85 : pop rbx ; mov rax, qword ptr [rip + 0x459b53] ; jmp rax
0x00000000005a8cf5 : pop rbx ; mov rax, qword ptr [rip + 0x459be3] ; jmp rax
0x00000000005a8bc5 : pop rbx ; mov rax, qword ptr [rip + 0x459d13] ; jmp rax
0x00000000005a8b55 : pop rbx ; mov rax, qword ptr [rip + 0x459d83] ; jmp rax
0x00000000005a3c75 : pop rbx ; mov rax, qword ptr [rip + 0x45ec63] ; jmp rax
0x00000000005a2dc5 : pop rbx ; mov rax, qword ptr [rip + 0x45fb13] ; jmp rax
0x00000000005a2d35 : pop rbx ; mov rax, qword ptr [rip + 0x45fba3] ; jmp rax
0x00000000005a2c45 : pop rbx ; mov rax, qword ptr [rip + 0x45fc93] ; jmp rax
0x00000000005a2bd5 : pop rbx ; mov rax, qword ptr [rip + 0x45fd03] ; jmp rax
0x0000000000598b05 : pop rbx ; mov rax, qword ptr [rip + 0x469dd3] ; jmp rax
0x0000000000597f45 : pop rbx ; mov rax, qword ptr [rip + 0x46a993] ; jmp rax
0x0000000000597eb5 : pop rbx ; mov rax, qword ptr [rip + 0x46aa23] ; jmp rax
0x0000000000597d85 : pop rbx ; mov rax, qword ptr [rip + 0x46ab53] ; jmp rax
0x0000000000597d15 : pop rbx ; mov rax, qword ptr [rip + 0x46abc3] ; jmp rax
0x0000000000597be5 : pop rbx ; mov rax, qword ptr [rip + 0x46acf3] ; jmp rax
0x0000000000596fe5 : pop rbx ; mov rax, qword ptr [rip + 0x46b8f3] ; jmp rax
0x0000000000596f55 : pop rbx ; mov rax, qword ptr [rip + 0x46b983] ; jmp rax
0x0000000000596e65 : pop rbx ; mov rax, qword ptr [rip + 0x46ba73] ; jmp rax
0x0000000000596df5 : pop rbx ; mov rax, qword ptr [rip + 0x46bae3] ; jmp rax
0x0000000000596cc5 : pop rbx ; mov rax, qword ptr [rip + 0x46bc13] ; jmp rax
0x0000000000596185 : pop rbx ; mov rax, qword ptr [rip + 0x46c753] ; jmp rax
0x00000000005960f5 : pop rbx ; mov rax, qword ptr [rip + 0x46c7e3] ; jmp rax
0x0000000000596005 : pop rbx ; mov rax, qword ptr [rip + 0x46c8d3] ; jmp rax
0x0000000000595f95 : pop rbx ; mov rax, qword ptr [rip + 0x46c943] ; jmp rax
0x0000000000578395 : pop rbx ; mov rax, qword ptr [rip + 0x48a543] ; jmp rax
0x0000000000572fd5 : pop rbx ; mov rax, qword ptr [rip + 0x48f903] ; jmp rax
0x0000000000572f45 : pop rbx ; mov rax, qword ptr [rip + 0x48f993] ; jmp rax
0x0000000000572e55 : pop rbx ; mov rax, qword ptr [rip + 0x48fa83] ; jmp rax
0x0000000000572de5 : pop rbx ; mov rax, qword ptr [rip + 0x48faf3] ; jmp rax
0x000000000056ca15 : pop rbx ; mov rax, qword ptr [rip + 0x495ec3] ; jmp rax
0x000000000056c455 : pop rbx ; mov rax, qword ptr [rip + 0x496483] ; jmp rax
0x000000000056b895 : pop rbx ; mov rax, qword ptr [rip + 0x497043] ; jmp rax
0x000000000056b805 : pop rbx ; mov rax, qword ptr [rip + 0x4970d3] ; jmp rax
0x000000000056b6d5 : pop rbx ; mov rax, qword ptr [rip + 0x497203] ; jmp rax
0x000000000056b665 : pop rbx ; mov rax, qword ptr [rip + 0x497273] ; jmp rax
0x00000000005593f5 : pop rbx ; mov rax, qword ptr [rip + 0x4a94e3] ; jmp rax
0x0000000000558b25 : pop rbx ; mov rax, qword ptr [rip + 0x4a9db3] ; jmp rax
0x0000000000558a95 : pop rbx ; mov rax, qword ptr [rip + 0x4a9e43] ; jmp rax
0x0000000000558975 : pop rbx ; mov rax, qword ptr [rip + 0x4a9f63] ; jmp rax
0x0000000000558905 : pop rbx ; mov rax, qword ptr [rip + 0x4a9fd3] ; jmp rax
0x0000000000550db5 : pop rbx ; mov rax, qword ptr [rip + 0x4b1b23] ; jmp rax
0x0000000000550335 : pop rbx ; mov rax, qword ptr [rip + 0x4b25a3] ; jmp rax
0x00000000005501b5 : pop rbx ; mov rax, qword ptr [rip + 0x4b2723] ; jmp rax
0x000000000054f9b5 : pop rbx ; mov rax, qword ptr [rip + 0x4b2f23] ; jmp rax
0x000000000054f925 : pop rbx ; mov rax, qword ptr [rip + 0x4b2fb3] ; jmp rax
0x000000000054f835 : pop rbx ; mov rax, qword ptr [rip + 0x4b30a3] ; jmp rax
0x000000000054f7c5 : pop rbx ; mov rax, qword ptr [rip + 0x4b3113] ; jmp rax
0x0000000000547115 : pop rbx ; mov rax, qword ptr [rip + 0x4bb7c3] ; jmp rax
0x0000000000546575 : pop rbx ; mov rax, qword ptr [rip + 0x4bc363] ; jmp rax
0x00000000005464e5 : pop rbx ; mov rax, qword ptr [rip + 0x4bc3f3] ; jmp rax
0x0000000000545455 : pop rbx ; mov rax, qword ptr [rip + 0x4bd483] ; jmp rax
0x00000000005453e5 : pop rbx ; mov rax, qword ptr [rip + 0x4bd4f3] ; jmp rax
0x00000000005320e5 : pop rbx ; mov rax, qword ptr [rip + 0x4d07f3] ; jmp rax
0x0000000000531f75 : pop rbx ; mov rax, qword ptr [rip + 0x4d0963] ; jmp rax
0x0000000000530115 : pop rbx ; mov rax, qword ptr [rip + 0x4d27c3] ; jmp rax
0x0000000000530085 : pop rbx ; mov rax, qword ptr [rip + 0x4d2853] ; jmp rax
0x000000000052ff65 : pop rbx ; mov rax, qword ptr [rip + 0x4d2973] ; jmp rax
0x000000000052fef5 : pop rbx ; mov rax, qword ptr [rip + 0x4d29e3] ; jmp rax
0x000000000052fad5 : pop rbx ; mov rax, qword ptr [rip + 0x4d2e03] ; jmp rax
0x000000000052eed5 : pop rbx ; mov rax, qword ptr [rip + 0x4d3a03] ; jmp rax
0x000000000052ee45 : pop rbx ; mov rax, qword ptr [rip + 0x4d3a93] ; jmp rax
0x000000000052ed55 : pop rbx ; mov rax, qword ptr [rip + 0x4d3b83] ; jmp rax
0x000000000052ece5 : pop rbx ; mov rax, qword ptr [rip + 0x4d3bf3] ; jmp rax
0x000000000052e825 : pop rbx ; mov rax, qword ptr [rip + 0x4d40b3] ; jmp rax
0x000000000052dc65 : pop rbx ; mov rax, qword ptr [rip + 0x4d4c73] ; jmp rax
0x000000000052dbd5 : pop rbx ; mov rax, qword ptr [rip + 0x4d4d03] ; jmp rax
0x000000000052daa5 : pop rbx ; mov rax, qword ptr [rip + 0x4d4e33] ; jmp rax
0x000000000052da35 : pop rbx ; mov rax, qword ptr [rip + 0x4d4ea3] ; jmp rax
0x0000000000529698 : pop rbx ; mov rax, qword ptr [rip + 0x4d9240] ; jmp rax
0x00000000005295d8 : pop rbx ; mov rax, qword ptr [rip + 0x4d9300] ; jmp rax
0x000000000050c9e5 : pop rbx ; mov rax, qword ptr [rip + 0x4f5ef3] ; jmp rax
0x000000000050be35 : pop rbx ; mov rax, qword ptr [rip + 0x4f6aa3] ; jmp rax
0x000000000050bda5 : pop rbx ; mov rax, qword ptr [rip + 0x4f6b33] ; jmp rax
0x000000000050bc95 : pop rbx ; mov rax, qword ptr [rip + 0x4f6c43] ; jmp rax
0x000000000050bc25 : pop rbx ; mov rax, qword ptr [rip + 0x4f6cb3] ; jmp rax
0x0000000000505e25 : pop rbx ; mov rax, qword ptr [rip + 0x4fcab3] ; jmp rax
0x0000000000505cb5 : pop rbx ; mov rax, qword ptr [rip + 0x4fcc23] ; jmp rax
0x0000000000505235 : pop rbx ; mov rax, qword ptr [rip + 0x4fd6a3] ; jmp rax
0x0000000000504f45 : pop rbx ; mov rax, qword ptr [rip + 0x4fd993] ; jmp rax
0x0000000000504b65 : pop rbx ; mov rax, qword ptr [rip + 0x4fdd73] ; jmp rax
0x00000000005045f5 : pop rbx ; mov rax, qword ptr [rip + 0x4fe2e3] ; jmp rax
0x0000000000503a45 : pop rbx ; mov rax, qword ptr [rip + 0x4fee93] ; jmp rax
0x00000000006a59bd : pop rbx ; or byte ptr [rax], al ; add rsp, 0x48 ; ret
0x000000000074a339 : pop rbx ; or byte ptr [rax], al ; nop ; fprem ; jmp qword ptr [rax]
0x000000000074a369 : pop rbx ; or byte ptr [rax], al ; rcr dl, 1 ; clc ; jmp rax
0x000000000059fe2d : pop rbx ; or eax, 0x8948000e ; ret
0x000000000068133b : pop rbx ; out -1, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000007b53a9 : pop rbx ; out dx, eax ; jmp qword ptr [rax]
0x00000000007b5379 : pop rbx ; out dx, eax ; jmp qword ptr [rcx]
0x0000000000408be9 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000040a264 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000040b2f1 : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000054f74b : pop rbx ; pop r13 ; pop r14 ; ret
0x000000000066d40d : pop rbx ; pop r14 ; ret
0x00000000005046a0 : pop rbx ; pop rbp ; jmp rax
0x000000000068d8c8 : pop rbx ; pop rbp ; pop r12 ; jmp 0x689ba6
0x000000000055cb30 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000005359f8 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000054a335 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rcx
0x00000000006c0a09 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp r8
0x000000000055c688 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000518a56 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x00000000004f6e60 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040440c : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000404044 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000502933 : pop rbx ; pop rbp ; pop r12 ; xor ecx, ecx ; jmp r8
0x00000000005012e5 : pop rbx ; pop rbp ; pop r12 ; xor ecx, ecx ; jmp rax
0x00000000005b6028 : pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x0000000000685ed9 : pop rbx ; pop rbp ; pop r14 ; ret
0x0000000000403da3 : pop rbx ; pop rbp ; ret
0x0000000000409f69 : pop rbx ; pop rdi ; add byte ptr [rdi], cl ; mov bh, 5 ; ret
0x0000000000745db5 : pop rbx ; push qword ptr [rax - 0x3ffff8ea] ; pop rbx ; jmp rax
0x00000000004351d3 : pop rbx ; ret
0x00000000005826ad : pop rbx ; ret 0x47
0x0000000000523b07 : pop rbx ; retf
0x0000000000525e81 : pop rbx ; retf 0x4d
0x000000000074aa25 : pop rbx ; stc ; jmp rax
0x00000000006d68f3 : pop rbx ; stosb byte ptr [rdi], al ; or ecx, ebx ; fsubr dword ptr [rbx] ; retf
0x0000000000555151 : pop rbx ; test al, 0x13 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000005c12e1 : pop rbx ; xor al, 0x11 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000676031 : pop rbx ; xor edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000491989 : pop rbx ; xorps xmm0, xmmword ptr [rax] ; call rax
0x00000000004db6d7 : pop rcx ; adc eax, 0x8fbf0000 ; ret 0x6e
0x0000000000737171 : pop rcx ; add al, byte ptr [rax] ; ret 0xd2a6
0x00000000004654e9 : pop rcx ; add bh, bh ; ror cl, 1 ; ret
0x000000000070f142 : pop rcx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x000000000070f682 : pop rcx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x59
0x000000000070f12a : pop rcx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret 0x59
0x00000000006882e0 : pop rcx ; add dword ptr [rcx + 0x29], eax ; retf 0x3145
0x00000000006b238b : pop rcx ; add eax, 0x15ff0035 ; retf
0x00000000004731f6 : pop rcx ; and eax, dword ptr [rax] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000005b1413 : pop rcx ; cdq ; or eax, 0x5894800 ; ret 0x4547
0x000000000062d69d : pop rcx ; cmp al, 5 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000633154 : pop rcx ; cmp eax, 0x9c8d4800 ; ret
0x00000000006269e3 : pop rcx ; fisttp qword ptr [rdx] ; add bl, ch ; retf -0x3715
0x0000000000636f42 : pop rcx ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000578609 : pop rcx ; jne 0x578622 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000577151 : pop rcx ; jo 0x57715d ; mov qword ptr [rbx + 0x18], rax ; call 0x573ba9
0x000000000057794b : pop rcx ; jo 0x577957 ; mov qword ptr [rbx + 0x18], rax ; call 0x573ba9
0x00000000006c6f8b : pop rcx ; mov ecx, 0x15ff0033 ; retf
0x0000000000648319 : pop rcx ; mov esi, 1 ; call rax
0x000000000074a2e9 : pop rcx ; or byte ptr [rax], al ; add bh, dl ; clc ; jmp rax
0x000000000074a2b9 : pop rcx ; or byte ptr [rax], al ; and ch, dl ; clc ; jmp qword ptr [rax]
0x00000000004d341e : pop rcx ; or eax, 0x8fbf0000 ; ret 0x6e
0x000000000051e92f : pop rcx ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x00000000007b4e39 : pop rcx ; out dx, eax ; call qword ptr [rdi]
0x00000000007224e5 : pop rcx ; outsb dx, byte ptr [rsi] ; sti ; ret
0x000000000042cfda : pop rcx ; pop rbp ; add bh, bh ; ror cl, 1 ; ret
0x000000000044fa83 : pop rcx ; pop rbx ; add bh, bh ; ror cl, 1 ; ret
0x0000000000409cf3 : pop rcx ; pop rdi ; add al, ch ; retf
0x000000000045cfce : pop rcx ; pop rdx ; add bh, bh ; ror cl, 1 ; ret
0x00000000004b9109 : pop rcx ; push 0x1c ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043658b : pop rcx ; ret
0x0000000000682d63 : pop rcx ; ret 0x8348
0x00000000006837e2 : pop rcx ; ret 0xd7e8
0x00000000006a4df5 : pop rcx ; ret 0xef75
0x00000000006838c8 : pop rcx ; ret 0xf1e8
0x0000000000571a73 : pop rcx ; retf
0x00000000006a4aa2 : pop rcx ; retf -0x177d
0x00000000006d6e77 : pop rcx ; retf 0x381a
0x00000000006a4b98 : pop rcx ; retf 0x974
0x0000000000682edd : pop rcx ; retf 0xf66
0x0000000000683f92 : pop rcx ; retf 0xff2
0x0000000000683fca : pop rcx ; sal dl, 1 ; addps xmm0, xmm2 ; ret
0x00000000006cdd39 : pop rcx ; sar edi, cl ; add rsp, 8 ; ret
0x00000000006ce065 : pop rcx ; sar edi, cl ; mov dword ptr [rax], ebx ; pop rbx ; ret
0x00000000006ce056 : pop rcx ; sar edi, cl ; mov eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000006aad1c : pop rcx ; std ; call qword ptr [rax - 0x3cf849f1]
0x000000000058b956 : pop rcx ; str word ptr [rax - 0x77] ; ret
0x0000000000676933 : pop rcx ; sub bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000058d09d : pop rcx ; verw bx ; test dword ptr [rax - 0x77], ecx ; ret
0x0000000000577c40 : pop rdi ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000005b8957 : pop rdi ; adc byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000051f1d7 : pop rdi ; adc byte ptr [rcx], bh ; retf
0x00000000005cd46d : pop rdi ; adc dword ptr [rdi], ecx ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000069c8a9 : pop rdi ; add al, 0x5b ; ret
0x00000000007716fd : pop rdi ; add al, byte ptr [rax] ; rcr ch, 0xda ; call rsi
0x0000000000409535 : pop rdi ; add al, ch ; mov ah, 0x68 ; sub byte ptr [rax], al ; call 0x686029
0x00000000004094ee : pop rdi ; add al, ch ; retf
0x000000000040e4f5 : pop rdi ; add bh, bh ; ror cl, 1 ; ret
0x00000000004071d1 : pop rdi ; add byte ptr [rax - 0x7c], al ; fnsave dword ptr [rbx + rbp - 0x42] ; retf
0x00000000006ce974 : pop rdi ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 8] ; leave ; ret
0x0000000000408ae7 : pop rdi ; add byte ptr [rcx], al ; ret
0x0000000000409f6a : pop rdi ; add byte ptr [rdi], cl ; mov bh, 5 ; ret
0x0000000000408eb9 : pop rdi ; add byte ptr [rdi], cl ; mov bh, 5 ; ret 0x5f56
0x0000000000547bd9 : pop rdi ; add byte ptr fs:[r10], al ; add byte ptr [rax], al ; add al, ch ; retf 0x176c
0x0000000000599b27 : pop rdi ; add dword ptr [rax + 0x29], ecx ; retf
0x00000000004fa41e : pop rdi ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x8c0f
0x000000000064b0d5 : pop rdi ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000004a2785 : pop rdi ; add dword ptr [rsi], edx ; call rax
0x00000000004c3a5e : pop rdi ; add eax, 0x8fbf0000 ; ret 0x6e
0x00000000007a16ad : pop rdi ; add eax, 0xc6471600 ; call rdi
0x00000000004a88de : pop rdi ; and dword ptr [rax], eax ; leave ; ret
0x000000000066495a : pop rdi ; dec dword ptr [rax + 1] ; ror byte ptr [rax + 1], 1 ; retf 0x149
0x000000000066dba9 : pop rdi ; fcos ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000643997 : pop rdi ; fld dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007352f5 : pop rdi ; iretd ; jmp qword ptr [rax]
0x000000000054d3dd : pop rdi ; jae 0x54d3fe ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058d4dd : pop rdi ; jb 0x58d4fa ; add byte ptr [rax - 0x77], cl ; ret
0x000000000062676d : pop rdi ; jle 0x62677f ; add byte ptr [rax - 0x77], cl ; ret
0x000000000068d130 : pop rdi ; jmp 0x689ba3
0x000000000051a87c : pop rdi ; jmp rax
0x0000000000628c81 : pop rdi ; jp 0x628c8f ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006d68f1 : pop rdi ; mov bl, byte ptr [rbx - 0x56] ; or ecx, ebx ; fsubr dword ptr [rbx] ; retf
0x000000000051ff6d : pop rdi ; out 0x19, al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000408e1e : pop rdi ; pop rbp ; ret
0x000000000072238f : pop rdi ; push rdx ; mov cs, word ptr [rcx] ; ret 0xe937
0x00000000004f4e99 : pop rdi ; ret
0x00000000007f2fc6 : pop rdi ; ret 0x1e2
0x00000000005b38ef : pop rdi ; ret 0xc
0x00000000005c184d : pop rdi ; retf
0x00000000004330ef : pop rdi ; retf 0x24
0x00000000004acced : pop rdi ; sbb eax, 0x8be4100 ; ret 0x6e
0x00000000006bd3a1 : pop rdi ; sete al ; or eax, edx ; ret
0x0000000000678523 : pop rdi ; sete al ; ret
0x0000000000656695 : pop rdi ; sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000058b37b : pop rdi ; str word ptr [rax - 0x77] ; ret
0x00000000006a3074 : pop rdi ; xor eax, eax ; call 0x67fb55
0x000000000044010c : pop rdx ; add al, 0 ; add byte ptr [rax - 0x77], cl ; clc ; leave ; ret
0x00000000004f6a48 : pop rdx ; add al, 0x8b ; add bh, byte ptr [rcx] ; ret
0x00000000006651c9 : pop rdx ; add al, byte ptr [rcx + 0x39] ; retf
0x0000000000452d41 : pop rdx ; add bh, bh ; ror cl, 1 ; ret
0x000000000041dccd : pop rdx ; add byte ptr [rax - 0x77], cl ; ret 0xbe
0x000000000065e12e : pop rdx ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000456c01 : pop rdx ; add byte ptr [rbx - 0x78f0f108], al ; ret
0x0000000000502c3c : pop rdx ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x8c0f
0x000000000068d396 : pop rdx ; add dword ptr [rcx], eax ; ret
0x00000000004c3953 : pop rdx ; add eax, 0x8fbf0000 ; ret 0x6e
0x0000000000740a09 : pop rdx ; add eax, 0xe6059000 ; call rax
0x0000000000740a19 : pop rdx ; add eax, 0xe605f000 ; call qword ptr [rax]
0x000000000042abc5 : pop rdx ; and eax, 0xc4834800 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000640400 : pop rdx ; call 0xffffffffc3ed4d0a
0x000000000056a8f2 : pop rdx ; call qword ptr [rbx]
0x00000000007383a4 : pop rdx ; call rsp
0x0000000000747cf5 : pop rdx ; cmc ; jmp rax
0x000000000050a20f : pop rdx ; dec dword ptr [rax - 0x7d] ; ret
0x00000000007517a8 : pop rdx ; dec ebp ; jmp qword ptr [rbx]
0x000000000065a5d2 : pop rdx ; fld qword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000074400d : pop rdx ; in eax, dx ; jmp qword ptr [rax]
0x0000000000755408 : pop rdx ; jae 0x7553dd ; call qword ptr [rdx]
0x0000000000755448 : pop rdx ; jae 0x75541d ; call qword ptr [rbx]
0x00000000005786f4 : pop rdx ; je 0x57870f ; add bl, ch ; mov dword ptr [rax - 0x77], ecx ; ret
0x00000000006d6e75 : pop rdx ; jl 0x6d6ed4 ; retf 0x381a
0x000000000063a7e2 : pop rdx ; lahf ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000004fe473 : pop rdx ; lock dec dword ptr [rax - 0x77] ; ret
0x00000000006b9b32 : pop rdx ; loope 0x6b9b3a ; dec dword ptr [rax - 0x77] ; ret 0xb60f
0x00000000007217e9 : pop rdx ; mov ah, 0x2b ; add al, 0x6a ; mov bl, 0x5c ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x00000000005a3272 : pop rdx ; mov bl, 0x11 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000459d82 : pop rdx ; mov ebx, dword ptr [rdx] ; call rax
0x00000000006d68ad : pop rdx ; mov ecx, 0x8f9b589e ; xlatb ; pop rdx ; ret 0x44fd
0x0000000000744bb4 : pop rdx ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; jmp rax
0x0000000000721861 : pop rdx ; or byte ptr [rax - 0xf09590], cl ; retf 0x63b
0x000000000044185e : pop rdx ; or byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x000000000074a329 : pop rdx ; or byte ptr [rax], al ; xor cl, bl ; clc ; jmp rax
0x0000000000655052 : pop rdx ; or dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x8d4c
0x0000000000722a86 : pop rdx ; out 0x57, al ; retf
0x00000000007b4f31 : pop rdx ; out dx, eax ; call qword ptr [rdi]
0x000000000076a3f0 : pop rdx ; pushfq ; leave ; call qword ptr [rdx]
0x000000000053ae16 : pop rdx ; ret
0x00000000006d68b4 : pop rdx ; ret 0x44fd
0x000000000073661c : pop rdx ; retf -0x2f
0x00000000006e2400 : pop rdx ; retf 0x45
0x00000000007f2d8c : pop rdx ; retf 0x627
0x00000000007387cd : pop rdx ; salc ; call qword ptr [rax]
0x00000000007387bd : pop rdx ; salc ; call rax
0x00000000006cdc89 : pop rdx ; sar edi, cl ; add rsp, 8 ; ret
0x000000000074a9f5 : pop rdx ; stc ; jmp qword ptr [rax]
0x000000000074a9ed : pop rdx ; stc ; jmp rax
0x00000000005cfd8a : pop rdx ; sub eax, dword ptr [rbx] ; call rax
0x000000000049f35b : pop rdx ; xor eax, 0x8948004a ; ret 0xbe
0x0000000000588772 : pop rsi ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000570098 : pop rsi ; adc dl, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000073498c : pop rsi ; adc esi, ecx ; call rax
0x00000000004134cd : pop rsi ; add bh, bh ; ror cl, 1 ; ret
0x00000000005d35ef : pop rsi ; add byte ptr [rax - 0x77], cl ; ret 0xbe
0x0000000000690606 : pop rsi ; add dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000076160d : pop rsi ; add dword ptr [rax], eax ; retf -0x2bfd
0x00000000007d6fd5 : pop rsi ; add eax, 0x6801029a ; pop rax ; add byte ptr [rax], al ; ret
0x00000000004c39d3 : pop rsi ; add eax, 0x8fbf0000 ; ret 0x6e
0x00000000005e2586 : pop rsi ; add eax, dword ptr [rdx] ; call rax
0x00000000004989f1 : pop rsi ; and al, byte ptr [rax] ; leave ; ret
0x0000000000739374 : pop rsi ; and bl, al ; call qword ptr [rax]
0x00000000006c065e : pop rsi ; and dh, byte ptr [rax + rax] ; pop rbx ; jmp rax
0x000000000063fcb0 : pop rsi ; call 0xffffffffc3ed45ba
0x000000000063ff23 : pop rsi ; call 0xffffffffc3ed482d
0x000000000063fff7 : pop rsi ; call 0xffffffffc3ed4901
0x0000000000737464 : pop rsi ; call rdx
0x0000000000677e30 : pop rsi ; dec dword ptr [rcx + 1] ; ret 0xd285
0x00000000005168f6 : pop rsi ; fsubr st(6) ; dec dword ptr [rax - 0x77] ; ret
0x0000000000545dae : pop rsi ; idiv edi ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000007ac1e0 : pop rsi ; in eax, dx ; call qword ptr [rcx]
0x00000000007ac0f0 : pop rsi ; in eax, dx ; call rcx
0x00000000007acf81 : pop rsi ; in eax, dx ; jmp qword ptr [rcx]
0x00000000007be799 : pop rsi ; int1 ; call rsp
0x00000000006483f0 : pop rsi ; ja 0x6483ff ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x0000000000722c80 : pop rsi ; jle 0x722c7c ; in al, dx ; ret 0x6cad
0x000000000059de5b : pop rsi ; jmp 0x6aa8e3
0x0000000000746795 : pop rsi ; jmp qword ptr [rax]
0x00000000006c0a10 : pop rsi ; jmp r8
0x000000000055c68f : pop rsi ; jmp rax
0x0000000000518a5d : pop rsi ; jmp rcx
0x000000000054cdde : pop rsi ; jns 0x54cdfe ; add bl, ch ; retf 0x41f0
0x0000000000572ef8 : pop rsi ; jo 0x572f02 ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000767488 : pop rsi ; jo 0x767464 ; call rax
0x000000000073997c : pop rsi ; jp 0x73995a ; jmp rax
0x0000000000721c83 : pop rsi ; lodsd eax, dword ptr [rsi] ; ret 0x4765
0x000000000042467a : pop rsi ; loop 0x424681 ; dec ecx ; ret
0x000000000075a7c8 : pop rsi ; mov cl, 0xd0 ; call qword ptr [rcx]
0x000000000061d466 : pop rsi ; mov dl, 0x3e ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4847
0x000000000043214e : pop rsi ; mov edi, edi ; dec ecx ; ret
0x0000000000535ab8 : pop rsi ; mov rax, qword ptr [rip + 0x4cce20] ; jmp rax
0x0000000000535938 : pop rsi ; mov rax, qword ptr [rip + 0x4ccfa0] ; jmp rax
0x0000000000501a90 : pop rsi ; mov rax, qword ptr [rip + 0x500e48] ; jmp rax
0x000000000049ef04 : pop rsi ; or al, 0x1e ; add byte ptr [rax - 0x77], cl ; ret
0x000000000061b870 : pop rsi ; or al, byte ptr [rax] ; leave ; ret
0x000000000068c4ab : pop rsi ; or cl, ch ; retf
0x000000000074473d : pop rsi ; out dx, al ; call rax
0x000000000068d12e : pop rsi ; pop r15 ; jmp 0x689ba5
0x000000000051a87a : pop rsi ; pop r15 ; jmp rax
0x0000000000408e1c : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004f4e97 : pop rsi ; pop r15 ; ret
0x0000000000408bef : pop rsi ; pop rbp ; ret
0x00000000004f6e67 : pop rsi ; ret
0x00000000007f2d2d : pop rsi ; ret 0x1d7
0x00000000004b073a : pop rsi ; ret 0x6e
0x00000000006827d3 : pop rsi ; ret 0xff2
0x00000000005fd1ce : pop rsi ; retf
0x000000000073a25c : pop rsi ; retf -0x26
0x00000000006c45d6 : pop rsi ; retf 0x1ba
0x0000000000683d06 : pop rsi ; retf 0xf66
0x0000000000767351 : pop rsi ; salc ; call rsp
0x00000000007476c4 : pop rsi ; salc ; hlt ; jmp qword ptr [rax]
0x000000000044d04e : pop rsi ; sbb byte ptr [rdi], ah ; add cl, cl ; ret
0x000000000044ed6e : pop rsi ; sbb dword ptr [rdi], esp ; add cl, cl ; ret
0x00000000005e0f7e : pop rsi ; sbb dword ptr [rdx], eax ; call rax
0x0000000000661b9c : pop rsi ; sbb eax, eax ; add eax, 3 ; ret
0x00000000006bd3be : pop rsi ; setbe al ; or eax, edx ; ret
0x000000000048eb4e : pop rsi ; std ; and al, byte ptr [rax] ; leave ; ret
0x000000000073905c : pop rsi ; test edi, edx ; jmp rax
0x0000000000738fd5 : pop rsi ; xlatb ; call qword ptr [rax]
0x00000000006cc492 : pop rsi ; xor eax, dword ptr [eax] ; cmp eax, 0xff ; je 0x6cc4a9 ; ret
0x00000000007a47a8 : pop rsi ; xor eax, esi ; call qword ptr [rdx]
0x0000000000767cc8 : pop rsp ; adc al, 0xd7 ; jmp qword ptr [rbx]
0x00000000007ac864 : pop rsp ; adc dword ptr [rsi], eax ; add byte ptr [rax + 0x4b], dl ; in eax, dx ; call qword ptr [rax]
0x000000000073d9e9 : pop rsp ; add al, 0 ; nop ; sub ah, cl ; jmp rax
0x0000000000737219 : pop rsp ; add al, byte ptr [rax] ; ret 0xffd2
0x0000000000433ae7 : pop rsp ; add bh, bh ; ror cl, 1 ; ret
0x00000000006c6c9b : pop rsp ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000075138d : pop rsp ; add byte ptr [rax], al ; push rsi ; fmulp st(5) ; call rcx
0x00000000006b6e3a : pop rsp ; add dl, byte ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006a7132 : pop rsp ; add dword ptr [rax], eax ; add dh, al ; ret
0x000000000076136d : pop rsp ; add dword ptr [rax], eax ; not ebx ; call rbx
0x000000000076139d : pop rsp ; add dword ptr [rax], eax ; retf -0x2c08
0x00000000007a13c5 : pop rsp ; add eax, 0xe8ae9800 ; call rsi
0x00000000006bcaa5 : pop rsp ; add eax, dword ptr [rbx + rax*4] ; ret
0x0000000000682ad9 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000758bd0 : pop rsp ; and al, dl ; jmp qword ptr [rax]
0x000000000079d8a4 : pop rsp ; and dword ptr [rip - 0x181ce600], eax ; call rsp
0x0000000000746745 : pop rsp ; call rax
0x000000000078b164 : pop rsp ; cli ; add eax, dword ptr [rax] ; or al, 0xe1 ; call qword ptr [rbx]
0x0000000000747d45 : pop rsp ; cmc ; call rax
0x000000000078f0a4 : pop rsp ; cmp dword ptr [rax + rax], eax ; clc ; cmc ; loope 0x78f0b3 ; retf 1
0x00000000007217ef : pop rsp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x00000000005584e4 : pop rsp ; enter -0x16, 0x48 ; mov edi, ebx ; call 0x6d4749
0x0000000000738c24 : pop rsp ; fcomp st(0), st(6) ; jmp qword ptr [rax]
0x0000000000799264 : pop rsp ; fild dword ptr [rax + rax] ; clc ; and al, 0xe6 ; call rdi
0x0000000000747704 : pop rsp ; fxtract ; call qword ptr [rax]
0x000000000057c061 : pop rsp ; hlt ; dec dword ptr [rax - 0x77] ; ret
0x0000000000653a9c : pop rsp ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000005149f8 : pop rsp ; imul esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000007daa8c : pop rsp ; in al, 0x19 ; add dl, dh ; adc bh, byte ptr [rdi] ; add byte ptr [rax], al ; retf
0x00000000007a9ca4 : pop rsp ; in eax, 5 ; add byte ptr [rax], ch ; scasd eax, dword ptr [rdi] ; in al, dx ; jmp rsp
0x0000000000674018 : pop rsp ; jb 0x674020 ; jne 0x673ffd ; ret
0x00000000006740b7 : pop rsp ; jb 0x6740bd ; ret
0x00000000004f952c : pop rsp ; jbe 0x4f954d ; add byte ptr [rax - 0x77], cl ; ret
0x000000000069340f : pop rsp ; jg 0x693409 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000453474 : pop rsp ; jl 0x45347a ; dec ecx ; ret
0x000000000068d8cb : pop rsp ; jmp 0x689ba3
0x000000000055cb33 : pop rsp ; jmp rax
0x0000000000589a9a : pop rsp ; js 0x589ab2 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007944a4 : pop rsp ; lea eax, dword ptr [rax + rax] ; jnp 0x794496 ; call rsp
0x0000000000778064 : pop rsp ; leave ; add al, byte ptr [rax] ; mov byte ptr [rbp - 0x24], bh ; call qword ptr [rbx]
0x0000000000445c70 : pop rsp ; mov dword ptr [rdi], esp ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000433e50 : pop rsp ; mov ebx, 0x29480025 ; ret
0x00000000006a7c2b : pop rsp ; mov rax, qword ptr [rip + 0x35acad] ; jmp rax
0x00000000006761cc : pop rsp ; mov rax, qword ptr [rip + 0x38c70c] ; jmp rax
0x00000000006698cc : pop rsp ; mov rax, qword ptr [rip + 0x39900c] ; jmp rax
0x000000000064866d : pop rsp ; mov rax, qword ptr [rip + 0x3ba26b] ; jmp rax
0x00000000006484f0 : pop rsp ; mov rax, qword ptr [rip + 0x3ba3e8] ; jmp rax
0x0000000000648358 : pop rsp ; mov rax, qword ptr [rip + 0x3ba580] ; jmp rax
0x00000000006481db : pop rsp ; mov rax, qword ptr [rip + 0x3ba6fd] ; jmp rax
0x00000000006480ad : pop rsp ; mov rax, qword ptr [rip + 0x3ba82b] ; jmp rax
0x0000000000647fcf : pop rsp ; mov rax, qword ptr [rip + 0x3ba909] ; jmp rax
0x000000000063b393 : pop rsp ; mov rax, qword ptr [rip + 0x3c7545] ; jmp rax
0x000000000063b113 : pop rsp ; mov rax, qword ptr [rip + 0x3c77c5] ; jmp rax
0x000000000063a31a : pop rsp ; mov rax, qword ptr [rip + 0x3c85be] ; jmp rax
0x00000000005f96c5 : pop rsp ; mov rax, qword ptr [rip + 0x409213] ; jmp rax
0x00000000005f952f : pop rsp ; mov rax, qword ptr [rip + 0x4093a9] ; jmp rax
0x000000000058807b : pop rsp ; mov rax, qword ptr [rip + 0x47a85d] ; jmp rax
0x0000000000550f29 : pop rsp ; mov rax, qword ptr [rip + 0x4b19af] ; jmp rax
0x0000000000547837 : pop rsp ; mov rax, qword ptr [rip + 0x4bb0a1] ; jmp rax
0x0000000000547414 : pop rsp ; mov rax, qword ptr [rip + 0x4bb4c4] ; jmp rax
0x0000000000751d10 : pop rsp ; or al, 0xce ; call rsp
0x000000000079c1a4 : pop rsp ; or al, byte ptr [rip - 0x18682c00] ; call rsp
0x000000000074a3a9 : pop rsp ; or byte ptr [rax], al ; push rax ; fdiv st(0), st(0) ; jmp rax
0x000000000074a379 : pop rsp ; or byte ptr [rax], al ; xor bl, bl ; clc ; jmp qword ptr [rax]
0x000000000079da70 : pop rsp ; out -0x19, eax ; call rcx
0x00000000006448cf : pop rsp ; out -1, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000004060e0 : pop rsp ; out 0x2c, al ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000006bfdb2 : pop rsp ; pop r13 ; jmp r8
0x00000000005359fb : pop rsp ; pop r13 ; jmp rax
0x000000000054a338 : pop rsp ; pop r13 ; jmp rcx
0x000000000059de57 : pop rsp ; pop r13 ; pop r14 ; jmp 0x6aa8e7
0x00000000006c0a0c : pop rsp ; pop r13 ; pop r14 ; jmp r8
0x000000000055c68b : pop rsp ; pop r13 ; pop r14 ; jmp rax
0x0000000000518a59 : pop rsp ; pop r13 ; pop r14 ; jmp rcx
0x000000000068d12a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp 0x689ba9
0x000000000051a876 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000408e18 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004f4e93 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000408beb : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004f6e63 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040a266 : pop rsp ; pop r13 ; pop rbp ; ret
0x000000000040440f : pop rsp ; pop r13 ; ret
0x000000000070c2b1 : pop rsp ; pop rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret 0x70
0x000000000040b2f3 : pop rsp ; pop rbp ; ret
0x000000000069178b : pop rsp ; pop rbx ; ret
0x0000000000404047 : pop rsp ; ret
0x0000000000757964 : pop rsp ; ret 0
0x000000000068d483 : pop rsp ; ret 0x37
0x00000000006d6c85 : pop rsp ; ret 0x5d78
0x00000000005123f0 : pop rsp ; ret 0x6610
0x00000000006830fe : pop rsp ; ret 0x8be8
0x00000000006837d4 : pop rsp ; ret 0xff2
0x00000000007608e0 : pop rsp ; ret 0xffd3
0x0000000000767964 : pop rsp ; ret 1
0x00000000007a7964 : pop rsp ; ret 5
0x00000000007b7964 : pop rsp ; ret 6
0x000000000045dcf0 : pop rsp ; retf
0x00000000005b8dee : pop rsp ; retf -0x1c
0x000000000068381a : pop rsp ; retf -0x7cb8
0x00000000007581a4 : pop rsp ; retf 0
0x0000000000681c28 : pop rsp ; retf 0xf66
0x0000000000681d5b : pop rsp ; retf 0xff2
0x00000000007672f9 : pop rsp ; salc ; jmp qword ptr [rsi]
0x000000000077d164 : pop rsp ; sbb al, byte ptr [rbx] ; add al, ch ; mov ds, ebp ; call qword ptr [rbx]
0x00000000005e0f08 : pop rsp ; sbb dword ptr [rdx], eax ; call rax
0x000000000079d0a4 : pop rsp ; sbb dword ptr [rip - 0x182ab800], eax ; call rsp
0x0000000000722f5d : pop rsp ; scasb al, byte ptr [rdi] ; jne 0x722f5b ; add cl, ch ; ret 0x7f83
0x0000000000722f5d : pop rsp ; scasb al, byte ptr [rdi] ; jne 0x722f5c ; add cl, ch ; ret 0x7f83
0x00000000006b2078 : pop rsp ; sete byte ptr [rip + 0x358244] ; ret
0x000000000074aa35 : pop rsp ; stc ; call qword ptr [rax]
0x000000000061d050 : pop rsp ; sub dword ptr [rdi], eax ; add byte ptr [rax + 0x29], cl ; ret
0x000000000062cb5e : pop rsp ; test eax, eax ; sete al ; ret
0x00000000007a5264 : pop rsp ; wait ; add eax, 0xeb46c800 ; jmp qword ptr [rax]
0x00000000004809e0 : pop rsp ; xchg dword ptr [rax], esp ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x8d48
0x000000000076eb64 : pop rsp ; xor al, 2 ; add byte ptr [rdx], dh ; push rsi ; leave ; call qword ptr [rdx]
0x0000000000534073 : pop rsp ; xor byte ptr [rdi], ch ; xor eax, eax ; call 0x680af4
0x0000000000535024 : pop rsp ; xor byte ptr [rdi], ch ; xor eax, eax ; call 0x681302
0x0000000000502936 : pop rsp ; xor ecx, ecx ; jmp r8
0x00000000005012e8 : pop rsp ; xor ecx, ecx ; jmp rax
0x0000000000721a33 : pop rsp ; xor rdi, rdx ; mov r12d, dword ptr [r10 - 6] ; outsb dx, byte ptr [rsi] ; retf -0x1ead
0x00000000007d0983 : popfq ; adc al, 0 ; jmp qword ptr [rdi]
0x00000000007d05a9 : popfq ; adc al, 0 ; ret
0x000000000062d52f : popfq ; adc byte ptr [rcx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e0fdd : popfq ; adc dword ptr [rax], eax ; ret 0x605
0x00000000004e1547 : popfq ; adc edx, dword ptr [rdx] ; call rax
0x00000000007d6529 : popfq ; add ah, byte ptr [rbx] ; retf 0x103
0x000000000079548d : popfq ; add al, 0 ; add ah, ch ; call rsp
0x000000000077546d : popfq ; add al, byte ptr [rax] ; loop 0x775454 ; call rdi
0x00000000007e1697 : popfq ; add al, byte ptr [rcx] ; xchg eax, esi ; add dword ptr [rbx], edx ; add byte ptr [rax], al ; retf 0x501
0x000000000057633e : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000075553d : popfq ; add byte ptr [rax], al ; and dh, byte ptr [rsi - 0x31] ; call rsp
0x0000000000755485 : popfq ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; jae 0x755460 ; call qword ptr [rcx]
0x0000000000755445 : popfq ; add byte ptr [rax], al ; pop rdx ; jae 0x755420 ; call qword ptr [rbx]
0x000000000058a27b : popfq ; add byte ptr [rcx - 0x7cb7efa3], cl ; ret
0x00000000007f14c3 : popfq ; add ch, byte ptr [rsi] ; add byte ptr [rax], al ; retf
0x00000000007e4b5a : popfq ; add cl, byte ptr [rcx] ; add byte ptr [rax], al ; retf
0x00000000005054df : popfq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000006a9947 : popfq ; add dword ptr [rax], eax ; add cl, bl ; retf
0x0000000000687c18 : popfq ; add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004c59fa : popfq ; add eax, 0x8fbf0000 ; ret 0x6e
0x00000000007ed99c : popfq ; add eax, 0xd05aa00 ; add byte ptr [rax], al ; ret
0x00000000007417c1 : popfq ; add eax, 0xe745b000 ; call qword ptr [rax]
0x0000000000474047 : popfq ; call 0xffffffffd14640a9
0x00000000005c8684 : popfq ; enter -4, -1 ; mov rdi, rbx ; call rax
0x0000000000572743 : popfq ; fist word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000404f9f : popfq ; imul dword ptr [rax + rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000051cf9f : popfq ; ja 0x51cfc3 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b4c4b : popfq ; mov esi, 0x8948000c ; ret
0x00000000006b336b : popfq ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000074b2d1 : popfq ; or byte ptr [rax], al ; loopne 0x74b289 ; stc ; jmp qword ptr [rax]
0x00000000007d455c : popfq ; or dl, byte ptr [rdi] ; add byte ptr [rax], al ; retf 0x50a
0x000000000063a943 : popfq ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000004f3737 : popfq ; outsb dx, byte ptr [rsi] ; add al, ch ; xchg eax, ecx ; ret
0x000000000053b6a1 : popfq ; outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rcx
0x0000000000542058 : popfq ; ret
0x00000000006b663f : popfq ; ret 0x34
0x00000000005fac29 : popfq ; ret 0x3944
0x000000000053f247 : popfq ; ret 0x3948
0x00000000005179ef : popfq ; ret 0x4e
0x000000000040663f : popfq ; ret 0x5f
0x00000000005c540a : popfq ; ret 0x8545
0x000000000050ef35 : popfq ; ret 0x854d
0x0000000000600424 : popfq ; ret 0xc339
0x00000000005c6372 : popfq ; ret 0xc985
0x00000000005fd720 : popfq ; ret 0xd184
0x00000000005fb29d : popfq ; ret 0xf685
0x000000000057a83a : popfq ; ret 0xfe83
0x00000000006d6e5b : popfq ; retf
0x000000000052c681 : popfq ; sldt word ptr [rax] ; mov edi, 0xa03e00 ; call rax
0x00000000006a6933 : popfq ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000452d3f : popfq ; sti ; pop rdx ; add bh, bh ; ror cl, 1 ; ret
0x0000000000517baf : popfq ; sub al, 0x19 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007cdc87 : popfq ; syscall
0x00000000005f3dcd : por mm0, qword ptr [rax] ; call rax
0x00000000007cd5ad : psllw mm1, qword ptr [rsi] ; add eax, 0x9f001583 ; syscall
0x000000000063532f : psllw mm7, mm7 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005619d2 : psubsb mm7, mm0 ; retf
0x00000000005d3fd5 : psubsw mm0, qword ptr [rdx] ; call rax
0x00000000005c78c1 : push -0x17000002 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000050d719 : push -0x17ff5fc6 ; out dx, al ; ret
0x0000000000490bbc : push -0x17ffe101 ; retf
0x0000000000721748 : push -0x1e1fe0e ; ret 0x6906
0x0000000000409539 : push -0x2017ffd8 ; retf 0x27
0x000000000074b3b0 : push -0x2ffff75f ; ret
0x000000000048fc64 : push -0x36ffdcf6 ; ret
0x00000000005e4a64 : push -0x36fff244 ; ret
0x000000000052c533 : push -0x3b7cb7f0 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000068e507 : push -0x3b7cb7fe ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000068e304 : push -0x3b7eb7ff ; test al, 0 ; add byte ptr [rax], al ; ret
0x0000000000735e18 : push -0x55fffe02 ; retf -0x30
0x0000000000434c36 : push -0x5b000005 ; ret
0x00000000004378e3 : push -0x5b00000b ; ret
0x0000000000747510 : push -0x5fff879 ; retf
0x00000000005f20b4 : push -0x74000005 ; add byte ptr [rcx], bh ; ret 0x247c
0x00000000005f2069 : push -0x74000005 ; add byte ptr [rcx], bh ; ret 0x8c0f
0x00000000004693bc : push -0x74ffa6c1 ; add al, 0x89 ; ret 0x8b48
0x00000000006c8d82 : push -0x76000001 ; or r9b, bpl ; ret 0xfffe
0x00000000006bb4fd : push -0x76000001 ; ret 0xa2e9
0x00000000006c8d42 : push -0x76000001 ; ret 0xb60f
0x00000000004263e3 : push -0x76b70001 ; ret
0x00000000005f5027 : push -0x76b70002 ; ret
0x00000000004c6b4a : push -0x76b70004 ; ret 0x8b48
0x000000000065736b : push -0x76b70016 ; ret
0x0000000000419e26 : push -0x76b7ffda ; ret
0x000000000051a2a3 : push -0x76b7ffea ; ret
0x000000000058df1c : push -0x76b7ffec ; ret
0x0000000000559333 : push -0x76b7ffee ; ret
0x0000000000629e49 : push -0x76b7fffb ; ret
0x000000000065a279 : push -0x76b7fffe ; ret
0x00000000006126c5 : push -0x76b80000 ; ret 0x8b48
0x000000000051bf57 : push -0x76efa875 ; ret
0x00000000004982a4 : push -0x76ffe0f3 ; ret 0x148
0x0000000000441850 : push -0x76fffff8 ; ret
0x000000000058bfed : push -0x7bbbffb9 ; in eax, 0x75 ; ret
0x000000000051d777 : push -0x7c0ffefc ; sub byte ptr [rcx], al ; jmp 0x51d753
0x00000000005898e7 : push -0x7c0ffefc ; sub byte ptr [rcx], al ; jmp 0x5898c3
0x00000000005a4e67 : push -0x7c0ffefc ; sub byte ptr [rcx], al ; jmp 0x5a4e43
0x0000000000507246 : push -0x7c0ffefc ; sub byte ptr [rcx], al ; ret
0x00000000004f9282 : push -0x7cb7ffe8 ; cli ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000052050b : push -0x7cbefed4 ; cld ; add cl, byte ptr [rdi] ; lahf ; ret 0x854d
0x0000000000507c43 : push -0x7cbefedc ; cld ; add cl, byte ptr [rdi] ; lahf ; ret 0x854d
0x000000000054d2eb : push -0x7cbefee4 ; cld ; add cl, byte ptr [rdi] ; lahf ; ret 0x854d
0x0000000000520296 : push -0x7cbefeec ; cld ; add cl, byte ptr [rdi] ; lahf ; ret 0x854d
0x00000000006678f3 : push -0x7cdbaf75 ; ret 0x8901
0x0000000000612444 : push 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000072c9f2 : push 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; retf
0x00000000006fa2b2 : push 0 ; add byte ptr [rax], dh ; ret 0x53
0x00000000007294fa : push 0 ; add byte ptr [rax], dl ; ret
0x0000000000448e69 : push 0 ; add cl, cl ; ret
0x0000000000667793 : push 0 ; ret
0x000000000073e998 : push 0x100004ab ; jo 0x73e988 ; call rax
0x000000000058dc6c : push 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000518f42 : push 0x17 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000509162 : push 0x17 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004fa15d : push 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004ca032 : push 0x1b ; add cl, cl ; ret
0x00000000005f442b : push 0x1b9 ; add byte ptr [rax - 0x77], cl ; ret 0x87e8
0x00000000004b911e : push 0x1c ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000004b910a : push 0x1c ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006d6a90 : push 0x1cf1daf2 ; retf -0x903
0x00000000004e7e49 : push 0x1d ; add cl, cl ; ret
0x00000000007fa342 : push 0x20689a00 ; fsub dword ptr [rbp] ; retf 0x568
0x00000000004a7b4f : push 0x21 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000499f38 : push 0x22 ; add cl, cl ; ret
0x00000000006101ba : push 0x24448948 ; or al, ch ; retf
0x00000000005190b6 : push 0x29480017 ; ret
0x000000000040db62 : push 0x2b ; sub eax, dword ptr [rax] ; leave ; ret
0x00000000006340a0 : push 0x310071dd ; shr al, 0x19 ; retf 4
0x0000000000634080 : push 0x310071dd ; shr al, 0x39 ; retf 4
0x0000000000634025 : push 0x310071dd ; shr al, 0x94 ; retf 4
0x00000000006340b6 : push 0x310071dd ; shr al, 3 ; retf 4
0x000000000076c41d : push 0x41380e0a ; ret
0x000000000040db0f : push 0x415c415b ; pop rbp ; pop rbp ; ret
0x000000000073d568 : push 0x447 ; retf
0x000000000073e2a8 : push 0x487 ; retf -0x1f
0x0000000000737e64 : push 0x48ffd44d ; xchg eax, edi ; add al, byte ptr [rax] ; retf -0x2bb3
0x0000000000435b0f : push 0x48fffffa ; ret
0x00000000007352bc : push 0x4d ; iretd ; jmp rax
0x0000000000439042 : push 0x58 ; sub byte ptr [rax], al ; leave ; ret
0x000000000061d3f5 : push 0x58bffde ; retf 0x3eb2
0x000000000065971a : push 0x5bc0940f ; ret
0x000000000069b791 : push 0x5c415d5b ; pop r13 ; ret
0x00000000007fa345 : push 0x65d820 ; retf 0x568
0x000000000054978e : push 0x688d4804 ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000678c16 : push 0x688d4c04 ; or byte ptr [rax - 0x77], cl ; ret
0x000000000060bea0 : push 0x688d4c08 ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000043830a : push 0x68fffff6 ; ret
0x00000000007482b0 : push 0x7c8 ; retf -0xb
0x000000000066d218 : push 0x89 ; out dx, al ; call rax
0x0000000000691901 : push 0x8c48348 ; ret
0x00000000004c699f : push 0x90 ; mov rax, qword ptr [rip + 0x53bf40] ; call rax
0x000000000063a5d2 : push 0xa1 ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000063a1d2 : push 0xa5 ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000723213 : push 0xac ; retf 0xfa8
0x00000000007217ed : push 0xb3 ; pop rsp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x000000000045bde2 : push 0xbb ; and al, byte ptr [rax] ; nop ; leave ; ret
0x000000000060dc6b : push 0xc ; add byte ptr [rax - 0x77], cl ; ret
0x000000000045dc42 : push 0xc ; add cl, cl ; ret
0x0000000000535972 : push 0xcf ; add byte ptr [rax - 0x77], r9b ; fucompi st(0) ; ret 0x19ed
0x000000000073531d : push 0xcf ; inc dword ptr [rax] ; retf 1
0x0000000000722210 : push 0xcf ; jbe 0x72222e ; push gs ; retf -0x1e54
0x0000000000735325 : push 0xcf ; jmp qword ptr [rax]
0x00000000005aa88a : push 0xd ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000737745 : push 0xd3 ; jmp rax
0x00000000006774b7 : push 0xd4 ; add rax, rbx ; pop rbx ; ret
0x00000000007805c1 : push 0xde ; call qword ptr [rbx]
0x0000000000738c4c : push 0xe0 ; salc ; call rax
0x000000000073f085 : push 0xe3 ; call qword ptr [rax]
0x0000000000740f9d : push 0xe6 ; call qword ptr [rax]
0x000000000063f31b : push 0xe8 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000743355 : push 0xeb ; call qword ptr [rax]
0x0000000000589bd5 : push 0xf ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007b8ba1 : push 0xf0 ; call qword ptr [rcx]
0x0000000000745a4d : push 0xf0 ; jmp qword ptr [rax]
0x00000000007492e5 : push 0xf7 ; jmp rax
0x000000000074b9a8 : push 0xf8 ; retf
0x000000000061f8b1 : push 0xff ; dec dword ptr [rax - 0x77] ; ret
0x000000000065a0e2 : push 2 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006d6932 : push 2 ; retf 0x5b9d
0x0000000000649ff6 : push 3 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007bf9af : push 3 ; test dword ptr [rcx], eax ; ret
0x000000000068dc55 : push 4 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007227ee : push 4 ; ret 0xffd7
0x00000000007eed96 : push 4 ; ret 3
0x0000000000684cb2 : push 7 ; add al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x000000000074a659 : push 8 ; add al, dh ; sbb edi, ecx ; jmp rax
0x00000000005e90dc : push 9 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000005e90c8 : push 9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000063dc6b : push 9 ; add byte ptr [rax - 0x7d], cl ; cli ; add cl, byte ptr [rax - 0x77] ; ret
0x0000000000722214 : push gs ; retf -0x1e54
0x000000000073d71f : push qword ptr [rax + 0x1000044f] ; jmp rax
0x000000000074148f : push qword ptr [rax + 0x1000058f] ; adc bh, ah ; jmp rax
0x000000000074705f : push qword ptr [rax + 0x10000771] ; push rax ; hlt ; jmp rax
0x00000000007471a7 : push qword ptr [rax + 0x10000777] ; jo 0x7471ab ; call rax
0x00000000007369ff : push qword ptr [rax + 0x12000236] ; add edx, edx ; jmp rax
0x000000000073833f : push qword ptr [rax + 0x180002ae] ; fstp st(4), st(0) ; call rax
0x0000000000744c57 : push qword ptr [rax + 0x1a0006a9] ; stosd dword ptr [rdi], eax ; out dx, al ; call rax
0x00000000007387b7 : push qword ptr [rax + 0x1c0002c5] ; pop rdx ; salc ; call rax
0x000000000073e1ef : push qword ptr [rax + 0x20000484] ; ret
0x0000000000749927 : push qword ptr [rax + 0x2000082e] ; ret 0xfff7
0x000000000074a6c7 : push qword ptr [rax + 0x2000086c] ; and bh, cl ; call rax
0x0000000000735457 : push qword ptr [rax + 0x20001cf] ; xchg bh, cl ; call rax
0x000000000073569f : push qword ptr [rax + 0x20001da] ; leave ; iretd ; call rax
0x0000000000738c7f : push qword ptr [rax + 0x280002dc] ; jrcxz 0x738c65 ; call rax
0x0000000000736dff : push qword ptr [rax + 0x2c000248] ; cmp edx, edx ; call rax
0x0000000000736b4f : push qword ptr [rax + 0x2e00023c] ; adc al, 0xd2 ; call rax
0x0000000000736caf : push qword ptr [rax + 0x32000242] ; and edx, edx ; call rax
0x0000000000738787 : push qword ptr [rax + 0x320002c4] ; salc ; jmp rax
0x00000000007390e7 : push qword ptr [rax + 0x3c0002f1] ; lodsd eax, dword ptr [rsi] ; xlatb ; jmp rax
0x000000000073fdf7 : push qword ptr [rax + 0x40000519] ; or ch, ah ; jmp rax
0x0000000000749f87 : push qword ptr [rax + 0x4000084c] ; scasd eax, dword ptr [rdi] ; clc ; call rax
0x000000000073a2c7 : push qword ptr [rax + 0x48000348] ; out -0x26, eax ; call rax
0x0000000000737667 : push qword ptr [rax + 0x4a000271] ; cmp al, 0xd3 ; jmp rax
0x000000000073a3a7 : push qword ptr [rax + 0x4d] ; add eax, dword ptr [rax] ; retf -0x24bc
0x00000000007367f7 : push qword ptr [rax + 0x5400022d] ; loope 0x7367d8 ; call rax
0x00000000007428ef : push qword ptr [rax + 0x540005f8] ; or edx, ebp ; call rax
0x000000000074a1e7 : push qword ptr [rax + 0x55] ; or byte ptr [rax], al ; nop ; retf -8
0x000000000073840f : push qword ptr [rax + 0x580002b2] ; sub ch, dl ; call rax
0x0000000000744baf : push qword ptr [rax + 0x5a0006a6] ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; jmp rax
0x0000000000734987 : push qword ptr [rax + 0x5e00019b] ; adc esi, ecx ; call rax
0x0000000000739057 : push qword ptr [rax + 0x5e0002ee] ; test edi, edx ; jmp rax
0x0000000000739977 : push qword ptr [rax + 0x5e000318] ; jp 0x73995f ; jmp rax
0x000000000073cfff : push qword ptr [rax + 0x6000042e] ; jge 0x73cfef ; call rax
0x0000000000745e3f : push qword ptr [rax + 0x60000719] ; jmp rax
0x000000000074441f : push qword ptr [rax + 0x6000683] ; adc dh, ch ; call rax
0x0000000000743507 : push qword ptr [rax + 0x633] ; xchg bl, ch ; jmp rax
0x0000000000733c37 : push qword ptr [rax + 0x640003d5] ; or al, 0xcd ; jmp rax
0x0000000000735967 : push qword ptr [rax + 0x660001e7] ; add eax, edx ; call rax
0x000000000073dc17 : push qword ptr [rax + 0x67] ; add al, 0 ; adc byte ptr [rax - 0x1f], dl ; jmp rax
0x0000000000738c47 : push qword ptr [rax + 0x6a0002db] ; loopne 0x738c2d ; call rax
0x000000000074462f : push qword ptr [rax + 0x6e00068d] ; out dx, al ; call rax
0x00000000007457b7 : push qword ptr [rax + 0x6e5] ; retf
0x000000000073f877 : push qword ptr [rax + 0x700004fc] ; and esp, esp ; call rax
0x000000000074a95f : push qword ptr [rax + 0x70000876] ; stc ; call rax
0x00000000007436ef : push qword ptr [rax + 0x7200063c] ; test al, 0xeb ; jmp rax
0x0000000000685ed5 : push qword ptr [rax + rdi] ; add byte ptr [rbx + 0x5d], bl ; pop r14 ; ret
0x0000000000744d97 : push qword ptr [rax - 0x11fff951] ; fucomi st(6) ; call rax
0x0000000000737bd7 : push qword ptr [rax - 0x15fffd75] ; loop 0x737bba ; call rax
0x000000000073f51f : push qword ptr [rax - 0x16] ; add al, 0 ; nop ; ret
0x0000000000744847 : push qword ptr [rax - 0x1dfff969] ; jno 0x744845 ; call rax
0x000000000073773f : push qword ptr [rax - 0x1dfffd8b] ; push 0xd3 ; jmp rax
0x0000000000738ddf : push qword ptr [rax - 0x1e] ; add al, byte ptr [rax] ; retf -0x290f
0x0000000000736c6f : push qword ptr [rax - 0x23fffdbf] ; and edx, edx ; call rax
0x0000000000736c2f : push qword ptr [rax - 0x23fffdc0] ; and dl, dl ; call rax
0x0000000000737a0f : push qword ptr [rax - 0x29fffd7d] ; ret 0xffd3
0x00000000007448f7 : push qword ptr [rax - 0x2dfff966] ; jns 0x7448f5 ; call rax
0x000000000073a4a7 : push qword ptr [rax - 0x2dfffcae] ; mov cl, 0xdb ; call rax
0x000000000073752f : push qword ptr [rax - 0x2dfffd95] ; sbb ebx, edx ; jmp rax
0x0000000000735897 : push qword ptr [rax - 0x37fffe1d] ; iretd ; jmp rax
0x000000000073a4df : push qword ptr [rax - 0x39fffcad] ; mov dh, 0xdb ; call rax
0x0000000000733daf : push qword ptr [rax - 0x3b] ; add al, 0 ; ret 0xcd13
0x00000000007358f7 : push qword ptr [rax - 0x3bfffe1b] ; sti ; iretd ; jmp rax
0x0000000000735257 : push qword ptr [rax - 0x3bfffe3b] ; xor ecx, edi ; jmp rax
0x000000000074b50f : push qword ptr [rax - 0x3ffff758] ; in eax, dx ; stc ; jmp rax
0x00000000007468ef : push qword ptr [rax - 0x3ffff8b6] ; jns 0x7468f2 ; call rax
0x00000000007468ee : push qword ptr [rax - 0x3ffff8b6] ; jns 0x7468f3 ; call rax
0x0000000000745db7 : push qword ptr [rax - 0x3ffff8ea] ; pop rbx ; jmp rax
0x0000000000744667 : push qword ptr [rax - 0x3ffff972] ; out dx, al ; jmp rax
0x000000000073a447 : push qword ptr [rax - 0x47fffcb0] ; mov ebx, ebx ; jmp rax
0x0000000000738a6f : push qword ptr [rax - 0x47fffd2e] ; lodsb al, byte ptr [rsi] ; salc ; call rax
0x0000000000738437 : push qword ptr [rax - 0x4d] ; add al, byte ptr [rax] ; retf -0x2abf
0x0000000000746c9f : push qword ptr [rax - 0x4ffff8a1] ; or esp, esi ; call rax
0x0000000000739b67 : push qword ptr [rax - 0x53fffcde] ; fstp st(0) ; jmp rax
0x0000000000737977 : push qword ptr [rax - 0x57fffd80] ; mov bl, 0xd3 ; jmp rax
0x0000000000737d67 : push qword ptr [rax - 0x59fffd6e] ; not ebx ; call rax
0x000000000074b41f : push qword ptr [rax - 0x5ffff75d] ; iretd ; stc ; jmp rax
0x000000000073cd87 : push qword ptr [rax - 0x5ffffbdf] ; cmp al, ah ; jmp rax
0x000000000073576f : push qword ptr [rax - 0x65fffe22] ; out 0xcf, al ; call rax
0x0000000000739a0f : push qword ptr [rax - 0x67fffce5] ; mov bl, al ; jmp rax
0x00000000007348a7 : push qword ptr [rax - 0x69] ; add dword ptr [rax], eax ; retf -0x31fe
0x000000000074a07f : push qword ptr [rax - 0x6ffff7b1] ; mov bh, 0xf8 ; jmp rax
0x0000000000747f87 : push qword ptr [rax - 0x6ffff845] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rax
0x00000000007471ff : push qword ptr [rax - 0x6ffff887] ; mov dh, ah ; call rax
0x00000000007359a7 : push qword ptr [rax - 0x6ffffe18] ; add edx, eax ; call rax
0x0000000000744c8f : push qword ptr [rax - 0x77fff956] ; mov ch, 0xee ; call rax
0x000000000073e1df : push qword ptr [rax - 0x7c] ; add al, 0 ; nop ; ret 0xffe1
0x0000000000734927 : push qword ptr [rax - 0x7fffe67] ; or esi, ecx ; jmp rax
0x000000000074349f : push qword ptr [rax - 0x7ffff9cf] ; jle 0x74349a ; jmp rax
0x000000000074171f : push qword ptr [rax - 0x7ffffa66] ; cmp al, 0xe7 ; jmp rax
0x0000000000737c17 : push qword ptr [rax - 0x7ffffd74] ; in eax, -0x2d ; call rax
0x00000000007386e7 : push qword ptr [rax - 0xbfffd3f] ; salc ; jmp rax
0x0000000000735e27 : push qword ptr [rax - 0xbfffe02] ; retf
0x000000000073735f : push qword ptr [rax - 0xdfffd9e] ; loope 0x737341 ; jmp rax
0x000000000074616f : push qword ptr [rax - 0xffff8d9] ; movsb byte ptr [rdi], byte ptr [rsi] ; call rax
0x0000000000741fb7 : push qword ptr [rax - 0xffffa3e] ; loop 0x741fae ; jmp rax
0x00000000007410af : push qword ptr [rax - 0xffffa88] ; test esi, esp ; call rax
0x000000000073364b : push qword ptr [rax] ; add dl, bh ; call rax
0x00000000005a8c38 : push qword ptr [rax] ; ret
0x00000000007386ff : push qword ptr [rax] ; ret 2
0x000000000074517f : push qword ptr [rax] ; ret 6
0x000000000073eea7 : push qword ptr [rax] ; retf
0x0000000000733c07 : push qword ptr [rax] ; retf 3
0x0000000000737a2f : push qword ptr [rax] ; test byte ptr [rdx], al ; add dh, al ; ret
0x00000000006c8f98 : push qword ptr [rbp + 0x39] ; ret
0x0000000000668fd2 : push qword ptr [rbp + 0xb] ; ret
0x00000000006a0802 : push qword ptr [rbp + 0xb] ; xor eax, eax ; ret
0x00000000006c7bb2 : push qword ptr [rbp + 1] ; ret
0x000000000065bdf5 : push qword ptr [rbp + 6] ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000006c831b : push qword ptr [rbp + rax + 0x48] ; add esp, 8 ; ret
0x00000000006cb872 : push qword ptr [rbp + rax + 0x48] ; lea eax, dword ptr [rdi + 8] ; ret
0x00000000006cb672 : push qword ptr [rbp + rax + 0x48] ; lea eax, dword ptr [rdi + rsi*8] ; ret
0x00000000006cb862 : push qword ptr [rbp + rax + 0x48] ; lea eax, dword ptr [rdi - 8] ; ret
0x000000000068e6e0 : push qword ptr [rbp + rax + 0x5b] ; ret
0x0000000000674762 : push qword ptr [rbp + rax - 0x18] ; cli ; ret 0
0x00000000006446f4 : push qword ptr [rbp + rax - 0x18] ; ret 0xe84b
0x000000000052fb16 : push qword ptr [rbp + rax - 0x18] ; ret 0xff73
0x00000000005594d6 : push qword ptr [rbp + rax - 0x18] ; ret 0xffe7
0x000000000050ca26 : push qword ptr [rbp + rax - 0x18] ; ret 0xffed
0x0000000000642deb : push qword ptr [rbp + rax - 0x18] ; retf
0x000000000066dd92 : push qword ptr [rbp + rax - 0x18] ; retf 0x12c
0x00000000006b2258 : push qword ptr [rbp + rcx - 0x75] ; add eax, 0x3509cb ; ret
0x00000000006a471f : push qword ptr [rbp - 0x12] ; fstp st(1) ; ret
0x00000000006089bf : push qword ptr [rbp - 0x12] ; ret
0x00000000006ce4e2 : push qword ptr [rbp - 0x1d] ; mov dword ptr [rsi], eax ; ret
0x00000000006c70bd : push qword ptr [rbp - 0x31] ; pop rbx ; ret
0x00000000005296c1 : push qword ptr [rbx + 0x15] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000733593 : push qword ptr [rbx + 0x21fff9ea] ; stc ; call qword ptr [rsi]
0x00000000006c97a9 : push qword ptr [rbx + rbx + 0x48] ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000526b72 : push qword ptr [rbx + rcx + 0x39] ; ja 0x526b91 ; setge al ; ret
0x0000000000590942 : push qword ptr [rbx + rcx + 0x39] ; ja 0x590961 ; setge al ; ret
0x00000000005a4b22 : push qword ptr [rbx + rcx + 0x39] ; ja 0x5a4b41 ; setge al ; ret
0x00000000007fad2c : push qword ptr [rcx + rax + 0x65d832] ; retf
0x00000000006c4977 : push qword ptr [rcx + rax*2 - 0x7d] ; call qword ptr [rsi]
0x00000000006c82d4 : push qword ptr [rcx + rbx + 0x48] ; add esp, 8 ; ret
0x000000000056bc12 : push qword ptr [rcx] ; fild dword ptr [rbx + 0x15ff01f5] ; ret 0x496c
0x0000000000575e8d : push qword ptr [rcx] ; in eax, dx ; xor ebx, 1 ; call qword ptr [rip + 0x48ca47]
0x0000000000525c01 : push qword ptr [rcx] ; ror byte ptr [rax - 0x77], cl ; clc ; pop rbx ; ret
0x0000000000525c11 : push qword ptr [rcx] ; ror byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000006be7f6 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000656bd3 : push qword ptr [rcx] ; sar byte ptr [rcx], cl ; ret
0x000000000054391d : push qword ptr [rcx] ; shr al, 0x2b ; ret 0x13
0x00000000005a3809 : push qword ptr [rcx] ; shr al, 0x3f ; ret
0x00000000005c30f3 : push qword ptr [rcx] ; shr al, 0x55 ; retf 0xb
0x00000000005c2fe0 : push qword ptr [rcx] ; shr al, 0x68 ; retf
0x00000000005c2fb5 : push qword ptr [rcx] ; shr al, 0x93 ; retf
0x00000000005b3878 : push qword ptr [rcx] ; shr al, 0xd0 ; ret 0xc
0x00000000005c304b : push qword ptr [rcx] ; shr al, 0xfd ; retf 0xb
0x0000000000769403 : push qword ptr [rdi + 0x4000008] ; ret
0x0000000000407624 : push qword ptr [rdi + rbp*8 - 0x18] ; ret 0xc1e
0x00000000007e76ee : push qword ptr [rip + 0x36af05] ; retf
0x00000000007335ff : push qword ptr [rsi + 0x7ffff9fa] ; cli ; stc ; jmp rdx
0x00000000006ca077 : push qword ptr [rsi + rax + 0x48] ; add esp, 0x40 ; pop rbx ; ret
0x00000000006b227d : push qword ptr [rsi + rax - 0x75] ; add eax, 0x3509a6 ; ret
0x000000000057123d : push qword ptr [rsi + rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000524463 : push qword ptr [rsi - 0x76b7ffeb] ; ret
0x00000000006c9b99 : push qword ptr [rsp + rcx + 0x48] ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000745e3d : push qword ptr gs:[rax + 0x60000719] ; jmp rax
0x00000000005051ea : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000006ab6b7 : push r8 ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000632dc1 : push r8 ; mov qword ptr [rdi + 0x40], rax ; ret
0x00000000006ab6c2 : push r8 ; ret
0x00000000006aaa7c : push r8 ; sete al ; ret
0x0000000000736227 : push rax ; adc al, byte ptr [rdx] ; add byte ptr [rdx - 0x2f], dh ; call qword ptr [rax]
0x00000000006a42a6 : push rax ; adc byte ptr [rax + 0x39], cl ; ret 0x974
0x00000000006a460a : push rax ; adc byte ptr [rax + 0x39], cl ; ret 0xe775
0x00000000006168fd : push rax ; adc byte ptr [rax - 0x75], cl ; fmul st(1) ; ret
0x000000000052223d : push rax ; adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xc], cl ; ret
0x00000000006a89cb : push rax ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000519eff : push rax ; adc byte ptr [rsi + 0xd], bh ; add edx, 1 ; ret
0x0000000000742daf : push rax ; adc byte ptr [rsi], al ; add ah, cl ; shr edx, cl ; call qword ptr [rax]
0x00000000004517a9 : push rax ; adc cl, cl ; ret
0x0000000000742de7 : push rax ; adc dword ptr [rsi], eax ; add byte ptr [rax], ah ; fsubr st(2) ; call qword ptr [rax]
0x00000000007b0a00 : push rax ; adc ebp, esi ; call qword ptr [rdx]
0x0000000000775a60 : push rax ; adc ebx, esp ; jmp qword ptr [rax]
0x0000000000748d7c : push rax ; adc edi, esi ; call rax
0x000000000074b61c : push rax ; adc edx, edi ; call rax
0x000000000073d00f : push rax ; add al, 0 ; add byte ptr [rsi - 0x20], bh ; jmp qword ptr [rax]
0x00000000007907f5 : push rax ; add al, 0 ; call 0x2378ea63
0x0000000000790795 : push rax ; add al, 0 ; mov byte ptr [rax - 0x1e], ah ; jmp qword ptr [rdx]
0x00000000007907dd : push rax ; add al, 0 ; shl byte ptr [rax - 0x1e], 1 ; jmp qword ptr [rbx]
0x00000000004fd0d6 : push rax ; add al, 0x8b ; add byte ptr [rcx], bh ; ret 0x8c0f
0x000000000055c0ee : push rax ; add al, 0x8b ; or byte ptr [rcx], bh ; retf -0x72f1
0x0000000000736c7f : push rax ; add al, byte ptr [r8] ; and r10b, dl ; call qword ptr [rax]
0x000000000073c6df : push rax ; add al, byte ptr [rax + rax] ; adc byte ptr [rax - 0x21], bh ; call qword ptr [rax]
0x0000000000736c3f : push rax ; add al, byte ptr [rax] ; cld ; and dl, dl ; call qword ptr [rax]
0x0000000000736e0f : push rax ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp edx, edx ; call qword ptr [rax]
0x00000000004ffb70 : push rax ; add al, ch ; mov ebx, 0x89001819 ; ret
0x000000000074b534 : push rax ; add bh, dl ; jmp qword ptr [rax]
0x00000000006fc4c8 : push rax ; add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x6f
0x00000000005051eb : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000065e77a : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000007c6196 : push rax ; add byte ptr [rax], al ; ret 0x502
0x000000000067495c : push rax ; add byte ptr [rbp + 0x72], ah ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x4388
0x0000000000795430 : push rax ; add ch, ah ; call rsp
0x00000000004f8905 : push rax ; add cl, ch ; imul edi, esi, -1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000733648 : push rax ; add dl, bh ; push qword ptr [rax] ; add dl, bh ; call rax
0x000000000053b1ba : push rax ; add dword ptr [rax + 0x29], ecx ; retf -0x3815
0x000000000053d272 : push rax ; add dword ptr [rax + 0x29], ecx ; retf -0x4915
0x000000000053dd92 : push rax ; add dword ptr [rax + 0x29], ecx ; retf -0x6a15
0x000000000053aeeb : push rax ; add dword ptr [rax + 0x29], ecx ; retf -0x72b3
0x000000000053c49a : push rax ; add dword ptr [rax + 0x29], ecx ; retf -0x72b7
0x000000000053b339 : push rax ; add dword ptr [rax + 0x29], ecx ; retf -0x72b8
0x000000000053bec2 : push rax ; add dword ptr [rax + 0x29], ecx ; retf -0x7d15
0x00000000005bfe24 : push rax ; add dword ptr [rax + 0x29], ecx ; retf 0x144
0x00000000004f4762 : push rax ; add dword ptr [rax + 0x29], ecx ; retf 0x145
0x0000000000677598 : push rax ; add dword ptr [rax + 0x69], ecx ; ret 0xca00
0x0000000000513a7f : push rax ; add dword ptr [rax + 0x69], ecx ; rol byte ptr [rax], cl ; retf 0x3b9a
0x0000000000691836 : push rax ; add dword ptr [rax], eax ; add rsp, 8 ; ret
0x00000000005fe459 : push rax ; add dword ptr [rbp + 0x39], eax ; ret 0x8c0f
0x000000000056e7a7 : push rax ; add dword ptr [rbp + 1], eax ; ret 0x8b41
0x000000000065d2d1 : push rax ; add dword ptr [rcx], ebp ; retf 0xbeb
0x0000000000521fdf : push rax ; add dword ptr [rdi], 1 ; ret
0x000000000074442f : push rax ; add dword ptr [rsi], 0 ; adc al, 0x12 ; out dx, al ; jmp qword ptr [rax]
0x00000000004c37e9 : push rax ; add eax, 0x8fbf0000 ; ret 0x6e
0x0000000000740839 : push rax ; add eax, 0xe5d2c000 ; call rax
0x00000000007a082d : push rax ; add eax, 0xe894e000 ; call qword ptr [rcx]
0x000000000073a82f : push rax ; add eax, dword ptr [eax] ; push rax ; retf -0x24
0x000000000073a451 : push rax ; add eax, dword ptr [rax] ; call 0x11737fe9
0x000000000073a421 : push rax ; add eax, dword ptr [rax] ; xchg eax, esp ; xchg ebx, ebx ; jmp qword ptr [rax]
0x00000000005924c7 : push rax ; add eax, ebp ; ret 0x10f5
0x000000000073a38f : push rax ; add r8, qword ptr [rax] ; in al, dx ; cmp ebx, ebx ; jmp qword ptr [rax]
0x000000000074071f : push rax ; add rax, -0x1a43f000 ; call qword ptr [rax]
0x00000000006ab6b8 : push rax ; add rsp, 0x30 ; pop rbx ; ret
0x00000000006678f5 : push rax ; and al, 0x83 ; ret 0x8901
0x0000000000499842 : push rax ; and al, byte ptr [rax] ; leave ; ret
0x000000000062c2ba : push rax ; and dh, dh ; ret 0x7501
0x000000000077b7b0 : push rax ; and ebx, ebp ; call qword ptr [rbx]
0x000000000077b7e0 : push rax ; and ebx, ebp ; jmp qword ptr [rdx]
0x0000000000652c33 : push rax ; and ecx, dword ptr [rax - 0x77] ; ret 0x13e8
0x00000000005a8ac7 : push rax ; call 0x40554b
0x00000000005a8ad8 : push rax ; call 0x405561
0x0000000000745cc4 : push rax ; call qword ptr [rax]
0x0000000000660437 : push rax ; call rdx
0x00000000007428ff : push rax ; clc ; add eax, 0xea09f800 ; call qword ptr [rax]
0x00000000005a73bd : push rax ; cli ; jo 0x5a73c8 ; mov rdi, rbx ; call rax
0x00000000005a73db : push rax ; cli ; jo 0x5a73e6 ; mov rdi, rbx ; call rax
0x00000000005a73f9 : push rax ; cli ; jo 0x5a7404 ; mov rdi, rbx ; call rax
0x00000000005a7890 : push rax ; cli ; jo 0x5a7898 ; call rax
0x00000000005a7b20 : push rax ; cli ; jo 0x5a7b28 ; call rax
0x00000000005a7b90 : push rax ; cli ; jo 0x5a7b98 ; call rax
0x00000000005a7d8b : push rax ; cli ; jo 0x5a7d96 ; mov rdi, rbx ; call rax
0x00000000005a7db0 : push rax ; cli ; jo 0x5a7dbb ; mov rdi, rbx ; call rax
0x00000000005a7dd6 : push rax ; cli ; jo 0x5a7de1 ; mov rdi, rbx ; call rax
0x00000000005ad104 : push rax ; cli ; jo 0x5ad10f ; mov rdi, r15 ; call rax
0x0000000000747bac : push rax ; cmc ; jmp qword ptr [rax]
0x000000000050b0c1 : push rax ; cmc ; outsb dx, byte ptr [rsi] ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000066d126 : push rax ; cmp byte ptr [rcx - 0x75], al ; cmp byte ptr [r9], r15b ; ret 0x107d
0x0000000000551563 : push rax ; cmp dh, dh ; ret 0xf01
0x00000000007a4d20 : push rax ; cmp ebp, ebx ; call qword ptr [rbx]
0x0000000000746504 : push rax ; cmp esi, ebx ; call qword ptr [rax]
0x00000000006aaa79 : push rax ; cmp qword ptr [rdi + 0x50], rax ; sete al ; ret
0x000000000074b4df : push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; or byte ptr [rax], al ; jo 0x74b4d0 ; stc ; jmp qword ptr [rax]
0x00000000005fffb2 : push rax ; dec dword ptr [rax - 0x7d] ; ret 0x8901
0x00000000006b62bf : push rax ; dec dword ptr [rcx - 0x7d] ; ret 0x4c02
0x00000000007bbd60 : push rax ; div eax ; call qword ptr [rbx]
0x00000000007352ef : push rax ; enter 1, -0x40 ; pop rdi ; iretd ; jmp qword ptr [rax]
0x00000000007482d7 : push rax ; enter 7, -0x40 ; retf -0xb
0x00000000007455cf : push rax ; fadd dword ptr [rsi] ; add al, al ; xchg edi, ebp ; jmp qword ptr [rax]
0x00000000007499e4 : push rax ; fcompi st(7) ; call rax
0x000000000074a3ac : push rax ; fdiv st(0), st(0) ; jmp rax
0x000000000073577f : push rax ; fiadd word ptr [rcx] ; add ah, al ; out 0xcf, al ; call qword ptr [rax]
0x00000000004f84c4 : push rax ; fisubr word ptr [rsi] ; mov rdi, rbx ; call rax
0x00000000007455ef : push rax ; fld dword ptr [rsi] ; add al, ah ; mov edi, gs ; jmp qword ptr [rax]
0x000000000073bf70 : push rax ; fld qword ptr [rbx] ; add byte ptr [rax], ah ; ret
0x0000000000747065 : push rax ; hlt ; jmp rax
0x00000000007374d7 : push rax ; imul eax, dword ptr [rdx], 0xd30eb800 ; jmp qword ptr [rax]
0x0000000000748514 : push rax ; in al, dx ; cmc ; call qword ptr [rax]
0x000000000073cb94 : push rax ; in eax, -0x21 ; jmp rax
0x00000000007ac868 : push rax ; in eax, dx ; call qword ptr [rax]
0x000000000074278f : push rax ; int1 ; add eax, 0xe9bd6600 ; call qword ptr [rax]
0x000000000073cf6c : push rax ; ja 0x73cf52 ; jmp rax
0x00000000007419fc : push rax ; ja 0x7419e9 ; jmp rax
0x00000000007441e7 : push rax ; ja 0x7441f9 ; add al, dl ; mov ebp, gs ; jmp qword ptr [rax]
0x000000000054d0ec : push rax ; jbe 0x54d10d ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004d391c : push rax ; je 0x4d3940 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000773c30 : push rax ; je 0x773c11 ; jmp qword ptr [rdx]
0x000000000073700c : push rax ; jge 0x736fe4 ; call rax
0x00000000007472cf : push rax ; jge 0x7472e2 ; add byte ptr [rax], dl ; mov ah, 0xf4 ; jmp qword ptr [rax]
0x00000000004b47ec : push rax ; jmp qword ptr [rcx]
0x0000000000746655 : push rax ; jmp rax
0x000000000073f7ac : push rax ; jmp rbx
0x00000000006d4c33 : push rax ; jne 0x6d4c2c ; xor eax, eax ; add rsp, 8 ; ret
0x00000000006d4c93 : push rax ; jne 0x6d4c8c ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000773b20 : push rax ; jno 0x773b01 ; jmp rcx
0x0000000000747257 : push rax ; jnp 0x74726a ; add byte ptr [rax - 0x5c], dl ; hlt ; call qword ptr [rax]
0x0000000000646c7c : push rax ; jns 0x646c8c ; add byte ptr [rax - 0x77], cl ; ret
0x000000000060351c : push rax ; js 0x60352d ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007476ff : push rax ; lea eax, dword ptr [rdi] ; add byte ptr [rcx + rbx*8 - 0xc], bl ; call qword ptr [rax]
0x0000000000738df7 : push rax ; loop 0x738e05 ; add byte ptr [rsi - 0xd], bh ; salc ; jmp qword ptr [rax]
0x0000000000749a14 : push rax ; loop 0x749a11 ; call rax
0x0000000000738dbf : push rax ; loope 0x738dcd ; add byte ptr [rsi - 0x10], ch ; salc ; call qword ptr [rax]
0x00000000007405c4 : push rax ; mov ah, ch ; jmp rax
0x0000000000749ffc : push rax ; mov al, 0xf8 ; jmp qword ptr [rax]
0x00000000007498dc : push rax ; mov bh, 0xf7 ; jmp qword ptr [rax]
0x0000000000774ce0 : push rax ; mov bl, 0xdb ; call qword ptr [rax]
0x000000000073c784 : push rax ; mov bl, bh ; jmp rax
0x000000000073528f : push rax ; mov byte ptr [rcx], 0 ; jb 0x7352e8 ; iretd ; jmp qword ptr [rax]
0x00000000007387ff : push rax ; mov byte ptr [rdx], 0 ; ret 0xd667
0x00000000007384a7 : push rax ; mov ch, 2 ; add ah, ah ; test ebp, edx ; jmp qword ptr [rax]
0x000000000074b67f : push rax ; mov cl, 8 ; add byte ptr [rax + 0x26], dh ; cli ; call qword ptr [rax]
0x000000000057337c : push rax ; mov dl, 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007fa0ac : push rax ; mov dword ptr [rcx], 0xbb055294 ; ret
0x0000000000737be7 : push rax ; mov eax, dword ptr [rdx] ; add dl, cl ; jrcxz 0x737bca ; call qword ptr [rax]
0x00000000006aa88c : push rax ; mov ebp, ss ; dec dword ptr [rax - 0x77] ; ret
0x0000000000745067 : push rax ; mov ebx, 0x22200006 ; out dx, eax ; jmp qword ptr [rax]
0x000000000073f314 : push rax ; mov ebx, fs ; call rax
0x00000000006251c0 : push rax ; mov ecx, 0xc9900005 ; ret
0x00000000005140f0 : push rax ; mov edx, 0x6f2110 ; mov rdi, rbx ; call rax
0x000000000066078f : push rax ; mov esi, 1 ; call rax
0x000000000062cf76 : push rax ; mov esi, 1 ; mov rdi, r13 ; call rax
0x0000000000780f60 : push rax ; mov esi, ds ; jmp qword ptr [rdx]
0x0000000000632dc2 : push rax ; mov qword ptr [rdi + 0x40], rax ; ret
0x000000000065e1e3 : push rax ; mov qword ptr [rdi + 0x40], rdx ; mov qword ptr [rdi + 0x48], rcx ; ret
0x0000000000592dba : push rax ; mov rdx, rax ; call r8
0x0000000000660445 : push rax ; mov rsi, rax ; call rdx
0x00000000004d9a94 : push rax ; mov ss, word ptr [rdx] ; call rax
0x000000000074ae4f : push rax ; mov word ptr [rax], cs ; add byte ptr [rax - 0x71], dh ; stc ; jmp qword ptr [rax]
0x0000000000737c27 : push rax ; mov word ptr [rdx], es ; add ah, ah ; in eax, -0x2d ; call qword ptr [rax]
0x000000000074725c : push rax ; movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; call qword ptr [rax]
0x0000000000747dfc : push rax ; movsxd rsi, ebp ; call rax
0x0000000000745e1c : push rax ; movsxd rsi, edx ; jmp qword ptr [rax]
0x000000000073f82c : push rax ; or ah, ah ; call qword ptr [rax]
0x000000000073faf7 : push rax ; or al, byte ptr [rip - 0x1b512000] ; jmp qword ptr [rax]
0x00000000005f579f : push rax ; or byte ptr [rax - 0x75], cl ; add byte ptr [rbp - 0x77], cl ; ret 0x894d
0x000000000066cec6 : push rax ; or byte ptr [rax - 0x77], cl ; jo 0x66cee2 ; ret
0x000000000066cee4 : push rax ; or byte ptr [rax - 0x77], cl ; jo 0x66cf03 ; mov qword ptr [rax], rcx ; ret
0x000000000052225d : push rax ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xc], cl ; ret
0x00000000006b372d : push rax ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000047e2e0 : push rax ; or byte ptr [rbx - 0x76b60bbb], cl ; retf -0x3977
0x0000000000523eec : push rax ; or byte ptr [rbx], bl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000413710 : push rax ; or cl, cl ; ret
0x000000000078fc00 : push rax ; or edx, esp ; jmp qword ptr [rdx]
0x0000000000735977 : push rax ; out 1, eax ; add byte ptr [rax], al ; add dl, al ; call qword ptr [rax]
0x00000000007b2a40 : push rax ; out dx, al ; out dx, al ; jmp qword ptr [rcx]
0x0000000000742727 : push rax ; out dx, eax ; add eax, 0xe9b43a00 ; call qword ptr [rax]
0x0000000000745264 : push rax ; out dx, eax ; call qword ptr [rax]
0x000000000066af2c : push rax ; outsb dx, byte ptr [rsi] ; cmp dword ptr [rax], eax ; ret
0x0000000000745e94 : push rax ; outsb dx, byte ptr [rsi] ; jmp rax
0x00000000004209f2 : push rax ; pop rbp ; ret
0x000000000040cc27 : push rax ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000450fe4 : push rax ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000532770 : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000005117f6 : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000626d81 : push rax ; pop rbx ; ret
0x0000000000740a17 : push rax ; pop rdx ; add eax, 0xe605f000 ; call qword ptr [rax]
0x00000000007b4f30 : push rax ; pop rdx ; out dx, eax ; call qword ptr [rdi]
0x00000000007466e4 : push rax ; push rbp ; call qword ptr [rax]
0x000000000073a4ef : push rax ; push rbx ; add eax, dword ptr [rax] ; call 0x117380b7
0x0000000000737017 : push rax ; push rdx ; add al, byte ptr [rax] ; scasb al, byte ptr [rdi] ; jge 0x736ff9 ; call qword ptr [rax]
0x0000000000784da0 : push rax ; rcr edi, 1 ; call qword ptr [rbx]
0x0000000000784f60 : push rax ; rcr edi, cl ; call rax
0x0000000000402420 : push rax ; ret
0x00000000005752de : push rax ; ret 0x10
0x00000000005584ec : push rax ; ret 0x17
0x00000000005d50a6 : push rax ; ret 0xa
0x00000000005c237c : push rax ; ret 0xf
0x000000000073b494 : push rax ; ret 0xffdd
0x00000000007bad00 : push rax ; ret 0xfff0
0x0000000000738708 : push rax ; ret 2
0x000000000073bad8 : push rax ; ret 3
0x000000000073ed3f : push rax ; ret 4
0x0000000000748150 : push rax ; ret 7
0x00000000005749de : push rax ; retf
0x0000000000741f54 : push rax ; retf -0x19
0x000000000073a834 : push rax ; retf -0x24
0x00000000006d8e20 : push rax ; retf 0x9f
0x0000000000735330 : push rax ; retf 1
0x0000000000644098 : push rax ; retf 3
0x000000000073ee68 : push rax ; retf 4
0x0000000000742110 : push rax ; retf 5
0x00000000007386c7 : push rax ; rol byte ptr [rdx], 0 ; and al, 0x1b ; salc ; jmp qword ptr [rax]
0x000000000043bc3c : push rax ; sbb cl, ch ; ret
0x0000000000737544 : push rax ; sbb dl, bl ; jmp qword ptr [rax]
0x00000000005f0d8c : push rax ; sbb eax, dword ptr [rcx] ; call rax
0x00000000007392c4 : push rax ; sbb ebx, eax ; jmp qword ptr [rax]
0x00000000007444a4 : push rax ; sbb esi, ebp ; jmp qword ptr [rax]
0x0000000000741b07 : push rax ; scasb al, byte ptr [rdi] ; add eax, 0xe795c000 ; call qword ptr [rax]
0x00000000006aaa7d : push rax ; sete al ; ret
0x000000000066d4c8 : push rax ; sete byte ptr [rip + 0x39be18] ; ret
0x000000000074a9ac : push rax ; stc ; jmp qword ptr [rax]
0x000000000073936f : push rax ; std ; add al, byte ptr [rax] ; pop rsi ; and bl, al ; call qword ptr [rax]
0x000000000073fba8 : push rax ; syscall
0x00000000007497ac : push rax ; test al, 0xf7 ; call rax
0x00000000006bfd1a : push rax ; test al, 1 ; jne 0x6bfd26 ; jmp rax
0x00000000006bfd19 : push rax ; test al, 1 ; jne 0x6bfd27 ; jmp rax
0x00000000006bfdda : push rax ; test al, 1 ; jne 0x6bfde6 ; jmp rax
0x00000000006bfdd9 : push rax ; test al, 1 ; jne 0x6bfde7 ; jmp rax
0x00000000006c03ca : push rax ; test al, 1 ; jne 0x6c03d6 ; jmp rax
0x00000000006c03c9 : push rax ; test al, 1 ; jne 0x6c03d7 ; jmp rax
0x0000000000747c77 : push rax ; test al, 7 ; add al, dl ; push rbp ; cmc ; jmp qword ptr [rax]
0x00000000006c02ba : push rax ; test dl, 1 ; jne 0x6c02cf ; call rdx
0x0000000000735ccf : push rax ; test dword ptr [rcx], 0xd09a0800 ; jmp qword ptr [rax]
0x000000000046fefc : push rax ; test eax, 0x89480023 ; ret
0x0000000000744c67 : push rax ; test eax, 0xab840006 ; out dx, al ; call qword ptr [rax]
0x0000000000734997 : push rax ; wait ; add dword ptr [rax], eax ; xchg eax, esp ; adc esi, ecx ; call qword ptr [rax]
0x0000000000747508 : push rax ; xchg dword ptr [rdi], eax ; add dh, al ; retf
0x00000000007460b4 : push rax ; xchg eax, ecx ; call qword ptr [rax]
0x00000000007b6670 : push rax ; xchg edi, ebp ; call qword ptr [rbx]
0x000000000074f268 : push rax ; xor al, 0xcd ; jmp qword ptr [rax]
0x0000000000660722 : push rax ; xor eax, eax ; test edx, edx ; sete al ; ret
0x00000000007a47f0 : push rax ; xor eax, esi ; call qword ptr [rdx]
0x000000000074517c : push rax ; xor ebp, edi ; push qword ptr [rax] ; ret 6
0x000000000074a824 : push rax ; xor edi, ecx ; call rax
0x000000000065e752 : push rax ; xor rax, rax ; ret
0x0000000000519991 : push rbp ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000056b0cb : push rbp ; adc dword ptr [rax], eax ; nop ; mov rax, qword ptr [rdi + 8] ; ret
0x000000000052bd68 : push rbp ; adc eax, 0xfa834800 ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000502b09 : push rbp ; add al, 0 ; add byte ptr [rcx], bh ; ret 0x8c0f
0x0000000000693d26 : push rbp ; add al, 0x31 ; idiv byte ptr [rcx] ; retf 0x57c
0x000000000068b23b : push rbp ; add al, 0x8b ; add byte ptr [r9], r15b ; ret 0x447d
0x0000000000770c7d : push rbp ; add al, byte ptr [rax] ; mov cl, 0xda ; jmp qword ptr [rdi]
0x00000000004a35c7 : push rbp ; add bh, bh ; ror cl, 1 ; ret
0x000000000068c124 : push rbp ; add byte ptr [rax + 0x63], cl ; retf
0x00000000006cad35 : push rbp ; add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000058bcc8 : push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x000000000052660d : push rbp ; add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x000000000040ddad : push rbp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000750c7d : push rbp ; add byte ptr [rax], al ; retf -0x3243
0x00000000005bab16 : push rbp ; add byte ptr [rcx - 0x77], cl ; in al, 0x39 ; ret 0x6f7e
0x00000000007ea526 : push rbp ; add dword ptr [rax + 0xd], eax ; add byte ptr cs:[rax], al ; outsb dx, byte ptr [rsi] ; ret 0x102
0x0000000000783de4 : push rbp ; add dword ptr [rax], eax ; add byte ptr [rsp + rbp*8], al ; ret
0x00000000005ed2ec : push rbp ; add r15b, dil ; ror cl, 1 ; ret
0x0000000000453792 : push rbp ; and al, byte ptr [rax] ; leave ; ret
0x0000000000620387 : push rbp ; and eax, 0xd0ff003e ; leave ; ret
0x00000000004cc50f : push rbp ; call 0x14cb8751
0x00000000004cc672 : push rbp ; call 0x23c188b4
0x000000000040ef8a : push rbp ; call 0xffffffffc39e4b25
0x000000000040f0f4 : push rbp ; call 0xffffffffc39e4c8f
0x000000000041eaaa : push rbp ; call 0xffffffffc39f4645
0x000000000041ec14 : push rbp ; call 0xffffffffc39f47af
0x000000000042da70 : push rbp ; call 0xffffffffc3a0360b
0x000000000042dbda : push rbp ; call 0xffffffffc3a03775
0x0000000000502cd9 : push rbp ; call 0xffffffffc3d92cfb
0x00000000007466e5 : push rbp ; call qword ptr [rax]
0x0000000000606e70 : push rbp ; call rax
0x00000000007222f6 : push rbp ; cdq ; scasd eax, dword ptr [rdi] ; xlatb ; loopne 0x72228d ; retf 0x5cb0
0x000000000040dbdc : push rbp ; clc ; leave ; ret
0x000000000066ab43 : push rbp ; clc ; mov byte ptr [rax + 0xa01c80], dl ; pop rbp ; ret
0x000000000040d845 : push rbp ; clc ; mov rax, qword ptr [rbp - 8] ; nop ; pop rbp ; ret
0x000000000061d644 : push rbp ; clc ; mov rax, qword ptr [rip + 0x3e529b] ; call rax
0x000000000061ca9a : push rbp ; clc ; mov rax, qword ptr [rip + 0x3e5e45] ; call rax
0x000000000061b60a : push rbp ; clc ; mov rax, qword ptr [rip + 0x3e72d5] ; call rax
0x000000000061b49c : push rbp ; clc ; mov rax, qword ptr [rip + 0x3e7443] ; call rax
0x000000000061ad92 : push rbp ; clc ; mov rax, qword ptr [rip + 0x3e7b4d] ; call rax
0x000000000061acb4 : push rbp ; clc ; mov rax, qword ptr [rip + 0x3e7c2b] ; call rax
0x00000000006188be : push rbp ; clc ; mov rax, qword ptr [rip + 0x3ea021] ; call rax
0x0000000000618222 : push rbp ; clc ; mov rax, qword ptr [rip + 0x3ea6bd] ; call rax
0x00000000005ed2d4 : push rbp ; clc ; mov rax, qword ptr [rip + 0x41560b] ; call rax
0x00000000005eb6c4 : push rbp ; clc ; mov rax, qword ptr [rip + 0x41721b] ; call rax
0x00000000005eb556 : push rbp ; clc ; mov rax, qword ptr [rip + 0x417389] ; call rax
0x00000000005eaee2 : push rbp ; clc ; mov rax, qword ptr [rip + 0x4179fd] ; call rax
0x00000000005eae04 : push rbp ; clc ; mov rax, qword ptr [rip + 0x417adb] ; call rax
0x00000000005e9f3a : push rbp ; clc ; mov rax, qword ptr [rip + 0x4189a5] ; call rax
0x00000000005e83ac : push rbp ; clc ; mov rax, qword ptr [rip + 0x41a533] ; call rax
0x00000000005e823e : push rbp ; clc ; mov rax, qword ptr [rip + 0x41a6a1] ; call rax
0x00000000005e7bca : push rbp ; clc ; mov rax, qword ptr [rip + 0x41ad15] ; call rax
0x00000000005e7aec : push rbp ; clc ; mov rax, qword ptr [rip + 0x41adf3] ; call rax
0x00000000005e0e76 : push rbp ; clc ; mov rax, qword ptr [rip + 0x421a69] ; call rax
0x00000000005e07d6 : push rbp ; clc ; mov rax, qword ptr [rip + 0x422109] ; call rax
0x00000000005d3fd0 : push rbp ; clc ; mov rax, qword ptr [rip + 0x42e90f] ; call rax
0x00000000005d3930 : push rbp ; clc ; mov rax, qword ptr [rip + 0x42efaf] ; call rax
0x00000000004b9376 : push rbp ; clc ; mov rax, qword ptr [rip + 0x549569] ; call rax
0x00000000004b7f9e : push rbp ; clc ; mov rax, qword ptr [rip + 0x54a941] ; call rax
0x00000000004b7e30 : push rbp ; clc ; mov rax, qword ptr [rip + 0x54aaaf] ; call rax
0x00000000004b7782 : push rbp ; clc ; mov rax, qword ptr [rip + 0x54b15d] ; call rax
0x00000000004b76a4 : push rbp ; clc ; mov rax, qword ptr [rip + 0x54b23b] ; call rax
0x00000000004b7110 : push rbp ; clc ; mov rax, qword ptr [rip + 0x54b7cf] ; call rax
0x00000000004b5d38 : push rbp ; clc ; mov rax, qword ptr [rip + 0x54cba7] ; call rax
0x00000000004b5bca : push rbp ; clc ; mov rax, qword ptr [rip + 0x54cd15] ; call rax
0x00000000004b551c : push rbp ; clc ; mov rax, qword ptr [rip + 0x54d3c3] ; call rax
0x00000000004b543e : push rbp ; clc ; mov rax, qword ptr [rip + 0x54d4a1] ; call rax
0x00000000004a35ae : push rbp ; clc ; mov rax, qword ptr [rip + 0x55f331] ; call rax
0x00000000004a21d6 : push rbp ; clc ; mov rax, qword ptr [rip + 0x560709] ; call rax
0x00000000004a2068 : push rbp ; clc ; mov rax, qword ptr [rip + 0x560877] ; call rax
0x00000000004a19ba : push rbp ; clc ; mov rax, qword ptr [rip + 0x560f25] ; call rax
0x00000000004a18dc : push rbp ; clc ; mov rax, qword ptr [rip + 0x561003] ; call rax
0x000000000049f5e2 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5632fd] ; call rax
0x000000000047d0ba : push rbp ; clc ; mov rax, qword ptr [rip + 0x585825] ; call rax
0x0000000000472ee4 : push rbp ; clc ; mov rax, qword ptr [rip + 0x58f9fb] ; call rax
0x0000000000471b0c : push rbp ; clc ; mov rax, qword ptr [rip + 0x590dd3] ; call rax
0x000000000047199e : push rbp ; clc ; mov rax, qword ptr [rip + 0x590f41] ; call rax
0x00000000004712f0 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5915ef] ; call rax
0x0000000000471212 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5916cd] ; call rax
0x000000000046f1d0 : push rbp ; clc ; mov rax, qword ptr [rip + 0x59370f] ; call rax
0x00000000004654d0 : push rbp ; clc ; mov rax, qword ptr [rip + 0x59d40f] ; call rax
0x000000000045cfb6 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5a5929] ; call rax
0x00000000004549fa : push rbp ; clc ; mov rax, qword ptr [rip + 0x5adee5] ; call rax
0x0000000000453622 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5af2bd] ; call rax
0x00000000004534b4 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5af42b] ; call rax
0x0000000000452e06 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5afad9] ; call rax
0x0000000000452d28 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5afbb7] ; call rax
0x000000000045120e : push rbp ; clc ; mov rax, qword ptr [rip + 0x5b16d1] ; call rax
0x000000000045027c : push rbp ; clc ; mov rax, qword ptr [rip + 0x5b2663] ; call rax
0x000000000045010e : push rbp ; clc ; mov rax, qword ptr [rip + 0x5b27d1] ; call rax
0x000000000044fa6c : push rbp ; clc ; mov rax, qword ptr [rip + 0x5b2e73] ; call rax
0x000000000044f98e : push rbp ; clc ; mov rax, qword ptr [rip + 0x5b2f51] ; call rax
0x000000000044c3a0 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5b653f] ; call rax
0x0000000000441e86 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5c0a59] ; call rax
0x0000000000433ace : push rbp ; clc ; mov rax, qword ptr [rip + 0x5cee11] ; call rax
0x0000000000432806 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5d00d9] ; call rax
0x0000000000432698 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5d0247] ; call rax
0x0000000000432024 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5d08bb] ; call rax
0x0000000000431f46 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5d0999] ; call rax
0x000000000042d5f2 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5d52ed] ; call rax
0x000000000042cfc2 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5d591d] ; call rax
0x00000000004244ae : push rbp ; clc ; mov rax, qword ptr [rip + 0x5de431] ; call rax
0x00000000004231e6 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5df6f9] ; call rax
0x0000000000423078 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5df867] ; call rax
0x0000000000422a04 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5dfedb] ; call rax
0x0000000000422926 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5dffb9] ; call rax
0x000000000041e624 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5e42bb] ; call rax
0x000000000041dff4 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5e48eb] ; call rax
0x000000000041503c : push rbp ; clc ; mov rax, qword ptr [rip + 0x5ed8a3] ; call rax
0x0000000000413d74 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5eeb6b] ; call rax
0x0000000000413c06 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5eecd9] ; call rax
0x0000000000413592 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5ef34d] ; call rax
0x00000000004134b4 : push rbp ; clc ; mov rax, qword ptr [rip + 0x5ef42b] ; call rax
0x000000000040eb0c : push rbp ; clc ; mov rax, qword ptr [rip + 0x5f3dd3] ; call rax
0x000000000040e4dc : push rbp ; clc ; mov rax, qword ptr [rip + 0x5f4403] ; call rax
0x000000000040ef34 : push rbp ; clc ; nop ; leave ; ret
0x00000000005d4625 : push rbp ; clc ; nop ; pop rbp ; ret
0x0000000000414305 : push rbp ; clc ; pop rbp ; ret
0x0000000000747c7d : push rbp ; cmc ; jmp qword ptr [rax]
0x000000000065e37b : push rbp ; cmp al, 0x8b ; xor al, 1 ; fidivr dword ptr [rcx] ; ret 0x5589
0x000000000048f201 : push rbp ; cmp byte ptr [rcx - 0x75], al ; cmp al, 0x39 ; ret 0x157c
0x000000000048f183 : push rbp ; cmp byte ptr [rcx - 0x75], al ; cmp al, 0x39 ; ret 0x167c
0x00000000005f3255 : push rbp ; cwde ; mov rax, qword ptr [rip + 0x40f60a] ; call rax
0x00000000005ff421 : push rbp ; dec dword ptr [rax + 0x63] ; ror byte ptr [rax + 0x63], cl ; ret
0x0000000000579a75 : push rbp ; dec dword ptr [rcx + 0x63] ; ret 0x6348
0x0000000000622eac : push rbp ; fcom dword ptr [rax + 0x28c48348] ; pop rbx ; pop rbp ; ret
0x000000000073bae5 : push rbp ; fdivp st(7) ; nop ; ret 3
0x000000000073bad5 : push rbp ; fdivp st(7) ; push rax ; ret 3
0x00000000006433a1 : push rbp ; fild word ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004e81d6 : push rbp ; fmul dword ptr [rax + 0x29] ; ror dword ptr [rax - 0x77], 1 ; retf -0x7eb8
0x000000000043eda0 : push rbp ; fmul dword ptr [rax - 0x75] ; ror byte ptr [r8 + 0x39], 1 ; ret 0x1175
0x0000000000442335 : push rbp ; fmul dword ptr [rax - 0x75] ; ror byte ptr [r8 + 0x39], 1 ; ret 0x775
0x0000000000478ff6 : push rbp ; fmul dword ptr [rax - 0x75] ; ror byte ptr [r8 + 0x39], 1 ; ret 0x7d74
0x0000000000440eb2 : push rbp ; fmul dword ptr [rax - 0x75] ; ror byte ptr [r8 + 0x39], 1 ; ret 0x840f
0x000000000043ed3d : push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000614d7f : push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4819
0x000000000066aa6d : push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x00000000004ae80f : push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4928
0x000000000047b8d1 : push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4d08
0x000000000043bea7 : push rbp ; fmul qword ptr [rax + 0x29] ; retf -0x74b8
0x0000000000440af4 : push rbp ; fmul qword ptr [rax + 0x29] ; retf -0x76b8
0x000000000061a59b : push rbp ; hlt ; mov byte ptr [rax + 0x18], dl ; pop rbp ; ret
0x000000000066ae5d : push rbp ; in al, dx ; nop ; pop rbp ; ret
0x0000000000455acf : push rbp ; in al, dx ; pop rbp ; ret
0x00000000004e0077 : push rbp ; in eax, 0x1d ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000052b48f : push rbp ; je 0x52b4e5 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000423f8f : push rbp ; jmp 0xffffffffd1413ff6
0x0000000000745d65 : push rbp ; jmp qword ptr [rax]
0x00000000007466d5 : push rbp ; jmp rax
0x00000000004876e3 : push rbp ; mov al, 0x8b ; mov r12b, 0x29 ; ret 0xd089
0x000000000047c810 : push rbp ; mov al, 0x8b ; push rbx ; and al, 0x8b ; and byte ptr [r9], dil ; ret 0x538b
0x0000000000464c92 : push rbp ; mov al, 0x8b ; push rbx ; sbb al, 0x8b ; sbb byte ptr [r9], dil ; ret 0x538b
0x00000000004b49ce : push rbp ; mov al, ch ; pop rbp ; retf
0x00000000004a845d : push rbp ; mov byte ptr [rax + 1], cl ; retf -0x7cb8
0x0000000000623bbc : push rbp ; mov byte ptr [rax - 0x75], cl ; add eax, 0x3deca3 ; call rax
0x0000000000615577 : push rbp ; mov byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000005b1d5b : push rbp ; mov byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000429f8f : push rbp ; mov dword ptr [rbp], ebx ; call rax
0x00000000004a6314 : push rbp ; mov eax, 0x29bc458b ; ret 0xd089
0x000000000040d063 : push rbp ; mov eax, 0xc4834890 ; pop rbx ; pop rbp ; ret
0x0000000000498086 : push rbp ; mov esp, 0x29c0458b ; ret 0xd089
0x0000000000487f81 : push rbp ; mov esp, 0x39b8458b ; ret 0x147e
0x0000000000408b0a : push rbp ; mov rbp, rsp ; call rax
0x000000000040ba66 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000066ac3e : push rbp ; mov rbp, rsp ; nop ; pop rbp ; ret
0x00000000004e3cbe : push rbp ; mov word ptr [rax + 0x29], cs ; ror dword ptr [rax - 0x77], 1 ; retf -0x7eb8
0x00000000007f14bf : push rbp ; mov word ptr [rdi], es ; add byte ptr [rbp + 0x2e02], bl ; retf
0x000000000053b30e : push rbp ; or byte ptr [rax - 0x77], cl ; ret
0x000000000074a201 : push rbp ; or byte ptr [rax], al ; adc bl, cl ; clc ; jmp rax
0x000000000074a1e9 : push rbp ; or byte ptr [rax], al ; nop ; retf -8
0x000000000068dd72 : push rbp ; or byte ptr [rcx - 0x7c14d62d], cl ; ret
0x000000000041208f : push rbp ; or byte ptr [rdi], bl ; call rax
0x000000000051ed72 : push rbp ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x00000000004052a6 : push rbp ; push rbx ; mov rbp, r10 ; push rdx ; call 0x68153a
0x000000000045b847 : push rbp ; push rcx ; add cl, cl ; ret
0x000000000065cb57 : push rbp ; ret
0x00000000005938f9 : push rbp ; ret 0xe
0x0000000000511244 : push rbp ; ret 0xe7e8
0x000000000064adac : push rbp ; ret 0xfa80
0x00000000004d3f6b : push rbp ; retf
0x00000000005c30f7 : push rbp ; retf 0xb
0x00000000004aa367 : push rbp ; retf 4
0x00000000004209ee : push rbp ; ror byte ptr [rax - 0x77], 1 ; push rax ; pop rbp ; ret
0x0000000000614d17 : push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4808
0x0000000000511679 : push rbp ; ror byte ptr [rcx + rcx*4 - 0x12], 1 ; call rax
0x00000000006c1cdf : push rbp ; ror byte ptr [rcx + rcx*4 - 0x32], 0x4c ; mov edi, esi ; call rcx
0x0000000000519a61 : push rbp ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000061cd57 : push rbp ; sub al, 7 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000005fd10d : push rbp ; sub cl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042b109 : push rbp ; sub dword ptr [rax], eax ; leave ; ret
0x00000000004351d0 : push rbp ; test al, 0xe8 ; pop rbx ; ret
0x00000000004e4940 : push rbp ; test byte ptr [rbx + 0x2948c445], cl ; ret 0x8948
0x000000000048f43a : push rbp ; xor byte ptr [rcx - 0x75], al ; xor al, 0x29 ; ret 0xd089
0x000000000048f42e : push rbp ; xor byte ptr [rcx - 0x75], al ; xor al, 0x39 ; ret 0x117c
0x000000000048f3f1 : push rbp ; xor byte ptr [rcx - 0x75], al ; xor al, 0x39 ; ret 0x157c
0x000000000048f373 : push rbp ; xor byte ptr [rcx - 0x75], al ; xor al, 0x39 ; ret 0x167c
0x00000000006c8d17 : push rbx ; adc al, 0x89 ; ret 0xb60f
0x0000000000440d4b : push rbx ; adc al, 0x8b ; adc byte ptr [r9], dil ; ret 0x1b7c
0x0000000000440d2b : push rbx ; adc al, 0x8b ; adc byte ptr [r9], dil ; ret 0x538b
0x0000000000563d9e : push rbx ; adc al, byte ptr [rax] ; pop rbx ; ret
0x00000000004a7c82 : push rbx ; adc byte ptr [rax + 0x29], cl ; ror dword ptr [rax - 0x77], 1 ; retf -0x49f1
0x00000000004b2e06 : push rbx ; adc byte ptr [rax + 0x29], cl ; ror dword ptr [rax - 0x77], 1 ; retf 0x148
0x000000000053e8bf : push rbx ; adc byte ptr [rdi], cl ; lahf ; ret 0xd184
0x0000000000621889 : push rbx ; adc byte ptr [rsi], bh ; add bh, bh ; ror cl, 1 ; ret
0x0000000000790ab5 : push rbx ; add al, 0 ; call 0x2478ed2e
0x0000000000790a35 : push rbx ; add al, 0 ; fsubr dword ptr [rax - 0x1e] ; jmp qword ptr [rdx]
0x0000000000790a9d : push rbx ; add al, 0 ; shr byte ptr [rbx - 0x1e], 1 ; jmp qword ptr [rdx]
0x000000000067bd48 : push rbx ; add al, 0x8b ; add edi, dword ptr [rcx] ; ret 0x407c
0x0000000000599072 : push rbx ; add al, 0x8b ; add edi, dword ptr [rcx] ; ret 0x7d7c
0x000000000061e389 : push rbx ; add bh, bh ; ror cl, 1 ; ret
0x000000000061aa97 : push rbx ; add byte ptr [rax], al ; add cl, cl ; ret
0x00000000004f5b05 : push rbx ; add dword ptr [rax + 0x29], ecx ; ret 0xc085
0x00000000005ae936 : push rbx ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000006b61c8 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000006bc1bc : push rbx ; add dword ptr [rcx - 0x7d], ecx ; ret
0x000000000065de95 : push rbx ; add dword ptr [rcx], ebp ; retf -0x76b4
0x000000000073a4f1 : push rbx ; add eax, dword ptr [rax] ; call 0x117380b5
0x000000000057cc9b : push rbx ; add ebx, ebp ; ret 0xbf90
0x0000000000570187 : push rbx ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047c833 : push rbx ; and al, 0x8b ; and byte ptr [r9], dil ; ret 0x1b7c
0x000000000047c813 : push rbx ; and al, 0x8b ; and byte ptr [r9], dil ; ret 0x538b
0x00000000006b8022 : push rbx ; and al, 0xb8 ; adc eax, 0xf6000000 ; ret 0xf04
0x00000000006a2ff4 : push rbx ; and al, 0xf ; scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000528844 : push rbx ; and byte ptr [rax - 0x75], cl ; and byte ptr [r8 + 0x39], r9b ; ret 0xb174
0x00000000005ef086 : push rbx ; and byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0xe283
0x000000000064078e : push rbx ; call 0xffffffffc3ed5098
0x000000000051b460 : push rbx ; call rdx
0x00000000005ae9f6 : push rbx ; dec dword ptr [rax + 0x39] ; ret
0x00000000007470b5 : push rbx ; hlt ; call qword ptr [rax]
0x00000000005461e9 : push rbx ; in eax, 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007acdd1 : push rbx ; in eax, dx ; call qword ptr [rcx]
0x00000000004052a7 : push rbx ; mov rbp, r10 ; push rdx ; call 0x681539
0x0000000000501e6d : push rbx ; mov rbp, rdi ; call 0x6be896
0x0000000000505df0 : push rbx ; mov rbx, rdi ; call qword ptr [rip + 0x4fca6e]
0x0000000000443291 : push rbx ; neg byte ptr [rbx] ; call rax
0x00000000006c5c90 : push rbx ; or al, 0x89 ; ret 0xe283
0x000000000069d542 : push rbx ; or byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x39] ; ret 0x147c
0x000000000053ba25 : push rbx ; or byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x39] ; ret 0x8c0f
0x000000000040b076 : push rbx ; or byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0xe283
0x000000000074a191 : push rbx ; or byte ptr [rax], al ; mov al, 0xc4 ; clc ; call qword ptr [rax]
0x000000000074a171 : push rbx ; or byte ptr [rax], al ; push rax ; ret
0x00000000006b3e8e : push rbx ; or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000066355b : push rbx ; or cl, ch ; ret
0x000000000074530d : push rbx ; out dx, eax ; inc dword ptr [rax] ; retf
0x0000000000745315 : push rbx ; out dx, eax ; ljmp ptr [rax] ; retf
0x000000000070c9d1 : push rbx ; pop rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; retf 0x70
0x000000000040430f : push rbx ; ret
0x00000000005d49db : push rbx ; retf
0x0000000000517219 : push rbx ; retf -0x12
0x0000000000722a3e : push rbx ; retf -0x4446
0x00000000006772be : push rbx ; retf 0x7cee
0x0000000000614e39 : push rbx ; retf 8
0x000000000067b26b : push rbx ; sbb al, 0x83 ; ret
0x00000000005441fd : push rbx ; sbb al, 0x8b ; sbb al, 0x39 ; ret 0xca74
0x00000000004453af : push rbx ; sbb al, 0x8b ; sbb byte ptr [r9], dil ; ret 0x1b7c
0x000000000044538f : push rbx ; sbb al, 0x8b ; sbb byte ptr [r9], dil ; ret 0x538b
0x000000000067e52b : push rbx ; sbb eax, dword ptr [rbx + 0x490f31c3] ; ret
0x000000000058bfc6 : push rbx ; str word ptr [rax - 0x77] ; ret
0x0000000000530089 : push rbx ; sub byte ptr [rbp], cl ; jmp rax
0x0000000000663250 : push rbx ; sub byte ptr [rcx], bh ; ret 0x870f
0x00000000004d2eaf : push rbx ; sub byte ptr [rcx], bh ; ror byte ptr [rdi], 1 ; ret 0xc085
0x000000000042b333 : push rbx ; sub dword ptr [rax], eax ; leave ; ret
0x0000000000630879 : push rbx ; sub dword ptr [rcx], esi ; test byte ptr [rax - 0x73], 0x78 ; and al, ch ; retf -0xdc9
0x0000000000738fcd : push rbx ; xlatb ; jmp rax
0x000000000073d769 : push rcx ; add al, 0 ; adc byte ptr [rcx], cl ; call qword ptr [rax]
0x000000000079080d : push rcx ; add al, 0 ; add byte ptr [rcx - 0x1e], ah ; jmp qword ptr [rbx]
0x0000000000790825 : push rcx ; add al, 0 ; sbb byte ptr [rcx - 0x1e], ah ; jmp qword ptr [rdx]
0x000000000079083d : push rcx ; add al, 0 ; xor byte ptr [rcx - 0x1e], ah ; jmp qword ptr [rbx]
0x00000000004f7052 : push rcx ; add al, 0x39 ; ret 0x2f7c
0x00000000006bc488 : push rcx ; add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000736fd1 : push rcx ; add al, byte ptr [rax] ; js 0x736faf ; call rax
0x00000000006f76a2 : push rcx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret 0x51
0x00000000006fc37a : push rcx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret
0x00000000006f7902 : push rcx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 0x51
0x00000000006f779a : push rcx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; retf 0x51
0x00000000007c84f7 : push rcx ; add byte ptr [rax], al ; retf 0x501
0x0000000000445673 : push rcx ; add byte ptr es:[rax - 0x77], cl ; ret
0x000000000045b848 : push rcx ; add cl, cl ; ret
0x00000000005aa228 : push rcx ; add dword ptr [rax + 0x29], ecx ; ret 0x8148
0x000000000068e418 : push rcx ; add dword ptr [rax + 0x29], ecx ; ret 0x894c
0x000000000054237c : push rcx ; add dword ptr [rax + 0x29], ecx ; ret 0x8ae9
0x000000000068e432 : push rcx ; add dword ptr [rax + 0x29], ecx ; ret 0xa0eb
0x000000000068e822 : push rcx ; add dword ptr [rax + 0x29], ecx ; ret 0xaaeb
0x000000000069f2bc : push rcx ; add dword ptr [rax + 0x63], ecx ; retf -0x77c0
0x000000000058ef3b : push rcx ; add dword ptr [rax + 0x63], ecx ; retf 0x3489
0x00000000007608dd : push rcx ; add dword ptr [rax], eax ; pop rsp ; ret 0xffd3
0x00000000005765ef : push rcx ; add dword ptr [rcx], ebp ; ret 0x8b44
0x00000000005870b1 : push rcx ; add dword ptr [rcx], ebp ; ret 0xc189
0x000000000076a06e : push rcx ; add dword ptr [rdi], 3 ; ret
0x00000000006b8294 : push rcx ; add dword ptr [rsi + 0x39], esp ; retf 0x137d
0x0000000000740889 : push rcx ; add eax, 0xe5d53000 ; jmp rax
0x00000000004a3a38 : push rcx ; and byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000006627ba : push rcx ; and byte ptr [rbx - 0x7cb7fd3e], al ; ret 0x4912
0x00000000006ac57b : push rcx ; and byte ptr [rcx], al ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x0000000000745d35 : push rcx ; call qword ptr [rax]
0x0000000000606e7e : push rcx ; call rax
0x0000000000747c35 : push rcx ; cmc ; call qword ptr [rax]
0x00000000005e1993 : push rcx ; cmovb eax, dword ptr [rax] ; call rax
0x0000000000743a7d : push rcx ; in al, dx ; call qword ptr [rax]
0x0000000000487b5b : push rcx ; insd dword ptr [rdi], dx ; and eax, dword ptr [rax] ; leave ; ret
0x00000000006390fe : push rcx ; jne 0x6390fc ; add rsp, 0x18 ; ret
0x0000000000526c7b : push rcx ; jns 0x526c9d ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a6d7b : push rcx ; js 0x4a6da5 ; add byte ptr [rax - 0x77], cl ; ret 0x2c7
0x00000000005982fd : push rcx ; js 0x598313 ; add bl, ch ; ret 0x8948
0x00000000005da093 : push rcx ; mov byte ptr [rdx], al ; call rax
0x0000000000647f98 : push rcx ; mov esi, 1 ; call rax
0x0000000000523ceb : push rcx ; or bl, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000053adce : push rcx ; or byte ptr [rax - 0x75], cl ; or dword ptr [rax + 0x39], ecx ; retf -0x1584
0x00000000004d31f4 : push rcx ; or eax, 0x8fbf0000 ; ret 0x6e
0x000000000078bd4a : push rcx ; or eax, dword ptr [rsi + rcx + 0x18] ; ret
0x0000000000799c79 : push rcx ; out 0xff, al ; ret 0
0x00000000007452e5 : push rcx ; out dx, eax ; call qword ptr [rax]
0x00000000007452d5 : push rcx ; out dx, eax ; jmp rax
0x0000000000425793 : push rcx ; rcr dword ptr [rbp], 1 ; call rax
0x00000000004137fd : push rcx ; ret
0x00000000005350a5 : push rcx ; ret 0x14
0x000000000062668b : push rcx ; ret 0x3d
0x000000000044668b : push rcx ; ret 0x5b
0x000000000053dcfb : push rcx ; retf
0x00000000006ce3a2 : push rcx ; sar edi, cl ; add rsp, 0x18 ; ret
0x000000000040a93b : push rcx ; sbb eax, 0x89480020 ; ret
0x00000000004d5783 : push rcx ; xchg eax, esp ; sti ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000050c6fd : push rcx ; xor al, 0x17 ; add bl, ch ; ret 0x8948
0x00000000005714eb : push rcx ; xor dl, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006cea0b : push rcx ; xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000006bdb78 : push rdi ; adc byte ptr [rcx - 0x3b7cb728], cl ; push rax ; pop rbx ; ret
0x00000000006c96cd : push rdi ; adc byte ptr [rcx], cl ; enter -0x1d3f, 0x18 ; or eax, edx ; ret
0x000000000056e60b : push rdi ; adc eax, 0x89480011 ; ret
0x0000000000722f6e : push rdi ; adc esp, esi ; or dword ptr [rcx - 0x6c], eax ; cmc ; retf
0x00000000007065ea : push rdi ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; retf
0x0000000000706662 : push rdi ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; retf
0x000000000070666a : push rdi ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; retf
0x0000000000750e4d : push rdi ; add byte ptr [rax], al ; ret 0xcdc7
0x0000000000750f05 : push rdi ; add byte ptr [rax], al ; retf -0x33
0x0000000000740981 : push rdi ; add eax, 0xe5f8d000 ; jmp rax
0x00000000007a0e1d : push rdi ; add eax, 0xe8a3a000 ; call qword ptr [rax]
0x00000000007a0e6d : push rdi ; add eax, 0xe8a3e000 ; call qword ptr [rax]
0x00000000007a0eed : push rdi ; add eax, 0xe8a46000 ; jmp qword ptr [rax]
0x000000000051969d : push rdi ; and al, 0x8b ; and al, 0x39 ; ret 0xd475
0x00000000006ac16d : push rdi ; and byte ptr [rax + 0x39], cl ; salc ; setb al ; ret
0x000000000058c075 : push rdi ; and eax, 0x89480013 ; ret 0xc7
0x00000000005721e5 : push rdi ; and eax, 0x89480016 ; ret
0x0000000000641b3b : push rdi ; call 0xffffffffc3ed6447
0x000000000068f538 : push rdi ; clc ; movsxd rax, esi ; mov eax, dword ptr [rdx + rax*4] ; ret
0x000000000058b6ea : push rdi ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00000000005c7b55 : push rdi ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000005bfd4b : push rdi ; dec dword ptr [rax - 0x7d] ; ret 0x4c01
0x000000000064369f : push rdi ; fadd qword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000073bb15 : push rdi ; fdivp st(7) ; push rax ; ret
0x0000000000410675 : push rdi ; fild qword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000074712d : push rdi ; hlt ; jmp qword ptr [rax]
0x00000000005a8875 : push rdi ; jle 0x5a888f ; add byte ptr [rax - 0x77], cl ; ret
0x000000000076e931 : push rdi ; leave ; call qword ptr [rdx]
0x00000000006d67df : push rdi ; mov al, 0x5d ; retf -0x403e
0x0000000000492315 : push rdi ; mov bl, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000608de5 : push rdi ; mov ecx, 0x8948000c ; ret
0x000000000066d235 : push rdi ; mov esi, ebp ; call rax
0x000000000065e1e6 : push rdi ; mov qword ptr [rdi + 0x48], rcx ; ret
0x000000000055eb03 : push rdi ; or byte ptr [rax + 0x39], cl ; ret 0xad75
0x000000000060840e : push rdi ; or byte ptr [rax - 0x7f], cl ; ret
0x000000000050e097 : push rdi ; or byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000074a261 : push rdi ; or byte ptr [rax], al ; xor dl, dl ; clc ; call rax
0x00000000005f3a12 : push rdi ; or dword ptr [rax], eax ; nop ; leave ; ret
0x00000000006822f5 : push rdi ; or dword ptr [rax], eax ; ret
0x0000000000722b77 : push rdi ; out dx, eax ; ret 0x94a7
0x000000000051a4c4 : push rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000006124db : push rdi ; push 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000519155 : push rdi ; push 0x29480017 ; ret
0x000000000042588d : push rdi ; rcr byte ptr [rbp], 1 ; call rax
0x00000000005d430b : push rdi ; ret
0x00000000004e38f7 : push rdi ; ret 0x19
0x0000000000721fd2 : push rdi ; ret 0x3cfb
0x0000000000683a18 : push rdi ; ret 0x8348
0x0000000000722a88 : push rdi ; retf
0x0000000000543c0b : push rdi ; retf 0x13
0x00000000004b7ce5 : push rdi ; retf 0x21
0x00000000006839fa : push rdi ; retf 0x290f
0x0000000000507118 : push rdi ; sbb al, 0x8b ; sbb al, 0x39 ; ret 0xd975
0x0000000000536f47 : push rdi ; sbb bl, al ; nop word ptr [rax + rax] ; ret
0x00000000004c37c5 : push rdi ; sbb dword ptr [rax], eax ; leave ; ret
0x0000000000518117 : push rdi ; sub bl, al ; nop word ptr [rax + rax] ; ret
0x000000000042a18d : push rdi ; xchg dword ptr [rbp], ebx ; call rax
0x00000000006a710b : push rdi ; xchg eax, ebp ; std ; call qword ptr [rax - 0x57c3dd7]
0x00000000004f0105 : push rdi ; xchg eax, esi ; idiv edi ; pop rbp ; ret
0x00000000005a56d9 : push rdx ; adc byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000004e4351 : push rdx ; adc byte ptr [rbx + 0xfd03912], cl ; ret 0xc085
0x000000000051fda4 : push rdx ; adc eax, 0x89480016 ; ret
0x00000000004b0d7d : push rdx ; add al, 0x39 ; ret 0x117c
0x000000000043ffea : push rdx ; add al, 0x39 ; ret 0x127c
0x000000000066a7e8 : push rdx ; add al, 0x39 ; ret 0x87c
0x000000000043bf78 : push rdx ; add al, 0x39 ; ret 0x972
0x00000000004b2cc2 : push rdx ; add al, 0x39 ; ret 0x97c
0x0000000000736fe1 : push rdx ; add al, byte ptr [rax] ; jp 0x736fbf ; jmp qword ptr [rax]
0x0000000000737009 : push rdx ; add al, byte ptr [rax] ; push rax ; jge 0x736fe7 ; call rax
0x0000000000737019 : push rdx ; add al, byte ptr [rax] ; scasb al, byte ptr [rdi] ; jge 0x736ff7 ; call qword ptr [rax]
0x000000000061d658 : push rdx ; add bh, bh ; ror cl, 1 ; ret
0x000000000054d5d6 : push rdx ; add byte ptr [r8 - 0x75], cl ; cmp ebp, eax ; jmp qword ptr [rbx]
0x00000000006f78f2 : push rdx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000006f633a : push rdx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x52
0x0000000000623489 : push rdx ; add byte ptr ds:[rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4847
0x000000000043ae8c : push rdx ; add dword ptr [rax], eax ; add cl, cl ; ret
0x00000000007408b1 : push rdx ; add eax, 0xe5db0000 ; call rax
0x00000000005c43ea : push rdx ; add edx, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058963e : push rdx ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000065c17a : push rdx ; and al, 6 ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x000000000052881c : push rdx ; and byte ptr [rax - 0x75], cl ; and byte ptr [rax + 0x39], cl ; ret 0x2875
0x00000000004a38c0 : push rdx ; and byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004052ab : push rdx ; call 0x681535
0x000000000064086c : push rdx ; call 0xffffffffc3ed5176
0x00000000004b62ab : push rdx ; cli ; dec ecx ; ret
0x0000000000466afa : push rdx ; cmp eax, 0x89480024 ; ret
0x00000000007470a5 : push rdx ; hlt ; jmp rax
0x0000000000611ce0 : push rdx ; jb 0x611ce9 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000735bbc : push rdx ; jbe 0x735b92 ; jmp rax
0x00000000005930a4 : push rdx ; loop 0x5930bb ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000722390 : push rdx ; mov cs, word ptr [rcx] ; ret 0xe937
0x00000000006d6c80 : push rdx ; mov dh, 0x8b ; and ebp, dword ptr [rdi] ; pop rsp ; ret 0x5d78
0x000000000073781c : push rdx ; mov edx, ebx ; jmp qword ptr [rax]
0x0000000000555a7e : push rdx ; mov rcx, rsp ; lea rsi, qword ptr [rsp + 0x10] ; call rax
0x00000000004c3a48 : push rdx ; or al, 0x83 ; ret 0x8901
0x000000000061625d : push rdx ; or byte ptr [rax + 0x28c48348], dl ; pop rbx ; pop rbp ; ret
0x0000000000615352 : push rdx ; or byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0xade8
0x00000000005d1923 : push rdx ; or byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000005d1a9d : push rdx ; or byte ptr [rax - 0x7d], cl ; ret 0x4908
0x000000000074a141 : push rdx ; or byte ptr [rax], al ; nop ; ret 0xfff8
0x000000000074a129 : push rdx ; or byte ptr [rax], al ; ret 0xfff8
0x00000000004d32c3 : push rdx ; or eax, 0x8fbf0000 ; ret 0x6e
0x0000000000745305 : push rdx ; out dx, eax ; inc eax ; retf 6
0x000000000042d60a : push rdx ; pop rbp ; add bh, bh ; ror cl, 1 ; ret
0x00000000006c02b9 : push rdx ; push rax ; test dl, 1 ; jne 0x6c02d0 ; call rdx
0x0000000000660721 : push rdx ; push rax ; xor eax, eax ; test edx, edx ; sete al ; ret
0x00000000006a8fc4 : push rdx ; push rbp ; ret
0x000000000067d48a : push rdx ; ret
0x00000000004417f2 : push rdx ; ret 0xffff
0x000000000041efe4 : push rdx ; retf
0x0000000000734ea4 : push rdx ; retf -0x32
0x0000000000695e92 : push rdx ; retf 0x36
0x0000000000767101 : push rdx ; salc ; jmp qword ptr [rbx]
0x000000000074b7d0 : push rdx ; salc ; retf
0x000000000065c97a : push rdx ; sbb al, 6 ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x000000000043c4fb : push rdx ; sbb byte ptr [rcx], bh ; ror byte ptr [rdi], 1 ; ret 0xc789
0x00000000004e6be9 : push rdx ; sub byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 0x29], cl ; retf -0x74b8
0x000000000059e7a4 : push rdx ; sub ecx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041d67a : push rdx ; xor byte ptr [rdx], ch ; add cl, cl ; ret
0x000000000051b45a : push rdx ; xor dh, dh ; ret 0x7501
0x000000000051aa30 : push rdx ; xor dh, dh ; ret 0xf01
0x0000000000573938 : push rdx ; xor eax, eax ; call 0x67fb55
0x00000000006b411c : push rsi ; adc byte ptr [rax - 0x77], cl ; retf 0x2948
0x0000000000542a02 : push rsi ; adc byte ptr [rbp - 0x3f], dh ; test rdx, rdx ; jne 0x5429f6 ; ret
0x00000000005a5572 : push rsi ; adc byte ptr [rbp - 0x3f], dh ; test rdx, rdx ; jne 0x5a5566 ; ret
0x00000000004f49b8 : push rsi ; add al, 0 ; add byte ptr [rcx], bh ; ret
0x00000000005c8b94 : push rsi ; add al, 0 ; add byte ptr [rcx], ch ; ret
0x000000000073d899 : push rsi ; add al, 0 ; sbb byte ptr [rax], 0xe1 ; call qword ptr [rax]
0x00000000006a0837 : push rsi ; add al, 0x39 ; ret 0xa7c
0x000000000049f5fb : push rsi ; add bh, bh ; ror cl, 1 ; ret
0x00000000005fd26b : push rsi ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf 0xd74
0x000000000053b739 : push rsi ; add dword ptr [rax + 0x29], ecx ; ret 0x8d49
0x000000000051a268 : push rsi ; add dword ptr [rax + 0x29], ecx ; retf -0x47
0x0000000000526ba9 : push rsi ; add dword ptr [rax - 0x77], ecx ; clc ; ret
0x0000000000686db2 : push rsi ; add dword ptr [rcx + 0x63], ecx ; ret 0x67e9
0x000000000050b6ce : push rsi ; add dword ptr [rcx], ebp ; retf -0x2877
0x00000000007a0dbd : push rsi ; add eax, 0xe8a38000 ; jmp qword ptr [rax]
0x00000000007a0e05 : push rsi ; add eax, 0xe8a39800 ; jmp qword ptr [rax]
0x000000000073a581 : push rsi ; add eax, dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; rcr bl, cl ; call rax
0x000000000043afad : push rsi ; and al, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000498456 : push rsi ; and al, byte ptr fs:[rax] ; leave ; ret
0x0000000000733f7c : push rsi ; and cl, ch ; jmp qword ptr [rax]
0x00000000005ed656 : push rsi ; and ecx, dword ptr [rdx] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000441e76 : push rsi ; call 0xffffffffc40d1ea8
0x0000000000560b92 : push rsi ; call qword ptr [rcx]
0x0000000000745d95 : push rsi ; call rax
0x00000000007caca7 : push rsi ; clc ; add al, bl ; syscall
0x000000000065d25a : push rsi ; cmp al, byte ptr [rax] ; jmp rax
0x000000000073763c : push rsi ; cmp ebx, edx ; call qword ptr [rax]
0x00000000005ca752 : push rsi ; dec dword ptr [rax + 0x63] ; ret
0x0000000000526beb : push rsi ; dec dword ptr [rax - 0x77] ; clc ; ret
0x00000000006c8182 : push rsi ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000776b81 : push rsi ; fdiv st(7), st(0) ; retf 1
0x0000000000751390 : push rsi ; fmulp st(5) ; call rcx
0x000000000077cd58 : push rsi ; jg 0x77cd26 ; call qword ptr [rdx]
0x000000000048ff56 : push rsi ; jmp 0xffffffffc411ff83
0x0000000000738474 : push rsi ; jnp 0x73844f ; call rax
0x000000000076eb69 : push rsi ; leave ; call qword ptr [rdx]
0x000000000044fbc4 : push rsi ; mov dl, 0xfe ; dec ecx ; ret
0x0000000000508be6 : push rsi ; mov ebx, 0x8948001c ; ret
0x0000000000599dc6 : push rsi ; mov edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000074a231 : push rsi ; or byte ptr [rax], al ; add bh, cl ; clc ; call rax
0x000000000074a211 : push rsi ; or byte ptr [rax], al ; nop ; retf
0x00000000005aafb5 : push rsi ; or eax, 0xea834800 ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000738d04 : push rsi ; out -0x2a, eax ; jmp rax
0x0000000000652532 : push rsi ; out 2, al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000744604 : push rsi ; out dx, al ; jmp rax
0x00000000005b8956 : push rsi ; pop rdi ; adc byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006d6e5a : push rsi ; popfq ; retf
0x0000000000721fd1 : push rsi ; push rdi ; ret 0x3cfb
0x000000000054658e : push rsi ; ret
0x00000000006be686 : push rsi ; ret 0xfffe
0x0000000000463b0c : push rsi ; retf
0x0000000000744d14 : push rsi ; retf -0x12
0x00000000004a37c0 : push rsi ; retf -1
0x000000000040406a : push rsi ; retf 0x27
0x0000000000583f36 : push rsi ; sbb byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004c385c : push rsi ; sbb dword ptr [rax], eax ; leave ; ret
0x0000000000623a56 : push rsi ; scasb al, byte ptr [rdi] ; or dword ptr [rax], eax ; leave ; ret
0x00000000005f3d56 : push rsi ; stosd dword ptr [rdi], eax ; or al, 0 ; leave ; ret
0x0000000000508da0 : push rsi ; test dword ptr [rdi], edx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004cf13d : push rsp ; adc dword ptr [rbp - 0x80], ebp ; cli ; sub byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000073d809 : push rsp ; add al, 0 ; adc byte ptr [rbx], 0xe1 ; jmp rax
0x000000000073d819 : push rsp ; add al, 0 ; rcl byte ptr [rbx], 0xe1 ; call qword ptr [rax]
0x00000000005c57cb : push rsp ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x00000000006674b9 : push rsp ; add al, byte ptr [rax] ; add byte ptr [rax + 0xf96948], al ; retf 0x3b9a
0x0000000000783c04 : push rsp ; add al, byte ptr [rax] ; add byte ptr [rax + rcx], al ; ret
0x000000000055162b : push rsp ; add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r13, qword ptr [rbx + 8] ; call rax
0x000000000051a3b0 : push rsp ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004b5457 : push rsp ; add bh, bh ; ror cl, 1 ; ret
0x0000000000788310 : push rsp ; add byte ptr [rax], al ; add ah, cl ; retf
0x00000000006fde0a : push rsp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret 0x54
0x00000000006fdd2a : push rsp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret
0x00000000006fdd3a : push rsp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret 0x54
0x000000000074b79c : push rsp ; add byte ptr [rax], al ; add byte ptr [rdx - 0x2c], dl ; retf
0x000000000058e378 : push rsp ; add dl, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000599451 : push rsp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004f49f8 : push rsp ; add eax, 0xc6830000 ; add dword ptr [rcx], edi ; ret
0x0000000000740909 : push rsp ; add eax, 0xe5e3a000 ; call rax
0x00000000005243e8 : push rsp ; add ebx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000681e88 : push rsp ; add ecx, dword ptr [rcx] ; add al, bl ; ret 0x7cd9
0x000000000077ff5c : push rsp ; add rax, qword ptr [rax] ; cmp byte ptr [rsi + rbx*8], 0xff ; retf 0
0x00000000006609d2 : push rsp ; add rax, rcx ; ret
0x000000000043b22b : push rsp ; and al, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000005121a7 : push rsp ; and al, 0x10 ; mov rdi, r12 ; call rax
0x00000000006c23d7 : push rsp ; and al, 0x10 ; mov rdi, rbp ; call rax
0x000000000041e278 : push rsp ; and al, 0x2a ; add cl, cl ; ret
0x0000000000690b8c : push rsp ; and al, 0x30 ; jmp 0x690b58
0x0000000000690bdc : push rsp ; and al, 0x30 ; jmp 0x690ba8
0x000000000069115c : push rsp ; and al, 0x30 ; jmp 0x691128
0x00000000006911ac : push rsp ; and al, 0x30 ; jmp 0x691178
0x00000000006cbafb : push rsp ; and al, 0xe0 ; ret
0x00000000006a4fd9 : push rsp ; and al, 0xe8 ; movapd xmm0, xmm2 ; ret
0x00000000006cbb33 : push rsp ; and al, 0xf0 ; ret
0x000000000069c097 : push rsp ; and al, 8 ; add rsp, 0x18 ; ret
0x000000000075d79c : push rsp ; and byte ptr [rcx], al ; add byte ptr [rdi + rdx*8 - 0x2f], dh ; jmp rax
0x00000000006406b8 : push rsp ; call 0xffffffffc3ed4fc2
0x00000000005524bc : push rsp ; call rsi
0x000000000067d4e4 : push rsp ; cmp byte ptr [rax], al ; mov rdi, r12 ; call 0x689fb8
0x000000000048ee88 : push rsp ; cmp dl, byte ptr [rdi] ; call rax
0x00000000006bf2b4 : push rsp ; cmp esp, 0x1e88348 ; jne 0x6bf2b9 ; ret
0x00000000006a4f82 : push rsp ; enter 0xf66, 0x2e ; retf
0x0000000000681f86 : push rsp ; enter 0xf66, 0x2e ; retf -0x78f1
0x00000000006a4c28 : push rsp ; enter 0xf66, 0x2e ; retf -0x79f1
0x0000000000777f5c : push rsp ; enter 2, 0x48 ; retf -0x38
0x000000000066e6c1 : push rsp ; fcos ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000454a08 : push rsp ; ficomp word ptr [rdx] ; call rax
0x000000000077929c : push rsp ; fild dword ptr [rdx] ; add byte ptr [rax], al ; ret 0xffdc
0x00000000005f2a8c : push rsp ; fmul qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007470f5 : push rsp ; hlt ; jmp qword ptr [rax]
0x0000000000743abd : push rsp ; in al, dx ; jmp qword ptr [rax]
0x00000000007ace11 : push rsp ; in eax, dx ; call qword ptr [rcx]
0x00000000007ace29 : push rsp ; in eax, dx ; jmp rax
0x0000000000571eeb : push rsp ; insd dword ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006164ef : push rsp ; int1 ; or cl, cl ; ret
0x0000000000579fa2 : push rsp ; jae 0x579fbb ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007b2a5c : push rsp ; jae 0x7b2a6c ; add byte ptr [rax - 0x12], ah ; out dx, al ; jmp qword ptr [rcx]
0x000000000055920e : push rsp ; je 0x559229 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c6878 : push rsp ; jge 0x4c68a0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000745d5d : push rsp ; jmp rax
0x000000000058d1e8 : push rsp ; jne 0x58d205 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000598a0e : push rsp ; jno 0x598a25 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000076285c : push rsp ; jno 0x762867 ; add al, bh ; mov ah, dl ; jmp qword ptr [rbx]
0x00000000007367fc : push rsp ; loope 0x7367d3 ; call rax
0x0000000000735d9c : push rsp ; mov ch, 0xd0 ; call qword ptr [rax]
0x00000000007b6d5c : push rsp ; mov dh, 6 ; add byte ptr [rax - 0x54], dh ; out dx, eax ; call qword ptr [rdi]
0x00000000006c8568 : push rsp ; mov ecx, dword ptr [rax + 0x48] ; add esp, 0x30 ; pop rbx ; ret
0x00000000004231a6 : push rsp ; mov edi, edi ; dec ecx ; ret
0x0000000000519e48 : push rsp ; mov esi, 1 ; mov rdi, r12 ; call rax
0x000000000075de08 : push rsp ; not ecx ; jmp qword ptr [rbx]
0x0000000000682535 : push rsp ; or dword ptr [rax], eax ; add rsp, 8 ; ret
0x00000000007ac45c : push rsp ; or eax, 0x46dc0006 ; in eax, dx ; call qword ptr [rbx]
0x00000000007ac25c : push rsp ; or eax, dword ptr [rsi] ; add byte ptr [rsi + 0x44], ch ; in eax, dx ; call qword ptr [rsi]
0x00000000007428f4 : push rsp ; or edx, ebp ; call rax
0x0000000000683b88 : push rsp ; out 8, al ; add al, bl ; ret 0x7cd9
0x00000000007446ed : push rsp ; out dx, al ; jmp qword ptr [rax]
0x0000000000780f5c : push rsp ; pop rax ; add eax, dword ptr [rax] ; push rax ; mov esi, ds ; jmp qword ptr [rdx]
0x00000000006cdd38 : push rsp ; pop rcx ; sar edi, cl ; add rsp, 8 ; ret
0x000000000076139c : push rsp ; pop rsp ; add dword ptr [rax], eax ; retf -0x2c08
0x00000000004fa15c : push rsp ; push 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006a8fc3 : push rsp ; push rdx ; push rbp ; ret
0x000000000076a408 : push rsp ; pushfq ; leave ; call qword ptr [rdx]
0x0000000000519d3d : push rsp ; rcl dword ptr [rax], 0x48 ; add esp, 8 ; ret
0x000000000050faad : push rsp ; ret
0x00000000006d5e5d : push rsp ; ret 0x4910
0x0000000000436688 : push rsp ; ret 0x5c
0x00000000006a495a : push rsp ; ret 0xf66
0x00000000006830ee : push rsp ; ret 0xff2
0x000000000079cb10 : push rsp ; ret 0xffe7
0x000000000077795c : push rsp ; ret 2
0x00000000004d3f94 : push rsp ; retf
0x00000000004a7868 : push rsp ; retf 0x21
0x00000000005b5e88 : push rsp ; retf 0x44
0x000000000050215d : push rsp ; retf 0x4848
0x000000000068204a : push rsp ; retf 0xf66
0x000000000076815c : push rsp ; retf 1
0x000000000077815c : push rsp ; retf 2
0x00000000006486e8 : push rsp ; ror byte ptr [rax], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ac878 : push rsp ; sbb eax, 0x89480021 ; ret 0x8948
0x0000000000683972 : push rsp ; shl byte ptr [rsi + 0xf], 1 ; retf 0x6e77
0x000000000075619c : push rsp ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; cmpsb byte ptr fs:[rsi], byte ptr [rdi] ; iretd ; call rsp
0x000000000078e49c : push rsp ; sub eax, 0xd1700004 ; loope 0x78e4ab ; ret
0x0000000000795f9c : push rsp ; test al, 4 ; add byte ptr [rdx], dh ; sub esp, ebp ; call rcx
0x000000000075529c : push rsp ; wait ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; insb byte ptr [rdi], dx ; iretd ; call rsp
0x000000000054da6e : push rsp ; xor bl, byte ptr [rax] ; add rsp, 8 ; ret
0x00000000007d50f7 : pushfq ; adc al, 5 ; stosd dword ptr [rdi], eax ; adc al, 0 ; retf
0x00000000007f2b72 : pushfq ; adc dword ptr [rip + 0x19ca3], ecx ; ret 0x511
0x000000000079542d : pushfq ; add al, 0 ; push rax ; add ch, ah ; call rsp
0x00000000007d1eda : pushfq ; add al, 7 ; retf
0x000000000074b9a4 : pushfq ; add al, byte ptr [rax] ; add byte ptr [rdx - 8], ch ; retf
0x00000000005068a0 : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; fmul dword ptr [rax + 0x63] ; retf
0x00000000006a32f9 : pushfq ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rbx ; ret
0x0000000000755405 : pushfq ; add byte ptr [rax], al ; pop rdx ; jae 0x7553e0 ; call qword ptr [rdx]
0x00000000007f2d28 : pushfq ; add dword ptr [rax], eax ; mov bl, 0x23 ; pop rsi ; ret 0x1d7
0x00000000007f3abf : pushfq ; add dword ptr [rax], eax ; ret
0x00000000007f36fa : pushfq ; add dword ptr [rax], eax ; ret 0x18a
0x00000000007f4466 : pushfq ; add dword ptr [rax], eax ; ret 0x1e6
0x00000000007f465f : pushfq ; add dword ptr [rax], eax ; ret 0x1f3
0x00000000007f2b76 : pushfq ; add dword ptr [rax], eax ; ret 0x511
0x00000000007f2e63 : pushfq ; add dword ptr [rax], eax ; ret 0x5d30
0x00000000007f39ff : pushfq ; add dword ptr [rax], eax ; retf
0x0000000000765335 : pushfq ; add dword ptr [rax], eax ; retf -0x2aa0
0x00000000007f3f4b : pushfq ; add dword ptr [rax], eax ; stosd dword ptr [rdi], eax ; ret
0x00000000007d606b : pushfq ; add dword ptr [rsi], ecx ; add byte ptr [rax], al ; stosb byte ptr [rdi], al ; add dword ptr [rdi], ecx ; retf
0x0000000000741789 : pushfq ; add eax, 0xe7405000 ; jmp rax
0x000000000079fca4 : pushfq ; add eax, 0xe8711800 ; call qword ptr [rdi]
0x00000000006c4d6a : pushfq ; and al, 0x80 ; add byte ptr [rax], al ; add al, bl ; retf -0x3e22
0x00000000007f09e6 : pushfq ; and dl, byte ptr [rdi] ; sti ; and dword ptr [rcx], esp ; ret
0x00000000005ed610 : pushfq ; and ecx, dword ptr [rdx] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000052a8b0 : pushfq ; call qword ptr [rdi]
0x00000000007b7fa4 : pushfq ; enter 6, 0x78 ; sbb al, dh ; jmp rdi
0x00000000007a8fa4 : pushfq ; fadd dword ptr [rip - 0x13976800] ; call qword ptr [rcx]
0x000000000069ccec : pushfq ; imul esi, edi ; mov r8d, dword ptr [rcx - 0x3f] ; ret 0x4707
0x000000000073574c : pushfq ; in al, -0x31 ; jmp qword ptr [rax]
0x000000000078b6a4 : pushfq ; inc dword ptr [rbx] ; add al, bh ; adc ah, cl ; call qword ptr [rbx]
0x0000000000755ae9 : pushfq ; iretd ; jmp qword ptr [rbx]
0x0000000000772ea4 : pushfq ; ja 0x772eb0 ; add al, cl ; cmp al, 0xdb ; call qword ptr [rbx]
0x0000000000742c0c : pushfq ; jge 0x742bfc ; jmp rax
0x00000000007930a4 : pushfq ; jns 0x7930b2 ; add al, al ; add ah, ah ; call qword ptr [rdi]
0x000000000076a3f1 : pushfq ; leave ; call qword ptr [rdx]
0x0000000000797c80 : pushfq ; mov ah, 0xe5 ; jmp qword ptr [rbx]
0x0000000000595d5a : pushfq ; mov ch, 0xe ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000465700 : pushfq ; mov dl, 0x25 ; add cl, cl ; ret
0x00000000007b75a4 : pushfq ; mov esi, 0xb9a80006 ; out dx, eax ; jmp qword ptr [rsi]
0x00000000007b43a4 : pushfq ; mov word ptr [rsi], es ; add al, ch ; out dx, eax ; jmp qword ptr [rdi]
0x00000000007a47a4 : pushfq ; nop ; add eax, 0xc6335e00 ; call qword ptr [rdx]
0x00000000007e7fd1 : pushfq ; or al, 0 ; retf
0x0000000000633970 : pushfq ; or byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000063aaa3 : pushfq ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000079c0a4 : pushfq ; or dword ptr [rip - 0x186ccc00], eax ; call qword ptr [rbx]
0x00000000007ac4a4 : pushfq ; or eax, 0x46d00006 ; in eax, dx ; call qword ptr [rbx]
0x00000000007dbe87 : pushfq ; or eax, dword ptr [rax] ; retf
0x00000000004346b3 : pushfq ; ret
0x00000000004e4824 : pushfq ; ret 0x19
0x00000000005413cb : pushfq ; ret 0x3840
0x00000000005179f8 : pushfq ; ret 0x4e
0x00000000005fd59f : pushfq ; ret 0x8441
0x00000000005390ba : pushfq ; ret 0x8545
0x000000000050eeaf : pushfq ; ret 0x8548
0x0000000000667358 : pushfq ; ret 0xb60f
0x00000000005ba5d9 : pushfq ; ret 0xbd80
0x0000000000505441 : pushfq ; ret 0xc238
0x000000000050ef81 : pushfq ; ret 0xc284
0x00000000005fd5fa : pushfq ; ret 0xca20
0x00000000005f9c94 : pushfq ; ret 0xca38
0x0000000000548745 : pushfq ; ret 0xd084
0x000000000051102e : pushfq ; ret 0xd138
0x0000000000607fc4 : pushfq ; ret 0xdb85
0x0000000000601e57 : pushfq ; ret 0xe8c1
0x00000000007779a4 : pushfq ; ret 2
0x00000000006438b2 : pushfq ; ret 3
0x00000000007b79a4 : pushfq ; ret 6
0x00000000006ea058 : pushfq ; retf
0x00000000005b5e48 : pushfq ; retf 0x44
0x000000000064485a : pushfq ; retf 3
0x00000000007688e4 : pushfq ; rol dword ptr [rcx], 1 ; add byte ptr [rsi], bh ; sti ; xlatb ; jmp rax
0x0000000000768aa4 : pushfq ; rol dword ptr [rcx], cl ; add byte ptr [rdi + rsi - 0x28], ah ; jmp qword ptr [rdi]
0x0000000000496830 : pushfq ; sahf ; and al, byte ptr [rax] ; leave ; ret
0x0000000000666fcf : pushfq ; sar dword ptr [rax], -0x2f ; jne 0x666fdc ; ret
0x0000000000666fff : pushfq ; sar dword ptr [rax], -0x2f ; jne 0x66700c ; ret
0x000000000066702f : pushfq ; sar dword ptr [rax], -0x2f ; jne 0x66703c ; ret
0x0000000000677041 : pushfq ; sar dword ptr [rax], -0x2f ; jne 0x67704e ; ret
0x00000000007c7056 : pushfq ; sbb dword ptr [rbx], eax ; add byte ptr [rax], al ; retf
0x000000000074af9d : pushfq ; stc ; call qword ptr [rax]
0x000000000074af8d : pushfq ; stc ; jmp rax
0x000000000042aa5f : pushfq ; sub al, byte ptr [rax] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000079e1a4 : pushfq ; sub al, byte ptr [rip - 0x18028a00] ; jmp qword ptr [rbx]
0x0000000000571ea0 : pushfq ; sub byte ptr [rsi], dl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e5466 : pushfq ; sub eax, 0x2dc205 ; retf 0x62d
0x00000000007dfc2e : pushfq ; syscall
0x0000000000569da0 : pushfq ; test eax, 0x89480016 ; ret
0x00000000007a3ea4 : pushfq ; xchg dword ptr [rip - 0x39c48e00], eax ; call qword ptr [rdx]
0x0000000000784aa4 : pushfq ; xchg eax, ebx ; add eax, dword ptr [rax] ; call 0x14782a81
0x000000000059b710 : pushfq ; xor dword ptr [rdx], edx ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x77] ; ret
0x0000000000682839 : pxor mm0, mm0 ; add rsp, 0x48 ; ret
0x0000000000683384 : pxor mm0, mm0 ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000682838 : pxor xmm0, xmm0 ; add rsp, 0x48 ; ret
0x0000000000781ef0 : rcl bh, 0xde ; jmp qword ptr [rbx]
0x00000000007980b0 : rcl bh, 0xe5 ; jmp qword ptr [rbx]
0x0000000000737a7d : rcl bl, 1 ; jmp rax
0x00000000004e3c15 : rcl byte ptr [rax + 0x18c48348], 1 ; pop rbx ; pop rbp ; ret
0x000000000043bfa0 : rcl byte ptr [rax + 0x28c48348], 1 ; pop rbx ; pop rbp ; ret
0x000000000058b66a : rcl byte ptr [rax - 0x76b7ffec], cl ; ret
0x00000000005742d6 : rcl byte ptr [rax], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006d1109 : rcl byte ptr [rax], 1 ; insd dword ptr [rdi], dx ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000007447d8 : rcl byte ptr [rbp + 0x6b360006], 0xee ; jmp rax
0x000000000074a200 : rcl byte ptr [rbp + 8], 0 ; adc bl, cl ; clc ; jmp rax
0x0000000000747c7c : rcl byte ptr [rbp - 0xb], 1 ; jmp qword ptr [rax]
0x0000000000746ad0 : rcl byte ptr [rbx + 7], 1 ; add byte ptr [rax], dh ; mov ah, 0xf3 ; jmp qword ptr [rax]
0x00000000007f0d90 : rcl byte ptr [rbx + rax], 1 ; ret 0x1303
0x000000000066259d : rcl byte ptr [rbx], 0x72 ; add byte ptr [rdi], cl ; mov bh, 0x88 ; ret 0x7213
0x000000000073d81c : rcl byte ptr [rbx], 0xe1 ; call qword ptr [rax]
0x00000000004c5860 : rcl byte ptr [rbx], 1 ; call rax
0x0000000000597483 : rcl byte ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c5679 : rcl byte ptr [rbx], cl ; call rax
0x000000000079b780 : rcl byte ptr [rcx - 0x19], 1 ; jmp qword ptr [rcx]
0x0000000000747c34 : rcl byte ptr [rcx - 0xb], 1 ; call qword ptr [rax]
0x0000000000722fdc : rcl byte ptr [rcx], 0xe8 ; xchg eax, ebp ; retf
0x00000000005a152b : rcl byte ptr [rcx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000073e5d0 : rcl byte ptr [rdi + 0x2cc00004], 0xe2 ; jmp rax
0x0000000000746b58 : rcl byte ptr [rdi + 7], 1 ; add byte ptr [rax], dh ; xlatb ; jmp qword ptr [rax]
0x0000000000485831 : rcl byte ptr [rdi], 1 ; call rax
0x00000000005bc026 : rcl byte ptr [rdx + 0xc], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000736288 : rcl byte ptr [rdx + rax], 0 ; retf -0x2e92
0x0000000000745304 : rcl byte ptr [rdx - 0x11], 1 ; inc eax ; retf 6
0x00000000005a8ca7 : rcl byte ptr [rdx], 0x71 ; add byte ptr [rax - 0x77], cl ; ja 0x5a8cbf ; ret
0x000000000068e8a2 : rcl byte ptr [rdx], 0xff ; dec dword ptr [rax - 0x77] ; ret
0x000000000062cea9 : rcl byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x0000000000553436 : rcl byte ptr [rdx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007362c0 : rcl byte ptr [rip + 0x76360002], 0xd1 ; jmp rax
0x0000000000748dc4 : rcl byte ptr [rsi], 0xf7 ; call qword ptr [rax]
0x00000000005b3fb3 : rcl byte ptr [rsp + rcx*2], 0x63 ; retf -0x2c77
0x0000000000738b10 : rcl ch, 2 ; add byte ptr [rax - 0x41], bl ; salc ; jmp rax
0x0000000000781dc0 : rcl cl, 0xde ; jmp rcx
0x00000000006cb59c : rcl dl, 0xa0 ; add al, ch ; retf
0x000000000074083c : rcl dl, 0xe5 ; call rax
0x000000000075f0f9 : rcl dl, 1 ; jmp qword ptr [rcx]
0x00000000004b5534 : rcl dword ptr [rax + rax - 1], cl ; ror cl, 1 ; ret
0x00000000007d2ebf : rcl dword ptr [rax + rax], 1 ; ret 0x2414
0x00000000007d0341 : rcl dword ptr [rax], 0 ; retf
0x0000000000519d3e : rcl dword ptr [rax], 0x48 ; add esp, 8 ; ret
0x0000000000517d23 : rcl dword ptr [rbp - 0x76b7ffea], cl ; ret
0x0000000000597597 : rcl dword ptr [rbx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c5522 : rcl dword ptr [rbx], cl ; call rax
0x000000000042d609 : rcl dword ptr [rdx + 0x5d], cl ; add bh, bh ; ror cl, 1 ; ret
0x00000000004952f9 : rcl dword ptr [rdx - 0x76b7ffde], cl ; ret 0x8948
0x00000000004d56f4 : rcl dword ptr [rdx], 1 ; call rax
0x00000000005536d7 : rcl dword ptr [rdx], cl ; add byte ptr [rax - 0x7d], cl ; cli ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000004d5532 : rcl dword ptr [rdx], cl ; call rax
0x000000000052355d : rcl dword ptr [rip - 0x157cb800], 1 ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000005186fd : rcl dword ptr [rip - 0x3b7cb800], 8 ; pop rbx ; pop rbp ; ret
0x000000000041648f : rcl dword ptr [rsi - 0x76b7ffda], cl ; ret
0x0000000000513757 : rcl dword ptr [rsi], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007ca8b7 : rcl dword ptr [rsi], cl ; ret
0x0000000000735dcd : rcl eax, -1 ; and ch, bh ; add dword ptr [rax], eax ; pop rax ; ret
0x0000000000442aa1 : rcl eax, 0x23 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000738585 : rcl ebp, -1 ; js 0x73854b ; add al, byte ptr [rax] ; retf -0x2a3f
0x0000000000766451 : rcl ebp, 1 ; call rsp
0x000000000040716b : rcl ebp, 1 ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000069ca48 : rcl ebx, -0x3e ; lea eax, dword ptr [rdx + rsi] ; ret
0x0000000000737a85 : rcl ebx, 1 ; call qword ptr [rax]
0x000000000073654d : rcl ecx, -1 ; and byte ptr [rdx], ah ; add al, byte ptr [rax] ; xchg eax, edx ; ret 0xffd1
0x0000000000662c87 : rcl ecx, 1 ; jmp 0xffffffff8baef693
0x00000000007366b5 : rcl ecx, 1 ; jmp qword ptr [rax]
0x00000000007366a5 : rcl ecx, 1 ; jmp rax
0x0000000000737305 : rcl edx, 1 ; call qword ptr [rax]
0x000000000044d5cd : rcpps xmm3, xmmword ptr [rbx] ; call rax
0x00000000006a4859 : rcr al, 0xc9 ; fmulp st(1) ; ret
0x000000000073b56c : rcr bh, 0xdd ; call rax
0x0000000000795130 : rcr bh, 0xe4 ; jmp rsi
0x00000000007aad70 : rcr bh, 0xec ; jmp qword ptr [rcx]
0x0000000000784d49 : rcr bh, 1 ; jmp qword ptr [rdi]
0x0000000000684205 : rcr bl, 0xe8 ; jp 0x68421f ; add rsp, 8 ; ret
0x000000000073a585 : rcr bl, cl ; call rax
0x0000000000425697 : rcr byte ptr [r13], cl ; call rax
0x0000000000415895 : rcr byte ptr [r14], 1 ; call rax
0x000000000040440a : rcr byte ptr [rax + 0x5b], 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000074a2a8 : rcr byte ptr [rax + 8], 0 ; adc ah, 0xf8 ; jmp rax
0x000000000074a3a8 : rcr byte ptr [rax + rcx], 0x50 ; fdiv st(0), st(0) ; jmp rax
0x00000000007b4d40 : rcr byte ptr [rax - 0x11], 1 ; call rax
0x0000000000740f54 : rcr byte ptr [rax - 0x1a], 1 ; jmp rax
0x000000000074209c : rcr byte ptr [rax], 0xe8 ; call qword ptr [rax]
0x0000000000736360 : rcr byte ptr [rax], 2 ; add byte ptr [rax], ah ; mov ecx, edx ; jmp rax
0x0000000000734a00 : rcr byte ptr [rbp + 0x176e0001], 0xce ; jmp rax
0x0000000000419d90 : rcr byte ptr [rbp + 0x26], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000747aa8 : rcr byte ptr [rbp + 0x30800007], 0xf5 ; call qword ptr [rax]
0x00000000007449b8 : rcr byte ptr [rbp - 0x7eedfffa], 0xee ; jmp rax
0x000000000042588e : rcr byte ptr [rbp], 1 ; call rax
0x00000000004255df : rcr byte ptr [rbp], cl ; call rax
0x0000000000509d89 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000050276d : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000006d0b6d : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000006cca04 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000074a368 : rcr byte ptr [rbx + 8], 0 ; rcr dl, 1 ; clc ; jmp rax
0x00000000007cd7e5 : rcr byte ptr [rbx], 1 ; add dh, al ; sldt word ptr [rax] ; add bh, ch ; syscall
0x000000000040eafc : rcr byte ptr [rbx], 1 ; sub eax, dword ptr [rax] ; leave ; ret
0x00000000007f5d44 : rcr byte ptr [rbx], cl ; add bh, dl ; add al, 5 ; int1 ; sbb al, byte ptr [rax] ; ret
0x000000000074a2e8 : rcr byte ptr [rcx + 8], 0 ; add bh, dl ; clc ; jmp rax
0x000000000074cc70 : rcr byte ptr [rcx - 0x34], 1 ; call qword ptr [rsi]
0x000000000070f141 : rcr byte ptr [rcx], 0 ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x000000000061500b : rcr byte ptr [rcx], 0x48 ; mov edi, eax ; call 0x6a1a97
0x000000000074012c : rcr byte ptr [rcx], 0xe5 ; call qword ptr [rax]
0x000000000046557c : rcr byte ptr [rcx], cl ; call rax
0x000000000044087a : rcr byte ptr [rdi - 0x76b7ffda], cl ; ret
0x0000000000744fbc : rcr byte ptr [rdi], 0xef ; call rax
0x000000000048346f : rcr byte ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000074a328 : rcr byte ptr [rdx + 8], 0 ; xor cl, bl ; clc ; jmp rax
0x00000000006b3204 : rcr byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000739a78 : rcr byte ptr [rip - 0x6b3bfffd], 0xd8 ; jmp rax
0x000000000065c7fa : rcr byte ptr [rip - 0x76b7fffa], cl ; ret 0xc748
0x00000000006a857b : rcr byte ptr [rsi + 0x31c300a0], 0xc0 ; ret
0x0000000000572ef7 : rcr byte ptr [rsi + 0x70], 0 ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000722c7f : rcr byte ptr [rsi + 0x7e], 1 ; in al, dx ; ret 0x6cad
0x000000000041585e : rcr byte ptr [rsi], 1 ; call rax
0x00000000005beede : rcr byte ptr [rsp + rcx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000771700 : rcr ch, 0xda ; call rsi
0x000000000073fbbc : rcr ch, 0xe4 ; call rax
0x000000000077e571 : rcr ch, 0xff ; retf
0x00000000005a3100 : rcr cl, 0xd ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006849bd : rcr cl, 0xf7 ; add rsp, 0x38 ; ret
0x000000000073bf6d : rcr dh, 0xff ; push rax ; fld qword ptr [rbx] ; add byte ptr [rax], ah ; ret
0x0000000000738d00 : rcr dh, 2 ; add byte ptr [rsi - 0x19], dl ; salc ; jmp rax
0x00000000007423d0 : rcr dl, 1 ; add eax, 0xe8b0a000 ; call qword ptr [rax]
0x000000000074a36c : rcr dl, 1 ; clc ; jmp rax
0x00000000007aa980 : rcr dl, 1 ; in al, dx ; call qword ptr [rdx]
0x0000000000738c10 : rcr dl, 2 ; add dh, dl ; fst st(6) ; jmp rax
0x00000000004f2728 : rcr dword ptr [rax + rax], -0x37 ; ret
0x00000000007ddbba : rcr dword ptr [rax + rax], cl ; cwde ; syscall
0x0000000000507378 : rcr dword ptr [rax + rax], cl ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000056ae69 : rcr dword ptr [rax - 0x76b7ffea], cl ; ret
0x0000000000547373 : rcr dword ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006bfdaf : rcr dword ptr [rbp + 0x41], 0x5c ; pop r13 ; jmp r8
0x0000000000425794 : rcr dword ptr [rbp], 1 ; call rax
0x000000000042559c : rcr dword ptr [rbp], cl ; call rax
0x00000000007cd8ba : rcr dword ptr [rcx], 5 ; clc ; sbb dword ptr [rax], eax ; retf
0x00000000004654df : rcr dword ptr [rcx], cl ; call rax
0x00000000004c529b : rcr dword ptr [rdx + 0x1c], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004549e9 : rcr dword ptr [rsi - 1], 1 ; dec ecx ; ret
0x00000000007c7053 : rcr dword ptr [rsi], 0 ; pushfq ; sbb dword ptr [rbx], eax ; add byte ptr [rax], al ; retf
0x0000000000684c2b : rcr eax, 0xd ; loop 0x684c73 ; or al, byte ptr [rax] ; ret
0x000000000073b48d : rcr ebp, -1 ; cwde ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, dword ptr [rax] ; push rax ; ret 0xffdd
0x000000000077e5d9 : rcr ebp, -1 ; retf 1
0x0000000000684025 : rcr ecx, -3 ; fstp st(1) ; ret
0x0000000000784da1 : rcr edi, 1 ; call qword ptr [rbx]
0x0000000000784f61 : rcr edi, cl ; call rax
0x0000000000684c97 : rcr esi, -0xf ; fsubp st(1) ; add rsp, 0x28 ; ret
0x0000000000781dc1 : rcr esi, 1 ; jmp rcx
0x0000000000406a7b : rcr esp, 0x2c ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x0000000000682966 : rcr esp, 0xd ; retf
0x0000000000526655 : rcr esp, 1 ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x000000000042559b : rcr qword ptr [r13], cl ; call rax
0x00000000006b2f1a : rep movsq qword ptr [rdi], qword ptr [rsi] ; mov dword ptr [rdx + 0x9c8], eax ; ret
0x00000000006c86e4 : rep movsq qword ptr [rdi], qword ptr [rsi] ; mov rax, rbx ; pop rbx ; ret
0x00000000006b2f46 : rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000006c689f : rep stosq qword ptr [rdi], rax ; ret
0x0000000000402331 : ret
0x00000000004840d2 : ret 0
0x000000000052c722 : ret 0x10
0x0000000000720d9e : ret 0x1000
0x000000000065f0d8 : ret 0x101
0x00000000006799f3 : ret 0x102
0x00000000005be2da : ret 0x1026
0x00000000007d3b7c : ret 0x103
0x00000000005d7e4c : ret 0x104
0x0000000000721942 : ret 0x104a
0x00000000007f0397 : ret 0x105
0x000000000057b96c : ret 0x105b
0x000000000069d267 : ret 0x106
0x0000000000517ae9 : ret 0x107
0x000000000057828c : ret 0x1078
0x00000000004ca699 : ret 0x107c
0x000000000066d12d : ret 0x107d
0x00000000004e48c0 : ret 0x107e
0x0000000000580aea : ret 0x1094
0x0000000000575d8a : ret 0x109d
0x000000000069d402 : ret 0x10a
0x000000000040a2e9 : ret 0x10b8
0x000000000060d140 : ret 0x10be
0x0000000000541e54 : ret 0x10bf
0x0000000000574d6c : ret 0x10c7
0x000000000069cf12 : ret 0x10e
0x000000000044f8a6 : ret 0x10e8
0x0000000000677fec : ret 0x10e9
0x0000000000429dba : ret 0x10f
0x000000000057068a : ret 0x10f4
0x00000000005924ca : ret 0x10f5
0x0000000000565051 : ret 0x11
0x000000000057116c : ret 0x1103
0x00000000007dd551 : ret 0x1104
0x00000000005c267a : ret 0x1120
0x000000000056bd8c : ret 0x113d
0x000000000055173a : ret 0x115d
0x000000000043eda8 : ret 0x1175
0x000000000040d090 : ret 0x117c
0x00000000004c7da8 : ret 0x117e
0x0000000000566b8c : ret 0x118f
0x00000000004ed167 : ret 0x11e8
0x00000000005547dd : ret 0x12
0x00000000007d5677 : ret 0x1202
0x000000000055c3c6 : ret 0x1247
0x000000000057a843 : ret 0x1274
0x00000000004b438f : ret 0x1275
0x000000000043ffed : ret 0x127c
0x000000000056110a : ret 0x1283
0x000000000057eb2a : ret 0x129e
0x0000000000551c8c : ret 0x12de
0x000000000054fc8c : ret 0x12fe
0x000000000053614a : ret 0x13
0x00000000007d7b27 : ret 0x1301
0x00000000007f0d93 : ret 0x1303
0x000000000054b7aa : ret 0x1374
0x0000000000494442 : ret 0x137d
0x00000000006369b5 : ret 0x138
0x000000000040a881 : ret 0x13e8
0x0000000000535011 : ret 0x14
0x00000000007d0547 : ret 0x1404
0x00000000007f20bd : ret 0x140f
0x000000000056eeea : ret 0x141
0x00000000007ce2dd : ret 0x1410
0x000000000059357a : ret 0x1411
0x0000000000583c53 : ret 0x144
0x00000000004055f6 : ret 0x145
0x000000000053be6c : ret 0x1456
0x000000000058ec7a : ret 0x145a
0x00000000004a0589 : ret 0x1474
0x00000000004c8122 : ret 0x1475
0x0000000000425e4a : ret 0x147c
0x000000000048766c : ret 0x147d
0x0000000000486648 : ret 0x147e
0x00000000004d9cf6 : ret 0x147f
0x0000000000477e67 : ret 0x148
0x00000000006896ba : ret 0x1489
0x00000000006b374a : ret 0x148b
0x00000000004ce0cd : ret 0x148d
0x00000000004056c5 : ret 0x14c
0x00000000005325a0 : ret 0x14d5
0x0000000000488748 : ret 0x14e8
0x00000000006c55d9 : ret 0x14eb
0x00000000004dc6d6 : ret 0x15
0x00000000007f5ced : ret 0x1502
0x000000000052ad8a : ret 0x154d
0x00000000004bc3bb : ret 0x1575
0x000000000048f208 : ret 0x157c
0x0000000000528634 : ret 0x158c
0x000000000065be21 : ret 0x15b9
0x0000000000522e34 : ret 0x15e4
0x00000000004c6635 : ret 0x15e8
0x000000000055ea0a : ret 0x15fb
0x00000000004ef36f : ret 0x16
0x00000000007ed28d : ret 0x1601
0x00000000007e3562 : ret 0x1609
0x000000000051dfa0 : ret 0x1626
0x000000000043b377 : ret 0x1672
0x00000000006c5717 : ret 0x1674
0x00000000004b9b76 : ret 0x1675
0x0000000000452639 : ret 0x167c
0x00000000006ca1d7 : ret 0x167e
0x00000000005543ca : ret 0x16a4
0x0000000000514d6c : ret 0x16c7
0x00000000005133fe : ret 0x16d6
0x000000000051198c : ret 0x16e1
0x00000000005d8a76 : ret 0x16e8
0x0000000000637f4e : ret 0x16e9
0x000000000050b6bb : ret 0x17
0x00000000007d4518 : ret 0x1706
0x000000000050e68c : ret 0x1714
0x000000000050d78c : ret 0x1723
0x000000000050deee : ret 0x172c
0x0000000000666784 : ret 0x1772
0x00000000004e241b : ret 0x1775
0x00000000004ce01e : ret 0x177c
0x0000000000449d57 : ret 0x17e8
0x0000000000500bfe : ret 0x17fe
0x00000000004f3885 : ret 0x18
0x00000000007d5c70 : ret 0x1805
0x00000000007c2276 : ret 0x1807
0x00000000004fe3fe : ret 0x1826
0x00000000004fbd8c : ret 0x183d
0x00000000004fd9fa : ret 0x183f
0x00000000004f95a0 : ret 0x1865
0x000000000052351a : ret 0x1873
0x0000000000606e45 : ret 0x1878
0x00000000004a5716 : ret 0x187c
0x00000000004f7efe : ret 0x188b
0x0000000000505d0a : ret 0x1893
0x00000000007f36fd : ret 0x18a
0x000000000063fa91 : ret 0x18be
0x00000000005318ea : ret 0x18cf
0x000000000050120a : ret 0x18de
0x0000000000418186 : ret 0x18e8
0x00000000004f2334 : ret 0x18ef
0x00000000004fb2aa : ret 0x18fa
0x00000000004e38db : ret 0x19
0x00000000007ef10a : ret 0x1901
0x00000000007f622d : ret 0x1908
0x00000000004ef7fe : ret 0x1912
0x0000000000681d64 : ret 0x1972
0x00000000004b9b3f : ret 0x1975
0x00000000004a7f1f : ret 0x197c
0x00000000004da596 : ret 0x198
0x00000000007cab2b : ret 0x199
0x0000000000539c7a : ret 0x19aa
0x00000000004f3c0a : ret 0x19be
0x00000000004e47ee : ret 0x19c3
0x00000000007cab6b : ret 0x19e
0x0000000000418c29 : ret 0x19e8
0x000000000069c872 : ret 0x19eb
0x000000000053597a : ret 0x19ed
0x0000000000528474 : ret 0x1a
0x000000000050808a : ret 0x1a27
0x00000000007faac4 : ret 0x1a3
0x00000000004d908a : ret 0x1a6a
0x000000000048c5d5 : ret 0x1a7c
0x000000000067fcfb : ret 0x1a8
0x00000000004d678a : ret 0x1a93
0x00000000007f3bfe : ret 0x1ad
0x0000000000414672 : ret 0x1ae8
0x000000000050d391 : ret 0x1ae9
0x00000000005079d7 : ret 0x1aeb
0x000000000050f80a : ret 0x1aed
0x00000000004c4943 : ret 0x1b
0x00000000007f3c73 : ret 0x1b0
0x00000000007eb829 : ret 0x1b04
0x000000000051913d : ret 0x1b2
0x00000000004ccafe : ret 0x1b3f
0x00000000004cb2ee : ret 0x1b58
0x00000000004b4136 : ret 0x1b74
0x0000000000440c52 : ret 0x1b7c
0x00000000005f2059 : ret 0x1b7d
0x00000000004a84e8 : ret 0x1b7f
0x0000000000426604 : ret 0x1b8
0x00000000004c7dfe : ret 0x1b8c
0x00000000006b3a17 : ret 0x1b9
0x00000000004c73fe : ret 0x1b96
0x0000000000721bb5 : ret 0x1ba9
0x00000000004cd92a : ret 0x1bbf
0x00000000007fae27 : ret 0x1bc
0x00000000004770ec : ret 0x1be
0x000000000040b8d5 : ret 0x1be8
0x00000000004d3a47 : ret 0x1bf
0x0000000000500b0a : ret 0x1bfb
0x00000000004b5280 : ret 0x1c
0x00000000004c852a : ret 0x1c1a
0x00000000004be1fe : ret 0x1c28
0x00000000007f3346 : ret 0x1c5
0x00000000004f76ea : ret 0x1c71
0x00000000004b95fe : ret 0x1c74
0x0000000000451a69 : ret 0x1c75
0x0000000000468441 : ret 0x1c7c
0x00000000007faf8e : ret 0x1c8
0x0000000000721a0b : ret 0x1cc6
0x00000000004cb47e : ret 0x1ce8
0x00000000006afd4a : ret 0x1d6
0x00000000004aa226 : ret 0x1d68
0x00000000007f2d2e : ret 0x1d7
0x00000000006947a0 : ret 0x1d75
0x00000000004ced7f : ret 0x1d7c
0x000000000043fb24 : ret 0x1d7d
0x00000000004a41ee : ret 0x1dc9
0x00000000004a2d6c : ret 0x1de7
0x00000000004f17f3 : ret 0x1de8
0x00000000004e84a9 : ret 0x1e
0x00000000007eed13 : ret 0x1e01
0x00000000007f2fc7 : ret 0x1e2
0x00000000007f4441 : ret 0x1e5
0x00000000007f4469 : ret 0x1e6
0x000000000043d802 : ret 0x1e72
0x00000000005202a7 : ret 0x1e75
0x0000000000469228 : ret 0x1e7c
0x00000000004ca7ef : ret 0x1e8
0x0000000000534c23 : ret 0x1e9
0x00000000005c8da6 : ret 0x1ebf
0x00000000004a38ea : ret 0x1ec0
0x00000000004e747a : ret 0x1ed2
0x0000000000492b34 : ret 0x1ee7
0x0000000000491062 : ret 0x1efa
0x00000000004847e1 : ret 0x1f
0x00000000007efb46 : ret 0x1f02
0x0000000000509ff0 : ret 0x1f0f
0x00000000007f4662 : ret 0x1f3
0x0000000000613b06 : ret 0x1f74
0x0000000000450670 : ret 0x1f75
0x00000000005a2694 : ret 0x1f7c
0x00000000007f47aa : ret 0x1fc
0x000000000048caea : ret 0x1fd4
0x000000000048022f : ret 0x1fe8
0x000000000062f47e : ret 0x1fe9
0x00000000006b12de : ret 0x1feb
0x0000000000480c26 : ret 0x1ffe
0x000000000049e649 : ret 0x20
0x00000000007f3f37 : ret 0x2001
0x000000000057ddf0 : ret 0x2040
0x00000000007e8d7d : ret 0x206
0x000000000043b5f2 : ret 0x2072
0x0000000000446271 : ret 0x2075
0x00000000004deef9 : ret 0x207c
0x0000000000496e8a : ret 0x20e8
0x00000000004650dd : ret 0x21
0x000000000069cbef : ret 0x2141
0x000000000069cd26 : ret 0x2144
0x0000000000728851 : ret 0x2168
0x000000000043e38a : ret 0x2174
0x0000000000411ff5 : ret 0x2175
0x0000000000487341 : ret 0x217c
0x0000000000524182 : ret 0x217f
0x0000000000467bfe : ret 0x218e
0x00000000004a440a : ret 0x21a1
0x000000000043de55 : ret 0x21e8
0x00000000004550e9 : ret 0x22
0x000000000045e3a0 : ret 0x2217
0x000000000045dba0 : ret 0x222a
0x00000000004b057a : ret 0x2241
0x00000000004111bb : ret 0x2275
0x00000000004b35da : ret 0x227c
0x000000000050800b : ret 0x227f
0x000000000047569a : ret 0x22c7
0x000000000040ae96 : ret 0x22e8
0x0000000000534b02 : ret 0x22e9
0x000000000046e5f3 : ret 0x23
0x000000000044d48a : ret 0x2326
0x000000000055eafc : ret 0x2348
0x00000000004cc675 : ret 0x2374
0x000000000048c584 : ret 0x237c
0x0000000000674c99 : ret 0x23c
0x0000000000485e5d : ret 0x23e8
0x0000000000433910 : ret 0x24
0x00000000007d2ec2 : ret 0x2414
0x000000000043cd8c : ret 0x242d
0x00000000007fa1af : ret 0x2459
0x000000000043c2e2 : ret 0x2472
0x000000000041140c : ret 0x2475
0x00000000004872e6 : ret 0x247c
0x0000000000542699 : ret 0x247f
0x00000000004ad79a : ret 0x24e8
0x00000000006c6b6b : ret 0x24ff
0x00000000004238bf : ret 0x25
0x00000000007caffc : ret 0x2501
0x000000000042a88a : ret 0x2552
0x00000000004467e0 : ret 0x2572
0x00000000006152e5 : ret 0x2574
0x000000000048645a : ret 0x257c
0x0000000000557e08 : ret 0x257f
0x00000000006a707a : ret 0x25d
0x00000000006633a5 : ret 0x25e8
0x000000000045507a : ret 0x26
0x000000000043faca : ret 0x261d
0x000000000041a68c : ret 0x2654
0x000000000043c451 : ret 0x2672
0x00000000004be9e1 : ret 0x2674
0x000000000040cf28 : ret 0x2675
0x000000000065e2df : ret 0x2676
0x000000000043fb5a : ret 0x267c
0x00000000004ccc83 : ret 0x267d
0x00000000004c5ba6 : ret 0x267e
0x000000000044158a : ret 0x2692
0x0000000000659ffe : ret 0x26a
0x00000000004247ea : ret 0x26b1
0x000000000041438a : ret 0x26b7
0x0000000000620232 : ret 0x26e8
0x0000000000721f66 : ret 0x26f2
0x000000000040500a : ret 0x27
0x00000000007ea00c : ret 0x2706
0x000000000044f84a : ret 0x2742
0x000000000045fd7a : ret 0x2749
0x000000000043b586 : ret 0x2774
0x00000000006a1ef6 : ret 0x277c
0x00000000004c5dc8 : ret 0x277e
0x00000000006873e5 : ret 0x277f
0x0000000000448b7a : ret 0x2786
0x0000000000408734 : ret 0x278b
0x000000000042665a : ret 0x27a1
0x000000000040488a : ret 0x27b2
0x000000000040cc59 : ret 0x27e8
0x0000000000432334 : ret 0x28
0x00000000007c3699 : ret 0x2802
0x000000000045357a : ret 0x2811
0x000000000045307a : ret 0x2816
0x000000000045087a : ret 0x283e
0x0000000000455b4f : ret 0x2874
0x0000000000528824 : ret 0x2875
0x0000000000480144 : ret 0x287c
0x0000000000523855 : ret 0x287d
0x00000000006c8eb6 : ret 0x287e
0x00000000004cf4b7 : ret 0x28be
0x000000000063468d : ret 0x28bf
0x0000000000620b38 : ret 0x28e8
0x00000000005bfe74 : ret 0x28e9
0x0000000000657afe : ret 0x28f
0x0000000000537a41 : ret 0x2901
0x0000000000661cc5 : ret 0x2944
0x0000000000469494 : ret 0x2948
0x000000000048c36f : ret 0x2949
0x00000000005054e5 : ret 0x294c
0x00000000005a05eb : ret 0x294d
0x00000000004dee0c : ret 0x297f
0x0000000000473eef : ret 0x29e8
0x000000000041263a : ret 0x2a
0x00000000007f3f27 : ret 0x2a01
0x00000000007d4ef8 : ret 0x2a02
0x0000000000512f2b : ret 0x2a1
0x00000000004b9c92 : ret 0x2a75
0x0000000000469196 : ret 0x2a7c
0x0000000000416404 : ret 0x2ae8
0x00000000004184c5 : ret 0x2b
0x00000000007c6490 : ret 0x2b02
0x00000000007e38c0 : ret 0x2b26
0x0000000000486921 : ret 0x2b48
0x0000000000582862 : ret 0x2b74
0x00000000004b9d47 : ret 0x2b75
0x000000000068805c : ret 0x2b77
0x000000000040d975 : ret 0x2b7e
0x000000000041b47a : ret 0x2b92
0x00000000006c49c8 : ret 0x2bdb
0x000000000041687a : ret 0x2bde
0x0000000000566777 : ret 0x2be
0x00000000004a818f : ret 0x2be8
0x00000000004d3c9f : ret 0x2bf
0x00000000007f0311 : ret 0x2c01
0x00000000007c7bea : ret 0x2c02
0x000000000041357a : ret 0x2c11
0x000000000040f77a : ret 0x2c4f
0x00000000004a3b84 : ret 0x2c7
0x000000000040efd3 : ret 0x2c74
0x00000000006052f1 : ret 0x2c75
0x00000000004d9c18 : ret 0x2c7c
0x00000000005ce268 : ret 0x2c7e
0x0000000000407c7a : ret 0x2cca
0x0000000000459cf4 : ret 0x2ce8
0x00000000007e5469 : ret 0x2d
0x00000000007c8939 : ret 0x2d02
0x000000000065278c : ret 0x2d3
0x000000000065268a : ret 0x2d4
0x0000000000722a08 : ret 0x2d4f
0x0000000000427cb3 : ret 0x2de8
0x0000000000604055 : ret 0x2e66
0x0000000000411fe8 : ret 0x2e75
0x0000000000425064 : ret 0x2e8
0x00000000004af858 : ret 0x2eb
0x00000000004ccd84 : ret 0x2ee8
0x00000000004b4122 : ret 0x2f74
0x00000000004f7055 : ret 0x2f7c
0x00000000005633fe : ret 0x2f7d
0x00000000007f48a8 : ret 0x2f7e
0x000000000041c74d : ret 0x2fe8
0x00000000007d0a3d : ret 0x30
0x00000000007f1f55 : ret 0x3001
0x00000000007d8062 : ret 0x3006
0x00000000007f03f4 : ret 0x301
0x00000000007d4cc7 : ret 0x302
0x00000000004a7edf : ret 0x307c
0x0000000000489fda : ret 0x307e
0x000000000051bea0 : ret 0x307f
0x0000000000693a7a : ret 0x308
0x00000000007f6925 : ret 0x309
0x0000000000722bb6 : ret 0x30a4
0x000000000064019c : ret 0x30be
0x00000000007c69fb : ret 0x30c
0x0000000000417c0a : ret 0x30e8
0x00000000006656f1 : ret 0x30e9
0x0000000000610e96 : ret 0x3101
0x000000000066538c : ret 0x3104
0x00000000006cdcff : ret 0x3108
0x0000000000607e2b : ret 0x310f
0x000000000069d2c8 : ret 0x3144
0x00000000005c4fd8 : ret 0x3145
0x0000000000667328 : ret 0x3148
0x00000000005fcc8e : ret 0x3174
0x0000000000411f8f : ret 0x3175
0x000000000068884e : ret 0x3190
0x00000000007e378a : ret 0x31d
0x00000000007c5d7b : ret 0x31e
0x00000000004d2509 : ret 0x31e8
0x00000000007e3801 : ret 0x320
0x000000000069c2e6 : ret 0x3201
0x00000000007e38ae : ret 0x325
0x00000000007d9c70 : ret 0x327
0x00000000007d9cc3 : ret 0x32a
0x00000000005d7b58 : ret 0x32e8
0x00000000007dc485 : ret 0x33
0x000000000064e234 : ret 0x330
0x000000000069d677 : ret 0x3304
0x00000000007f32ba : ret 0x3361
0x00000000006d622a : ret 0x3373
0x0000000000688cea : ret 0x3374
0x00000000005f8730 : ret 0x337c
0x00000000007f24dc : ret 0x339
0x00000000004d2b55 : ret 0x33e8
0x000000000046240c : ret 0x34
0x00000000006c051a : ret 0x3423
0x00000000004ca689 : ret 0x347c
0x000000000067e911 : ret 0x347d
0x00000000005413b0 : ret 0x348
0x000000000064b08c : ret 0x34a
0x000000000045e328 : ret 0x34e8
0x0000000000662f20 : ret 0x34eb
0x00000000006a6964 : ret 0x35
0x00000000007f63f9 : ret 0x351c
0x0000000000570be3 : ret 0x35be
0x00000000006a44fa : ret 0x35e3
0x000000000048ae6b : ret 0x35e8
0x0000000000693ce0 : ret 0x35eb
0x00000000006965e8 : ret 0x36
0x00000000005c5600 : ret 0x3675
0x00000000004be45c : ret 0x36e8
0x000000000068d484 : ret 0x37
0x000000000068e21a : ret 0x3746
0x000000000069369e : ret 0x3762
0x0000000000722d05 : ret 0x376a
0x00000000006492fe : ret 0x377
0x0000000000666e79 : ret 0x3773
0x00000000004bd155 : ret 0x3774
0x0000000000450658 : ret 0x3775
0x0000000000692142 : ret 0x3777
0x000000000043d843 : ret 0x37e8
0x00000000006b6d92 : ret 0x37e9
0x00000000006c3ec9 : ret 0x37f
0x0000000000685baa : ret 0x3838
0x00000000005413cc : ret 0x3840
0x00000000004944ba : ret 0x3875
0x00000000004c1a45 : ret 0x38b
0x0000000000640786 : ret 0x38be
0x0000000000721789 : ret 0x38d8
0x0000000000721a1c : ret 0x38d9
0x000000000042901a : ret 0x38e8
0x00000000006719aa : ret 0x38f
0x000000000066d033 : ret 0x39
0x000000000046843e : ret 0x3901
0x000000000058b8d2 : ret 0x3904
0x0000000000647926 : ret 0x391
0x000000000064688a : ret 0x392
0x00000000007f249a : ret 0x3935
0x00000000004b3bb2 : ret 0x3941
0x00000000004b3bb9 : ret 0x3944
0x00000000005b79fb : ret 0x3945
0x0000000000512441 : ret 0x3948
0x000000000053f12a : ret 0x3949
0x0000000000522b2c : ret 0x394c
0x000000000053dff8 : ret 0x394d
0x0000000000678017 : ret 0x3964
0x000000000066c376 : ret 0x3968
0x00000000007224aa : ret 0x39b9
0x00000000004294ff : ret 0x39e8
0x0000000000579a10 : ret 0x39e9
0x0000000000645b8c : ret 0x39f
0x000000000065cb80 : ret 0x3a
0x00000000004691d7 : ret 0x3a7c
0x0000000000482544 : ret 0x3a9
0x0000000000481732 : ret 0x3aa
0x0000000000487f0b : ret 0x3ab9
0x00000000004e4bcc : ret 0x3ae8
0x00000000006103c2 : ret 0x3ae9
0x0000000000652d22 : ret 0x3afb
0x00000000006466d2 : ret 0x3b
0x0000000000481c62 : ret 0x3b2
0x000000000072188c : ret 0x3b3
0x000000000064da1a : ret 0x3b4e
0x0000000000653b55 : ret 0x3b4f
0x000000000064448c : ret 0x3b6
0x0000000000522c52 : ret 0x3b74
0x00000000005186ec : ret 0x3b7c
0x0000000000645a34 : ret 0x3b8
0x0000000000643e8c : ret 0x3bc
0x0000000000565d95 : ret 0x3be
0x00000000004a6bff : ret 0x3be8
0x0000000000694b5a : ret 0x3be9
0x00000000004d3dc9 : ret 0x3bf
0x000000000063c582 : ret 0x3c
0x000000000063c11a : ret 0x3c67
0x000000000063ac22 : ret 0x3c7c
0x0000000000678ea1 : ret 0x3c7d
0x000000000067a8a3 : ret 0x3c7e
0x0000000000680037 : ret 0x3c80
0x0000000000639d22 : ret 0x3c8b
0x0000000000449344 : ret 0x3ce8
0x0000000000721fd3 : ret 0x3cfb
0x000000000062667b : ret 0x3d
0x000000000063261a : ret 0x3d02
0x00000000007d1c31 : ret 0x3d03
0x000000000063071a : ret 0x3d21
0x000000000062e21a : ret 0x3d46
0x00000000004ab913 : ret 0x3d48
0x000000000062d91a : ret 0x3d4f
0x000000000062bb22 : ret 0x3d6d
0x00000000004691c0 : ret 0x3d7c
0x00000000007c6730 : ret 0x3e0e
0x00000000007f2265 : ret 0x3e1f
0x0000000000621702 : ret 0x3e6f
0x0000000000567b3f : ret 0x3e74
0x000000000042650b : ret 0x3e8
0x0000000000666c1e : ret 0x3eba
0x000000000047e6ce : ret 0x3ee8
0x0000000000566534 : ret 0x3ee9
0x000000000060c4b3 : ret 0x3f
0x0000000000616002 : ret 0x3f26
0x000000000060da1a : ret 0x3f4e
0x00000000004b9c7d : ret 0x3f75
0x000000000047b785 : ret 0x3fe8
0x00000000006c828e : ret 0x3fe9
0x0000000000602722 : ret 0x4001
0x00000000006c9dee : ret 0x4004
0x000000000060201a : ret 0x4008
0x00000000007ce3cb : ret 0x401
0x00000000007df732 : ret 0x402
0x00000000007d2432 : ret 0x403
0x000000000053adbd : ret 0x4074
0x00000000006a65bd : ret 0x4075
0x000000000067bd4d : ret 0x407c
0x00000000006b0616 : ret 0x408d
0x00000000005f8d1a : ret 0x409b
0x0000000000640864 : ret 0x40be
0x000000000040cb0b : ret 0x40bf
0x000000000040f50e : ret 0x40e8
0x000000000065db7f : ret 0x4101
0x0000000000691edc : ret 0x4102
0x000000000069d365 : ret 0x4106
0x0000000000537986 : ret 0x4108
0x00000000005665e9 : ret 0x410b
0x000000000064eb60 : ret 0x410f
0x000000000067f8f6 : ret 0x4130
0x00000000006d74f0 : ret 0x4136
0x0000000000666652 : ret 0x4166
0x000000000048e531 : ret 0x41e8
0x0000000000508841 : ret 0x41f0
0x0000000000694a6f : ret 0x4201
0x00000000006d95b0 : ret 0x420b
0x00000000007e6e28 : ret 0x420f
0x000000000067c30a : ret 0x422
0x0000000000631fda : ret 0x425
0x000000000069cd17 : ret 0x430c
0x0000000000721b1e : ret 0x4374
0x00000000005f2793 : ret 0x4375
0x0000000000674963 : ret 0x4388
0x000000000043f62e : ret 0x438b
0x00000000005c6e1a : ret 0x43ba
0x000000000063d434 : ret 0x43e
0x0000000000418e25 : ret 0x43e8
0x00000000005799cb : ret 0x43e9
0x00000000005b65eb : ret 0x44
0x000000000062c3e9 : ret 0x4401
0x00000000005c241a : ret 0x4404
0x000000000069ce37 : ret 0x4405
0x000000000069cc6f : ret 0x440c
0x00000000005fbe7d : ret 0x440f
0x000000000069d149 : ret 0x4410
0x000000000065d5ca : ret 0x444
0x000000000068b241 : ret 0x447d
0x000000000065dd79 : ret 0x4488
0x000000000055b8fb : ret 0x4489
0x00000000006c6373 : ret 0x448b
0x00000000006b3ac6 : ret 0x448d
0x00000000005b741a : ret 0x44b4
0x00000000005b651a : ret 0x44c3
0x000000000067f0ea : ret 0x44c6
0x00000000005b4b1a : ret 0x44dd
0x000000000048240a : ret 0x44e8
0x00000000006d68b5 : ret 0x44fd
0x00000000005b2a1a : ret 0x44fe
0x000000000053f2d4 : ret 0x4501
0x00000000005b251a : ret 0x4503
0x0000000000565c3a : ret 0x4504
0x000000000069cecb : ret 0x4505
0x000000000069d0b7 : ret 0x450b
0x00000000006820d3 : ret 0x450f
0x00000000005b071a : ret 0x4521
0x00000000006dda98 : ret 0x452f
0x00000000005cfb04 : ret 0x453b
0x00000000005b141a : ret 0x4547
0x00000000006dec10 : ret 0x455a
0x00000000006deef8 : ret 0x4561
0x00000000006669b0 : ret 0x4566
0x000000000040c8bc : ret 0x4574
0x00000000004e6ccc : ret 0x4589
0x000000000040d967 : ret 0x458b
0x00000000005a8d1a : ret 0x459b
0x0000000000543377 : ret 0x45c6
0x0000000000418f47 : ret 0x45e8
0x00000000005fa238 : ret 0x45e9
0x00000000005965fb : ret 0x46
0x00000000006a1587 : ret 0x4603
0x000000000064d79f : ret 0x4605
0x000000000064c89b : ret 0x4606
0x000000000064d45d : ret 0x4607
0x000000000064c96a : ret 0x4608
0x00000000005a021a : ret 0x4626
0x000000000043fd9b : ret 0x4675
0x000000000059aa1a : ret 0x467e
0x0000000000596e1a : ret 0x46ba
0x000000000059611a : ret 0x46c7
0x0000000000491ba0 : ret 0x46e8
0x00000000005826ae : ret 0x47
0x000000000069ccf4 : ret 0x4707
0x00000000006e5f60 : ret 0x4715
0x000000000058e81a : ret 0x4740
0x000000000058dba2 : ret 0x474c
0x0000000000721c85 : ret 0x4765
0x00000000005a0053 : ret 0x4775
0x000000000058a01a : ret 0x4788
0x0000000000416d63 : ret 0x47e8
0x000000000068bd5a : ret 0x47e9
0x00000000007f6db1 : ret 0x48
0x000000000064ac30 : ret 0x4800
0x000000000046855a : ret 0x4801
0x00000000006610c8 : ret 0x4802
0x000000000040aa06 : ret 0x4803
0x0000000000587ab5 : ret 0x4804
0x000000000043ed41 : ret 0x4808
0x0000000000519b4f : ret 0x480b
0x000000000069f458 : ret 0x480c
0x00000000004a7aab : ret 0x480d
0x00000000004cee9e : ret 0x480e
0x00000000004fc4cc : ret 0x480f
0x00000000004a7b11 : ret 0x4810
0x000000000068fd2c : ret 0x4812
0x0000000000519b47 : ret 0x4814
0x00000000004f806f : ret 0x4817
0x000000000045e722 : ret 0x4818
0x0000000000614d83 : ret 0x4819
0x000000000069d8f5 : ret 0x481b
0x0000000000510ae2 : ret 0x481f
0x00000000004b16f6 : ret 0x4820
0x00000000004a6b3e : ret 0x4828
0x00000000006776f8 : ret 0x4841
0x000000000065b83d : ret 0x4844
0x000000000061d46f : ret 0x4847
0x00000000004cdf36 : ret 0x485f
0x00000000004da4fd : ret 0x4860
0x00000000004506c3 : ret 0x4874
0x000000000045b732 : ret 0x4875
0x00000000005d1d70 : ret 0x487e
0x0000000000425e3a : ret 0x488d
0x000000000057701a : ret 0x48b8
0x000000000062d4dd : ret 0x48be
0x000000000069ca4a : ret 0x48d
0x000000000040e116 : ret 0x48e8
0x00000000005666d2 : ret 0x49
0x000000000051c942 : ret 0x4901
0x000000000047c7b9 : ret 0x4908
0x00000000004cdf3d : ret 0x490e
0x0000000000694964 : ret 0x490f
0x00000000006d5e5e : ret 0x4910
0x0000000000571722 : ret 0x4911
0x00000000006627c1 : ret 0x4912
0x0000000000570622 : ret 0x4922
0x00000000004ae813 : ret 0x4928
0x000000000056bc1a : ret 0x496c
0x000000000043fbce : ret 0x4975
0x00000000004da76b : ret 0x4978
0x00000000006432f9 : ret 0x4980
0x0000000000722925 : ret 0x49bb
0x000000000056621a : ret 0x49c6
0x0000000000565d22 : ret 0x49cb
0x000000000045a9d9 : ret 0x49e8
0x00000000005565f2 : ret 0x4a
0x0000000000587b6d : ret 0x4a01
0x00000000005fb92d : ret 0x4a10
0x00000000006e9ce0 : ret 0x4a24
0x000000000063528c : ret 0x4a8
0x0000000000523882 : ret 0x4a8d
0x000000000055941a : ret 0x4a94
0x000000000041355a : ret 0x4ae8
0x000000000065708e : ret 0x4ae9
0x0000000000546572 : ret 0x4b
0x0000000000587a48 : ret 0x4b01
0x00000000006e1ff0 : ret 0x4b60
0x0000000000548af3 : ret 0x4b75
0x00000000006c8cfa : ret 0x4b89
0x00000000006dea68 : ret 0x4bd8
0x000000000062224f : ret 0x4be
0x000000000048d6f9 : ret 0x4be8
0x00000000006b0810 : ret 0x4be9
0x000000000050416a : ret 0x4c
0x00000000004f4582 : ret 0x4c01
0x00000000005ff069 : ret 0x4c02
0x000000000057ec48 : ret 0x4c08
0x00000000004c0d7f : ret 0x4c0f
0x00000000005268c9 : ret 0x4c14
0x000000000051a174 : ret 0x4c30
0x00000000004cee97 : ret 0x4c5f
0x00000000006d18c2 : ret 0x4c6
0x000000000066bc60 : ret 0x4c60
0x0000000000536c76 : ret 0x4c71
0x0000000000536976 : ret 0x4c74
0x00000000004bc384 : ret 0x4c75
0x00000000006deb10 : ret 0x4c78
0x000000000058e9c5 : ret 0x4c89
0x00000000004c0c24 : ret 0x4ce8
0x000000000052666c : ret 0x4d
0x00000000004f6385 : ret 0x4d01
0x00000000006b5e77 : ret 0x4d02
0x000000000047b8d5 : ret 0x4d08
0x00000000004c0841 : ret 0x4d0f
0x0000000000562960 : ret 0x4d20
0x000000000052ff1a : ret 0x4d29
0x00000000006ad8fc : ret 0x4d89
0x00000000004af27e : ret 0x4d8b
0x0000000000689f79 : ret 0x4d8d
0x0000000000526222 : ret 0x4dc6
0x00000000004c47b3 : ret 0x4de8
0x0000000000632c3b : ret 0x4de9
0x000000000051660f : ret 0x4e
0x00000000004c07e9 : ret 0x4e0f
0x00000000004139e5 : ret 0x4e74
0x00000000005129de : ret 0x4eae
0x0000000000722d16 : ret 0x4eb
0x0000000000515922 : ret 0x4ecf
0x000000000056e04c : ret 0x4ee8
0x000000000051191a : ret 0x4f0f
0x00000000005c805e : ret 0x4f7e
0x000000000072278a : ret 0x4fc4
0x000000000050461a : ret 0x4fe2
0x000000000061de1b : ret 0x4fe8
0x00000000004f4815 : ret 0x4fe9
0x00000000006f0b41 : ret 0x50
0x000000000050261a : ret 0x5002
0x00000000007ccb89 : ret 0x501
0x00000000007c5316 : ret 0x502
0x00000000007c51da : ret 0x503
0x00000000007d1c3c : ret 0x504
0x00000000007cd53e : ret 0x505
0x00000000004fca1a : ret 0x505e
0x00000000007cd17b : ret 0x507
0x000000000061ba79 : ret 0x5074
0x00000000007c018f : ret 0x508
0x00000000007cd7a1 : ret 0x509
0x000000000062d5d0 : ret 0x50bf
0x00000000007c973a : ret 0x50c
0x00000000007c1441 : ret 0x50e
0x0000000000498f18 : ret 0x50e8
0x00000000007dcb9d : ret 0x50f
0x00000000006f76a9 : ret 0x51
0x00000000007f6080 : ret 0x510
0x00000000007c144e : ret 0x511
0x0000000000722941 : ret 0x5112
0x00000000007dd127 : ret 0x512
0x00000000007d9261 : ret 0x513
0x00000000007f2bc6 : ret 0x514
0x00000000007ed182 : ret 0x515
0x00000000007d2ef6 : ret 0x516
0x00000000007d4a10 : ret 0x517
0x0000000000440300 : ret 0x5175
0x00000000007dd1f3 : ret 0x518
0x00000000006773fc : ret 0x5180
0x00000000007c6b55 : ret 0x519
0x00000000007d080c : ret 0x51a
0x00000000007f0f52 : ret 0x51b
0x00000000007f9c35 : ret 0x51d
0x000000000047cbc7 : ret 0x51e8
0x00000000007d0884 : ret 0x51f
0x00000000004d65f2 : ret 0x52
0x00000000007f5899 : ret 0x522
0x00000000007e5433 : ret 0x52a
0x00000000007c6c06 : ret 0x52c
0x0000000000443418 : ret 0x52e8
0x00000000005ca78b : ret 0x52e9
0x00000000006fa2b9 : ret 0x53
0x00000000007f6be8 : ret 0x534
0x0000000000494c1b : ret 0x5375
0x000000000067f8af : ret 0x537f
0x00000000006cd316 : ret 0x5388
0x00000000007228c6 : ret 0x538a
0x0000000000440d31 : ret 0x538b
0x00000000007dc8c3 : ret 0x53c
0x000000000055e637 : ret 0x53e8
0x00000000004a0342 : ret 0x53f
0x00000000006fdd41 : ret 0x54
0x000000000062b68c : ret 0x544
0x000000000051d26f : ret 0x5441
0x000000000047ed97 : ret 0x5474
0x00000000004b9c68 : ret 0x5475
0x00000000007c5dd1 : ret 0x548
0x00000000004fd09d : ret 0x5488
0x00000000004ccc04 : ret 0x54e8
0x000000000068d0eb : ret 0x54eb
0x00000000004d89d0 : ret 0x553b
0x000000000051d6bf : ret 0x5541
0x00000000007fa17c : ret 0x558
0x00000000006a447c : ret 0x5584
0x000000000065e383 : ret 0x5589
0x00000000004419cf : ret 0x55e8
0x000000000068c1d8 : ret 0x55e9
0x0000000000640d0f : ret 0x56
0x00000000004a20a2 : ret 0x5607
0x000000000056462f : ret 0x5641
0x0000000000722fd0 : ret 0x5657
0x0000000000451ac5 : ret 0x5674
0x0000000000686dc9 : ret 0x56e9
0x0000000000629e34 : ret 0x574
0x0000000000467848 : ret 0x575
0x00000000004b43a1 : ret 0x5774
0x0000000000511690 : ret 0x5775
0x000000000059c376 : ret 0x577e
0x00000000004ae0e2 : ret 0x57c
0x0000000000441495 : ret 0x57e8
0x00000000005d8d9e : ret 0x57f
0x000000000070c0d9 : ret 0x58
0x0000000000509575 : ret 0x5874
0x0000000000443bbb : ret 0x5875
0x0000000000692b74 : ret 0x58b
0x0000000000416132 : ret 0x58e8
0x000000000070f131 : ret 0x59
0x0000000000467c62 : ret 0x5956
0x00000000005f23d2 : ret 0x5974
0x0000000000508744 : ret 0x597c
0x000000000053b304 : ret 0x597e
0x0000000000710da9 : ret 0x5a
0x00000000007e6fcc : ret 0x5a06
0x00000000007fbc0d : ret 0x5a12
0x00000000006a50db : ret 0x5a74
0x00000000006b12fb : ret 0x5a7c
0x000000000059c143 : ret 0x5a7e
0x000000000041407a : ret 0x5ae8
0x000000000051753b : ret 0x5ae9
0x0000000000446670 : ret 0x5b
0x000000000044e61a : ret 0x5b42
0x0000000000623864 : ret 0x5be
0x0000000000427f2f : ret 0x5be8
0x00000000005c837b : ret 0x5be9
0x0000000000436641 : ret 0x5c
0x00000000005b1375 : ret 0x5c00
0x0000000000508763 : ret 0x5c74
0x00000000005268f1 : ret 0x5c89
0x00000000007234a9 : ret 0x5ca1
0x00000000005f984a : ret 0x5cb9
0x0000000000713350 : ret 0x5ce0
0x00000000004292fe : ret 0x5ce8
0x00000000004266e0 : ret 0x5d
0x00000000007f2e66 : ret 0x5d30
0x0000000000503cca : ret 0x5d5b
0x000000000060664a : ret 0x5d75
0x00000000006d6c88 : ret 0x5d78
0x0000000000426722 : ret 0x5dc1
0x00000000004912d5 : ret 0x5de8
0x00000000005e878d : ret 0x5e74
0x000000000061b9e7 : ret 0x5e75
0x0000000000682dbf : ret 0x5e77
0x0000000000473e75 : ret 0x5e8
0x0000000000660194 : ret 0x5e9
0x000000000048f21d : ret 0x5eb
0x000000000041761a : ret 0x5eb2
0x00000000004519a4 : ret 0x5ee8
0x00000000004065f4 : ret 0x5f
0x0000000000408ebe : ret 0x5f56
0x0000000000448fa8 : ret 0x5f74
0x000000000062303c : ret 0x5f7c
0x0000000000525b0e : ret 0x5f7e
0x0000000000403b82 : ret 0x5f8b
0x0000000000403982 : ret 0x5f8c
0x0000000000403782 : ret 0x5f8d
0x0000000000403582 : ret 0x5f8e
0x0000000000403382 : ret 0x5f8f
0x000000000040957a : ret 0x5f90
0x000000000040ce27 : ret 0x5fe8
0x00000000007bf1a9 : ret 0x6001
0x00000000007d99c9 : ret 0x601
0x00000000007d44a2 : ret 0x602
0x00000000007ecefe : ret 0x603
0x00000000007e0fe0 : ret 0x605
0x00000000007d2476 : ret 0x607
0x00000000004bc370 : ret 0x6075
0x000000000050aafd : ret 0x607e
0x000000000041815f : ret 0x60bf
0x00000000007f69a3 : ret 0x60c
0x00000000007e51fc : ret 0x60d
0x000000000041f558 : ret 0x60e8
0x00000000005bb244 : ret 0x6174
0x00000000006a646c : ret 0x617f
0x0000000000581165 : ret 0x61be
0x00000000007e3923 : ret 0x629
0x0000000000641582 : ret 0x62bf
0x00000000004a43d8 : ret 0x62e8
0x0000000000632c26 : ret 0x62e9
0x000000000040801c : ret 0x6348
0x00000000004c8161 : ret 0x6349
0x00000000004b3255 : ret 0x634c
0x000000000055b8e4 : ret 0x634d
0x000000000061d3c6 : ret 0x637
0x00000000005d442e : ret 0x6374
0x00000000007f2fb6 : ret 0x63d
0x0000000000417dfd : ret 0x63e8
0x00000000004107d4 : ret 0x6474
0x00000000004410ef : ret 0x6475
0x000000000067e9a1 : ret 0x647c
0x0000000000434900 : ret 0x64e8
0x0000000000720059 : ret 0x65
0x00000000004281a9 : ret 0x65e8
0x0000000000660cac : ret 0x6601
0x00000000006b8321 : ret 0x6603
0x00000000005123f1 : ret 0x6610
0x000000000041413b : ret 0x6674
0x00000000006886f7 : ret 0x667c
0x0000000000519987 : ret 0x667e
0x000000000051fab2 : ret 0x6690
0x0000000000517e84 : ret 0x66c3
0x000000000040fa8e : ret 0x66e8
0x00000000006a1e37 : ret 0x675
0x000000000044aa84 : ret 0x6775
0x0000000000681fa3 : ret 0x67a
0x000000000072288f : ret 0x67a7
0x0000000000480a4b : ret 0x67e8
0x000000000055c6c3 : ret 0x67e9
0x000000000046427e : ret 0x6875
0x00000000006416e3 : ret 0x68be
0x00000000004bf61e : ret 0x68e8
0x00000000007cb9b2 : ret 0x69
0x0000000000684dc5 : ret 0x6901
0x000000000072174d : ret 0x6906
0x0000000000722d5b : ret 0x6919
0x00000000006323d9 : ret 0x6948
0x00000000004b9c53 : ret 0x6975
0x000000000040ae4f : ret 0x69e8
0x00000000006a262c : ret 0x69e9
0x000000000066fc3a : ret 0x6a
0x00000000004de448 : ret 0x6ae8
0x0000000000450624 : ret 0x6b75
0x00000000006c32ea : ret 0x6b7f
0x000000000053ded6 : ret 0x6b9
0x000000000072f3e8 : ret 0x6bb1
0x0000000000623a1f : ret 0x6be
0x0000000000419549 : ret 0x6be8
0x00000000006c4e2a : ret 0x6c3
0x000000000042081c : ret 0x6c74
0x0000000000607833 : ret 0x6c75
0x00000000004cad52 : ret 0x6c7e
0x0000000000526391 : ret 0x6c89
0x0000000000722c86 : ret 0x6cad
0x0000000000721d15 : ret 0x6cb
0x00000000006848ce : ret 0x6cd9
0x0000000000684759 : ret 0x6cdb
0x00000000004b3c5c : ret 0x6ce8
0x0000000000430c64 : ret 0x6d
0x00000000006c2c1a : ret 0x6d7f
0x00000000005eee49 : ret 0x6de8
0x00000000004accf4 : ret 0x6e
0x0000000000721d06 : ret 0x6e01
0x000000000065b91a : ret 0x6e1
0x000000000061148c : ret 0x6e6
0x0000000000450a6d : ret 0x6e74
0x00000000004c867c : ret 0x6e8
0x000000000041f6a6 : ret 0x6ee8
0x0000000000686699 : ret 0x6ee9
0x000000000051a137 : ret 0x6f
0x00000000007234c7 : ret 0x6f2c
0x000000000040ee84 : ret 0x6f74
0x00000000005bab1c : ret 0x6f7e
0x000000000044db61 : ret 0x6fe8
0x0000000000589864 : ret 0x70
0x000000000047aa9f : ret 0x7074
0x000000000043a43f : ret 0x7075
0x00000000004e9948 : ret 0x708d
0x000000000074d727 : ret 0x70c
0x0000000000425218 : ret 0x70e8
0x00000000005f9e13 : ret 0x70e9
0x00000000005e3642 : ret 0x71
0x00000000007c2ac3 : ret 0x7102
0x00000000007f0dbd : ret 0x7105
0x00000000005baba6 : ret 0x717e
0x00000000006a8d82 : ret 0x72
0x00000000006625a4 : ret 0x7213
0x0000000000421ca2 : ret 0x7274
0x0000000000686c89 : ret 0x728d
0x00000000004d563e : ret 0x72e8
0x00000000006cbd45 : ret 0x7329
0x000000000061b9d2 : ret 0x7375
0x00000000004cadce : ret 0x737e
0x0000000000424ef7 : ret 0x73e8
0x000000000055463d : ret 0x7401
0x0000000000444ffe : ret 0x7474
0x000000000049e322 : ret 0x7475
0x00000000005374d8 : ret 0x747f
0x000000000068c46f : ret 0x748d
0x000000000063fd7d : ret 0x74be
0x00000000004de0f4 : ret 0x74e8
0x000000000064ac70 : ret 0x7500
0x000000000051b45d : ret 0x7501
0x00000000006c1cae : ret 0x7504
0x00000000005123f7 : ret 0x7512
0x000000000064b848 : ret 0x7574
0x00000000004c4f3d : ret 0x75e8
0x000000000056eb39 : ret 0x75e9
0x000000000061be3f : ret 0x7674
0x000000000068316f : ret 0x7675
0x0000000000608e8a : ret 0x76c
0x00000000004138da : ret 0x76e8
0x00000000004125a9 : ret 0x774
0x000000000041399f : ret 0x775
0x0000000000415af6 : ret 0x7774
0x0000000000507c54 : ret 0x7775
0x00000000005dd53f : ret 0x77e8
0x00000000004caddb : ret 0x77f
0x000000000040c414 : ret 0x78
0x00000000005f18b2 : ret 0x78e8
0x00000000006cdcd2 : ret 0x78e9
0x00000000007cb45d : ret 0x79
0x000000000066373b : ret 0x7983
0x000000000040ad3f : ret 0x79e8
0x00000000006d69aa : ret 0x7a6d
0x00000000005faad3 : ret 0x7a74
0x00000000005e70f7 : ret 0x7a75
0x000000000065de91 : ret 0x7a7f
0x00000000006d5b30 : ret 0x7ae8
0x000000000056654b : ret 0x7ae9
0x0000000000614ac0 : ret 0x7b74
0x0000000000538250 : ret 0x7b75
0x000000000041f45f : ret 0x7be8
0x00000000005c901c : ret 0x7be9
0x00000000007693da : ret 0x7c
0x000000000075cf49 : ret 0x7c5c
0x0000000000426409 : ret 0x7c74
0x0000000000661f21 : ret 0x7c83
0x000000000065fb65 : ret 0x7c89
0x000000000065fb55 : ret 0x7c8b
0x000000000063f691 : ret 0x7cbe
0x0000000000681e8d : ret 0x7cd9
0x00000000006a5b07 : ret 0x7cdb
0x0000000000602c8c : ret 0x7ce
0x00000000004dcdd6 : ret 0x7ce8
0x0000000000537ef2 : ret 0x7cf
0x0000000000783bd2 : ret 0x7d
0x0000000000478ffe : ret 0x7d74
0x0000000000501407 : ret 0x7d75
0x0000000000599077 : ret 0x7d7c
0x00000000004adec6 : ret 0x7d7d
0x00000000005bf8a0 : ret 0x7d7e
0x0000000000418078 : ret 0x7d83
0x000000000047b191 : ret 0x7de8
0x0000000000684803 : ret 0x7e72
0x00000000004b9c3e : ret 0x7e75
0x0000000000473631 : ret 0x7e8
0x0000000000666c34 : ret 0x7eba
0x000000000043b79a : ret 0x7ee8
0x00000000004f601d : ret 0x7ee9
0x00000000005fa8d6 : ret 0x7f74
0x00000000005413be : ret 0x7f7c
0x0000000000722f65 : ret 0x7f83
0x00000000007ada69 : ret 0x7f8d
0x000000000040c549 : ret 0x7fe8
0x0000000000723bcc : ret 0x800
0x00000000006627d2 : ret 0x8001
0x00000000004f62a0 : ret 0x8002
0x000000000068ebe5 : ret 0x8008
0x0000000000606507 : ret 0x8040
0x0000000000505104 : ret 0x8041
0x00000000006098ea : ret 0x806
0x00000000005a1d9c : ret 0x8074
0x0000000000608d2a : ret 0x80b
0x00000000004d80cb : ret 0x80be
0x000000000048f5b0 : ret 0x80bf
0x0000000000498c9c : ret 0x80e8
0x00000000005f83bc : ret 0x80eb
0x00000000006b2ecd : ret 0x8101
0x00000000004f1091 : ret 0x8148
0x00000000006d5740 : ret 0x8166
0x00000000005cb308 : ret 0x82e8
0x00000000005fad7b : ret 0x8301
0x00000000006cdd0a : ret 0x8308
0x000000000065ea51 : ret 0x830f
0x0000000000680e95 : ret 0x8341
0x000000000043ea33 : ret 0x8348
0x000000000051a07b : ret 0x8349
0x000000000067fa1e : ret 0x83c6
0x000000000040f309 : ret 0x83e8
0x000000000059e6b7 : ret 0x840
0x000000000068ee52 : ret 0x8401
0x0000000000410fee : ret 0x840f
0x000000000054ae82 : ret 0x841
0x00000000004f580d : ret 0x8440
0x00000000004f4a92 : ret 0x8441
0x00000000005c0425 : ret 0x8444
0x000000000057ee63 : ret 0x8445
0x00000000006c6546 : ret 0x848b
0x000000000069d1d1 : ret 0x848d
0x000000000063eed7 : ret 0x84be
0x0000000000499e9a : ret 0x84e8
0x00000000005f9e02 : ret 0x84eb
0x0000000000578c3e : ret 0x8501
0x0000000000411257 : ret 0x850f
0x0000000000651858 : ret 0x8539
0x00000000004055ec : ret 0x8545
0x000000000043b94a : ret 0x8548
0x0000000000507c4c : ret 0x854d
0x00000000006045ca : ret 0x858
0x00000000005baa48 : ret 0x8588
0x00000000004add4f : ret 0x8589
0x0000000000424c6b : ret 0x858b
0x00000000006a7034 : ret 0x85c7
0x0000000000723231 : ret 0x85e7
0x00000000005daf37 : ret 0x85e8
0x00000000006a1460 : ret 0x860f
0x0000000000444a66 : ret 0x86e8
0x000000000050f163 : ret 0x870f
0x0000000000553720 : ret 0x874
0x0000000000692675 : ret 0x875
0x000000000066a7eb : ret 0x87c
0x00000000004e8e6b : ret 0x87e8
0x000000000060d41d : ret 0x87e9
0x000000000069bd54 : ret 0x8801
0x00000000006c1cba : ret 0x8802
0x00000000006bf6da : ret 0x880f
0x000000000067ab8c : ret 0x8820
0x00000000006a9043 : ret 0x8830
0x000000000067f291 : ret 0x8840
0x0000000000539078 : ret 0x8841
0x00000000006a3bbc : ret 0x8842
0x000000000067b4a6 : ret 0x8843
0x000000000069c018 : ret 0x8844
0x00000000006b3698 : ret 0x8853
0x0000000000568da5 : ret 0x8875
0x000000000041d020 : ret 0x88e8
0x0000000000665977 : ret 0x88e9
0x00000000004c37bf : ret 0x8901
0x00000000004ceb3a : ret 0x8903
0x00000000004a9d7c : ret 0x8904
0x00000000004b3128 : ret 0x8905
0x000000000044b917 : ret 0x8908
0x000000000045e5b6 : ret 0x8918
0x000000000057ec1f : ret 0x8928
0x0000000000480414 : ret 0x8941
0x00000000004b2a59 : ret 0x8944
0x00000000005fac15 : ret 0x8945
0x00000000004082ba : ret 0x8948
0x00000000004529e8 : ret 0x8949
0x000000000043b9e3 : ret 0x894c
0x0000000000478b8e : ret 0x894d
0x00000000005a00f3 : ret 0x8953
0x0000000000552d6c : ret 0x8966
0x00000000007229d6 : ret 0x89b6
0x0000000000441351 : ret 0x89e8
0x0000000000721926 : ret 0x8ad1
0x0000000000445b9e : ret 0x8ae8
0x0000000000542380 : ret 0x8ae9
0x00000000004feb45 : ret 0x8b
0x00000000006b087e : ret 0x8b00
0x000000000053e91f : ret 0x8b01
0x000000000048f192 : ret 0x8b41
0x00000000005765f2 : ret 0x8b44
0x000000000064c786 : ret 0x8b45
0x000000000040a3b1 : ret 0x8b48
0x0000000000480503 : ret 0x8b49
0x0000000000480835 : ret 0x8b4c
0x00000000006d40dc : ret 0x8b4d
0x0000000000484257 : ret 0x8b9
0x000000000040c69d : ret 0x8ba
0x000000000060d0dc : ret 0x8be
0x000000000040d521 : ret 0x8be8
0x000000000065d4e5 : ret 0x8beb
0x000000000057fb65 : ret 0x8bf
0x00000000007f32e2 : ret 0x8c01
0x0000000000722b1d : ret 0x8c0e
0x000000000043fb3d : ret 0x8c0f
0x000000000043f35c : ret 0x8ce8
0x00000000005c51e9 : ret 0x8ce9
0x000000000067bd56 : ret 0x8d01
0x00000000006cd69b : ret 0x8d04
0x000000000043c422 : ret 0x8d0f
0x0000000000677dba : ret 0x8d41
0x00000000005c8998 : ret 0x8d42
0x000000000052b939 : ret 0x8d44
0x00000000004fff44 : ret 0x8d45
0x000000000069d34a : ret 0x8d47
0x0000000000411c2e : ret 0x8d48
0x00000000004ffda9 : ret 0x8d49
0x000000000050161e : ret 0x8d4b
0x00000000005346e1 : ret 0x8d4c
0x000000000068cf41 : ret 0x8d4d
0x00000000004e3ffc : ret 0x8d8b
0x0000000000473f1b : ret 0x8de8
0x000000000056f23b : ret 0x8de9
0x0000000000723390 : ret 0x8e09
0x00000000004e4935 : ret 0x8e0f
0x000000000041270e : ret 0x8e8
0x00000000005f118c : ret 0x8e9
0x00000000005f5dc4 : ret 0x8ee8
0x0000000000467857 : ret 0x8f0f
0x0000000000665574 : ret 0x8f8b
0x000000000042817d : ret 0x8fe8
0x0000000000517506 : ret 0x8fe9
0x00000000007c8ff4 : ret 0x904
0x000000000053b3f3 : ret 0x9066
0x00000000005ce0bd : ret 0x9090
0x00000000006a4fbd : ret 0x90c3
0x00000000007f57bf : ret 0x90d
0x000000000045fd0a : ret 0x90e8
0x000000000056d7a4 : ret 0x90e9
0x00000000004831a5 : ret 0x91e8
0x000000000056ec0b : ret 0x91e9
0x000000000062e0da : ret 0x928
0x000000000046717a : ret 0x92e8
0x0000000000661a5c : ret 0x932b
0x00000000005ebe8c : ret 0x93c
0x0000000000445a6d : ret 0x93e8
0x00000000006774fb : ret 0x93eb
0x0000000000412413 : ret 0x940f
0x000000000069cf9f : ret 0x944
0x000000000051bf92 : ret 0x948
0x000000000060ab91 : ret 0x9488
0x000000000069cecf : ret 0x948d
0x0000000000722b79 : ret 0x94a7
0x000000000063fca8 : ret 0x94be
0x00000000004e7956 : ret 0x94e8
0x00000000004699d1 : ret 0x950f
0x00000000005ec034 : ret 0x952
0x00000000004ca47d : ret 0x9539
0x00000000004ffb0b : ret 0x9588
0x00000000005cb20f : ret 0x9589
0x000000000043d02d : ret 0x95e8
0x0000000000442db4 : ret 0x96e8
0x00000000005d18ff : ret 0x970f
0x000000000043bf7b : ret 0x972
0x00000000006a42aa : ret 0x974
0x0000000000640256 : ret 0x97bf
0x0000000000497e21 : ret 0x97c
0x000000000043fd2d : ret 0x97d
0x00000000005d7e11 : ret 0x97e
0x0000000000415bf1 : ret 0x97e8
0x000000000062dc98 : ret 0x97e9
0x00000000004c80d6 : ret 0x97f
0x00000000004b3264 : ret 0x9848
0x00000000004bfbce : ret 0x98e8
0x0000000000690302 : ret 0x9974
0x0000000000610f14 : ret 0x9975
0x0000000000426779 : ret 0x99e8
0x00000000005799a5 : ret 0x99e9
0x0000000000662f8c : ret 0x99eb
0x00000000005f48b6 : ret 0x9ae8
0x000000000064d851 : ret 0x9ae9
0x00000000006820da : ret 0x9b0f
0x00000000005e478a : ret 0x9b3
0x0000000000721801 : ret 0x9b64
0x00000000006b2afa : ret 0x9ba
0x000000000043dedb : ret 0x9be8
0x0000000000579a83 : ret 0x9be9
0x00000000004c8167 : ret 0x9c0f
0x000000000063f02b : ret 0x9cbe
0x000000000040b48e : ret 0x9ce8
0x0000000000687019 : ret 0x9ceb
0x00000000006a0a8a : ret 0x9d
0x00000000004f6195 : ret 0x9d0f
0x00000000006232ba : ret 0x9db
0x000000000048deb1 : ret 0x9de8
0x0000000000445707 : ret 0x9de9
0x00000000004e6b47 : ret 0x9e0f
0x000000000040ac57 : ret 0x9e8
0x000000000046407e : ret 0x9ee8
0x0000000000402211 : ret 0x9f
0x00000000007ea0da : ret 0x9f01
0x00000000004e935f : ret 0x9f0f
0x0000000000415d0f : ret 0x9fe8
0x00000000005d50a7 : ret 0xa
0x00000000007ca481 : ret 0xa004
0x0000000000722a1f : ret 0xa038
0x000000000050290e : ret 0xa048
0x00000000004ab033 : ret 0xa0bf
0x00000000004b23da : ret 0xa0e8
0x000000000067bab3 : ret 0xa0e9
0x000000000068e436 : ret 0xa0eb
0x00000000007c98fd : ret 0xa104
0x00000000004b2b77 : ret 0xa1e8
0x00000000006c822f : ret 0xa1eb
0x00000000007219d5 : ret 0xa231
0x0000000000640331 : ret 0xa2bf
0x00000000004400fa : ret 0xa2e8
0x000000000056f226 : ret 0xa2e9
0x0000000000677714 : ret 0xa2eb
0x00000000007e4b80 : ret 0xa301
0x00000000004cb371 : ret 0xa3e8
0x00000000005087bf : ret 0xa475
0x0000000000482132 : ret 0xa4e8
0x00000000006774ea : ret 0xa4eb
0x0000000000682872 : ret 0xa5e
0x00000000004870d9 : ret 0xa5e8
0x000000000066cf92 : ret 0xa5eb
0x00000000007f9596 : ret 0xa601
0x000000000040ac12 : ret 0xa6e8
0x000000000056ebf6 : ret 0xa6e9
0x00000000004f72f2 : ret 0xa6eb
0x00000000004123c0 : ret 0xa74
0x00000000004122fc : ret 0xa75
0x0000000000497c02 : ret 0xa7c
0x000000000051be18 : ret 0xa7e
0x0000000000419d01 : ret 0xa7e8
0x0000000000641a08 : ret 0xa7f
0x00000000005a1a34 : ret 0xa874
0x00000000005f48a2 : ret 0xa8e8
0x0000000000496487 : ret 0xa9e8
0x00000000006a23a4 : ret 0xa9eb
0x0000000000449a72 : ret 0xaa8
0x00000000004267b4 : ret 0xaae8
0x0000000000686772 : ret 0xaaeb
0x000000000065f181 : ret 0xab76
0x0000000000661e2f : ret 0xab83
0x0000000000721d58 : ret 0xabdf
0x00000000004df26d : ret 0xabe8
0x000000000067f44e : ret 0xabf
0x00000000005d3ca0 : ret 0xac9
0x00000000005d308c : ret 0xaca
0x00000000004495e0 : ret 0xace8
0x0000000000678050 : ret 0xace9
0x000000000055eb07 : ret 0xad75
0x00000000004af2d9 : ret 0xade8
0x00000000005f843c : ret 0xade9
0x00000000007fa30a : ret 0xae01
0x00000000005d1fa0 : ret 0xae6
0x000000000044dd26 : ret 0xae8
0x000000000040e448 : ret 0xaee8
0x00000000006af8aa : ret 0xaee9
0x00000000004a9234 : ret 0xaf
0x00000000007c726e : ret 0xaf02
0x00000000004349db : ret 0xafe8
0x00000000005c38d0 : ret 0xb
0x00000000007cece6 : ret 0xb02
0x00000000005fac72 : ret 0xb07e
0x00000000007f8945 : ret 0xb0c
0x000000000040ea76 : ret 0xb0e8
0x0000000000686a69 : ret 0xb0e9
0x000000000052884c : ret 0xb174
0x0000000000442942 : ret 0xb19
0x00000000006403f3 : ret 0xb1bf
0x000000000040fa31 : ret 0xb1e8
0x000000000046869c : ret 0xb2e8
0x000000000040ae05 : ret 0xb3e8
0x0000000000419028 : ret 0xb4e8
0x00000000005c82ff : ret 0xb4e9
0x000000000041acb5 : ret 0xb5e8
0x000000000069144d : ret 0xb5eb
0x00000000004154ba : ret 0xb60f
0x000000000053ed91 : ret 0xb66
0x000000000051f2bd : ret 0xb70f
0x000000000040c364 : ret 0xb74
0x000000000060c23a : ret 0xb7b
0x00000000005d45ff : ret 0xb7d
0x000000000047d01d : ret 0xb7e8
0x0000000000486eaa : ret 0xb7f
0x00000000004c5259 : ret 0xb8
0x0000000000679bc9 : ret 0xb802
0x000000000050cb1e : ret 0xb841
0x00000000004691b3 : ret 0xb848
0x000000000047d69e : ret 0xb8e8
0x0000000000680df4 : ret 0xb901
0x000000000067c8a0 : ret 0xb90f
0x0000000000686763 : ret 0xb97d
0x000000000061ad7a : ret 0xb99
0x00000000005d3f31 : ret 0xb9e8
0x0000000000610443 : ret 0xb9e9
0x00000000004cd757 : ret 0xba
0x00000000005c80bf : ret 0xba41
0x00000000006d080f : ret 0xba48
0x0000000000677ddb : ret 0xba49
0x0000000000509f7d : ret 0xba76
0x0000000000442a0a : ret 0xbae8
0x0000000000625033 : ret 0xbb41
0x000000000040af43 : ret 0xbbe8
0x000000000056600a : ret 0xbbe9
0x000000000066ce5f : ret 0xbbeb
0x00000000005c398c : ret 0xbc1
0x000000000067c420 : ret 0xbc41
0x000000000055d0df : ret 0xbc80
0x0000000000496d60 : ret 0xbce8
0x00000000006c3ef0 : ret 0xbd7d
0x00000000005ba5da : ret 0xbd80
0x0000000000616d7a : ret 0xbd9
0x00000000004f0777 : ret 0xbde8
0x000000000064f0fb : ret 0xbde9
0x000000000068a73d : ret 0xbdeb
0x000000000040e1bb : ret 0xbe
0x000000000065027a : ret 0xbe0f
0x000000000040a631 : ret 0xbe8
0x0000000000615b7a : ret 0xbeb
0x0000000000692ef8 : ret 0xbee9
0x000000000043e89c : ret 0xbf
0x00000000006504ab : ret 0xbf0f
0x00000000006c4056 : ret 0xbf7d
0x000000000057cc9e : ret 0xbf90
0x0000000000416013 : ret 0xbfe8
0x00000000004d1a14 : ret 0xc
0x000000000074c97b : ret 0xc01
0x000000000075d481 : ret 0xc02
0x0000000000753b37 : ret 0xc03
0x0000000000502745 : ret 0xc031
0x0000000000534a1d : ret 0xc074
0x0000000000427d42 : ret 0xc083
0x0000000000682dd8 : ret 0xc084
0x0000000000493fee : ret 0xc085
0x000000000076a5f2 : ret 0xc0a
0x000000000040c0d7 : ret 0xc0bf
0x000000000048779a : ret 0xc0e8
0x00000000004f4f3e : ret 0xc0eb
0x0000000000409420 : ret 0xc101
0x00000000004e85a3 : ret 0xc139
0x000000000069d129 : ret 0xc141
0x000000000040a99f : ret 0xc148
0x0000000000694e78 : ret 0xc149
0x00000000004c0d2c : ret 0xc189
0x0000000000407628 : ret 0xc1e
0x000000000040f943 : ret 0xc1e8
0x000000000069d342 : ret 0xc209
0x0000000000652a73 : ret 0xc220
0x000000000069ceb1 : ret 0xc221
0x0000000000505442 : ret 0xc238
0x00000000005fba88 : ret 0xc26b
0x00000000006c69db : ret 0xc275
0x00000000005af8e8 : ret 0xc281
0x00000000005b7c8a : ret 0xc283
0x000000000050ef82 : ret 0xc284
0x00000000004dbad5 : ret 0xc289
0x00000000006d67e3 : ret 0xc2bf
0x00000000004ccbf8 : ret 0xc2e8
0x000000000056d772 : ret 0xc2e9
0x000000000068b4e1 : ret 0xc2eb
0x0000000000519f04 : ret 0xc301
0x0000000000577b0d : ret 0xc339
0x0000000000520cff : ret 0xc374
0x00000000006810bb : ret 0xc383
0x000000000054926d : ret 0xc389
0x00000000004cceef : ret 0xc3e8
0x00000000006ad4fe : ret 0xc3f8
0x0000000000706862 : ret 0xc4c3
0x00000000005bb2a0 : ret 0xc53
0x000000000051b98a : ret 0xc539
0x0000000000689eeb : ret 0xc583
0x0000000000466277 : ret 0xc5e8
0x000000000069efde : ret 0xc5e9
0x00000000006af8a1 : ret 0xc601
0x00000000006614a8 : ret 0xc602
0x00000000006779f0 : ret 0xc629
0x000000000069c253 : ret 0xc636
0x000000000049836d : ret 0xc641
0x0000000000407fa8 : ret 0xc643
0x000000000059e5fe : ret 0xc683
0x000000000051b051 : ret 0xc689
0x00000000007287c4 : ret 0xc695
0x0000000000500187 : ret 0xc6be
0x00000000004ee5d0 : ret 0xc6e8
0x00000000004f5689 : ret 0xc7
0x00000000004f7844 : ret 0xc748
0x00000000005e057a : ret 0xc77
0x0000000000520a4b : ret 0xc774
0x00000000006bd8d6 : ret 0xc783
0x000000000043c501 : ret 0xc789
0x000000000040a789 : ret 0xc7c
0x00000000005f2510 : ret 0xc7d
0x00000000004eea5d : ret 0xc7e8
0x000000000047808f : ret 0xc8
0x00000000004ed317 : ret 0xc801
0x00000000005787f2 : ret 0xc839
0x000000000077ff48 : ret 0xc84e
0x00000000004a8330 : ret 0xc889
0x000000000063ebfb : ret 0xc8be
0x000000000069d233 : ret 0xc8c1
0x00000000004a00d6 : ret 0xc8e8
0x00000000006cdd82 : ret 0xc8e9
0x00000000005b1369 : ret 0xc931
0x00000000004f9f34 : ret 0xc985
0x00000000006a9858 : ret 0xc9d8
0x0000000000684251 : ret 0xc9de
0x0000000000667776 : ret 0xca00
0x000000000069d3fb : ret 0xca01
0x00000000005fbe8b : ret 0xca09
0x00000000005fd5fb : ret 0xca20
0x00000000005370f2 : ret 0xca21
0x0000000000686d5a : ret 0xca29
0x000000000047fda7 : ret 0xca31
0x00000000005f9c95 : ret 0xca38
0x000000000048074a : ret 0xca39
0x0000000000544203 : ret 0xca74
0x00000000005390b3 : ret 0xca75
0x00000000007218c5 : ret 0xcaba
0x0000000000449040 : ret 0xcae8
0x000000000068ecc8 : ret 0xcaeb
0x00000000006b2c01 : ret 0xcba
0x00000000006d6992 : ret 0xcbde
0x0000000000489e25 : ret 0xcbe8
0x00000000005c51aa : ret 0xcbe9
0x00000000007cdc1c : ret 0xcc07
0x00000000005b388c : ret 0xcc2
0x00000000005b4c6c : ret 0xcc8
0x00000000005b2f8c : ret 0xccb
0x0000000000681e3b : ret 0xccd8
0x000000000068460f : ret 0xccd9
0x00000000005b466c : ret 0xcce
0x000000000065ea84 : ret 0xcce9
0x000000000074e678 : ret 0xccec
0x00000000007fb0ed : ret 0xcd00
0x0000000000733db4 : ret 0xcd13
0x00000000005fcc70 : ret 0xcd75
0x0000000000750e50 : ret 0xcdc7
0x00000000004cbcbd : ret 0xcde8
0x0000000000751978 : ret 0xce07
0x0000000000752298 : ret 0xce19
0x0000000000734bac : ret 0xce7f
0x0000000000496682 : ret 0xce8
0x0000000000752f30 : ret 0xce87
0x00000000006914b6 : ret 0xce88
0x00000000004c846c : ret 0xce89
0x00000000005c82f0 : ret 0xce9
0x0000000000734c84 : ret 0xce90
0x0000000000753c68 : ret 0xcedd
0x00000000004278ca : ret 0xcee8
0x00000000007217f3 : ret 0xcf31
0x00000000006622fe : ret 0xcf75
0x00000000004c2df9 : ret 0xcf89
0x0000000000756db8 : ret 0xcfc6
0x00000000007577e0 : ret 0xcfd7
0x000000000043ebcd : ret 0xcfe8
0x00000000006a8f15 : ret 0xcfeb
0x0000000000758270 : ret 0xcff1
0x00000000005a481d : ret 0xd
0x00000000007359cc : ret 0xd004
0x0000000000650aaf : ret 0xd008
0x000000000069cf06 : ret 0xd009
0x00000000007d93f8 : ret 0xd01
0x00000000007d6e96 : ret 0xd03
0x0000000000654ee7 : ret 0xd039
0x00000000007e14f5 : ret 0xd04
0x00000000007591c8 : ret 0xd041
0x00000000007fb6d6 : ret 0xd06
0x0000000000548746 : ret 0xd084
0x0000000000425e59 : ret 0xd089
0x000000000075a940 : ret 0xd0b7
0x000000000063ee14 : ret 0xd0be
0x00000000004cd66a : ret 0xd0e8
0x0000000000601199 : ret 0xd0e9
0x00000000007d4327 : ret 0xd10
0x00000000004f496b : ret 0xd108
0x000000000069d26a : ret 0xd109
0x000000000051102f : ret 0xd138
0x00000000005c50eb : ret 0xd139
0x0000000000525bde : ret 0xd184
0x00000000006612a2 : ret 0xd189
0x000000000073637c : ret 0xd18c
0x00000000007363bc : ret 0xd190
0x000000000073650c : ret 0xd1bf
0x0000000000421d39 : ret 0xd1e8
0x000000000064ea28 : ret 0xd1eb
0x000000000075dd50 : ret 0xd1f5
0x000000000069ccff : ret 0xd1f7
0x00000000004a832c : ret 0xd201
0x00000000007c9715 : ret 0xd204
0x00000000006624e0 : ret 0xd231
0x000000000075ea18 : ret 0xd238
0x000000000069410c : ret 0xd26b
0x00000000006d16cb : ret 0xd275
0x00000000004cf145 : ret 0xd284
0x00000000004080fb : ret 0xd285
0x0000000000737174 : ret 0xd2a6
0x00000000005ace8a : ret 0xd2c
0x000000000075f1c0 : ret 0xd2d7
0x00000000005ca760 : ret 0xd2e9
0x00000000006d42fa : ret 0xd2f0
0x000000000069ceb8 : ret 0xd2f7
0x00000000005390ae : ret 0xd301
0x00000000007fa4f9 : ret 0xd37b
0x000000000065999b : ret 0xd384
0x00000000005c6d90 : ret 0xd389
0x00000000004a4687 : ret 0xd3e8
0x0000000000737c8c : ret 0xd3eb
0x00000000005aba8a : ret 0xd40
0x0000000000737e04 : ret 0xd447
0x00000000006bf1aa : ret 0xd44a
0x00000000005196a3 : ret 0xd475
0x00000000007380bc : ret 0xd498
0x0000000000763e30 : ret 0xd52e
0x00000000005ff38c : ret 0xd539
0x0000000000738434 : ret 0xd540
0x00000000006af4aa : ret 0xd547
0x000000000060baf0 : ret 0xd589
0x00000000007384fc : ret 0xd592
0x0000000000722ae6 : ret 0xd5bf
0x00000000007663f8 : ret 0xd5d0
0x0000000000721b7a : ret 0xd5ef
0x0000000000738804 : ret 0xd667
0x00000000004cac6a : ret 0xd689
0x0000000000767658 : ret 0xd6dd
0x0000000000425d88 : ret 0xd6e8
0x000000000067238a : ret 0xd7
0x00000000004a9e06 : ret 0xd739
0x000000000040c511 : ret 0xd74
0x00000000006a7c25 : ret 0xd75
0x000000000068de2a : ret 0xd75a
0x00000000004ecd2e : ret 0xd789
0x00000000006d67ed : ret 0xd7aa
0x0000000000576918 : ret 0xd7d
0x000000000047bbed : ret 0xd7e8
0x0000000000478025 : ret 0xd8
0x000000000058874a : ret 0xd839
0x00000000006d0b68 : ret 0xd889
0x000000000063f4b2 : ret 0xd8be
0x0000000000417ffc : ret 0xd8e8
0x0000000000739ccc : ret 0xd8fd
0x00000000006a551f : ret 0xd901
0x000000000066d77a : ret 0xd963
0x000000000066c87a : ret 0xd972
0x000000000050711e : ret 0xd975
0x0000000000666c04 : ret 0xd977
0x000000000064e088 : ret 0xd989
0x000000000048f133 : ret 0xd9e8
0x0000000000588fed : ret 0xd9e9
0x000000000066d36b : ret 0xda
0x0000000000604d62 : ret 0xda20
0x00000000007224c4 : ret 0xda71
0x00000000005e1e74 : ret 0xdae8
0x000000000073a2dc : ret 0xdaf1
0x000000000073a344 : ret 0xdb27
0x00000000006a54db : ret 0xdb40
0x000000000064d33a : ret 0xdb66
0x00000000005084b1 : ret 0xdb75
0x00000000004fd096 : ret 0xdb85
0x00000000005da5b1 : ret 0xdbe8
0x00000000006c4f93 : ret 0xdc16
0x0000000000645b6a : ret 0xdc17
0x000000000040ad84 : ret 0xdce8
0x00000000004fe917 : ret 0xdd39
0x000000000062deaa : ret 0xdd5d
0x00000000006a3b60 : ret 0xdd75
0x00000000006a578d : ret 0xdd8
0x000000000061e313 : ret 0xdde8
0x00000000005a23a0 : ret 0xde2
0x000000000050ac4e : ret 0xde75
0x0000000000426077 : ret 0xde8
0x00000000005a0132 : ret 0xde89
0x000000000042611a : ret 0xdee8
0x00000000004f5d6f : ret 0xdf39
0x00000000006bbab6 : ret 0xdf7e
0x00000000005f3809 : ret 0xdf89
0x000000000048302d : ret 0xdfe8
0x00000000005938a1 : ret 0xe
0x00000000007e3da4 : ret 0xe01
0x00000000007d1ad4 : ret 0xe02
0x00000000007ea4d4 : ret 0xe03
0x00000000006b2a1a : ret 0xe083
0x0000000000770ffb : ret 0xe0a
0x00000000006409e6 : ret 0xe0be
0x0000000000473a66 : ret 0xe0bf
0x0000000000722232 : ret 0xe0d1
0x0000000000484cb8 : ret 0xe0e8
0x00000000005ae10a : ret 0xe0f
0x00000000005a026c : ret 0xe12
0x0000000000498951 : ret 0xe1e8
0x00000000007ed6b6 : ret 0xe20
0x000000000040a4e9 : ret 0xe283
0x00000000006b2a52 : ret 0xe2c1
0x00000000006657a4 : ret 0xe2d3
0x0000000000424d8c : ret 0xe2e8
0x000000000069253a : ret 0xe375
0x00000000006bb6d1 : ret 0xe37e
0x0000000000792940 : ret 0xe3bc
0x000000000048a3ed : ret 0xe3e8
0x00000000006bb7f5 : ret 0xe47d
0x0000000000794a38 : ret 0xe4b8
0x00000000004192cc : ret 0xe4e8
0x000000000063045b : ret 0xe4e9
0x000000000068b2b9 : ret 0xe4eb
0x00000000006d1890 : ret 0xe575
0x0000000000798160 : ret 0xe5d8
0x000000000047818b : ret 0xe5e8
0x0000000000539aac : ret 0xe5e9
0x0000000000798390 : ret 0xe5ed
0x000000000050abf6 : ret 0xe675
0x000000000064edbf : ret 0xe74
0x00000000006d6ed5 : ret 0xe747
0x00000000006586ba : ret 0xe775
0x00000000006d507b : ret 0xe783
0x000000000048ec7a : ret 0xe7c
0x0000000000511245 : ret 0xe7e8
0x000000000053aea5 : ret 0xe7f
0x0000000000583daa : ret 0xe7fe
0x0000000000468ffe : ret 0xe8
0x00000000005f9a77 : ret 0xe801
0x000000000064af62 : ret 0xe802
0x0000000000519b57 : ret 0xe808
0x000000000062ea61 : ret 0xe840
0x00000000006446f8 : ret 0xe84b
0x000000000079f130 : ret 0xe84d
0x0000000000512f36 : ret 0xe850
0x000000000053a126 : ret 0xe868
0x00000000005338e5 : ret 0xe875
0x00000000006065f2 : ret 0xe883
0x00000000006a2d41 : ret 0xe889
0x000000000063f0ce : ret 0xe8be
0x00000000006bbcc5 : ret 0xe8c0
0x0000000000601e58 : ret 0xe8c1
0x00000000006a5717 : ret 0xe8d9
0x00000000004d599c : ret 0xe8e8
0x00000000006026c6 : ret 0xe8e9
0x000000000050d665 : ret 0xe901
0x0000000000662850 : ret 0xe90a
0x00000000004fff4f : ret 0xe925
0x0000000000722393 : ret 0xe937
0x000000000062e9f7 : ret 0xe940
0x000000000056f2b2 : ret 0xe95b
0x0000000000742694 : ret 0xe9a2
0x000000000049206d : ret 0xe9e8
0x0000000000671ba0 : ret 0xea
0x0000000000742a64 : ret 0xea45
0x000000000055e1aa : ret 0xea5a
0x00000000004f5f44 : ret 0xea83
0x000000000046789d : ret 0xeac1
0x00000000006b367c : ret 0xead2
0x0000000000408d26 : ret 0xeae8
0x0000000000493fe4 : ret 0xeb01
0x0000000000680263 : ret 0xeb02
0x00000000007430c4 : ret 0xeb43
0x000000000065b03a : ret 0xeb4c
0x000000000074368c : ret 0xeb9f
0x000000000045deb7 : ret 0xebe8
0x00000000005d51da : ret 0xebf
0x00000000007a8210 : ret 0xec28
0x00000000007a83a0 : ret 0xec2a
0x0000000000666b59 : ret 0xec75
0x0000000000722802 : ret 0xecb0
0x00000000004db5f0 : ret 0xece8
0x00000000007abea8 : ret 0xed3e
0x0000000000677b68 : ret 0xed7c
0x0000000000538249 : ret 0xed85
0x00000000005d113a : ret 0xedb
0x0000000000444ec1 : ret 0xede8
0x000000000074448c : ret 0xee18
0x000000000051c87a : ret 0xee39
0x00000000006bf53f : ret 0xee74
0x00000000007448cc : ret 0xee78
0x00000000007448f4 : ret 0xee79
0x0000000000412254 : ret 0xee8
0x00000000005fa3b5 : ret 0xef72
0x0000000000509dde : ret 0xef75
0x00000000006bd3b7 : ret 0xef83
0x000000000047d1bb : ret 0xefe8
0x0000000000637f75 : ret 0xefe9
0x0000000000409bd3 : ret 0xf
0x000000000051b48a : ret 0xf00
0x000000000072677f : ret 0xf000
0x00000000005aee31 : ret 0xf001
0x000000000051aa33 : ret 0xf01
0x000000000065f75f : ret 0xf02
0x000000000053e711 : ret 0xf03
0x0000000000500264 : ret 0xf03c
0x000000000066149b : ret 0xf04
0x000000000059a7aa : ret 0xf05
0x000000000059982a : ret 0xf07
0x000000000051cb0d : ret 0xf075
0x00000000006c8562 : ret 0xf08
0x0000000000678dbf : ret 0xf089
0x0000000000664654 : ret 0xf0b8
0x000000000040cbe6 : ret 0xf0e8
0x00000000005cb20b : ret 0xf10
0x00000000006be054 : ret 0xf175
0x000000000059e018 : ret 0xf18
0x00000000006a4c90 : ret 0xf183
0x00000000006841f1 : ret 0xf1de
0x00000000006838c9 : ret 0xf1e8
0x00000000005768e8 : ret 0xf229
0x000000000052e963 : ret 0xf275
0x0000000000684c93 : ret 0xf2dc
0x0000000000746884 : ret 0xf373
0x000000000068cd3a : ret 0xf375
0x000000000053e70b : ret 0xf38
0x0000000000685dbb : ret 0xf389
0x00000000005c043c : ret 0xf3c
0x000000000054168e : ret 0xf40
0x00000000004837dd : ret 0xf41
0x000000000051aa92 : ret 0xf44
0x00000000006a1039 : ret 0xf48
0x0000000000417302 : ret 0xf4e8
0x000000000060cbc9 : ret 0xf4e9
0x00000000007f5815 : ret 0xf519
0x0000000000411cc1 : ret 0xf5e8
0x000000000063044a : ret 0xf5e9
0x00000000006baf19 : ret 0xf601
0x000000000059991a : ret 0xf62
0x000000000066182a : ret 0xf631
0x000000000053c3f9 : ret 0xf66
0x0000000000511013 : ret 0xf685
0x00000000005ce806 : ret 0xf6e8
0x00000000006a2058 : ret 0xf739
0x000000000069cb8d : ret 0xf741
0x0000000000574b3b : ret 0xf748
0x00000000005fb923 : ret 0xf749
0x000000000040d4e7 : ret 0xf75
0x00000000006d68fa : ret 0xf764
0x000000000048c83a : ret 0xf771
0x000000000060ae1a : ret 0xf77e
0x000000000066afa3 : ret 0xf789
0x00000000004f0d97 : ret 0xf7c
0x00000000005f4bed : ret 0xf7e8
0x000000000072274e : ret 0xf7fe
0x0000000000477fab : ret 0xf8
0x00000000005c66ea : ret 0xf81
0x00000000006d67b2 : ret 0xf812
0x0000000000408f2a : ret 0xf82
0x00000000006079fd : ret 0xf883
0x0000000000677dab : ret 0xf889
0x000000000060d014 : ret 0xf8be
0x0000000000685036 : ret 0xf8c1
0x00000000006d6b83 : ret 0xf8ed
0x000000000051f920 : ret 0xf90
0x00000000006d176f : ret 0xf939
0x00000000005eee35 : ret 0xf9e8
0x00000000005036d7 : ret 0xf9eb
0x00000000004f17ca : ret 0xf9f0
0x00000000004b238e : ret 0xf9f8
0x000000000068bcdc : ret 0xfa29
0x00000000004eaf8e : ret 0xfa5e
0x000000000064adad : ret 0xfa80
0x00000000004b301a : ret 0xfa81
0x0000000000611635 : ret 0xfa83
0x0000000000678d99 : ret 0xfad1
0x000000000040e5d2 : ret 0xfae8
0x0000000000662b93 : ret 0xfae9
0x00000000006cb18c : ret 0xfb49
0x00000000005c6eca : ret 0xfb69
0x0000000000694632 : ret 0xfb83
0x0000000000684ea3 : ret 0xfb89
0x00000000004d4412 : ret 0xfba7
0x000000000049d69d : ret 0xfbe8
0x0000000000683fcf : ret 0xfc3
0x0000000000549a2a : ret 0xfc86
0x000000000044330c : ret 0xfce8
0x00000000006cacfa : ret 0xfd51
0x0000000000661a8d : ret 0xfd83
0x00000000004c651d : ret 0xfde8
0x00000000005d82de : ret 0xfe
0x000000000069b08c : ret 0xfe4a
0x000000000069a38c : ret 0xfe57
0x0000000000698d8a : ret 0xfe6d
0x00000000005d5f7a : ret 0xfe7
0x0000000000427aad : ret 0xfe8
0x000000000057a83b : ret 0xfe83
0x00000000006977a0 : ret 0xfe8e
0x000000000064d6dc : ret 0xfe9
0x0000000000697b6c : ret 0xfe99
0x000000000059a2ba : ret 0xfebb
0x00000000005bf9ea : ret 0xfee
0x0000000000422790 : ret 0xfee8
0x0000000000721ae5 : ret 0xfefd
0x00000000005fbdc4 : ret 0xff2
0x00000000006c2591 : ret 0xff31
0x0000000000592dbd : ret 0xff41
0x0000000000407fea : ret 0xff48
0x0000000000445aea : ret 0xff53
0x000000000068a58c : ret 0xff55
0x000000000061f9f8 : ret 0xff59
0x000000000052fb1a : ret 0xff73
0x00000000006712ba : ret 0xff77
0x0000000000677de8 : ret 0xff81
0x00000000006192ea : ret 0xff84
0x000000000044f0c4 : ret 0xff87
0x0000000000423336 : ret 0xff90
0x0000000000640d8a : ret 0xff9b
0x0000000000645c73 : ret 0xffad
0x000000000050b07c : ret 0xffb8
0x000000000068ddca : ret 0xffb9
0x0000000000507f05 : ret 0xffba
0x000000000059cd18 : ret 0xffbe
0x000000000069350a : ret 0xffc5
0x0000000000419092 : ret 0xffc6
0x0000000000734675 : ret 0xffcd
0x0000000000499a6e : ret 0xffce
0x0000000000644d7d : ret 0xffcf
0x0000000000736555 : ret 0xffd1
0x000000000069334a : ret 0xffd2
0x00000000006c79fd : ret 0xffd3
0x00000000006b7990 : ret 0xffd4
0x0000000000738595 : ret 0xffd5
0x0000000000738b35 : ret 0xffd6
0x00000000007227f0 : ret 0xffd7
0x000000000066781a : ret 0xffd9
0x000000000065bb03 : ret 0xffda
0x0000000000600cea : ret 0xffdc
0x0000000000629b4d : ret 0xffdd
0x000000000061799e : ret 0xffde
0x00000000005ec65c : ret 0xffdf
0x0000000000656062 : ret 0xffe0
0x000000000073e1dd : ret 0xffe1
0x00000000005d7a04 : ret 0xffe2
0x00000000005c7730 : ret 0xffe3
0x00000000005b7986 : ret 0xffe4
0x00000000005a79a9 : ret 0xffe5
0x000000000079a231 : ret 0xffe6
0x00000000005594da : ret 0xffe7
0x000000000047aea9 : ret 0xffe8
0x000000000068224b : ret 0xffe9
0x000000000062d5ae : ret 0xffea
0x00000000007aa099 : ret 0xffec
0x000000000050ca2a : ret 0xffed
0x000000000064411e : ret 0xffee
0x00000000004f7986 : ret 0xfff0
0x0000000000537c0a : ret 0xfff4
0x0000000000748245 : ret 0xfff5
0x0000000000527b1a : ret 0xfff6
0x0000000000580b7e : ret 0xfff7
0x000000000074a11d : ret 0xfff8
0x0000000000586b9a : ret 0xfff9
0x0000000000553bdf : ret 0xfffa
0x00000000004507d4 : ret 0xfffb
0x00000000004ed714 : ret 0xfffc
0x00000000004e37ee : ret 0xfffd
0x000000000049737a : ret 0xfffe
0x0000000000416bd7 : ret 0xffff
0x0000000000412452 : ret 1
0x000000000048fccc : ret 2
0x0000000000490d2f : ret 3
0x00000000006344d9 : ret 4
0x0000000000400c58 : ret 5
0x000000000055321c : ret 6
0x00000000005bff8c : ret 7
0x00000000005f3852 : ret 8
0x00000000004ce050 : ret 9
0x0000000000403f03 : retf
0x00000000007fb0bb : retf -0x100
0x0000000000561cf5 : retf -0x1009
0x000000000064a442 : retf -0x1023
0x00000000006d164a : retf -0x107d
0x00000000007b7ac1 : retf -0x11
0x0000000000681e07 : retf -0x1122
0x000000000074482c : retf -0x1190
0x00000000004756f3 : retf -0x12
0x0000000000526d16 : retf -0x1228
0x00000000006a9f19 : retf -0x127d
0x00000000007abee8 : retf -0x12c2
0x00000000007abcd0 : retf -0x12c3
0x00000000007ab9a0 : retf -0x12c8
0x0000000000474f74 : retf -0x13
0x0000000000684dd1 : retf -0x138b
0x00000000007aa481 : retf -0x14
0x00000000006a989c : retf -0x1425
0x000000000044f360 : retf -0x143
0x000000000054bc3c : retf -0x1472
0x00000000006ae5ab : retf -0x147d
0x0000000000742f34 : retf -0x14f1
0x0000000000635462 : retf -0x15
0x0000000000684558 : retf -0x1521
0x0000000000684589 : retf -0x1525
0x00000000006b2a82 : retf -0x152f
0x0000000000661036 : retf -0x153f
0x000000000053add5 : retf -0x1584
0x00000000006579c2 : retf -0x15f9
0x0000000000742d75 : retf -0x16
0x00000000006845d1 : retf -0x1621
0x0000000000689508 : retf -0x168b
0x0000000000568439 : retf -0x17
0x0000000000640e9e : retf -0x1744
0x000000000059eb77 : retf -0x177d
0x0000000000641178 : retf -0x17b7
0x00000000006400ea : retf -0x18
0x000000000079da20 : retf -0x181a
0x000000000079d238 : retf -0x1827
0x000000000079ce80 : retf -0x1831
0x000000000079c600 : retf -0x1857
0x00000000004d1ef2 : retf -0x186
0x000000000079be58 : retf -0x1875
0x000000000069d686 : retf -0x188b
0x000000000079bae8 : retf -0x188e
0x000000000058ee8a : retf -0x189e
0x0000000000586e9e : retf -0x19
0x00000000006a42f9 : retf -0x193f
0x000000000059a452 : retf -0x1953
0x0000000000699084 : retf -0x196
0x00000000006d1777 : retf -0x198b
0x0000000000741295 : retf -0x1a
0x0000000000797b08 : retf -0x1a60
0x000000000069a382 : retf -0x1a9
0x0000000000797578 : retf -0x1a9c
0x0000000000797018 : retf -0x1aab
0x0000000000796248 : retf -0x1acc
0x0000000000711ad6 : retf -0x1afe
0x00000000005a8aca : retf -0x1b
0x000000000069ab84 : retf -0x1b1
0x000000000066c6c9 : retf -0x1b8b
0x00000000007c846d : retf -0x1bff
0x00000000005b8def : retf -0x1c
0x00000000006845dd : retf -0x1c22
0x0000000000580692 : retf -0x1d
0x00000000006d3638 : retf -0x1d01
0x0000000000681eee : retf -0x1e22
0x0000000000722216 : retf -0x1e54
0x000000000067b525 : retf -0x1e7d
0x0000000000639d54 : retf -0x1e7f
0x000000000060aee9 : retf -0x1e8b
0x000000000063ac54 : retf -0x1e8e
0x0000000000721a3c : retf -0x1ead
0x0000000000644e61 : retf -0x1f
0x00000000006a4e7a : retf -0x1f18
0x0000000000789f49 : retf -0x20
0x000000000073cb15 : retf -0x21
0x000000000051bea5 : retf -0x2177
0x0000000000616f6b : retf -0x218
0x000000000073b4e5 : retf -0x23
0x00000000006cbec1 : retf -0x238b
0x00000000007f117b : retf -0x23f9
0x00000000007f3590 : retf -0x23ff
0x000000000073a835 : retf -0x24
0x0000000000578dac : retf -0x247b
0x000000000064d532 : retf -0x249c
0x000000000073a3ac : retf -0x24bc
0x000000000073a31c : retf -0x24f9
0x000000000073a545 : retf -0x25
0x0000000000554820 : retf -0x2517
0x0000000000659ea2 : retf -0x2563
0x000000000073a1d4 : retf -0x25a2
0x000000000073a25d : retf -0x26
0x00000000006640a2 : retf -0x2605
0x00000000006a166b : retf -0x2677
0x00000000006cbf14 : retf -0x268b
0x0000000000671782 : retf -0x26dc
0x00000000006671fb : retf -0x27
0x00000000005ab397 : retf -0x2742
0x000000000067c3a2 : retf -0x2788
0x000000000073995c : retf -0x2789
0x00000000007396a4 : retf -0x27ba
0x000000000073958c : retf -0x27c5
0x00000000006d1621 : retf -0x27c7
0x00000000007f3573 : retf -0x27ff
0x0000000000739b3d : retf -0x28
0x00000000007391a4 : retf -0x280f
0x00000000004ec425 : retf -0x2877
0x00000000006a5866 : retf -0x288b
0x000000000063bfa6 : retf -0x28e
0x0000000000767b78 : retf -0x28f1
0x00000000007eda0b : retf -0x28fe
0x0000000000687260 : retf -0x29
0x00000000007677f8 : retf -0x2901
0x0000000000738de4 : retf -0x290f
0x000000000072348d : retf -0x2912
0x0000000000738d64 : retf -0x2915
0x0000000000738bac : retf -0x292f
0x000000000044d1dd : retf -0x2977
0x0000000000738b7d : retf -0x2a
0x0000000000766578 : retf -0x2a25
0x000000000073858c : retf -0x2a3f
0x0000000000765338 : retf -0x2aa0
0x00000000006add22 : retf -0x2aa2
0x00000000007650f0 : retf -0x2ab0
0x0000000000764b88 : retf -0x2abb
0x000000000073843c : retf -0x2abf
0x00000000007646a0 : retf -0x2ac6
0x00000000006b0422 : retf -0x2acc
0x00000000006a6972 : retf -0x2b
0x0000000000737e6c : retf -0x2bb3
0x0000000000737df4 : retf -0x2bf9
0x0000000000761610 : retf -0x2bfd
0x000000000069ae1d : retf -0x2c
0x00000000007613a0 : retf -0x2c08
0x00000000006d5504 : retf -0x2c15
0x0000000000737c24 : retf -0x2c1b
0x0000000000737bec : retf -0x2c1d
0x0000000000737afc : retf -0x2c27
0x00000000005b3e88 : retf -0x2c77
0x00000000006c71a7 : retf -0x2d
0x000000000064c1b9 : retf -0x2d17
0x00000000004cc6c5 : retf -0x2d77
0x00000000005c6533 : retf -0x2d7b
0x000000000047fda9 : retf -0x2d7c
0x00000000004e846e : retf -0x2d8
0x0000000000677939 : retf -0x2d95
0x0000000000736e1c : retf -0x2dc5
0x0000000000736dcc : retf -0x2dc7
0x000000000068924a : retf -0x2dcf
0x000000000075e410 : retf -0x2df2
0x0000000000736a5c : retf -0x2df9
0x0000000000664cf9 : retf -0x2dff
0x000000000075f009 : retf -0x2e
0x000000000060eb7c : retf -0x2e77
0x000000000073628c : retf -0x2e92
0x000000000075cbf0 : retf -0x2e9e
0x0000000000684541 : retf -0x2eb8
0x00000000005fffa4 : retf -0x2ec7
0x000000000069d150 : retf -0x2ecf
0x00000000006d6862 : retf -0x2ed
0x000000000075ba68 : retf -0x2ed3
0x000000000075b938 : retf -0x2eda
0x0000000000545e02 : retf -0x2f
0x000000000045da90 : retf -0x2f01
0x000000000069cd21 : retf -0x2f09
0x00000000004e4bae : retf -0x2f18
0x0000000000735e54 : retf -0x2f32
0x0000000000735e24 : retf -0x2f36
0x00000000006ab8af : retf -0x2f77
0x0000000000574758 : retf -0x2fc7
0x0000000000735a2c : retf -0x2fe7
0x0000000000735e15 : retf -0x30
0x000000000073567c : retf -0x3041
0x000000000073563c : retf -0x304b
0x0000000000664439 : retf -0x3077
0x000000000073534c : retf -0x3091
0x0000000000754888 : retf -0x30d2
0x0000000000757069 : retf -0x31
0x0000000000583359 : retf -0x3117
0x0000000000753d80 : retf -0x311e
0x000000000069d6e4 : retf -0x313f
0x000000000061646c : retf -0x318
0x0000000000752490 : retf -0x31e5
0x00000000007521b0 : retf -0x31e8
0x00000000007348ac : retf -0x31fe
0x0000000000734e9d : retf -0x32
0x00000000007346b4 : retf -0x3237
0x0000000000750c80 : retf -0x3243
0x00000000007345ec : retf -0x324d
0x00000000007505a0 : retf -0x325c
0x000000000074fe38 : retf -0x32b6
0x0000000000733e24 : retf -0x32eb
0x0000000000733c94 : retf -0x32f2
0x00000000007346bd : retf -0x33
0x000000000070686a : retf -0x3335
0x00000000006a98ea : retf -0x3427
0x00000000006a9902 : retf -0x3527
0x000000000069d142 : retf -0x35ff
0x00000000006771f4 : retf -0x3600
0x00000000006bb8ba : retf -0x3617
0x0000000000684539 : retf -0x3627
0x00000000006844a3 : retf -0x3628
0x000000000069d1cc : retf -0x363f
0x00000000006d69ff : retf -0x365b
0x000000000040d5fc : retf -0x3670
0x00000000006cc297 : retf -0x367b
0x00000000007233ec : retf -0x368d
0x0000000000580fad : retf -0x36cf
0x0000000000507a78 : retf -0x3715
0x00000000006844a7 : retf -0x3728
0x000000000069d333 : retf -0x373f
0x0000000000568827 : retf -0x3742
0x00000000006a1a91 : retf -0x3777
0x00000000005c1032 : retf -0x38
0x000000000053b1be : retf -0x3815
0x00000000004c1bea : retf -0x3877
0x000000000078cd40 : retf -0x3879
0x00000000006c6a66 : retf -0x388b
0x000000000059cfe0 : retf -0x38b8
0x000000000047e2e7 : retf -0x3977
0x0000000000722e3b : retf -0x3985
0x00000000005c9ac2 : retf -0x39bd
0x0000000000649e63 : retf -0x39be
0x000000000069c273 : retf -0x39ca
0x00000000007a50d0 : retf -0x39d5
0x00000000005e4bf2 : retf -0x3a
0x000000000060a49a : retf -0x3a17
0x0000000000722fe4 : retf -0x3a71
0x00000000006a15f0 : retf -0x3a8d
0x00000000006d6983 : retf -0x3ad2
0x000000000050840f : retf -0x3ca5
0x00000000006d1b2d : retf -0x3cff
0x00000000006a578b : retf -0x3d27
0x00000000007228c4 : retf -0x3d46
0x00000000004ae044 : retf -0x3d7d
0x0000000000694803 : retf -0x3d95
0x00000000004deef7 : retf -0x3dc7
0x000000000068c46d : retf -0x3dd7
0x000000000069ca72 : retf -0x3df7
0x00000000006c4d71 : retf -0x3e22
0x00000000006a4303 : retf -0x3e9a
0x00000000006a0f6d : retf -0x3eb7
0x00000000004735c0 : retf -0x3eb8
0x00000000006b3261 : retf -0x3ebf
0x000000000069cd04 : retf -0x3edf
0x00000000006a5878 : retf -0x3f27
0x00000000004a4270 : retf -0x3f7b
0x0000000000694180 : retf -0x3f95
0x000000000069c8ed : retf -0x3fbf
0x000000000051032d : retf -0x3fcf
0x00000000006ae5c5 : retf -0x3fff
0x00000000006d67e2 : retf -0x403e
0x0000000000559b42 : retf -0x40bf
0x0000000000416eca : retf -0x41
0x000000000050ee7f : retf -0x418
0x0000000000559c12 : retf -0x41bf
0x00000000007bfbde : retf -0x41fa
0x00000000005ff061 : retf -0x42bf
0x000000000050923e : retf -0x4318
0x0000000000722a3f : retf -0x4446
0x00000000006d6d70 : retf -0x454c
0x000000000068464e : retf -0x45b8
0x0000000000610055 : retf -0x46b8
0x000000000061d497 : retf -0x46bf
0x00000000004feb54 : retf -0x47
0x00000000005d4559 : retf -0x47b8
0x00000000005199b6 : retf -0x48
0x00000000006d1198 : retf -0x48f1
0x00000000005175a2 : retf -0x49
0x000000000053d276 : retf -0x4915
0x000000000048c6b2 : retf -0x49f1
0x00000000006c632a : retf -0x4e17
0x00000000006d0716 : retf -0x4f3
0x00000000005b9949 : retf -0x5117
0x00000000005c6a1d : retf -0x5215
0x0000000000618b5e : retf -0x53
0x00000000005fba83 : retf -0x53f
0x000000000068a511 : retf -0x5415
0x000000000068b2aa : retf -0x5515
0x0000000000646782 : retf -0x56
0x0000000000405997 : retf -0x57d
0x00000000005fe7fb : retf -0x588b
0x00000000007c6ad4 : retf -0x58f7
0x00000000007e8c10 : retf -0x58fd
0x00000000006455e8 : retf -0x5b
0x00000000006bf20f : retf -0x5b17
0x00000000006ab8ab : retf -0x5d8e
0x00000000007eea7f : retf -0x5dff
0x00000000007f30b9 : retf -0x5fff
0x00000000005a320d : retf -0x60f1
0x0000000000583e09 : retf -0x617
0x00000000007e9d0e : retf -0x62f8
0x00000000006c2761 : retf -0x6315
0x0000000000696327 : retf -0x63f
0x00000000005fafa2 : retf -0x63f1
0x00000000006820d0 : retf -0x64f1
0x00000000006a9add : retf -0x6517
0x00000000006b5d8f : retf -0x6615
0x0000000000562109 : retf -0x6717
0x000000000068bd55 : retf -0x67b8
0x0000000000675534 : retf -0x6918
0x00000000006a0e9f : retf -0x69f1
0x000000000053dd96 : retf -0x6a15
0x00000000005624c4 : retf -0x6a77
0x00000000006d6e3c : retf -0x6b60
0x00000000007218c7 : retf -0x6cd0
0x00000000006866b0 : retf -0x6d15
0x000000000051af0d : retf -0x6f3d
0x00000000007e8c90 : retf -0x6fee
0x0000000000405635 : retf -0x6ff
0x00000000004f464d : retf -0x70f1
0x00000000005623bf : retf -0x71f1
0x000000000053aeef : retf -0x72b3
0x000000000060bf34 : retf -0x72b4
0x00000000004f65d9 : retf -0x72b5
0x000000000053c49e : retf -0x72b7
0x00000000004ae10a : retf -0x72b8
0x000000000069d253 : retf -0x72b9
0x000000000069cf15 : retf -0x72ba
0x0000000000609fc2 : retf -0x72bb
0x0000000000503f35 : retf -0x72bc
0x000000000055c154 : retf -0x72bf
0x00000000004cf170 : retf -0x72f1
0x0000000000685068 : retf -0x73f
0x00000000004faa4e : retf -0x73f1
0x000000000068bd75 : retf -0x7415
0x0000000000592467 : retf -0x742
0x0000000000666cfa : retf -0x74b3
0x0000000000482d70 : retf -0x74b4
0x0000000000480377 : retf -0x74b7
0x000000000040a7f5 : retf -0x74b8
0x000000000069d2ce : retf -0x74bc
0x00000000006a9868 : retf -0x74bf
0x000000000047cbf6 : retf -0x76b3
0x000000000040ce6c : retf -0x76b4
0x00000000004890be : retf -0x76b7
0x0000000000403d4f : retf -0x76b8
0x00000000006885ed : retf -0x76bb
0x000000000050484c : retf -0x76bc
0x000000000069cfe0 : retf -0x76bf
0x00000000007eb7e0 : retf -0x76ff
0x00000000006a1759 : retf -0x777
0x00000000006d1a19 : retf -0x77bb
0x0000000000694a78 : retf -0x77bd
0x00000000006d0b9d : retf -0x77bf
0x0000000000431e27 : retf -0x77c0
0x00000000006a589d : retf -0x7817
0x0000000000607eee : retf -0x7884
0x00000000004feb5c : retf -0x78f1
0x00000000007e9cf8 : retf -0x78ff
0x00000000006a4c2d : retf -0x79f1
0x00000000004ade98 : retf -0x7a75
0x0000000000549044 : retf -0x7ab3
0x00000000004a8cee : retf -0x7ab8
0x00000000005173d1 : retf -0x7abb
0x00000000006d6b01 : retf -0x7ac
0x000000000053f252 : retf -0x7af1
0x00000000006cd9f4 : retf -0x7aff
0x00000000004f585e : retf -0x7bf1
0x000000000066ce3f : retf -0x7c15
0x000000000050f0f7 : retf -0x7c18
0x00000000005a4365 : retf -0x7cb7
0x000000000040f020 : retf -0x7cb8
0x000000000060cec6 : retf -0x7cbf
0x0000000000682e9f : retf -0x7cf1
0x00000000004a1e94 : retf -0x7d
0x000000000053bec6 : retf -0x7d15
0x0000000000662edc : retf -0x7d17
0x000000000068bcfd : retf -0x7d7
0x00000000006073c1 : retf -0x7d73
0x000000000048c386 : retf -0x7eb8
0x000000000059b682 : retf -0x7f
0x00000000006b4904 : retf -0x7fbf
0x00000000007c69b5 : retf -0x7ffe
0x000000000058fdb2 : retf -0x80
0x0000000000631162 : retf -0x825
0x0000000000667343 : retf -0x8b8
0x000000000069cbb3 : retf -0x8bf
0x00000000006d6a95 : retf -0x903
0x0000000000561dda : retf -0x97b
0x000000000057bb32 : retf -0x9b
0x0000000000662059 : retf -0x9cf
0x00000000004e8a4d : retf -0xa
0x000000000058bae8 : retf -0xa8b
0x00000000005e6960 : retf -0xaf
0x00000000007482b5 : retf -0xb
0x000000000050a9fc : retf -0xb15
0x000000000074743c : retf -0xb3e
0x00000000007472fc : retf -0xb49
0x0000000000405712 : retf -0xb8
0x0000000000587ab9 : retf -0xb8b
0x000000000057caa4 : retf -0xc
0x00000000004c68a2 : retf -0xc2d
0x000000000068689a : retf -0xc8b
0x00000000006a4a02 : retf -0xc8d
0x0000000000643c61 : retf -0xd
0x00000000006898ca : retf -0xd77
0x0000000000630882 : retf -0xdc9
0x00000000007e395e : retf -0xdd5
0x000000000074626d : retf -0xe
0x00000000007223ef : retf -0xede
0x00000000006472ad : retf -0xf
0x000000000060a38b : retf -0xfd7
0x000000000041e96a : retf -1
0x00000000004fa62f : retf -2
0x000000000044d51c : retf -3
0x00000000004ecfd6 : retf -4
0x0000000000542393 : retf -5
0x000000000040cdcc : retf -6
0x0000000000589252 : retf -7
0x0000000000476ee0 : retf -8
0x000000000057a645 : retf -9
0x0000000000480a65 : retf 0
0x00000000005730c9 : retf 0x10
0x00000000007e57bf : retf 0x101
0x000000000057f9e6 : retf 0x1011
0x00000000007ee5d0 : retf 0x102
0x00000000005d2472 : retf 0x1022
0x00000000007d652c : retf 0x103
0x0000000000685105 : retf 0x104
0x000000000057c564 : retf 0x104f
0x00000000007d1f57 : retf 0x108
0x000000000057dd82 : retf 0x1082
0x0000000000577f64 : retf 0x1095
0x00000000005b4bc2 : retf 0x109c
0x00000000005b45c2 : retf 0x10a2
0x000000000057582c : retf 0x10ba
0x00000000005d8ece : retf 0x10d
0x00000000005b80ba : retf 0x10e8
0x0000000000563ba2 : retf 0x11
0x0000000000720e1e : retf 0x1100
0x000000000072286b : retf 0x111
0x00000000005bfc72 : retf 0x114a
0x000000000056be64 : retf 0x1156
0x000000000067f282 : retf 0x117e
0x0000000000550f12 : retf 0x1182
0x00000000004e52c6 : retf 0x12
0x0000000000560ae6 : retf 0x1200
0x00000000007d47e3 : retf 0x1201
0x0000000000597702 : retf 0x126e
0x00000000005083c2 : retf 0x1274
0x00000000004f0e41 : retf 0x128b
0x000000000066dd96 : retf 0x12c
0x000000000066b773 : retf 0x12eb
0x0000000000543c0c : retf 0x13
0x00000000007e0e7c : retf 0x1301
0x000000000054fd64 : retf 0x1317
0x00000000005a2c72 : retf 0x131a
0x00000000005a2972 : retf 0x131d
0x000000000054ce84 : retf 0x132c
0x000000000054c298 : retf 0x1338
0x0000000000549af6 : retf 0x136f
0x00000000006a49ef : retf 0x1372
0x00000000006b8298 : retf 0x137d
0x0000000000546b64 : retf 0x13a9
0x0000000000544484 : retf 0x13b6
0x0000000000597f72 : retf 0x13c7
0x0000000000544a64 : retf 0x13ca
0x00000000005814e2 : retf 0x13d3
0x000000000055c187 : retf 0x13eb
0x00000000005419be : retf 0x13f1
0x0000000000540684 : retf 0x13f4
0x000000000053407b : retf 0x14
0x00000000007c4fef : retf 0x1403
0x00000000007f5905 : retf 0x1406
0x00000000005ca3af : retf 0x141
0x00000000007dac1f : retf 0x1412
0x00000000005bfe28 : retf 0x144
0x000000000053b898 : retf 0x144d
0x00000000004f4766 : retf 0x145
0x000000000066714b : retf 0x1477
0x0000000000468449 : retf 0x147e
0x00000000004b2e0d : retf 0x148
0x0000000000688f94 : retf 0x1489
0x00000000006647d8 : retf 0x149
0x0000000000510e02 : retf 0x14c
0x00000000006d36d5 : retf 0x14d
0x0000000000532be6 : retf 0x14df
0x00000000006c62c7 : retf 0x14e9
0x00000000004dc8f0 : retf 0x15
0x000000000052f964 : retf 0x151b
0x00000000007e3257 : retf 0x1523
0x00000000007e3684 : retf 0x1535
0x00000000007f0839 : retf 0x1542
0x000000000052c55a : retf 0x1545
0x00000000005357e2 : retf 0x1547
0x0000000000555482 : retf 0x1553
0x0000000000527f84 : retf 0x157b
0x0000000000536512 : retf 0x1596
0x0000000000523898 : retf 0x15cd
0x0000000000514a4a : retf 0x16
0x00000000007ccef2 : retf 0x1603
0x00000000007e6073 : retf 0x160e
0x0000000000572f72 : retf 0x1617
0x000000000040b272 : retf 0x1640
0x0000000000570572 : retf 0x1641
0x0000000000519c98 : retf 0x1669
0x000000000051a664 : retf 0x166e
0x000000000060eea5 : retf 0x16be
0x00000000007f8ad6 : retf 0x1702
0x00000000007f6a94 : retf 0x1742
0x0000000000509982 : retf 0x1761
0x0000000000547be2 : retf 0x176c
0x00000000005033be : retf 0x17d7
0x0000000000531b65 : retf 0x18
0x00000000007d2900 : retf 0x1801
0x00000000007a6b07 : retf 0x180e
0x00000000004fd4f6 : retf 0x1835
0x0000000000501862 : retf 0x1847
0x00000000004f9d84 : retf 0x185d
0x00000000007f9dff : retf 0x188
0x00000000004f9164 : retf 0x1883
0x00000000004f71be : retf 0x1899
0x00000000007f9b55 : retf 0x18a
0x00000000004f67be : retf 0x18a3
0x000000000060b565 : retf 0x18b
0x00000000004f49e6 : retf 0x18c1
0x0000000000547372 : retf 0x18d3
0x0000000000583569 : retf 0x18e9
0x00000000004fa8e2 : retf 0x18f6
0x00000000007dd19c : retf 0x19
0x00000000004f6942 : retf 0x192f
0x00000000004f6b22 : retf 0x1931
0x00000000007fa87c : retf 0x194
0x00000000005d019e : retf 0x195
0x00000000004e3dbe : retf 0x19cd
0x00000000004d401f : retf 0x1a
0x000000000050a712 : retf 0x1a01
0x00000000007ec20d : retf 0x1a0b
0x00000000004dc982 : retf 0x1a41
0x000000000052f372 : retf 0x1a53
0x000000000052ee72 : retf 0x1a58
0x000000000064e97d : retf 0x1a75
0x00000000005092c3 : retf 0x1a7c
0x0000000000684531 : retf 0x1a8
0x00000000004d811e : retf 0x1a89
0x000000000060bb94 : retf 0x1abe
0x00000000004dd122 : retf 0x1ac7
0x00000000005115e2 : retf 0x1ad2
0x0000000000515812 : retf 0x1ae2
0x00000000007fac7d : retf 0x1af
0x0000000000514242 : retf 0x1af8
0x00000000004c4103 : retf 0x1b
0x00000000004cd91e : retf 0x1b31
0x00000000004f40e2 : retf 0x1b3c
0x00000000007f3d0b : retf 0x1b4
0x00000000004cb198 : retf 0x1b54
0x000000000055b564 : retf 0x1b7c
0x0000000000666d02 : retf 0x1b8
0x000000000050b012 : retf 0x1b8a
0x0000000000559ae7 : retf 0x1b9
0x000000000066d39c : retf 0x1ba
0x00000000004c3ef6 : retf 0x1bcb
0x000000000052f37f : retf 0x1be
0x00000000006d6dcf : retf 0x1bf0
0x00000000004fecc2 : retf 0x1bfb
0x00000000004bd4ea : retf 0x1c
0x00000000004bf8be : retf 0x1c12
0x00000000004bed2c : retf 0x1c25
0x00000000004c49e2 : retf 0x1c55
0x00000000006a4969 : retf 0x1c77
0x00000000004f6402 : retf 0x1c81
0x000000000058f2ea : retf 0x1c89
0x00000000004b65e4 : retf 0x1c95
0x00000000005d4506 : retf 0x1ceb
0x0000000000504f72 : retf 0x1cf7
0x00000000004a309f : retf 0x1d
0x00000000007ea9fa : retf 0x1d01
0x00000000007cc230 : retf 0x1d08
0x0000000000503a72 : retf 0x1d0c
0x00000000004af7e6 : retf 0x1d13
0x00000000004ec4e2 : retf 0x1d23
0x00000000004f4589 : retf 0x1d7d
0x00000000004e3432 : retf 0x1db8
0x00000000004e21e2 : retf 0x1dc6
0x00000000004a3082 : retf 0x1dca
0x00000000004e1402 : retf 0x1dd1
0x00000000005d8d49 : retf 0x1deb
0x00000000007f4355 : retf 0x1df
0x00000000007ce9e2 : retf 0x1e01
0x00000000007d48fc : retf 0x1e09
0x000000000049ac98 : retf 0x1e59
0x000000000049901e : retf 0x1e7a
0x0000000000498c1e : retf 0x1e7e
0x000000000050230a : retf 0x1eca
0x00000000007f456a : retf 0x1ed
0x0000000000491ce6 : retf 0x1eee
0x0000000000483fda : retf 0x1f
0x00000000007f4041 : retf 0x1f01
0x0000000000527bd0 : retf 0x1f0f
0x00000000007f467e : retf 0x1f4
0x0000000000489c1e : retf 0x1f6e
0x00000000007f4700 : retf 0x1f7
0x0000000000487ee6 : retf 0x1f8c
0x000000000048571e : retf 0x1fb3
0x0000000000482a84 : retf 0x1fd0
0x0000000000474078 : retf 0x20
0x000000000047fdbe : retf 0x200d
0x00000000007ebe6c : retf 0x201b
0x00000000007e3211 : retf 0x203
0x000000000047dc2c : retf 0x2036
0x00000000004041d2 : retf 0x204e
0x00000000006d6997 : retf 0x206b
0x0000000000680248 : retf 0x207d
0x000000000064f0ec : retf 0x20e9
0x00000000004a7869 : retf 0x21
0x000000000069cd92 : retf 0x2141
0x000000000069cf03 : retf 0x2144
0x000000000069cbf2 : retf 0x2145
0x0000000000467df6 : retf 0x218c
0x00000000004b4972 : retf 0x21fd
0x0000000000453090 : retf 0x22
0x0000000000454682 : retf 0x22b4
0x0000000000454bf6 : retf 0x22be
0x000000000043c2c0 : retf 0x23
0x000000000044d264 : retf 0x2342
0x000000000069f39c : retf 0x2374
0x00000000004a8988 : retf 0x23c
0x00000000004330a3 : retf 0x24
0x000000000043a8f6 : retf 0x2461
0x000000000069f579 : retf 0x2472
0x00000000004684a9 : retf 0x247c
0x0000000000424aa8 : retf 0x25
0x00000000007bfd84 : retf 0x2501
0x00000000007e3287 : retf 0x2520
0x0000000000423a82 : retf 0x25c0
0x0000000000422898 : retf 0x25dd
0x0000000000420582 : retf 0x25f5
0x000000000041488e : retf 0x26
0x0000000000659884 : retf 0x262
0x00000000007f34b3 : retf 0x2675
0x000000000040406b : retf 0x27
0x00000000007f8340 : retf 0x2702
0x0000000000415c72 : retf 0x2734
0x0000000000407984 : retf 0x2781
0x0000000000445a32 : retf 0x2792
0x0000000000544205 : retf 0x27e8
0x000000000041b2ce : retf 0x28
0x00000000007f5bd3 : retf 0x283c
0x00000000006a4f32 : retf 0x28e8
0x0000000000422295 : retf 0x29
0x00000000007d8f12 : retf 0x2904
0x00000000006839fb : retf 0x290f
0x00000000005c50c4 : retf 0x2941
0x00000000004cfae3 : retf 0x2948
0x00000000006af70b : retf 0x2949
0x00000000004f4aba : retf 0x294c
0x00000000005a0959 : retf 0x294d
0x0000000000438e72 : retf 0x29b8
0x000000000041221d : retf 0x2a
0x00000000005ad903 : retf 0x2a7c
0x0000000000655df6 : retf 0x2ac
0x00000000007c74b0 : retf 0x2b01
0x0000000000410062 : retf 0x2b0d
0x000000000060ca1f : retf 0x2b48
0x0000000000407c42 : retf 0x2c
0x00000000007d1606 : retf 0x2c02
0x0000000000410572 : retf 0x2c41
0x0000000000683f49 : retf 0x2c77
0x000000000058f075 : retf 0x2c89
0x0000000000652782 : retf 0x2d3
0x000000000051cfd0 : retf 0x2d74
0x00000000007d04f1 : retf 0x2e
0x00000000006875c5 : retf 0x2e66
0x000000000068453d : retf 0x2eb
0x00000000007e7cd4 : retf 0x2f03
0x00000000007bf053 : retf 0x301
0x00000000007d6d61 : retf 0x302
0x00000000007cb5cb : retf 0x309
0x000000000051c6be : retf 0x3101
0x000000000069d1eb : retf 0x3141
0x0000000000561d07 : retf 0x3144
0x0000000000569165 : retf 0x3145
0x00000000005fd5e4 : retf 0x3174
0x00000000007c82e1 : retf 0x31e
0x00000000007f2773 : retf 0x3204
0x00000000007e6d3f : retf 0x3219
0x00000000007d9bc6 : retf 0x322
0x000000000064dcbe : retf 0x32e
0x00000000007d7ccb : retf 0x33
0x00000000006ce0a2 : retf 0x33f2
0x00000000007e1835 : retf 0x3405
0x000000000069d7e5 : retf 0x341
0x00000000007e5f5d : retf 0x3413
0x00000000006bf9aa : retf 0x3430
0x000000000069f5b9 : retf 0x3472
0x000000000058ef3f : retf 0x3489
0x00000000006cefda : retf 0x34c
0x00000000006a616f : retf 0x35
0x00000000006aeff2 : retf 0x3538
0x0000000000650b62 : retf 0x354
0x0000000000695dde : retf 0x36
0x00000000007e1a90 : retf 0x3604
0x000000000069571a : retf 0x36d1
0x000000000069561a : retf 0x36d2
0x000000000069c64a : retf 0x36d5
0x000000000068cc94 : retf 0x37
0x0000000000648284 : retf 0x378
0x00000000006d6e78 : retf 0x381a
0x000000000069226c : retf 0x3846
0x000000000055b555 : retf 0x387d
0x0000000000559b8b : retf 0x3941
0x0000000000694987 : retf 0x3944
0x00000000005390b5 : retf 0x3945
0x00000000005092cc : retf 0x3948
0x00000000006ca1ff : retf 0x394c
0x00000000005094c0 : retf 0x394d
0x00000000006820ec : retf 0x3976
0x000000000066b6b2 : retf 0x39dc
0x0000000000645b82 : retf 0x39f
0x00000000006bd8dc : retf 0x3a41
0x00000000007f3343 : retf 0x3a67
0x000000000065ae12 : retf 0x3a7a
0x000000000064621e : retf 0x3a8
0x0000000000657a1a : retf 0x3aae
0x000000000065be32 : retf 0x3acf
0x0000000000645ecb : retf 0x3b
0x0000000000644482 : retf 0x3b6
0x0000000000513a85 : retf 0x3b9a
0x0000000000643e82 : retf 0x3bc
0x00000000006c4998 : retf 0x3bdb
0x0000000000644d2c : retf 0x3c5
0x00000000006916a2 : retf 0x3c7
0x0000000000667389 : retf 0x3c7c
0x0000000000689da1 : retf 0x3c7e
0x000000000063a812 : retf 0x3c80
0x0000000000639912 : retf 0x3c8f
0x0000000000681602 : retf 0x3cf
0x000000000062fc12 : retf 0x3d2c
0x000000000062eb4a : retf 0x3d9f
0x00000000004ffcbe : retf 0x3dbe
0x00000000007f704a : retf 0x3e
0x00000000007cb1d6 : retf 0x3e04
0x000000000062051a : retf 0x3e23
0x000000000061d3fa : retf 0x3eb2
0x0000000000615712 : retf 0x3ed1
0x000000000060e81a : retf 0x3f40
0x000000000060d21a : retf 0x3f56
0x000000000068217b : retf 0x3fe9
0x00000000006088a6 : retf 0x3ffb
0x0000000000602a1a : retf 0x3ffe
0x00000000005fc885 : retf 0x40
0x00000000007d1ce6 : retf 0x401
0x00000000005fd312 : retf 0x4055
0x00000000007eb8e1 : retf 0x40a
0x00000000006d75c8 : retf 0x40bf
0x00000000005e5ed1 : retf 0x41
0x000000000069cc9e : retf 0x410f
0x00000000007e6bdf : retf 0x412
0x00000000006d7970 : retf 0x413e
0x000000000066d47e : retf 0x415b
0x00000000006650b0 : retf 0x4166
0x000000000050aec0 : retf 0x41f0
0x00000000006db301 : retf 0x42
0x00000000005e1d1a : retf 0x420b
0x00000000006d9658 : retf 0x4247
0x000000000067f489 : retf 0x428d
0x00000000005c5def : retf 0x43
0x00000000006931f5 : retf 0x4383
0x00000000006dd2f8 : retf 0x43e4
0x00000000005b5e49 : retf 0x44
0x000000000069cfdc : retf 0x440c
0x00000000004056a3 : retf 0x440f
0x00000000005c45aa : retf 0x442d
0x00000000006dd3e8 : retf 0x4468
0x00000000006a1350 : retf 0x4489
0x00000000006dca70 : retf 0x44fb
0x00000000005b2b12 : retf 0x44fd
0x00000000006e2401 : retf 0x45
0x00000000005b161a : retf 0x4545
0x0000000000560528 : retf 0x4589
0x00000000007266c9 : retf 0x45a2
0x00000000004cf92c : retf 0x45c7
0x00000000005a1a92 : retf 0x460d
0x00000000005a1a1a : retf 0x460e
0x00000000006a15af : retf 0x4672
0x0000000000594d12 : retf 0x46db
0x000000000056a764 : retf 0x46e8
0x000000000042df9e : retf 0x47
0x000000000069ccc2 : retf 0x470a
0x00000000006bf315 : retf 0x4789
0x0000000000575e25 : retf 0x48
0x0000000000580812 : retf 0x4820
0x000000000050215e : retf 0x4848
0x000000000063851e : retf 0x485
0x000000000057c81a : retf 0x4860
0x0000000000536fe8 : retf 0x4880
0x000000000069f6de : retf 0x4890
0x0000000000579512 : retf 0x4893
0x0000000000721b93 : retf 0x48ac
0x00000000006ea091 : retf 0x49
0x00000000007edc59 : retf 0x490d
0x0000000000561ddf : retf 0x490f
0x000000000061e382 : retf 0x496
0x0000000000566b12 : retf 0x49bd
0x0000000000564d9a : retf 0x49da
0x0000000000555e76 : retf 0x4a
0x0000000000721e38 : retf 0x4a0
0x00000000006ea198 : retf 0x4a38
0x00000000006eac10 : retf 0x4aa3
0x0000000000636964 : retf 0x4ab
0x0000000000549892 : retf 0x4b47
0x000000000068a4ba : retf 0x4b7d
0x0000000000688cd2 : retf 0x4b7f
0x00000000006e4580 : retf 0x4b97
0x00000000005d46b7 : retf 0x4beb
0x00000000006dea31 : retf 0x4c
0x0000000000540c9a : retf 0x4c1b
0x00000000006dea20 : retf 0x4c37
0x00000000006a96ce : retf 0x4c6
0x00000000006342f6 : retf 0x4c7
0x00000000005beba9 : retf 0x4c7f
0x000000000069ce31 : retf 0x4c8b
0x0000000000536e79 : retf 0x4cd2
0x000000000053441a : retf 0x4ce4
0x00000000006282ae : retf 0x4ce8
0x0000000000525e6e : retf 0x4d
0x000000000052cf1a : retf 0x4d59
0x00000000005095a0 : retf 0x4d7c
0x0000000000508ded : retf 0x4de8
0x0000000000515ded : retf 0x4e
0x000000000052059a : retf 0x4e22
0x0000000000685f72 : retf 0x4e7
0x00000000006ed588 : retf 0x4eb0
0x000000000051471a : retf 0x4ee1
0x0000000000505df7 : retf 0x4f
0x0000000000658aa2 : retf 0x4f2
0x00000000007c84fa : retf 0x501
0x00000000007cd957 : retf 0x502
0x00000000007ceeac : retf 0x503
0x00000000007cb6b2 : retf 0x504
0x00000000007c3eb9 : retf 0x505
0x00000000007cd164 : retf 0x506
0x00000000007cc435 : retf 0x507
0x00000000005b96bd : retf 0x507f
0x00000000007c5d14 : retf 0x508
0x00000000007cd29c : retf 0x509
0x00000000007cc4b9 : retf 0x50a
0x00000000007c3122 : retf 0x50d
0x00000000007c76b8 : retf 0x50e
0x00000000007c66e2 : retf 0x50f
0x000000000063eebd : retf 0x51
0x00000000007c7036 : retf 0x511
0x00000000007e366f : retf 0x512
0x00000000007e68da : retf 0x513
0x00000000007cdeda : retf 0x514
0x000000000062fc2c : retf 0x516
0x00000000007dcc86 : retf 0x517
0x00000000006772ac : retf 0x517d
0x00000000005fd016 : retf 0x517f
0x00000000007c73ac : retf 0x51a
0x00000000007cdf87 : retf 0x51b
0x00000000007e9ed6 : retf 0x520
0x00000000007f6471 : retf 0x522
0x00000000007e3227 : retf 0x526
0x00000000007cad87 : retf 0x527
0x00000000007fbb4b : retf 0x52c
0x00000000004cd012 : retf 0x5358
0x00000000005b7f9a : retf 0x5374
0x00000000007e554a : retf 0x53a
0x00000000005d44cf : retf 0x53eb
0x000000000062d564 : retf 0x53f
0x00000000004b5d73 : retf 0x54
0x00000000004c231a : retf 0x5405
0x000000000069ce09 : retf 0x540b
0x00000000007f73d2 : retf 0x542
0x00000000005c6320 : retf 0x5439
0x0000000000661046 : retf 0x548b
0x00000000006be34b : retf 0x548d
0x00000000007f3176 : retf 0x551
0x000000000055c138 : retf 0x557c
0x0000000000431e11 : retf 0x558b
0x00000000006885f7 : retf 0x567c
0x00000000007fa34a : retf 0x568
0x000000000061d0d2 : retf 0x56a
0x000000000049b8fa : retf 0x57
0x000000000067f485 : retf 0x57c
0x0000000000465ea5 : retf 0x59
0x0000000000468e5a : retf 0x5944
0x0000000000467b52 : retf 0x5957
0x00000000005fe7a2 : retf 0x5974
0x0000000000664dd6 : retf 0x59e9
0x00000000007232ff : retf 0x59ed
0x000000000044eb1a : retf 0x5b3d
0x00000000005d4524 : retf 0x5b90
0x00000000006d6936 : retf 0x5b9d
0x0000000000712fc9 : retf 0x5c
0x00000000006c7bfb : retf 0x5c7f
0x00000000007222fc : retf 0x5cb0
0x0000000000713450 : retf 0x5ceb
0x00000000006235e6 : retf 0x5d5
0x000000000040d5b7 : retf 0x5d90
0x00000000007141f0 : retf 0x5e3a
0x000000000059e5a6 : retf 0x5e77
0x0000000000405e22 : retf 0x5f
0x0000000000409ac0 : retf 0x5f56
0x00000000005f9c97 : retf 0x5f75
0x0000000000403b72 : retf 0x5f8b
0x0000000000403972 : retf 0x5f8c
0x0000000000403772 : retf 0x5f8d
0x0000000000403572 : retf 0x5f8e
0x0000000000403372 : retf 0x5f8f
0x000000000061fa82 : retf 0x600
0x00000000007d161c : retf 0x603
0x00000000007d1a0a : retf 0x605
0x00000000007f68e9 : retf 0x607
0x0000000000523937 : retf 0x60be
0x00000000007e51de : retf 0x60c
0x00000000007cc579 : retf 0x60f
0x0000000000617efc : retf 0x61
0x0000000000719260 : retf 0x6154
0x00000000007f2d8d : retf 0x627
0x000000000051d05b : retf 0x6274
0x00000000007e546c : retf 0x62d
0x000000000068c20c : retf 0x62e9
0x00000000007c0a08 : retf 0x6305
0x000000000061d85a : retf 0x632
0x00000000004056bf : retf 0x6348
0x00000000005017e2 : retf 0x6349
0x000000000069bd43 : retf 0x634c
0x0000000000582e21 : retf 0x634d
0x0000000000721868 : retf 0x63b
0x0000000000724e09 : retf 0x66
0x0000000000686287 : retf 0x667e
0x0000000000509618 : retf 0x6690
0x00000000006a1cc5 : retf 0x66c3
0x0000000000724ec8 : retf 0x66cb
0x00000000005f972a : retf 0x677
0x0000000000648750 : retf 0x6775
0x00000000007f4800 : retf 0x6800
0x00000000006771f1 : retf 0x6948
0x00000000006d6b10 : retf 0x69bc
0x00000000005c8099 : retf 0x6ae9
0x000000000072f511 : retf 0x6b
0x00000000006a1b51 : retf 0x6c74
0x00000000006845ef : retf 0x6cdb
0x0000000000722e3e : retf 0x6cfd
0x00000000004f3b39 : retf 0x6d
0x0000000000422c26 : retf 0x6da3
0x00000000004c5f02 : retf 0x6e
0x00000000006395d2 : retf 0x6e7
0x0000000000505f3c : retf 0x6e77
0x0000000000644a01 : retf 0x6e9
0x0000000000498524 : retf 0x6e93
0x00000000006011c9 : retf 0x6ee9
0x000000000054b7cc : retf 0x6f
0x0000000000511f49 : retf 0x6f1a
0x000000000072248e : retf 0x6fc4
0x000000000059b870 : retf 0x70
0x00000000007ef50a : retf 0x702
0x00000000007d5b86 : retf 0x703
0x000000000060f384 : retf 0x707
0x000000000051c0c0 : retf 0x708d
0x00000000007dbda8 : retf 0x709
0x000000000074dad1 : retf 0x70c
0x000000000062a426 : retf 0x71
0x00000000006719fb : retf 0x717f
0x00000000004f629b : retf 0x718d
0x000000000060eee6 : retf 0x71c
0x000000000060db84 : retf 0x71f
0x00000000006acdff : retf 0x72
0x000000000067f226 : retf 0x7279
0x0000000000693d2f : retf 0x728d
0x000000000068d04f : retf 0x7292
0x00000000005f8712 : retf 0x737c
0x000000000064a302 : retf 0x742
0x00000000005d2ab7 : retf 0x7489
0x0000000000609084 : retf 0x76a
0x000000000051bf4b : retf 0x7775
0x0000000000646b02 : retf 0x77a
0x000000000068e7f4 : retf 0x77c
0x000000000067a7ba : retf 0x77f
0x00000000005239f5 : retf 0x7874
0x000000000065de86 : retf 0x788b
0x0000000000693173 : retf 0x78be
0x0000000000722b90 : retf 0x796b
0x000000000068c353 : retf 0x7a8d
0x0000000000605cbe : retf 0x7ae
0x0000000000721e3d : retf 0x7bc6
0x0000000000769c12 : retf 0x7c
0x0000000000683169 : retf 0x7c7a
0x000000000053de71 : retf 0x7c80
0x00000000006844f7 : retf 0x7cd9
0x0000000000602c82 : retf 0x7ce
0x00000000006772bf : retf 0x7cee
0x000000000060432c : retf 0x7cf
0x0000000000601984 : retf 0x7e1
0x00000000004ae0e7 : retf 0x7eb
0x000000000059dbab : retf 0x7f75
0x0000000000601c64 : retf 0x7f8
0x00000000007bb059 : retf 0x7fbe
0x000000000068d025 : retf 0x7fe9
0x0000000000723c0c : retf 0x800
0x00000000005ff4e6 : retf 0x816
0x00000000005fdf84 : retf 0x81b
0x00000000005fdc82 : retf 0x81e
0x00000000005facbe : retf 0x85e
0x00000000005fd5fd : retf 0x874
0x0000000000449bde : retf 0x8b9
0x0000000000631c02 : retf 0x8c9
0x0000000000684b12 : retf 0x8d6
0x0000000000683c12 : retf 0x8e5
0x00000000004ab1f0 : retf 0x8f
0x00000000007d57ad : retf 0x901
0x00000000007d7875 : retf 0x902
0x00000000007cb720 : retf 0x911
0x00000000007d49f2 : retf 0x916
0x00000000007cd541 : retf 0x917
0x00000000007ec24b : retf 0x930
0x00000000007f6a29 : retf 0x936
0x000000000069ce2c : retf 0x944
0x000000000051d09a : retf 0x948
0x00000000006a4b99 : retf 0x974
0x00000000006a5314 : retf 0x977
0x000000000063a472 : retf 0x9a2
0x000000000063a072 : retf 0x9a6
0x00000000005e3898 : retf 0x9cd
0x000000000041de6d : retf 0x9f
0x00000000004bdf48 : retf 0xa
0x00000000007716d8 : retf 0xa01
0x0000000000632d72 : retf 0xa19
0x00000000005dda64 : retf 0xa3a
0x0000000000683f42 : retf 0xa48
0x00000000006cba93 : retf 0xa74
0x00000000006a51c3 : retf 0xa77
0x000000000068319f : retf 0xa7a
0x000000000050929e : retf 0xa7c
0x00000000005d5d84 : retf 0xa9d
0x00000000005d4a2c : retf 0xac8
0x00000000006845e3 : retf 0xaeb
0x00000000005781f8 : retf 0xb
0x000000000060d302 : retf 0xb12
0x00000000005caef6 : retf 0xb5b
0x00000000005c93e6 : retf 0xb77
0x000000000051d064 : retf 0xb7e
0x000000000044d6f2 : retf 0xb9
0x00000000006522ec : retf 0xba
0x00000000006895ef : retf 0xbe8
0x000000000068473c : retf 0xbe9
0x000000000065d2d4 : retf 0xbeb
0x00000000005b30dc : retf 0xc
0x000000000074ef73 : retf 0xc01
0x000000000075a8d1 : retf 0xc02
0x0000000000766b3f : retf 0xc09
0x00000000005bb564 : retf 0xc5f
0x00000000005bb464 : retf 0xc60
0x00000000005b99e6 : retf 0xc71
0x00000000006a1c11 : retf 0xc74
0x00000000005f94be : retf 0xc77
0x00000000005f54e2 : retf 0xc93
0x00000000005b3c84 : retf 0xcbe
0x00000000006a5833 : retf 0xceb
0x00000000005a405d : retf 0xd
0x00000000007d7a60 : retf 0xd01
0x00000000007d556b : retf 0xd02
0x00000000007d2536 : retf 0xd03
0x00000000005bea12 : retf 0xd11
0x00000000007ce28c : retf 0xd12
0x00000000007dbb4e : retf 0xd1c
0x00000000005b4fe2 : retf 0xd4f
0x00000000005b40e2 : retf 0xd5e
0x00000000005fd272 : retf 0xd74
0x000000000066961a : retf 0xd7d
0x00000000005a8664 : retf 0xd8e
0x00000000005b09a2 : retf 0xda3
0x00000000005a2a2c : retf 0xde8
0x00000000005a0384 : retf 0xdf7
0x000000000050dd3e : retf 0xe
0x00000000005a1264 : retf 0xe02
0x00000000007bfe07 : retf 0xe06
0x000000000076ffcf : retf 0xe0a
0x000000000059ffbe : retf 0xe0b
0x00000000007e6881 : retf 0xe10
0x00000000007ed74c : retf 0xe25
0x00000000005ee472 : retf 0xe62
0x0000000000654b85 : retf 0xe7c
0x0000000000597564 : retf 0xe9f
0x0000000000594282 : retf 0xeb8
0x00000000005e8472 : retf 0xec2
0x0000000000592084 : retf 0xeda
0x0000000000660d99 : retf 0xee9
0x00000000005d7cac : retf 0xf
0x0000000000676e5a : retf 0xf40
0x00000000005fae54 : retf 0xf41
0x00000000006b7d03 : retf 0xf42
0x00000000005fff2e : retf 0xf44
0x00000000006b260d : retf 0xf48
0x000000000058ad84 : retf 0xf4d
0x000000000058b12c : retf 0xf61
0x00000000005fbe80 : retf 0xf66
0x0000000000723215 : retf 0xfa8
0x0000000000526bda : retf 0xfc3
0x0000000000582284 : retf 0xfd8
0x0000000000681d5c : retf 0xff2
0x00000000005a8772 : retf 0xff5
0x00000000004a3724 : retf 0xffff
0x000000000043a9ac : retf 1
0x00000000004a732e : retf 2
0x000000000053123a : retf 3
0x00000000004aa368 : retf 4
0x000000000045925e : retf 5
0x0000000000651bbb : retf 6
0x00000000004ca0c3 : retf 7
0x000000000059dc42 : retf 8
0x00000000005e30a7 : retf 9
0x000000000073eeb0 : retfq ; add al, 0 ; xor byte ptr [rsi], 0xe3 ; jmp qword ptr [rax - 0x35]
0x0000000000547f43 : rol ah, 0x4b ; add byte ptr [rax], al ; setne al ; ret
0x00000000007473e4 : rol al, 1 ; hlt ; jmp rax
0x00000000006c9552 : rol ax, 8 ; ret
0x00000000007352b8 : rol bh, 1 ; add byte ptr [rdx + 0x4d], ch ; iretd ; jmp rax
0x000000000069c647 : rol bh, 5 ; retf 0x36d5
0x000000000050f688 : rol bl, 0x66 ; nop dword ptr [rax + rax] ; ret
0x000000000053aded : rol bl, 0x90 ; mov eax, 1 ; ret
0x0000000000517f6b : rol bl, 0x90 ; nop ; mov eax, esi ; ret
0x000000000060658e : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000076c340 : rol bl, 0xd9 ; call rdi
0x00000000006a186c : rol bl, 1 ; nop ; mov eax, edi ; ret
0x000000000068ecbd : rol bl, 1 ; nop ; xor edx, edx ; mov rax, rdx ; ret
0x000000000074b3b4 : rol bl, 1 ; stc ; inc dword ptr [rax - 0xffff75f] ; ret
0x00000000006c6cd1 : rol byte ptr [rax + 0x38], 0xfe ; je 0x6c6ce6 ; ret
0x000000000067a97b : rol byte ptr [rax + 0x48], 0x39 ; ret
0x00000000004830f6 : rol byte ptr [rax + 0x48], 0x39 ; ret 0x840f
0x0000000000482f0a : rol byte ptr [rax + 0x48], 0x89 ; ret 0x8948
0x00000000005faf6a : rol byte ptr [rax + 0x64763f3c], 0xe9 ; retf
0x00000000006a49fd : rol byte ptr [rax + 0x66], 0xf ; retf -0xc8d
0x000000000073ecd1 : rol byte ptr [rax + rax], 0 ; mul dl ; call rax
0x0000000000797805 : rol byte ptr [rax + rax], 0x4c ; jno 0x7977f6 ; jmp rax
0x000000000068025f : rol byte ptr [rax + rcx*2], 0x83 ; ret 0xeb02
0x00000000006ccea7 : rol byte ptr [rax - 0x6bf0d0c1], 0xc0 ; ret
0x00000000006d11c7 : rol byte ptr [rax - 0x80], 0xff ; jle 0x6d11e3 ; xchg eax, edi ; ret 0x8441
0x0000000000744390 : rol byte ptr [rax - 0x82bfffa], 0xed ; jmp rax
0x000000000053ddca : rol byte ptr [rax], 0 ; add bl, al ; nop ; ret
0x000000000054a4a6 : rol byte ptr [rax], 0 ; add byte ptr [rax + 0x63], cl ; ret 0x2948
0x00000000006871cc : rol byte ptr [rax], 0 ; add byte ptr [rax + 0x63], cl ; retf
0x00000000005017dc : rol byte ptr [rax], 0 ; add byte ptr [rbp + 0x63], cl ; retf 0x6349
0x00000000004f8e85 : rol byte ptr [rax], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004e0ea6 : rol byte ptr [rax], 0 ; add byte ptr [rcx - 0x77], cl ; ret 0x8948
0x00000000004e2968 : rol byte ptr [rax], 0 ; add byte ptr [rcx - 0x77], cl ; retf -0x76b8
0x000000000067b134 : rol byte ptr [rax], 0 ; add byte ptr [rcx], ch ; ret 0xfa83
0x0000000000648454 : rol byte ptr [rax], 0 ; add byte ptr [rsi + 1], bh ; call rax
0x00000000007577dd : rol byte ptr [rax], 0 ; ret 0xcfd7
0x0000000000440b54 : rol byte ptr [rax], 0x74 ; add ch, bl ; ret 0x8b48
0x00000000006d41fc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000005101e4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rdi, r13 ; call rdx
0x000000000060852c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rdi, rbx ; call 0x6d4749
0x00000000006109c8 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rdi, rbx ; call rcx
0x0000000000621613 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000006ab599 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005b8a36 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; test al, 1 ; jne 0x5b8a4d ; call rax
0x0000000000513a94 : rol byte ptr [rax], 1 ; retf 0x3b9a
0x000000000040466c : rol byte ptr [rax], 1 ; sub eax, 0x5d5b5800 ; ret
0x0000000000631c2b : rol byte ptr [rax], cl ; add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x0000000000513a83 : rol byte ptr [rax], cl ; retf 0x3b9a
0x000000000069cd23 : rol byte ptr [rbp + 0x21], 1 ; ret 0x2144
0x000000000067997d : rol byte ptr [rbp + 0x39], cl ; ret
0x00000000005c9abf : rol byte ptr [rbp + 0x39], cl ; retf -0x39bd
0x0000000000649e60 : rol byte ptr [rbp + 0x39], cl ; retf -0x39be
0x00000000006bd20c : rol byte ptr [rbp + 0x758d48c0], cl ; ror byte ptr [rdi], 1 ; ret 0xc389
0x0000000000693b08 : rol byte ptr [rbp - 0x1b76b62e], 0xf ; xchg eax, esp ; ret 0xc284
0x000000000078ffb0 : rol byte ptr [rbp - 0x1e], 1 ; jmp qword ptr [rbx]
0x0000000000737a78 : rol byte ptr [rbp - 0x2f8dfffe], 0xd3 ; jmp rax
0x000000000069cd89 : rol byte ptr [rbp - 0x77], 1 ; ret 0x8945
0x000000000069d33f : rol byte ptr [rbp - 0x77], cl ; ret 0xc209
0x000000000069cbe9 : rol byte ptr [rbp - 0x77], cl ; rol dword ptr [rcx - 0x77], 1 ; ret 0x2141
0x00000000007224e2 : rol byte ptr [rbx + 0x2d], cl ; pop rcx ; outsb dx, byte ptr [rsi] ; sti ; ret
0x000000000066070f : rol byte ptr [rbx + 0xb740d3a], 0xf3 ; ret
0x00000000007e7d04 : rol byte ptr [rbx + rax], 1 ; ret
0x00000000006ce8b1 : rol byte ptr [rbx - 0x6bf0fd01], 0xc0 ; ret
0x000000000060012c : rol byte ptr [rbx], 0 ; add byte ptr [rax + 0x63], cl ; ret
0x00000000007d7817 : rol byte ptr [rbx], 0 ; retf 0x503
0x00000000005bf926 : rol byte ptr [rbx], 0x89 ; ret
0x000000000064427f : rol byte ptr [rbx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000788715 : rol byte ptr [rbx], 1 ; add byte ptr [rax], bl ; jo 0x788701 ; jmp qword ptr [rax]
0x000000000073bd81 : rol byte ptr [rbx], 1 ; add byte ptr [rax], dl ; jl 0x73bd6b ; jmp qword ptr [rax]
0x00000000007e8909 : rol byte ptr [rbx], 2 ; ret 6
0x000000000073be01 : rol byte ptr [rbx], cl ; add al, dh ; test esi, ebx ; jmp rax
0x0000000000643909 : rol byte ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000064404c : rol byte ptr [rbx], cl ; add byte ptr [rax - 0x7d], cl ; cli ; or dword ptr [rax - 0x77], ecx ; ret
0x00000000007889ed : rol byte ptr [rbx], cl ; add byte ptr [rax], ah ; jg 0x7889d9 ; jmp qword ptr [rcx]
0x0000000000788a05 : rol byte ptr [rbx], cl ; add byte ptr [rax], bh ; jg 0x7889f1 ; call qword ptr [rbx]
0x000000000069ccdd : rol byte ptr [rcx + 0x21], 1 ; ret 0x2141
0x0000000000686760 : rol byte ptr [rcx + 0x39], cl ; ret 0xb97d
0x00000000006867f1 : rol byte ptr [rcx + 0x39], cl ; retf -0x70f1
0x00000000005b7cc3 : rol byte ptr [rcx + 0x39], cl ; retf -0x71f1
0x0000000000664b1e : rol byte ptr [rcx + 0x5f], 1 ; ret
0x0000000000548718 : rol byte ptr [rcx + 0xf], 0x9f ; ret
0x000000000054e83b : rol byte ptr [rcx + 0xf], cl ; xchg eax, esp ; ret 0x3948
0x00000000006bf727 : rol byte ptr [rcx + rcx*4 - 0x19], 0xf ; ret
0x0000000000450441 : rol byte ptr [rcx + rcx*4], 0x10 ; leave ; ret
0x00000000004af454 : rol byte ptr [rcx + rcx*4], 1 ; ret 0x458b
0x00000000007591e8 : rol byte ptr [rcx - 0x30], 1 ; call qword ptr [rbx]
0x00000000007591a8 : rol byte ptr [rcx - 0x30], 1 ; call qword ptr [rdx]
0x000000000069cc6c : rol byte ptr [rcx - 0x3f], 1 ; ret 0x440c
0x00000000004721b1 : rol byte ptr [rcx - 0x42], 1 ; add byte ptr [rax], al ; add al, ch ; retf
0x00000000005d22ce : rol byte ptr [rcx - 0x42], 1 ; add byte ptr [rax], al ; add al, ch ; retf 0xe
0x0000000000579152 : rol byte ptr [rcx - 0x44], 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000053cb83 : rol byte ptr [rcx - 0x44], 1 ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000056bd84 : rol byte ptr [rcx - 0x44], 1 ; add byte ptr [rax], al ; add al, ch ; ret 0x113d
0x000000000054fc84 : rol byte ptr [rcx - 0x44], 1 ; add byte ptr [rax], al ; add al, ch ; ret 0x12fe
0x0000000000511984 : rol byte ptr [rcx - 0x44], 1 ; add byte ptr [rax], al ; add al, ch ; ret 0x16e1
0x00000000005b3884 : rol byte ptr [rcx - 0x44], 1 ; add byte ptr [rax], al ; add al, ch ; ret 0xcc2
0x000000000063a37b : rol byte ptr [rcx - 0x44], 1 ; add byte ptr [rax], al ; add al, ch ; retf
0x000000000064827c : rol byte ptr [rcx - 0x44], 1 ; add byte ptr [rax], al ; add al, ch ; retf 0x378
0x000000000060907c : rol byte ptr [rcx - 0x44], 1 ; add byte ptr [rax], al ; add al, ch ; retf 0x76a
0x00000000005938a8 : rol byte ptr [rcx - 0x44], 1 ; add byte ptr [rax], al ; add al, ch ; sahf ; ret 0xe
0x0000000000431ecb : rol byte ptr [rcx - 0x47], 0xd0 ; ret 0x6d
0x0000000000636b87 : rol byte ptr [rcx - 0x73], 0x4f ; and ecx, dword ptr [rdi] ; ret 0x8d44
0x0000000000677b59 : rol byte ptr [rcx - 0x75], 1 ; adc dword ptr [rcx - 0x77], eax ; retf -0x7cb7
0x00000000006b63fc : rol byte ptr [rcx - 0x76b80000], 1 ; ret
0x00000000006ad81a : rol byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x00000000006c5276 : rol byte ptr [rcx - 0x77], cl ; ret 0xffb8
0x00000000006886f0 : rol byte ptr [rcx - 0x7d], 0xc0 ; add dword ptr [rbp + 0x39], eax ; ret 0x667c
0x0000000000510950 : rol byte ptr [rcx - 0x7d], 0xc4 ; add ecx, dword ptr [rax + 0x63] ; retf
0x000000000052a8aa : rol byte ptr [rcx - 0x7d], 0xc6 ; add eax, ebp ; pushfq ; call qword ptr [rdi]
0x00000000004055e9 : rol byte ptr [rcx - 1], cl ; ret 0x8545
0x0000000000735149 : rol byte ptr [rcx], 0 ; call 0xffffffffe173205d
0x00000000007677f5 : rol byte ptr [rcx], 0 ; retf -0x2901
0x000000000051c544 : rol byte ptr [rcx], 0x39 ; ret
0x00000000004be9de : rol byte ptr [rcx], 0x39 ; ret 0x2674
0x00000000005cf8bf : rol byte ptr [rcx], 0x39 ; ret 0x2b7e
0x0000000000489fd7 : rol byte ptr [rcx], 0x39 ; ret 0x307e
0x00000000004c3c9c : rol byte ptr [rcx], 0x39 ; ret 0x4d0f
0x0000000000607e79 : rol byte ptr [rcx], 0x39 ; ret 0x8c0f
0x0000000000666c01 : rol byte ptr [rcx], 0x39 ; ret 0xd977
0x0000000000580cda : rol byte ptr [rcx], 0x39 ; retf -0x72f1
0x00000000006bbea3 : rol byte ptr [rcx], 0x39 ; ror byte ptr [rcx - 0x71f067bb], 1 ; ret
0x000000000053ecb8 : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x53ecaf ; ret
0x00000000006a07e2 : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x6a07df ; ret
0x00000000006bc529 : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x6bc51f ; ret
0x00000000006cba82 : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x6cba7f ; ret
0x00000000006c578e : rol byte ptr [rcx], 0x4c ; cmp eax, eax ; jne 0x6c5787 ; ret
0x00000000006bc4f7 : rol byte ptr [rcx], 0x66 ; cmp edx, eax ; jne 0x6bc4f7 ; ret
0x00000000006b6e6f : rol byte ptr [rcx], 0x66 ; mov dword ptr [r10 + 0x22], eax ; ret
0x00000000006a4ba1 : rol byte ptr [rcx], 0x75 ; jmp 0x6a4b6d
0x00000000006a0912 : rol byte ptr [rcx], 0x80 ; cmp al, 7 ; add byte ptr [rbp - 0xa], dh ; ret
0x00000000006a08df : rol byte ptr [rcx], 0x80 ; cmp al, 7 ; add byte ptr [rbp - 0xf], dh ; ret
0x000000000068f0fa : rol byte ptr [rcx], 0x83 ; ret
0x000000000067ec38 : rol byte ptr [rcx], 0x83 ; ret 0x8001
0x000000000065e302 : rol byte ptr [rcx], 0x84 ; leave ; jne 0x65e2e7 ; mov dword ptr [rdi], r8d ; ret
0x00000000006a7d13 : rol byte ptr [rcx], 0x89 ; add eax, 0x36218d ; pop rbx ; ret
0x0000000000498090 : rol byte ptr [rcx], 0x89 ; ret
0x000000000048f21a : rol byte ptr [rcx], 0x89 ; ret 0x5eb
0x000000000040c7dd : rol byte ptr [rcx], 0x89 ; ret 0x8b48
0x00000000004d5adc : rol byte ptr [rcx], 0x89 ; ret 0x8b49
0x00000000004cac60 : rol byte ptr [rcx], 0x89 ; ret 0x8d48
0x00000000004a5423 : rol byte ptr [rcx], 0x89 ; ret 0xeac1
0x000000000045679e : rol byte ptr [rcx], 0xeb ; in eax, 0x5d ; ret
0x0000000000450394 : rol byte ptr [rcx], 0xeb ; out 0x5d, al ; ret
0x000000000069c36d : rol byte ptr [rcx], 0xf ; ret 0x6348
0x0000000000676146 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000067617c : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000060bc13 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; ret
0x0000000000561eb6 : rol byte ptr [rcx], 1 ; ret
0x00000000006ad8b9 : rol byte ptr [rcx], 1 ; ret 0x3944
0x000000000067999e : rol byte ptr [rcx], 1 ; ret 0x8b41
0x00000000007ca70e : rol byte ptr [rcx], cl ; add byte ptr [rcx], bh ; ret 1
0x00000000004a832e : rol byte ptr [rcx], cl ; ret 0xc889
0x00000000006d0b95 : rol byte ptr [rcx], cl ; ror dword ptr [rax + 0x63], cl ; ror dword ptr [rax + 0x29], cl ; retf -0x77bf
0x00000000007e5bf0 : rol byte ptr [rcx], cl ; test dword ptr [rcx], eax ; ret
0x00000000005cdc37 : rol byte ptr [rdi + 0x48], 0x89 ; ret 0x8348
0x00000000005e98fc : rol byte ptr [rdi + 0x49], 0x89 ; ret
0x000000000042f38e : rol byte ptr [rdi], 0x25 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000006c03b7 : rol byte ptr [rdi], 0x73 ; add byte ptr [rax - 0x77], cl ; ja 0x6c03cf ; ret
0x0000000000748489 : rol byte ptr [rdi], 1 ; add byte ptr [rax - 0x1a], al ; cmc ; jmp qword ptr [rax]
0x0000000000603907 : rol byte ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000748541 : rol byte ptr [rdi], cl ; add byte ptr [rax], dh ; out dx, eax ; cmc ; jmp qword ptr [rax]
0x00000000005f8564 : rol byte ptr [rdi], cl ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000007b4350 : rol byte ptr [rdx - 0x11], 1 ; jmp qword ptr [rdi]
0x000000000073db7c : rol byte ptr [rdx - 0x1f], 1 ; jmp qword ptr [rax]
0x00000000007fb3cd : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; retf
0x00000000007386c9 : rol byte ptr [rdx], 0 ; and al, 0x1b ; salc ; jmp qword ptr [rax]
0x000000000077774d : rol byte ptr [rdx], 0 ; ja 0x777735 ; call qword ptr [rcx]
0x000000000077774c : rol byte ptr [rdx], 0 ; ja 0x777736 ; call qword ptr [rcx]
0x00000000004edfdb : rol byte ptr [rdx], 0x89 ; ret 0x8b48
0x00000000007930a8 : rol byte ptr [rdx], 0xe4 ; call qword ptr [rdi]
0x00000000006affbe : rol byte ptr [rdx], 0xf ; ret
0x000000000067b8f1 : rol byte ptr [rdx], 0xf ; ret 0x9848
0x00000000006a7703 : rol byte ptr [rdx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e4b57 : rol byte ptr [rdx], 1 ; add byte ptr [rbp + 0x902], bl ; retf
0x0000000000738a11 : rol byte ptr [rdx], 1 ; add byte ptr [rsi - 0x5c], bh ; salc ; jmp qword ptr [rax]
0x00000000005d58be : rol byte ptr [rdx], 1 ; call rax
0x00000000007dc227 : rol byte ptr [rip + 0x505c600], 1 ; retf
0x0000000000742299 : rol byte ptr [rip - 0x17b38000], cl ; call rax
0x0000000000745b20 : rol byte ptr [rip - 0x55affff9], 0xf0 ; call qword ptr [rax]
0x00000000005d2b70 : rol byte ptr [rip - 0x76b80000], 1 ; ret
0x0000000000735f98 : rol byte ptr [rip - 0xcaffffe], 0xd0 ; jmp rax
0x00000000007ac4a8 : rol byte ptr [rsi - 0x13], 1 ; call qword ptr [rbx]
0x0000000000793af0 : rol byte ptr [rsi - 0x1c], 1 ; call rsp
0x0000000000734528 : rol byte ptr [rsi - 0x5f37ffff], 0xcd ; jmp rax
0x0000000000745149 : rol byte ptr [rsi], 0 ; out dx, eax ; jmp qword ptr [rax]
0x0000000000746c84 : rol byte ptr [rsi], 0xf4 ; call qword ptr [rax]
0x00000000007cfd17 : rol byte ptr [rsi], 1 ; add byte ptr [rbx + rax], bh ; retf
0x00000000007224e1 : rol byte ptr ds:[rbx + 0x2d], cl ; pop rcx ; outsb dx, byte ptr [rsi] ; sti ; ret
0x000000000054c0ce : rol ch, 0x6f ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000054a0e7 : rol ch, 1 ; outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000054c131 : rol ch, 1 ; outsd dx, dword ptr [rsi] ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000706860 : rol cl, 0xc2 ; ret
0x000000000069ce35 : rol cl, 1 ; ret 0x4405
0x000000000064b063 : rol dh, 0x45 ; ret 0xe801
0x000000000064af5f : rol dh, 0x45 ; ret 0xe802
0x00000000005a34a2 : rol dh, 0xd ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007351c0 : rol dl, 1 ; add ah, ah ; or al, 0xcf ; jmp rax
0x0000000000738720 : rol dl, 1 ; add al, byte ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; xor esi, edx ; push rax ; ret 2
0x00000000007451b0 : rol dl, 6 ; add byte ptr [rax + 0x18ffef37], dh ; ret
0x000000000059e6ae : rol dword ptr [rax + 0xf], cl ; lahf ; vpand ymm1, ymm15, ymmword ptr [rdi] ; sahf ; ret 0x840
0x000000000073ed11 : rol dword ptr [rax + rax], 0x70 ; mul edx ; lcall ptr [rax] ; ret 4
0x0000000000769d8c : rol dword ptr [rax + rax], cl ; add byte ptr [rax + rdi*2], al ; retf
0x0000000000798aad : rol dword ptr [rax + rax], cl ; nop ; add al, 0xe6 ; jmp qword ptr [rax]
0x000000000069f825 : rol dword ptr [rax + rcx*4 + 0xc], 0x32 ; jne 0x69f818 ; pop rbx ; ret
0x00000000006c689a : rol dword ptr [rax - 0x3f], -0x17 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x000000000050fbda : rol dword ptr [rax], 0 ; add byte ptr [rax], al ; jne 0x50fbd7 ; ret
0x000000000052f9da : rol dword ptr [rax], 0 ; add byte ptr [rax], al ; jne 0x52f9d7 ; ret
0x000000000052fbfa : rol dword ptr [rax], 0 ; add byte ptr [rax], al ; jne 0x52fbf7 ; ret
0x0000000000597aea : rol dword ptr [rax], 0 ; add byte ptr [rax], al ; jne 0x597ae7 ; ret
0x00000000006300ca : rol dword ptr [rax], 0 ; add byte ptr [rax], al ; jne 0x6300c7 ; ret
0x000000000063068a : rol dword ptr [rax], 0 ; add byte ptr [rax], al ; jne 0x630687 ; ret
0x000000000066bfea : rol dword ptr [rax], 0 ; add byte ptr [rax], al ; jne 0x66bfe7 ; ret
0x000000000068e96a : rol dword ptr [rax], 0 ; add byte ptr [rax], al ; jne 0x68e967 ; ret
0x000000000068ea5a : rol dword ptr [rax], 0 ; add byte ptr [rax], al ; jne 0x68ea57 ; ret
0x000000000068ea9a : rol dword ptr [rax], 0 ; add byte ptr [rax], al ; jne 0x68ea97 ; ret
0x000000000068eb9a : rol dword ptr [rax], 0 ; add byte ptr [rax], al ; jne 0x68eb97 ; ret
0x00000000006a416a : rol dword ptr [rax], 0 ; add byte ptr [rax], al ; jne 0x6a4167 ; ret
0x00000000006a829a : rol dword ptr [rax], 0 ; add byte ptr [rax], al ; jne 0x6a8297 ; ret
0x00000000004c5357 : rol dword ptr [rax], 0 ; add cl, ch ; retf
0x000000000075785d : rol dword ptr [rax], 0 ; and al, bl ; iretd ; call rsp
0x000000000067455c : rol dword ptr [rax], 0 ; nop ; mov eax, dword ptr [rdi + 8] ; ret
0x00000000007578fd : rol dword ptr [rax], 0 ; or dl, bl ; iretd ; jmp qword ptr [rbx]
0x0000000000607383 : rol dword ptr [rax], 1 ; add byte ptr [rax], al ; call rax
0x0000000000758a85 : rol dword ptr [rax], cl ; add ah, cl ; sbb al, dl ; call rsp
0x0000000000758ab5 : rol dword ptr [rax], cl ; add byte ptr [rax + 0x19], dh ; sar bh, 1 ; ret
0x00000000005f54ea : rol dword ptr [rax], cl ; call rax
0x000000000053e8bb : rol dword ptr [rbp + 0x105389c0], 0xf ; lahf ; ret 0xd184
0x000000000069cd01 : rol dword ptr [rbp + 0x21], 1 ; retf -0x3edf
0x00000000005c65db : rol dword ptr [rbp - 0x3c61f02e], 0x20 ; retf
0x00000000006880fc : rol dword ptr [rbp - 0x77], 1 ; ret 0xc148
0x000000000069eb97 : rol dword ptr [rbx + 0x394401c1], 1 ; ret
0x00000000005ee523 : rol dword ptr [rbx + 0x41], 0 ; call rax
0x00000000006a4def : rol dword ptr [rbx + 0xff201e8], 0x59 ; ret 0xef75
0x0000000000677b62 : rol dword ptr [rbx + rax*4], -0x3f ; add dword ptr [rcx], edi ; ret 0xed7c
0x000000000065e2d6 : rol dword ptr [rbx - 0x367bfe40], 0x74 ; sub bh, byte ptr [rcx] ; ret 0x2676
0x0000000000686df2 : rol dword ptr [rbx - 0x7cb7fe3a], cl ; ret 0x4801
0x00000000007f9389 : rol dword ptr [rbx], 0 ; add byte ptr [rdx], 8 ; ret
0x00000000006438f0 : rol dword ptr [rbx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000064370c : rol dword ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006437cf : rol dword ptr [rbx], cl ; add byte ptr [rax - 0x7d], cl ; cli ; or ecx, dword ptr [rax - 0x77] ; ret
0x00000000004faa40 : rol dword ptr [rcx + 0x29], cl ; retf
0x0000000000542055 : rol dword ptr [rcx + 0xf], -0x63 ; ret
0x0000000000522ae0 : rol dword ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret
0x0000000000665d61 : rol dword ptr [rcx + 9], 1 ; ret
0x000000000069fe54 : rol dword ptr [rcx + rcx*4 + 0xc], -0x4e ; jne 0x69fe48 ; pop rbx ; ret
0x00000000005fd586 : rol dword ptr [rcx - 0x38], 0x39 ; retf 0xf41
0x000000000069cc2d : rol dword ptr [rcx - 0x3f], cl ; ret
0x00000000006af725 : rol dword ptr [rcx - 0x44], 1 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x44c6
0x000000000068cd68 : rol dword ptr [rcx - 0x75], 1 ; or byte ptr [r15 + rax - 0x77], r15b ; retf
0x000000000069cbec : rol dword ptr [rcx - 0x77], 1 ; ret 0x2141
0x0000000000694a6c : rol dword ptr [rcx - 0x7d], cl ; ret 0x4201
0x000000000067f8ff : rol dword ptr [rcx], -0x7b ; idiv byte ptr [rdi - 0x3a] ; ret
0x000000000048d279 : rol dword ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000006d94a1 : rol dword ptr [rcx], 0 ; add byte ptr [rax], al ; add ah, bh ; ret
0x0000000000767815 : rol dword ptr [rcx], 0 ; cli ; call rsi
0x00000000006c51c9 : rol dword ptr [rcx], 0x39 ; ret
0x0000000000677b65 : rol dword ptr [rcx], 0x39 ; ret 0xed7c
0x0000000000532918 : rol dword ptr [rcx], 0x39 ; retf
0x00000000005fefae : rol dword ptr [rcx], 0x39 ; retf -0x72f1
0x00000000005115b4 : rol dword ptr [rcx], 0x75 ; cmp al, 0x48 ; mov edi, ebp ; call rcx
0x000000000076886d : rol dword ptr [rcx], 1 ; add ah, bl ; not edi ; jmp qword ptr [rbx]
0x0000000000768845 : rol dword ptr [rcx], 1 ; add byte ptr [rdx], ah ; not edi ; jmp rdx
0x00000000007688e5 : rol dword ptr [rcx], 1 ; add byte ptr [rsi], bh ; sti ; xlatb ; jmp rax
0x00000000005e56e6 : rol dword ptr [rcx], 1 ; call rax
0x000000000069ce2f : rol dword ptr [rcx], 1 ; retf 0x4c8b
0x0000000000768aa5 : rol dword ptr [rcx], cl ; add byte ptr [rdi + rsi - 0x28], ah ; jmp qword ptr [rdi]
0x00000000005e5584 : rol dword ptr [rcx], cl ; call rax
0x0000000000417391 : rol dword ptr [rdi - 0x76b7ffda], 1 ; ret
0x0000000000748511 : rol dword ptr [rdi], 1 ; add byte ptr [rax - 0x14], dl ; cmc ; call qword ptr [rax]
0x0000000000603898 : rol dword ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b426b : rol dword ptr [rdx + rdx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000722fd9 : rol dword ptr [rdx - 0x17ee3f5e], cl ; xchg eax, ebp ; retf
0x000000000064bece : rol dword ptr [rdx], 0 ; add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000007386e9 : rol dword ptr [rdx], 0 ; hlt ; salc ; jmp rax
0x00000000007386f1 : rol dword ptr [rdx], 0 ; sbb byte ptr [rdi], ah ; salc ; inc dword ptr [rax] ; ret 2
0x0000000000738a49 : rol dword ptr [rdx], 1 ; add byte ptr [rcx + rbp*4 - 0x2a], ah ; jmp qword ptr [rax]
0x000000000040c151 : rol dword ptr [rdx], 1 ; enter -0x3f7b, -0x70 ; pop rbp ; ret
0x0000000000733f31 : rol dword ptr [rip - 0x32e24000], cl ; call qword ptr [rax]
0x0000000000745169 : rol dword ptr [rsi], 0 ; and byte ptr [rbx], dh ; out dx, eax ; inc dword ptr [rax] ; ret 6
0x00000000007cd247 : rol dword ptr [rsi], 0 ; retf 0x506
0x0000000000745409 : rol dword ptr [rsi], 1 ; add al, dh ; jno 0x745404 ; jmp qword ptr [rax]
0x0000000000745429 : rol dword ptr [rsi], 1 ; add byte ptr [rax + 0x73], dh ; out dx, eax ; call rax
0x0000000000745431 : rol dword ptr [rsi], 1 ; add byte ptr [rax], dh ; je 0x74542c ; jmp qword ptr [rax]
0x0000000000745499 : rol dword ptr [rsi], cl ; add al, al ; ja 0x745494 ; jmp rax
0x00000000005e57be : rol dword ptr es:[rcx], 1 ; call rax
0x000000000076886c : rol dword ptr fs:[rcx], 1 ; add ah, bl ; not edi ; jmp qword ptr [rbx]
0x00000000006c9553 : rol eax, 8 ; ret
0x00000000004635a1 : rol ebp, 0x21 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000561d7e : rol ecx, -6 ; add ch, byte ptr [rcx] ; fimul dword ptr [rax + 0x63] ; retf 0x148
0x000000000069d363 : rol ecx, 1 ; ret 0x4106
0x000000000053e89d : rol edi, 0x44 ; ret
0x00000000006bd4ce : rol edi, 4 ; ret 0
0x000000000069ca49 : rol edx, cl ; lea eax, dword ptr [rdx + rsi] ; ret
0x00000000006a981c : rol esi, 1 ; add al, 6 ; sub dh, byte ptr [rbp - 0x23] ; ret
0x00000000004b210b : rol esp, 0x20 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000072c9f0 : ror ah, 1 ; push 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; retf
0x0000000000779530 : ror al, 0xdc ; jmp qword ptr [rdx]
0x0000000000706668 : ror bl, 0x57 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; retf
0x00000000006d692e : ror byte ptr [r10 - 0x3a], 1 ; push 2 ; retf 0x5b9d
0x00000000004d2eac : ror byte ptr [r11 - 0x2fc6d7ad], 0xf ; ret 0xc085
0x0000000000414f8c : ror byte ptr [r8 + 0x29], 1 ; ret 0x8948
0x000000000043eda4 : ror byte ptr [r8 + 0x39], 1 ; ret 0x1175
0x0000000000448fa4 : ror byte ptr [r8 + 0x39], 1 ; ret 0x5f74
0x0000000000442339 : ror byte ptr [r8 + 0x39], 1 ; ret 0x775
0x0000000000478ffa : ror byte ptr [r8 + 0x39], 1 ; ret 0x7d74
0x0000000000440eb6 : ror byte ptr [r8 + 0x39], 1 ; ret 0x840f
0x0000000000452538 : ror byte ptr [r8 + 0x63], 1 ; ret
0x0000000000607e24 : ror byte ptr [r8 + 0x63], 1 ; ror byte ptr [rax - 0x7d], cl ; ret 0x310f
0x00000000006218b5 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x3e102a ; call rax
0x00000000006216f5 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x3e11ea ; call rax
0x00000000006211f7 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x3e16e8 ; call rax
0x00000000006208ea : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x3e1ff5 ; call rax
0x00000000006206cd : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x3e2212 ; call rax
0x0000000000620515 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x3e23ca ; call rax
0x00000000006203bb : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x3e2524 ; call rax
0x000000000061e4cf : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x3e4410 ; call rax
0x000000000061e18d : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x3e4752 ; call rax
0x000000000061cacf : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x3e5d90 ; call rax
0x000000000061b63f : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x3e7220 ; call rax
0x000000000061b4d1 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x3e738e ; call rax
0x000000000061adc7 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x3e7a98 ; call rax
0x000000000061ace9 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x3e7b76 ; call rax
0x000000000061a337 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x3e85a8 ; call rax
0x0000000000617c7d : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x3eac62 ; call rax
0x00000000005ed309 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x415556 ; call rax
0x00000000005eb6f9 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x417166 ; call rax
0x00000000005eb58b : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x4172d4 ; call rax
0x00000000005eaf17 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x417948 ; call rax
0x00000000005eae39 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x417a26 ; call rax
0x00000000005e9f6f : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x4188f0 ; call rax
0x00000000005e83e1 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x41a47e ; call rax
0x00000000005e8273 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x41a5ec ; call rax
0x00000000005e7bff : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x41ac60 ; call rax
0x00000000005e7b21 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x41ad3e ; call rax
0x00000000004b93ab : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5494b4 ; call rax
0x00000000004b7fd3 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x54a88c ; call rax
0x00000000004b7e65 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x54a9fa ; call rax
0x00000000004b77b7 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x54b0a8 ; call rax
0x00000000004b76d9 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x54b186 ; call rax
0x00000000004b7145 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x54b71a ; call rax
0x00000000004b5d6d : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x54caf2 ; call rax
0x00000000004b5bff : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x54cc60 ; call rax
0x00000000004b5551 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x54d30e ; call rax
0x00000000004b5473 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x54d3ec ; call rax
0x00000000004a35e3 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x55f27c ; call rax
0x00000000004a220b : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x560654 ; call rax
0x00000000004a209d : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5607c2 ; call rax
0x00000000004a19ef : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x560e70 ; call rax
0x00000000004a1911 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x560f4e ; call rax
0x000000000049f0bb : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x563824 ; call rax
0x0000000000472f19 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x58f946 ; call rax
0x0000000000471b41 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x590d1e ; call rax
0x00000000004719d3 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x590e8c ; call rax
0x0000000000471325 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x59153a ; call rax
0x0000000000471247 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x591618 ; call rax
0x000000000046eca9 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x593c36 ; call rax
0x0000000000464fa9 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x59d936 ; call rax
0x000000000045ca8f : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5a5e50 ; call rax
0x0000000000454a2f : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5ade30 ; call rax
0x0000000000453657 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5af208 ; call rax
0x00000000004534e9 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5af376 ; call rax
0x0000000000452e3b : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5afa24 ; call rax
0x0000000000452d5d : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5afb02 ; call rax
0x0000000000451243 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5b161c ; call rax
0x00000000004502b1 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5b25ae ; call rax
0x0000000000450143 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5b271c ; call rax
0x000000000044faa1 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5b2dbe ; call rax
0x000000000044f9c3 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5b2e9c ; call rax
0x000000000044be79 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5b6a66 ; call rax
0x000000000044195f : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5c0f80 ; call rax
0x0000000000433b03 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5ced5c ; call rax
0x000000000043283b : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5d0024 ; call rax
0x00000000004326cd : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5d0192 ; call rax
0x0000000000432059 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5d0806 ; call rax
0x0000000000431f7b : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5d08e4 ; call rax
0x00000000004244e3 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5de37c ; call rax
0x000000000042321b : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5df644 ; call rax
0x00000000004230ad : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5df7b2 ; call rax
0x0000000000422a39 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5dfe26 ; call rax
0x000000000042295b : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5dff04 ; call rax
0x0000000000415071 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5ed7ee ; call rax
0x0000000000413da9 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5eeab6 ; call rax
0x0000000000413c3b : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5eec24 ; call rax
0x00000000004135c7 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5ef298 ; call rax
0x00000000004134e9 : ror byte ptr [r8 - 0x75], 1 ; add eax, 0x5ef376 ; call rax
0x0000000000444fef : ror byte ptr [r8 - 0x75], 1 ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8b48
0x00000000005d9f39 : ror byte ptr [r8 - 0x75], 5 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; mov dword ptr [rdx], eax ; call rax
0x00000000004b5814 : ror byte ptr [r8 - 0x75], 5 ; retf
0x0000000000467b4d : ror byte ptr [r8 - 0x75], 5 ; retf 0x5957
0x0000000000444ff3 : ror byte ptr [r8 - 0x77], 1 ; ret 0x8b48
0x0000000000413233 : ror byte ptr [r8 - 0x77], 1 ; retf -0x76b8
0x0000000000556c9c : ror byte ptr [r8 - 0x7d], 1 ; ret 0x480b
0x00000000006c1904 : ror byte ptr [r8 - 0x7d], 1 ; ret 0x480f
0x0000000000620416 : ror byte ptr [r9 - 0x77], 1 ; ret 0x2ce8
0x0000000000620720 : ror byte ptr [r9 - 0x77], 1 ; ret 0x3ce8
0x0000000000620561 : ror byte ptr [r9 - 0x77], 1 ; ret 0x47e8
0x0000000000413556 : ror byte ptr [r9 - 0x77], 1 ; ret 0x4ae8
0x000000000061e1bf : ror byte ptr [r9 - 0x77], 1 ; ret 0x7be8
0x00000000004c9eb4 : ror byte ptr [r9 - 0x77], 1 ; ret 0x8948
0x00000000004972c0 : ror byte ptr [r9 - 0x77], 1 ; ret 0x8ba
0x00000000004f025e : ror byte ptr [r9 - 0x77], 1 ; ret 0xa4e8
0x000000000062095a : ror byte ptr [r9 - 0x77], 1 ; ret 0xae8
0x0000000000623a2c : ror byte ptr [r9 - 0x77], 1 ; ret 0xdee8
0x00000000006ce5a3 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; ret
0x0000000000676ef6 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000414f8d : ror byte ptr [rax + 0x29], 1 ; ret 0x8948
0x00000000006d161e : ror byte ptr [rax + 0x29], 1 ; retf -0x27c7
0x00000000005af400 : ror byte ptr [rax + 0x29], 1 ; retf -0x72b8
0x00000000006d16bf : ror byte ptr [rax + 0x29], 1 ; retf 0x3944
0x00000000006d1c4e : ror byte ptr [rax + 0x29], 1 ; retf 0x4c6
0x00000000005f94ab : ror byte ptr [rax + 0x29], 1 ; retf 0xb9
0x00000000004ae104 : ror byte ptr [rax + 0x29], 1 ; ror dword ptr [rax - 0x77], 1 ; retf -0x72b8
0x00000000004def75 : ror byte ptr [rax + 0x29], 1 ; ror dword ptr [rax - 0x77], 1 ; retf -0x7cb8
0x00000000004056c2 : ror byte ptr [rax + 0x29], cl ; ret 0x14c
0x000000000053f127 : ror byte ptr [rax + 0x29], cl ; ret 0x3949
0x00000000006bc59a : ror byte ptr [rax + 0x29], cl ; ret 0x8b48
0x00000000006d1647 : ror byte ptr [rax + 0x29], cl ; retf -0x107d
0x00000000005c9acc : ror byte ptr [rax + 0x29], cl ; retf -0x72b8
0x00000000004e6bed : ror byte ptr [rax + 0x29], cl ; retf -0x74b8
0x0000000000662056 : ror byte ptr [rax + 0x29], cl ; retf -0x9cf
0x00000000006b80da : ror byte ptr [rax + 0x29], cl ; retf 0x3c80
0x00000000006d1709 : ror byte ptr [rax + 0x29], cl ; retf 0x4c6
0x00000000005fbe96 : ror byte ptr [rax + 0x29], cl ; ror dword ptr [rax - 0x77], 1 ; retf 0x148
0x00000000006d5628 : ror byte ptr [rax + 0x39], 0x1c ; and al, 0xf ; ret 0x8348
0x00000000006d4e51 : ror byte ptr [rax + 0x39], 0x34 ; and al, 0xf ; ret 0x8348
0x00000000006d49f2 : ror byte ptr [rax + 0x39], 0x4e ; or byte ptr [rdi], cl ; ret 0x90c3
0x000000000043eda5 : ror byte ptr [rax + 0x39], 1 ; ret 0x1175
0x0000000000448fa5 : ror byte ptr [rax + 0x39], 1 ; ret 0x5f74
0x000000000044233a : ror byte ptr [rax + 0x39], 1 ; ret 0x775
0x0000000000478ffb : ror byte ptr [rax + 0x39], 1 ; ret 0x7d74
0x0000000000440eb7 : ror byte ptr [rax + 0x39], 1 ; ret 0x840f
0x00000000005b88b2 : ror byte ptr [rax + 0x39], 1 ; ror dword ptr [rdi], -0x64 ; ret 0x3840
0x0000000000685fc2 : ror byte ptr [rax + 0x3b], 1 ; or byte ptr [r13 + 0xc], sil ; pop rbx ; ret
0x000000000068f052 : ror byte ptr [rax + 0x3b], cl ; je 0x68f037 ; sete al ; ret
0x00000000004b5186 : ror byte ptr [rax + 0x4588c44d], 1 ; shr al, 0xa0 ; ret
0x0000000000452539 : ror byte ptr [rax + 0x63], 1 ; ret
0x000000000068c1b9 : ror byte ptr [rax + 0x63], 1 ; retf
0x0000000000607e25 : ror byte ptr [rax + 0x63], 1 ; ror byte ptr [rax - 0x7d], cl ; ret 0x310f
0x0000000000679bd2 : ror byte ptr [rax + 0x63], 1 ; ror byte ptr [rax - 0x7d], cl ; ret 0x480f
0x00000000005ff425 : ror byte ptr [rax + 0x63], cl ; ret
0x00000000006bf2a7 : ror byte ptr [rax + 0x63], cl ; ret 0x107e
0x00000000005346dd : ror byte ptr [rax + 0xf], 0x48 ; ret 0x8d4c
0x00000000005346cd : ror byte ptr [rax + 0xf], 0x48 ; ret 0xba
0x000000000040a99b : ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x0000000000519dfc : ror byte ptr [rax + 0xf], 0x49 ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000006c1901 : ror byte ptr [rax + 0xf], 0x49 ; ror byte ptr [rax - 0x7d], 1 ; ret 0x480f
0x0000000000608430 : ror byte ptr [rax + 0xf], 1 ; ret 0x3948
0x00000000006d0820 : ror byte ptr [rax + 0xf], 1 ; ret 0x8d48
0x00000000005eea74 : ror byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000005eea8b : ror byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000052ba60 : ror byte ptr [rax + 0xf], cl ; ret 0xc148
0x000000000068f2ec : ror byte ptr [rax + 1], 1 ; ret
0x00000000006647d5 : ror byte ptr [rax + 1], 1 ; retf 0x149
0x000000000065e74f : ror byte ptr [rax + 1], cl ; push rax ; xor rax, rax ; ret
0x0000000000534817 : ror byte ptr [rax + 1], cl ; ret
0x00000000006cd535 : ror byte ptr [rax + 1], cl ; ret 0x14c
0x00000000006a2129 : ror byte ptr [rax + 1], cl ; ret 0x2949
0x0000000000517b1a : ror byte ptr [rax + 1], cl ; retf
0x00000000004b0c27 : ror byte ptr [rax + 1], cl ; retf -0x7eb8
0x0000000000516e2c : ror byte ptr [rax + 9], 0xc8 ; ret
0x000000000068875b : ror byte ptr [rax + 9], 0xf0 ; ret
0x0000000000536e70 : ror byte ptr [rax + rax - 0x60], cl ; mov edi, 0x5c60072 ; retf 0x4cd2
0x0000000000562f31 : ror byte ptr [rax + rax], 0 ; ret
0x00000000005b5470 : ror byte ptr [rax + rax], 0x89 ; ret
0x00000000004cc6be : ror byte ptr [rax - 0x3f], 0xe0 ; and byte ptr [rax - 0x77], cl ; retf -0x2d77
0x00000000006771ea : ror byte ptr [rax - 0x3f], 0xea ; sbb cl, byte ptr [rax + 0x31] ; retf 0x6948
0x00000000005f9c8b : ror byte ptr [rax - 0x3f], 1 ; jmp 0xffffffffc398e4d9
0x0000000000573c27 : ror byte ptr [rax - 0x60], 0 ; call 0x6c06d6
0x0000000000519349 : ror byte ptr [rax - 0x68], 1 ; add rsp, 0x18 ; ret
0x00000000006bd20e : ror byte ptr [rax - 0x73], 0x75 ; ror byte ptr [rdi], 1 ; ret 0xc389
0x000000000048d5f7 : ror byte ptr [rax - 0x73], 1 ; adc byte ptr [r8 - 0x77], cl ; ret 0x894c
0x000000000049638c : ror byte ptr [rax - 0x73], 1 ; or byte ptr [r8 - 0x77], cl ; ret 0x894c
0x00000000004830e5 : ror byte ptr [rax - 0x73], 1 ; or byte ptr [r8 - 0x77], cl ; ret 0x8d48
0x000000000055e1a1 : ror byte ptr [rax - 0x73], 1 ; pop rbp ; or byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xea5a
0x000000000040a96d : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004758cc : ror byte ptr [rax - 0x75], 1 ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000062417a : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3de6de ; call rax
0x00000000006218b6 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e102a ; call rax
0x00000000006216f6 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e11ea ; call rax
0x00000000006211f8 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e16e8 ; call rax
0x00000000006208eb : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e1ff5 ; call rax
0x00000000006206ce : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e2212 ; call rax
0x0000000000620516 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e23ca ; call rax
0x00000000006203bc : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e2524 ; call rax
0x000000000061f7ff : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e3069 ; call rax
0x000000000061f446 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e3412 ; call rax
0x000000000061e4d0 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e4410 ; call rax
0x000000000061e18e : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e4752 ; call rax
0x000000000061cad9 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e5d8f ; call rax
0x000000000061cad0 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e5d90 ; call rax
0x000000000061caa4 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e5db4 ; call rax
0x000000000061caad : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e5e2b ; call rax
0x000000000061b649 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e721f ; call rax
0x000000000061b640 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e7220 ; call rax
0x000000000061b614 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e7244 ; call rax
0x000000000061b61d : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e72bb ; call rax
0x000000000061b4db : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e738d ; call rax
0x000000000061b4d2 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e738e ; call rax
0x000000000061b4a6 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e73b2 ; call rax
0x000000000061b4af : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e7429 ; call rax
0x000000000061add1 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e7a97 ; call rax
0x000000000061adc8 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e7a98 ; call rax
0x000000000061ad9c : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e7abc ; call rax
0x000000000061ada5 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e7b33 ; call rax
0x000000000061acf3 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e7b75 ; call rax
0x000000000061acea : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e7b76 ; call rax
0x000000000061acbe : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e7b9a ; call rax
0x000000000061acc7 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e7c11 ; call rax
0x000000000061a338 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e85a8 ; call rax
0x00000000006188c8 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3e9f90 ; call rax
0x00000000006188d1 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3ea007 ; call rax
0x000000000061822c : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3ea62c ; call rax
0x0000000000618235 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3ea6a3 ; call rax
0x0000000000617c7e : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3eac62 ; call rax
0x00000000005f5406 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x40d452 ; call rax
0x00000000005f4650 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x40e218 ; call rax
0x00000000005f33f8 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x40f460 ; call rax
0x00000000005f325f : ror byte ptr [rax - 0x75], 1 ; add eax, 0x40f609 ; call rax
0x00000000005ed313 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x415555 ; call rax
0x00000000005ed30a : ror byte ptr [rax - 0x75], 1 ; add eax, 0x415556 ; call rax
0x00000000005ed2de : ror byte ptr [rax - 0x75], 1 ; add eax, 0x41557a ; call rax
0x00000000005ed2e7 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x4155f1 ; call rax
0x00000000005eb703 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x417165 ; call rax
0x00000000005eb6fa : ror byte ptr [rax - 0x75], 1 ; add eax, 0x417166 ; call rax
0x00000000005eb6ce : ror byte ptr [rax - 0x75], 1 ; add eax, 0x41718a ; call rax
0x00000000005eb6d7 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x417201 ; call rax
0x00000000005eb595 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x4172d3 ; call rax
0x00000000005eb58c : ror byte ptr [rax - 0x75], 1 ; add eax, 0x4172d4 ; call rax
0x00000000005eb560 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x4172f8 ; call rax
0x00000000005eb569 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x41736f ; call rax
0x00000000005eaf21 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x417947 ; call rax
0x00000000005eaf18 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x417948 ; call rax
0x00000000005eaeec : ror byte ptr [rax - 0x75], 1 ; add eax, 0x41796c ; call rax
0x00000000005eaef5 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x4179e3 ; call rax
0x00000000005eae43 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x417a25 ; call rax
0x00000000005eae3a : ror byte ptr [rax - 0x75], 1 ; add eax, 0x417a26 ; call rax
0x00000000005eae0e : ror byte ptr [rax - 0x75], 1 ; add eax, 0x417a4a ; call rax
0x00000000005eae17 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x417ac1 ; call rax
0x00000000005e9f79 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x4188ef ; call rax
0x00000000005e9f70 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x4188f0 ; call rax
0x00000000005e9f44 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x418914 ; call rax
0x00000000005e9f4d : ror byte ptr [rax - 0x75], 1 ; add eax, 0x41898b ; call rax
0x00000000005e83eb : ror byte ptr [rax - 0x75], 1 ; add eax, 0x41a47d ; call rax
0x00000000005e83e2 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x41a47e ; call rax
0x00000000005e83b6 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x41a4a2 ; call rax
0x00000000005e83bf : ror byte ptr [rax - 0x75], 1 ; add eax, 0x41a519 ; call rax
0x00000000005e827d : ror byte ptr [rax - 0x75], 1 ; add eax, 0x41a5eb ; call rax
0x00000000005e8274 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x41a5ec ; call rax
0x00000000005e8248 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x41a610 ; call rax
0x00000000005e8251 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x41a687 ; call rax
0x00000000005e7c09 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x41ac5f ; call rax
0x00000000005e7c00 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x41ac60 ; call rax
0x00000000005e7bd4 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x41ac84 ; call rax
0x00000000005e7bdd : ror byte ptr [rax - 0x75], 1 ; add eax, 0x41acfb ; call rax
0x00000000005e7b2b : ror byte ptr [rax - 0x75], 1 ; add eax, 0x41ad3d ; call rax
0x00000000005e7b22 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x41ad3e ; call rax
0x00000000005e7af6 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x41ad62 ; call rax
0x00000000005e7aff : ror byte ptr [rax - 0x75], 1 ; add eax, 0x41add9 ; call rax
0x00000000005e0e80 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x4219d8 ; call rax
0x00000000005e0e89 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x421a4f ; call rax
0x00000000005e07e0 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x422078 ; call rax
0x00000000005e07e9 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x4220ef ; call rax
0x00000000005d3fda : ror byte ptr [rax - 0x75], 1 ; add eax, 0x42e87e ; call rax
0x00000000005d3fe3 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x42e8f5 ; call rax
0x00000000005d393a : ror byte ptr [rax - 0x75], 1 ; add eax, 0x42ef1e ; call rax
0x00000000005d3943 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x42ef95 ; call rax
0x00000000004b93b5 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5494b3 ; call rax
0x00000000004b93ac : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5494b4 ; call rax
0x00000000004b9380 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5494d8 ; call rax
0x00000000004b9389 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54954f ; call rax
0x00000000004b7fdd : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54a88b ; call rax
0x00000000004b7fd4 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54a88c ; call rax
0x00000000004b7fa8 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54a8b0 ; call rax
0x00000000004b7fb1 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54a927 ; call rax
0x00000000004b7e6f : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54a9f9 ; call rax
0x00000000004b7e66 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54a9fa ; call rax
0x00000000004b7e3a : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54aa1e ; call rax
0x00000000004b7e43 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54aa95 ; call rax
0x00000000004b77c1 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54b0a7 ; call rax
0x00000000004b77b8 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54b0a8 ; call rax
0x00000000004b778c : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54b0cc ; call rax
0x00000000004b7795 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54b143 ; call rax
0x00000000004b76e3 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54b185 ; call rax
0x00000000004b76da : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54b186 ; call rax
0x00000000004b76ae : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54b1aa ; call rax
0x00000000004b76b7 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54b221 ; call rax
0x00000000004b714f : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54b719 ; call rax
0x00000000004b7146 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54b71a ; call rax
0x00000000004b711a : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54b73e ; call rax
0x00000000004b7123 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54b7b5 ; call rax
0x00000000004b5d77 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54caf1 ; call rax
0x00000000004b5d6e : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54caf2 ; call rax
0x00000000004b5d42 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54cb16 ; call rax
0x00000000004b5d4b : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54cb8d ; call rax
0x00000000004b5c09 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54cc5f ; call rax
0x00000000004b5c00 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54cc60 ; call rax
0x00000000004b5bd4 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54cc84 ; call rax
0x00000000004b5bdd : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54ccfb ; call rax
0x00000000004b555b : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54d30d ; call rax
0x00000000004b5552 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54d30e ; call rax
0x00000000004b5526 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54d332 ; call rax
0x00000000004b552f : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54d3a9 ; call rax
0x00000000004b547d : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54d3eb ; call rax
0x00000000004b5474 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54d3ec ; call rax
0x00000000004b5448 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54d410 ; call rax
0x00000000004b5451 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x54d487 ; call rax
0x00000000004a35ed : ror byte ptr [rax - 0x75], 1 ; add eax, 0x55f27b ; call rax
0x00000000004a35e4 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x55f27c ; call rax
0x00000000004a35b8 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x55f2a0 ; call rax
0x00000000004a35c1 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x55f317 ; call rax
0x00000000004a2215 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x560653 ; call rax
0x00000000004a220c : ror byte ptr [rax - 0x75], 1 ; add eax, 0x560654 ; call rax
0x00000000004a21e0 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x560678 ; call rax
0x00000000004a21e9 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5606ef ; call rax
0x00000000004a20a7 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5607c1 ; call rax
0x00000000004a209e : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5607c2 ; call rax
0x00000000004a2072 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5607e6 ; call rax
0x00000000004a207b : ror byte ptr [rax - 0x75], 1 ; add eax, 0x56085d ; call rax
0x00000000004a19f9 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x560e6f ; call rax
0x00000000004a19f0 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x560e70 ; call rax
0x00000000004a19c4 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x560e94 ; call rax
0x00000000004a19cd : ror byte ptr [rax - 0x75], 1 ; add eax, 0x560f0b ; call rax
0x00000000004a191b : ror byte ptr [rax - 0x75], 1 ; add eax, 0x560f4d ; call rax
0x00000000004a1912 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x560f4e ; call rax
0x00000000004a18e6 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x560f72 ; call rax
0x00000000004a18ef : ror byte ptr [rax - 0x75], 1 ; add eax, 0x560fe9 ; call rax
0x000000000049f5ec : ror byte ptr [rax - 0x75], 1 ; add eax, 0x56326c ; call rax
0x000000000049f5f5 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5632e3 ; call rax
0x000000000049f0bc : ror byte ptr [rax - 0x75], 1 ; add eax, 0x563824 ; call rax
0x000000000047d0c4 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x585794 ; call rax
0x000000000047d0cd : ror byte ptr [rax - 0x75], 1 ; add eax, 0x58580b ; call rax
0x000000000047404c : ror byte ptr [rax - 0x75], 1 ; add eax, 0x58e80c ; call rax
0x0000000000473b50 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x58ed18 ; call rax
0x0000000000472f23 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x58f945 ; call rax
0x0000000000472f1a : ror byte ptr [rax - 0x75], 1 ; add eax, 0x58f946 ; call rax
0x0000000000472eee : ror byte ptr [rax - 0x75], 1 ; add eax, 0x58f96a ; call rax
0x0000000000472ef7 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x58f9e1 ; call rax
0x0000000000471b4b : ror byte ptr [rax - 0x75], 1 ; add eax, 0x590d1d ; call rax
0x0000000000471b42 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x590d1e ; call rax
0x0000000000471b16 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x590d42 ; call rax
0x0000000000471b1f : ror byte ptr [rax - 0x75], 1 ; add eax, 0x590db9 ; call rax
0x00000000004719dd : ror byte ptr [rax - 0x75], 1 ; add eax, 0x590e8b ; call rax
0x00000000004719d4 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x590e8c ; call rax
0x00000000004719a8 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x590eb0 ; call rax
0x00000000004719b1 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x590f27 ; call rax
0x000000000047132f : ror byte ptr [rax - 0x75], 1 ; add eax, 0x591539 ; call rax
0x0000000000471326 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x59153a ; call rax
0x00000000004712fa : ror byte ptr [rax - 0x75], 1 ; add eax, 0x59155e ; call rax
0x0000000000471303 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5915d5 ; call rax
0x0000000000471251 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x591617 ; call rax
0x0000000000471248 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x591618 ; call rax
0x000000000047121c : ror byte ptr [rax - 0x75], 1 ; add eax, 0x59163c ; call rax
0x0000000000471225 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5916b3 ; call rax
0x000000000046f1da : ror byte ptr [rax - 0x75], 1 ; add eax, 0x59367e ; call rax
0x000000000046f1e3 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5936f5 ; call rax
0x000000000046ecaa : ror byte ptr [rax - 0x75], 1 ; add eax, 0x593c36 ; call rax
0x00000000004654da : ror byte ptr [rax - 0x75], 1 ; add eax, 0x59d37e ; call rax
0x00000000004654e3 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x59d3f5 ; call rax
0x0000000000464faa : ror byte ptr [rax - 0x75], 1 ; add eax, 0x59d936 ; call rax
0x000000000045cfc0 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5a5898 ; call rax
0x000000000045cfc9 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5a590f ; call rax
0x000000000045ca90 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5a5e50 ; call rax
0x0000000000454a39 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5ade2f ; call rax
0x0000000000454a30 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5ade30 ; call rax
0x0000000000454a04 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5ade54 ; call rax
0x0000000000454a0d : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5adecb ; call rax
0x0000000000453661 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5af207 ; call rax
0x0000000000453658 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5af208 ; call rax
0x000000000045362c : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5af22c ; call rax
0x0000000000453635 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5af2a3 ; call rax
0x00000000004534f3 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5af375 ; call rax
0x00000000004534ea : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5af376 ; call rax
0x00000000004534be : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5af39a ; call rax
0x00000000004534c7 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5af411 ; call rax
0x0000000000452e45 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5afa23 ; call rax
0x0000000000452e3c : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5afa24 ; call rax
0x0000000000452e10 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5afa48 ; call rax
0x0000000000452e19 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5afabf ; call rax
0x0000000000452d67 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5afb01 ; call rax
0x0000000000452d5e : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5afb02 ; call rax
0x0000000000452d32 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5afb26 ; call rax
0x0000000000452d3b : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5afb9d ; call rax
0x000000000045124d : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5b161b ; call rax
0x0000000000451244 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5b161c ; call rax
0x0000000000451218 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5b1640 ; call rax
0x0000000000451221 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5b16b7 ; call rax
0x00000000004502bb : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5b25ad ; call rax
0x00000000004502b2 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5b25ae ; call rax
0x0000000000450286 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5b25d2 ; call rax
0x000000000045028f : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5b2649 ; call rax
0x000000000045014d : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5b271b ; call rax
0x0000000000450144 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5b271c ; call rax
0x0000000000450118 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5b2740 ; call rax
0x0000000000450121 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5b27b7 ; call rax
0x000000000044faab : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5b2dbd ; call rax
0x000000000044faa2 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5b2dbe ; call rax
0x000000000044fa76 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5b2de2 ; call rax
0x000000000044fa7f : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5b2e59 ; call rax
0x000000000044f9cd : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5b2e9b ; call rax
0x000000000044f9c4 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5b2e9c ; call rax
0x000000000044f998 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5b2ec0 ; call rax
0x000000000044f9a1 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5b2f37 ; call rax
0x000000000044c3aa : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5b64ae ; call rax
0x000000000044c3b3 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5b6525 ; call rax
0x000000000044be7a : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5b6a66 ; call rax
0x0000000000441e90 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5c09c8 ; call rax
0x0000000000441e99 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5c0a3f ; call rax
0x0000000000441960 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5c0f80 ; call rax
0x0000000000439908 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5c8fd0 ; call rax
0x0000000000438da2 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5c9ab6 ; call rax
0x00000000004374b6 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5cb3b2 ; call rax
0x0000000000436f9a : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5cb8be ; call rax
0x00000000004364a0 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5cc3c8 ; call rax
0x00000000004351e8 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5cd670 ; call rax
0x000000000043447e : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5ce3ea ; call rax
0x0000000000433b0d : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5ced5b ; call rax
0x0000000000433b04 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5ced5c ; call rax
0x0000000000433ad8 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5ced80 ; call rax
0x0000000000433ae1 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5cedf7 ; call rax
0x0000000000432845 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5d0023 ; call rax
0x000000000043283c : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5d0024 ; call rax
0x0000000000432810 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5d0048 ; call rax
0x0000000000432819 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5d00bf ; call rax
0x00000000004326d7 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5d0191 ; call rax
0x00000000004326ce : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5d0192 ; call rax
0x00000000004326a2 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5d01b6 ; call rax
0x00000000004326ab : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5d022d ; call rax
0x0000000000432063 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5d0805 ; call rax
0x000000000043205a : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5d0806 ; call rax
0x000000000043202e : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5d082a ; call rax
0x0000000000432037 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5d08a1 ; call rax
0x0000000000431f85 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5d08e3 ; call rax
0x0000000000431f7c : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5d08e4 ; call rax
0x0000000000431f50 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5d0908 ; call rax
0x0000000000431f59 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5d097f ; call rax
0x000000000042d5fc : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5d525c ; call rax
0x000000000042d605 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5d52d3 ; call rax
0x000000000042cfcc : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5d588c ; call rax
0x000000000042cfd5 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5d5903 ; call rax
0x000000000042a06c : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5d886c ; call rax
0x000000000042983e : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5d901a ; call rax
0x0000000000428e05 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5d9a63 ; call rax
0x0000000000428540 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5da318 ; call rax
0x00000000004274cb : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5db39d ; call rax
0x0000000000426fdc : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5db87c ; call rax
0x0000000000426d2c : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5dbb2c ; call rax
0x000000000042624c : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5dc61c ; call rax
0x0000000000425b73 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5dccf5 ; call rax
0x00000000004244ed : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5de37b ; call rax
0x00000000004244e4 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5de37c ; call rax
0x00000000004244b8 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5de3a0 ; call rax
0x00000000004244c1 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5de417 ; call rax
0x0000000000423225 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5df643 ; call rax
0x000000000042321c : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5df644 ; call rax
0x00000000004231f0 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5df668 ; call rax
0x00000000004231f9 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5df6df ; call rax
0x00000000004230b7 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5df7b1 ; call rax
0x00000000004230ae : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5df7b2 ; call rax
0x0000000000423082 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5df7d6 ; call rax
0x000000000042308b : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5df84d ; call rax
0x0000000000422a43 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5dfe25 ; call rax
0x0000000000422a3a : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5dfe26 ; call rax
0x0000000000422a0e : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5dfe4a ; call rax
0x0000000000422a17 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5dfec1 ; call rax
0x0000000000422965 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5dff03 ; call rax
0x000000000042295c : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5dff04 ; call rax
0x0000000000422930 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5dff28 ; call rax
0x0000000000422939 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5dff9f ; call rax
0x000000000041e62e : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5e422a ; call rax
0x000000000041e637 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5e42a1 ; call rax
0x000000000041dffe : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5e485a ; call rax
0x000000000041e007 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5e48d1 ; call rax
0x000000000041ae76 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5e7a62 ; call rax
0x000000000041a310 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5e8548 ; call rax
0x0000000000418a24 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5e9e44 ; call rax
0x0000000000418508 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5ea350 ; call rax
0x0000000000417a0e : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5eae5a ; call rax
0x0000000000416756 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5ec102 ; call rax
0x00000000004159ec : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5ece7c ; call rax
0x000000000041507b : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5ed7ed ; call rax
0x0000000000415072 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5ed7ee ; call rax
0x0000000000415046 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5ed812 ; call rax
0x000000000041504f : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5ed889 ; call rax
0x0000000000413db3 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5eeab5 ; call rax
0x0000000000413daa : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5eeab6 ; call rax
0x0000000000413d7e : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5eeada ; call rax
0x0000000000413d87 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5eeb51 ; call rax
0x0000000000413c45 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5eec23 ; call rax
0x0000000000413c3c : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5eec24 ; call rax
0x0000000000413c10 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5eec48 ; call rax
0x0000000000413c19 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5eecbf ; call rax
0x00000000004135d1 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5ef297 ; call rax
0x00000000004135c8 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5ef298 ; call rax
0x000000000041359c : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5ef2bc ; call rax
0x00000000004135a5 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5ef333 ; call rax
0x00000000004134f3 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5ef375 ; call rax
0x00000000004134ea : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5ef376 ; call rax
0x00000000004134be : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5ef39a ; call rax
0x00000000004134c7 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5ef411 ; call rax
0x000000000040eb16 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5f3d42 ; call rax
0x000000000040eb1f : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5f3db9 ; call rax
0x000000000040e4e6 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5f4372 ; call rax
0x000000000040e4ef : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5f43e9 ; call rax
0x000000000040b10a : ror byte ptr [rax - 0x75], 1 ; add eax, 0x5f77ce ; call rax
0x000000000047aa91 : ror byte ptr [rax - 0x75], 1 ; fmul dword ptr [r8 - 0x77] ; ret 0x8b48
0x0000000000444ff0 : ror byte ptr [rax - 0x75], 1 ; ror byte ptr [r8 - 0x77], 1 ; ret 0x8b48
0x0000000000456c0d : ror byte ptr [rax - 0x75], 4 ; vunpcklps xmm13, xmm2, xmmword ptr [rsi] ; jmp rax
0x00000000005d9f3a : ror byte ptr [rax - 0x75], 5 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; mov dword ptr [rdx], eax ; call rax
0x00000000004b5815 : ror byte ptr [rax - 0x75], 5 ; retf
0x0000000000467b4e : ror byte ptr [rax - 0x75], 5 ; retf 0x5957
0x00000000005179f4 : ror byte ptr [rax - 0x77], 0x15 ; pushfq ; ret 0x4e
0x00000000005ae19d : ror byte ptr [rax - 0x77], 0x15 ; ret
0x00000000005b38ea : ror byte ptr [rax - 0x77], 0xd3 ; call 0x67fb58
0x00000000005730cd : ror byte ptr [rax - 0x77], 0xdf ; call 0x67fb58
0x00000000006be681 : ror byte ptr [rax - 0x77], 0xeb ; call 0x6aa8e6
0x00000000005426b6 : ror byte ptr [rax - 0x77], 1 ; and byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000052a498 : ror byte ptr [rax - 0x77], 1 ; cli ; test rdx, rdx ; jne 0x52a491 ; ret
0x0000000000544b57 : ror byte ptr [rax - 0x77], 1 ; cli ; test rdx, rdx ; jne 0x544b51 ; ret
0x000000000054a480 : ror byte ptr [rax - 0x77], 1 ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004e8a44 : ror byte ptr [rax - 0x77], 1 ; iretd ; mov rsi, rax ; call 0x4554d5
0x00000000004e8a9a : ror byte ptr [rax - 0x77], 1 ; iretd ; mov rsi, rax ; call 0x455543
0x000000000042ea87 : ror byte ptr [rax - 0x77], 1 ; iretd ; mov rsi, rax ; call 0x68ad79
0x00000000006155a9 : ror byte ptr [rax - 0x77], 1 ; iretd ; mov rsi, rax ; call 0x6a1899
0x00000000004a7860 : ror byte ptr [rax - 0x77], 1 ; iretd ; mov rsi, rax ; call 0x6c42c9
0x00000000004385b0 : ror byte ptr [rax - 0x77], 1 ; iretd ; mov rsi, rax ; call 0x6c5029
0x00000000006b22f9 : ror byte ptr [rax - 0x77], 1 ; jo 0x6b22fc ; pop rbx ; ret
0x0000000000527bca : ror byte ptr [rax - 0x77], 1 ; pop rbp ; or bl, ch ; retf 0x1f0f
0x00000000004209ef : ror byte ptr [rax - 0x77], 1 ; push rax ; pop rbp ; ret
0x00000000004cc6e5 : ror byte ptr [rax - 0x77], 1 ; ret
0x00000000006004a6 : ror byte ptr [rax - 0x77], 1 ; ret 0x1ae9
0x0000000000600046 : ror byte ptr [rax - 0x77], 1 ; ret 0x6348
0x00000000004c815e : ror byte ptr [rax - 0x77], 1 ; ret 0x6349
0x00000000004cd0ee : ror byte ptr [rax - 0x77], 1 ; ret 0x8948
0x000000000043c701 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x000000000048dd5a : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x00000000004aab08 : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000004ccbf5 : ror byte ptr [rax - 0x77], 1 ; ret 0xc2e8
0x00000000004c2df6 : ror byte ptr [rax - 0x77], 1 ; ret 0xcf89
0x00000000006a1f07 : ror byte ptr [rax - 0x77], 1 ; ret 0xf089
0x000000000061d4a3 : ror byte ptr [rax - 0x77], 1 ; ret 0xffbe
0x000000000067b522 : ror byte ptr [rax - 0x77], 1 ; retf -0x1e7d
0x00000000006b844a : ror byte ptr [rax - 0x77], 1 ; retf -0x46b8
0x0000000000413234 : ror byte ptr [rax - 0x77], 1 ; retf -0x76b8
0x0000000000528f38 : ror byte ptr [rax - 0x77], 1 ; retf -0x7ab8
0x0000000000525c03 : ror byte ptr [rax - 0x77], cl ; clc ; pop rbx ; ret
0x0000000000525c13 : ror byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000005084c3 : ror byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000005f91c3 : ror byte ptr [rax - 0x77], cl ; ret
0x000000000048022c : ror byte ptr [rax - 0x77], cl ; ret 0x1fe8
0x0000000000481ce1 : ror byte ptr [rax - 0x77], cl ; retf -0x76b8
0x00000000006be3e7 : ror byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000506b1c : ror byte ptr [rax - 0x7b], 1 ; sal byte ptr [rsi + rbp*8 + 0x48], cl ; mov eax, edi ; ret
0x0000000000440b50 : ror byte ptr [rax - 0x7d], 0x7d ; rol byte ptr [rax], 0x74 ; add ch, bl ; ret 0x8b48
0x00000000005c51a3 : ror byte ptr [rax - 0x7d], 0xc2 ; add dword ptr [rax + 0x29], ecx ; ret 0xcbe9
0x000000000068bd6e : ror byte ptr [rax - 0x7d], 0xc2 ; add dword ptr [rax + 0x29], ecx ; retf -0x7415
0x00000000006b2b8b : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000632395 : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000591799 : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x000000000060b328 : ror byte ptr [rax - 0x7d], 0xc4 ; or bl, al ; nop ; ret
0x000000000066996a : ror byte ptr [rax - 0x7d], 0xc4 ; or bl, al ; ret
0x00000000004f7a60 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000068283b : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000000006d4e9b : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000005ae4b3 : ror byte ptr [rax - 0x7d], 0xfa ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000005125eb : ror byte ptr [rax - 0x7d], 1 ; clc ; dec dword ptr [rax - 0x77] ; ret 0xb8
0x000000000066ba7b : ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000565a2c : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000614d18 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4808
0x0000000000556c9d : ror byte ptr [rax - 0x7d], 1 ; ret 0x480b
0x00000000005b96cd : ror byte ptr [rax - 0x7d], 1 ; ret 0x480f
0x00000000004cdf33 : ror byte ptr [rax - 0x7d], 1 ; ret 0x485f
0x00000000004f5e14 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4c01
0x00000000004cee94 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4c5f
0x000000000050d662 : ror byte ptr [rax - 0x7d], 1 ; ret 0xe901
0x00000000005fb8b4 : ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000607e28 : ror byte ptr [rax - 0x7d], cl ; ret 0x310f
0x000000000065042c : ror byte ptr [rax - 0x7d], cl ; ret 0x410f
0x00000000005664ce : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000006be457 : ror byte ptr [rax - 0x7d], cl ; ret 0x4803
0x00000000004ffcec : ror byte ptr [rax - 0x7d], cl ; ret 0x480f
0x0000000000582df2 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000061d46c : ror byte ptr [rax - 0x7d], cl ; ret 0x4847
0x000000000056eb32 : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000583adf : ror byte ptr [rax - 0x7d], cl ; ret 0x4d01
0x000000000067c89d : ror byte ptr [rax - 0x7d], cl ; ret 0xb90f
0x00000000006504a8 : ror byte ptr [rax - 0x7d], cl ; ret 0xbf0f
0x000000000066d368 : ror byte ptr [rax - 0x7f], cl ; ret 0xda
0x00000000006d3739 : ror byte ptr [rax - 9], 1 ; fmul dword ptr [rcx + 0x31] ; ret
0x00000000006a1866 : ror byte ptr [rax - 9], cl ; test byte ptr [rax - 0x77], 0xd0 ; ret
0x00000000006486e9 : ror byte ptr [rax], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000593e7c : ror byte ptr [rax], 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005f4fb9 : ror byte ptr [rax], 0x48 ; mov edi, eax ; call 0x5e12c7
0x00000000004bd696 : ror byte ptr [rax], 0x48 ; mov edi, eax ; call 0x689917
0x00000000004bd4e3 : ror byte ptr [rax], 0x48 ; mov edi, eax ; call 0x689fb7
0x0000000000582496 : ror byte ptr [rax], 0x5b ; ret
0x00000000005cf77a : ror byte ptr [rax], 0x90 ; pop rbp ; ret
0x00000000007cd279 : ror byte ptr [rax], 5 ; retf 8
0x00000000006a1e86 : ror byte ptr [rbp + 0x1440158], 1 ; ret
0x00000000006a0f8d : ror byte ptr [rbp + 0x29], 1 ; fmul dword ptr [rbp - 0x77] ; ret
0x00000000006a8e4d : ror byte ptr [rbp + 0x29], cl ; retf -0x53f
0x000000000068d0d3 : ror byte ptr [rbp + 0x39010344], 1 ; ret
0x000000000066d396 : ror byte ptr [rbp + 0x39], 1 ; fmul dword ptr [rbp + 0x63] ; retf 0x1ba
0x0000000000686382 : ror byte ptr [rbp + 0x63], cl ; dec dword ptr [rbx + rcx*4 + 0x34] ; and al, 0x83 ; ret
0x00000000006773a1 : ror byte ptr [rbp + 0x69], cl ; rol byte ptr [rax], cl ; retf 0x3b9a
0x00000000006a97f2 : ror byte ptr [rbp + 0xf010154], 0x45 ; retf -0x2dcf
0x00000000006650fc : ror byte ptr [rbp + 0xf], cl ; scasd eax, dword ptr [rdi] ; retf 0x14c
0x0000000000607098 : ror byte ptr [rbp + rcx*4 + 0x3c], 1 ; sbb byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000006a430a : ror byte ptr [rbp - 0x2fd675ec], cl ; add eax, 1 ; ret
0x0000000000480523 : ror byte ptr [rbp - 0x77], 1 ; ret 0x8948
0x00000000006a0fd5 : ror byte ptr [rbp - 0x77], 1 ; ret 0xc149
0x0000000000481d60 : ror byte ptr [rbp - 0x77], 1 ; retf -0x76b8
0x00000000004ec41c : ror byte ptr [rbx + 0x408b4810], 1 ; or byte ptr [rcx - 0x77], cl ; retf -0x2877
0x000000000044dc12 : ror byte ptr [rbx + rbx*2], cl ; call rax
0x00000000004d2ead : ror byte ptr [rbx - 0x2fc6d7ad], 0xf ; ret 0xc085
0x00000000005467f1 : ror byte ptr [rbx], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000004d5a2b : ror byte ptr [rbx], 0x89 ; ret 0x8b49
0x00000000005c391d : ror byte ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006b2a5d : ror byte ptr [rcx + 0x12eac1c2], 1 ; xor eax, edx ; ret
0x00000000004a832a : ror byte ptr [rcx + 0x1d201c2], 1 ; ret 0xc889
0x0000000000664a00 : ror byte ptr [rcx + 0x29], 1 ; ret
0x00000000005aee2e : ror byte ptr [rcx + 0x29], 1 ; ret 0xf001
0x00000000006a5551 : ror byte ptr [rcx + 0x38db1050], cl ; ret
0x0000000000539075 : ror byte ptr [rcx + 0x39], 1 ; ret 0x8841
0x0000000000660ca5 : ror byte ptr [rcx + 0x49fc2444], 0x83 ; ret 0x6601
0x00000000006c8d12 : ror byte ptr [rcx + 0x5389104b], cl ; adc al, 0x89 ; ret 0xb60f
0x00000000004f5909 : ror byte ptr [rcx + 0x63], 1 ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000579719 : ror byte ptr [rcx + 0x63], 1 ; ret 0x8348
0x00000000006bcb1d : ror byte ptr [rcx + 0x63], cl ; ret 0x8348
0x000000000060e40a : ror byte ptr [rcx + 0xf5c2444], 0x9e ; ret 0xc839
0x00000000006a1591 : ror byte ptr [rcx + 0xf], 1 ; scasd eax, dword ptr [rdi] ; ret
0x00000000006b3c1b : ror byte ptr [rcx + 0xf], 1 ; scasd eax, dword ptr [rdi] ; ret 0x8348
0x00000000006b2033 : ror byte ptr [rcx + 0xfc985c0], cl ; xchg eax, esp ; ret 0xc148
0x00000000006ce9c2 : ror byte ptr [rcx + rcx*4 + 6], 1 ; ret
0x0000000000549267 : ror byte ptr [rcx + rcx*4 - 0x12], 0xf ; ret 0xc389
0x000000000051167a : ror byte ptr [rcx + rcx*4 - 0x12], 1 ; call rax
0x0000000000530d01 : ror byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000051886e : ror byte ptr [rcx + rcx*4 - 0x20], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006c1ce0 : ror byte ptr [rcx + rcx*4 - 0x32], 0x4c ; mov edi, esi ; call rcx
0x0000000000737b60 : ror byte ptr [rcx - 0x212bfffe], 0xd3 ; jmp rax
0x00000000006692f9 : ror byte ptr [rcx - 0x3b7cb730], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000006b3314 : ror byte ptr [rcx - 0x3f7cdbfc], 1 ; or cl, byte ptr [rax + 0x29] ; retf 0x4489
0x00000000006bbea6 : ror byte ptr [rcx - 0x71f067bb], 1 ; ret
0x00000000006c61e8 : ror byte ptr [rcx - 0x7693dbac], 1 ; ret 0xe283
0x0000000000694a66 : ror byte ptr [rcx - 0x76ba63ab], cl ; rol dword ptr [rcx - 0x7d], cl ; ret 0x4201
0x0000000000690948 : ror byte ptr [rcx - 0x76c3dbac], 1 ; ret 0xe283
0x00000000005b3121 : ror byte ptr [rcx - 0x77], 0xd5 ; call 0x67fb58
0x00000000005b3109 : ror byte ptr [rcx - 0x77], 0xd6 ; call 0x67fb58
0x0000000000620417 : ror byte ptr [rcx - 0x77], 1 ; ret 0x2ce8
0x0000000000620721 : ror byte ptr [rcx - 0x77], 1 ; ret 0x3ce8
0x0000000000620562 : ror byte ptr [rcx - 0x77], 1 ; ret 0x47e8
0x0000000000413557 : ror byte ptr [rcx - 0x77], 1 ; ret 0x4ae8
0x000000000061e1c0 : ror byte ptr [rcx - 0x77], 1 ; ret 0x7be8
0x00000000004c9eb5 : ror byte ptr [rcx - 0x77], 1 ; ret 0x8948
0x00000000004972c1 : ror byte ptr [rcx - 0x77], 1 ; ret 0x8ba
0x00000000004f025f : ror byte ptr [rcx - 0x77], 1 ; ret 0xa4e8
0x000000000062095b : ror byte ptr [rcx - 0x77], 1 ; ret 0xae8
0x0000000000623a2d : ror byte ptr [rcx - 0x77], 1 ; ret 0xdee8
0x0000000000693b0a : ror byte ptr [rcx - 0x77], cl ; in al, 0xf ; xchg eax, esp ; ret 0xc284
0x00000000006c4667 : ror byte ptr [rcx - 0x77], cl ; ret
0x00000000006bd3a4 : ror byte ptr [rcx], 0xd0 ; ret
0x0000000000522b32 : ror byte ptr [rcx], 0xd0 ; xor eax, 1 ; ret
0x00000000006b306d : ror byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000069cad3 : ror byte ptr [rcx], 1 ; clc ; xor eax, esi ; ret
0x000000000069d24b : ror byte ptr [rcx], 1 ; ret 0xf741
0x000000000069ca35 : ror byte ptr [rcx], 1 ; retf -0x73f
0x00000000007dbdd3 : ror byte ptr [rcx], 5 ; ret
0x000000000073a410 : ror byte ptr [rdi + 3], 0 ; xchg ebx, ebx ; jmp rax
0x000000000058f992 : ror byte ptr [rdi + rcx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000749154 : ror byte ptr [rdi - 9], 1 ; call rax
0x00000000006d2ea4 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x00000000006be53f : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000682dd5 : ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000006afff3 : ror byte ptr [rdi], 0x48 ; ret
0x00000000004ce0ca : ror byte ptr [rdi], 0x48 ; ret 0x148d
0x00000000004dbca0 : ror byte ptr [rdi], 0x48 ; ret 0x3944
0x00000000006b3ac3 : ror byte ptr [rdi], 0x48 ; ret 0x448d
0x00000000005cfb01 : ror byte ptr [rdi], 0x48 ; ret 0x453b
0x00000000004e6cc9 : ror byte ptr [rdi], 0x48 ; ret 0x4589
0x0000000000425e37 : ror byte ptr [rdi], 0x48 ; ret 0x488d
0x00000000004d007e : ror byte ptr [rdi], 0x48 ; ret 0x6348
0x00000000004b3252 : ror byte ptr [rdi], 0x48 ; ret 0x634c
0x0000000000517e81 : ror byte ptr [rdi], 0x48 ; ret 0x66c3
0x00000000004e9945 : ror byte ptr [rdi], 0x48 ; ret 0x708d
0x00000000006cc643 : ror byte ptr [rdi], 0x48 ; ret 0x8348
0x00000000004dbcda : ror byte ptr [rdi], 0x48 ; ret 0x8589
0x0000000000554a0b : ror byte ptr [rdi], 0x48 ; ret 0x8941
0x000000000052b936 : ror byte ptr [rdi], 0x48 ; ret 0x8d44
0x00000000005ce0ba : ror byte ptr [rdi], 0x48 ; ret 0x9090
0x00000000004b3261 : ror byte ptr [rdi], 0x48 ; ret 0x9848
0x0000000000427d3f : ror byte ptr [rdi], 0x48 ; ret 0xc083
0x00000000004e662a : ror byte ptr [rdi], 0x48 ; ret 0xc085
0x00000000004e85a0 : ror byte ptr [rdi], 0x48 ; ret 0xc139
0x0000000000614c6e : ror byte ptr [rdi], 0x48 ; ret 0xc189
0x00000000004dbad2 : ror byte ptr [rdi], 0x48 ; ret 0xc289
0x0000000000577b0a : ror byte ptr [rdi], 0x48 ; ret 0xc339
0x000000000055f698 : ror byte ptr [rdi], 0x48 ; ret 0xc389
0x0000000000614d73 : ror byte ptr [rdi], 0x48 ; ret 0xc689
0x00000000004ed314 : ror byte ptr [rdi], 0x48 ; ret 0xc801
0x0000000000649061 : ror byte ptr [rdi], 0x48 ; ret 0xd789
0x0000000000588747 : ror byte ptr [rdi], 0x48 ; ret 0xd839
0x000000000051c877 : ror byte ptr [rdi], 0x48 ; ret 0xee39
0x00000000006b6e1f : ror byte ptr [rdi], 0x49 ; retf
0x00000000005d02d4 : ror byte ptr [rdi], 0x4e ; ret 0x4589
0x000000000067aed5 : ror byte ptr [rdi], 0x4e ; ret 0x9848
0x00000000004c4755 : ror byte ptr [rdi], 0x4e ; ret 0xc085
0x00000000004c46db : ror byte ptr [rdi], 0x4f ; ret 0xc085
0x00000000004ef4cf : ror byte ptr [rdi], 0x84 ; and eax, 0xbeffffff ; retf
0x00000000004c98c4 : ror byte ptr [rdi], 0x84 ; ret
0x0000000000541f0f : ror byte ptr [rdi], 0x84 ; ret 5
0x0000000000484654 : ror byte ptr [rdi], 0x84 ; retf
0x000000000067104f : ror byte ptr [rdi], 0x84 ; retf 0
0x000000000043a9a9 : ror byte ptr [rdi], 0x84 ; retf 1
0x000000000067b131 : ror byte ptr [rdi], 0x84 ; rol byte ptr [rax], 0 ; add byte ptr [rcx], ch ; ret 0xfa83
0x00000000006a6c9b : ror byte ptr [rdi], 0x85 ; outsb dx, byte ptr [rsi] ; add al, 0 ; add dh, al ; ret
0x000000000040814e : ror byte ptr [rdi], 0x85 ; ret
0x000000000050d3e6 : ror byte ptr [rdi], 0x85 ; retf
0x00000000005a26af : ror byte ptr [rdi], 0x85 ; retf 0
0x000000000063eeba : ror byte ptr [rdi], 0x85 ; retf 0x51
0x00000000005265dd : ror byte ptr [rdi], 0x85 ; test eax, 0x83000000 ; ret
0x000000000052b84d : ror byte ptr [rdi], 0x8e ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000059fbc1 : ror byte ptr [rdi], 0x8e ; mov eax, 0x39000003 ; ret 0x8c0f
0x0000000000604cbe : ror byte ptr [rdi], 0x8e ; ret
0x0000000000481b25 : ror byte ptr [rdi], 0x8e ; retf 1
0x0000000000559e03 : ror byte ptr [rdi], 0x94 ; ret
0x00000000006cd313 : ror byte ptr [rdi], 0x94 ; ret 0x5388
0x00000000006a4479 : ror byte ptr [rdi], 0x94 ; ret 0x5584
0x00000000004f72ec : ror byte ptr [rdi], 0x94 ; ret 0xb60f
0x0000000000669967 : ror byte ptr [rdi], 0x94 ; ror byte ptr [rax - 0x7d], 0xc4 ; or bl, al ; ret
0x0000000000657456 : ror byte ptr [rdi], 0x95 ; ret
0x000000000050d38e : ror byte ptr [rdi], 0x95 ; ret 0x1ae9
0x0000000000663738 : ror byte ptr [rdi], 0x95 ; ret 0x7983
0x00000000006052a7 : ror byte ptr [rdi], 0x9e ; ret
0x0000000000633cc4 : ror byte ptr [rdi], 0x9e ; ret 0x2040
0x00000000006585a0 : ror byte ptr [rdi], 0x9e ; ret 0x8440
0x00000000005b8e6e : ror byte ptr [rdi], 0x9e ; ret 0xd184
0x0000000000604d5f : ror byte ptr [rdi], 0x9e ; ret 0xda20
0x000000000054205c : ror byte ptr [rdi], 0x9f ; ret 0x8441
0x00000000005499f8 : ror byte ptr [rdi], 0x9f ; ret 0xd184
0x00000000006670ef : ror byte ptr [rdi], 0x9f ; sar dword ptr [rax], -0x2f ; jne 0x667100 ; ret
0x00000000006cbc9c : ror byte ptr [rdi], 0xb6 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000007bd5e0 : ror byte ptr [rdi], 1 ; int1 ; jmp qword ptr [rdx]
0x00000000005193d9 : ror byte ptr [rdi], 1 ; mov dh, 0xc4 ; add rsp, 0x18 ; ret
0x00000000005fd71e : ror byte ptr [rdi], 1 ; popfq ; ret 0xd184
0x00000000004d2eb2 : ror byte ptr [rdi], 1 ; ret 0xc085
0x00000000006bd212 : ror byte ptr [rdi], 1 ; ret 0xc389
0x000000000043c4fe : ror byte ptr [rdi], 1 ; ret 0xc789
0x000000000065ea81 : ror byte ptr [rdi], 1 ; ret 0xcce9
0x0000000000652f80 : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret 0xbd80
0x0000000000742d70 : ror byte ptr [rdi], 6 ; add byte ptr [rsi], al ; retf -0x16
0x00000000007e6520 : ror byte ptr [rdi], cl ; adc eax, 0xec0010b5 ; syscall
0x0000000000583869 : ror byte ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007d45e8 : ror byte ptr [rdi], cl ; add cl, al ; syscall
0x00000000007d7399 : ror byte ptr [rdi], cl ; add eax, 0xee0009d1 ; syscall
0x0000000000610edf : ror byte ptr [rdi], cl ; mov ss, word ptr [rdx] ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000006799c0 : ror byte ptr [rdi], cl ; ror qword ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x480f
0x00000000005c63ce : ror byte ptr [rdi], cl ; sahf ; ret
0x00000000005fff9c : ror byte ptr [rdi], cl ; test edx, edi ; add eax, dword ptr [rax] ; add byte ptr [rcx], al ; retf -0x2ec7
0x00000000006bf513 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd184
0x000000000066c037 : ror byte ptr [rdx + 0x72], 0 ; jne 0x66c01e ; ret
0x00000000006d692f : ror byte ptr [rdx - 0x3a], 1 ; push 2 ; retf 0x5b9d
0x000000000050290a : ror byte ptr [rdx - 0x7f], 0x7c ; ret 0xa048
0x0000000000746cb4 : ror byte ptr [rdx], 1 ; hlt ; jmp qword ptr [rax]
0x00000000007f88f6 : ror byte ptr [rip + 0x304af00], 1 ; retf
0x0000000000736120 : ror byte ptr [rip + 0x3cb20002], 0xd1 ; jmp rax
0x0000000000721885 : ror byte ptr [rip + 0x48354d7], cl ; ret 0x3b3
0x0000000000739754 : ror byte ptr [rsi - 0x28], 1 ; jmp rax
0x00000000005d35fb : ror byte ptr [rsi], 1 ; add cl, cl ; ret
0x00000000005928a9 : ror byte ptr [rsi], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005d15cd : ror byte ptr [rsi], cl ; add cl, cl ; ret
0x00000000005e180c : ror ch, 0xd ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000070c0d0 : ror cl, 0x58 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x58
0x000000000070f680 : ror cl, 0x59 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x59
0x0000000000672b1c : ror cl, 1 ; add al, 0 ; mov rdi, rbp ; call 0x6bf559
0x0000000000735318 : ror cl, 1 ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; push 0xcf ; inc dword ptr [rax] ; retf 1
0x0000000000746264 : ror cl, 1 ; ljmp ptr [rax + 0x4000072b] ; retf -0xe
0x000000000040e4f8 : ror cl, 1 ; ret
0x00000000007452d0 : ror cl, 6 ; add byte ptr [rax], dl ; push rcx ; out dx, eax ; jmp rax
0x0000000000724e28 : ror dl, 0x66 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; retf 0x66
0x0000000000724e90 : ror dl, 0x66 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, bl ; retf
0x00000000007482dc : ror dl, 0xf5 ; call qword ptr [rax]
0x0000000000735348 : ror dl, 1 ; add dword ptr [rax], eax ; retf -0x3091
0x0000000000745308 : ror dl, 6 ; add byte ptr [rax + 0x53], ah ; out dx, eax ; inc dword ptr [rax] ; retf
0x00000000006646a1 : ror dword ptr [r8 - 0x3f], 1 ; loop 0x6646c0 ; or rax, rdx ; ret
0x00000000006a10de : ror dword ptr [r8 - 0x7d], -0x3c ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000650c53 : ror dword ptr [rax + 0x29], 1 ; ret 0x2948
0x000000000051cc0b : ror dword ptr [rax + 0x29], 1 ; ret 0x8d48
0x00000000006568de : ror dword ptr [rax + 0x29], cl ; ret 0x14c
0x00000000006b978a : ror dword ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000586c7d : ror dword ptr [rax + 0x29], cl ; ret 0x8d48
0x00000000006d0b9a : ror dword ptr [rax + 0x29], cl ; retf -0x77bf
0x0000000000677496 : ror dword ptr [rax + 0x39], 1 ; retf
0x000000000041e00b : ror dword ptr [rax + 0x5e], 1 ; add bh, bh ; ror cl, 1 ; ret
0x000000000052ce1d : ror dword ptr [rax + 0x63], 1 ; ror byte ptr [rax - 0x7d], cl ; ret 0x480f
0x00000000005b37f1 : ror dword ptr [rax + 0x63], 1 ; ror dword ptr [rax + 1], cl ; retf -0x74b8
0x00000000006af44e : ror dword ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 0x63] ; ror byte ptr [rax - 0x7d], cl ; ret 0x480f
0x00000000006b443c : ror dword ptr [rax + 0x63], cl ; retf
0x0000000000650429 : ror dword ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x410f
0x000000000050dd61 : ror dword ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x480f
0x00000000006d0b97 : ror dword ptr [rax + 0x63], cl ; ror dword ptr [rax + 0x29], cl ; retf -0x77bf
0x000000000068f923 : ror dword ptr [rax + 0x74], 9 ; xor eax, eax ; ret
0x00000000006663c4 : ror dword ptr [rax + 0xf], 1 ; retf 0x3948
0x0000000000606f59 : ror dword ptr [rax + 0xf], cl ; fimul dword ptr [r8 + 0x39] ; ret
0x00000000005f9637 : ror dword ptr [rax + 1], 1 ; ret 0xb8
0x00000000005b37f4 : ror dword ptr [rax + 1], cl ; retf -0x74b8
0x00000000007e8ece : ror dword ptr [rax + rax], 1 ; ret
0x000000000062d5b3 : ror dword ptr [rax - 0x39], 1 ; add al, 0x24 ; call qword ptr [rdi]
0x00000000006368d1 : ror dword ptr [rax - 0x39], 4 ; retf 0
0x00000000006646a2 : ror dword ptr [rax - 0x3f], 1 ; loop 0x6646bf ; or rax, rdx ; ret
0x00000000006778c0 : ror dword ptr [rax - 0x42], -0x47 ; jo 0x6778de ; retf
0x00000000005fffaf : ror dword ptr [rax - 0x73], 0x50 ; dec dword ptr [rax - 0x7d] ; ret 0x8901
0x000000000055616f : ror dword ptr [rax - 0x75], 0x1c ; retf
0x0000000000503b5d : ror dword ptr [rax - 0x75], 1 ; or ecx, dword ptr [rax - 0x7d] ; ret 0x4817
0x0000000000510adc : ror dword ptr [rax - 0x75], 1 ; or ecx, dword ptr [rax - 0x7d] ; ret 0x481f
0x0000000000636911 : ror dword ptr [rax - 0x75], 4 ; retf -0x7ab8
0x0000000000467c5e : ror dword ptr [rax - 0x75], 5 ; ret 0x5956
0x000000000062a7c9 : ror dword ptr [rax - 0x77], -0x21 ; mov r14, rax ; call 0x6272a9
0x00000000004b41b4 : ror dword ptr [rax - 0x77], -0x2d ; mov eax, ecx ; pop rbx ; pop rbp ; ret
0x00000000006777d1 : ror dword ptr [rax - 0x77], -0x38 ; pop rbx ; ret
0x0000000000534655 : ror dword ptr [rax - 0x77], 1 ; dec byte ptr [rax - 0x77] ; ret 0xa0bf
0x000000000067f448 : ror dword ptr [rax - 0x77], 1 ; dec byte ptr [rax - 0x77] ; ret 0xabf
0x0000000000505abe : ror dword ptr [rax - 0x77], 1 ; ret
0x00000000004409c7 : ror dword ptr [rax - 0x77], 1 ; ret 0x22e8
0x000000000040cc56 : ror dword ptr [rax - 0x77], 1 ; ret 0x27e8
0x0000000000623f64 : ror dword ptr [rax - 0x77], 1 ; ret 0x2be
0x000000000041c74a : ror dword ptr [rax - 0x77], 1 ; ret 0x2fe8
0x00000000004c5e08 : ror dword ptr [rax - 0x77], 1 ; ret 0x35e8
0x00000000004a48fb : ror dword ptr [rax - 0x77], 1 ; ret 0x3ce8
0x0000000000622453 : ror dword ptr [rax - 0x77], 1 ; ret 0x46e8
0x000000000062021d : ror dword ptr [rax - 0x77], 1 ; ret 0x50e8
0x00000000004d94d2 : ror dword ptr [rax - 0x77], 1 ; ret 0x51e8
0x0000000000620402 : ror dword ptr [rax - 0x77], 1 ; ret 0x55e8
0x00000000006347c8 : ror dword ptr [rax - 0x77], 1 ; ret 0x5fe8
0x00000000004a43d5 : ror dword ptr [rax - 0x77], 1 ; ret 0x62e8
0x0000000000634db3 : ror dword ptr [rax - 0x77], 1 ; ret 0x74e8
0x000000000066a8dc : ror dword ptr [rax - 0x77], 1 ; ret 0x7be8
0x000000000060d41a : ror dword ptr [rax - 0x77], 1 ; ret 0x87e9
0x0000000000415c78 : ror dword ptr [rax - 0x77], 1 ; ret 0x8948
0x0000000000480500 : ror dword ptr [rax - 0x77], 1 ; ret 0x8b49
0x000000000048066a : ror dword ptr [rax - 0x77], 1 ; ret 0x8d48
0x0000000000442db1 : ror dword ptr [rax - 0x77], 1 ; ret 0x96e8
0x00000000005799a2 : ror dword ptr [rax - 0x77], 1 ; ret 0x99e9
0x0000000000498289 : ror dword ptr [rax - 0x77], 1 ; ret 0x9ee8
0x00000000006222e0 : ror dword ptr [rax - 0x77], 1 ; ret 0xa7e8
0x0000000000615356 : ror dword ptr [rax - 0x77], 1 ; ret 0xade8
0x00000000004c5e89 : ror dword ptr [rax - 0x77], 1 ; ret 0xb4e8
0x00000000005f5da0 : ror dword ptr [rax - 0x77], 1 ; ret 0xbe
0x00000000004cd667 : ror dword ptr [rax - 0x77], 1 ; ret 0xd0e8
0x00000000004a4684 : ror dword ptr [rax - 0x77], 1 ; ret 0xd3e8
0x000000000040b07a : ror dword ptr [rax - 0x77], 1 ; ret 0xe283
0x00000000004407ff : ror dword ptr [rax - 0x77], 1 ; ret 0xeae8
0x0000000000634628 : ror dword ptr [rax - 0x77], 1 ; ret 0xffe8
0x00000000004735bd : ror dword ptr [rax - 0x77], 1 ; retf -0x3eb8
0x000000000048c6af : ror dword ptr [rax - 0x77], 1 ; retf -0x49f1
0x00000000004ae107 : ror dword ptr [rax - 0x77], 1 ; retf -0x72b8
0x0000000000482d6d : ror dword ptr [rax - 0x77], 1 ; retf -0x74b4
0x000000000046791c : ror dword ptr [rax - 0x77], 1 ; retf -0x74b8
0x000000000040a486 : ror dword ptr [rax - 0x77], 1 ; retf -0x76b8
0x00000000004a8ceb : ror dword ptr [rax - 0x77], 1 ; retf -0x7ab8
0x00000000004def78 : ror dword ptr [rax - 0x77], 1 ; retf -0x7cb8
0x00000000004cfbbb : ror dword ptr [rax - 0x77], 1 ; retf -0x7eb8
0x00000000004b2e0a : ror dword ptr [rax - 0x77], 1 ; retf 0x148
0x00000000004a8985 : ror dword ptr [rax - 0x77], 1 ; retf 0x23c
0x00000000006b52dd : ror dword ptr [rax - 0x77], cl ; dec byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000054cfa3 : ror dword ptr [rax - 0x77], cl ; ret
0x00000000005f2d49 : ror dword ptr [rax - 0x77], cl ; ror byte ptr [rbp - 0x77], 1 ; retf -0x76b8
0x0000000000542a05 : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x5429f3 ; ret
0x00000000005a5575 : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x5a5563 ; ret
0x00000000005085ec : ror dword ptr [rax - 0x7b], -0x40 ; je 0x5085e6 ; ret
0x000000000055696c : ror dword ptr [rax - 0x7b], -0x40 ; je 0x556966 ; ret
0x000000000062767c : ror dword ptr [rax - 0x7b], -0x40 ; je 0x627676 ; ret
0x0000000000688175 : ror dword ptr [rax - 0x7d], -0x3a ; add dword ptr [rax - 0x77], ecx ; retf -0x1e7d
0x00000000006a1053 : ror dword ptr [rax - 0x7d], -0x3c ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000068282f : ror dword ptr [rax - 0x7d], -0x3c ; ret
0x0000000000579a09 : ror dword ptr [rax - 0x7d], -0x3e ; add dword ptr [rax + 0x29], ecx ; ret 0x39e9
0x00000000005799c4 : ror dword ptr [rax - 0x7d], -0x3e ; add dword ptr [rax + 0x29], ecx ; ret 0x43e9
0x00000000005f8435 : ror dword ptr [rax - 0x7d], -0x3e ; add dword ptr [rax + 0x29], ecx ; ret 0xade9
0x000000000061004e : ror dword ptr [rax - 0x7d], -0x3f ; add dword ptr [rax + 0x29], ecx ; retf -0x46b8
0x0000000000541c90 : ror dword ptr [rax - 0x7d], -0x3f ; add dword ptr [rax + 0x39], ecx ; retf -0x7af1
0x00000000004f64f2 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000633775 : ror dword ptr [rax - 0x7d], 1 ; ret 0x480f
0x000000000050a109 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4c01
0x0000000000569185 : ror dword ptr [rax - 0x7d], 1 ; ret 0xe901
0x000000000064bed4 : ror dword ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000051389e : ror dword ptr [rax - 0x7d], cl ; ret 0x480f
0x0000000000601cfa : ror dword ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000004cf089 : ror dword ptr [rax - 0x7d], cl ; ret 0x4c5f
0x000000000066e76e : ror dword ptr [rax - 0x7f], cl ; ret 0xda
0x000000000052c261 : ror dword ptr [rax], 0 ; pop rbx ; ret
0x00000000005f29ef : ror dword ptr [rax], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000610010 : ror dword ptr [rbp + 0x29], 1 ; ret
0x00000000006bd0c6 : ror dword ptr [rbp + 0x63], 1 ; ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000004e4ac8 : ror dword ptr [rbp - 0x77], -0x20 ; call r11
0x00000000006a0f6a : ror dword ptr [rbp - 0x77], 1 ; retf -0x3eb7
0x00000000004c8247 : ror dword ptr [rbx - 0xab7b], 1 ; dec dword ptr [rax + 0x29] ; ret 0x8948
0x00000000006bd663 : ror dword ptr [rbx - 0xdb43], 1 ; dec dword ptr [rax - 0x77] ; retf 0x148
0x000000000069d12c : ror dword ptr [rbx], 0x31 ; ret 0x8d41
0x00000000005467d0 : ror dword ptr [rbx], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000007dd957 : ror dword ptr [rbx], 5 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, 0 ; retf
0x00000000007f7d6f : ror dword ptr [rbx], 5 ; out dx, al ; syscall
0x0000000000680275 : ror dword ptr [rcx + 0x2b], 1 ; or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8001
0x00000000006bb2d1 : ror dword ptr [rcx + 0x39444441], cl ; retf
0x00000000005390b0 : ror dword ptr [rcx + 0x39], cl ; ret 0xca75
0x000000000056385c : ror dword ptr [rcx + 0x4818244c], -0x77 ; ret 0x294c
0x00000000004b49cb : ror dword ptr [rcx + rcx*4 + 0x55], cl ; mov al, ch ; pop rbp ; retf
0x00000000004351cd : ror dword ptr [rcx + rcx*4 + 0x55], cl ; test al, 0xe8 ; pop rbx ; ret
0x00000000004b1940 : ror dword ptr [rcx + rcx*4 - 0x27], 0x49 ; mov eax, ebx ; call rax
0x00000000004ecbe8 : ror dword ptr [rcx + rcx*4 - 0x36], 1 ; call rax
0x000000000053ede0 : ror dword ptr [rcx - 0x1e3eb706], 1 ; and byte ptr [rax + 9], cl ; retf 0x948
0x000000000069425e : ror dword ptr [rcx - 0x3b7cb738], 0x28 ; ret
0x000000000054cec5 : ror dword ptr [rcx - 0x3b7cb738], 8 ; ret
0x00000000004a0621 : ror dword ptr [rcx - 0x3b7cb738], cl ; pop rbx ; pop rbp ; ret
0x00000000004911eb : ror dword ptr [rcx - 0x77], cl ; retf
0x0000000000425fa7 : ror dword ptr [rcx - 0x77], cl ; retf -0x76b8
0x00000000006c4148 : ror dword ptr [rcx - 0x7d], -0x3d ; add dword ptr [rcx + 0x29], ecx ; ret
0x00000000007d739c : ror dword ptr [rcx], 1 ; add dh, ch ; syscall
0x00000000005e282d : ror dword ptr [rcx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004e3e78 : ror dword ptr [rdi + 0x48000001], 1 ; retf -0x7cb8
0x00000000006c96c7 : ror dword ptr [rdi], -0x49 ; ret 0xb60f
0x0000000000610c3d : ror dword ptr [rdi], -0x62 ; ret 0xc985
0x00000000005b88b5 : ror dword ptr [rdi], -0x64 ; ret 0x3840
0x00000000005fbe7a : ror dword ptr [rdi], -0x65 ; ret 0x440f
0x00000000006a4b16 : ror dword ptr [rdi], -0x65 ; ror byte ptr [rdi], 0x45 ; ret 0xc084
0x0000000000683417 : ror dword ptr [rdi], -0x69 ; ret 0xf66
0x00000000005329ac : ror dword ptr [rdi], -0x71 ; lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x0000000000610004 : ror dword ptr [rdi], -0x74 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf
0x000000000066032c : ror dword ptr [rdi], -0x7a ; retf
0x000000000057f794 : ror dword ptr [rdi], -0x7b ; add dword ptr [r8], eax ; add byte ptr [rcx + 0x63], cl ; retf
0x000000000065d7fe : ror dword ptr [rdi], -0x7c ; retf
0x00000000007e1115 : ror dword ptr [rdi], 0 ; retf
0x0000000000405632 : ror dword ptr [rdi], 0x44 ; retf -0x6ff
0x0000000000578af1 : ror dword ptr [rdi], 1 ; pushfq ; ret 0xc284
0x0000000000559cce : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000004cf2f5 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret 0xd284
0x00000000007e6403 : ror dword ptr [rdi], 6 ; jrcxz 0x7e641e ; add ah, bl ; syscall
0x00000000005f9d8e : ror dword ptr [rdi], cl ; pop qword ptr [rax + rax + 0x1480000] ; ret
0x00000000006d0b8f : ror dword ptr [rdi], cl ; pushfq ; ret 0xb60f
0x00000000005fd5f8 : ror dword ptr [rdi], cl ; pushfq ; ret 0xca20
0x00000000007dbe84 : ror dword ptr [rdx], 5 ; pushfq ; or eax, dword ptr [rax] ; retf
0x00000000007d0cd8 : ror dword ptr [rdx], 5 ; ret
0x00000000007cc4b3 : ror dword ptr [rdx], 6 ; xchg eax, ebx ; sbb al, byte ptr [rax] ; retf 0x50a
0x00000000005a347e : ror dword ptr [rip - 0x157cb800], 1 ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000004d8334 : ror dword ptr [rip - 0x70410000], cl ; ret 0x6e
0x000000000072338a : ror dword ptr [rsi - 0x144921a1], 1 ; ret 0x8e09
0x00000000007cf870 : ror dword ptr [rsi], 5 ; retf
0x00000000007c6a0c : ror dword ptr [rsi], cl ; xchg byte ptr fs:[rdx], bl ; add ah, dl ; syscall
0x00000000005fbe79 : ror dword ptr cs:[rdi], -0x65 ; ret 0x440f
0x00000000006a4b15 : ror dword ptr cs:[rdi], -0x65 ; ror byte ptr [rdi], 0x45 ; ret 0xc084
0x0000000000683416 : ror dword ptr cs:[rdi], -0x69 ; ret 0xf66
0x00000000005e282c : ror dword ptr ss:[rcx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000073466d : ror ebp, -1 ; enter 0x18c, 0 ; ret 0xffcd
0x0000000000757419 : ror edi, 1 ; call rcx
0x0000000000753a81 : ror esi, 1 ; call qword ptr [rdx]
0x000000000040786b : ror esi, 1 ; sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000074dfc1 : ror esp, 1 ; jmp rbx
0x000000000052ce1c : ror qword ptr [r8 + 0x63], 1 ; ror byte ptr [rax - 0x7d], cl ; ret 0x480f
0x0000000000650428 : ror qword ptr [r8 + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x410f
0x000000000050dd60 : ror qword ptr [r8 + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x480f
0x0000000000633774 : ror qword ptr [r8 - 0x7d], 1 ; ret 0x480f
0x000000000051389d : ror qword ptr [r8 - 0x7d], cl ; ret 0x480f
0x0000000000680dfc : ror qword ptr [rax + 0x63], 1 ; ror byte ptr [rax - 0x7d], cl ; ret 0x480f
0x00000000006799c2 : ror qword ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x480f
0x0000000000503b5c : ror qword ptr [rax - 0x75], 1 ; or ecx, dword ptr [rax - 0x7d] ; ret 0x4817
0x0000000000510adb : ror qword ptr [rax - 0x75], 1 ; or ecx, dword ptr [rax - 0x7d] ; ret 0x481f
0x00000000007d7d27 : rsm ; sbb ecx, dword ptr [rbx] ; shl byte ptr [rax + rax], 1 ; ret 0x1b
0x00000000005701c4 : sahf ; add al, 0x11 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000539816 : sahf ; add al, byte ptr [rax] ; add byte ptr [rcx], ch ; ret
0x00000000005a8a72 : sahf ; add byte ptr [r8 - 0x77], r9b ; fucompi st(0) ; ret
0x00000000005dcd5e : sahf ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000043cae1 : sahf ; add byte ptr [rax], al ; leave ; ret
0x00000000004266ce : sahf ; add byte ptr es:[rax - 0x77], cl ; ret
0x00000000007cab68 : sahf ; add dword ptr [rax], eax ; ret 0x19e
0x00000000007f2bc3 : sahf ; add dword ptr [rax], eax ; ret 0x514
0x00000000007ca96d : sahf ; add dword ptr [rax], eax ; retf
0x00000000007cab64 : sahf ; add dword ptr [rip + 0x19ed2], eax ; ret 0x19e
0x0000000000496831 : sahf ; and al, byte ptr [rax] ; leave ; ret
0x00000000004a49ce : sahf ; and dword ptr [rax], eax ; leave ; ret
0x000000000063c24e : sahf ; call 0xffffffffc3ed0b58
0x000000000063c30a : sahf ; call 0xffffffffc3ed0c14
0x000000000063c309 : sahf ; call 0xffffffffc3ed0c15
0x0000000000550c9e : sahf ; cmp bl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000535009 : sahf ; cmp ebp, dword ptr [rdi] ; xor eax, eax ; call 0x681302
0x00000000006acac4 : sahf ; cmp edi, ebp ; dec dword ptr [rax - 0x77] ; ret
0x00000000007217f9 : sahf ; fldcw word ptr [rbx - 0x4fa42152] ; ret 0x9b64
0x00000000004a092e : sahf ; fsub qword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000040529e : sahf ; hlt ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000647cb0 : sahf ; jle 0x647cbf ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x6d4749
0x000000000074b8c8 : sahf ; jmp 0x74b898
0x000000000059649e : sahf ; loop 0x5964bc ; add bl, ch ; mov word ptr [rax - 0x77], cs ; ret
0x00000000004f8726 : sahf ; mov bh, 0xf0 ; dec dword ptr [rax - 0x77] ; ret
0x00000000005949c4 : sahf ; mov cl, 0xe ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006be53a : sahf ; mov esi, 0xc0840034 ; cmove eax, edx ; ret
0x00000000007e9d0b : sahf ; or al, byte ptr [rbx] ; retf -0x62f8
0x00000000005ff28a : sahf ; or byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000617b9a : sahf ; or byte ptr [rax], al ; shr eax, 0x1f ; nop ; leave ; ret
0x00000000007d209b : sahf ; or byte ptr [rsi], al ; retf
0x000000000063a893 : sahf ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007d1ce3 : sahf ; or dword ptr [rax], eax ; retf 0x401
0x0000000000403d9e : sahf ; or dword ptr [rip + 0x5d5b5800], ebp ; ret
0x000000000050a20a : sahf ; out dx, eax ; dec dword ptr [rax - 0x73] ; pop rdx ; dec dword ptr [rax - 0x7d] ; ret
0x00000000005d35ee : sahf ; pop rsi ; add byte ptr [rax - 0x77], cl ; ret 0xbe
0x00000000005c63d0 : sahf ; ret
0x000000000052849e : sahf ; ret 0x1a
0x0000000000633cc6 : sahf ; ret 0x2040
0x00000000005c7c23 : sahf ; ret 0x3941
0x000000000055d288 : sahf ; ret 0x3944
0x00000000005b79fa : sahf ; ret 0x3945
0x000000000051a1bd : sahf ; ret 0x458b
0x000000000059e6b6 : sahf ; ret 0x840
0x00000000005fa8bf : sahf ; ret 0x8440
0x000000000067f979 : sahf ; ret 0x8441
0x0000000000408218 : sahf ; ret 0x8545
0x00000000005c6580 : sahf ; ret 0xc085
0x0000000000652a72 : sahf ; ret 0xc220
0x000000000057df15 : sahf ; ret 0xc284
0x00000000005787f1 : sahf ; ret 0xc839
0x00000000004f9f33 : sahf ; ret 0xc985
0x00000000005c4920 : sahf ; ret 0xd084
0x00000000005b8e70 : sahf ; ret 0xd184
0x000000000065999a : sahf ; ret 0xd384
0x00000000005c6d8f : sahf ; ret 0xd389
0x0000000000604d61 : sahf ; ret 0xda20
0x00000000004fd095 : sahf ; ret 0xdb85
0x00000000004fe916 : sahf ; ret 0xdd39
0x00000000004f5d6e : sahf ; ret 0xdf39
0x00000000005938b0 : sahf ; ret 0xe
0x0000000000538248 : sahf ; ret 0xed85
0x00000000006c7ccc : sahf ; ret 0xf883
0x00000000007382dc : sahf ; ret 0xffd4
0x0000000000641a2e : sahf ; retf
0x0000000000474629 : sahf ; retf 0x47
0x000000000064c69e : sahf ; retf 3
0x00000000005c65da : sahf ; rol dword ptr [rbp - 0x3c61f02e], 0x20 ; retf
0x00000000005fd585 : sahf ; rol dword ptr [rcx - 0x38], 0x39 ; retf 0xf41
0x00000000006892a8 : sahf ; ror byte ptr [rax - 0x7d], 0xc4 ; or bl, al ; nop ; ret
0x0000000000747624 : sahf ; sal esp, 1 ; jmp qword ptr [rax]
0x00000000007387fc : sahf ; salc ; push rax ; mov byte ptr [rdx], 0 ; ret 0xd667
0x00000000006bf5c7 : sahf ; sar dword ptr [rcx], 0x42 ; add al, 0xf ; popfq ; ret 0xd184
0x00000000007f5ec0 : sahf ; sbb eax, 0x1da805 ; ret
0x000000000074afed : sahf ; stc ; jmp qword ptr [rax]
0x0000000000639b9e : sahf ; stosd dword ptr [rdi], eax ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000722938 : sahf ; sub dword ptr [rip + 0x1c98878e], -0x31 ; ret 0x5112
0x000000000068ba2e : sahf ; sub eax, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007cd454 : sahf ; syscall
0x00000000007f4d72 : sahf ; verw bx ; syscall
0x000000000056720e : sahf ; xchg dword ptr [rdx], edx ; add byte ptr [rax + 0x29], cl ; ret
0x00000000006a8a2c : sahf ; xor eax, 0xc4834800 ; or byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000007475b5 : sal ah, 1 ; call rax
0x0000000000747675 : sal ah, cl ; call qword ptr [rax]
0x0000000000747665 : sal ah, cl ; jmp rax
0x00000000006cd99b : sal bh, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000069cad1 : sal bh, 1 ; ror byte ptr [rcx], 1 ; clc ; xor eax, esi ; ret
0x0000000000508651 : sal bh, cl ; int1 ; mov eax, edx ; pop rbx ; ret
0x0000000000721995 : sal bl, 1 ; call 0xffffffffc4509cc6
0x0000000000746b55 : sal bl, cl ; call rax
0x000000000069c24a : sal byte ptr [r14], 0xc6 ; sal dword ptr [r14], -0x3a ; ret 0xc636
0x00000000005874f0 : sal byte ptr [rax + 0x70], 0 ; call rax
0x000000000058871c : sal byte ptr [rax + 0x70], 0 ; mov rdi, r12 ; call rax
0x0000000000594e17 : sal byte ptr [rax + 0x70], 0 ; mov rdi, r15 ; call rax
0x0000000000584065 : sal byte ptr [rax + 0x70], 0 ; mov rdi, rbp ; call rax
0x0000000000584dfd : sal byte ptr [rax + 0x70], 0 ; mov rdi, rbx ; call rax
0x0000000000670cfd : sal byte ptr [rax + rax*2 + 0x48], 0x39 ; ret
0x00000000006a02ca : sal byte ptr [rax + rbp*4 + 0x49], 0x39 ; retf
0x000000000079ec38 : sal byte ptr [rax + rbp*8], 1 ; call qword ptr [rax]
0x000000000053da3d : sal byte ptr [rax + rbx - 0x58], 1 ; jne 0x53da52 ; call rax
0x00000000005fd6e0 : sal byte ptr [rax + rcx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000069281e : sal byte ptr [rax + rdx + 0x48], 1 ; add esp, 8 ; ret
0x000000000066b16d : sal byte ptr [rax + rdx + 0x48], 5 ; loopne 0x66b17e ; add byte ptr [rax], al ; ret
0x000000000067071d : sal byte ptr [rax + rdx - 0x75], 0x80 ; js 0x670739 ; add byte ptr [rax], al ; ret
0x0000000000744dd0 : sal byte ptr [rax - 0x1bd9fffa], 0xee ; jmp rax
0x000000000060e236 : sal byte ptr [rax], 7 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000490d2b : sal byte ptr [rbp + 0x14], 0xbe ; ret 3
0x00000000004ec4a1 : sal byte ptr [rbp + 0x14], 0xbe ; retf
0x00000000006cd1bf : sal byte ptr [rbp + 0x29], 0xf6 ; ret
0x0000000000573fb9 : sal byte ptr [rbp + 0x2c], cl ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000586c29 : sal byte ptr [rbp + 0x2c], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006d63b3 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x00000000006d6113 : sal byte ptr [rbp + 0xa], cl ; ret
0x00000000005afc22 : sal byte ptr [rbp + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005210b1 : sal byte ptr [rbp + 0xc], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000006089f8 : sal byte ptr [rbp + 0xd], 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000005291ae : sal byte ptr [rbp + 0xf], 0x5b ; pop rbp ; pop r12 ; ret
0x00000000005a8ac3 : sal byte ptr [rbp + 1], 0xc3 ; push rax ; call 0x40554f
0x00000000005a8ad4 : sal byte ptr [rbp + 1], 0xc3 ; push rax ; call 0x405565
0x0000000000585ea7 : sal byte ptr [rbp + 2], 0x5b ; ret
0x000000000067442a : sal byte ptr [rbp + 5], 0x48 ; add esp, 8 ; ret
0x00000000006d6088 : sal byte ptr [rbp + 5], cl ; ret
0x00000000005053ce : sal byte ptr [rbp + 7], 0x5b ; ret
0x000000000062c954 : sal byte ptr [rbp + 9], 0x48 ; add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000068d83c : sal byte ptr [rbp + 9], 0x5b ; pop rbp ; pop r12 ; ret
0x00000000006ce0fc : sal byte ptr [rbp + 9], cl ; ret
0x00000000006a82ce : sal byte ptr [rbp + rax + 0x48], 0x3b ; cmp byte ptr [rbp - 0xe], dh ; ret
0x0000000000690873 : sal byte ptr [rbp + rax + 0x48], 1 ; add esp, 8 ; ret
0x000000000060c3f7 : sal byte ptr [rbp + rax + 0x48], 1 ; sub eax, 1 ; ret
0x00000000004f7c6a : sal byte ptr [rbp + rax - 0x3a], cl ; add al, 1 ; ret
0x000000000045679a : sal byte ptr [rbp + rax - 0x7d], 1 ; rol byte ptr [rcx], 0xeb ; in eax, 0x5d ; ret
0x0000000000450390 : sal byte ptr [rbp + rax - 0x7d], 1 ; rol byte ptr [rcx], 0xeb ; out 0x5d, al ; ret
0x0000000000508549 : sal byte ptr [rbp + rbp + 0x48], 0x39 ; ret
0x00000000006a0255 : sal byte ptr [rbp + rbx + 0x4d], 0x39 ; retf
0x00000000006a0025 : sal byte ptr [rbp + rdx + 0x4d], 0x39 ; retf
0x00000000005222b6 : sal byte ptr [rbp - 0x11], 0xc3 ; xor eax, eax ; ret
0x00000000006a07e6 : sal byte ptr [rbp - 0x11], 1 ; ret
0x00000000006c6d51 : sal byte ptr [rbp - 0x14], 1 ; ret
0x000000000053ecbc : sal byte ptr [rbp - 0x17], 1 ; ret
0x00000000006bc52d : sal byte ptr [rbp - 0x18], 1 ; ret
0x0000000000544b5d : sal byte ptr [rbp - 0x18], cl ; ret
0x000000000052a49e : sal byte ptr [rbp - 0x19], cl ; ret
0x0000000000664579 : sal byte ptr [rbp - 0x1c], 0x89 ; clc ; not eax ; pop rbx ; ret
0x000000000066bd19 : sal byte ptr [rbp - 0x1c], 1 ; ret
0x0000000000542a08 : sal byte ptr [rbp - 0x1e], cl ; ret
0x00000000006cb746 : sal byte ptr [rbp - 0x21], 1 ; add rsp, 8 ; ret
0x000000000043abe3 : sal byte ptr [rbp - 0x38], 0x8b ; cld ; nop ; leave ; ret
0x000000000068ee6c : sal byte ptr [rbp - 0x3f], 0x5b ; ret
0x00000000005fae5b : sal byte ptr [rbp - 0x5f], 0x48 ; add esp, 8 ; ret
0x0000000000522241 : sal byte ptr [rbp - 0xc], cl ; ret
0x0000000000612f9e : sal byte ptr [rbp], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000568bff : sal byte ptr [rbx + rbx - 0x75], 0 ; add rsp, 8 ; ret
0x00000000007451ac : sal byte ptr [rbx], 0xef ; inc eax ; ret 6
0x00000000005093cc : sal byte ptr [rcx + 0x31], 0xc0 ; add rsp, 8 ; ret
0x00000000007f3d03 : sal byte ptr [rcx + rax + 0x1b59005], 0 ; retf 0x1b4
0x00000000006a0749 : sal byte ptr [rcx + rbp*4 + 0x49], 0x39 ; retf
0x00000000005083d4 : sal byte ptr [rcx + rbp*8 + 0x5b], 0xc3 ; xor eax, eax ; pop rbx ; ret
0x000000000068fa1c : sal byte ptr [rcx + rcx + 0x48], cl ; mov eax, dword ptr [rax + 0x50] ; ret
0x000000000050abdc : sal byte ptr [rcx + rcx + 0x48], cl ; mov eax, ebx ; pop rbx ; ret
0x000000000062908c : sal byte ptr [rcx + rdi*2 + 0x48], 0x89 ; ret
0x000000000050ac2c : sal byte ptr [rcx + rdx + 0x48], cl ; mov eax, ebx ; pop rbx ; ret
0x0000000000408b07 : sal byte ptr [rcx + rsi*8 + 0x55], 0x48 ; mov ebp, esp ; call rax
0x000000000050ac52 : sal byte ptr [rcx], 0xd2 ; pop rbx ; ret
0x0000000000506b31 : sal byte ptr [rcx], 0xd2 ; ret
0x000000000073ad0c : sal byte ptr [rcx], 0xdd ; call rax
0x000000000069ca93 : sal byte ptr [rcx], 1 ; clc ; ret
0x000000000068675e : sal byte ptr [rcx], 1 ; rol byte ptr [rcx + 0x39], cl ; ret 0xb97d
0x00000000006ca8b9 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xf0 ; ret
0x00000000006a050b : sal byte ptr [rdi + 0x49], 0x39 ; retf
0x000000000065d2f0 : sal byte ptr [rdi + 0xa], 1 ; add rsp, 8 ; ret
0x00000000005f964a : sal byte ptr [rdi + 6], 1 ; add esi, ecx ; mov dword ptr [rdi + 4], esi ; ret
0x0000000000544ca2 : sal byte ptr [rdi + rax + 0x39], cl ; jp 0x544ccd ; setl al ; ret
0x0000000000544bf2 : sal byte ptr [rdi + rax + 0x3b], cl ; jp 0x544c1d ; setl al ; ret
0x000000000050fd26 : sal byte ptr [rdi + rax + 0x5b], 0x5d ; pop r12 ; ret
0x00000000005190c6 : sal byte ptr [rdi + rax + 0x5b], cl ; ret
0x0000000000581896 : sal byte ptr [rdi + rax - 0x75], 0 ; ret
0x00000000006a008b : sal byte ptr [rdi + rbp*4 + 0x49], 0x39 ; retf
0x000000000067261e : sal byte ptr [rdi + rdi*2 + 0x48], 0x39 ; ret
0x00000000006820e6 : sal byte ptr [rdi + rdx + 0x66], 0xf ; retf 0x3976
0x0000000000509dd9 : sal byte ptr [rdi + rsi + 0x48], 0x39 ; ret 0xef75
0x0000000000739954 : sal byte ptr [rdi - 0x28], 0xff ; adc byte ptr [rax], bl ; add eax, dword ptr [rax] ; retf -0x2789
0x0000000000598f6a : sal byte ptr [rdi - 0x76b7ffed], cl ; ret
0x00000000007451bc : sal byte ptr [rdi], 0xef ; push qword ptr [rax] ; ret
0x0000000000506ad1 : sal byte ptr [rdx + 0xc], 1 ; sub eax, edx ; add eax, 1 ; ret
0x00000000006a096d : sal byte ptr [rdx + 4], 1 ; mov rax, rdi ; ret
0x00000000006a4603 : sal byte ptr [rdx + rbp - 0x77], 1 ; retf
0x000000000054e12b : sal byte ptr [rdx + rcx + 0x48], cl ; mov eax, edi ; ret
0x00000000006696bb : sal byte ptr [rdx + rsi + 0x48], 0x39 ; ret
0x0000000000645818 : sal byte ptr [rdx - 0x76b7fffd], 1 ; ret
0x0000000000740c74 : sal byte ptr [rdx], 0xe6 ; call rax
0x00000000007369c8 : sal byte ptr [rip + 0x260002], 0xd2 ; jmp rax
0x000000000063c590 : sal byte ptr [rip - 0x76b7fffc], cl ; ret
0x00000000004c68ff : sal byte ptr [rsi + 0x41], 0xbc ; retf 0x6e
0x0000000000509495 : sal byte ptr [rsi + rbp + 0x48], 1 ; add esp, 8 ; ret
0x000000000053afaf : sal byte ptr [rsi + rbp - 0x7d], cl ; ret 0x8901
0x0000000000506b1f : sal byte ptr [rsi + rbp*8 + 0x48], cl ; mov eax, edi ; ret
0x000000000050700f : sal byte ptr [rsi + rbp*8 + 0x5b], cl ; ret
0x000000000066af27 : sal byte ptr [rsi + rcx - 0x75], 5 ; push rax ; outsb dx, byte ptr [rsi] ; cmp dword ptr [rax], eax ; ret
0x000000000069c24b : sal byte ptr [rsi], 0xc6 ; sal dword ptr [r14], -0x3a ; ret 0xc636
0x000000000052b281 : sal byte ptr [rsp + rbx + 0x48], 0x89 ; fisttp word ptr [rax - 0x77] ; ret 0x8948
0x0000000000525bf1 : sal byte ptr [rsp + rcx + 0x48], 0x89 ; fisttp word ptr [rax - 0x77] ; ret 0x8948
0x00000000006614a4 : sal byte ptr [rsp + rcx - 0xa], cl ; ret 0xc602
0x000000000067fcf6 : sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret 0x1a8
0x0000000000786720 : sal ch, 0xdf ; call qword ptr [rbx]
0x0000000000722a5b : sal ch, cl ; cli ; retf
0x000000000074836d : sal ch, cl ; jmp qword ptr [rax]
0x00000000007afe60 : sal dh, 0xed ; call qword ptr [rax]
0x00000000004d0415 : sal dh, 0xff ; jmp qword ptr [rax]
0x000000000054a31f : sal dh, 1 ; ret
0x0000000000683fcb : sal dl, 1 ; addps xmm0, xmm2 ; ret
0x00000000007427b8 : sal dl, 5 ; add byte ptr [rsi], cl ; fucomi st(1) ; jmp rax
0x000000000069c24e : sal dword ptr [r14], -0x3a ; ret 0xc636
0x0000000000628a8f : sal dword ptr [rax + 5], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005960a8 : sal dword ptr [rax], 1 ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000511031 : sal dword ptr [rbp + 0x19], 1 ; add rsp, 8 ; ret
0x00000000006b3474 : sal dword ptr [rbp + 0x3c], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000676bc4 : sal dword ptr [rbp + 0x3f], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005f9dc9 : sal dword ptr [rbp + 0x6f], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000666fd2 : sal dword ptr [rbp + 1], 1 ; ret
0x0000000000676dc2 : sal dword ptr [rbp + 5], 1 ; add rsp, 8 ; ret
0x00000000005fb0f7 : sal dword ptr [rbp + 7], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000678b2f : sal dword ptr [rbp - 0x12], 0x5b ; pop rbp ; pop r12 ; ret
0x000000000068edf9 : sal dword ptr [rbp - 0x14], -0x7d ; loop 0x68ee47 ; lea eax, dword ptr [rdx + 1] ; ret
0x000000000067e8cb : sal dword ptr [rbp - 0x16], -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000006d08ca : sal dword ptr [rbp - 0x1d], 0x48 ; add esp, 8 ; ret
0x00000000006a6744 : sal dword ptr [rbx + rbp + 0x48], -0x77 ; retf 0x2948
0x000000000060658a : sal dword ptr [rbx + rdi*4 + 0x31], -0x40 ; ret
0x00000000006bcb1b : sal dword ptr [rcx], 1 ; ror byte ptr [rcx + 0x63], cl ; ret 0x8348
0x000000000050864f : sal dword ptr [rcx], 1 ; sal bh, cl ; int1 ; mov eax, edx ; pop rbx ; ret
0x00000000006a52d4 : sal dword ptr [rsi + 0x3a], 1 ; add rsp, 0x18 ; ret
0x00000000006a51b0 : sal dword ptr [rsi + 0xd], 1 ; add rsp, 0x18 ; ret
0x00000000006a4fb7 : sal dword ptr [rsi + 6], 0x66 ; movaps xmm0, xmm2 ; ret
0x000000000069c24f : sal dword ptr [rsi], -0x3a ; ret 0xc636
0x00000000006a1bb9 : sal dword ptr [rsp + rax + 0x7d], 1 ; test ebx, ebp ; xchg eax, esi ; xor eax, eax ; ret
0x00000000006a52d3 : sal dword ptr cs:[rsi + 0x3a], 1 ; add rsp, 0x18 ; ret
0x00000000006a51af : sal dword ptr cs:[rsi + 0xd], 1 ; add rsp, 0x18 ; ret
0x00000000006a4fb6 : sal dword ptr cs:[rsi + 6], 0x66 ; movaps xmm0, xmm2 ; ret
0x000000000044f7d9 : sal eax, cl ; add cl, cl ; ret
0x000000000055c57d : sal ebp, 0x6f ; add byte ptr [rax + 0x29], cl ; retf -0x7eb8
0x00000000006c86e3 : sal ebx, 0x48 ; movsd dword ptr [rdi], dword ptr [rsi] ; mov rax, rbx ; pop rbx ; ret
0x00000000004cbbab : sal ecx, 0x1b ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005d17db : sal ecx, 0xe ; add cl, cl ; ret
0x0000000000653937 : sal edi, -1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004cce1f : sal edi, 1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000683fc7 : sal edx, 1 ; mulps xmm2, xmm0 ; addsd xmm0, xmm2 ; ret
0x000000000074742d : sal esp, -1 ; mov eax, 0xb6000783 ; ret 0xfff4
0x0000000000747625 : sal esp, 1 ; jmp qword ptr [rax]
0x00000000006bcb1a : sal qword ptr [r9], 1 ; ror byte ptr [rcx + 0x63], cl ; ret 0x8348
0x00000000007e687e : salc ; adc al, byte ptr [rax] ; retf 0xe10
0x0000000000573566 : salc ; adc dword ptr [rsi], edx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007cd5bd : salc ; adc eax, dword ptr [rax] ; ret
0x000000000073f0a9 : salc ; add al, 0 ; xor byte ptr [rbp - 0x1d], ch ; jmp rax
0x0000000000769c0c : salc ; add al, byte ptr [rax] ; add byte ptr [rsp + rbx], al ; retf 0x7c
0x00000000007f9160 : salc ; add al, byte ptr [rax] ; ret 0x502
0x0000000000695285 : salc ; add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xfffe
0x0000000000515295 : salc ; add al, r13b ; xchg eax, ebp ; ret 0x16
0x00000000005f915e : salc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000684d1e : salc ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000004f2606 : salc ; add dl, byte ptr [rcx] ; call rax
0x0000000000768d55 : salc ; add dword ptr [rax], eax ; neg byte ptr [rsi - 0x28] ; jmp qword ptr [rbx]
0x00000000007bfd81 : salc ; add dword ptr [rax], eax ; retf 0x2501
0x00000000007d1b25 : salc ; add eax, dword ptr [rax] ; ret 0xe02
0x00000000007f8cc1 : salc ; add ecx, edx ; add eax, dword ptr [rax] ; ret 0x502
0x00000000007fa4f4 : salc ; add edi, eax ; js 0x7fa503 ; ret 0xd37b
0x0000000000517dc1 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005b310c : salc ; call 0x67fb55
0x00000000007387ce : salc ; call qword ptr [rax]
0x0000000000767442 : salc ; call qword ptr [rsi]
0x00000000004427a3 : salc ; call rax
0x0000000000766b2a : salc ; call rsi
0x0000000000766b72 : salc ; call rsp
0x0000000000738b36 : salc ; dec dword ptr [rax + 0x40002d6] ; ret
0x0000000000738d5e : salc ; dec dword ptr [rax - 0x20] ; add al, byte ptr [rax] ; retf -0x2915
0x00000000006a76ed : salc ; dec dword ptr [rax - 0x77] ; ret
0x000000000067645b : salc ; fdivr st(7) ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000738c14 : salc ; fst st(6) ; jmp rax
0x00000000007476c5 : salc ; hlt ; jmp qword ptr [rax]
0x0000000000738c1e : salc ; inc dword ptr [rax] ; fild dword ptr [rdx] ; add byte ptr [rsi + rbx*8 - 0x2a], bl ; jmp qword ptr [rax]
0x0000000000738e5e : salc ; inc dword ptr [rax] ; in eax, 2 ; add ah, dl ; cli ; salc ; jmp qword ptr [rax]
0x00000000007386f6 : salc ; inc dword ptr [rax] ; ret 2
0x0000000000738c0e : salc ; inc eax ; fiadd dword ptr [rdx] ; add dh, dl ; fst st(6) ; jmp rax
0x0000000000738cfe : salc ; inc eax ; fiadd word ptr [rdx] ; add byte ptr [rsi - 0x19], dl ; salc ; jmp rax
0x0000000000738e4e : salc ; inc eax ; in al, 2 ; add byte ptr [rsi], bl ; cli ; salc ; jmp rax
0x000000000073882e : salc ; inc eax ; mov dword ptr [rdx], 0xd6689a00 ; jmp rax
0x0000000000738906 : salc ; inc eax ; retf
0x00000000004f3c06 : salc ; insd dword ptr [rdi], dx ; add al, ch ; ret 0x19be
0x0000000000589c20 : salc ; jbe 0x589c38 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000053e600 : salc ; jle 0x53e5e9 ; mov eax, esi ; add rsp, 8 ; ret
0x00000000007388f6 : salc ; jmp qword ptr [rax - 0x35]
0x00000000007386ce : salc ; jmp qword ptr [rax]
0x0000000000767102 : salc ; jmp qword ptr [rbx]
0x00000000007672fa : salc ; jmp qword ptr [rsi]
0x00000000007386ee : salc ; jmp rax
0x000000000059bd49 : salc ; jo 0x59bd52 ; mov rdi, rbx ; call rax
0x000000000059bf10 : salc ; jo 0x59bf19 ; mov rdi, rbx ; call rax
0x00000000005a4056 : salc ; jo 0x5a4060 ; xor eax, eax ; call 0x680acb
0x00000000005a4069 : salc ; jo 0x5a4073 ; xor eax, eax ; call 0x680b2f
0x00000000005a4816 : salc ; jo 0x5a4820 ; xor eax, eax ; call 0x680acb
0x00000000005a4829 : salc ; jo 0x5a4833 ; xor eax, eax ; call 0x680b2f
0x00000000005a484a : salc ; jo 0x5a4852 ; call 0x680ac9
0x00000000005a485b : salc ; jo 0x5a4865 ; xor eax, eax ; call 0x680b2f
0x00000000007388e6 : salc ; lcall ptr [rax] ; retf
0x00000000006c2a7d : salc ; lea rdx, qword ptr [rbp - 0x40] ; mov rdi, r15 ; call rax
0x0000000000738716 : salc ; ljmp ptr [rax - 0x7dfffd3e] ; xor esi, edx ; call rax
0x00000000005a4e8c : salc ; mov bh, 0xd ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000679466 : salc ; mov dl, 5 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000065e307 : salc ; mov dword ptr [rdi], r8d ; ret
0x0000000000645620 : salc ; mov esp, 0x89480003 ; ret
0x0000000000528a66 : salc ; mov esp, 0x8948001a ; ret
0x00000000006d4319 : salc ; mov qword ptr [rdi + rsi*8], rdx ; add rsp, 8 ; ret
0x0000000000505e38 : salc ; mov rbx, rax ; call qword ptr [rip + 0x4fcaa6]
0x000000000065bafd : salc ; mov rdi, rax ; call 0x407d36
0x00000000005ea5da : salc ; mov rdi, rax ; call 0x5e70c2
0x0000000000455074 : salc ; mov rdi, rax ; call 0x6c1376
0x000000000043f49f : salc ; mov rdx, rax ; call 0x43b6f8
0x00000000005d79fb : salc ; mov rdx, rax ; mov rdi, rcx ; call 0x403c79
0x0000000000423086 : salc ; neg dword ptr [rbp] ; call rax
0x0000000000706996 : salc ; neg eax ; fstpnce st(2), st(0) ; fcmovnu st(0), st(4) ; fstp st(6) ; jmp qword ptr [rdx]
0x00000000005c5e16 : salc ; or al, 0 ; call qword ptr [rip + 0x43cac0]
0x0000000000573a66 : salc ; or al, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004d8422 : salc ; or eax, 0x8fbf0000 ; ret 0x6e
0x000000000072248c : salc ; out dx, al ; retf 0x6fc4
0x0000000000722483 : salc ; pop rbp ; ret
0x00000000007387b6 : salc ; push qword ptr [rax + 0x1c0002c5] ; pop rdx ; salc ; call rax
0x0000000000738c7e : salc ; push qword ptr [rax + 0x280002dc] ; jrcxz 0x738c66 ; call rax
0x0000000000738786 : salc ; push qword ptr [rax + 0x320002c4] ; salc ; jmp rax
0x0000000000738c46 : salc ; push qword ptr [rax + 0x6a0002db] ; loopne 0x738c2e ; call rax
0x0000000000738dde : salc ; push qword ptr [rax - 0x1e] ; add al, byte ptr [rax] ; retf -0x290f
0x0000000000738a6e : salc ; push qword ptr [rax - 0x47fffd2e] ; lodsb al, byte ptr [rsi] ; salc ; call rax
0x00000000007386e6 : salc ; push qword ptr [rax - 0xbfffd3f] ; salc ; jmp rax
0x00000000007386fe : salc ; push qword ptr [rax] ; ret 2
0x0000000000738df6 : salc ; push rax ; loop 0x738e06 ; add byte ptr [rsi - 0xd], bh ; salc ; jmp qword ptr [rax]
0x0000000000738dbe : salc ; push rax ; loope 0x738dce ; add byte ptr [rsi - 0x10], ch ; salc ; call qword ptr [rax]
0x00000000007387fe : salc ; push rax ; mov byte ptr [rdx], 0 ; ret 0xd667
0x0000000000738726 : salc ; push rax ; ret 2
0x000000000073890e : salc ; push rax ; retf
0x00000000007386c6 : salc ; push rax ; rol byte ptr [rdx], 0 ; and al, 0x1b ; salc ; jmp qword ptr [rax]
0x00000000005d4dc6 : salc ; ret
0x0000000000556606 : salc ; ret 0x4a
0x0000000000737a14 : salc ; ret 0xffd3
0x0000000000792a70 : salc ; ret 0xffe3
0x00000000005b4720 : salc ; retf
0x00000000006a4894 : salc ; sar esi, 1 ; jne 0x6a4885 ; ret
0x00000000006ac171 : salc ; setb al ; ret
0x0000000000522b2f : salc ; setne al ; or eax, edx ; xor eax, 1 ; ret
0x00000000006c703f : salc ; shr ecx, 3 ; mov ecx, ecx ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000074b4a5 : salc ; stc ; call qword ptr [rax]
0x0000000000407044 : salc ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007f7091 : salc ; sub dword ptr [rax], eax ; ficomp dword ptr [rdi] ; xchg dword ptr [rcx], eax ; ret
0x000000000061cdd6 : salc ; sub eax, dword ptr [rdi] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000007dc578 : salc ; syscall
0x0000000000506b6c : salc ; test rdx, rdx ; je 0x506b66 ; ret
0x000000000050700c : salc ; test rdx, rdx ; je 0x507007 ; pop rbx ; ret
0x0000000000554dac : salc ; test rdx, rdx ; je 0x554da6 ; ret
0x000000000055528c : salc ; test rdx, rdx ; je 0x555287 ; pop rbx ; ret
0x0000000000625adc : salc ; test rdx, rdx ; je 0x625ad6 ; ret
0x0000000000625dcc : salc ; test rdx, rdx ; je 0x625dc7 ; pop rbx ; ret
0x0000000000528bd9 : salc ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006cb3f6 : salc ; xor edi, edi ; dec dword ptr [rax - 0x77] ; ret 0xc7
0x0000000000517683 : sar ah, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x00000000006b2886 : sar ah, cl ; dec dword ptr [rax - 0x77] ; ret
0x00000000004d165b : sar al, 0xff ; call rax
0x000000000063542d : sar al, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x000000000074a265 : sar al, cl ; call rax
0x000000000074a27d : sar al, cl ; jmp qword ptr [rax]
0x00000000007830a0 : sar bh, 0xde ; jmp qword ptr [rax]
0x00000000004a3afe : sar bh, 0xff ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000045b52e : sar bh, 0xff ; leave ; ret
0x0000000000735b86 : sar bh, 1 ; add dl, dh ; add dword ptr [rax], eax ; jne 0x735b68 ; jmp qword ptr [rax]
0x0000000000735dce : sar bh, 1 ; and ch, bh ; add dword ptr [rax], eax ; pop rax ; ret
0x000000000074a4ac : sar bh, 1 ; clc ; jmp rax
0x00000000004c1eee : sar bh, 1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000645f76 : sar bh, 1 ; dec dword ptr [rax - 0x7d] ; cli ; and cl, byte ptr [rax - 0x77] ; ret
0x000000000043e267 : sar bh, 1 ; dec ecx ; ret
0x0000000000735966 : sar bh, 1 ; mov al, 0xe7 ; add dword ptr [rax], eax ; add ax, dx ; call rax
0x00000000007359a6 : sar bh, 1 ; mov al, 0xe8 ; add dword ptr [rax], eax ; nop ; add edx, eax ; call rax
0x0000000000735e26 : sar bh, 1 ; mov al, 0xfe ; add dword ptr [rax], eax ; hlt ; retf
0x0000000000735b76 : sar bh, 1 ; mov eax, 0xd20001f1 ; je 0x735b58 ; jmp rax
0x0000000000735e16 : sar bh, 1 ; push -0x55fffe02 ; retf -0x30
0x0000000000758aba : sar bh, 1 ; ret
0x000000000075a51a : sar bh, 1 ; ret 1
0x0000000000735f96 : sar bh, 1 ; rol byte ptr [rip - 0xcaffffe], 0xd0 ; jmp rax
0x0000000000735a26 : sar bh, 1 ; sub bl, ch ; add dword ptr [rax], eax ; retf -0x2fe7
0x00000000007369d6 : sar bh, cl ; add byte ptr [rsi], dh ; add al, byte ptr [rax] ; xchg eax, esi ; add dl, dl ; jmp qword ptr [rax]
0x0000000000645dc2 : sar bh, cl ; dec dword ptr [rax - 0x77] ; ret
0x00000000004d2c18 : sar bh, cl ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000047bc35 : sar bh, cl ; dec ecx ; ret
0x0000000000736dc6 : sar bh, cl ; enter 0x247, 0 ; retf -0x2dc7
0x0000000000737216 : sar bh, cl ; fcomp dword ptr [rdx + rax] ; ret 0xffd2
0x0000000000736f76 : sar bh, cl ; loopne 0x736fd2 ; add al, byte ptr [rax] ; mov byte ptr [rcx - 0x2e], ch ; call qword ptr [rax]
0x0000000000736b4e : sar bh, cl ; mov al, 0x3c ; add al, byte ptr [rax] ; adc al, 0xd2 ; call rax
0x000000000073735e : sar bh, cl ; mov al, 0x62 ; add al, byte ptr [rax] ; loope 0x737342 ; jmp rax
0x000000000075e5e2 : sar bh, cl ; retf
0x00000000007369c6 : sar bh, cl ; sal byte ptr [rip + 0x260002], 0xd2 ; jmp rax
0x0000000000736b16 : sar bh, cl ; sar byte ptr [rbx], 2 ; add byte ptr [rax], dh ; adc dl, dl ; jmp rax
0x000000000073745e : sar bh, cl ; shl byte ptr [rdi + 2], 0 ; pop rsi ; call rdx
0x0000000000736fce : sar bh, cl ; test al, 0x51 ; add al, byte ptr [rax] ; js 0x736fb2 ; call rax
0x0000000000737006 : sar bh, cl ; test al, 0x52 ; add al, byte ptr [rax] ; push rax ; jge 0x736fea ; call rax
0x00000000004d4752 : sar bl, 0xff ; call qword ptr [rax]
0x0000000000489f61 : sar bl, 0xff ; dec dword ptr [rax + 1] ; ret 0x8b48
0x000000000061da9c : sar bl, 0xff ; jmp rax
0x0000000000412214 : sar byte ptr [r11 + 1], 1 ; call 0x6bed09
0x00000000004ac4ff : sar byte ptr [r14 + 0x14], 0xbe ; syscall
0x000000000047c6eb : sar byte ptr [r9], 1 ; ret 0x1b7c
0x000000000065ced3 : sar byte ptr [rax + 0x14], 0x48 ; add esp, 8 ; ret
0x000000000059c09f : sar byte ptr [rax + 0x16], 0x48 ; add esp, 8 ; ret
0x000000000063d56f : sar byte ptr [rax + 0x18], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000006cd9e9 : sar byte ptr [rax + 0x24], 0x89 ; ret 0xe083
0x00000000006a11d7 : sar byte ptr [rax + 0x26], 0x48 ; add esp, 8 ; ret
0x000000000052325f : sar byte ptr [rax + 0x45], 0xe8 ; retf
0x000000000074aa88 : sar byte ptr [rax + rcx], 1 ; stc ; call qword ptr [rax]
0x0000000000747f18 : sar byte ptr [rax - 0x5f9ffff9], 0xf5 ; call qword ptr [rax]
0x000000000062c1e3 : sar byte ptr [rax], 0x3d ; add byte ptr [rax], al ; setne al ; ret
0x00000000006cba91 : sar byte ptr [rax], 0xca ; je 0x6cbaa5 ; ret
0x00000000006884be : sar byte ptr [rax], 1 ; ret
0x00000000005230ae : sar byte ptr [rbp + 1], 0xe8 ; cdq ; retf 0x15
0x0000000000577a7a : sar byte ptr [rbp + 1], 0xe8 ; int 0x80
0x00000000005c2fec : sar byte ptr [rbp + 1], 0xe8 ; pop rbx ; retf
0x0000000000567c84 : sar byte ptr [rbp + 1], 0xe8 ; ret
0x000000000068a585 : sar byte ptr [rbp + 1], 0xe8 ; ret 0xff55
0x000000000057187c : sar byte ptr [rbp + 1], 0xe8 ; retf
0x000000000054447d : sar byte ptr [rbp + 1], 0xe8 ; retf 0x13b6
0x000000000058227d : sar byte ptr [rbp + 1], 0xe8 ; retf 0xfd8
0x00000000007350b0 : sar byte ptr [rbp - 0x323ffff], 0xce ; jmp rax
0x000000000052edf7 : sar byte ptr [rbx + 0x6f], 0 ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000054067d : sar byte ptr [rbx + 1], 0xe8 ; retf 0x13f4
0x0000000000412215 : sar byte ptr [rbx + 1], 1 ; call 0x6bed08
0x000000000062a561 : sar byte ptr [rbx - 0x76b3ff8f], 0xe7 ; call rax
0x0000000000625f18 : sar byte ptr [rbx - 0x76b7ff8f], 0xdf ; call rax
0x00000000005f5c06 : sar byte ptr [rbx], 0x89 ; ret 0x8b48
0x0000000000746544 : sar byte ptr [rbx], 1 ; call rax
0x0000000000736b18 : sar byte ptr [rbx], 2 ; add byte ptr [rax], dh ; adc dl, dl ; jmp rax
0x0000000000559924 : sar byte ptr [rcx + 0x12], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004ad6a0 : sar byte ptr [rcx + 0x14], 0xbe ; retf
0x0000000000407e98 : sar byte ptr [rcx + rcx + 0x49], 0x63 ; retf
0x00000000007448fc : sar byte ptr [rcx - 0x12], cl ; call rax
0x000000000073eb80 : sar byte ptr [rcx - 0x3b1ffffc], 0xe2 ; call qword ptr [rax]
0x0000000000741d58 : sar byte ptr [rcx - 0x48dffffb], 0xe7 ; jmp rax
0x00000000007451dc : sar byte ptr [rcx], 1 ; out dx, eax ; dec eax ; ret
0x0000000000687240 : sar byte ptr [rcx], 1 ; ret
0x000000000047c6ec : sar byte ptr [rcx], 1 ; ret 0x1b7c
0x00000000004f6008 : sar byte ptr [rcx], cl ; ret
0x000000000050a0d8 : sar byte ptr [rcx], cl ; ret 0x840f
0x00000000005ecc76 : sar byte ptr [rdi + 0x49], 0x89 ; ret
0x0000000000746afc : sar byte ptr [rdi + 0x5560fff3], 7 ; add byte ptr [rax], dl ; ret
0x0000000000744360 : sar byte ptr [rdi + 6], 0 ; fsubp st(5) ; jmp rax
0x0000000000546497 : sar byte ptr [rdi + rbp*2 + 0x77894800], 8 ; ret
0x0000000000745224 : sar byte ptr [rdi + rbp*8], 1 ; jmp qword ptr [rax]
0x000000000059eba7 : sar byte ptr [rdi - 0x4a], 0x5b ; ret
0x0000000000747b64 : sar byte ptr [rdi], 0xf5 ; call rax
0x0000000000605872 : sar byte ptr [rdi], 1 ; add al, ch ; mov eax, 0x890007bc ; ret
0x000000000052ea00 : sar byte ptr [rdx + 0x6f2680], 1 ; mov rdi, r14 ; call rax
0x000000000052e9ae : sar byte ptr [rdx + 0x6f26a0], 1 ; mov rdi, r14 ; call rax
0x000000000053eba6 : sar byte ptr [rdx + 0x6fa4c0], 1 ; mov rdi, r14 ; call rax
0x00000000005549e4 : sar byte ptr [rdx + 0x6fd290], 0x89 ; ret
0x000000000058871a : sar byte ptr [rdx + 0x7070c0], 0x4c ; mov edi, esp ; call rax
0x00000000006c297e : sar byte ptr [rdx + 0x730f20], 0x4c ; mov edi, edi ; call rax
0x00000000006c1bbf : sar byte ptr [rdx + 0x730f20], 0x4c ; mov edi, esi ; call rcx
0x00000000006c1a5f : sar byte ptr [rdx + 0x730f50], 0x4c ; mov edi, ebp ; call rax
0x00000000006c280f : sar byte ptr [rdx + 0x730fe0], 0x4c ; mov edi, ebp ; call rax
0x00000000006c374d : sar byte ptr [rdx + 0x730fe0], 0x4c ; mov edi, edi ; call rax
0x00000000006c307f : sar byte ptr [rdx + 0x731040], 0x4c ; mov edi, edi ; call rax
0x0000000000662ed4 : sar byte ptr [rdx + 0x80], 0xf ; retf -0x7d17
0x000000000051ca9c : sar byte ptr [rdx + 1], 0xf ; ret 0x3941
0x000000000051b982 : sar byte ptr [rdx + 1], 0xf ; ret 0xc539
0x00000000006c5a53 : sar byte ptr [rdx + 3], 0x75 ; retf
0x000000000074aa20 : sar byte ptr [rdx + 8], 0 ; loopne 0x74aa88 ; stc ; jmp rax
0x000000000073cfd4 : sar byte ptr [rdx - 0x20], 1 ; call rax
0x0000000000741d90 : sar byte ptr [rdx - 0x44effffb], 0xe7 ; jmp rax
0x00000000006c6814 : sar byte ptr [rdx], 0x17 ; je 0x6c6825 ; ret
0x000000000067fa2a : sar byte ptr [rdx], 0xf ; ret 0x6348
0x00000000006a4c88 : sar byte ptr [rdx], 0xf ; ret 0xf183
0x000000000067f972 : sar byte ptr [rip + 0xc7], 0xf ; sahf ; ret 0x8441
0x00000000004ac500 : sar byte ptr [rsi + 0x14], 0xbe ; syscall
0x00000000005186e8 : sar byte ptr [rsi + 0x3f], 0x39 ; ret 0x3b7c
0x00000000005af8f4 : sar byte ptr [rsi + 0x43], 0x48 ; add esp, 8 ; ret
0x00000000005af859 : sar byte ptr [rsi + 0x46], 0x48 ; add esp, 8 ; ret
0x000000000053dece : sar byte ptr [rsi + 0x6fa4a0], 0xf ; ret 0x6b9
0x000000000065be19 : sar byte ptr [rsi + 0x71fb40], 0xf ; ret 0x15b9
0x0000000000689550 : sar byte ptr [rsi + 0xd], 0x39 ; sar dword ptr [rbp + 0x14], 1 ; xor eax, eax ; ret
0x0000000000518289 : sar byte ptr [rsi + 4], cl ; ret
0x00000000004a74b0 : sar byte ptr [rsi + 5], 0x83 ; clc ; or al, 0x7e ; adc al, 0xbe ; retf
0x00000000006bb966 : sar byte ptr [rsi - 0x29], 0x89 ; ret
0x000000000055c14d : sar byte ptr [rsi - 0x56], 0x83 ; ret 0x2901
0x000000000064daea : sar byte ptr [rsi - 0x76b70016], cl ; ret
0x0000000000738660 : sar byte ptr [rsi - 0xeaffffe], 0xd5 ; jmp rax
0x00000000007a7430 : sar ch, 0xeb ; jmp qword ptr [rcx]
0x000000000048e11b : sar ch, 0xff ; call qword ptr [rax]
0x000000000048ef87 : sar ch, 0xff ; dec dword ptr [rax + 0x63] ; ret
0x0000000000427cad : sar ch, 0xff ; dec dword ptr [rcx - 0x77] ; ret 0x2de8
0x00000000004281a3 : sar ch, 0xff ; dec dword ptr [rcx - 0x77] ; ret 0x65e8
0x00000000004276e4 : sar ch, 0xff ; dec dword ptr [rcx - 0x77] ; ret 0x88e8
0x0000000000428177 : sar ch, 0xff ; dec dword ptr [rcx - 0x77] ; ret 0x8fe8
0x00000000004278c4 : sar ch, 0xff ; dec dword ptr [rcx - 0x77] ; ret 0xcee8
0x0000000000427aa7 : sar ch, 0xff ; dec dword ptr [rcx - 0x77] ; ret 0xfe8
0x000000000073366c : sar ch, 1 ; stc ; call rax
0x00000000007336a0 : sar ch, 1 ; stc ; jmp qword ptr [rax - 0x2f000603]
0x0000000000643063 : sar cl, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x000000000074b455 : sar cl, cl ; call qword ptr [rax]
0x000000000074b52c : sar dh, 0xf9 ; call rax
0x00000000004a864c : sar dh, 0xff ; dec dword ptr [rax + 0x29] ; ret 0x8948
0x00000000004a79ea : sar dh, 0xff ; dec dword ptr [rax + 0x63] ; ret 0x2b48
0x0000000000514c45 : sar dh, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x0000000000425bbe : sar dh, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000004cbee4 : sar dh, 0xff ; dec dword ptr [rcx - 0x77] ; ret 0x34e8
0x00000000004cbeb1 : sar dh, 0xff ; dec dword ptr [rcx - 0x77] ; ret 0x41e8
0x00000000004cb78e : sar dh, 0xff ; dec dword ptr [rcx - 0x77] ; ret 0x68e8
0x0000000000486c79 : sar dh, 0xff ; dec dword ptr [rcx - 0x77] ; ret 0x73e8
0x00000000005d2b5b : sar dh, 0xff ; dec dword ptr [rcx - 0x77] ; ret 0x8ba
0x00000000004cbc65 : sar dh, 0xff ; dec dword ptr [rcx - 0x77] ; ret 0xb1e8
0x0000000000486a71 : sar dh, 0xff ; dec dword ptr [rcx - 0x77] ; ret 0xc1e8
0x00000000005d2ea6 : sar dh, 0xff ; dec dword ptr [rcx - 0x77] ; retf 0x8b9
0x00000000004b06aa : sar dh, 0xff ; jmp rcx
0x000000000073f828 : sar dl, 1 ; add al, 0 ; push rax ; or ah, ah ; call qword ptr [rax]
0x0000000000721a58 : sar dl, cl ; loope 0x721a4d ; xchg eax, ebx ; retf
0x000000000067ac29 : sar dword ptr [rax - 0x76b7fffe], cl ; ret 0xc148
0x0000000000666fd0 : sar dword ptr [rax], -0x2f ; jne 0x666fdb ; ret
0x0000000000667000 : sar dword ptr [rax], -0x2f ; jne 0x66700b ; ret
0x0000000000667030 : sar dword ptr [rax], -0x2f ; jne 0x66703b ; ret
0x0000000000667062 : sar dword ptr [rax], -0x2f ; jne 0x66706d ; ret
0x0000000000667092 : sar dword ptr [rax], -0x2f ; jne 0x66709d ; ret
0x00000000006670c2 : sar dword ptr [rax], -0x2f ; jne 0x6670cd ; ret
0x00000000006670f2 : sar dword ptr [rax], -0x2f ; jne 0x6670fd ; ret
0x0000000000676f60 : sar dword ptr [rax], -0x2f ; jne 0x676f6b ; ret
0x0000000000676fd0 : sar dword ptr [rax], -0x2f ; jne 0x676fdb ; ret
0x0000000000677042 : sar dword ptr [rax], -0x2f ; jne 0x67704d ; ret
0x00000000006770b2 : sar dword ptr [rax], -0x2f ; jne 0x6770bd ; ret
0x00000000007f6c3c : sar dword ptr [rax], 5 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp dword ptr [rax], eax ; retf
0x0000000000689554 : sar dword ptr [rbp + 0x14], 1 ; xor eax, eax ; ret
0x0000000000630d43 : sar dword ptr [rbp + 0x3d], 1 ; add byte ptr [rax - 0x73], cl ; pushfq ; ret
0x0000000000677594 : sar dword ptr [rcx + rbx - 0x73], cl ; push rax ; add dword ptr [rax + 0x69], ecx ; ret 0xca00
0x0000000000642bfb : sar dword ptr [rcx - 0x76b7fff9], 1 ; ret
0x00000000006bf5c8 : sar dword ptr [rcx], 0x42 ; add al, 0xf ; popfq ; ret 0xd184
0x000000000051be9e : sar dword ptr [rcx], cl ; ret 0x307f
0x000000000051d062 : sar dword ptr [rcx], cl ; retf 0xb7e
0x000000000068e413 : sar dword ptr [rdi + rax + 0x48], -0x73 ; push rcx ; add dword ptr [rax + 0x29], ecx ; ret 0x894c
0x000000000068bbb8 : sar dword ptr [rdi + rax - 0x77], 1 ; retf
0x00000000005eae1b : sar dword ptr [rdx + 0x41], 0 ; call rax
0x0000000000541c10 : sar dword ptr [rdx + rcx + 0x48], -0x77 ; retf 0x294c
0x00000000005aa223 : sar dword ptr [rdx + rdx + 0x48], -0x73 ; push rcx ; add dword ptr [rax + 0x29], ecx ; ret 0x8148
0x000000000067c7a1 : sar dword ptr [rsi], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000074a115 : sar eax, -1 ; and byte ptr [rdx + 8], dl ; add byte ptr [rax], al ; ret 0xfff8
0x00000000006afccd : sar eax, 0x20 ; add rsp, 8 ; ret
0x00000000006cb6dd : sar eax, 3 ; add rsp, 8 ; ret
0x00000000006ce57e : sar eax, cl ; and eax, 1 ; ret
0x000000000047fdd4 : sar edi, -1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000606e68 : sar edi, 0x18 ; test bpl, 1 ; jne 0x606ecf ; call rax
0x00000000007366ae : sar edi, 1 ; add byte ptr [rax], ch ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; rcl ecx, 1 ; jmp qword ptr [rax]
0x000000000073655e : sar edi, 1 ; and byte ptr [rdx], 2 ; add dh, cl ; ret
0x000000000073654e : sar edi, 1 ; and byte ptr [rdx], ah ; add al, byte ptr [rax] ; xchg eax, edx ; ret 0xffd1
0x00000000005d464c : sar edi, 1 ; dec ecx ; ret
0x00000000006a471e : sar edi, 1 ; jne 0x6a4716 ; fstp st(1) ; ret
0x0000000000736616 : sar edi, 1 ; js 0x736646 ; add al, byte ptr [rax] ; pop rdx ; retf -0x2f
0x00000000007367f6 : sar edi, 1 ; mov al, 0x2d ; add al, byte ptr [rax] ; push rsp ; loope 0x7367d9 ; call rax
0x0000000000736626 : sar edi, 1 ; mov eax, 0x3a000225 ; retf
0x0000000000736286 : sar edi, 1 ; rcl byte ptr [rdx + rax], 0 ; retf -0x2e92
0x00000000007362be : sar edi, 1 ; rcl byte ptr [rip + 0x76360002], 0xd1 ; jmp rax
0x000000000073635e : sar edi, 1 ; rcr byte ptr [rax], 2 ; add byte ptr [rax], ah ; mov ecx, edx ; jmp rax
0x000000000075b6ea : sar edi, 1 ; ret
0x000000000075ba92 : sar edi, 1 ; ret 1
0x000000000073611e : sar edi, 1 ; ror byte ptr [rip + 0x3cb20002], 0xd1 ; jmp rax
0x0000000000736376 : sar edi, 1 ; xor byte ptr [rcx], bl ; add al, byte ptr [rax] ; ret 0xd18c
0x000000000073753e : sar edi, cl ; add byte ptr [rdx + rax], ch ; push rax ; sbb dl, bl ; jmp qword ptr [rax]
0x00000000006ce3a3 : sar edi, cl ; add rsp, 0x18 ; ret
0x00000000006cc8db : sar edi, cl ; add rsp, 0x20 ; pop rbx ; ret
0x00000000006cc467 : sar edi, cl ; add rsp, 8 ; ret
0x000000000073777e : sar edi, cl ; clc ; jbe 0x73778e ; add byte ptr [rsi], ah ; jb 0x737763 ; jmp qword ptr [rax]
0x0000000000737b2e : sar edi, cl ; clc ; mov byte ptr [rdx], al ; add ah, al ; fst st(3) ; jmp qword ptr [rax]
0x0000000000737a7e : sar edi, cl ; loopne 0x737a10 ; add al, byte ptr [rax] ; rcl ebx, 1 ; call qword ptr [rax]
0x0000000000737666 : sar edi, cl ; mov al, 0x71 ; add al, byte ptr [rax] ; cmp al, 0xd3 ; jmp rax
0x0000000000737a0e : sar edi, cl ; mov al, 0x83 ; add al, byte ptr [rax] ; salc ; ret 0xffd3
0x0000000000737c16 : sar edi, cl ; mov al, 0x8c ; add al, byte ptr [rax] ; and ch, 0xd3 ; call rax
0x0000000000737d66 : sar edi, cl ; mov al, 0x92 ; add al, byte ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; not ebx ; call rax
0x00000000006cc8fc : sar edi, cl ; mov byte ptr [rax], 0 ; add rsp, 8 ; ret
0x00000000006ce066 : sar edi, cl ; mov dword ptr [rax], ebx ; pop rbx ; ret
0x00000000006cc92b : sar edi, cl ; mov eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000006cd614 : sar edi, cl ; mov rdi, r12 ; call r14
0x00000000006ce348 : sar edi, cl ; nop word ptr [rax + rax] ; ret
0x0000000000760a52 : sar edi, cl ; ret
0x0000000000737a76 : sar edi, cl ; rol byte ptr [rbp - 0x2f8dfffe], 0xd3 ; jmp rax
0x0000000000737b5e : sar edi, cl ; ror byte ptr [rcx - 0x212bfffe], 0xd3 ; jmp rax
0x000000000075f602 : sar edi, cl ; syscall
0x0000000000737c86 : sar edi, cl ; test al, 0x8e ; add al, byte ptr [rax] ; ret 0xd3eb
0x00000000004b98c6 : sar edx, -1 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000676ef1 : sar edx, 0x1a ; mov rax, rdx ; sub rax, rdi ; ret
0x000000000050ec6c : sar esi, -1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000422a1b : sar esi, 0x5d ; add bh, bh ; ror cl, 1 ; ret
0x00000000006a4895 : sar esi, 1 ; jne 0x6a4884 ; ret
0x00000000006b2767 : sar esp, cl ; dec dword ptr [rax - 0x77] ; ret
0x00000000006ce5e6 : sar r15, cl ; mov eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000006afccc : sar rax, 0x20 ; add rsp, 8 ; ret
0x00000000006cb6dc : sar rax, 3 ; add rsp, 8 ; ret
0x00000000006ce57d : sar rax, cl ; and eax, 1 ; ret
0x00000000005e1ee2 : sbb ah, 9 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007eb4ce : sbb ah, bh ; and byte ptr [rax], al ; pushfq ; syscall
0x000000000074156d : sbb ah, bh ; call qword ptr [rax]
0x000000000074155d : sbb ah, bh ; jmp rax
0x000000000047e0fb : sbb ah, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044cadf : sbb ah, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000063a522 : sbb ah, byte ptr [rdx + 0x5b580009] ; pop rbp ; ret
0x000000000045e0d9 : sbb ah, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000063a122 : sbb ah, byte ptr [rsi + 0x5b580009] ; pop rbp ; ret
0x000000000045ebd9 : sbb ah, byte ptr [rsi] ; add cl, cl ; ret
0x00000000007a7ed9 : sbb ah, ch ; call qword ptr [rdi]
0x0000000000740155 : sbb ah, ch ; call rax
0x00000000007a7e91 : sbb ah, ch ; jmp qword ptr [rdx]
0x00000000007aeef8 : sbb ah, dl ; in eax, dx ; call qword ptr [rax]
0x000000000073e51d : sbb ah, dl ; jmp qword ptr [rax]
0x00000000007f5deb : sbb al, 0 ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000075cc08 : sbb al, 0 ; add byte ptr [rax], al ; add al, 0x15 ; add dword ptr [rax], eax ; retf -0x2e9e
0x000000000075e408 : sbb al, 0 ; add byte ptr [rax], al ; add al, 0x2d ; add dword ptr [rax], eax ; retf -0x2df2
0x000000000075dd48 : sbb al, 0 ; add byte ptr [rax], al ; add dword ptr es:[rax], eax ; ret 0xd1f5
0x0000000000763e28 : sbb al, 0 ; add byte ptr [rax], al ; and al, 0x87 ; add dword ptr [rax], eax ; ret 0xd52e
0x0000000000756c28 : sbb al, 0 ; add byte ptr [rax], al ; and al, 0xb5 ; add byte ptr [rax], al ; xchg eax, edx ; ret
0x000000000079a228 : sbb al, 0 ; add byte ptr [rax], al ; and al, 0xeb ; add al, 0 ; ret 0xffe6
0x000000000074b6f4 : sbb al, 0 ; add byte ptr [rax], al ; and dl, bl ; retf
0x0000000000750f00 : sbb al, 0 ; add byte ptr [rax], al ; cld ; push rdi ; add byte ptr [rax], al ; retf -0x33
0x000000000079c700 : sbb al, 0 ; add byte ptr [rax], al ; cld ; syscall
0x0000000000750f40 : sbb al, 0 ; add byte ptr [rax], al ; cmp al, 0x58 ; add byte ptr [rax], al ; cwde ; retf -0x33
0x0000000000756af8 : sbb al, 0 ; add byte ptr [rax], al ; hlt ; mov bl, 0 ; add byte ptr [rsi], bl ; ret 0xffcf
0x0000000000767af8 : sbb al, 0 ; add byte ptr [rax], al ; hlt ; ret
0x000000000075cbe8 : sbb al, 0 ; add byte ptr [rax], al ; in al, 0x14 ; add dword ptr [rax], eax ; retf -0x2e9e
0x0000000000792be8 : sbb al, 0 ; add byte ptr [rax], al ; in al, 0x74 ; add al, 0 ; retf -0x1d
0x0000000000757af0 : sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x00000000007679f0 : sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; ret 1
0x00000000007677f0 : sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; rol byte ptr [rcx], 0 ; retf -0x2901
0x0000000000792c70 : sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jne 0x792c84 ; add byte ptr [rax], cl ; retf
0x00000000007b8270 : sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x0000000000753d78 : sbb al, 0 ; add byte ptr [rax], al ; je 0x753d0c ; add byte ptr [rax], al ; retf -0x311e
0x000000000076c578 : sbb al, 0 ; add byte ptr [rax], al ; je 0x76c595 ; add al, byte ptr [rax] ; nop ; retf -0x27
0x0000000000757080 : sbb al, 0 ; add byte ptr [rax], al ; jl 0x757048 ; add byte ptr [rax], al ; retf -0x31
0x0000000000792c50 : sbb al, 0 ; add byte ptr [rax], al ; jne 0x792c64 ; add al, ch ; retf -0x1d
0x0000000000750fb0 : sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; pop rax ; add byte ptr [rax], al ; push rsi ; retf
0x0000000000757ab0 : sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x00000000007679b0 : sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 1
0x00000000007570c0 : sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x6e0000b9 ; retf -0x31
0x000000000079cbc0 : sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x80000514 ; ret
0x00000000007a79a8 : sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 5
0x00000000007582a8 : sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000007981a8 : sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 4
0x0000000000767810 : sbb al, 0 ; add byte ptr [rax], al ; or al, 0xc1 ; add dword ptr [rax], eax ; cli ; call rsi
0x0000000000757960 : sbb al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 0
0x0000000000767960 : sbb al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 1
0x0000000000768258 : sbb al, 0 ; add byte ptr [rax], al ; push rsp ; retf
0x000000000050f9db : sbb al, 0 ; add byte ptr [rax], al ; ret
0x0000000000758248 : sbb al, 0 ; add byte ptr [rax], al ; retf
0x00000000007a8168 : sbb al, 0 ; add byte ptr [rax], al ; retf 5
0x000000000074fe30 : sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x47 ; add byte ptr [rax], al ; retf -0x32b6
0x0000000000792c30 : sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add al, 0 ; clc ; retf -0x1d
0x0000000000765330 : sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x9c ; add dword ptr [rax], eax ; retf -0x2aa0
0x0000000000750598 : sbb al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; add byte ptr [rax], r8b ; retf -0x325c
0x0000000000767a98 : sbb al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x0000000000797998 : sbb al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 4
0x000000000075a938 : sbb al, 0 ; add byte ptr [rax], al ; xor al, 0xf2 ; add byte ptr [rax], al ; ret 0xd0b7
0x0000000000511623 : sbb al, 0 ; call 0x6ce054
0x00000000007ddbbb : sbb al, 0 ; cwde ; syscall
0x00000000004b5ea9 : sbb al, 0 ; leave ; ret
0x00000000007ddbc1 : sbb al, 0 ; mov bl, 0xf ; add eax, 0xc9000fb8 ; syscall
0x00000000007eb554 : sbb al, 0 ; mov dword ptr [rsi + rax], ebx ; ret
0x00000000004f3130 : sbb al, 0 ; mov rax, qword ptr [rip + 0x50f7af] ; call rax
0x00000000004dabc2 : sbb al, 0 ; mov rax, qword ptr [rip + 0x527d15] ; call rax
0x00000000004d9a8f : sbb al, 0 ; mov rax, qword ptr [rip + 0x528e50] ; call rax
0x00000000004c91ea : sbb al, 0 ; mov rax, qword ptr [rip + 0x5396ed] ; call rax
0x00000000004c90f1 : sbb al, 0 ; mov rax, qword ptr [rip + 0x5397e6] ; call rax
0x00000000004c8ed7 : sbb al, 0 ; mov rax, qword ptr [rip + 0x539a00] ; call rax
0x00000000004c59d7 : sbb al, 0 ; mov rax, qword ptr [rip + 0x53cf00] ; call rax
0x00000000004c589a : sbb al, 0 ; mov rax, qword ptr [rip + 0x53d03d] ; call rax
0x00000000004c551c : sbb al, 0 ; mov rax, qword ptr [rip + 0x53d3bb] ; call rax
0x00000000004c511a : sbb al, 0 ; mov rax, qword ptr [rip + 0x53d7bd] ; call rax
0x00000000004c4d72 : sbb al, 0 ; mov rax, qword ptr [rip + 0x53db65] ; call rax
0x00000000004c49e4 : sbb al, 0 ; mov rax, qword ptr [rip + 0x53def3] ; call rax
0x00000000004c41a4 : sbb al, 0 ; mov rax, qword ptr [rip + 0x53e733] ; call rax
0x00000000004c2b4b : sbb al, 0 ; mov rax, qword ptr [rip + 0x53fd8c] ; call rax
0x00000000004c166d : sbb al, 0 ; mov rax, qword ptr [rip + 0x54126a] ; call rax
0x00000000004c10c5 : sbb al, 0 ; mov rax, qword ptr [rip + 0x541812] ; call rax
0x00000000004c0b3b : sbb al, 0 ; mov rax, qword ptr [rip + 0x541d9c] ; call rax
0x00000000004c012f : sbb al, 0 ; mov rax, qword ptr [rip + 0x5427a8] ; call rax
0x00000000004bfab8 : sbb al, 0 ; mov rax, qword ptr [rip + 0x542e1f] ; call rax
0x00000000004bf605 : sbb al, 0 ; mov rax, qword ptr [rip + 0x5432d2] ; call rax
0x00000000004bf13f : sbb al, 0 ; mov rax, qword ptr [rip + 0x543798] ; call rax
0x00000000004beed1 : sbb al, 0 ; mov rax, qword ptr [rip + 0x543a06] ; call rax
0x00000000004beab9 : sbb al, 0 ; mov rax, qword ptr [rip + 0x543e1e] ; call rax
0x00000000004be443 : sbb al, 0 ; mov rax, qword ptr [rip + 0x544494] ; call rax
0x00000000004bdf2d : sbb al, 0 ; mov rax, qword ptr [rip + 0x5449aa] ; call rax
0x00000000004bda67 : sbb al, 0 ; mov rax, qword ptr [rip + 0x544e70] ; call rax
0x00000000004bd82b : sbb al, 0 ; mov rax, qword ptr [rip + 0x5450ac] ; call rax
0x00000000004b236b : sbb al, 0 ; mov rax, qword ptr [rip + 0x55056c] ; call rax
0x00000000004f7791 : sbb al, 0 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000007dcd0c : sbb al, 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb al, 0x21 ; retf 0x1c
0x00000000004a9fee : sbb al, 0 ; nop ; leave ; ret
0x0000000000505da8 : sbb al, 0 ; nop word ptr [rax + rax] ; ret
0x0000000000507379 : sbb al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007dda97 : sbb al, 0 ; retf
0x00000000006a95ac : sbb al, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000054ee1e : sbb al, 0x13 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000078cc24 : sbb al, 0x15 ; add al, 0 ; call 0x1478adb7
0x000000000052f678 : sbb al, 0x15 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007dcb4f : sbb al, 0x15 ; retf
0x0000000000572a9a : sbb al, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000053a503 : sbb al, 0x18 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004def19 : sbb al, 0x1a ; add byte ptr [rcx], bh ; ret 0x127c
0x00000000007dcd0f : sbb al, 0x21 ; retf 0x1c
0x000000000045df4f : sbb al, 0x22 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005405c8 : sbb al, 0x23 ; add byte ptr [rax - 0x7d], r9b ; ret
0x000000000044ed1e : sbb al, 0x27 ; add cl, cl ; ret
0x000000000040ed3d : sbb al, 0x2b ; add cl, cl ; ret
0x00000000004b9b86 : sbb al, 0x39 ; ret 0x840f
0x0000000000544201 : sbb al, 0x39 ; ret 0xca74
0x000000000050711c : sbb al, 0x39 ; ret 0xd975
0x000000000074f264 : sbb al, 0x3b ; add byte ptr [rax], al ; push rax ; xor al, 0xcd ; jmp qword ptr [rax]
0x000000000079fd64 : sbb al, 0x46 ; add eax, 0xe870f800 ; jmp rcx
0x00000000006a47af : sbb al, 0x48 ; add esp, 0x28 ; ret
0x000000000054b754 : sbb al, 0x48 ; mov dword ptr [rdx], ecx ; add rsp, 8 ; ret
0x0000000000523d11 : sbb al, 0x48 ; mov eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000049c28d : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x566653] ; call rax
0x000000000049c0b9 : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x566827] ; call rax
0x000000000049a93f : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x567fa1] ; call rax
0x000000000047a1a4 : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x58873c] ; call rax
0x0000000000479fa1 : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x58893f] ; call rax
0x0000000000478995 : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x589f4b] ; call rax
0x000000000046bf11 : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5969cf] ; call rax
0x000000000046bd3d : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x596ba3] ; call rax
0x000000000046a5c3 : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x59831d] ; call rax
0x0000000000462211 : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5a06cf] ; call rax
0x000000000046203d : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5a08a3] ; call rax
0x00000000004608c3 : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5a201d] ; call rax
0x0000000000459417 : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5a94c9] ; call rax
0x0000000000459243 : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5a969d] ; call rax
0x0000000000457ac9 : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5aae17] ; call rax
0x0000000000448763 : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5ba17d] ; call rax
0x000000000044858f : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5ba351] ; call rax
0x0000000000446e15 : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5bbacb] ; call rax
0x000000000043dd5b : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5c4b85] ; call rax
0x000000000043d791 : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5c514f] ; call rax
0x000000000043d5bd : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5c5323] ; call rax
0x000000000043b733 : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5c71ad] ; call rax
0x0000000000430cca : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5d1c16] ; call rax
0x000000000042df84 : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5d495c] ; call rax
0x000000000042225c : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5e0684] ; call rax
0x000000000041efbe : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5e3922] ; call rax
0x00000000004121e4 : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5f06fc] ; call rax
0x000000000040f49e : sbb al, 0x48 ; mov eax, dword ptr [rip + 0x5f3442] ; call rax
0x0000000000790824 : sbb al, 0x51 ; add al, 0 ; sbb byte ptr [rcx - 0x1e], ah ; jmp qword ptr [rdx]
0x00000000007387bc : sbb al, 0x5a ; salc ; call rax
0x000000000074490c : sbb al, 0x7a ; out dx, al ; call qword ptr [rax]
0x000000000050adc8 : sbb al, 0x7b ; add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000067b26c : sbb al, 0x83 ; ret
0x0000000000753c64 : sbb al, 0x85 ; add byte ptr [rax], al ; ret 0xcedd
0x000000000045066c : sbb al, 0x8b ; add byte ptr [rcx], bh ; ret 0x1f75
0x00000000005441fe : sbb al, 0x8b ; sbb al, 0x39 ; ret 0xca74
0x0000000000507119 : sbb al, 0x8b ; sbb al, 0x39 ; ret 0xd975
0x00000000004453b0 : sbb al, 0x8b ; sbb byte ptr [r9], dil ; ret 0x1b7c
0x0000000000445390 : sbb al, 0x8b ; sbb byte ptr [r9], dil ; ret 0x538b
0x0000000000794424 : sbb al, 0x8d ; add al, 0 ; xchg eax, edx ; js 0x794416 ; jmp qword ptr [rdx]
0x0000000000755890 : sbb al, 0x8e ; iretd ; call rbx
0x00000000007f9a01 : sbb al, 0x98 ; sahf ; add dword ptr [rax], eax ; retf
0x000000000072193d : sbb al, 0x98 ; xchg dword ptr [rcx + 0x12], edx ; ret 0x104a
0x0000000000755224 : sbb al, 0x9b ; add byte ptr [rax], al ; mov dl, 0x6b ; iretd ; call qword ptr [rdi]
0x0000000000777024 : sbb al, 0xb9 ; add al, byte ptr [rax] ; sbb byte ptr [rdi - 0x24], ah ; call qword ptr [rdx]
0x00000000004f84c2 : sbb al, 0xba ; push rax ; fisubr word ptr [rsi] ; mov rdi, rbx ; call rax
0x0000000000622990 : sbb al, 0xbf ; or dword ptr [rax], eax ; leave ; ret
0x00000000005beedf : sbb al, 0xc ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005fc9a4 : sbb al, 0xc ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x0000000000530cdd : sbb al, 0xc ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x0000000000777e24 : sbb al, 0xc7 ; add al, byte ptr [rax] ; retf
0x00000000006d4a46 : sbb al, 0xcc ; mov rsi, qword ptr [rbx] ; call r14
0x0000000000734a85 : sbb al, 0xce ; call qword ptr [rax]
0x000000000073523d : sbb al, 0xcf ; jmp qword ptr [rax]
0x000000000072293e : sbb al, 0xcf ; ret 0x5112
0x0000000000763401 : sbb al, 0xd5 ; call qword ptr [rdx]
0x00000000007392f5 : sbb al, 0xd8 ; jmp rax
0x0000000000413750 : sbb al, 0xdc ; sub al, byte ptr [rax] ; leave ; ret
0x000000000073c2ad : sbb al, 0xdf ; jmp qword ptr [rax]
0x00000000007a9724 : sbb al, 0xe0 ; add eax, 0xec9f9800 ; call rbx
0x00000000007990f9 : sbb al, 0xe6 ; jmp rax
0x000000000079b351 : sbb al, 0xe7 ; jmp qword ptr [rcx]
0x000000000063bc32 : sbb al, 0xe8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000007424b5 : sbb al, 0xe9 ; call qword ptr [rax]
0x00000000007a80e1 : sbb al, 0xec ; call qword ptr [rbx]
0x00000000007a80a1 : sbb al, 0xec ; call qword ptr [rdi]
0x00000000005cc943 : sbb al, 0xf ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006946ba : sbb al, 0xf ; lahf ; ret 0x8341
0x00000000007218c0 : sbb al, 0xf2 ; mov ebp, 0xbac28abd ; retf -0x6cd0
0x000000000074a66d : sbb al, 0xf9 ; jmp qword ptr [rax]
0x000000000073590c : sbb al, 0xfc ; iretd ; jmp qword ptr [rax]
0x00000000005eb00d : sbb al, 0xfe ; dec ecx ; ret
0x000000000076b824 : sbb al, 1 ; add al, byte ptr [rax] ; cwde ; mov dl, 0xd9 ; jmp qword ptr [rbx]
0x00000000006760fb : sbb al, 1 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004f802f : sbb al, 1 ; add byte ptr [rax], al ; call rax
0x00000000006760e2 : sbb al, 1 ; add byte ptr [rax], al ; ret
0x00000000006a95fb : sbb al, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000054a778 : sbb al, 1 ; pop rbx ; ret
0x000000000054a22c : sbb al, 1 ; ret
0x000000000073feb9 : sbb al, 5 ; add al, dh ; or ebp, esp ; jmp qword ptr [rax]
0x00000000007eb551 : sbb al, 5 ; enter 0x1c, -0x77 ; sbb al, 6 ; ret
0x00000000007ebd29 : sbb al, 5 ; ret
0x00000000007f0956 : sbb al, 5 ; retf
0x00000000007e6d6f : sbb al, 5 ; retf 0x31e
0x0000000000743009 : sbb al, 6 ; add ah, dl ; xor ebp, ebx ; call qword ptr [rax]
0x000000000065c97b : sbb al, 6 ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x00000000007ad395 : sbb al, 6 ; add byte ptr [rax], ch ; jns 0x7ad38e ; jmp qword ptr [rcx]
0x00000000007eb557 : sbb al, 6 ; ret
0x00000000007f7048 : sbb al, 6 ; retf 0x3e
0x00000000007ee9e0 : sbb al, 7 ; ret 2
0x00000000005edee3 : sbb al, 9 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000005edecf : sbb al, 9 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000722e95 : sbb al, 9 ; retf
0x00000000006941be : sbb al, byte ptr [r8] ; ret
0x000000000056a5b2 : sbb al, byte ptr [rax + 0x15] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006b32ec : sbb al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000006b3205 : sbb al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000007f980e : sbb al, byte ptr [rax] ; add byte ptr [rcx + rsi], ch ; ret 0x101
0x00000000007d9201 : sbb al, byte ptr [rax] ; cli ; syscall
0x00000000007f6701 : sbb al, byte ptr [rax] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; or al, 5 ; ret
0x00000000007d91fb : sbb al, byte ptr [rax] ; fisttp dword ptr [rdi] ; add eax, 0xfa001aa6 ; syscall
0x00000000007ebcff : sbb al, byte ptr [rax] ; lock add dword ptr [rbx - 0x7e], ecx ; adc eax, dword ptr [rax] ; retf
0x000000000050f85f : sbb al, byte ptr [rax] ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004e73f5 : sbb al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x51b4e2] ; call rax
0x00000000004e1012 : sbb al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x5218c5] ; call rax
0x00000000004ddffb : sbb al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x5248dc] ; call rax
0x00000000004dd989 : sbb al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x524f4e] ; call rax
0x00000000004dd387 : sbb al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x525550] ; call rax
0x00000000004dcdbd : sbb al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x525b1a] ; call rax
0x00000000004dbe00 : sbb al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x526ad7] ; call rax
0x00000000004d65ec : sbb al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x52c2eb] ; call rax
0x00000000004d645c : sbb al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x52c47b] ; call rax
0x00000000004d6042 : sbb al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x52c895] ; call rax
0x00000000004d5735 : sbb al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x52d1a2] ; call rax
0x00000000004d3e5c : sbb al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x52ea7b] ; call rax
0x00000000004d3d2f : sbb al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x52eba8] ; call rax
0x00000000004d3c07 : sbb al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x52ecd0] ; call rax
0x00000000004d3ada : sbb al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x52edfd] ; call rax
0x00000000004d39a8 : sbb al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x52ef2f] ; call rax
0x00000000004d2455 : sbb al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x530482] ; call rax
0x00000000004d2120 : sbb al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x5307b7] ; call rax
0x00000000006941bf : sbb al, byte ptr [rax] ; ret
0x00000000007c69f9 : sbb al, byte ptr [rax] ; ret 0x30c
0x00000000007d080a : sbb al, byte ptr [rax] ; ret 0x51a
0x00000000007ebe5e : sbb al, byte ptr [rax] ; retf
0x00000000007c69ec : sbb al, byte ptr [rax] ; retf 0x508
0x00000000007cc4b7 : sbb al, byte ptr [rax] ; retf 0x50a
0x00000000007dcc84 : sbb al, byte ptr [rax] ; retf 0x517
0x00000000007cc4b1 : sbb al, byte ptr [rax] ; ror dword ptr [rdx], 6 ; xchg eax, ebx ; sbb al, byte ptr [rax] ; retf 0x50a
0x00000000004b7492 : sbb al, byte ptr [rbp + 0x2948001d] ; ret
0x00000000006235cf : sbb al, byte ptr [rbx + 0x7f00a87d] ; adc al, 0xbe ; ret 3
0x000000000077d165 : sbb al, byte ptr [rbx] ; add al, ch ; mov ds, ebp ; call qword ptr [rbx]
0x000000000065e089 : sbb al, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000064e0c3 : sbb al, byte ptr [rbx] ; add byte ptr [rcx + 0x63], cl ; ret 0xd989
0x00000000007e6d3d : sbb al, byte ptr [rbx] ; retf 0x3219
0x00000000004fa4b2 : sbb al, byte ptr [rcx + 0x1c] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000542132 : sbb al, byte ptr [rdi - 0x76b7ffea] ; ret 0xc748
0x00000000007f5e4f : sbb al, byte ptr [rdi] ; ret 0x519
0x00000000005e0e7c : sbb al, byte ptr [rdx] ; call rax
0x00000000007e9654 : sbb al, byte ptr [rip + 0x4c000004] ; retf
0x000000000073fe49 : sbb al, byte ptr [rip - 0x1af72000] ; call rax
0x00000000007dc660 : sbb al, byte ptr [rip - 0x7ff0c431] ; sbb eax, dword ptr [rsi] ; ret 0x3b
0x000000000074209d : sbb al, ch ; call qword ptr [rax]
0x0000000000543d2d : sbb al, ch ; call rdi
0x0000000000577f5d : sbb al, ch ; cmp eax, 0xe8ffffbc ; retf 0x1095
0x00000000005185bd : sbb al, ch ; insd dword ptr [rdi], dx ; ret 0x15
0x000000000074208d : sbb al, ch ; jmp rax
0x0000000000563d9b : sbb al, ch ; lahf ; push rbx ; adc al, byte ptr [rax] ; pop rbx ; ret
0x000000000051ed27 : sbb al, ch ; ret
0x0000000000577951 : sbb al, ch ; ret 0xffff
0x000000000069e2bf : sbb al, ch ; retf
0x0000000000577157 : sbb al, ch ; retf -1
0x00000000007b7fa9 : sbb al, dh ; jmp rdi
0x0000000000758a89 : sbb al, dl ; call rsp
0x00000000006c7a4f : sbb bh, bh ; mov ebx, r15d ; call 0x403c77
0x0000000000519347 : sbb bh, bh ; ror byte ptr [rax - 0x68], 1 ; add rsp, 0x18 ; ret
0x000000000073c2a5 : sbb bh, bl ; call rax
0x00000000004b9d45 : sbb bh, byte ptr [rax] ; ret 0x2b75
0x00000000005455dc : sbb bh, byte ptr [rbp - 0x76b7ffed] ; ret
0x0000000000754960 : sbb bh, byte ptr [rbx] ; iretd ; call rsp
0x0000000000576916 : sbb bh, byte ptr [rcx] ; ret 0xd7d
0x0000000000514194 : sbb bh, byte ptr [rdx + 0x6f2120] ; mov rdi, rbx ; call rax
0x0000000000680634 : sbb bh, byte ptr [rdx] ; add al, byte ptr [rax] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000007b34b1 : sbb bh, ch ; jmp qword ptr [rcx]
0x00000000007ab228 : sbb bh, dh ; in al, dx ; jmp qword ptr [rdi]
0x000000000073ee5d : sbb bl, ah ; lcall ptr [rax] ; retf 4
0x000000000067fbf5 : sbb bl, al ; nop ; movzx eax, byte ptr [rdi] ; xor eax, 1 ; ret
0x00000000006a7d7b : sbb bl, al ; nop dword ptr [rax] ; movzx eax, byte ptr [rdi + 8] ; ret
0x00000000006b2557 : sbb bl, al ; nop dword ptr [rax] ; ret
0x0000000000536f48 : sbb bl, al ; nop word ptr [rax + rax] ; ret
0x00000000007442e4 : sbb bl, bl ; in eax, dx ; call rax
0x0000000000512eaa : sbb bl, byte ptr [rax + 0x4f] ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000004ff0de : sbb bl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000410e75 : sbb bl, byte ptr [rdi] ; call rax
0x0000000000420df0 : sbb bl, byte ptr [rsi] ; call rax
0x0000000000413565 : sbb bl, ch ; or ecx, dword ptr [rax - 0x77] ; ret
0x000000000076dae9 : sbb bl, dl ; call qword ptr [rbx]
0x000000000076db01 : sbb bl, dl ; jmp qword ptr [rax]
0x000000000076dd61 : sbb bl, dl ; jmp qword ptr [rdi]
0x00000000005100e9 : sbb bpl, byte ptr [rdi] ; mov rdi, r13 ; call r11
0x00000000004a7c78 : sbb byte ptr [r11 + 0x6348ec55], cl ; retf -0x74b8
0x000000000054a011 : sbb byte ptr [r13 - 0x3f6bf040], r8b ; ret
0x0000000000542695 : sbb byte ptr [r8 + 0x39], cl ; ret 0x247f
0x000000000052246e : sbb byte ptr [r8 + 0x39], r9b ; ret
0x000000000040d5f8 : sbb byte ptr [r8 - 0x77], cl ; retf -0x3670
0x0000000000618bf7 : sbb byte ptr [r8 - 0x77], cl ; retf 0x5d90
0x000000000052221a : sbb byte ptr [r8 - 0x77], r9b ; jo 0x522231 ; mov qword ptr [rsi], rax ; ret
0x000000000052244a : sbb byte ptr [r8 - 0x77], r9b ; jo 0x522469 ; mov qword ptr [rsi], rax ; ret
0x000000000052721a : sbb byte ptr [r8 - 0x77], r9b ; jo 0x527231 ; mov qword ptr [rsi], rax ; ret
0x000000000052744a : sbb byte ptr [r8 - 0x77], r9b ; jo 0x527469 ; mov qword ptr [rsi], rax ; ret
0x0000000000542bea : sbb byte ptr [r8 - 0x77], r9b ; jo 0x542c01 ; mov qword ptr [rsi], rax ; ret
0x0000000000542e1a : sbb byte ptr [r8 - 0x77], r9b ; jo 0x542e39 ; mov qword ptr [rsi], rax ; ret
0x000000000056710a : sbb byte ptr [r8 - 0x77], r9b ; jo 0x567121 ; mov qword ptr [rsi], rax ; ret
0x000000000056733a : sbb byte ptr [r8 - 0x77], r9b ; jo 0x567359 ; mov qword ptr [rsi], rax ; ret
0x0000000000590e5a : sbb byte ptr [r8 - 0x77], r9b ; jo 0x590e71 ; mov qword ptr [rsi], rax ; ret
0x000000000059108a : sbb byte ptr [r8 - 0x77], r9b ; jo 0x5910a9 ; mov qword ptr [rsi], rax ; ret
0x00000000005a974a : sbb byte ptr [r8 - 0x77], r9b ; jo 0x5a9761 ; mov qword ptr [rsi], rax ; ret
0x00000000005a997a : sbb byte ptr [r8 - 0x77], r9b ; jo 0x5a9999 ; mov qword ptr [rsi], rax ; ret
0x0000000000490d27 : sbb byte ptr [r8 - 0x7b], cl ; sal byte ptr [rbp + 0x14], 0xbe ; ret 3
0x0000000000629088 : sbb byte ptr [r8 - 0x7b], cl ; sal byte ptr [rcx + rdi*2 + 0x48], 0x89 ; ret
0x0000000000509dd5 : sbb byte ptr [r8 - 0x7b], cl ; sal byte ptr [rdi + rsi + 0x48], 0x39 ; ret 0xef75
0x00000000005a55a5 : sbb byte ptr [r8], r10b ; cli ; jo 0x5a55b1 ; ret
0x0000000000505889 : sbb byte ptr [r8], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005229ab : sbb byte ptr [r9], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004453b2 : sbb byte ptr [r9], dil ; ret 0x1b7c
0x00000000004ccc80 : sbb byte ptr [r9], dil ; ret 0x267d
0x0000000000445392 : sbb byte ptr [r9], dil ; ret 0x538b
0x0000000000543379 : sbb byte ptr [r9], r8b ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000053ba36 : sbb byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000543372 : sbb byte ptr [rax + 0x39], cl ; call 0x461af5f4
0x000000000052246f : sbb byte ptr [rax + 0x39], cl ; ret
0x0000000000613b03 : sbb byte ptr [rax + 0x39], cl ; ret 0x1f74
0x0000000000542696 : sbb byte ptr [rax + 0x39], cl ; ret 0x247f
0x00000000004b434a : sbb byte ptr [rax + 0x39], cl ; ret 0x2675
0x00000000004b9d8e : sbb byte ptr [rax + 0x39], cl ; ret 0x2b75
0x00000000004b9bee : sbb byte ptr [rax + 0x39], cl ; ret 0x2e75
0x00000000004bd152 : sbb byte ptr [rax + 0x39], cl ; ret 0x3774
0x000000000061b9f9 : sbb byte ptr [rax + 0x39], cl ; ret 0x4975
0x00000000004b9dfb : sbb byte ptr [rax + 0x39], cl ; ret 0x6975
0x0000000000455db4 : sbb byte ptr [rax + 0x39], cl ; ret 0x775
0x00000000004b9c3b : sbb byte ptr [rax + 0x39], cl ; ret 0x7e75
0x00000000004b4305 : sbb byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004bd02f : sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000613a5a : sbb byte ptr [rax + 0x39], cl ; ret 0xa74
0x000000000054e6fe : sbb byte ptr [rax + 0x39], cl ; retf
0x0000000000722fcd : sbb byte ptr [rax + 0x49], al ; ret 0x5657
0x000000000057ee23 : sbb byte ptr [rax + 0x63], cl ; ret 0x8948
0x000000000068369c : sbb byte ptr [rax + 0xa], dl ; add byte ptr [rsi + 0xf], ah ; ret
0x00000000005052ff : sbb byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000070c2b0 : sbb byte ptr [rax + rbx*2], 0 ; add byte ptr [rax], al ; add al, cl ; ret 0x70
0x000000000074532c : sbb byte ptr [rax - 0x11], 0xff ; cwde ; retf
0x0000000000788718 : sbb byte ptr [rax - 0x20], dh ; jmp qword ptr [rax]
0x0000000000722967 : sbb byte ptr [rax - 0x562405d3], dh ; retf
0x00000000006489dc : sbb byte ptr [rax - 0x73], cl ; add qword ptr [rax - 0x77], rcx ; ret 0xc748
0x000000000055c38b : sbb byte ptr [rax - 0x75], cl ; je 0x55c3bc ; and byte ptr [rax - 0x77], cl ; ret
0x00000000005c74e7 : sbb byte ptr [rax - 0x75], cl ; jl 0x5c7518 ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000005224c6 : sbb byte ptr [rax - 0x77], cl ; fmul dword ptr [rax + 0x39] ; ret
0x000000000052221b : sbb byte ptr [rax - 0x77], cl ; jo 0x522230 ; mov qword ptr [rsi], rax ; ret
0x000000000052244b : sbb byte ptr [rax - 0x77], cl ; jo 0x522468 ; mov qword ptr [rsi], rax ; ret
0x000000000052721b : sbb byte ptr [rax - 0x77], cl ; jo 0x527230 ; mov qword ptr [rsi], rax ; ret
0x000000000052744b : sbb byte ptr [rax - 0x77], cl ; jo 0x527468 ; mov qword ptr [rsi], rax ; ret
0x0000000000542beb : sbb byte ptr [rax - 0x77], cl ; jo 0x542c00 ; mov qword ptr [rsi], rax ; ret
0x0000000000542e1b : sbb byte ptr [rax - 0x77], cl ; jo 0x542e38 ; mov qword ptr [rsi], rax ; ret
0x000000000056710b : sbb byte ptr [rax - 0x77], cl ; jo 0x567120 ; mov qword ptr [rsi], rax ; ret
0x000000000056733b : sbb byte ptr [rax - 0x77], cl ; jo 0x567358 ; mov qword ptr [rsi], rax ; ret
0x0000000000590e5b : sbb byte ptr [rax - 0x77], cl ; jo 0x590e70 ; mov qword ptr [rsi], rax ; ret
0x000000000059108b : sbb byte ptr [rax - 0x77], cl ; jo 0x5910a8 ; mov qword ptr [rsi], rax ; ret
0x00000000005a974b : sbb byte ptr [rax - 0x77], cl ; jo 0x5a9760 ; mov qword ptr [rsi], rax ; ret
0x00000000005a997b : sbb byte ptr [rax - 0x77], cl ; jo 0x5a9998 ; mov qword ptr [rsi], rax ; ret
0x00000000004c8a92 : sbb byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; retf
0x000000000055451a : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov esi, dword ptr [rsp + 0x24] ; call rax
0x0000000000583f33 : sbb byte ptr [rax - 0x77], cl ; push rsi ; sbb byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004f5579 : sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000563860 : sbb byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000583f37 : sbb byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000060709c : sbb byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000045a75e : sbb byte ptr [rax - 0x77], cl ; retf
0x000000000040d5f9 : sbb byte ptr [rax - 0x77], cl ; retf -0x3670
0x000000000068d4b3 : sbb byte ptr [rax - 0x77], cl ; retf -0x76b4
0x0000000000618bf8 : sbb byte ptr [rax - 0x77], cl ; retf 0x5d90
0x000000000045a75a : sbb byte ptr [rax - 0x77], cl ; sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000622682 : sbb byte ptr [rax - 0x77], cl ; xlatb ; mov rsi, rax ; call 0x6be8b9
0x0000000000490d28 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 0x14], 0xbe ; ret 3
0x0000000000508546 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rbp + 0x48], 0x39 ; ret
0x0000000000629089 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rcx + rdi*2 + 0x48], 0x89 ; ret
0x0000000000509dd6 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + rsi + 0x48], 0x39 ; ret 0xef75
0x0000000000538d71 : sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000006aaac7 : sbb byte ptr [rax - 0x80], al ; inc byte ptr [rbx] ; jbe 0x6aaad7 ; ret
0x00000000006cd3eb : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000066ab47 : sbb byte ptr [rax], 0 ; pop rbp ; ret
0x000000000073d89c : sbb byte ptr [rax], 0xe1 ; call qword ptr [rax]
0x00000000007a7e90 : sbb byte ptr [rax], 0xec ; jmp qword ptr [rdx]
0x000000000047ee48 : sbb byte ptr [rax], ah ; add byte ptr [rax - 0x77], cl ; ret
0x000000000067177b : sbb byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf -0x26dc
0x00000000006c3d89 : sbb byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000068eb2b : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x12], dh ; ret
0x000000000068e9bd : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x1c], dh ; ret
0x0000000000414fe0 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add cl, cl ; ret
0x00000000004c2382 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; call 0x6be5d6
0x0000000000416bce : sbb byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rax ; call 0x412ea1
0x00000000004f434e : sbb byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000050588a : sbb byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005053fe : sbb byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000007cdfca : sbb byte ptr [rax], al ; mov dword ptr [rcx], eax ; pop qword ptr [rcx] ; call qword ptr [rdi]
0x00000000004f310e : sbb byte ptr [rax], al ; mov rax, qword ptr [rip + 0x50f7c9] ; call rax
0x00000000004f2feb : sbb byte ptr [rax], al ; mov rax, qword ptr [rip + 0x50f8ec] ; call rax
0x00000000004f2ee2 : sbb byte ptr [rax], al ; mov rax, qword ptr [rip + 0x50f9f5] ; call rax
0x00000000004f2336 : sbb byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5105a1] ; call rax
0x00000000005279ea : sbb byte ptr [rax], al ; nop dword ptr [rax] ; pop rbx ; ret
0x000000000051c2e0 : sbb byte ptr [rax], al ; nop word ptr [rax + rax] ; pop rbx ; ret
0x0000000000546849 : sbb byte ptr [rax], al ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007cd53c : sbb byte ptr [rax], al ; ret 0x505
0x00000000007cd79f : sbb byte ptr [rax], al ; ret 0x509
0x00000000007d05de : sbb byte ptr [rax], al ; retf
0x00000000007c6ad2 : sbb byte ptr [rax], al ; retf -0x58f7
0x00000000007cd506 : sbb byte ptr [rax], al ; retf 0x1403
0x00000000007ce095 : sbb byte ptr [rax], al ; sahf ; syscall
0x00000000007c70d6 : sbb byte ptr [rax], al ; scasd eax, dword ptr [rdi] ; add al, 0xaa ; or eax, dword ptr [rax] ; add ah, ah ; syscall
0x00000000005053cb : sbb byte ptr [rax], al ; test al, al ; jne 0x5053df ; pop rbx ; ret
0x00000000007ea45d : sbb byte ptr [rax], al ; test byte ptr [rdi], 5 ; ret
0x000000000052798d : sbb byte ptr [rax], al ; xor eax, eax ; xor edx, edx ; pop rbx ; ret
0x00000000004b9b74 : sbb byte ptr [rax], bh ; ret 0x1675
0x00000000004b9d1d : sbb byte ptr [rax], bh ; ret 0x5375
0x00000000004ff275 : sbb byte ptr [rax], bl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006818d0 : sbb byte ptr [rax], ch ; ret
0x00000000007494b9 : sbb byte ptr [rax], cl ; add byte ptr [rax], al ; je 0x7494bc ; call rax
0x00000000005af6dc : sbb byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000000005e8504 : sbb byte ptr [rax], cl ; or dword ptr [rax], eax ; leave ; ret
0x00000000004b9b73 : sbb byte ptr [rax], dil ; ret 0x1675
0x00000000004b9d1c : sbb byte ptr [rax], dil ; ret 0x5375
0x00000000005a55a6 : sbb byte ptr [rax], dl ; cli ; jo 0x5a55b0 ; ret
0x00000000005978b4 : sbb byte ptr [rbp + 0x12], ch ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000694a75 : sbb byte ptr [rbp + 0x39], al ; retf -0x77bd
0x00000000005ecb64 : sbb byte ptr [rbp + 0x41], 0 ; call rax
0x0000000000793ef8 : sbb byte ptr [rbp - 0x1c], bl ; call rsp
0x000000000040df5a : sbb byte ptr [rbp - 0x3f6bf040], al ; nop ; pop rbp ; ret
0x000000000054a012 : sbb byte ptr [rbp - 0x3f6bf040], al ; ret
0x000000000047ca93 : sbb byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000054f74a : sbb byte ptr [rbx + 0x41], bl ; pop rbp ; pop r14 ; ret
0x0000000000440724 : sbb byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000053dee1 : sbb byte ptr [rbx + 0x490f18c3], al ; ret
0x000000000057654d : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000060726c : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000631834 : sbb byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000632d16 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; jmp rax
0x0000000000506d6c : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004f737a : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000005b6075 : sbb byte ptr [rbx + 0x5d], bl ; pop r13 ; pop r14 ; ret
0x000000000040c0e5 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004a7c79 : sbb byte ptr [rbx + 0x6348ec55], cl ; retf -0x74b8
0x000000000074a168 : sbb byte ptr [rbx + 8], dl ; add byte ptr [rax], dh ; ret
0x00000000007b3740 : sbb byte ptr [rbx - 0x7ff1bbfd], al ; add dword ptr [rdx], eax ; retf 0xe0a
0x00000000007dc665 : sbb byte ptr [rbx], 6 ; ret 0x3b
0x000000000065a157 : sbb byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000007e383d : sbb byte ptr [rbx], al ; ret
0x000000000073a010 : sbb byte ptr [rbx], bh ; add eax, dword ptr [rax] ; pop rsp ; ret
0x0000000000522e91 : sbb byte ptr [rbx], bl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000451012 : sbb byte ptr [rbx], bl ; call rax
0x00000000006c9673 : sbb byte ptr [rbx], dh ; mov dword ptr [rax + 8], ebx ; pop rbx ; ret
0x00000000006c6ec9 : sbb byte ptr [rbx], dh ; ret
0x00000000007dd1f1 : sbb byte ptr [rbx], dl ; ret 0x518
0x000000000065a1a8 : sbb byte ptr [rcx + 2], ch ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006609b4 : sbb byte ptr [rcx + rbp + 0x48], dh ; add eax, ecx ; ret
0x0000000000497374 : sbb byte ptr [rcx + rcx*4 + 0x65], cl ; call 0x48366c
0x00000000004996be : sbb byte ptr [rcx + rcx*4 + 0x65], cl ; call 0x4859b6
0x000000000053f5fc : sbb byte ptr [rcx + rdx + 0x48], dh ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000079fca8 : sbb byte ptr [rcx - 0x18], dh ; call qword ptr [rdi]
0x0000000000793dc8 : sbb byte ptr [rcx - 0x1c], bl ; jmp qword ptr [rbx]
0x0000000000790828 : sbb byte ptr [rcx - 0x1e], ah ; jmp qword ptr [rdx]
0x00000000006a1584 : sbb byte ptr [rcx - 0x7d], cl ; ret 0x4603
0x000000000046e2c2 : sbb byte ptr [rcx], ah ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004acda4 : sbb byte ptr [rcx], ah ; add byte ptr [rax - 0x77], cl ; ret 0x2c7
0x000000000075cf9d : sbb byte ptr [rcx], al ; add al, ah ; jno 0x75cf7a ; jmp qword ptr [rbx]
0x000000000066916a : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000508570 : sbb byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005f0ffc : sbb byte ptr [rcx], al ; call rax
0x00000000005229ac : sbb byte ptr [rcx], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000054e63a : sbb byte ptr [rcx], al ; ret
0x00000000006b6e31 : sbb byte ptr [rcx], al ; retf
0x000000000040d08e : sbb byte ptr [rcx], bh ; ret 0x117c
0x00000000004453b3 : sbb byte ptr [rcx], bh ; ret 0x1b7c
0x00000000004ccc81 : sbb byte ptr [rcx], bh ; ret 0x267d
0x0000000000450656 : sbb byte ptr [rcx], bh ; ret 0x3775
0x0000000000445393 : sbb byte ptr [rcx], bh ; ret 0x538b
0x000000000045b771 : sbb byte ptr [rcx], bh ; ret 0x775
0x0000000000497e1f : sbb byte ptr [rcx], bh ; ret 0x97c
0x0000000000497c00 : sbb byte ptr [rcx], bh ; ret 0xa7c
0x000000000040c362 : sbb byte ptr [rcx], bh ; ret 0xb74
0x00000000006ab8a9 : sbb byte ptr [rcx], bh ; retf -0x5d8e
0x0000000000686285 : sbb byte ptr [rcx], bh ; retf 0x667e
0x000000000043c4fc : sbb byte ptr [rcx], bh ; ror byte ptr [rdi], 1 ; ret 0xc789
0x00000000007542c8 : sbb byte ptr [rcx], cl ; iretd ; call rsp
0x000000000065ceb7 : sbb byte ptr [rcx], cl ; sete al ; ret
0x0000000000403e24 : sbb byte ptr [rcx], cl ; sub eax, 0x5d5b5800 ; ret
0x000000000040d08d : sbb byte ptr [rcx], dil ; ret 0x117c
0x0000000000450655 : sbb byte ptr [rcx], dil ; ret 0x3775
0x000000000045b770 : sbb byte ptr [rcx], dil ; ret 0x775
0x000000000040c361 : sbb byte ptr [rcx], dil ; ret 0xb74
0x000000000056f2ae : sbb byte ptr [rcx], dl ; add al, ch ; ret 0xe95b
0x00000000007e8a0c : sbb byte ptr [rdi + 0x9fc0011], bh ; retf 0x12
0x00000000006593a8 : sbb byte ptr [rdi + 2], dh ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007a5a58 : sbb byte ptr [rdi - 0x15], ah ; jmp qword ptr [rdi]
0x0000000000777028 : sbb byte ptr [rdi - 0x24], ah ; call qword ptr [rdx]
0x0000000000563007 : sbb byte ptr [rdi], 0x70 ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000056a844 : sbb byte ptr [rdi], 0x70 ; add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x000000000044d04f : sbb byte ptr [rdi], ah ; add cl, cl ; ret
0x00000000007386f4 : sbb byte ptr [rdi], ah ; salc ; inc dword ptr [rax] ; ret 2
0x0000000000745e19 : sbb byte ptr [rdi], al ; add byte ptr [rax + 0x63], dl ; jmp qword ptr [rax]
0x00000000007bcf0d : sbb byte ptr [rdi], al ; add byte ptr [rax + 0xb], dh ; int1 ; jmp qword ptr [rdx]
0x00000000007e6fc5 : sbb byte ptr [rdi], al ; mov esi, 0x406 ; ret 0x5a06
0x00000000007cd73f : sbb byte ptr [rdi], al ; ret
0x00000000007a85b8 : sbb byte ptr [rdi], ch ; in al, dx ; call qword ptr [rbx]
0x00000000007c6b44 : sbb byte ptr [rdi], ch ; ret
0x00000000006cd3bb : sbb byte ptr [rdi], cl ; mov dh, 0xc4 ; pop rbx ; pop rbp ; ret
0x00000000007b3188 : sbb byte ptr [rdi], cl ; out dx, eax ; jmp qword ptr [rcx]
0x00000000006032d2 : sbb byte ptr [rdi], cl ; pushfq ; ret 0x8545
0x000000000053dee4 : sbb byte ptr [rdi], cl ; ret
0x000000000056350e : sbb byte ptr [rdi], cl ; sahf ; ret 0x3944
0x00000000006a2d15 : sbb byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc085
0x000000000060305e : sbb byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xed85
0x0000000000514065 : sbb byte ptr [rdx + 0x6f2120], bh ; mov rdi, rbx ; call rax
0x000000000062f1fc : sbb byte ptr [rdx - 0x76b7ffc3], bl ; ret
0x000000000074155c : sbb byte ptr [rdx], 0xe7 ; jmp rax
0x0000000000736369 : sbb byte ptr [rdx], al ; add ah, al ; mov dl, cl ; call qword ptr [rax]
0x0000000000736361 : sbb byte ptr [rdx], al ; add byte ptr [rax], ah ; mov ecx, edx ; jmp rax
0x000000000064c6d4 : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; call 0x689146
0x00000000004e1018 : sbb byte ptr [rdx], dl ; call rax
0x000000000066bbd9 : sbb byte ptr [rip + 0x49800000], al ; jb 0x66bbe9 ; ret
0x000000000079d005 : sbb byte ptr [rip - 0x182a9400], al ; call qword ptr [rbx]
0x000000000079cf8d : sbb byte ptr [rip - 0x182b8e00], al ; call rsp
0x000000000079cf8c : sbb byte ptr [rip - 0x182b8e00], r8b ; call rsp
0x000000000073fd81 : sbb byte ptr [rip - 0x1afa6000], al ; jmp qword ptr [rax]
0x00000000007eba96 : sbb byte ptr [rip - 0x20ffe639], al ; sbb byte ptr [rsi], al ; ret
0x000000000053a8b4 : sbb byte ptr [rip - 0x76b7ffe8], bh ; ret
0x00000000005fd124 : sbb byte ptr [rsi + 0xd], dh ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000682db7 : sbb byte ptr [rsi + 0xf], ah ; out dx, eax ; shl byte ptr [rsi + 0xf], 0x2e ; ret 0x5e77
0x000000000074a218 : sbb byte ptr [rsi + 8], dl ; add al, dl ; retf
0x00000000007400f0 : sbb byte ptr [rsi], ah ; add eax, 0xe517f000 ; jmp qword ptr [rax]
0x00000000007acf7d : sbb byte ptr [rsi], al ; add al, ah ; pop rsi ; in eax, dx ; jmp qword ptr [rcx]
0x00000000007eba9c : sbb byte ptr [rsi], al ; ret
0x000000000051fa5e : sbb byte ptr [rsi], dl ; add bl, ch ; test dword ptr [rax - 0x77], ecx ; ret
0x00000000005279e9 : sbb byte ptr cs:[rax], al ; nop dword ptr [rax] ; pop rbx ; ret
0x0000000000769a50 : sbb ch, 0xd8 ; call qword ptr [rdx]
0x00000000005a3b77 : sbb ch, bl ; jo 0x5a3b81 ; jne 0x5a3b5e ; ret
0x00000000005a3bac : sbb ch, bl ; jo 0x5a3bb6 ; jne 0x5a3b96 ; ret
0x0000000000629e48 : sbb ch, byte ptr [rax + 5] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040cba8 : sbb ch, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000007d79f4 : sbb ch, byte ptr [rcx] ; retf
0x00000000005100ea : sbb ch, byte ptr [rdi] ; mov rdi, r13 ; call r11
0x000000000073d89d : sbb cl, ah ; call qword ptr [rax]
0x000000000073d88d : sbb cl, ah ; jmp rax
0x00000000006d6ec0 : sbb cl, al ; adc cl, byte ptr [rbp - 0x3749f152] ; retf
0x00000000006771ee : sbb cl, byte ptr [rax + 0x31] ; retf 0x6948
0x00000000006adbe6 : sbb cl, byte ptr [rax + 0x63] ; ret
0x00000000005199b3 : sbb cl, byte ptr [rax + 0x63] ; retf -0x48
0x00000000004f83c6 : sbb cl, byte ptr [rax + 0x63] ; retf -0x7cb8
0x0000000000557e56 : sbb cl, byte ptr [rax + 0x63] ; ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000676daf : sbb cl, byte ptr [rax + 0x69] ; inc dword ptr [rax] ; retf 0x3b9a
0x00000000004ff5df : sbb cl, byte ptr [rax - 0x77] ; ret
0x0000000000676ef3 : sbb cl, byte ptr [rax - 0x77] ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000005092c5 : sbb cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000058bae1 : sbb cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x0000000000749531 : sbb cl, byte ptr [rax] ; add al, dh ; ja 0x749534 ; call rax
0x00000000006651d2 : sbb cl, byte ptr [rbp - 0x77] ; retf
0x0000000000550e59 : sbb cl, byte ptr [rbx] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000007e8c8e : sbb cl, byte ptr [rbx] ; retf -0x6fee
0x000000000067739e : sbb cl, byte ptr [rcx + 0x31] ; ror byte ptr [rbp + 0x69], cl ; rol byte ptr [rax], cl ; retf 0x3b9a
0x000000000055e09f : sbb cl, byte ptr [rcx + 0x63] ; ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000007ee5c8 : sbb cl, byte ptr [rcx] ; add al, 0 ; add byte ptr [rbx], bh ; lea eax, dword ptr [rdx] ; retf 0x102
0x00000000005ee0a4 : sbb cl, byte ptr [rcx] ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000006339be : sbb cl, byte ptr [rcx] ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x00000000005cbc6e : sbb cl, byte ptr [rdi + 0xb] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005ceed4 : sbb cl, byte ptr [rdi] ; add cl, cl ; ret
0x00000000006b74e7 : sbb cl, byte ptr [rdi] ; ret
0x00000000004d2b80 : sbb cl, byte ptr [rip - 0x70410000] ; ret 0x6e
0x000000000059ecca : sbb cl, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007af498 : sbb cl, ch ; in eax, dx ; jmp rbx
0x0000000000733eed : sbb cl, ch ; jmp qword ptr [rax]
0x000000000043bc3d : sbb cl, ch ; ret
0x000000000057ae54 : sbb cl, ch ; ret 0xfffe
0x000000000066de7f : sbb cl, ch ; retf
0x0000000000462b32 : sbb dh, 0xff ; dec ecx ; ret
0x000000000072185f : sbb dh, ah ; pop rdx ; or byte ptr [rax - 0xf09590], cl ; retf 0x63b
0x000000000068b1b2 : sbb dh, byte ptr [rbx + rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042cfb2 : sbb dh, byte ptr [rdi] ; sub dword ptr [rax], eax ; leave ; ret
0x0000000000425af2 : sbb dh, byte ptr [rdx - 0x76b7ffd9] ; ror dword ptr [rax - 0x77], 1 ; ret 0x8948
0x00000000007bda99 : sbb dh, cl ; call qword ptr [rax]
0x00000000007bd9e9 : sbb dh, cl ; jmp qword ptr [rbx]
0x00000000006cd1d1 : sbb dh, dh ; ret
0x00000000004b9d44 : sbb dil, byte ptr [rax] ; ret 0x2b75
0x00000000004b5b8b : sbb dl, bh ; dec ecx ; ret
0x0000000000737545 : sbb dl, bl ; jmp qword ptr [rax]
0x000000000054f07c : sbb dl, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004d0e35 : sbb dl, byte ptr [rbx] ; call rax
0x000000000040f5b2 : sbb dl, byte ptr [rcx] ; sub eax, dword ptr [rax] ; leave ; ret
0x0000000000767100 : sbb dl, byte ptr [rdx - 0x2a] ; jmp qword ptr [rbx]
0x000000000051f8cc : sbb dl, byte ptr [rsi] ; add bl, ch ; test dword ptr [rax - 0x77], ecx ; ret
0x0000000000447184 : sbb dl, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000724e30 : sbb dl, cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; retf 0x66
0x0000000000736bcd : sbb dl, dl ; jmp rax
0x00000000006c110d : sbb dword ptr [rax - 0x77], ecx ; out 0xba, al ; and byte ptr [rsi], cl ; jae 0x6c111f ; call rax
0x00000000006c11fd : sbb dword ptr [rax - 0x77], ecx ; out 0xba, al ; and byte ptr [rsi], cl ; jae 0x6c120f ; call rax
0x00000000006c129d : sbb dword ptr [rax - 0x77], ecx ; out 0xba, al ; and byte ptr [rsi], cl ; jae 0x6c12af ; call rax
0x000000000050046e : sbb dword ptr [rax - 0x77], ecx ; ret
0x00000000006d4c1c : sbb dword ptr [rax - 0x80], eax ; call qword ptr [rax]
0x00000000005186e5 : sbb dword ptr [rax*4 + 0x393f7ec0], eax ; ret 0x3b7c
0x00000000005186e4 : sbb dword ptr [rax*4 + 0x393f7ec0], r8d ; ret 0x3b7c
0x00000000007daa8e : sbb dword ptr [rax], eax ; adc bh, byte ptr [rdi] ; add byte ptr [rax], al ; retf
0x00000000007ed285 : sbb dword ptr [rax], eax ; add bh, bh ; add esp, eax ; add dword ptr [rcx], eax ; ret 0x1601
0x00000000004f750b : sbb dword ptr [rax], eax ; add rsp, 8 ; ret
0x00000000004f6c78 : sbb dword ptr [rax], eax ; jmp 0x4f6c42
0x00000000004c37c6 : sbb dword ptr [rax], eax ; leave ; ret
0x00000000007ebdc1 : sbb dword ptr [rax], eax ; mov cs, word ptr [rdi] ; or eax, 0xb2001382 ; syscall
0x00000000004f3eff : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x50e9e0] ; call rax
0x00000000004f3dd6 : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x50eb09] ; call rax
0x00000000004f3c0c : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x50ecd3] ; call rax
0x00000000004f37ba : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x50f125] ; call rax
0x00000000004f3648 : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x50f297] ; call rax
0x00000000004f341b : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x50f4c4] ; call rax
0x00000000004f32cd : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x50f612] ; call rax
0x00000000004f31a7 : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x50f738] ; call rax
0x00000000004f28a7 : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x510030] ; call rax
0x00000000004f1555 : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x511382] ; call rax
0x00000000004f0b98 : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x511d3f] ; call rax
0x00000000004f0a9f : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x511e38] ; call rax
0x00000000004f0838 : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x51209f] ; call rax
0x00000000004f0761 : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x512176] ; call rax
0x00000000004f051a : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x5123bd] ; call rax
0x00000000004f03a7 : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x512530] ; call rax
0x00000000004ec121 : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x5167b6] ; call rax
0x00000000004ec049 : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x51688e] ; call rax
0x00000000004e9693 : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x519244] ; call rax
0x00000000004e91cd : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x51970a] ; call rax
0x00000000004e8cfd : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x519bda] ; call rax
0x00000000004e7bfc : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x51acdb] ; call rax
0x00000000004e4710 : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x51e1c7] ; call rax
0x00000000004e348f : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x51f448] ; call rax
0x00000000004e32cc : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x51f613] ; call rax
0x00000000004e2a16 : sbb dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x51fec1] ; call rax
0x0000000000521949 : sbb dword ptr [rax], eax ; nop ; nop dword ptr [rax] ; ret
0x00000000007cd8b8 : sbb dword ptr [rax], eax ; rcr dword ptr [rcx], 5 ; clc ; sbb dword ptr [rax], eax ; retf
0x00000000007ea3ce : sbb dword ptr [rax], eax ; ret
0x00000000007eb827 : sbb dword ptr [rax], eax ; ret 0x1b04
0x00000000007c6b53 : sbb dword ptr [rax], eax ; ret 0x519
0x00000000007cd8be : sbb dword ptr [rax], eax ; retf
0x00000000007cc433 : sbb dword ptr [rax], eax ; retf 0x507
0x0000000000714671 : sbb dword ptr [rax], ebp ; add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret 0x5d
0x0000000000480f41 : sbb dword ptr [rax], ebx ; call rax
0x00000000004b9d31 : sbb dword ptr [rax], edi ; ret 0x3f75
0x000000000057ecff : sbb dword ptr [rax], edx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000677596 : sbb dword ptr [rbp + 0x69480150], ecx ; ret 0xca00
0x00000000006595dd : sbb dword ptr [rbp + 2], edi ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e83c3 : sbb dword ptr [rbp - 0x2f00ffbf], esp ; leave ; ret
0x0000000000414649 : sbb dword ptr [rbp - 0x76b7ffda], esi ; ret
0x0000000000676796 : sbb dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000058806b : sbb dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00000000004a841f : sbb dword ptr [rbx + 0x63489c45], ecx ; ror byte ptr [rax + 0x63], 1 ; ret
0x00000000007c7057 : sbb dword ptr [rbx], eax ; add byte ptr [rax], al ; retf
0x0000000000522dce : sbb dword ptr [rbx], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000550f2e : sbb dword ptr [rbx], ecx ; jmp rax
0x0000000000512e66 : sbb dword ptr [rcx + rcx*4 - 0x19], ecx ; call rcx
0x00000000004c9eab : sbb dword ptr [rcx], eax ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000006ac649 : sbb dword ptr [rdi], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000745e41 : sbb dword ptr [rdi], eax ; add byte ptr [rax + 0x66], ah ; jmp rax
0x0000000000745e49 : sbb dword ptr [rdi], eax ; add byte ptr [rax], dh ; call qword ptr [eax]
0x00000000007c6a0a : sbb dword ptr [rdi], eax ; ror dword ptr [rsi], cl ; xchg byte ptr fs:[rdx], bl ; add ah, dl ; syscall
0x000000000050f66a : sbb dword ptr [rdi], ebp ; call rax
0x000000000050f769 : sbb dword ptr [rdi], ebp ; mov rdi, rbx ; call rax
0x000000000058f9cb : sbb dword ptr [rdi], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050f208 : sbb dword ptr [rdi], edx ; add byte ptr [rax - 0x7d], cl ; cli ; add cl, byte ptr [rax - 0x77] ; ret
0x0000000000490f5c : sbb dword ptr [rdi], edx ; call rax
0x000000000044ed6f : sbb dword ptr [rdi], esp ; add cl, cl ; ret
0x00000000004b9793 : sbb dword ptr [rdx + 0x1d], esp ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000514143 : sbb dword ptr [rdx + 0x6f2120], edi ; mov rdi, rbx ; call rax
0x00000000005abd23 : sbb dword ptr [rdx - 0x76b7ffee], ecx ; ret
0x00000000005e0e85 : sbb dword ptr [rdx], eax ; call rax
0x000000000061f022 : sbb dword ptr [rdx], ecx ; add cl, cl ; ret
0x00000000004e0fcb : sbb dword ptr [rdx], edx ; call rax
0x0000000000623a27 : sbb dword ptr [rip + 0x458d4800], eax ; ror byte ptr [rcx - 0x77], 1 ; ret 0xdee8
0x000000000079d0a5 : sbb dword ptr [rip - 0x182ab800], eax ; call rsp
0x000000000073fe09 : sbb dword ptr [rip - 0x1af7a000], eax ; call qword ptr [rax]
0x000000000073fdf9 : sbb dword ptr [rip - 0x1af7c000], eax ; jmp rax
0x000000000073fdc9 : sbb dword ptr [rip - 0x1af8e000], eax ; jmp qword ptr [rax]
0x000000000048a683 : sbb dword ptr [rip - 0x76b7ffdd], esi ; ret
0x0000000000547d49 : sbb dword ptr [rsi + 0x13], edi ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007dcd08 : sbb dword ptr [rsi + rax], -0x3b ; sbb al, 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb al, 0x21 ; retf 0x1c
0x00000000005e80c7 : sbb dword ptr [rsi - 0x76b7fff7], eax ; ret
0x0000000000694fb3 : sbb dword ptr [rsi - 0x76b7fffe], edx ; ret 0xc7
0x00000000005e88bd : sbb dword ptr [rsi - 2], esp ; dec ecx ; ret
0x0000000000572d60 : sbb dword ptr [rsi], edx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000490f9e : sbb dword ptr ds:[rdi], edx ; call rax
0x00000000007f0974 : sbb eax, 0x151db205 ; ret
0x00000000007f5ec1 : sbb eax, 0x1da805 ; ret
0x000000000051af84 : sbb eax, 0x284a8948 ; add rsp, 8 ; ret
0x000000000051c542 : sbb eax, 0x3901c083 ; ret
0x0000000000570b65 : sbb eax, 0x458b0049 ; adc byte ptr [rcx], bh ; ret
0x000000000051a0b1 : sbb eax, 0x48000002 ; mov edi, ebx ; call rax
0x000000000050254f : sbb eax, 0x48000992 ; add esp, 8 ; ret
0x00000000007e3785 : sbb eax, 0x51b9003 ; ret 0x31d
0x00000000007ebb23 : sbb eax, 0x51dc500 ; retf 0x1d
0x00000000007c82dc : sbb eax, 0x51e9b03 ; retf 0x31e
0x000000000063b01f : sbb eax, 0x58000997 ; pop rbx ; pop rbp ; ret
0x00000000004ec614 : sbb eax, 0x58b4800 ; ret
0x00000000004b330c : sbb eax, 0x58b4800 ; retf
0x00000000007f0db5 : sbb eax, 0x6058c09 ; out dx, eax ; or eax, dword ptr [rbx] ; ret 0x7105
0x00000000007f9c30 : sbb eax, 0x65d80e ; ret 0x51d
0x00000000007f6634 : sbb eax, 0x707fa00 ; retf 0x23
0x00000000007c5d76 : sbb eax, 0x7ef205 ; ret 0x31e
0x0000000000745ee1 : sbb eax, 0x84900007 ; call rax
0x0000000000539a11 : sbb eax, 0x8900147b ; ret
0x000000000068c89e : sbb eax, 0x89480003 ; ret
0x000000000062f5d1 : sbb eax, 0x89480005 ; ret
0x000000000065c7fb : sbb eax, 0x89480006 ; ret 0xc748
0x000000000060ee9e : sbb eax, 0x89480007 ; ret
0x000000000059e8fd : sbb eax, 0x8948000e ; ret
0x00000000005a2a07 : sbb eax, 0x89480013 ; ret
0x000000000054c815 : sbb eax, 0x89480017 ; ret
0x0000000000439f0e : sbb eax, 0x8948001d ; ret
0x000000000041a912 : sbb eax, 0x8948001f ; ret
0x000000000040a93c : sbb eax, 0x89480020 ; ret
0x00000000004ac819 : sbb eax, 0x89480021 ; ret 0x8948
0x000000000045e935 : sbb eax, 0x89480022 ; ret
0x000000000044dda3 : sbb eax, 0x89480023 ; ret
0x000000000041c8cb : sbb eax, 0x8948002a ; ret 0x8948
0x00000000004de59d : sbb eax, 0x8949001a ; ret
0x00000000007ad4ad : sbb eax, 0x8ae00006 ; in eax, dx ; jmp qword ptr [rax]
0x00000000007ad505 : sbb eax, 0x8af80006 ; in eax, dx ; call qword ptr [rdi]
0x00000000004accef : sbb eax, 0x8be4100 ; ret 0x6e
0x000000000078d4f5 : sbb eax, 0x9fb80004 ; loope 0x78d502 ; retf 0
0x00000000007f7043 : sbb eax, 0xa6003fd0 ; sbb al, 6 ; retf 0x3e
0x00000000007217fc : sbb eax, 0xb05bdeae ; ret 0x9b64
0x00000000007e8a00 : sbb eax, 0xb40013ec ; or dword ptr [rcx], ebx ; retf 0x12
0x00000000007eca2b : sbb eax, 0xb70508c3 ; or al, 0x1f ; retf
0x000000000061b86f : sbb eax, 0xc9000a5e ; ret
0x000000000051a65f : sbb eax, 0xe8000002 ; retf 0x166e
0x000000000065ff74 : sbb eax, 0xe9000000 ; ret
0x00000000005a0e49 : sbb eax, 0xebffffff ; test byte ptr [rax - 0x77], cl ; ret
0x00000000006609e3 : sbb eax, dword ptr [rax] ; add byte ptr [rbx], ch ; push rsp ; add rax, rcx ; ret
0x000000000065e647 : sbb eax, dword ptr [rax] ; add byte ptr [rsi + 1], bh ; call rcx
0x000000000061535c : sbb eax, dword ptr [rax] ; add cl, cl ; ret
0x00000000004c9fc4 : sbb eax, dword ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004f0d3a : sbb eax, dword ptr [rax] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000520022 : sbb eax, dword ptr [rax] ; lea rdi, qword ptr [rsp + 0x10] ; call 0x51c2c9
0x00000000004ca033 : sbb eax, dword ptr [rax] ; leave ; ret
0x00000000007f653c : sbb eax, dword ptr [rax] ; mov ch, 1 ; add al, 0xc6 ; sbb dword ptr [rax], eax ; ret
0x00000000004f4144 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x50e79b] ; call rax
0x00000000004f40e4 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x50e7fb] ; call rax
0x00000000004f4084 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x50e85b] ; call rax
0x00000000004f4024 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x50e8bb] ; call rax
0x00000000004f3abb : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x50ee24] ; call rax
0x00000000004f3a69 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x50ee76] ; call rax
0x00000000004f34c8 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x50f417] ; call rax
0x00000000004f346a : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x50f475] ; call rax
0x00000000004d9792 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x529145] ; call rax
0x00000000004d938e : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x529549] ; call rax
0x00000000004d903d : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x52989a] ; call rax
0x00000000004d8ea1 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x529a36] ; call rax
0x00000000004d8da6 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x529b31] ; call rax
0x00000000004d8ca8 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x529c2f] ; call rax
0x00000000004d8baa : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x529d2d] ; call rax
0x00000000004d8aac : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x529e2b] ; call rax
0x00000000004d7b0b : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x52adcc] ; call rax
0x00000000004d6c16 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x52bcc1] ; call rax
0x00000000004cd9fa : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x534edd] ; call rax
0x00000000004cd190 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x535747] ; call rax
0x00000000004cce95 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x535a42] ; call rax
0x00000000004cc284 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x536653] ; call rax
0x00000000004cc167 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x536770] ; call rax
0x00000000004cbc52 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x536c85] ; call rax
0x00000000004cb77b : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x53715c] ; call rax
0x00000000004ca7d6 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x538101] ; call rax
0x00000000004c8cf3 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x539be4] ; call rax
0x00000000004c8663 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x53a274] ; call rax
0x00000000004c850d : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x53a3d2] ; call rax
0x00000000004c8418 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x53a4bf] ; call rax
0x00000000004c7f76 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x53a969] ; call rax
0x00000000004c56b4 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x53d223] ; call rax
0x00000000004c5301 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x53d5d6] ; call rax
0x00000000004c4f27 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x53d9b0] ; call rax
0x00000000004c4b8b : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x53dd4c] ; call rax
0x00000000004c44e6 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x53e3f1] ; call rax
0x00000000004c3b3b : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x53ed9c] ; call rax
0x00000000004c3130 : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x53f7a7] ; call rax
0x00000000004c27cc : sbb eax, dword ptr [rax] ; mov rax, qword ptr [rip + 0x54010b] ; call rax
0x00000000007f5e14 : sbb eax, dword ptr [rax] ; ret
0x00000000007f5d3f : sbb eax, dword ptr [rax] ; ret 0x504
0x00000000007d072e : sbb eax, dword ptr [rax] ; retf
0x00000000007ebe6a : sbb eax, dword ptr [rax] ; retf 0x201b
0x00000000007cdf85 : sbb eax, dword ptr [rax] ; retf 0x51b
0x00000000007f5d45 : sbb eax, dword ptr [rax] ; xlatb ; add al, 5 ; int1 ; sbb al, byte ptr [rax] ; ret
0x000000000067e52c : sbb eax, dword ptr [rbx + 0x490f31c3] ; ret
0x0000000000739a19 : sbb eax, dword ptr [rbx] ; add ah, ah ; mov ebx, eax ; call qword ptr [rax]
0x000000000068ca9a : sbb eax, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e6d6c : sbb eax, dword ptr [rbx] ; lodsb al, byte ptr [rsi] ; sbb al, 5 ; retf 0x31e
0x00000000004fff4c : sbb eax, dword ptr [rcx - 0x7d] ; ret 0xe925
0x00000000005f0cf2 : sbb eax, dword ptr [rcx] ; call rax
0x0000000000745e99 : sbb eax, dword ptr [rdi] ; add al, ah ; outsb dx, byte ptr [rsi] ; call qword ptr [rax]
0x0000000000745e91 : sbb eax, dword ptr [rdi] ; add byte ptr [rax + 0x6e], dl ; jmp rax
0x00000000007bd2f5 : sbb eax, dword ptr [rdi] ; add byte ptr [rax + 0xd], bl ; int1 ; call qword ptr [rax]
0x0000000000451bce : sbb eax, dword ptr [rdi] ; add cl, cl ; ret
0x00000000007c9738 : sbb eax, dword ptr [rdi] ; ret 0x50c
0x0000000000540521 : sbb eax, dword ptr [rdx + 0x19] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000404221 : sbb eax, dword ptr [rip + 0x5d5b002d] ; pop r12 ; ret
0x000000000079d275 : sbb eax, dword ptr [rip - 0x1825f600] ; jmp qword ptr [rdi]
0x00000000007e6d69 : sbb eax, dword ptr [rip - 0x53fce401] ; sbb al, 5 ; retf 0x31e
0x00000000007ad2fd : sbb eax, dword ptr [rsi] ; add al, al ; je 0x7ad2f6 ; call rsi
0x000000000065ca2b : sbb eax, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x000000000065c9eb : sbb eax, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0xc748
0x00000000007eb545 : sbb eax, dword ptr [rsi] ; ret
0x00000000007dc666 : sbb eax, dword ptr [rsi] ; ret 0x3b
0x0000000000661b9d : sbb eax, eax ; add eax, 3 ; ret
0x00000000006d49f1 : sbb eax, eax ; cmp qword ptr [rsi + 8], rcx ; cmova eax, edx ; ret
0x00000000006b787e : sbb eax, ebp ; in al, dx ; ret
0x00000000006b71bc : sbb eax, ebp ; scasb al, byte ptr [rdi] ; retf -0x2c
0x00000000004fe6db : sbb ebp, dword ptr [rax + rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040eafd : sbb ebp, dword ptr [rbx] ; add cl, cl ; ret
0x000000000069f744 : sbb ebp, dword ptr [rcx] ; retf
0x000000000050fbf8 : sbb ebp, dword ptr [rdi] ; mov dword ptr [rdi + 8], esi ; ret
0x00000000007420cd : sbb ebp, eax ; call rax
0x000000000073aba5 : sbb ebp, ebx ; call rax
0x000000000074ef81 : sbb ebp, ecx ; call rsp
0x00000000007b0d29 : sbb ebp, esi ; jmp rdi
0x000000000074012d : sbb ebp, esp ; call qword ptr [rax]
0x00000000004336b5 : sbb ebx, -1 ; dec ecx ; ret
0x0000000000528c69 : sbb ebx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004948b1 : sbb ebx, dword ptr [rbp - 0x76b7ffde] ; ret 0x8948
0x0000000000470d61 : sbb ebx, dword ptr [rcx] ; call rax
0x0000000000410d9c : sbb ebx, dword ptr [rdi] ; call rax
0x00000000007e51fa : sbb ebx, dword ptr [rdi] ; ret 0x60d
0x00000000004def69 : sbb ebx, dword ptr [rdx] ; add byte ptr [rcx], bh ; ret 0x127c
0x00000000007392c5 : sbb ebx, eax ; jmp qword ptr [rax]
0x0000000000739d8d : sbb ebx, ecx ; jmp rax
0x000000000076de09 : sbb ebx, edx ; jmp qword ptr [rcx]
0x0000000000737535 : sbb ebx, edx ; jmp rax
0x000000000065322d : sbb ecx, 2 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000056381c : sbb ecx, dword ptr [rax + 0x29] ; ret 0x148
0x00000000007224df : sbb ecx, dword ptr [rax + 0x3e] ; rol byte ptr [rbx + 0x2d], cl ; pop rcx ; outsb dx, byte ptr [rsi] ; sti ; ret
0x00000000005342bc : sbb ecx, dword ptr [rax - 0x77] ; ret
0x00000000006cdcfc : sbb ecx, dword ptr [rax - 0x7d] ; ret 0x3108
0x000000000055b566 : sbb ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000749561 : sbb ecx, dword ptr [rax] ; add al, dh ; jnp 0x749564 ; call rax
0x00000000004fc7db : sbb ecx, dword ptr [rbx + 0x18] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005cdfa3 : sbb ecx, dword ptr [rbx] ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000550dba : sbb ecx, dword ptr [rbx] ; jmp rax
0x00000000007d7d29 : sbb ecx, dword ptr [rbx] ; shl byte ptr [rax + rax], 1 ; ret 0x1b
0x000000000067af34 : sbb ecx, dword ptr [rdi] ; ret
0x00000000006c5aac : sbb ecx, dword ptr [rdi] ; xchg eax, esp ; shl byte ptr [rcx], 0xd0 ; ret
0x00000000004f8389 : sbb ecx, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004d2be6 : sbb ecx, dword ptr [rip - 0x70410000] ; ret 0x6e
0x000000000074efc1 : sbb ecx, ebp ; call rsp
0x000000000075b719 : sbb ecx, edx ; jmp rbx
0x00000000007f833c : sbb ecx, esi ; add al, byte ptr [rax] ; retf 0x2702
0x0000000000734a7d : sbb ecx, esi ; jmp rax
0x000000000073d8dd : sbb ecx, esp ; jmp rax
0x00000000005cbfa2 : sbb edi, dword ptr [rcx] ; ret
0x00000000005141bd : sbb edi, dword ptr [rdx + 0x6f2120] ; mov rdi, rbx ; call rax
0x00000000004e0eb1 : sbb edi, dword ptr [rdx - 0x76b80000] ; ret
0x00000000006be4d0 : sbb edi, dword ptr [rsi + 0x48000034] ; add esp, 8 ; ret
0x0000000000570b21 : sbb edi, dword ptr [rsi + rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000074a65d : sbb edi, ecx ; jmp rax
0x000000000074b65d : sbb edi, edx ; jmp rax
0x0000000000748df5 : sbb edi, esi ; call rax
0x0000000000405023 : sbb edi, esi ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000054ef22 : sbb edx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054c9ce : sbb edx, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000490cfe : sbb edx, dword ptr [rdi] ; call rax
0x0000000000673b71 : sbb edx, dword ptr [rsi - 1] ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b5aaa : sbb edx, edi ; dec ecx ; ret
0x00000000007386cd : sbb edx, esi ; jmp qword ptr [rax]
0x0000000000584991 : sbb esi, dword ptr [rax + 0x29480010] ; ret
0x00000000005047b1 : sbb esi, dword ptr [rbx - 0x76b7ffe8] ; ret
0x00000000006c6f49 : sbb esi, dword ptr [rbx] ; ret
0x0000000000511621 : sbb esi, dword ptr [rcx] ; sbb al, 0 ; call 0x6ce056
0x0000000000648123 : sbb esi, eax ; or byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000007444a5 : sbb esi, ebp ; jmp qword ptr [rax]
0x0000000000744495 : sbb esi, ebp ; jmp rax
0x0000000000734a4d : sbb esi, ecx ; call qword ptr [rax]
0x0000000000748e05 : sbb esi, edi ; call qword ptr [rax]
0x00000000004e9114 : sbb esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000007339d8 : sbb esi, edi ; stc ; jmp qword ptr [rsi]
0x0000000000405321 : sbb esi, esp ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000043b9dd : sbb esp, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000005ed591 : sbb esp, dword ptr [rdx + rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000074016d : sbb esp, ebp ; jmp qword ptr [rax]
0x00000000005e0f21 : sbb qword ptr [r10], rax ; call rax
0x000000000054f07b : sbb r10b, byte ptr [r11] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005bd1d7 : sbb r11b, r8b ; nop word ptr [rax + rax] ; ret
0x0000000000577f5c : sbb r8b, bpl ; cmp eax, 0xe8ffffbc ; retf 0x1095
0x000000000051ed26 : sbb r8b, bpl ; ret
0x0000000000577950 : sbb r8b, bpl ; ret 0xffff
0x0000000000577156 : sbb r8b, bpl ; retf -1
0x00000000005e0e8d : sbb r8b, byte ptr [r10] ; call rax
0x000000000065e088 : sbb r8b, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000410d9b : sbb rbx, qword ptr [r15] ; call rax
0x00000000005dd096 : scasb al, byte ptr [rdi] ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007ddc1a : scasb al, byte ptr [rdi] ; adc al, byte ptr [rax] ; call qword ptr [rcx]
0x000000000055665a : scasb al, byte ptr [rdi] ; adc al, byte ptr [rax] ; mov r13d, eax ; call qword ptr [rip + 0x4ac282]
0x00000000007e60d9 : scasb al, byte ptr [rdi] ; adc al, byte ptr [rax] ; retf 0x512
0x000000000057e688 : scasb al, byte ptr [rdi] ; adc byte ptr [rax], al ; nop ; nop dword ptr [rax] ; ret
0x00000000005666c9 : scasb al, byte ptr [rdi] ; adc dword ptr [rax], eax ; mov r13d, eax ; call qword ptr [rip + 0x49c213]
0x0000000000526663 : scasb al, byte ptr [rdi] ; adc eax, 0xc4894100 ; call qword ptr [rip + 0x4dc279]
0x0000000000752000 : scasb al, byte ptr [rdi] ; adc ecx, esi ; call rcx
0x00000000007cfca9 : scasb al, byte ptr [rdi] ; add al, 6 ; ret 4
0x000000000067facb : scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; add rsp, 8 ; ret
0x00000000007d54f7 : scasb al, byte ptr [rdi] ; add al, byte ptr [rcx] ; mov edx, 0x502 ; retf 0x502
0x000000000041c244 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005907a8 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x634801c2], al ; retf 0x3489
0x0000000000766575 : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; retf -0x2a25
0x00000000007dc40a : scasb al, byte ptr [rdi] ; add dword ptr [rax], edx ; retf 1
0x00000000007c6572 : scasb al, byte ptr [rdi] ; add eax, 0x5db05 ; retf 0x505
0x0000000000626672 : scasb al, byte ptr [rdi] ; add eax, 0xc4894100 ; call qword ptr [rip + 0x3dc26a]
0x0000000000741b09 : scasb al, byte ptr [rdi] ; add eax, 0xe795c000 ; call qword ptr [rax]
0x0000000000568dbc : scasb al, byte ptr [rdi] ; add eax, dword ptr [rax] ; jmp 0x568d90
0x00000000006466c9 : scasb al, byte ptr [rdi] ; add eax, dword ptr [rax] ; mov r14d, eax ; call qword ptr [rip + 0x3bc213]
0x00000000007ddf68 : scasb al, byte ptr [rdi] ; add eax, dword ptr [rax] ; retf 0x501
0x000000000067fe2e : scasb al, byte ptr [rdi] ; add r8b, byte ptr [r8] ; add rsp, 8 ; ret
0x000000000061e61e : scasb al, byte ptr [rdi] ; and byte ptr [rdx], cl ; add cl, cl ; ret
0x0000000000483a18 : scasb al, byte ptr [rdi] ; and eax, dword ptr [rax] ; leave ; ret
0x000000000074804d : scasb al, byte ptr [rdi] ; cmc ; call qword ptr [rax]
0x000000000065e22d : scasb al, byte ptr [rdi] ; cmp al, byte ptr [rax] ; add rsp, 8 ; ret
0x00000000005cef36 : scasb al, byte ptr [rdi] ; cmp dword ptr [rbx], eax ; call rax
0x00000000007217fd : scasb al, byte ptr [rdi] ; ficomp word ptr [rbx - 0x50] ; ret 0x9b64
0x00000000005d4f36 : scasb al, byte ptr [rdi] ; fld dword ptr [rdx] ; call rax
0x000000000074729d : scasb al, byte ptr [rdi] ; hlt ; jmp qword ptr [rax]
0x000000000052949f : scasb al, byte ptr [rdi] ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x000000000052681e : scasb al, byte ptr [rdi] ; jge 0x526840 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000073701c : scasb al, byte ptr [rdi] ; jge 0x736ff4 ; call qword ptr [rax]
0x0000000000618aee : scasb al, byte ptr [rdi] ; jle 0x618b00 ; add cl, cl ; ret
0x00000000004d911e : scasb al, byte ptr [rdi] ; jne 0x4d9144 ; add cl, cl ; ret
0x0000000000722f5e : scasb al, byte ptr [rdi] ; jne 0x722f5a ; add cl, ch ; ret 0x7f83
0x0000000000722f5e : scasb al, byte ptr [rdi] ; jne 0x722f5b ; add cl, ch ; ret 0x7f83
0x000000000074338c : scasb al, byte ptr [rdi] ; jno 0x74337d ; jmp qword ptr [rax]
0x000000000079c6b0 : scasb al, byte ptr [rdi] ; mov cl, 0xe7 ; call rsp
0x0000000000433ffe : scasb al, byte ptr [rdi] ; mov ecx, 0x29480025 ; ret
0x00000000007354a4 : scasb al, byte ptr [rdi] ; mov ecx, edi ; call qword ptr [rax]
0x00000000005b66c9 : scasb al, byte ptr [rdi] ; or al, 0 ; mov ebx, eax ; call qword ptr [rip + 0x44c214]
0x000000000074b629 : scasb al, byte ptr [rdi] ; or byte ptr [rax], al ; adc byte ptr [rdx], dl ; cli ; jmp qword ptr [rax]
0x000000000074b619 : scasb al, byte ptr [rdi] ; or byte ptr [rax], al ; push rax ; adc edx, edi ; call rax
0x0000000000623a57 : scasb al, byte ptr [rdi] ; or dword ptr [rax], eax ; leave ; ret
0x00000000006398e0 : scasb al, byte ptr [rdi] ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000004d3602 : scasb al, byte ptr [rdi] ; or eax, 0x8fbf0000 ; ret 0x6e
0x0000000000736a6c : scasb al, byte ptr [rdi] ; or edx, edx ; call rax
0x00000000007b1951 : scasb al, byte ptr [rdi] ; out dx, al ; call qword ptr [rdx]
0x0000000000738fd4 : scasb al, byte ptr [rdi] ; pop rsi ; xlatb ; call qword ptr [rax]
0x000000000075f0f8 : scasb al, byte ptr [rdi] ; rcl dl, 1 ; jmp qword ptr [rcx]
0x00000000005464b6 : scasb al, byte ptr [rdi] ; ret
0x00000000004f38a0 : scasb al, byte ptr [rdi] ; ret 0x18
0x0000000000431400 : scasb al, byte ptr [rdi] ; ret 0x6d
0x000000000053d3fe : scasb al, byte ptr [rdi] ; retf
0x00000000006b71be : scasb al, byte ptr [rdi] ; retf -0x2c
0x00000000004de59c : scasb al, byte ptr [rdi] ; sbb eax, 0x8949001a ; ret
0x00000000004d59ea : scasb al, byte ptr [rdi] ; sti ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000062fbda : scasb al, byte ptr [rdi] ; syscall
0x00000000005f12fe : scasb al, byte ptr [rdi] ; xchg dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007390fd : scasb al, byte ptr [rdi] ; xlatb ; jmp qword ptr [rax]
0x00000000005ade48 : scasb al, byte ptr [rdi] ; xor al, 0xd ; add byte ptr [rax - 0x77], cl ; ret
0x000000000059c4fe : scasb al, byte ptr [rdi] ; xor al, 0xf ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000491936 : scasb al, byte ptr [rdi] ; xorps xmm0, xmmword ptr [rax] ; call rax
0x00000000005565e9 : scasd eax, dword ptr [rdi] ; adc al, byte ptr [rax] ; mov r12d, eax ; call qword ptr [rip + 0x4ac2f3]
0x00000000007966d5 : scasd eax, dword ptr [rdi] ; add al, 0 ; jle 0x79671f ; in eax, -1 ; retf
0x00000000007debac : scasd eax, dword ptr [rdi] ; add al, 0 ; ret
0x00000000007f2776 : scasd eax, dword ptr [rdi] ; add al, 0 ; xchg eax, ebp ; add eax, 0x5059a05 ; retf 0x505
0x000000000051e11d : scasd eax, dword ptr [rdi] ; add al, 0x1a ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007f99ff : scasd eax, dword ptr [rdi] ; add al, 0x1c ; cwde ; sahf ; add dword ptr [rax], eax ; retf
0x00000000007c70d8 : scasd eax, dword ptr [rdi] ; add al, 0xaa ; or eax, dword ptr [rax] ; add ah, ah ; syscall
0x00000000007f88f9 : scasd eax, dword ptr [rdi] ; add al, 3 ; retf
0x00000000007e721b : scasd eax, dword ptr [rdi] ; add al, 5 ; ret
0x000000000068decf : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; retf
0x000000000068219e : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; retf
0x00000000004249df : scasd eax, dword ptr [rdi] ; add byte ptr es:[rax + 0x29], cl ; ret
0x000000000041fe59 : scasd eax, dword ptr [rdi] ; add byte ptr es:[rax - 0x77], cl ; ret
0x0000000000658c66 : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000007c9120 : scasd eax, dword ptr [rdi] ; add eax, 0x5db05 ; retf
0x00000000007c3587 : scasd eax, dword ptr [rdi] ; add eax, 0x5dc05 ; retf
0x00000000007cac7b : scasd eax, dword ptr [rdi] ; add ecx, ebp ; and al, 0 ; ret
0x0000000000563018 : scasd eax, dword ptr [rdi] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000665f50 : scasd eax, dword ptr [rdi] ; and al, 0x17 ; add byte ptr [rax], al ; or bl, dh ; ret
0x0000000000749f8d : scasd eax, dword ptr [rdi] ; clc ; call rax
0x000000000074808d : scasd eax, dword ptr [rdi] ; cmc ; call rax
0x00000000007f6fe8 : scasd eax, dword ptr [rdi] ; cmp eax, dword ptr [rax] ; ret
0x0000000000668c69 : scasd eax, dword ptr [rdi] ; fcos ; nop dword ptr [rax] ; ret
0x0000000000781c19 : scasd eax, dword ptr [rdi] ; fdivp st(7) ; ret
0x00000000006c46ac : scasd eax, dword ptr [rdi] ; fimul word ptr [rax + 1] ; retf
0x0000000000424d35 : scasd eax, dword ptr [rdi] ; fistp dword ptr [rbp] ; call rax
0x00000000006c52b9 : scasd eax, dword ptr [rdi] ; fld qword ptr [rcx] ; retf
0x00000000007a9ca9 : scasd eax, dword ptr [rdi] ; in al, dx ; jmp rsp
0x00000000005f6f1d : scasd eax, dword ptr [rdi] ; jbe 0x5f6f32 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a301d : scasd eax, dword ptr [rdi] ; mov ch, 0x11 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005f948d : scasd eax, dword ptr [rdi] ; mov dl, 0xd ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006141b6 : scasd eax, dword ptr [rdi] ; mov rax, qword ptr [rbp - 0x18] ; nop ; leave ; ret
0x00000000004d7f14 : scasd eax, dword ptr [rdi] ; mov rax, qword ptr [rbp - 8] ; nop ; leave ; ret
0x00000000006d2727 : scasd eax, dword ptr [rdi] ; mov word ptr [rax + rbx*2], fs ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x00000000004f3135 : scasd eax, dword ptr [rdi] ; not dword ptr [rax] ; call rax
0x000000000062390e : scasd eax, dword ptr [rdi] ; or dword ptr [rax], eax ; leave ; ret
0x0000000000639780 : scasd eax, dword ptr [rdi] ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000065e12d : scasd eax, dword ptr [rdi] ; pop rdx ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000005f3684 : scasd eax, dword ptr [rdi] ; ret
0x00000000006a2ff7 : scasd eax, dword ptr [rdi] ; ret 0x148
0x00000000004b527f : scasd eax, dword ptr [rdi] ; ret 0x1c
0x00000000006b3be7 : scasd eax, dword ptr [rdi] ; ret 0x3145
0x00000000004ab912 : scasd eax, dword ptr [rdi] ; ret 0x3d48
0x00000000006b3c1e : scasd eax, dword ptr [rdi] ; ret 0x8348
0x00000000004add4e : scasd eax, dword ptr [rdi] ; ret 0x8589
0x00000000005f9db3 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000006b60ed : scasd eax, dword ptr [rdi] ; ret 0x8b48
0x00000000006b4c05 : scasd eax, dword ptr [rdi] ; ret 0x8d48
0x0000000000677dda : scasd eax, dword ptr [rdi] ; ret 0xba49
0x00000000006d6b81 : scasd eax, dword ptr [rdi] ; ret 0xf8ed
0x000000000055b17d : scasd eax, dword ptr [rdi] ; ret 0xffff
0x00000000006a131f : scasd eax, dword ptr [rdi] ; retf
0x00000000006650ff : scasd eax, dword ptr [rdi] ; retf 0x14c
0x00000000006a1590 : scasd eax, dword ptr [rdi] ; ror byte ptr [rcx + 0xf], 1 ; scasd eax, dword ptr [rdi] ; ret
0x0000000000550f2d : scasd eax, dword ptr [rdi] ; sbb dword ptr [rbx], ecx ; jmp rax
0x000000000044dabd : scasd eax, dword ptr [rdi] ; shl byte ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000074b305 : scasd eax, dword ptr [rdi] ; stc ; jmp rax
0x000000000061bd1d : scasd eax, dword ptr [rdi] ; sub byte ptr [rdx], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000007d321e : scasd eax, dword ptr [rdi] ; syscall
0x00000000007222f8 : scasd eax, dword ptr [rdi] ; xlatb ; loopne 0x72228b ; retf 0x5cb0
0x000000000040a0b9 : scasd eax, dword ptr [rdi] ; xor ah, byte ptr [rax] ; nop ; leave ; ret
0x00000000006a78ca : scasd eax, dword ptr [rdi] ; xor eax, 0xc4834800 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000424a64 : scasq rax, qword ptr [rdi] ; add byte ptr es:[rax + 0x29], cl ; ret
0x0000000000781c18 : scasq rax, qword ptr [rdi] ; fdivp st(7) ; ret
0x00000000006d6b80 : scasq rax, qword ptr [rdi] ; ret 0xf8ed
0x00000000006aa9d4 : seta al ; ret
0x0000000000606586 : seta al ; test cl, al ; je 0x606551 ; xor eax, eax ; ret
0x00000000006ac172 : setb al ; ret
0x00000000005fada9 : setbe al ; jmp 0x5fad7d
0x00000000006bd3bf : setbe al ; or eax, edx ; ret
0x000000000060651d : setbe al ; ret
0x00000000006ce3fb : sete al ; add rsp, 0x18 ; neg eax ; ret
0x00000000006ce436 : sete al ; add rsp, 0x28 ; neg eax ; ret
0x0000000000506e5d : sete al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004f45c2 : sete al ; add rsp, 8 ; ret
0x00000000006c5aad : sete al ; and eax, edx ; ret
0x0000000000666a40 : sete al ; movzx eax, al ; ret
0x000000000040df5d : sete al ; nop ; pop rbp ; ret
0x00000000006bd3a2 : sete al ; or eax, edx ; ret
0x000000000065971b : sete al ; pop rbx ; ret
0x000000000053ae13 : sete al ; pop rdx ; ret
0x00000000004f74c4 : sete al ; ret
0x0000000000675b9c : sete al ; test dl, al ; jne 0x675bb0 ; pop rbx ; ret
0x0000000000692671 : sete al ; test dl, al ; jne 0x692688 ; pop rbx ; ret
0x00000000004b792d : sete byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000007bfe53 : sete byte ptr [rdx] ; ret 0x17
0x00000000006b2079 : sete byte ptr [rip + 0x358244] ; ret
0x000000000066d4c9 : sete byte ptr [rip + 0x39be18] ; ret
0x000000000068936d : setg al ; add rsp, 8 ; ret
0x0000000000510fc9 : setg al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000068e758 : setg al ; pop rbx ; ret
0x0000000000517f57 : setg al ; ret
0x0000000000667060 : setg cl ; cmp cl, dl ; jne 0x66706f ; ret
0x0000000000667090 : setg cl ; cmp cl, dl ; jne 0x66709f ; ret
0x00000000006670c0 : setg cl ; cmp cl, dl ; jne 0x6670cf ; ret
0x00000000006670f0 : setg cl ; cmp cl, dl ; jne 0x6670ff ; ret
0x0000000000676f5e : setg cl ; cmp cl, dl ; jne 0x676f6d ; ret
0x0000000000676fce : setg cl ; cmp cl, dl ; jne 0x676fdd ; ret
0x00000000006770b0 : setg cl ; cmp cl, dl ; jne 0x6770bf ; ret
0x00000000006bda85 : setge al ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000526b78 : setge al ; ret
0x000000000052af66 : setl al ; add rsp, 8 ; ret
0x000000000052afa9 : setl al ; ret
0x0000000000666fce : setl cl ; cmp cl, dl ; jne 0x666fdd ; ret
0x0000000000666ffe : setl cl ; cmp cl, dl ; jne 0x66700d ; ret
0x000000000066702e : setl cl ; cmp cl, dl ; jne 0x66703d ; ret
0x0000000000677040 : setl cl ; cmp cl, dl ; jne 0x67704f ; ret
0x00000000006892a7 : setle al ; add rsp, 8 ; ret
0x00000000006894ec : setle al ; and al, r8b ; je 0x689500 ; ret
0x00000000005d3379 : setle al ; nop ; pop rbp ; ret
0x0000000000517ee5 : setle al ; ret
0x000000000051b48c : setne al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000508e60 : setne al ; add rsp, 8 ; ret
0x0000000000661af7 : setne al ; movzx eax, al ; pop r14 ; ret
0x00000000004417f9 : setne al ; nop ; leave ; ret
0x000000000040d86a : setne al ; nop ; pop rbp ; ret
0x0000000000522b30 : setne al ; or eax, edx ; xor eax, 1 ; ret
0x000000000050276b : setne al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005632a6 : setne al ; pop rbx ; ret
0x000000000050aab3 : setne al ; ret
0x0000000000522afb : setne bh ; test r10b, dil ; je 0x522ab5 ; ret
0x000000000052872b : setne bh ; test r10b, dil ; je 0x5286e5 ; ret
0x00000000005440fb : setne bh ; test r10b, dil ; je 0x5440b5 ; ret
0x00000000005679eb : setne bh ; test r10b, dil ; je 0x5679a5 ; ret
0x000000000059173b : setne bh ; test r10b, dil ; je 0x5916f5 ; ret
0x00000000005aa02b : setne bh ; test r10b, dil ; je 0x5a9fe5 ; ret
0x000000000054cec3 : setne cl ; mov eax, ecx ; add rsp, 8 ; ret
0x0000000000522afa : setne dil ; test r10b, dil ; je 0x522ab6 ; ret
0x000000000052872a : setne dil ; test r10b, dil ; je 0x5286e6 ; ret
0x00000000005440fa : setne dil ; test r10b, dil ; je 0x5440b6 ; ret
0x00000000005679ea : setne dil ; test r10b, dil ; je 0x5679a6 ; ret
0x000000000059173a : setne dil ; test r10b, dil ; je 0x5916f6 ; ret
0x00000000005aa02a : setne dil ; test r10b, dil ; je 0x5a9fe6 ; ret
0x0000000000684036 : setp al ; ret
0x0000000000610ced : sets al ; dec dword ptr [rax + 0x63] ; xor cl, byte ptr [rax - 0x77] ; ret
0x000000000040627c : shl ah, 0x2c ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x0000000000738e50 : shl ah, 2 ; add byte ptr [rsi], bl ; cli ; salc ; jmp rax
0x000000000054f8d7 : shl al, 0x6f ; add byte ptr [rax - 0x77], cl ; ja 0x54f8ef ; ret
0x000000000076ccc0 : shl al, 1 ; fcos ; retf 1
0x00000000005c13a2 : shl bh, 0xb ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000722996 : shl bh, 1 ; ret
0x00000000007d7d2b : shl byte ptr [rax + rax], 1 ; ret 0x1b
0x00000000007907e0 : shl byte ptr [rax - 0x1e], 1 ; jmp qword ptr [rbx]
0x0000000000450683 : shl byte ptr [rax], 0x8b ; add byte ptr [rcx], bh ; ret 0x775
0x0000000000791a60 : shl byte ptr [rax], 0xe3 ; jmp qword ptr [rax]
0x0000000000746d54 : shl byte ptr [rax], 1 ; hlt ; jmp qword ptr [rax]
0x000000000079f460 : shl byte ptr [rbp - 0x18], 1 ; jmp qword ptr [rbx]
0x0000000000746d50 : shl byte ptr [rbx + 7], 1 ; add al, dl ; and ah, dh ; jmp qword ptr [rax]
0x0000000000442aa2 : shl byte ptr [rbx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044dabe : shl byte ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007b86c0 : shl byte ptr [rcx - 0x10], 1 ; call qword ptr [rdx]
0x00000000007404fc : shl byte ptr [rcx - 0x1b], 1 ; call rax
0x00000000006c5aaf : shl byte ptr [rcx], 0xd0 ; ret
0x000000000069d5c3 : shl byte ptr [rcx], 1 ; and edi, eax ; mov eax, edi ; or eax, edx ; ret
0x000000000069ca15 : shl byte ptr [rcx], 1 ; ret 0xd089
0x00000000006a870a : shl byte ptr [rcx], cl ; add byte ptr [rax], al ; nop ; pop rbx ; ret
0x000000000053ed68 : shl byte ptr [rcx], cl ; ret 0xb70f
0x0000000000747c30 : shl byte ptr [rdi + 0x51d00007], 0xf5 ; call qword ptr [rax]
0x0000000000737460 : shl byte ptr [rdi + 2], 0 ; pop rsi ; call rdx
0x000000000053e37e : shl byte ptr [rdi + rbp*2 - 0x2076b800], 1 ; call rax
0x000000000053ea84 : shl byte ptr [rdi + rbp*2 - 0x76b400], 1 ; call rax
0x00000000007381c0 : shl byte ptr [rdi - 0x4b39fffe], 0xd4 ; jmp rax
0x0000000000734c08 : shl byte ptr [rdi - 0x7e19ffff], 0xce ; jmp rax
0x00000000005c488e : shl byte ptr [rdi], 1 ; jno 0x5c489a ; xor eax, eax ; call 0x680b94
0x00000000007e6eb7 : shl byte ptr [rdi], 2 ; retf 0x35
0x00000000004412e4 : shl byte ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000569892 : shl byte ptr [rdx + 0x11], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000074b3f0 : shl byte ptr [rdx - 0x32affff8], 0xf9 ; jmp rax
0x0000000000744ac8 : shl byte ptr [rdx - 0x6e33fffa], 0xee ; jmp rax
0x00000000007e362b : shl byte ptr [rdx], 1 ; add eax, edx ; syscall
0x000000000047d5b6 : shl byte ptr [rdx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007f09f2 : shl byte ptr [rdx], cl ; add byte ptr [rcx + 0x522], bh ; retf
0x0000000000423ad0 : shl byte ptr [rip + 0x4803eb00], 0x89 ; ret
0x0000000000746120 : shl byte ptr [rip - 0x678ffff9], 0xf2 ; jmp rax
0x0000000000530efd : shl byte ptr [rsi + 0x44], 0x89 ; ret
0x00000000005123ec : shl byte ptr [rsi + 0x45], 0x89 ; pop rsp ; ret 0x6610
0x0000000000747c08 : shl byte ptr [rsi + 0x4a800007], 1 ; cmc ; jmp qword ptr [rax]
0x00000000007419b0 : shl byte ptr [rsi + 0x6cc00005], 0xe7 ; jmp rax
0x00000000006eac08 : shl byte ptr [rsi + 0x6e], 1 ; add byte ptr [rax], al ; retf 0x4aa3
0x0000000000682dbb : shl byte ptr [rsi + 0xf], 0x2e ; ret 0x5e77
0x0000000000683973 : shl byte ptr [rsi + 0xf], 1 ; retf 0x6e77
0x0000000000682144 : shl byte ptr [rsi + 0xf], 1 ; sub dl, al ; add rsp, 8 ; ret
0x00000000006a4fc9 : shl byte ptr [rsi + 0xf], 1 ; sub dl, al ; ret
0x0000000000683165 : shl byte ptr [rsi + 0xf], cl ; retf 0x7c7a
0x000000000068319b : shl byte ptr [rsi + 0xf], cl ; retf 0xa7a
0x000000000073dce4 : shl byte ptr [rsi - 0x1f], 1 ; call rax
0x000000000053e780 : shl byte ptr [rsi - 0x77], 1 ; add al, 0x48 ; add esp, 8 ; ret
0x0000000000734bc8 : shl byte ptr [rsi - 0x7fa1ffff], 0xce ; jmp rax
0x00000000007622f0 : shl byte ptr [rsi], 0xd4 ; jmp qword ptr [rbx]
0x000000000074080d : shl ch, 1 ; jmp qword ptr [rax]
0x000000000074083d : shl ch, cl ; call rax
0x0000000000757eb0 : shl dl, 0xcf ; call qword ptr [rcx]
0x00000000006821af : shl dword ptr [r14 + 0xf], 1 ; ret
0x00000000006820d5 : shl dword ptr [r14 + 0xf], 1 ; ret 0x9b0f
0x0000000000472828 : shl dword ptr [rax], cl ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000472814 : shl dword ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000612e5f : shl dword ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000669712 : shl dword ptr [rbp + 0x39], 1 ; add byte ptr [rax], al ; jne 0x669727 ; ret
0x00000000007200e9 : shl dword ptr [rbp], 0 ; add byte ptr [rax], al ; add al, al ; ret
0x0000000000669933 : shl dword ptr [rbx + 0x39], 0 ; ret
0x000000000044dbc3 : shl dword ptr [rbx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005fdf69 : shl dword ptr [rdi + 0xd], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004469b0 : shl dword ptr [rdi], 1 ; add cl, cl ; ret
0x00000000004041b8 : shl dword ptr [rdi], cl ; add byte ptr [rbx - 0x77feff83], al ; ret
0x00000000006d6aa0 : shl dword ptr [rdi], cl ; ret
0x000000000047d6c8 : shl dword ptr [rdx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000045333e : shl dword ptr [rdx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000069fa2c : shl dword ptr [rsi + 0x44], -0x77 ; or al, 0x72 ; jne 0x69fa21 ; pop rbx ; ret
0x000000000069fc3d : shl dword ptr [rsi + 0x44], -0x77 ; or al, 0x72 ; jne 0x69fc31 ; pop rbx ; ret
0x0000000000682287 : shl dword ptr [rsi + 0xf], 0x28 ; retf
0x0000000000682177 : shl dword ptr [rsi + 0xf], 0x28 ; retf 0x3fe9
0x00000000006821b0 : shl dword ptr [rsi + 0xf], 1 ; ret
0x00000000006820d6 : shl dword ptr [rsi + 0xf], 1 ; ret 0x9b0f
0x000000000050faaa : shl dword ptr [rsi - 0x77], 0x54 ; ret
0x000000000053ec1a : shl dword ptr [rsi - 0x77], 0x74 ; ret
0x000000000049d2df : shl dword ptr [rsi], 0 ; add byte ptr [rcx], bh ; ret
0x000000000073d4cd : shl eax, -1 ; mov byte ptr [rsp + rax], al ; ret 0xffe0
0x0000000000789a99 : shl eax, -1 ; retf
0x00000000006bc562 : shl eax, 0x10 ; or rax, rcx ; ret
0x00000000006a1836 : shl eax, 0x20 ; or rax, rsi ; ret
0x000000000068f360 : shl eax, 1 ; jne 0x68f359 ; mov eax, 1 ; ret
0x00000000006318a8 : shl eax, 4 ; mov eax, dword ptr [rdi + rax + 0x58] ; ret
0x000000000054f46c : shl eax, 5 ; mov byte ptr [rsi + rax + 8], 0 ; pop rbx ; ret
0x000000000053ddc5 : shl eax, 6 ; add rax, 0xc0 ; ret
0x0000000000673b95 : shl eax, 7 ; add rax, 0x600 ; ret
0x00000000006be3fd : shl eax, 8 ; add eax, esi ; ret
0x00000000006bd381 : shl eax, 8 ; lea eax, dword ptr [r8 + rax] ; add eax, edx ; ret
0x00000000006ce59f : shl eax, cl ; not rax ; and qword ptr [rdi + rdx*8], rax ; ret
0x00000000007407ad : shl ebp, -1 ; and byte ptr [rsi + 5], cl ; add al, ah ; ret
0x000000000053ede4 : shl ecx, 0x20 ; or rdx, rcx ; or rax, rdx ; ret
0x00000000006806db : shl ecx, 1 ; add eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000079cee1 : shl edi, 1 ; call rbx
0x000000000059ddcb : shl edi, 4 ; add rdi, 8 ; call 0x6aa859
0x0000000000674109 : shl edi, cl ; cmp byte ptr [rax], al ; jmp rax
0x0000000000664b19 : shl edx, 0x10 ; or rax, rdx ; pop r15 ; ret
0x00000000006646a4 : shl edx, 0x10 ; or rax, rdx ; ret
0x00000000006c96d1 : shl edx, 0x18 ; or eax, edx ; ret
0x00000000006a2067 : shl edx, 0x20 ; mov eax, ecx ; or rax, rdx ; pop rbx ; ret
0x00000000006a1f0e : shl edx, 0x20 ; or rax, rdx ; ret
0x00000000006163d3 : shl edx, 3 ; add rax, rdx ; nop ; pop rbp ; ret
0x00000000006c5ca2 : shl edx, 6 ; or eax, edx ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000006ce55f : shl edx, cl ; or qword ptr [rdi + rax*8], rdx ; ret
0x00000000006ce9be : shl edx, cl ; or r8, rdx ; mov qword ptr [rsi], r8 ; ret
0x0000000000688757 : shl esi, 0x20 ; mov eax, eax ; or rax, rsi ; ret
0x0000000000688766 : shl esi, 0x20 ; or rax, rsi ; ret
0x00000000006a175d : shl esi, 0x20 ; sub eax, ecx ; or rax, rsi ; ret
0x00000000006881df : shl esi, cl ; and edx, 0x1f ; or byte ptr [rdi + rdx], sil ; ret
0x0000000000472813 : shl qword ptr [r8], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006bc561 : shl rax, 0x10 ; or rax, rcx ; ret
0x00000000006a1835 : shl rax, 0x20 ; or rax, rsi ; ret
0x00000000006318a7 : shl rax, 4 ; mov eax, dword ptr [rdi + rax + 0x58] ; ret
0x0000000000664b18 : shl rdx, 0x10 ; or rax, rdx ; pop r15 ; ret
0x00000000006646a3 : shl rdx, 0x10 ; or rax, rdx ; ret
0x00000000006a1f0d : shl rdx, 0x20 ; or rax, rdx ; ret
0x00000000006163d2 : shl rdx, 3 ; add rax, rdx ; nop ; pop rbp ; ret
0x00000000006ce55e : shl rdx, cl ; or qword ptr [rdi + rax*8], rdx ; ret
0x00000000006ce9bd : shl rdx, cl ; or r8, rdx ; mov qword ptr [rsi], r8 ; ret
0x0000000000688756 : shl rsi, 0x20 ; mov eax, eax ; or rax, rsi ; ret
0x0000000000688765 : shl rsi, 0x20 ; or rax, rsi ; ret
0x00000000006a175c : shl rsi, 0x20 ; sub eax, ecx ; or rax, rsi ; ret
0x0000000000565722 : shr al, 0 ; mov ah, 0x11 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a10e4 : shr al, 0x10 ; add cl, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000602b12 : shr al, 0x10 ; loopne 0x602b26 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000057393a : shr al, 0x10 ; ret 0x10
0x000000000064383b : shr al, 0x11 ; ret
0x000000000051dfe3 : shr al, 0x11 ; xor edx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006555e2 : shr al, 0x12 ; mov ebp, 0x89480002 ; ret
0x00000000004f4efb : shr al, 0x13 ; mov esp, 0x89480018 ; ret
0x00000000004f50e1 : shr al, 0x13 ; ret 0x18
0x000000000060ee9b : shr al, 0x13 ; sbb eax, 0x89480007 ; ret
0x00000000006c0a4c : shr al, 0x14 ; int1 ; sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000005340d2 : shr al, 0x14 ; retf 0x14
0x00000000005c4172 : shr al, 0x14 ; retf 0xb
0x00000000005c394b : shr al, 0x15 ; ret 0xb
0x00000000006450df : shr al, 0x15 ; ret 3
0x00000000005897de : shr al, 0x16 ; jnp 0x5897fa ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f4870 : shr al, 0x16 ; ret
0x000000000056a933 : shr al, 0x17 ; call qword ptr [rbx]
0x00000000005b9997 : shr al, 0x17 ; jb 0x5b99b0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000599edd : shr al, 0x17 ; je 0x599ef8 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000508149 : shr al, 0x17 ; jp 0x50816d ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006595db : shr al, 0x19 ; jge 0x6595ea ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000547d47 : shr al, 0x19 ; jle 0x547d67 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006524a5 : shr al, 0x19 ; out 2, al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000643831 : shr al, 0x19 ; ret
0x00000000005c3931 : shr al, 0x19 ; ret 0xb
0x00000000006340a5 : shr al, 0x19 ; retf 4
0x0000000000603895 : shr al, 0x19 ; rol dword ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005455da : shr al, 0x1a ; mov ebp, 0x89480013 ; ret
0x00000000004fe6d9 : shr al, 0x1b ; sub al, 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000515fd8 : shr al, 0x1c ; mov bl, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000502da5 : shr al, 0x1d ; ficom word ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b56c9 : shr al, 0x1d ; mov ah, 0xc ; add byte ptr [rax - 0x77], cl ; ret
0x000000000051a2a0 : shr al, 0x1e ; push -0x76b7ffea ; ret
0x000000000065319e : shr al, 0x20 ; fld dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000643fc6 : shr al, 0x20 ; retf
0x000000000059312c : shr al, 0x20 ; retf 0xe
0x00000000004fd6d3 : shr al, 0x21 ; cmp al, 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005742d3 : shr al, 0x21 ; rcl byte ptr [rax], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005c848d : shr al, 0x21 ; xchg dword ptr [rbx], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000523f3e : shr al, 0x22 ; mov esp, 0x89480015 ; ret
0x0000000000560a8b : shr al, 0x23 ; add dword ptr [rdx], edx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006453d1 : shr al, 0x23 ; mov edi, 0x89480003 ; ret
0x00000000006486d1 : shr al, 0x23 ; mov word ptr [rbx], es ; add byte ptr [rax - 0x77], cl ; ret
0x000000000059ff8b : shr al, 0x23 ; or al, 0xe ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000543929 : shr al, 0x23 ; ret 0x13
0x000000000051d7d0 : shr al, 0x24 ; cmp edx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000063619a : shr al, 0x24 ; test eax, 0x89480004 ; ret
0x00000000005759cf : shr al, 0x25 ; mov ecx, 0x89480010 ; ret
0x00000000005b48c1 : shr al, 0x25 ; ret 0xc
0x000000000058a0ce : shr al, 0x26 ; jb 0x58a0ea ; add byte ptr [rax - 0x77], cl ; ret
0x000000000062f5ce : shr al, 0x26 ; sbb eax, 0x89480005 ; ret
0x00000000005036cd : shr al, 0x27 ; fcom qword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000579ecd : shr al, 0x27 ; je 0x579eea ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000523121 : shr al, 0x29 ; retf 0x15
0x00000000006458ca : shr al, 0x2a ; mov edx, 0x89480003 ; ret
0x0000000000643822 : shr al, 0x2a ; ret
0x000000000054391f : shr al, 0x2b ; ret 0x13
0x00000000005a47c9 : shr al, 0x2b ; retf
0x00000000006442c8 : shr al, 0x2c ; rol byte ptr [rbx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006441c8 : shr al, 0x2c ; rol dword ptr [rbx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058f9c8 : shr al, 0x2c ; sbb dword ptr [rdi], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000063dec8 : shr al, 0x2c ; xor al, 4 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a0a91 : shr al, 0x2d ; add byte ptr [rsi], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000592033 : shr al, 0x2d ; fisttp dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b54b9 : shr al, 0x2d ; mov dh, 0xc ; add byte ptr [rax - 0x77], cl ; ret
0x000000000052d691 : shr al, 0x2d ; xor al, 0x15 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054c230 : shr al, 0x30 ; cmp dword ptr [rbx], edx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000559330 : shr al, 0x30 ; push -0x76b7ffee ; ret
0x000000000058bfc3 : shr al, 0x31 ; push rbx ; str word ptr [rax - 0x77] ; ret
0x000000000062dfb2 : shr al, 0x32 ; sub al, 5 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000062f62d : shr al, 0x33 ; add eax, 0x89480005 ; ret
0x000000000052e72c : shr al, 0x34 ; adc al, 0x15 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000649ac0 : shr al, 0x34 ; js 0x649acf ; add cl, ch ; retf -2
0x00000000005c3018 : shr al, 0x34 ; retf
0x00000000005305bf : shr al, 0x35 ; or eax, 0x89480015 ; ret
0x0000000000546abf : shr al, 0x35 ; test al, 0x13 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000644fbe : shr al, 0x36 ; ret
0x0000000000503015 : shr al, 0x37 ; retf
0x00000000004f50bc : shr al, 0x38 ; ret 0x18
0x0000000000524427 : shr al, 0x39 ; mov bh, 0x15 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b47ad : shr al, 0x39 ; ret
0x0000000000643913 : shr al, 0x39 ; ret 3
0x0000000000634085 : shr al, 0x39 ; retf 4
0x0000000000534fba : shr al, 0x3a ; ret
0x00000000004fe5ba : shr al, 0x3a ; sub eax, 0x89480018 ; ret
0x00000000005c4325 : shr al, 0x3b ; mov eax, 0x8948000b ; ret
0x000000000051864b : shr al, 0x3b ; test dword ptr [rsi], edx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000052d583 : shr al, 0x3b ; xor eax, 0x89480015 ; ret
0x0000000000589db8 : shr al, 0x3c ; jne 0x589dd4 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058b5b8 : shr al, 0x3c ; pop rbp ; str word ptr [rax - 0x77] ; ret
0x00000000004048b8 : shr al, 0x3c ; retf 0x27
0x00000000005491e5 : shr al, 0x3d ; jns 0x549205 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005232b7 : shr al, 0x3d ; loopne 0x5232d9 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b4fa9 : shr al, 0x3d ; mov ebx, 0x8948000c ; ret
0x00000000005b40a9 : shr al, 0x3d ; retf 0xc
0x000000000064dfb6 : shr al, 0x3e ; xor eax, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006af121 : shr al, 0x3f ; or bh, ch ; dec dword ptr [rax - 0x77] ; ret
0x000000000054380b : shr al, 0x3f ; ret
0x00000000006440a7 : shr al, 0x3f ; retf 3
0x00000000006cbc0a : shr al, 0x40 ; in al, dx ; std ; dec dword ptr [rax - 0x77] ; ret 0x8b9
0x000000000060fd7e : shr al, 0x40 ; or eax, 0x89480007 ; ret
0x0000000000604146 : shr al, 0x40 ; retf 7
0x000000000064e2a6 : shr al, 0x40 ; sub byte ptr [rbx], al ; add byte ptr [rcx + 0x63], cl ; ret 0xd989
0x000000000057da6e : shr al, 0x40 ; xor dword ptr [rax], edx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006add08 : shr al, 0x42 ; retf
0x000000000059851c : shr al, 0x44 ; jbe 0x598537 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054701c : shr al, 0x44 ; mov edx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050c91c : shr al, 0x44 ; xor dl, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000560ba1 : shr al, 0x45 ; call qword ptr [rcx]
0x00000000006452a1 : shr al, 0x45 ; mov eax, 0x89480003 ; ret
0x000000000054f079 : shr al, 0x45 ; sbb dl, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000063e668 : shr al, 0x46 ; and eax, 0x89480004 ; ret
0x0000000000523106 : shr al, 0x46 ; retf 0x15
0x00000000006add92 : shr al, 0x48 ; retf
0x0000000000500c3d : shr al, 0x49 ; call qword ptr [rdi]
0x00000000005657d9 : shr al, 0x49 ; mov bl, 0x11 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005089ab : shr al, 0x49 ; mov dword ptr [rdi], edx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000573803 : shr al, 0x49 ; ret
0x00000000005447ab : shr al, 0x49 ; retf
0x000000000065d0eb : shr al, 0x4b ; cmp al, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000512315 : shr al, 0x4b ; fcom dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054c0fe : shr al, 0x4c ; out 0x15, eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000059fdd5 : shr al, 0x4d ; or eax, 0x8948000e ; ret
0x0000000000502ffe : shr al, 0x4e ; retf
0x0000000000500c5f : shr al, 0x4f ; call qword ptr [rdi]
0x00000000004f485f : shr al, 0x4f ; ret
0x0000000000644096 : shr al, 0x50 ; retf 3
0x00000000005350a3 : shr al, 0x51 ; ret 0x14
0x000000000053dcf9 : shr al, 0x51 ; retf
0x000000000051fda2 : shr al, 0x52 ; adc eax, 0x89480016 ; ret
0x00000000005930a2 : shr al, 0x52 ; loop 0x5930bd ; add byte ptr [rax - 0x77], cl ; ret
0x000000000059e7a2 : shr al, 0x52 ; sub ecx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000579fa0 : shr al, 0x54 ; jae 0x579fbd ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000598a0c : shr al, 0x54 ; jno 0x598a27 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004fa15a : shr al, 0x54 ; push 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000064339f : shr al, 0x55 ; fild word ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005938f7 : shr al, 0x55 ; ret 0xe
0x00000000005c30f5 : shr al, 0x55 ; retf 0xb
0x00000000005fd10b : shr al, 0x55 ; sub cl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000560b90 : shr al, 0x56 ; call qword ptr [rcx]
0x0000000000652530 : shr al, 0x56 ; out 2, al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000404068 : shr al, 0x56 ; retf 0x27
0x0000000000508d9e : shr al, 0x56 ; test dword ptr [rdi], edx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000056e609 : shr al, 0x57 ; adc eax, 0x89480011 ; ret
0x000000000064369d : shr al, 0x57 ; fadd qword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058969c : shr al, 0x58 ; jl 0x5896b8 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000404056 : shr al, 0x58 ; retf
0x00000000005730f4 : shr al, 0x58 ; retf 0x10
0x000000000062d69b : shr al, 0x59 ; cmp al, 5 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000578607 : shr al, 0x59 ; jne 0x578624 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000056a8f0 : shr al, 0x5a ; call qword ptr [rbx]
0x0000000000643799 : shr al, 0x5b ; fild dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006387f1 : shr al, 0x5b ; jae 0x638801 ; add cl, ch ; ret
0x000000000059fe2b : shr al, 0x5b ; or eax, 0x8948000e ; ret
0x0000000000554763 : shr al, 0x5b ; ret
0x00000000004f952a : shr al, 0x5c ; jbe 0x4f954f ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000589a98 : shr al, 0x5c ; js 0x589ab4 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000500b65 : shr al, 0x5d ; add byte ptr [rax], bl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000629997 : shr al, 0x5d ; jns 0x6299a9 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000644897 : shr al, 0x5d ; retf 3
0x0000000000570096 : shr al, 0x5e ; adc dl, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006847b0 : shr al, 0x5e ; ret
0x0000000000643995 : shr al, 0x5f ; fld dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005737ec : shr al, 0x60 ; ret
0x0000000000515094 : shr al, 0x60 ; ret 0x16
0x0000000000404126 : shr al, 0x60 ; retf 0x27
0x00000000005c904c : shr al, 0x62 ; jnp 0x5c9064 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000571c92 : shr al, 0x62 ; not byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000053924b : shr al, 0x63 ; jns 0x53926c ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000515f91 : shr al, 0x63 ; mov bl, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006437e9 : shr al, 0x63 ; ret
0x00000000004f5022 : shr al, 0x64 ; mov ebx, 0x89480018 ; ret
0x00000000005a405a : shr al, 0x64 ; retf 0xd
0x000000000053d159 : shr al, 0x65 ; cmp dword ptr [rax + rax], edx ; nop ; ret
0x000000000064578f : shr al, 0x65 ; mov ebx, 0x89480003 ; ret
0x000000000059478f : shr al, 0x65 ; retf
0x000000000058938e : shr al, 0x66 ; jg 0x5893aa ; add byte ptr [rax - 0x77], cl ; ret
0x000000000064e17f : shr al, 0x67 ; sub dword ptr [rbx], eax ; add byte ptr [rcx + 0x63], cl ; ret 0xd989
0x0000000000535256 : shr al, 0x68 ; mov eax, 0x89480014 ; ret
0x000000000064568c : shr al, 0x68 ; mov esp, 0x89480003 ; ret
0x000000000057568c : shr al, 0x68 ; mov esp, 0x89480010 ; ret
0x00000000004f4f8c : shr al, 0x68 ; ret
0x00000000005c2fe2 : shr al, 0x68 ; retf
0x00000000005b477d : shr al, 0x69 ; ret
0x00000000005b30e3 : shr al, 0x69 ; retf 0xc
0x000000000055378a : shr al, 0x6a ; fist dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000513754 : shr al, 0x6a ; rcl dword ptr [rsi], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005438e2 : shr al, 0x6a ; ret 0x13
0x00000000005938e2 : shr al, 0x6a ; ret 0xe
0x0000000000502fe2 : shr al, 0x6a ; retf
0x00000000006437df : shr al, 0x6b ; ret
0x00000000005c391a : shr al, 0x6c ; ror byte ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000653487 : shr al, 0x6d ; fiadd word ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b5879 : shr al, 0x6d ; mov dl, 0xc ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005aa887 : shr al, 0x6d ; push 0xd ; add byte ptr [rax - 0x77], cl ; ret
0x000000000059ff40 : shr al, 0x6e ; or al, 0xe ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000534078 : shr al, 0x6e ; retf 0x14
0x0000000000643f86 : shr al, 0x6e ; rol dword ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000064e286 : shr al, 0x6e ; xor byte ptr [rbx], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000056da18 : shr al, 0x6e ; xor dword ptr [rcx], edx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005c2f17 : shr al, 0x6f ; fmul qword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000065243f : shr al, 0x6f ; out 2, eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a37dd : shr al, 0x6f ; ret
0x0000000000404f83 : shr al, 0x71 ; ret
0x0000000000643f75 : shr al, 0x71 ; retf
0x00000000005b30d9 : shr al, 0x71 ; retf 0xc
0x0000000000630582 : shr al, 0x72 ; or eax, 0x89480005 ; ret
0x00000000005438d8 : shr al, 0x72 ; ret 0x13
0x00000000006b5082 : shr al, 0x72 ; ret 0xfffc
0x0000000000502fd8 : shr al, 0x72 ; retf
0x0000000000655172 : shr al, 0x74 ; mov ecx, 0x89480002 ; ret
0x000000000056a27f : shr al, 0x75 ; jo 0x56a29d ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000602b39 : shr al, 0x75 ; loopne 0x602b4d ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a84c5 : shr al, 0x75 ; ret 0x12
0x0000000000610a48 : shr al, 0x76 ; add byte ptr [rdi], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000534f48 : shr al, 0x76 ; mov ebx, 0x89480014 ; ret
0x00000000005b507e : shr al, 0x76 ; ret 0xc
0x000000000059477e : shr al, 0x76 ; retf
0x000000000052a962 : shr al, 0x78 ; call qword ptr [rdi]
0x000000000064507c : shr al, 0x78 ; ret 3
0x000000000064427c : shr al, 0x78 ; rol byte ptr [rbx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000555d7b : shr al, 0x79 ; mov ch, 0x12 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005c38e7 : shr al, 0x79 ; ret 0xb
0x00000000005746e6 : shr al, 0x7a ; mov ah, 0x10 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005c1be5 : shr al, 0x7b ; fisttp word ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f920b : shr al, 0x7b ; jns 0x4f9230 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050020b : shr al, 0x7b ; or dword ptr [rax], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006add5f : shr al, 0x7b ; retf
0x000000000064dd79 : shr al, 0x7b ; xor eax, 0x89480003 ; ret
0x0000000000643678 : shr al, 0x7c ; fadd qword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058b378 : shr al, 0x7c ; pop rdi ; str word ptr [rax - 0x77] ; ret
0x00000000005c6077 : shr al, 0x7d ; mov dl, 0xb ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a02b9 : shr al, 0x7d ; or byte ptr [rsi], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005c38cd : shr al, 0x7d ; ret 0xb
0x0000000000649408 : shr al, 0x7e ; ja 0x649418 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005737cc : shr al, 0x7e ; ret
0x000000000052f675 : shr al, 0x7f ; sbb al, 0x15 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005fe2cb : shr al, 0x7f ; sub byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000500e73 : shr al, 0x81 ; add al, 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000509773 : shr al, 0x81 ; jnp 0x509797 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000644f73 : shr al, 0x81 ; ret
0x00000000006a30cb : shr al, 0x81 ; retf -3
0x0000000000643765 : shr al, 0x81 ; rol dword ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000549372 : shr al, 0x82 ; jg 0x549392 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000581171 : shr al, 0x83 ; add dword ptr [rax], edx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000065322b : shr al, 0x83 ; fld dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000602d71 : shr al, 0x83 ; in eax, 7 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005730c6 : shr al, 0x84 ; retf 0x10
0x00000000005c843a : shr al, 0x84 ; xchg byte ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000516ddb : shr al, 0x85 ; lea edx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000514f6f : shr al, 0x85 ; ret
0x000000000067956e : shr al, 0x86 ; jge 0x67957b ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b2fc6 : shr al, 0x86 ; retf
0x00000000004fe33c : shr al, 0x86 ; sub byte ptr [rax], bl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000051396d : shr al, 0x87 ; fst dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005938c3 : shr al, 0x87 ; ret 0xe
0x0000000000635136 : shr al, 0x88 ; mov ecx, 0x89480004 ; ret
0x0000000000599e6b : shr al, 0x89 ; je 0x599e86 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000064606b : shr al, 0x89 ; mov dl, 3 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f876b : shr al, 0x89 ; mov ebx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a3ffd : shr al, 0x89 ; retf
0x00000000004f8efb : shr al, 0x8b ; jl 0x4f8f20 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006281d5 : shr al, 0x8b ; jns 0x6281e7 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000644769 : shr al, 0x8b ; retf
0x0000000000523cd4 : shr al, 0x8c ; mov esi, 0x89480015 ; ret
0x00000000005b38c0 : shr al, 0x8c ; ret 0xc
0x00000000005b5a59 : shr al, 0x8d ; mov al, 0xc ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b5159 : shr al, 0x8d ; mov ecx, 0x8948000c ; ret
0x0000000000545066 : shr al, 0x8e ; ret 0x13
0x000000000053dcbc : shr al, 0x8e ; retf
0x000000000059ee65 : shr al, 0x8f ; and al, 0xe ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005243d1 : shr al, 0x8f ; mov bh, 0x15 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000404765 : shr al, 0x8f ; retf
0x0000000000604865 : shr al, 0x8f ; retf 7
0x0000000000510b2e : shr al, 0x90 ; call qword ptr [rsi]
0x00000000005c30b8 : shr al, 0x92 ; retf 0xb
0x000000000057e8cd : shr al, 0x93 ; adc dl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a37b7 : shr al, 0x93 ; ret
0x00000000005c2fb7 : shr al, 0x93 ; retf
0x00000000005319cc : shr al, 0x94 ; loope 0x5319ed ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000515e60 : shr al, 0x94 ; mov ah, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005c30cc : shr al, 0x94 ; retf 0xb
0x000000000063402a : shr al, 0x94 ; retf 4
0x0000000000645f5f : shr al, 0x95 ; mov bl, 3 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005248c9 : shr al, 0x97 ; mov dl, 0x15 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006537b5 : shr al, 0x97 ; ret
0x000000000061055c : shr al, 0x98 ; or eax, 0x89480007 ; ret
0x00000000005438b4 : shr al, 0x98 ; ret 0x13
0x0000000000502fb4 : shr al, 0x98 ; retf
0x0000000000626a5b : shr al, 0x99 ; test al, 5 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000404114 : shr al, 0x9a ; retf 0x27
0x0000000000605d59 : shr al, 0x9b ; mov ch, 7 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000595d58 : shr al, 0x9c ; mov ch, 0xe ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006438b0 : shr al, 0x9c ; ret 3
0x0000000000644858 : shr al, 0x9c ; retf 3
0x00000000005b4c49 : shr al, 0x9d ; mov esi, 0x8948000c ; ret
0x0000000000517bad : shr al, 0x9d ; sub al, 0x19 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005949c2 : shr al, 0x9e ; mov cl, 0xe ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000556fc1 : shr al, 0x9f ; mov edx, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000550a55 : shr al, 0x9f ; or byte ptr [rbx], dl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f987c : shr al, 0xa ; jae 0x4f98a1 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050de7c : shr al, 0xa ; sub eax, 0x89480017 ; ret
0x00000000004b518c : shr al, 0xa0 ; ret
0x0000000000502faa : shr al, 0xa0 ; retf
0x000000000064e0c0 : shr al, 0xa0 ; sbb al, byte ptr [rbx] ; add byte ptr [rcx + 0x63], cl ; ret 0xd989
0x0000000000657de5 : shr al, 0xa1 ; lea eax, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058b953 : shr al, 0xa1 ; pop rcx ; str word ptr [rax - 0x77] ; ret
0x0000000000645452 : shr al, 0xa2 ; mov esi, 0x89480003 ; ret
0x00000000005438a8 : shr al, 0xa2 ; ret 0x13
0x000000000059e952 : shr al, 0xa2 ; sub dword ptr [rsi], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054ee1b : shr al, 0xa3 ; sbb al, 0x13 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000064dd43 : shr al, 0xa3 ; sub eax, 0x89480003 ; ret
0x00000000005a481a : shr al, 0xa4 ; ret 0xd
0x00000000006438a6 : shr al, 0xa4 ; ret 3
0x0000000000643f50 : shr al, 0xa4 ; rol dword ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f547c : shr al, 0xa6 ; mov dh, 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000056504e : shr al, 0xa6 ; ret 0x11
0x00000000005230a4 : shr al, 0xa6 ; retf 0x15
0x00000000005fcd7b : shr al, 0xa7 ; cmp eax, 0x89480008 ; ret
0x00000000006c4867 : shr al, 0xa7 ; ret 0xfffb
0x0000000000554816 : shr al, 0xa8 ; ret 0x12
0x0000000000512fa4 : shr al, 0xa8 ; retf
0x0000000000643906 : shr al, 0xa8 ; rol byte ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000598d4b : shr al, 0xa9 ; test dword ptr [rsi], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000603904 : shr al, 0xaa ; rol byte ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000056c6b6 : shr al, 0xaa ; xor al, 0x11 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005f96da : shr al, 0xac ; je 0x5f96ef ; add byte ptr [rax - 0x77], cl ; ret
0x000000000059389e : shr al, 0xac ; ret 0xe
0x000000000051da47 : shr al, 0xad ; cmp byte ptr [rsi], dl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000643247 : shr al, 0xad ; loopne 0x643257 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000644747 : shr al, 0xad ; retf
0x000000000062fbd8 : shr al, 0xae ; syscall
0x00000000005ade46 : shr al, 0xae ; xor al, 0xd ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000593141 : shr al, 0xb ; retf 0xe
0x000000000056dab3 : shr al, 0xb ; xor byte ptr [rcx], dl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054c19a : shr al, 0xb0 ; out 0x15, al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004ff272 : shr al, 0xb0 ; sbb byte ptr [rax], bl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000646243 : shr al, 0xb1 ; mov al, 3 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000645a43 : shr al, 0xb1 ; mov eax, 0x89480003 ; ret
0x00000000006047fb : shr al, 0xb3 ; ret
0x0000000000564741 : shr al, 0xb3 ; retf
0x00000000004fd7d3 : shr al, 0xb3 ; xor ebx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000589940 : shr al, 0xb4 ; jns 0x58995c ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000506dac : shr al, 0xb4 ; lea edx, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000547209 : shr al, 0xb5 ; cwde ; adc eax, dword ptr [rax] ; nop ; ret
0x0000000000653209 : shr al, 0xb5 ; fadd dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000643897 : shr al, 0xb5 ; ret 3
0x000000000055473f : shr al, 0xb5 ; retf
0x00000000005a406d : shr al, 0xb5 ; retf 0xd
0x00000000005c44a9 : shr al, 0xb7 ; mov dh, 0xb ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000645f3c : shr al, 0xb8 ; mov bl, 3 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005aeea8 : shr al, 0xb8 ; or al, 0xd ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006084f6 : shr al, 0xb8 ; xchg byte ptr [rdi], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000065d56a : shr al, 0xb8 ; xor eax, 0x89480002 ; ret
0x000000000050fe3b : shr al, 0xb9 ; adc al, 0x17 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000554805 : shr al, 0xb9 ; ret 0x12
0x000000000059f0cd : shr al, 0xb9 ; sbb cl, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005c3092 : shr al, 0xba ; retf 0xb
0x00000000005928a6 : shr al, 0xba ; ror byte ptr [rsi], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000500bcb : shr al, 0xbb ; call qword ptr [rdi]
0x000000000067de37 : shr al, 0xbd ; xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000403f00 : shr al, 0xbe ; retf
0x000000000057ea36 : shr al, 0xbe ; sub byte ptr [rax], dl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006caca1 : shr al, 0xbf ; sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000062fbc7 : shr al, 0xbf ; syscall
0x000000000064f654 : shr al, 0xc ; add eax, 0x89480003 ; ret
0x000000000068e8a0 : shr al, 0xc0 ; adc bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000005c13a0 : shr al, 0xc0 ; out 0xb, eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005ade7a : shr al, 0xc0 ; push -0x76b7ffee ; ret
0x000000000060e234 : shr al, 0xc0 ; xor byte ptr [rdi], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006492fc : shr al, 0xc2 ; ja 0x64930c ; add byte ptr [rax - 0x77], cl ; ret
0x000000000064e232 : shr al, 0xc2 ; xor byte ptr [rbx], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000604489 : shr al, 0xc3 ; mov dh, 7 ; add bl, ch ; mov dl, 0xe9 ; ret
0x00000000005a485f : shr al, 0xc3 ; ret 0xd
0x0000000000645031 : shr al, 0xc3 ; ret 3
0x00000000006a054a : shr al, 0xc4 ; add eax, 0xf889fffe ; ret
0x00000000005ad59c : shr al, 0xc4 ; and eax, 0x8948000d ; ret
0x00000000004047c2 : shr al, 0xc4 ; ret
0x0000000000593088 : shr al, 0xc4 ; retf 0xe
0x00000000006314ea : shr al, 0xc4 ; test byte ptr [rax + rax], 0xbe ; retf
0x0000000000564775 : shr al, 0xc5 ; call qword ptr [rsi]
0x00000000005c7fe9 : shr al, 0xc5 ; mov ecx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005c2f87 : shr al, 0xc5 ; retf
0x00000000006a3087 : shr al, 0xc5 ; retf -3
0x00000000006508e8 : shr al, 0xc6 ; add al, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b8de7 : shr al, 0xc7 ; jge 0x5b8e00 ; add al, ch ; pop rsp ; retf -0x1c
0x00000000005c062c : shr al, 0xc8 ; or al, 0xc ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000512f82 : shr al, 0xc8 ; retf
0x000000000064482b : shr al, 0xc9 ; retf 3
0x000000000057e92b : shr al, 0xc9 ; sub dword ptr [rax], edx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000064621c : shr al, 0xca ; test al, 3 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000562d29 : shr al, 0xcb ; in eax, 0x11 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000059e50f : shr al, 0xcb ; ret
0x0000000000535029 : shr al, 0xcb ; ret 0x14
0x000000000051d928 : shr al, 0xcc ; cmp dword ptr [rsi], edx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005f97ba : shr al, 0xcc ; jae 0x5f97cf ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000575728 : shr al, 0xcc ; mov ebx, 0x89480010 ; ret
0x00000000005c47e2 : shr al, 0xcc ; ret
0x000000000059307e : shr al, 0xcc ; retf 0xe
0x00000000005b6119 : shr al, 0xcd ; test eax, 0x8948000c ; ret
0x0000000000594292 : shr al, 0xce ; mov eax, 0x8948000e ; ret
0x000000000064377e : shr al, 0xce ; ret
0x0000000000560b17 : shr al, 0xcf ; call qword ptr [rcx]
0x0000000000593b91 : shr al, 0xcf ; mov edi, 0x8948000e ; ret
0x000000000065a0df : shr al, 0xcf ; push 2 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f86a1 : shr al, 0xd ; test dword ptr [rax], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054fb7c : shr al, 0xd0 ; call qword ptr [rdx]
0x0000000000645816 : shr al, 0xd0 ; mov dl, 3 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b387a : shr al, 0xd0 ; ret 0xc
0x00000000005a2f7c : shr al, 0xd0 ; retf
0x000000000062fbb6 : shr al, 0xd0 ; syscall
0x00000000005fd6de : shr al, 0xd0 ; xor al, 8 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000650723 : shr al, 0xd1 ; or eax, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004ffff1 : shr al, 0xd1 ; or ebx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050377b : shr al, 0xd1 ; ret
0x0000000000515023 : shr al, 0xd1 ; ret 0x16
0x0000000000500bdc : shr al, 0xd2 ; call qword ptr [rdi]
0x0000000000559922 : shr al, 0xd2 ; jns 0x559941 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005beedc : shr al, 0xd2 ; sbb al, 0xc ; add byte ptr [rax - 0x77], cl ; ret
0x000000000063c58e : shr al, 0xd2 ; xor eax, 0x89480004 ; ret
0x0000000000611421 : shr al, 0xd3 ; inc byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000628a8d : shr al, 0xd3 ; jo 0x628a9f ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000404821 : shr al, 0xd3 ; retf 0x27
0x000000000062bd8c : shr al, 0xd4 ; cmp eax, 0x89480005 ; ret
0x0000000000653776 : shr al, 0xd4 ; ret
0x00000000006a3076 : shr al, 0xd4 ; retf -3
0x0000000000525f1f : shr al, 0xd5 ; mov bl, 0x15 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000580b77 : shr al, 0xd5 ; out dx, eax ; verw cx ; ret 0xfff7
0x0000000000589c1e : shr al, 0xd6 ; jbe 0x589c3a ; add byte ptr [rax - 0x77], cl ; ret
0x000000000064561e : shr al, 0xd6 ; mov esp, 0x89480003 ; ret
0x0000000000643774 : shr al, 0xd6 ; ret
0x00000000005b471e : shr al, 0xd6 ; retf
0x0000000000560bd7 : shr al, 0xd7 ; call qword ptr [rcx]
0x000000000051601c : shr al, 0xd8 ; mov dl, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006047ae : shr al, 0xd8 ; ret
0x00000000005fead5 : shr al, 0xd9 ; and byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000515d1b : shr al, 0xd9 ; mov ch, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000602c1b : shr al, 0xd9 ; out 7, al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b480d : shr al, 0xd9 ; ret 0xc
0x000000000065341a : shr al, 0xda ; fiadd word ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000065061a : shr al, 0xda ; or al, 3 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000573770 : shr al, 0xda ; ret
0x000000000056f2ab : shr al, 0xdb ; sbb byte ptr [rcx], dl ; add al, ch ; ret 0xe95b
0x0000000000533270 : shr al, 0xdc ; enter 0x14, -0x17 ; retf
0x00000000005c306e : shr al, 0xdc ; retf 0xb
0x0000000000600845 : shr al, 0xdd ; add cl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a0745 : shr al, 0xdd ; add ecx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000534d09 : shr al, 0xdd ; mov ebp, 0x89480014 ; ret
0x000000000064a009 : shr al, 0xdd ; push 3 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000643709 : shr al, 0xdd ; rol dword ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006b2883 : shr al, 0xdd ; sar ah, cl ; dec dword ptr [rax - 0x77] ; ret
0x00000000006047d0 : shr al, 0xde ; ret
0x00000000005701e6 : shr al, 0xe ; adc dword ptr [rcx], edx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054f0b0 : shr al, 0xe ; sbb dl, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054f114 : shr al, 0xe0 ; and dword ptr [rbx], edx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000560b06 : shr al, 0xe0 ; call qword ptr [rcx]
0x00000000005c3080 : shr al, 0xe0 ; retf 0xb
0x00000000005c2f6b : shr al, 0xe1 ; retf
0x000000000062fba5 : shr al, 0xe1 ; syscall
0x0000000000646012 : shr al, 0xe2 ; mov dl, 3 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000057e0cc : shr al, 0xe2 ; sub dl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000555b10 : shr al, 0xe4 ; mov bh, 0x12 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005547da : shr al, 0xe4 ; ret 0x12
0x0000000000583866 : shr al, 0xe4 ; ror byte ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000528c66 : shr al, 0xe4 ; sbb ebx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000063530f : shr al, 0xe5 ; mov edi, 0x89480004 ; ret
0x000000000051d60e : shr al, 0xe6 ; cmp al, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000056847a : shr al, 0xe6 ; jbe 0x568498 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000053500e : shr al, 0xe6 ; ret 0x14
0x0000000000587c79 : shr al, 0xe7 ; jle 0x587c95 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006454ff : shr al, 0xe7 ; mov ch, 3 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000525f53 : shr al, 0xe7 ; out 0x1a, eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004ff0db : shr al, 0xe7 ; sbb bl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000503764 : shr al, 0xe8 ; ret
0x000000000051620b : shr al, 0xe9 ; mov al, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000060479d : shr al, 0xe9 ; ret
0x00000000005b3ffc : shr al, 0xea ; retf 0xc
0x00000000006b690a : shr al, 0xea ; test eax, 0x8948fffc ; ret
0x000000000057d09b : shr al, 0xeb ; cmp dl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000644f09 : shr al, 0xeb ; ret
0x0000000000593061 : shr al, 0xeb ; retf 0xe
0x000000000056be5d : shr al, 0xed ; cmp al, 0x11 ; add al, ch ; retf 0x1156
0x00000000005b4df9 : shr al, 0xed ; mov esp, 0x8948000c ; ret
0x0000000000405007 : shr al, 0xed ; ret 0x27
0x000000000059755d : shr al, 0xed ; test dword ptr [rsi], ecx ; add al, ch ; retf 0xe9f
0x0000000000554172 : shr al, 0xee ; mov ecx, 0x89480012 ; ret
0x0000000000600298 : shr al, 0xee ; or byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006047bf : shr al, 0xef ; ret
0x000000000054dc5b : shr al, 0xef ; retf
0x00000000004fca51 : shr al, 0xf ; xor dword ptr [rax], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000053c25a : shr al, 0xf0 ; in eax, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050375a : shr al, 0xf0 ; ret
0x0000000000514f03 : shr al, 0xf1 ; ret
0x00000000005b5003 : shr al, 0xf1 ; ret 0xc
0x0000000000551d6e : shr al, 0xf2 ; fst qword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b2f5a : shr al, 0xf2 ; retf
0x000000000062fb94 : shr al, 0xf2 ; syscall
0x000000000053c148 : shr al, 0xf2 ; test dword ptr [rcx], ebx ; add bl, ch ; retf -0x74b8
0x0000000000649ff3 : shr al, 0xf3 ; push 3 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005c4893 : shr al, 0xf3 ; ret 0xb
0x0000000000593057 : shr al, 0xf3 ; retf 0xe
0x000000000056be6c : shr al, 0xf4 ; cmp al, 0x11 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005bd600 : shr al, 0xf4 ; cmp al, 0xc ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a282e : shr al, 0xf4 ; loop 0x5a2848 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000059756c : shr al, 0xf4 ; test dword ptr [rsi], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a482d : shr al, 0xf5 ; ret 0xd
0x00000000004fe6ff : shr al, 0xf5 ; sub ebx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004fd2cc : shr al, 0xf6 ; cmp byte ptr [rax], bl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005894fe : shr al, 0xf6 ; jge 0x58951a ; add byte ptr [rax - 0x77], cl ; ret
0x000000000062806a : shr al, 0xf6 ; jp 0x62807c ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000583f54 : shr al, 0xf6 ; retf
0x000000000062f569 : shr al, 0xf7 ; add eax, 0x89480005 ; ret
0x00000000005c1d69 : shr al, 0xf7 ; fisttp qword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000534d8f : shr al, 0xf7 ; mov ebp, 0x89480014 ; ret
0x00000000005505fd : shr al, 0xf7 ; or al, 0x13 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000643eee : shr al, 0xf8 ; retf
0x000000000060d7fb : shr al, 0xf9 ; cmp al, byte ptr [rdi] ; add cl, ch ; retf
0x00000000006438ed : shr al, 0xf9 ; rol dword ptr [rbx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000576f65 : shr al, 0xfb ; mov edx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054fb4e : shr al, 0xfc ; call qword ptr [rdx]
0x00000000005a2f4e : shr al, 0xfc ; retf
0x00000000006b2764 : shr al, 0xfc ; sar esp, cl ; dec dword ptr [rax - 0x77] ; ret
0x00000000006531e7 : shr al, 0xfd ; fld dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000553fc1 : shr al, 0xfd ; retf 0x12
0x00000000005c304d : shr al, 0xfd ; retf 0xb
0x000000000056d9c1 : shr al, 0xfd ; xor byte ptr [rcx], dl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005087f6 : shr al, 0xfe ; mov dl, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a4ef6 : shr al, 0xfe ; ret
0x0000000000500cf5 : shr al, 0xff ; add eax, 0x89480018 ; ret
0x00000000005296bf : shr al, 0xff ; jae 0x5296e1 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000524461 : shr al, 0xff ; mov dh, 0x15 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058e4db : shr al, 0xff ; ret
0x0000000000643ff5 : shr al, 0xff ; rol byte ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006784eb : shr al, 1 ; and eax, 1 ; ret
0x000000000068aa07 : shr al, 1 ; jrcxz 0x68a9a1 ; xlatb ; dec dword ptr [rax + 0x63] ; ret
0x000000000068aa06 : shr al, 1 ; jrcxz 0x68a9a2 ; xlatb ; dec dword ptr [rax + 0x63] ; ret
0x0000000000557b1f : shr al, 1 ; or eax, 0x8900129a ; ret
0x000000000050915f : shr al, 1 ; push 0x17 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b304b : shr al, 1 ; retf
0x00000000006785bb : shr al, 2 ; and eax, 1 ; ret
0x00000000005162f2 : shr al, 2 ; mov al, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005c2584 : shr al, 2 ; out 0xb, al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006783fb : shr al, 3 ; and eax, 1 ; ret
0x00000000006340bb : shr al, 3 ; retf 4
0x000000000067845b : shr al, 4 ; and eax, 1 ; ret
0x000000000063cf82 : shr al, 4 ; cmp al, 4 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000056c35c : shr al, 4 ; cmp byte ptr [rcx], dl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000556d5c : shr al, 4 ; mov ss, word ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a56d6 : shr al, 4 ; push rdx ; adc byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000058c8f0 : shr al, 4 ; str word ptr [rax - 0x77] ; ret
0x000000000054735b : shr al, 5 ; mov byte ptr [rbx], dl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000067854b : shr al, 6 ; and eax, 1 ; ret
0x0000000000643944 : shr al, 6 ; ret 3
0x0000000000678474 : shr al, 7 ; ret
0x000000000064e0df : shr al, 7 ; sub al, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000543944 : shr al, 8 ; ret 0x13
0x000000000052a9d1 : shr al, 9 ; call qword ptr [rdi]
0x00000000005b47dd : shr al, 9 ; ret
0x00000000005b3041 : shr al, 9 ; retf
0x000000000064412d : shr al, 9 ; retf 3
0x0000000000687be3 : shr al, cl ; and eax, 1 ; ret
0x0000000000571bff : shr al, cl ; sub eax, 0x890010f9 ; ret
0x00000000006a3d3e : shr bh, 0xff ; dec dword ptr [rax + 0x29] ; ret 0x2948
0x00000000006c9df1 : shr bh, 1 ; cmp rdx, 0x10 ; jne 0x6c9ddc ; ret
0x0000000000739088 : shr bh, 2 ; add al, ch ; mov ss, edi ; jmp rax
0x000000000063f68b : shr bl, 0x71 ; add byte ptr [rax - 0x77], cl ; ret 0x7cbe
0x000000000055eb3a : shr bl, 0xf5 ; nop ; nop ; ret
0x000000000067fd30 : shr bl, 1 ; adc ecx, dword ptr [rax - 0x77] ; ret
0x00000000006a42b3 : shr bl, 1 ; retf -0x3fcf
0x0000000000738fc8 : shr bl, 2 ; add byte ptr [rsi], bh ; push rbx ; xlatb ; jmp rax
0x00000000006aa4a3 : shr bl, cl ; retf 0x2e66
0x00000000007419f8 : shr byte ptr [rax + 0x77500005], 0xe7 ; jmp rax
0x00000000004086ab : shr byte ptr [rax + rax], 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000407693 : shr byte ptr [rax + rax], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000407450 : shr byte ptr [rax + rax], cl ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000005f442a : shr byte ptr [rax - 0x47], 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x87e8
0x0000000000738200 : shr byte ptr [rax - 0x4939fffe], 0xd4 ; jmp rax
0x0000000000744c20 : shr byte ptr [rax - 0x5619fffa], 0xee ; jmp rax
0x000000000066d214 : shr byte ptr [rax - 0x76958aff], 1 ; out dx, al ; call rax
0x000000000066d231 : shr byte ptr [rax - 0x76a88aff], 1 ; out dx, al ; call rax
0x000000000066ba75 : shr byte ptr [rax - 0xdd8aff], 1 ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000061ba39 : shr byte ptr [rax], 0x8b ; add byte ptr [rcx], bh ; ret 0x775
0x0000000000454dda : shr byte ptr [rbx + 0x29480023], cl ; ret
0x00000000004cbc14 : shr byte ptr [rbx + rdx*2], 1 ; call rax
0x00000000007a5c50 : shr byte ptr [rbx - 0x15], 1 ; jmp qword ptr [rcx]
0x0000000000790aa0 : shr byte ptr [rbx - 0x1e], 1 ; jmp qword ptr [rdx]
0x000000000074b530 : shr byte ptr [rcx + 0x2500008], 1 ; cli ; jmp qword ptr [rax]
0x0000000000741a30 : shr byte ptr [rcx + 0x7b600005], 0xe7 ; jmp rax
0x000000000074a70c : shr byte ptr [rcx + rdi*8], 1 ; jmp qword ptr [rax]
0x0000000000745e6c : shr byte ptr [rcx - 0xe], 1 ; call rax
0x0000000000523b02 : shr byte ptr [rcx], 0xa0 ; add al, ch ; pop rbx ; retf
0x000000000040430a : shr byte ptr [rcx], 0xa0 ; add al, ch ; push rbx ; ret
0x0000000000463b07 : shr byte ptr [rcx], 0xa0 ; add al, ch ; push rsi ; retf
0x000000000042c79a : shr byte ptr [rcx], 0xa0 ; add al, ch ; ret
0x0000000000674412 : shr byte ptr [rcx], 0xa0 ; add al, ch ; ret 0
0x000000000051df9b : shr byte ptr [rcx], 0xa0 ; add al, ch ; ret 0x1626
0x000000000045db9b : shr byte ptr [rcx], 0xa0 ; add al, ch ; ret 0x222a
0x00000000005d3c9b : shr byte ptr [rcx], 0xa0 ; add al, ch ; ret 0xac9
0x00000000005d1f9b : shr byte ptr [rcx], 0xa0 ; add al, ch ; ret 0xae6
0x0000000000465992 : shr byte ptr [rcx], 0xa0 ; add al, ch ; retf
0x000000000053b893 : shr byte ptr [rcx], 0xa0 ; add al, ch ; retf 0x144d
0x0000000000523893 : shr byte ptr [rcx], 0xa0 ; add al, ch ; retf 0x15cd
0x000000000049ac93 : shr byte ptr [rcx], 0xa0 ; add al, ch ; retf 0x1e59
0x0000000000422893 : shr byte ptr [rcx], 0xa0 ; add al, ch ; retf 0x25dd
0x00000000004042b2 : shr byte ptr [rcx], 0xa0 ; add al, ch ; stosd dword ptr [rdi], eax ; ret
0x00000000004042c8 : shr byte ptr [rcx], 0xa0 ; add al, ch ; xchg eax, ebp ; ret
0x00000000004542cb : shr byte ptr [rcx], 0xa0 ; add al, ch ; xchg eax, edx ; ret
0x0000000000677302 : shr byte ptr [rcx], 0xf8 ; ret
0x0000000000686c93 : shr byte ptr [rcx], cl ; ret
0x000000000073b6a0 : shr byte ptr [rdi - 0x6cffffd], 0xdd ; jmp rax
0x0000000000749d04 : shr byte ptr [rdi], 1 ; clc ; jmp qword ptr [rax]
0x0000000000743428 : shr byte ptr [rdi], 6 ; add byte ptr [rdx + rdi*2 - 0x15], bh ; jmp rax
0x000000000060dc6a : shr byte ptr [rdx + 0xc], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000448e68 : shr byte ptr [rdx], 0 ; leave ; ret
0x00000000007a8380 : shr byte ptr [rdx], 1 ; in al, dx ; call qword ptr [rdx]
0x0000000000739d88 : shr byte ptr [rip + 0x1b360003], 0xd9 ; jmp rax
0x0000000000747e00 : shr byte ptr [rsi + 0x63f00007], 1 ; cmc ; jmp qword ptr [rax]
0x000000000049bc0a : shr byte ptr [rsi + rdx*2], cl ; call rax
0x0000000000744d68 : shr byte ptr [rsi - 0x2ee1fffa], 0xee ; jmp rax
0x000000000041b22b : shr byte ptr [rsi], 0xa0 ; add al, ch ; insb byte ptr [rdi], dx ; retf
0x00000000004d7156 : shr byte ptr [rsi], cl ; jmp rax
0x00000000004074d7 : shr byte ptr gs:[rax + rax], cl ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000785a30 : shr ch, 0xdf ; call qword ptr [rbx]
0x00000000007b7d00 : shr ch, 0xef ; jmp qword ptr [rax]
0x000000000074b514 : shr ch, 0xf9 ; jmp rax
0x00000000007f4562 : shr ch, 1 ; add eax, 0x1eef9 ; retf 0x1ed
0x0000000000644091 : shr cl, 1 ; jno 0x64409d ; xor eax, eax ; call 0x680af4
0x00000000006440a2 : shr cl, 1 ; jno 0x6440ae ; xor eax, eax ; call 0x680af4
0x0000000000636f40 : shr cl, 1 ; pop rcx ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000054bf0a : shr cl, cl ; adc eax, 0x5b8beb00 ; ret
0x00000000005613e2 : shr cl, cl ; retf
0x0000000000542391 : shr cl, cl ; retf -5
0x00000000006c9df0 : shr dil, 1 ; cmp rdx, 0x10 ; jne 0x6c9ddd ; ret
0x00000000005a1c0c : shr dl, 0x11 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000441c0c : shr dl, 0x27 ; add cl, cl ; ret
0x0000000000408608 : shr dword ptr [rax + rax], 0x58 ; pop rbx ; pop rbp ; ret
0x000000000040857e : shr dword ptr [rax + rax], 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000407565 : shr dword ptr [rax + rax], 1 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000004073bc : shr dword ptr [rax + rax], cl ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000453cf9 : shr dword ptr [rax - 0x76b7ffda], cl ; ret 0x8948
0x000000000046d2a1 : shr dword ptr [rax], 0x21 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000431720 : shr dword ptr [rax], 1 ; add cl, cl ; ret
0x00000000004226b2 : shr dword ptr [rcx], 0 ; leave ; ret
0x00000000004fa416 : shr dword ptr [rcx], cl ; ret
0x000000000055976b : shr dword ptr [rdi - 0x76b7ffe9], 1 ; ret
0x000000000058dc6b : shr dword ptr [rdx + 0x14], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004d0131 : shr dword ptr [rsi], 1 ; jmp rax
0x00000000007e396a : shr dword ptr [rsi], 1 ; xlatb ; sub al, byte ptr [rax] ; retf
0x00000000004dab63 : shr dword ptr [rsi], cl ; jmp rax
0x000000000051941d : shr eax, 0x10 ; add rsp, 0x18 ; ret
0x0000000000523875 : shr eax, 0x1f ; add rsp, 8 ; ret
0x0000000000617b9d : shr eax, 0x1f ; nop ; leave ; ret
0x000000000069484a : shr eax, 0x20 ; add rsp, 8 ; ret
0x00000000006a1884 : shr eax, 0x20 ; ret
0x00000000006cdabf : shr eax, 6 ; or qword ptr [rdx + rax*8], rsi ; ret
0x00000000005b38ed : shr eax, cl ; pop rdi ; ret 0xc
0x00000000005b2f8a : shr eax, cl ; ret 0xccb
0x000000000068de28 : shr eax, cl ; ret 0xd75a
0x00000000007aeea9 : shr ebp, 1 ; jmp rbx
0x00000000006a513b : shr ebx, -0x3d ; nop ; ret
0x00000000006831dc : shr ebx, -0x67 ; nop ; ret
0x0000000000450fa1 : shr ebx, 0x22 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006c7040 : shr ecx, 3 ; mov ecx, ecx ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000006c689c : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000005b358f : shr ecx, cl ; ret 0xfffb
0x000000000064a96f : shr edi, -1 ; inc dword ptr [rax - 0x7af0f206] ; ret
0x00000000006b2a60 : shr edx, 0x12 ; xor eax, edx ; ret
0x00000000006a4890 : shr edx, 0x1f ; add esi, edx ; sar esi, 1 ; jne 0x6a4889 ; ret
0x0000000000742db5 : shr edx, cl ; call qword ptr [rax]
0x00000000006c6cea : shr esi, 0x20 ; cmp dil, sil ; sete al ; ret
0x00000000006c6cf9 : shr esi, 0x20 ; cmp edi, esi ; sete al ; ret
0x0000000000744d6d : shr esi, 1 ; jmp rax
0x00000000004075f0 : shr qword ptr [rax + rax], 1 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000004b518b : shr r8b, 0xa0 ; ret
0x000000000051941c : shr rax, 0x10 ; add rsp, 0x18 ; ret
0x0000000000694849 : shr rax, 0x20 ; add rsp, 8 ; ret
0x00000000006a1883 : shr rax, 0x20 ; ret
0x00000000006cdabe : shr rax, 6 ; or qword ptr [rdx + rax*8], rsi ; ret
0x00000000006c6cf8 : shr rsi, 0x20 ; cmp edi, esi ; sete al ; ret
0x00000000006a8cb0 : sidt ptr [rcx + 0x63] ; xor byte ptr [rax + 0x63], cl ; adc ch, byte ptr [rcx] ; ret
0x00000000007e608f : sldt eax ; syscall
0x00000000007d7391 : sldt ebp ; syscall
0x00000000007d0d5d : sldt ebx ; syscall
0x00000000007e6401 : sldt ecx ; clts ; jrcxz 0x7e6420 ; add ah, bl ; syscall
0x00000000007d45e9 : sldt ecx ; syscall
0x00000000007dcb9b : sldt edx ; syscall
0x00000000007f026d : sldt esi ; syscall
0x00000000007c0ea1 : sldt esp ; syscall
0x00000000007ee677 : sldt word ptr [rax] ; add ah, bh ; syscall
0x00000000007cd7e9 : sldt word ptr [rax] ; add bh, ch ; syscall
0x00000000007f6f6e : sldt word ptr [rax] ; add cl, cl ; syscall
0x00000000007dc574 : sldt word ptr [rax] ; add dh, dl ; syscall
0x00000000007dc569 : sldt word ptr [rax] ; add dl, cl ; syscall
0x00000000006472a8 : sldt word ptr [rax] ; call 0x563d85
0x0000000000656aaf : sldt word ptr [rax] ; call rax
0x000000000074c675 : sldt word ptr [rax] ; fsubr qword ptr [rsp + rcx*8] ; call rsp
0x000000000052c682 : sldt word ptr [rax] ; mov edi, 0xa03e00 ; call rax
0x0000000000668a73 : sldt word ptr [rax] ; pop rbx ; pop rbp ; ret
0x00000000007dfa2a : sldt word ptr [rax] ; ret
0x00000000005c552d : sldt word ptr [rbx - 0x78f0d208] ; retf
0x00000000007f80d3 : sldt word ptr [rdi + rcx - 0x73fffffb] ; syscall
0x00000000004f18e8 : sqrtps xmm0, xmmword ptr [rax] ; call rax
0x000000000079b04d : stc ; add al, 0 ; mov al, 0xc ; out -1, eax ; ret 0
0x000000000079b0cd : stc ; add al, 0 ; or byte ptr [rdi], 0xe7 ; call qword ptr [rdx]
0x00000000007e5943 : stc ; add al, 0 ; ret
0x00000000007dbd7b : stc ; add al, byte ptr [rsi] ; ret
0x0000000000572f6b : stc ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf 0x1617
0x00000000007f06e9 : stc ; add dl, byte ptr [rsi] ; jmp qword ptr [rax]
0x0000000000674c95 : stc ; add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x23c
0x00000000006c5d7a : stc ; add eax, 0x6348327f ; ret 0x294c
0x0000000000742939 : stc ; add eax, 0xea0d1400 ; call qword ptr [rax]
0x00000000007ab055 : stc ; add eax, 0xece44800 ; jmp rbx
0x000000000078b04d : stc ; add eax, dword ptr [rax] ; or al, 0xe1 ; jmp qword ptr [rbx]
0x00000000007cddc9 : stc ; add eax, dword ptr [rsi] ; ret 0x17
0x0000000000471d84 : stc ; and al, 0 ; leave ; ret
0x000000000068f7ec : stc ; and esi, dword ptr [rax + rdx + 0x39] ; ret
0x000000000073365e : stc ; call qword ptr [rax]
0x00000000007334ba : stc ; call qword ptr [rsi]
0x000000000073366a : stc ; call rax
0x0000000000733a26 : stc ; call rsi
0x0000000000632f7e : stc ; cmp al, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x000000000060d7fd : stc ; cmp al, byte ptr [rdi] ; add cl, ch ; retf
0x00000000004c18b6 : stc ; dec dword ptr [rax - 0x75] ; add eax, 0x541021 ; call rax
0x00000000004c0378 : stc ; dec dword ptr [rax - 0x75] ; add eax, 0x54255f ; call rax
0x00000000004bed02 : stc ; dec dword ptr [rax - 0x75] ; add eax, 0x543bd5 ; call rax
0x00000000004b220b : stc ; dec dword ptr [rax - 0x77] ; ret
0x000000000074b13e : stc ; dec dword ptr [rax] ; cwde ; or byte ptr [rax], al ; nop ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rax]
0x000000000074a696 : stc ; dec dword ptr [rax] ; insb byte ptr [rdi], dx ; or byte ptr [rax], al ; and byte ptr [rax], ah ; stc ; jmp qword ptr [rax]
0x000000000074a836 : stc ; dec dword ptr [rax] ; jb 0x74a84c ; add byte ptr [rax], dh ; xor al, 0xf9 ; jmp qword ptr [rax]
0x000000000074a566 : stc ; dec dword ptr [rax] ; or byte ptr gs:[rax], al ; mov al, 1 ; stc ; jmp qword ptr [rax]
0x000000000074a706 : stc ; dec dword ptr [rax] ; outsb dx, byte ptr [rsi] ; or byte ptr [rax], al ; shr byte ptr [rcx + rdi*8], 1 ; jmp qword ptr [rax]
0x000000000074b2ce : stc ; dec dword ptr [rax] ; popfq ; or byte ptr [rax], al ; loopne 0x74b28c ; stc ; jmp qword ptr [rax]
0x000000000074afe6 : stc ; dec dword ptr [rax] ; xchg eax, ebx ; or byte ptr [rax], al ; jo 0x74af95 ; stc ; jmp qword ptr [rax]
0x000000000074b026 : stc ; dec dword ptr [rax] ; xchg eax, esp ; or byte ptr [rax], al ; mov al, 0x9f ; stc ; jmp qword ptr [rax]
0x000000000074aafe : stc ; dec eax ; jg 0x74ab14 ; add byte ptr [rax + 0x6d], dh ; stc ; jmp rax
0x000000000074b44e : stc ; dec eax ; movsb byte ptr [rdi], byte ptr [rsi] ; or byte ptr [rax], al ; adc dl, dl ; stc ; call qword ptr [rax]
0x00000000005d49eb : stc ; fiadd word ptr [rdx] ; call rax
0x0000000000424ee3 : stc ; fstp dword ptr [rbp] ; call rax
0x000000000074b3b6 : stc ; inc dword ptr [rax - 0xffff75f] ; ret
0x000000000074a9a6 : stc ; inc dword ptr [rax] ; js 0x74a9bc ; add byte ptr [rax + 0x4c], dl ; stc ; jmp qword ptr [rax]
0x000000000074ac2e : stc ; inc dword ptr [rax] ; test dword ptr [rax], ecx ; add al, al ; jge 0x74ac39 ; jmp qword ptr [rax]
0x000000000074aa1e : stc ; inc eax ; jp 0x74aa34 ; add al, ah ; pop rbx ; stc ; jmp rax
0x00000000005acf43 : stc ; ja 0x5acf5e ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007336a2 : stc ; jmp qword ptr [rax - 0x2f000603]
0x000000000073356e : stc ; jmp qword ptr [rax]
0x0000000000733596 : stc ; jmp qword ptr [rcx]
0x00000000007334b6 : stc ; jmp qword ptr [rdi + 0x16fff9eb]
0x00000000007339da : stc ; jmp qword ptr [rsi]
0x0000000000733642 : stc ; jmp rax
0x00000000006d20c7 : stc ; jmp rcx
0x0000000000733606 : stc ; jmp rdx
0x00000000007334ea : stc ; jmp rsp
0x0000000000659099 : stc ; jno 0x6590a2 ; mov rdi, rbx ; call rax
0x0000000000659098 : stc ; jno 0x6590a3 ; mov rdi, rbx ; call rax
0x0000000000659620 : stc ; jno 0x659629 ; mov rdi, rbx ; call rax
0x000000000065961f : stc ; jno 0x65962a ; mov rdi, rbx ; call rax
0x00000000006941b8 : stc ; lea eax, dword ptr [r8 + rcx + 0x1a431f] ; ret
0x000000000074af46 : stc ; ljmp ptr [rax + 0x60000890] ; cdq ; stc ; jmp rax
0x000000000074af86 : stc ; ljmp ptr [rax - 0x4ffff76f] ; pushfq ; stc ; jmp rax
0x000000000074a656 : stc ; ljmp ptr [rax - 0xffff796] ; sbb edi, ecx ; jmp rax
0x00000000007f4034 : stc ; lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; mov esi, 0xb20501ca ; retf
0x00000000004f9643 : stc ; mov al, 0x1d ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006c5b30 : stc ; mov al, dl ; mov ah, cl ; add rsp, 8 ; ret
0x00000000004231eb : stc ; neg byte ptr [rbp] ; call rax
0x00000000007c726b : stc ; or al, byte ptr [rbx] ; ret 0xaf02
0x00000000005cf66a : stc ; or rcx, rsi ; mov rdx, rcx ; nop ; leave ; ret
0x00000000007f4566 : stc ; out dx, al ; add dword ptr [rax], eax ; retf 0x1ed
0x0000000000472efc : stc ; pop rax ; add bh, bh ; ror cl, 1 ; ret
0x00000000006d68f0 : stc ; pop rdi ; mov bl, byte ptr [rbx - 0x56] ; or ecx, ebx ; fsubr dword ptr [rbx] ; retf
0x000000000074a6c6 : stc ; push qword ptr [rax + 0x2000086c] ; and bh, cl ; call rax
0x000000000074a95e : stc ; push qword ptr [rax + 0x70000876] ; stc ; call rax
0x000000000074b50e : stc ; push qword ptr [rax - 0x3ffff758] ; in eax, dx ; stc ; jmp rax
0x000000000074b41e : stc ; push qword ptr [rax - 0x5ffff75d] ; iretd ; stc ; jmp rax
0x0000000000733592 : stc ; push qword ptr [rbx + 0x21fff9ea] ; stc ; call qword ptr [rsi]
0x00000000007335fe : stc ; push qword ptr [rsi + 0x7ffff9fa] ; cli ; stc ; jmp rdx
0x000000000074b4de : stc ; push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; or byte ptr [rax], al ; jo 0x74b4d1 ; stc ; jmp qword ptr [rax]
0x000000000074ae4e : stc ; push rax ; mov word ptr [rax], cs ; add byte ptr [rax - 0x71], dh ; stc ; jmp qword ptr [rax]
0x00000000006d6db6 : stc ; ret
0x000000000072677c : stc ; ret 0xf000
0x00000000004d7b43 : stc ; retf
0x00000000006438ef : stc ; rol dword ptr [rbx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000407043 : stc ; salc ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007dc65f : stc ; sbb al, byte ptr [rip - 0x7ff0c431] ; sbb eax, dword ptr [rsi] ; ret 0x3b
0x0000000000451bcd : stc ; sbb eax, dword ptr [rdi] ; add cl, cl ; ret
0x000000000054e8d2 : stc ; sete al ; ret
0x0000000000404dc0 : stc ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007d3440 : stc ; sub byte ptr [rax], al ; ret 0x516
0x00000000004f4999 : stc ; sub byte ptr [rbx + rdx*2 + 0x39], dh ; ret
0x00000000005bdcd3 : stc ; sub dword ptr [rax], edx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007d96d2 : stc ; syscall
0x00000000004b7d2f : stc ; test dl, bh ; dec ecx ; ret
0x00000000007bf160 : std ; add al, 0 ; retf
0x0000000000739371 : std ; add al, byte ptr [rax] ; pop rsi ; and bl, al ; call qword ptr [rax]
0x00000000007d0190 : std ; add al, byte ptr [rip - 0x7afff074] ; add edx, dword ptr [rdx] ; ret 0xe
0x000000000044e7de : std ; add byte ptr es:[rax - 0x77], cl ; ret 0x8948
0x0000000000651c60 : std ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8348
0x00000000007c9d33 : std ; add dh, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x0000000000735dd1 : std ; add dword ptr [rax], eax ; pop rax ; ret
0x00000000007cfa68 : std ; add dword ptr [rax], eax ; retf
0x0000000000663bc0 : std ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048eb4f : std ; and al, byte ptr [rax] ; leave ; ret
0x00000000007e3842 : std ; and dword ptr [rdi], esp ; retf
0x0000000000501e70 : std ; call 0x6be893
0x00000000006aad1d : std ; call qword ptr [rax - 0x3cf849f1]
0x00000000006a710d : std ; call qword ptr [rax - 0x57c3dd7]
0x0000000000479949 : std ; cmp dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000006481df : std ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp eax, dword ptr [rax] ; jmp rax
0x00000000004f13c2 : std ; dec dword ptr [rax - 0x75] ; add eax, 0x511515 ; call rax
0x00000000004f12d2 : std ; dec dword ptr [rax - 0x75] ; add eax, 0x511605 ; call rax
0x00000000004e8470 : std ; dec dword ptr [rax - 0x75] ; add eax, 0x51a467 ; call rax
0x00000000004e731f : std ; dec dword ptr [rax - 0x75] ; add eax, 0x51b5b8 ; call rax
0x00000000004e69e8 : std ; dec dword ptr [rax - 0x75] ; add eax, 0x51beef ; call rax
0x00000000006a7cca : std ; dec dword ptr [rax - 0x77] ; out dx, eax ; call 0x6d4747
0x00000000006a30c2 : std ; dec dword ptr [rax - 0x77] ; ret
0x00000000006cbc0e : std ; dec dword ptr [rax - 0x77] ; ret 0x8b9
0x00000000006a7422 : std ; dec dword ptr [rax - 0x7d] ; cli ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000006a7497 : std ; dec dword ptr [rax - 0x7d] ; cli ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000630f53 : std ; dec dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005f0ee5 : std ; dec ecx ; ret
0x0000000000596b3f : std ; fist dword ptr [rbx] ; add bl, ch ; mov byte ptr [rax - 0x77], cl ; ret
0x00000000006531e9 : std ; fld dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000684be7 : std ; fstp st(1) ; fmul dword ptr [rip + 0xa3d24] ; ret
0x0000000000684b67 : std ; fstp st(1) ; fmul dword ptr [rip + 0xa3da4] ; ret
0x0000000000684027 : std ; fstp st(1) ; ret
0x00000000007478fd : std ; hlt ; call qword ptr [rax]
0x0000000000722a81 : std ; imul esp, dword ptr [rdi - 0x19a51984], 0x57 ; retf
0x00000000007b0179 : std ; in eax, dx ; call qword ptr [rcx]
0x0000000000722cfe : std ; jb 0x722d08 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x376a
0x00000000004a68cf : std ; jl 0x4a68f9 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000663b38 : std ; jno 0x663b4e ; xchg eax, ebp ; ret 0xd184
0x0000000000451bed : std ; js 0x451bfc ; add cl, cl ; ret
0x0000000000639a3f : std ; lodsb al, byte ptr [rsi] ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000055923f : std ; mov ah, 0x17 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000558f3f : std ; mov bh, 0x17 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000051aa3d : std ; mov rdi, rax ; call rdx
0x00000000007f57a8 : std ; or cl, byte ptr [rcx] ; ret 0x1e
0x00000000004d89de : std ; or eax, 0x8fbf0000 ; ret 0x6e
0x0000000000435b08 : std ; ret
0x000000000065cb7f : std ; ret 0x3a
0x0000000000722ae5 : std ; ret 0xd5bf
0x00000000005f4fbf : std ; ret 0xfffe
0x00000000005f3851 : std ; ret 8
0x0000000000553fc3 : std ; retf 0x12
0x0000000000721e3c : std ; retf 0x7bc6
0x00000000005c304f : std ; retf 0xb
0x000000000073366d : std ; stc ; call rax
0x00000000007336a1 : std ; stc ; jmp qword ptr [rax - 0x2f000603]
0x00000000007cc58b : std ; syscall
0x00000000007f2497 : std ; xor al, 5 ; ret 0x3935
0x000000000056d9c3 : std ; xor byte ptr [rcx], dl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000049f5e7 : std ; xor dl, byte ptr [rsi] ; call rax
0x000000000049d0d1 : sti ; adc al, 0x22 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004817e1 : sti ; adc byte ptr [rax], bl ; call rax
0x000000000073f851 : sti ; add al, 0 ; add byte ptr [rsp], cl ; call rax
0x000000000079b295 : sti ; add al, 0 ; clc ; adc esp, edi ; jmp rax
0x0000000000570dfb : sti ; add al, 0x11 ; add bl, ch ; test dword ptr [rax - 0x77], ecx ; ret
0x00000000006bb67f : sti ; add al, 0x76 ; fiadd word ptr [rax - 0x80] ; jmp qword ptr [rax]
0x00000000007e0e15 : sti ; add al, byte ptr [rax] ; add dword ptr [rbx], 0x30 ; add byte ptr [rax], al ; ret 0x503
0x00000000006d5961 : sti ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x000000000075b32d : sti ; add byte ptr [rax], al ; clc ; or cl, dl ; call rsp
0x000000000067b4a2 : sti ; add cl, byte ptr [rdi] ; lahf ; ret 0x8843
0x0000000000451802 : sti ; add cl, cl ; ret
0x0000000000564441 : sti ; add dl, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000735d99 : sti ; add dword ptr [rax], eax ; push rsp ; mov ch, 0xd0 ; call qword ptr [rax]
0x00000000006c4c83 : sti ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8440
0x00000000007f478b : sti ; add dword ptr [rip + 0x1fcdb], eax ; ret
0x0000000000694789 : sti ; add eax, 0x84c0940f ; ret 0x2e75
0x000000000078b2c5 : sti ; add eax, dword ptr [rax] ; mov byte ptr [rcx], cl ; jmp qword ptr [rbx]
0x000000000067ba2b : sti ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xd084
0x00000000004a1826 : sti ; and dword ptr [rax], eax ; leave ; ret
0x00000000007f09e9 : sti ; and dword ptr [rcx], esp ; ret
0x000000000058c1d1 : sti ; and edx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006c7a53 : sti ; call 0x403c73
0x00000000005565a4 : sti ; call qword ptr [rip + 0x4ac33d]
0x0000000000505df3 : sti ; call qword ptr [rip + 0x4fca6e]
0x0000000000721fd4 : sti ; cmp al, 0x95 ; ret
0x00000000005536a0 : sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000004d5785 : sti ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004ef162 : sti ; dec ecx ; ret
0x0000000000684b21 : sti ; fdivrp st(1) ; fchs ; add rsp, 0x38 ; ret
0x00000000005bc218 : sti ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000006c0692 : sti ; imul rax, rbx ; pop rbx ; ret
0x00000000007b0029 : sti ; in eax, dx ; call qword ptr [rax]
0x00000000007b0071 : sti ; in eax, dx ; jmp qword ptr [rbx]
0x00000000007358fd : sti ; iretd ; jmp rax
0x0000000000547ea3 : sti ; jne 0x547ec9 ; mov rsi, rbp ; call rax
0x00000000006a3331 : sti ; jns 0x6a333a ; add byte ptr [rax + 0x29], cl ; ret
0x000000000051d641 : sti ; jo 0x51d665 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e7be1 : sti ; lodsb al, byte ptr [rsi] ; add r15b, dil ; ror cl, 1 ; ret
0x000000000066dc91 : sti ; mov ah, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x000000000047f877 : sti ; mov al, 0xff ; dec ecx ; ret
0x0000000000576f67 : sti ; mov edx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006a6969 : sti ; mov rdi, qword ptr [rdi + 8] ; xor esi, esi ; call 0x403449
0x00000000007ce24a : sti ; or al, 0 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; or dword ptr [rsi], ebx ; retf
0x00000000007ce2bc : sti ; or al, 0 ; popfq ; syscall
0x00000000007ce2da : sti ; or al, 0 ; ret 0x1410
0x00000000007d735d : sti ; or al, 0x4a ; retf 0x10
0x00000000007f7d6c : sti ; or al, 5 ; ror dword ptr [rbx], 5 ; out dx, al ; syscall
0x00000000004140ff : sti ; or al, byte ptr [rax] ; add cl, cl ; ret
0x0000000000620bb9 : sti ; or dword ptr [rax], eax ; leave ; ret
0x00000000007f55fe : sti ; or eax, 0xd6000034 ; syscall
0x0000000000452d40 : sti ; pop rdx ; add bh, bh ; ror cl, 1 ; ret
0x00000000006424b1 : sti ; ret
0x00000000007f358f : sti ; retf -0x23ff
0x0000000000407c41 : sti ; retf 0x2c
0x00000000005fc884 : sti ; retf 0x40
0x00000000004eed9c : sti ; sbb al, 0 ; leave ; ret
0x00000000006946b9 : sti ; sbb al, 0xf ; lahf ; ret 0x8341
0x00000000004226b1 : sti ; shr dword ptr [rcx], 0 ; leave ; ret
0x00000000007d0d5c : sti ; sldt ebx ; syscall
0x0000000000733641 : sti ; stc ; jmp rax
0x0000000000575e4b : sti ; sub rsp, 0x30 ; call qword ptr [rip + 0x48ca92]
0x00000000007f560f : sti ; syscall
0x00000000007688e9 : sti ; xlatb ; jmp rax
0x00000000007e68fd : stosb byte ptr [rdi], al ; adc al, 5 ; ret 0x14
0x00000000007e366a : stosb byte ptr [rdi], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; retf 0x512
0x00000000005f173a : stosb byte ptr [rdi], al ; adc dword ptr [rcx], eax ; call rax
0x0000000000525bbb : stosb byte ptr [rdi], al ; adc eax, 0x48906600 ; mov eax, dword ptr [rdi + 8] ; ret
0x0000000000615e94 : stosb byte ptr [rdi], al ; add al, 0 ; add byte ptr [rax - 0x77], cl ; clc ; leave ; ret
0x00000000007d90e3 : stosb byte ptr [rdi], al ; add al, 5 ; retf 0x15
0x000000000057b477 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006070f0 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x000000000075619d : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; cmpsb byte ptr fs:[rsi], byte ptr [rdi] ; iretd ; call rsp
0x00000000007348a4 : stosb byte ptr [rdi], al ; add cl, dh ; push qword ptr [rax - 0x69] ; add dword ptr [rax], eax ; retf -0x31fe
0x00000000007fa02c : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; mov word ptr [rsi + 5], cs ; ret
0x000000000068fed9 : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; nop dword ptr [rax] ; ret
0x0000000000734c81 : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; ret 0xce90
0x00000000007d6070 : stosb byte ptr [rdi], al ; add dword ptr [rdi], ecx ; retf
0x00000000007e5ae0 : stosb byte ptr [rdi], al ; add eax, 0x30afe05 ; retf
0x0000000000496238 : stosb byte ptr [rdi], al ; add eax, 0x89480000 ; ret
0x0000000000604192 : stosb byte ptr [rdi], al ; add eax, 0x8948000d ; ret
0x00000000007c9f4a : stosb byte ptr [rdi], al ; add eax, dword ptr [rax] ; ret
0x00000000007e3839 : stosb byte ptr [rdi], al ; and dword ptr [rcx], edx ; xchg eax, edi ; sbb byte ptr [rbx], al ; ret
0x0000000000749f1d : stosb byte ptr [rdi], al ; clc ; call qword ptr [rax]
0x0000000000749f0d : stosb byte ptr [rdi], al ; clc ; jmp rax
0x0000000000747fed : stosb byte ptr [rdi], al ; cmc ; jmp qword ptr [rax]
0x000000000045ef32 : stosb byte ptr [rdi], al ; cmp dword ptr [rdx], ebx ; call rax
0x0000000000647e23 : stosb byte ptr [rdi], al ; cmp eax, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000066906b : stosb byte ptr [rdi], al ; fcos ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000675e52 : stosb byte ptr [rdi], al ; fstpnce st(0), st(0) ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000553dac : stosb byte ptr [rdi], al ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000745c6d : stosb byte ptr [rdi], al ; int1 ; call rax
0x0000000000756369 : stosb byte ptr [rdi], al ; iretd ; call rcx
0x00000000005984a4 : stosb byte ptr [rdi], al ; jbe 0x5984be ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; nop ; ret 0x13
0x0000000000491fc2 : stosb byte ptr [rdi], al ; lea ebx, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000659592 : stosb byte ptr [rdi], al ; mov cl, 7 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007ad180 : stosb byte ptr [rdi], al ; mov dl, 0xc5 ; call qword ptr [rdx]
0x00000000004b1c66 : stosb byte ptr [rdi], al ; mov ebx, 0x8948fffe ; ror dword ptr [rax - 0x77], 1 ; retf -0x76b8
0x00000000004bf3c2 : stosb byte ptr [rdi], al ; mov ecx, 0x8948001c ; ret
0x000000000041f3c2 : stosb byte ptr [rdi], al ; mov ecx, 0x89480026 ; ret
0x00000000005f3e7d : stosb byte ptr [rdi], al ; or al, 0 ; leave ; ret
0x0000000000639c53 : stosb byte ptr [rdi], al ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007c70da : stosb byte ptr [rdi], al ; or eax, dword ptr [rax] ; add ah, ah ; syscall
0x00000000006d68f4 : stosb byte ptr [rdi], al ; or ecx, ebx ; fsubr dword ptr [rbx] ; retf
0x00000000007581a8 : stosb byte ptr [rdi], al ; out -0x31, eax ; call rcx
0x0000000000422bc2 : stosb byte ptr [rdi], al ; out 0x29, eax ; add cl, cl ; ret
0x0000000000545062 : stosb byte ptr [rdi], al ; outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0x8e ; ret 0x13
0x00000000004b7e48 : stosb byte ptr [rdi], al ; push rsp ; add bh, bh ; ror cl, 1 ; ret
0x0000000000522b02 : stosb byte ptr [rdi], al ; ret
0x000000000045b4fe : stosb byte ptr [rdi], al ; retf
0x0000000000735e1c : stosb byte ptr [rdi], al ; retf -0x30
0x00000000004b9614 : stosb byte ptr [rdi], al ; retf -6
0x00000000004330a2 : stosb byte ptr [rdi], al ; retf 0x24
0x0000000000603906 : stosb byte ptr [rdi], al ; rol byte ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000063a892 : stosb byte ptr [rdi], al ; sahf ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007d7d28 : stosb byte ptr [rdi], al ; sbb ecx, dword ptr [rbx] ; shl byte ptr [rax + rax], 1 ; ret 0x1b
0x000000000044dbc2 : stosb byte ptr [rdi], al ; shl dword ptr [rbx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000407692 : stosb byte ptr [rdi], al ; shr byte ptr [rax + rax], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000074b23d : stosb byte ptr [rdi], al ; stc ; jmp qword ptr [rax]
0x00000000007f2132 : stosb byte ptr [rdi], al ; sub byte ptr [rbx], al ; adc byte ptr [rbx], 5 ; ret
0x000000000040c622 : stosb byte ptr [rdi], al ; sub eax, dword ptr [rax] ; leave ; ret
0x00000000007e768c : stosb byte ptr [rdi], al ; sub eax, dword ptr [rax] ; xchg eax, esp ; sub al, 5 ; ret
0x00000000007d738d : stosb byte ptr [rdi], al ; syscall
0x00000000004da43a : stosb byte ptr [rdi], al ; test byte ptr [rdx], dl ; call rax
0x000000000079bd50 : stosb byte ptr [rdi], al ; xchg bh, ah ; call rsp
0x000000000056c6b8 : stosb byte ptr [rdi], al ; xor al, 0x11 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006a7dcd : stosb byte ptr [rdi], al ; xor eax, 0xc4834800 ; or byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000007d50fa : stosd dword ptr [rdi], eax ; adc al, 0 ; retf
0x00000000007cb5e3 : stosd dword ptr [rdi], eax ; adc byte ptr [rsi], cl ; ret
0x000000000046d021 : stosd dword ptr [rdi], eax ; adc eax, 0x89480025 ; ret 0x8948
0x0000000000471531 : stosd dword ptr [rdi], eax ; adc ebx, dword ptr [rcx] ; call rax
0x000000000073e999 : stosd dword ptr [rdi], eax ; add al, 0 ; adc byte ptr [rax - 0x1e], dh ; call rax
0x000000000056062a : stosd dword ptr [rdi], eax ; add al, 0 ; add byte ptr [rcx], ch ; ret 0x6348
0x00000000007dc1cf : stosd dword ptr [rdi], eax ; add al, 0 ; ret
0x0000000000796245 : stosd dword ptr [rdi], eax ; add al, 0 ; retf -0x1acc
0x000000000043f6b7 : stosd dword ptr [rdi], eax ; add al, 0x24 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007d8f06 : stosd dword ptr [rdi], eax ; add al, 5 ; wait ; add eax, 0x504bb05 ; ret
0x00000000007f10d9 : stosd dword ptr [rdi], eax ; add al, byte ptr [rax] ; ret 0x501
0x0000000000518a0c : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x000000000053f195 : stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], cl ; ret 0x8c0f
0x000000000054b34e : stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; add byte ptr [rsi + 1], bh ; call rax
0x00000000007ef916 : stosd dword ptr [rdi], eax ; add dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x00000000007ec9c5 : stosd dword ptr [rdi], eax ; add eax, 0x1604b501 ; add byte ptr [rax], al ; retf
0x00000000007a628d : stosd dword ptr [rdi], eax ; add eax, 0xeb7d3000 ; call qword ptr [rsi]
0x00000000005328b2 : stosd dword ptr [rdi], eax ; add eax, dword ptr [rax] ; add byte ptr [rbx + 0x634803c3], al ; ret
0x00000000007d302e : stosd dword ptr [rdi], eax ; add eax, dword ptr [rax] ; ret
0x00000000007f2d39 : stosd dword ptr [rdi], eax ; and al, 6 ; ret 0x1d7
0x000000000074800d : stosd dword ptr [rdi], eax ; cmc ; jmp rax
0x0000000000647ce0 : stosd dword ptr [rdi], eax ; cmp eax, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000004862f1 : stosd dword ptr [rdi], eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; and eax, dword ptr [rax] ; leave ; ret
0x0000000000669036 : stosd dword ptr [rdi], eax ; fcos ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000007a9b31 : stosd dword ptr [rdi], eax ; in al, dx ; call qword ptr [rax]
0x0000000000756399 : stosd dword ptr [rdi], eax ; iretd ; jmp qword ptr [rsi]
0x00000000007234a4 : stosd dword ptr [rdi], eax ; ja 0x7234ba ; mov dl, 0xb9 ; ret 0x5ca1
0x00000000005e6d01 : stosd dword ptr [rdi], eax ; jnp 0x5e6d16 ; add cl, cl ; ret
0x0000000000505921 : stosd dword ptr [rdi], eax ; lea ebx, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004673ef : stosd dword ptr [rdi], eax ; mov ah, 0xff ; dec ecx ; ret
0x0000000000506f01 : stosd dword ptr [rdi], eax ; mov bl, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000463321 : stosd dword ptr [rdi], eax ; mov dl, 0x25 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000066b80f : stosd dword ptr [rdi], eax ; nop ; or al, 0 ; add byte ptr [rcx], al ; je 0x66b829 ; pop rbx ; ret
0x0000000000671bd1 : stosd dword ptr [rdi], eax ; nop ; or al, 0 ; add byte ptr [rcx], al ; je 0x671be9 ; pop rbx ; ret
0x00000000005f3d57 : stosd dword ptr [rdi], eax ; or al, 0 ; leave ; ret
0x0000000000639b9f : stosd dword ptr [rdi], eax ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007f4461 : stosd dword ptr [rdi], eax ; out 1, al ; add eax, 0x19ca3 ; ret 0x1e6
0x0000000000744c6d : stosd dword ptr [rdi], eax ; out dx, al ; call qword ptr [rax]
0x0000000000744c5d : stosd dword ptr [rdi], eax ; out dx, al ; call rax
0x00000000007b6d19 : stosd dword ptr [rdi], eax ; out dx, eax ; call qword ptr [rbx]
0x00000000007b6d01 : stosd dword ptr [rdi], eax ; out dx, eax ; call qword ptr [rcx]
0x00000000006653a2 : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x00000000004d5531 : stosd dword ptr [rdi], eax ; rcl dword ptr [rdx], cl ; call rax
0x00000000004042b7 : stosd dword ptr [rdi], eax ; ret
0x0000000000568491 : stosd dword ptr [rdi], eax ; ret 0x16
0x0000000000505cb1 : stosd dword ptr [rdi], eax ; retf
0x000000000062a964 : stosd dword ptr [rdi], eax ; retf 0x71
0x00000000005ee0a3 : stosd dword ptr [rdi], eax ; sbb cl, byte ptr [rcx] ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000074b28d : stosd dword ptr [rdi], eax ; stc ; call qword ptr [rax]
0x000000000074b27d : stosd dword ptr [rdi], eax ; stc ; jmp rax
0x0000000000429ae1 : stosd dword ptr [rdi], eax ; sub ebx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005a7201 : stosd dword ptr [rdi], eax ; xchg dword ptr [rsi], ecx ; add byte ptr [rax + 0x29], cl ; ret
0x00000000006a7d23 : stosd dword ptr [rdi], eax ; xor eax, 0xdf894800 ; call 0x6d4748
0x00000000007f2d38 : stosq qword ptr [rdi], rax ; and al, 6 ; ret 0x1d7
0x00000000006c68a0 : stosq qword ptr [rdi], rax ; ret
0x00000000007e1116 : str ebx ; syscall
0x00000000005cdb14 : str ecx ; ret
0x00000000007cd45e : str ecx ; syscall
0x00000000007e6855 : str edi ; syscall
0x00000000007f1060 : str edx ; syscall
0x00000000007e8a61 : str esp ; syscall
0x000000000058c4de : str word ptr [r8 - 0x77] ; ret
0x0000000000590f60 : str word ptr [rax + 0x29] ; ret
0x0000000000582bdb : str word ptr [rax - 0x75] ; jl 0x582c0e ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000587c8a : str word ptr [rax - 0x77] ; fucompi st(0) ; lodsb al, byte ptr [rsi] ; retf 0x14
0x000000000058916b : str word ptr [rax - 0x77] ; fucompi st(0) ; retf
0x00000000005bfc6c : str word ptr [rax - 0x77] ; fucompi st(0) ; retf 0x114a
0x0000000000581a13 : str word ptr [rax - 0x77] ; ret
0x00000000005cd013 : str word ptr [rax - 0x77] ; ret 0x8948
0x00000000005c4e2b : str word ptr [rax - 0x77] ; ret 0xc7
0x00000000004ef160 : sub ah, al ; sti ; dec ecx ; ret
0x00000000007f0bcd : sub ah, bh ; cmp al, byte ptr [rax] ; ret
0x00000000006d6d20 : sub ah, bh ; retf
0x000000000060afcc : sub ah, byte ptr [rbx + 7] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007f3f29 : sub ah, byte ptr [rbx - 0x34fffe64] ; ret 0x501
0x0000000000722cae : sub ah, byte ptr [rdi] ; retf
0x00000000005860a2 : sub ah, byte ptr [rsi - 0x76b7ffed] ; ret
0x00000000007a8231 : sub ah, ch ; jmp qword ptr [rcx]
0x000000000078bb19 : sub ah, cl ; call qword ptr [rcx]
0x000000000073d9ed : sub ah, cl ; jmp rax
0x000000000074e3ad : sub al, 0 ; add byte ptr [rax - 0x34], cl ; call rsp
0x0000000000798158 : sub al, 0 ; add byte ptr [rax], al ; adc al, 0xca ; add al, 0 ; ret 0xe5d8
0x0000000000750e48 : sub al, 0 ; add byte ptr [rax], al ; add al, 0x57 ; add byte ptr [rax], al ; ret 0xcdc7
0x0000000000763e48 : sub al, 0 ; add byte ptr [rax], al ; add al, 0x87 ; add dword ptr [rax], eax ; ret 0xd52e
0x0000000000767b40 : sub al, 0 ; add byte ptr [rax], al ; cld ; ret
0x0000000000797a40 : sub al, 0 ; add byte ptr [rax], al ; cld ; ret 4
0x0000000000764b80 : sub al, 0 ; add byte ptr [rax], al ; cmp al, 0x94 ; add dword ptr [rax], eax ; retf -0x2abb
0x000000000075ab38 : sub al, 0 ; add byte ptr [rax], al ; hlt ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000000007682f8 : sub al, 0 ; add byte ptr [rax], al ; hlt ; retf
0x0000000000752f28 : sub al, 0 ; add byte ptr [rax], al ; in al, 0x77 ; add byte ptr [rax], al ; ret 0xce87
0x0000000000797b30 : sub al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x00000000007b79f0 : sub al, 0 ; add byte ptr [rax], al ; in al, dx ; ret 6
0x0000000000794a30 : sub al, 0 ; add byte ptr [rax], al ; in al, dx ; xchg eax, edx ; add al, 0 ; ret 0xe4b8
0x000000000075d4b8 : sub al, 0 ; add byte ptr [rax], al ; je 0x75d4e4 ; add dword ptr [rax], eax ; xchg eax, edx ; retf -0x2f
0x000000000075f1b8 : sub al, 0 ; add byte ptr [rax], al ; je 0x75f200 ; add dword ptr [rax], eax ; ret 0xd2d7
0x0000000000775000 : sub al, 0 ; add byte ptr [rax], al ; mov esp, 0x18000298 ; retf -0x25
0x000000000075f000 : sub al, 0 ; add byte ptr [rax], al ; mov esp, 0x7a000138 ; retf -0x2e
0x0000000000766100 : sub al, 0 ; add byte ptr [rax], al ; mov esp, 0xf40001a9 ; ret
0x00000000007650e8 : sub al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cdq ; add dword ptr [rax], eax ; retf -0x2ab0
0x0000000000765350 : sub al, 0 ; add byte ptr [rax], al ; or al, 0x9c ; add dword ptr [rax], eax ; retf -0x2aa0
0x0000000000757150 : sub al, 0 ; add byte ptr [rax], al ; or al, 0xba ; add byte ptr [rax], al ; retf
0x0000000000797aa0 : sub al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000007581a0 : sub al, 0 ; add byte ptr [rax], al ; pop rsp ; retf 0
0x0000000000779298 : sub al, 0 ; add byte ptr [rax], al ; push rsp ; fild dword ptr [rdx] ; add byte ptr [rax], al ; ret 0xffdc
0x0000000000761398 : sub al, 0 ; add byte ptr [rax], al ; push rsp ; pop rsp ; add dword ptr [rax], eax ; retf -0x2c08
0x0000000000768158 : sub al, 0 ; add byte ptr [rax], al ; push rsp ; retf 1
0x0000000000778158 : sub al, 0 ; add byte ptr [rax], al ; push rsp ; retf 2
0x00000000007579a8 : sub al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000007681a8 : sub al, 0 ; add byte ptr [rax], al ; retf 1
0x0000000000753c60 : sub al, 0 ; add byte ptr [rax], al ; sbb al, 0x85 ; add byte ptr [rax], al ; ret 0xcedd
0x0000000000766570 : sub al, 0 ; add byte ptr [rax], al ; sub al, 0xae ; add dword ptr [rax], eax ; retf -0x2a25
0x0000000000767b70 : sub al, 0 ; add byte ptr [rax], al ; sub al, 0xc4 ; add dword ptr [rax], eax ; retf -0x28f1
0x000000000079c6a8 : sub al, 0 ; add byte ptr [rax], al ; syscall
0x00000000007579d8 : sub al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x0000000000750c78 : sub al, 0 ; add byte ptr [rax], al ; xor al, 0x55 ; add byte ptr [rax], al ; retf -0x3243
0x00000000007d28b5 : sub al, 0 ; add ch, al ; add al, 5 ; retf 4
0x0000000000449043 : sub al, 0 ; add cl, cl ; ret
0x000000000040bf7a : sub al, 0 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000040f7ef : sub al, 0 ; nop ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000404783 : sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000040483f : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000059bc29 : sub al, 0x12 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058da62 : sub al, 0x13 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004fe6dc : sub al, 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000517bb0 : sub al, 0x19 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058f9ca : sub al, 0x19 ; str word ptr [rax - 0x77] ; ret
0x00000000004bcee1 : sub al, 0x1c ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007217fb : sub al, 0x1d ; scasb al, byte ptr [rdi] ; ficomp word ptr [rbx - 0x50] ; ret 0x9b64
0x000000000048dab7 : sub al, 0x23 ; add cl, cl ; ret
0x00000000006c0f8f : sub al, 0x24 ; add rsp, 0x18 ; ret
0x00000000006c5060 : sub al, 0x24 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000078e274 : sub al, 0x2b ; add al, 0 ; fmul st(1) ; loope 0x78e283 ; retf 1
0x000000000079e234 : sub al, 0x2b ; add eax, 0xe7fe0200 ; jmp rsp
0x0000000000459cf6 : sub al, 0x2c ; add byte ptr [rax], al ; leave ; ret
0x000000000053bfcb : sub al, 0x2f ; mov esp, ebp ; dec dword ptr [rax - 0x77] ; ret
0x00000000007f9811 : sub al, 0x31 ; ret 0x101
0x000000000079ec34 : sub al, 0x35 ; add eax, 0xe834d000 ; call qword ptr [rax]
0x00000000004bd084 : sub al, 0x39 ; ret 0x850f
0x000000000078f634 : sub al, 0x3f ; add al, 0 ; cwde ; add dl, ah ; jmp qword ptr [rbx]
0x000000000078f834 : sub al, 0x41 ; add al, 0 ; call 0x2378da46
0x00000000006d692d : sub al, 0x43 ; ror byte ptr [rdx - 0x3a], 1 ; push 2 ; retf 0x5b9d
0x000000000042c3a0 : sub al, 0x43 ; sub dword ptr [rax], eax ; leave ; ret
0x000000000074fe34 : sub al, 0x47 ; add byte ptr [rax], al ; retf -0x32b6
0x000000000075fe34 : sub al, 0x47 ; add dword ptr [rax], eax ; cmp dh, byte ptr [rcx - 0x2d] ; jmp qword ptr [rsi]
0x0000000000573fbb : sub al, 0x48 ; add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000586c2b : sub al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000061a7cd : sub al, 0x48 ; mov eax, dword ptr [rip + 0x3e8113] ; call rax
0x000000000061944d : sub al, 0x48 ; mov eax, dword ptr [rip + 0x3e9493] ; call rax
0x000000000058b836 : sub al, 0x4e ; str word ptr [rax - 0x77] ; ret
0x0000000000790a34 : sub al, 0x53 ; add al, 0 ; fsubr dword ptr [rax - 0x1e] ; jmp qword ptr [rdx]
0x00000000007a0f34 : sub al, 0x58 ; add eax, 0xe8a48800 ; jmp qword ptr [rax]
0x00000000007a1934 : sub al, 0x62 ; add eax, 0xc6499400 ; call qword ptr [rdx]
0x00000000007a2974 : sub al, 0x72 ; add eax, 0xe9092800 ; call qword ptr [rsi]
0x00000000007a2b74 : sub al, 0x74 ; add eax, 0xe95cb800 ; call qword ptr [rsi]
0x0000000000792c34 : sub al, 0x75 ; add al, 0 ; clc ; retf -0x1d
0x00000000005f8522 : sub al, 0x76 ; or byte ptr [rax], al ; mov rdi, rbx ; call 0x6d4749
0x00000000007a4034 : sub al, 0x89 ; add eax, 0xe9a0a800 ; jmp qword ptr [rbx]
0x00000000007a4a74 : sub al, 0x93 ; add eax, 0xea9b1800 ; call qword ptr [rcx]
0x0000000000775234 : sub al, 0x9b ; add al, byte ptr [rax] ; call 0x11772e12
0x0000000000765334 : sub al, 0x9c ; add dword ptr [rax], eax ; retf -0x2aa0
0x000000000061b94b : sub al, 0xa ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000756398 : sub al, 0xab ; iretd ; jmp qword ptr [rsi]
0x0000000000766574 : sub al, 0xae ; add dword ptr [rax], eax ; retf -0x2a25
0x00000000007f205b : sub al, 0xb ; ret
0x0000000000756a74 : sub al, 0xb3 ; add byte ptr [rax], al ; sub al, 0xbe ; iretd ; jmp qword ptr [rax]
0x0000000000756a78 : sub al, 0xbe ; iretd ; jmp qword ptr [rax]
0x00000000005fb8ea : sub al, 0xc ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000757b34 : sub al, 0xc4 ; add byte ptr [rax], al ; fcmovu st(0), st(7) ; iretd ; call qword ptr [rbx]
0x0000000000767b74 : sub al, 0xc4 ; add dword ptr [rax], eax ; retf -0x28f1
0x000000000074c679 : sub al, 0xcc ; call rsp
0x00000000005eb99c : sub al, 0xd ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000073945d : sub al, 0xd8 ; jmp rax
0x000000000073e5d5 : sub al, 0xe2 ; jmp rax
0x000000000079eac9 : sub al, 0xe8 ; call rax
0x00000000005543c8 : sub al, 0xe8 ; ret 0x16a4
0x000000000074b830 : sub al, 0xe8 ; retf
0x00000000006b129a : sub al, 0xe8 ; retf -1
0x000000000074c674 : sub al, 0xf ; add byte ptr [rax], al ; fsubr qword ptr [rsp + rcx*8] ; call rsp
0x00000000007c83c9 : sub al, 0xf0 ; sub eax, dword ptr [rax] ; mov bl, 7 ; retf
0x000000000073586c : sub al, 0xf2 ; iretd ; call qword ptr [rax]
0x000000000078ab34 : sub al, 0xf4 ; add eax, dword ptr [rax] ; in al, -0x20 ; jmp qword ptr [rax]
0x000000000074a70d : sub al, 0xf9 ; jmp qword ptr [rax]
0x00000000006cb9a7 : sub al, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc748
0x000000000068758f : sub al, 0xff ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000006d13be : sub al, 1 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; jp 0x6d13f4 ; ret
0x000000000075e325 : sub al, 1 ; add byte ptr [rbp + rcx - 0x2e], dh ; call qword ptr [rbx]
0x0000000000531b5c : sub al, 1 ; mov edi, 0x18 ; call 0x6be5d9
0x0000000000519068 : sub al, 1 ; pop rbx ; ret
0x000000000051830c : sub al, 1 ; ret
0x000000000075b934 : sub al, 2 ; add dword ptr [rax], eax ; retf -0x2eda
0x00000000007d9c77 : sub al, 3 ; call qword ptr [rsi]
0x000000000062dfb5 : sub al, 5 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007fbb46 : sub al, 5 ; in al, dx ; or al, byte ptr [rax] ; retf 0x52c
0x00000000007c6c07 : sub al, 5 ; lahf ; cmp eax, dword ptr [rax] ; ret
0x00000000007e7690 : sub al, 5 ; ret
0x00000000007ec20b : sub al, 5 ; retf 0x1a0b
0x00000000007f2e0c : sub al, 6 ; in eax, -0x10 ; add dword ptr [rax], eax ; retf
0x000000000061cd58 : sub al, 7 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000746279 : sub al, 7 ; add byte ptr [rax], ah ; retf
0x00000000007498a1 : sub al, 8 ; add al, ah ; mov bl, 0xf7 ; jmp qword ptr [rax]
0x00000000004505a4 : sub al, ah ; add byte ptr es:[rax - 0x77], cl ; ret 0x8948
0x000000000041a58d : sub al, byte ptr [r8] ; leave ; ret
0x00000000004feca2 : sub al, byte ptr [rax + rax] ; add byte ptr [rcx], bh ; ret 0x8c0f
0x000000000067f4c2 : sub al, byte ptr [rax + rbx*8 - 1] ; mov eax, ebx ; pop rbx ; ret
0x000000000042aa60 : sub al, byte ptr [rax] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000040f81a : sub al, byte ptr [rax] ; leave ; ret
0x000000000041a4ca : sub al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x5e840d] ; call rax
0x000000000041a3a4 : sub al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x5e8533] ; call rax
0x000000000041880a : sub al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x5ea0cd] ; call rax
0x00000000004186c2 : sub al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x5ea215] ; call rax
0x000000000041859c : sub al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x5ea33b] ; call rax
0x0000000000417800 : sub al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x5eb0d7] ; call rax
0x0000000000416a55 : sub al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x5ebe82] ; call rax
0x0000000000416910 : sub al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x5ebfc7] ; call rax
0x00000000004167ea : sub al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x5ec0ed] ; call rax
0x0000000000415890 : sub al, byte ptr [rax] ; mov rax, qword ptr [rip + 0x5ed047] ; call rax
0x000000000042e2d5 : sub al, byte ptr [rax] ; nop ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000007e396e : sub al, byte ptr [rax] ; retf
0x0000000000519f7d : sub al, byte ptr [rbx + 0xd7e01fa] ; sub edx, 1 ; ret
0x00000000006a70db : sub al, byte ptr [rbx + rcx*4 + 0x72] ; add al, 0xe8 ; retf
0x000000000064e0e2 : sub al, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005cfe23 : sub al, byte ptr [rbx] ; call rax
0x00000000007d9cc4 : sub al, byte ptr [rbx] ; retf
0x000000000059cd9a : sub al, byte ptr [rcx + rcx*4 + 0x7d] ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000061ceb8 : sub al, byte ptr [rdi] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000007be19d : sub al, byte ptr [rdi] ; add byte ptr [rax + 0x2f], ah ; int1 ; jmp qword ptr [rbx]
0x0000000000675171 : sub al, byte ptr [rdx] ; add byte ptr [rax], al ; mov edx, r12d ; call rax
0x000000000062e08e : sub al, byte ptr [rip - 0x157cb800] ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000079e1a5 : sub al, byte ptr [rip - 0x18028a00] ; jmp qword ptr [rbx]
0x000000000079e115 : sub al, byte ptr [rip - 0x180af600] ; call qword ptr [rdi]
0x000000000062e8ab : sub al, byte ptr [rip - 0x57cb800] ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000062e032 : sub al, byte ptr [rip - 0x57cb800] ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000007e768a : sub al, byte ptr [rip - 0x6bffd456] ; sub al, 5 ; ret
0x00000000007ae10d : sub al, byte ptr [rsi] ; add byte ptr [rax - 0x5f], ah ; in eax, dx ; jmp qword ptr [rax]
0x000000000041dfe5 : sub al, byte ptr es:[rax] ; leave ; ret
0x00000000006484e7 : sub al, ch ; ret
0x00000000005505cf : sub al, ch ; retf
0x00000000006a4e6a : sub al, cl ; movapd xmm0, xmm1 ; ret
0x00000000006a4a7a : sub al, cl ; xor eax, eax ; movapd xmm0, xmm1 ; ret
0x00000000006a4fc8 : sub al, dl ; movapd xmm0, xmm2 ; ret
0x0000000000676934 : sub bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000519efd : sub bh, byte ptr [rcx] ; push rax ; adc byte ptr [rsi + 0xd], bh ; add edx, 1 ; ret
0x000000000065e2dd : sub bh, byte ptr [rcx] ; ret 0x2676
0x00000000006458cc : sub bh, byte ptr [rdx - 0x76b7fffd] ; ret
0x0000000000722fca : sub bh, byte ptr [rsi - 0x39] ; sbb byte ptr [rax + 0x49], al ; ret 0x5657
0x0000000000492aa2 : sub bl, ah ; and al, byte ptr [rax] ; leave ; ret
0x0000000000738c84 : sub bl, ah ; salc ; call rax
0x00000000006821ee : sub bl, al ; add rsp, 0x18 ; ret
0x0000000000683d1a : sub bl, al ; add rsp, 0x48 ; ret
0x00000000006a5b9d : sub bl, al ; nop ; fstp st(0) ; add rsp, 0x28 ; ret
0x0000000000688d99 : sub bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000518118 : sub bl, al ; nop word ptr [rax + rax] ; ret
0x000000000047fea0 : sub bl, byte ptr [rax] ; call rax
0x000000000044fed8 : sub bl, byte ptr [rbx] ; call rax
0x00000000006046a2 : sub bl, byte ptr [rdi - 0x76b7fff5] ; ret
0x000000000040fec2 : sub bl, byte ptr [rdi] ; call rax
0x000000000041fdf3 : sub bl, byte ptr [rsi] ; call rax
0x0000000000735a28 : sub bl, ch ; add dword ptr [rax], eax ; retf -0x2fe7
0x00000000006d6071 : sub bl, dh ; ret
0x00000000006d6070 : sub bl, r14b ; ret
0x0000000000517d71 : sub byte ptr [r13 - 0x3f6bf040], r8b ; ret
0x00000000004b0097 : sub byte ptr [r13], r10b ; call rax
0x00000000006bad35 : sub byte ptr [r8 + 0x29], r9b ; ret 0xb60f
0x00000000004699cd : sub byte ptr [r8 + 0x39], cl ; ret 0x950f
0x00000000005413ac : sub byte ptr [r8 - 0x77], r9b ; ret 0x348
0x00000000004247c0 : sub byte ptr [r8], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000056f2ec : sub byte ptr [r9], al ; pop rbx ; ret
0x00000000006bad36 : sub byte ptr [rax + 0x29], cl ; ret 0xb60f
0x00000000006b4901 : sub byte ptr [rax + 0x29], cl ; retf -0x7fbf
0x00000000006b4661 : sub byte ptr [rax + 0x29], cl ; retf 0xf41
0x00000000004b9b3c : sub byte ptr [rax + 0x39], cl ; ret 0x1975
0x00000000004b9e25 : sub byte ptr [rax + 0x39], cl ; ret 0x3f75
0x00000000004b9c65 : sub byte ptr [rax + 0x39], cl ; ret 0x5475
0x00000000004b9c18 : sub byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004bc315 : sub byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000004699ce : sub byte ptr [rax + 0x39], cl ; ret 0x950f
0x000000000050446e : sub byte ptr [rax + 0x481b7501], bpl ; mov edi, ebx ; call rax
0x000000000050446f : sub byte ptr [rax + 0x481b7501], ch ; mov edi, ebx ; call rax
0x00000000006baa81 : sub byte ptr [rax + 0x63], cl ; ret 0xb60f
0x00000000004e6bea : sub byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 0x29], cl ; retf -0x74b8
0x0000000000563819 : sub byte ptr [rax + 0x63], cl ; sbb ecx, dword ptr [rax + 0x29] ; ret 0x148
0x000000000047eabd : sub byte ptr [rax + rax], ah ; leave ; ret
0x00000000006646fd : sub byte ptr [rax + rax], al ; add byte ptr [rbp - 0x77], cl ; fisttp word ptr [rcx - 0x77] ; ret
0x0000000000669d37 : sub byte ptr [rax - 0x6ffffff4], 0x5d ; ret
0x00000000006bb626 : sub byte ptr [rax - 0x75], cl ; cmp byte ptr [rax + 0x63], cl ; ret 0x8948
0x0000000000502eb6 : sub byte ptr [rax - 0x75], cl ; jl 0x502ee7 ; and byte ptr [rax - 0x77], cl ; ret
0x00000000006d5e5a : sub byte ptr [rax - 0x75], cl ; push rsp ; ret 0x4910
0x0000000000544da4 : sub byte ptr [rax - 0x76b7ffe9], bl ; ret
0x00000000004c9f95 : sub byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf
0x0000000000551731 : sub byte ptr [rax - 0x77], cl ; add dword ptr [rax + 2], 0 ; add al, ch ; ret 0x115d
0x000000000050047f : sub byte ptr [rax - 0x77], cl ; ret
0x00000000005413ad : sub byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000040d266 : sub byte ptr [rax - 0x77], cl ; retf
0x00000000006b4196 : sub byte ptr [rax - 0x77], cl ; retf 0x2948
0x000000000061b982 : sub byte ptr [rax - 0x77], cl ; ror cl, 1 ; ret
0x000000000040d262 : sub byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; retf
0x000000000065f2f6 : sub byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf
0x00000000006bfab7 : sub byte ptr [rax], 0 ; ret
0x00000000006a81db : sub byte ptr [rax], al ; add byte ptr [rax], al ; add dh, al ; xor byte ptr [r8], r8b ; ret
0x0000000000424939 : sub byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004247c1 : sub byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004524f2 : sub byte ptr [rax], al ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000040953a : sub byte ptr [rax], al ; call 0x686024
0x00000000006a7e03 : sub byte ptr [rax], al ; je 0x6a7e14 ; ret
0x00000000007d35b4 : sub byte ptr [rax], al ; jrcxz 0x7d35e7 ; cmp al, 0xde ; and dword ptr [rax], eax ; ret
0x000000000042e91a : sub byte ptr [rax], al ; leave ; ret
0x0000000000438f5c : sub byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c997b] ; call rax
0x0000000000438e36 : sub byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5c9aa1] ; call rax
0x000000000043729c : sub byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cb63b] ; call rax
0x0000000000437154 : sub byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cb783] ; call rax
0x000000000043702e : sub byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cb8a9] ; call rax
0x0000000000436292 : sub byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cc645] ; call rax
0x00000000004354e7 : sub byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cd3f0] ; call rax
0x00000000004353a2 : sub byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cd535] ; call rax
0x000000000043527c : sub byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5cd65b] ; call rax
0x0000000000434322 : sub byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5ce5b5] ; call rax
0x000000000041b002 : sub byte ptr [rax], al ; mov rax, qword ptr [rip + 0x5e78d5] ; call rax
0x00000000007d0545 : sub byte ptr [rax], al ; ret 0x1404
0x00000000007d3441 : sub byte ptr [rax], al ; ret 0x516
0x000000000066d023 : sub byte ptr [rax], al ; setne al ; ret
0x00000000004bd06e : sub byte ptr [rax], bh ; ret 0x850f
0x00000000004fe33f : sub byte ptr [rax], bl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005fe2ce : sub byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004bd06d : sub byte ptr [rax], dil ; ret 0x850f
0x000000000057ea39 : sub byte ptr [rax], dl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007b4748 : sub byte ptr [rbp - 0x11], al ; jmp qword ptr [rax]
0x000000000076e658 : sub byte ptr [rbp - 0x26], al ; jmp qword ptr [rax]
0x0000000000617a04 : sub byte ptr [rbp - 0x3f6bf040], al ; nop ; pop rbp ; ret
0x0000000000517d72 : sub byte ptr [rbp - 0x3f6bf040], al ; ret
0x0000000000455014 : sub byte ptr [rbp - 0x76b7ffda], bh ; ret 0x8b48
0x0000000000443e3a : sub byte ptr [rbp - 0x76b7ffdd], bh ; ret
0x00000000005c7348 : sub byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x9e ; ret 0x3945
0x00000000007bed48 : sub byte ptr [rbp - 0xf], dh ; jmp qword ptr [rcx]
0x000000000053008a : sub byte ptr [rbp], cl ; jmp rax
0x00000000004b0098 : sub byte ptr [rbp], dl ; call rax
0x000000000056f414 : sub byte ptr [rbx + 0x16], dl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000686c62 : sub byte ptr [rbx + 0x3c894806], cl ; and al, 0x39 ; ret 0x8c0f
0x000000000043c0db : sub byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000543a18 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; jmp rax
0x000000000053f20e : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000508983 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000052a2a9 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000005b6027 : sub byte ptr [rbx + 0x5d], bl ; pop r13 ; pop r14 ; ret
0x000000000040c7fd : sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000068709c : sub byte ptr [rbx + 0x634801c7], al ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004f499a : sub byte ptr [rbx + rdx*2 + 0x39], dh ; ret
0x00000000007b5378 : sub byte ptr [rbx - 0x11], bl ; jmp qword ptr [rcx]
0x00000000005196a8 : sub byte ptr [rbx - 0x3dc6d7ba], cl ; sete al ; ret
0x00000000004aba4c : sub byte ptr [rbx], 0x21 ; add byte ptr [rax - 0x77], cl ; ret 0x2c7
0x000000000074a6dc : sub byte ptr [rbx], 0xf9 ; jmp qword ptr [rax]
0x00000000007f2133 : sub byte ptr [rbx], al ; adc byte ptr [rbx], 5 ; ret
0x000000000064e2a9 : sub byte ptr [rbx], al ; add byte ptr [rcx + 0x63], cl ; ret 0xd989
0x00000000005fd088 : sub byte ptr [rbx], bh ; or byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x00000000007b0d28 : sub byte ptr [rbx], bl ; out dx, al ; jmp rdi
0x000000000040de51 : sub byte ptr [rbx], ch ; add cl, cl ; ret
0x000000000060bd10 : sub byte ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e8bcc : sub byte ptr [rbx], cl ; mov dword ptr [rcx], eax ; add byte ptr [rax], al ; wait ; add dword ptr [rdx], eax ; ret
0x00000000006cbb78 : sub byte ptr [rbx], dh ; ret
0x00000000007a7c58 : sub byte ptr [rbx], dl ; in al, dx ; jmp qword ptr [rax]
0x0000000000434084 : sub byte ptr [rcx + 0x29480025], bh ; ret
0x0000000000418784 : sub byte ptr [rcx + 0x2a], ah ; add cl, cl ; ret
0x00000000007ad398 : sub byte ptr [rcx - 0x13], bh ; jmp qword ptr [rcx]
0x000000000074b528 : sub byte ptr [rcx - 0x13ffff8], 0xf9 ; call rax
0x00000000007a8b98 : sub byte ptr [rcx - 0x14], cl ; call qword ptr [rcx]
0x00000000006b1295 : sub byte ptr [rcx - 0x75], al ; jl 0x6b12c6 ; sub al, 0xe8 ; retf -1
0x00000000006742f7 : sub byte ptr [rcx], 0xa0 ; add al, ch ; ret
0x000000000074c4d8 : sub byte ptr [rcx], 0xcc ; call qword ptr [rdx]
0x000000000046d2a2 : sub byte ptr [rcx], ah ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004abd29 : sub byte ptr [rcx], ah ; add byte ptr [rax - 0x77], cl ; ret 0x2c7
0x000000000051d77c : sub byte ptr [rcx], al ; jmp 0x51d74e
0x00000000005898ec : sub byte ptr [rcx], al ; jmp 0x5898be
0x00000000005a4e6c : sub byte ptr [rcx], al ; jmp 0x5a4e3e
0x000000000056f2ed : sub byte ptr [rcx], al ; pop rbx ; ret
0x0000000000506c76 : sub byte ptr [rcx], al ; ret
0x00000000004b9d6c : sub byte ptr [rcx], bh ; ret 0x840f
0x0000000000663251 : sub byte ptr [rcx], bh ; ret 0x870f
0x00000000005196ab : sub byte ptr [rcx], bh ; ret 0x940f
0x000000000040c50f : sub byte ptr [rcx], bh ; ret 0xd74
0x000000000040d4e5 : sub byte ptr [rcx], bh ; ret 0xf75
0x00000000004d2eb0 : sub byte ptr [rcx], bh ; ror byte ptr [rdi], 1 ; ret 0xc085
0x00000000005c6f6f : sub byte ptr [rcx], dh ; call 0x403a05
0x00000000004b9d6b : sub byte ptr [rcx], dil ; ret 0x840f
0x000000000040c50e : sub byte ptr [rcx], dil ; ret 0xd74
0x000000000040d4e4 : sub byte ptr [rcx], dil ; ret 0xf75
0x00000000005196aa : sub byte ptr [rcx], r15b ; ret 0x940f
0x0000000000799dc8 : sub byte ptr [rdi - 0x1a], dl ; call qword ptr [rcx]
0x0000000000777058 : sub byte ptr [rdi - 0x24], ah ; call qword ptr [rdx]
0x00000000007461d1 : sub byte ptr [rdi], al ; add byte ptr [rax - 0x59], ah ; call qword ptr [rax]
0x00000000007461c1 : sub byte ptr [rdi], al ; add byte ptr [rax - 0x59], al ; jmp rax
0x00000000005af25c : sub byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x0000000000739588 : sub byte ptr [rdi], al ; add eax, dword ptr [rax] ; retf -0x27c5
0x000000000079ae78 : sub byte ptr [rdi], al ; jmp qword ptr [rbx]
0x000000000040fffa : sub byte ptr [rdi], bl ; call rax
0x00000000005c6370 : sub byte ptr [rdi], cl ; popfq ; ret 0xc985
0x000000000067cdc9 : sub byte ptr [rdi], cl ; ret
0x00000000004cf142 : sub byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000005973a4 : sub byte ptr [rdx + 0x12], dh ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f7160 : sub byte ptr [rdx - 0x76b7ffe8], bl ; ret
0x0000000000531ea7 : sub byte ptr [rdx], bl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000061bd1e : sub byte ptr [rdx], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000005b00ac : sub byte ptr [rdx], cl ; add byte ptr [rax], al ; ret
0x000000000079e025 : sub byte ptr [rip - 0x180cbc00], al ; call rax
0x0000000000740151 : sub byte ptr [rip - 0x1ae57000], al ; call rax
0x00000000004d8284 : sub byte ptr [rsi + 0x1e], ah ; add cl, cl ; ret
0x0000000000798976 : sub byte ptr [rsi + 0x300e4105], al ; add dword ptr [rsi], 2 ; ret 0xe0a
0x0000000000747df8 : sub byte ptr [rsi + 0x63500007], 0xf5 ; call rax
0x000000000065e1a4 : sub byte ptr [rsi + rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x00000000007acaf8 : sub byte ptr [rsi - 0x13], cl ; jmp qword ptr [rdx]
0x00000000007be100 : sub byte ptr [rsi], 0xf1 ; call rsp
0x00000000007e6ec4 : sub byte ptr [rsi], bl ; retf 0x35
0x00000000007b0678 : sub byte ptr [rsi], cl ; out dx, al ; jmp qword ptr [rcx]
0x0000000000571ea1 : sub byte ptr [rsi], dl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007bba70 : sub ch, 0xf0 ; jmp qword ptr [rax]
0x00000000007a8381 : sub ch, ah ; call qword ptr [rdx]
0x0000000000639f12 : sub ch, byte ptr [rax + 0x5b580009] ; pop rbp ; ret
0x000000000040dc2b : sub ch, byte ptr [rbx] ; add cl, cl ; ret
0x00000000005ff355 : sub ch, byte ptr [rcx] ; ret
0x0000000000411db6 : sub ch, cl ; add byte ptr es:[rax - 0x77], cl ; ret
0x00000000006b756d : sub ch, cl ; retf -7
0x0000000000738415 : sub ch, dl ; call rax
0x00000000006a4b9e : sub cl, al ; add eax, 1 ; jne 0x6a4b97 ; ret
0x00000000006a4e5b : sub cl, al ; add rsp, 0x18 ; ret
0x0000000000681fe8 : sub cl, al ; add rsp, 0x28 ; ret
0x00000000006825be : sub cl, al ; add rsp, 0x38 ; ret
0x000000000068282e : sub cl, al ; add rsp, 0x48 ; ret
0x00000000006a513a : sub cl, al ; jmp 0x6a5104
0x00000000006a4a53 : sub cl, al ; ret
0x0000000000676cf1 : sub cl, byte ptr [rax + 0x69] ; inc dword ptr [rax] ; retf 0x3b9a
0x0000000000796950 : sub cl, byte ptr [rax - 0x1b] ; call qword ptr [rax]
0x00000000005b9cb0 : sub cl, byte ptr [rax - 0x77] ; fmul qword ptr [rax - 0x77] ; ret
0x000000000060e29e : sub cl, byte ptr [rax - 0x77] ; ret
0x000000000059d557 : sub cl, byte ptr [rax - 0x7d] ; ret
0x00000000005ad905 : sub cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000587ab2 : sub cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x0000000000749851 : sub cl, byte ptr [rax] ; add al, al ; mov cl, 0xf7 ; call qword ptr [rax]
0x00000000005fd10e : sub cl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006a9854 : sub cl, byte ptr [rax] ; add cl, bl ; ret 0xc9d8
0x00000000007f20bb : sub cl, byte ptr [rbx] ; ret 0x140f
0x00000000006a4605 : sub cl, byte ptr [rcx + 0x508b48cb] ; adc byte ptr [rax + 0x39], cl ; ret 0xe775
0x00000000005ed157 : sub cl, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007dc70c : sub cl, byte ptr [rsi] ; add byte ptr [rax], al ; retf
0x0000000000407a12 : sub cl, ch ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007f489b : sub cl, dh ; jle 0x7f48ce ; retf
0x0000000000740bdd : sub dh, ah ; call qword ptr [rax]
0x0000000000683742 : sub dh, al ; add rsp, 0x28 ; ret
0x00000000006a9820 : sub dh, byte ptr [rbp - 0x23] ; ret
0x00000000006bf33e : sub dh, byte ptr [rdi] ; xor al, 0 ; add rsp, 8 ; ret
0x000000000073bad0 : sub dl, al ; add eax, dword ptr [rax] ; mov al, 0x55 ; fdivp st(7) ; push rax ; ret 3
0x00000000006a51c8 : sub dl, al ; add rsp, 0x18 ; ret
0x00000000006820f1 : sub dl, al ; add rsp, 8 ; ret
0x00000000006a4fbc : sub dl, al ; ret
0x000000000057e0cf : sub dl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000059f412 : sub dl, byte ptr [rbx + 0x13] ; add bl, ch ; retf -0x76b8
0x0000000000793c90 : sub dl, byte ptr [rbx - 0x1c] ; call rsp
0x000000000058bb21 : sub dl, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005c1cab : sub dl, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004efe0e : sub dl, byte ptr [rcx] ; call rax
0x000000000048fdfe : sub dl, byte ptr [rdi] ; call rax
0x00000000007d9df1 : sub dl, byte ptr [rdi] ; jmp qword ptr [rdi]
0x00000000004db220 : sub dl, byte ptr [rip - 0x70410000] ; ret 0x6e
0x000000000051dc1b : sub dl, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000049fde8 : sub dl, byte ptr [rsi] ; call rax
0x000000000073f508 : sub dl, ch ; add al, 0 ; ret
0x00000000007aeda8 : sub dl, cl ; in eax, dx ; jmp qword ptr [rsi]
0x00000000006825a1 : sub dl, dh ; divps xmm0, xmm1 ; add rsp, 0x38 ; ret
0x0000000000747674 : sub dl, dl ; hlt ; call qword ptr [rax]
0x000000000064e181 : sub dword ptr [ebx], eax ; add byte ptr [rcx + 0x63], cl ; ret 0xd989
0x000000000042c3a1 : sub dword ptr [r8], eax ; leave ; ret
0x000000000042c1bc : sub dword ptr [r8], r8d ; leave ; ret
0x0000000000519081 : sub dword ptr [rax + 0x14], 1 ; pop rbx ; ret
0x0000000000518355 : sub dword ptr [rax + 0x14], 1 ; ret
0x000000000054a776 : sub dword ptr [rax + 0x1c], 1 ; pop rbx ; ret
0x000000000054a22a : sub dword ptr [rax + 0x1c], 1 ; ret
0x0000000000506fc6 : sub dword ptr [rax + 0x24], 1 ; pop rbx ; ret
0x0000000000506c9a : sub dword ptr [rax + 0x24], 1 ; ret
0x0000000000519066 : sub dword ptr [rax + 0x2c], 1 ; pop rbx ; ret
0x000000000051830a : sub dword ptr [rax + 0x2c], 1 ; ret
0x000000000051d776 : sub dword ptr [rax + 4], 1 ; lock sub dword ptr [rax], 1 ; jmp 0x51d754
0x00000000005898e6 : sub dword ptr [rax + 4], 1 ; lock sub dword ptr [rax], 1 ; jmp 0x5898c4
0x00000000005a4e66 : sub dword ptr [rax + 4], 1 ; lock sub dword ptr [rax], 1 ; jmp 0x5a4e44
0x0000000000507245 : sub dword ptr [rax + 4], 1 ; lock sub dword ptr [rax], 1 ; ret
0x000000000047e993 : sub dword ptr [rax + rax], esp ; leave ; ret
0x000000000068c713 : sub dword ptr [rax - 0x3214fffc], eax ; jmp 0x68c6ed
0x000000000056a713 : sub dword ptr [rax - 0x76b7ffea], esp ; ret
0x0000000000515cc8 : sub dword ptr [rax - 0x77], ecx ; ret
0x00000000006ae12e : sub dword ptr [rax - 0x7d], ecx ; ret 0x480f
0x00000000006cf9a0 : sub dword ptr [rax - 0x7f], ecx ; inc byte ptr [rax] ; retf 0x3b9a
0x000000000051d77b : sub dword ptr [rax], 1 ; jmp 0x51d74f
0x00000000005898eb : sub dword ptr [rax], 1 ; jmp 0x5898bf
0x00000000005a4e6b : sub dword ptr [rax], 1 ; jmp 0x5a4e3f
0x0000000000506c75 : sub dword ptr [rax], 1 ; ret
0x000000000074e0ad : sub dword ptr [rax], eax ; add byte ptr [rsi + rdx*8 - 0x34], ah ; call rax
0x00000000004154c7 : sub dword ptr [rax], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041534f : sub dword ptr [rax], eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000007f7092 : sub dword ptr [rax], eax ; ficomp dword ptr [rdi] ; xchg dword ptr [rcx], eax ; ret
0x000000000041f33a : sub dword ptr [rax], eax ; leave ; ret
0x00000000004299bd : sub dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x5d8f1a] ; call rax
0x00000000004298b5 : sub dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x5d9022] ; call rax
0x0000000000428b9a : sub dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x5d9d3d] ; call rax
0x00000000004286fa : sub dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x5da1dd] ; call rax
0x00000000004285d4 : sub dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x5da303] ; call rax
0x0000000000427370 : sub dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x5db567] ; call rax
0x0000000000427070 : sub dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x5db867] ; call rax
0x0000000000426ee6 : sub dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x5db9f1] ; call rax
0x0000000000426dc0 : sub dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x5dbb17] ; call rax
0x00000000004258c0 : sub dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x5dd017] ; call rax
0x0000000000424ae7 : sub dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x5dddf0] ; call rax
0x00000000007e541f : sub dword ptr [rax], eax ; retf
0x00000000007ed612 : sub dword ptr [rax], eax ; retf 0x51b
0x00000000007ed74a : sub dword ptr [rax], eax ; retf 0xe25
0x000000000047fee9 : sub dword ptr [rax], ebx ; call rax
0x000000000057e92e : sub dword ptr [rax], edx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000053e643 : sub dword ptr [rbp + 0x39257ef6], eax ; ret 0x217c
0x000000000052fefa : sub dword ptr [rbp], ecx ; jmp rax
0x00000000006d0f5b : sub dword ptr [rbx + 0x60], 1 ; pop rbx ; ret
0x000000000068bbfa : sub dword ptr [rbx], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000674d2d : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; mov esi, ebp ; call rax
0x000000000064e182 : sub dword ptr [rbx], eax ; add byte ptr [rcx + 0x63], cl ; ret 0xd989
0x00000000007c84af : sub dword ptr [rbx], eax ; ret
0x00000000007e3921 : sub dword ptr [rbx], eax ; ret 0x629
0x000000000058bcc3 : sub dword ptr [rbx], edx ; add byte ptr [rax + 0x63], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058bc82 : sub dword ptr [rbx], edx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000062bbf1 : sub dword ptr [rcx], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005938c1 : sub dword ptr [rcx], esi ; shr al, 0x87 ; ret 0xe
0x000000000063087a : sub dword ptr [rcx], esi ; test byte ptr [rax - 0x73], 0x78 ; and al, ch ; retf -0xdc9
0x0000000000665f4f : sub dword ptr [rdi + 0x1724], 8 ; ret
0x000000000066b7f0 : sub dword ptr [rdi + 0x4e8], 1 ; je 0x66b809 ; ret
0x000000000068219d : sub dword ptr [rdi + 0x66000000], 0xf ; retf
0x0000000000507db1 : sub dword ptr [rdi + 4], 1 ; lock sub dword ptr [rdi], 1 ; ret
0x0000000000507da1 : sub dword ptr [rdi], 1 ; ret
0x000000000061cfcb : sub dword ptr [rdi], eax ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000746211 : sub dword ptr [rdi], eax ; add byte ptr [rax], al ; test al, 0xf2 ; call rax
0x000000000040ff08 : sub dword ptr [rdi], ebx ; call rax
0x000000000054e638 : sub dword ptr [rdx + 0x18], 1 ; ret
0x000000000062be59 : sub dword ptr [rdx + 0x3d], 0 ; jmp rax
0x000000000041dcdb : sub dword ptr [rdx], ebp ; add cl, cl ; ret
0x0000000000722939 : sub dword ptr [rip + 0x1c98878e], -0x31 ; ret 0x5112
0x00000000006ce090 : sub dword ptr [rip + 0x33f2d9], 1 ; ret
0x000000000079e055 : sub dword ptr [rip - 0x180b1c00], eax ; call qword ptr [rsi]
0x000000000079e075 : sub dword ptr [rip - 0x180b2600], eax ; call qword ptr [rsi]
0x000000000079e095 : sub dword ptr [rip - 0x180b3000], eax ; call qword ptr [rsi]
0x0000000000740199 : sub dword ptr [rip - 0x1ae20000], eax ; call qword ptr [rax]
0x0000000000740169 : sub dword ptr [rip - 0x1ae4f000], eax ; jmp qword ptr [rax]
0x00000000004c3346 : sub dword ptr [rip - 0x70410000], eax ; ret 0x6e
0x00000000004d2e98 : sub dword ptr [rip - 0x70410000], ecx ; ret 0x6e
0x00000000005201a3 : sub dword ptr [rip - 0x76b7ffe6], eax ; ret
0x00000000004388b7 : sub dword ptr [rsi + 0x24], edi ; add byte ptr [rax - 0x77], cl ; ret
0x000000000061bf25 : sub dword ptr [rsi + rax], edi ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000061b4b3 : sub dword ptr [rsi + rdi], esi ; call rax
0x000000000041feec : sub dword ptr [rsi], ebx ; call rax
0x000000000059e955 : sub dword ptr [rsi], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000049ffb7 : sub dword ptr [rsi], edx ; call rax
0x00000000005fc9a3 : sub dword ptr [rsp + rcx], ebx ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x000000000049ffb6 : sub dword ptr cs:[rsi], edx ; call rax
0x000000000042e099 : sub dword ptr es:[rax], eax ; leave ; ret
0x000000000074e0ac : sub dword ptr fs:[rax], eax ; add byte ptr [rsi + rdx*8 - 0x34], ah ; call rax
0x00000000006bdac1 : sub eax, 0x14 ; cmp al, 2 ; jbe 0x6bdad7 ; ret
0x00000000007f3abd : sub eax, 0x19ca3 ; ret
0x0000000000721939 : sub eax, 0x1ccf9e83 ; cwde ; xchg dword ptr [rcx + 0x12], edx ; ret 0x104a
0x000000000040a053 : sub eax, 0x1eb005f ; nop ; pop rbp ; ret
0x0000000000721a18 : sub eax, 0x23 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x38d9
0x00000000007d9d74 : sub eax, 0x23ad03 ; add byte ptr [rax], al ; ret
0x0000000000571970 : sub eax, 0x28 ; ret
0x000000000060a386 : sub eax, 0x29fffffc ; retf -0xfd7
0x0000000000722df0 : sub eax, 0x2cf41c71 ; mov bl, 0x76 ; ret
0x00000000007e5467 : sub eax, 0x2dc205 ; retf 0x62d
0x00000000005fada4 : sub eax, 0x30 ; cmp al, 9 ; setbe al ; jmp 0x5fad82
0x00000000007f23d2 : sub eax, 0x3228906 ; ret
0x0000000000722969 : sub eax, 0x36a9dbfa ; retf
0x00000000005031fd : sub eax, 0x39000001 ; ret 0x8c0f
0x0000000000404042 : sub eax, 0x415d5b00 ; pop rsp ; ret
0x00000000007ec246 : sub eax, 0x50fdc00 ; retf 0x930
0x00000000007e5464 : sub eax, 0x52d9c00 ; ret 0x2d
0x00000000007ed83a : sub eax, 0x52dae00 ; ret 0x2d
0x00000000007f71dc : sub eax, 0x52ff603 ; ret 0x30
0x000000000063ae0f : sub eax, 0x58000999 ; pop rbx ; pop rbp ; ret
0x0000000000406b0f : sub eax, 0x58002cdc ; pop rbx ; pop rbp ; ret
0x00000000006a8f84 : sub eax, 0x5c415d5b ; ret
0x0000000000403da0 : sub eax, 0x5d5b5800 ; ret
0x0000000000646099 : sub eax, 0x74c48949 ; sub ecx, dword ptr [rax - 0x77] ; ret
0x00000000005ae5cd : sub eax, 0x8348000d ; cli ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000578901 : sub eax, 0x8900108c ; ret
0x0000000000571c01 : sub eax, 0x890010f9 ; ret
0x000000000064dd46 : sub eax, 0x89480003 ; ret
0x00000000005fb7f6 : sub eax, 0x8948000c ; ret
0x000000000051d8f3 : sub eax, 0x89480016 ; ret
0x000000000050de7f : sub eax, 0x89480017 ; ret
0x00000000004fe5bd : sub eax, 0x89480018 ; ret
0x00000000005319f7 : sub eax, 0x8948001a ; ret
0x000000000042b8bd : sub eax, 0x89480029 ; ret 0x8948
0x000000000067fb10 : sub eax, 0x89480038 ; ret
0x00000000007d6d5a : sub eax, 0xc30103c5 ; add dword ptr [rdi], ecx ; retf 0x302
0x000000000061fb6f : sub eax, 0xc9000a0e ; ret
0x00000000004534a3 : sub eax, 0xc9fffe7c ; ret
0x0000000000454903 : sub eax, 0xc9ffff86 ; ret
0x0000000000422f77 : sub eax, 0xc9ffff8b ; ret
0x000000000061fbb2 : sub eax, 0xd0ff003e ; leave ; ret
0x000000000078e49d : sub eax, 0xd1700004 ; loope 0x78e4aa ; ret
0x00000000004fa1dc : sub eax, 0xe9ffffff ; ret
0x000000000055e721 : sub eax, 0xeb001214 ; xchg byte ptr [rax - 0x77], cl ; ret
0x000000000055cd8f : sub eax, 0xeb00156b ; retf
0x0000000000610b45 : sub eax, 0xebffffff ; ret 0x8948
0x00000000006cfa56 : sub eax, 0xfe8148 ; retf 0x3b9a
0x00000000004326af : sub eax, 0xff005d02 ; ror cl, 1 ; ret
0x00000000006bda3d : sub eax, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000678b89 : sub eax, 1 ; add rsp, 8 ; ret
0x000000000059e05c : sub eax, 1 ; cmp esi, eax ; jl 0x59e038 ; pop rbx ; ret
0x00000000006bf2b8 : sub eax, 1 ; jne 0x6bf2b5 ; ret
0x00000000005fbb53 : sub eax, 1 ; js 0x5fbb64 ; mov dword ptr [rdi + 4], eax ; ret
0x00000000005fbc03 : sub eax, 1 ; js 0x5fbc14 ; mov dword ptr [rdi + 8], eax ; ret
0x00000000005fbcc1 : sub eax, 1 ; js 0x5fbce8 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000632eed : sub eax, 1 ; js 0x632f11 ; mov dword ptr [rdx + 4], eax ; pop rbx ; ret
0x000000000060c3fb : sub eax, 1 ; ret
0x00000000006a48e6 : sub eax, 4 ; cmp rax, 0xe8 ; jne 0x6a48d9 ; ret
0x00000000006a493a : sub eax, 4 ; cmp rax, 0xe8 ; jne 0x6a4929 ; ret
0x00000000006a53ae : sub eax, 4 ; cmp rax, 0xe8 ; jne 0x6a53a1 ; ret
0x00000000006a540a : sub eax, 4 ; cmp rax, 0xe8 ; jne 0x6a53f9 ; ret
0x000000000040a6b8 : sub eax, dword ptr [r8] ; leave ; ret
0x00000000007ccb83 : sub eax, dword ptr [rax + 0x4d701] ; ret 0x501
0x000000000065e18f : sub eax, dword ptr [rax + rax] ; add rsp, 8 ; ret
0x000000000078e275 : sub eax, dword ptr [rax + rax] ; fmul st(1) ; loope 0x78e282 ; retf 1
0x000000000073cf69 : sub eax, dword ptr [rax + rax] ; push rax ; ja 0x73cf55 ; jmp rax
0x000000000078e20d : sub eax, dword ptr [rax + rax] ; xor cl, cl ; loope 0x78e21a ; retf
0x0000000000414ed7 : sub eax, dword ptr [rax] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000405e1d : sub eax, dword ptr [rax] ; call qword ptr [rip + 0x5fcabb]
0x000000000040a461 : sub eax, dword ptr [rax] ; leave ; ret
0x00000000007c83cb : sub eax, dword ptr [rax] ; mov bl, 7 ; retf
0x00000000007d09d2 : sub eax, dword ptr [rax] ; mov ch, 0x2a ; retf
0x000000000041f30f : sub eax, dword ptr [rax] ; nop ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000007dc6eb : sub eax, dword ptr [rax] ; ret
0x00000000007e5242 : sub eax, dword ptr [rax] ; scasd eax, dword ptr [rdi] ; syscall
0x00000000007e768d : sub eax, dword ptr [rax] ; xchg eax, esp ; sub al, 5 ; ret
0x000000000068ba2f : sub eax, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000077e255 : sub eax, dword ptr [rbx] ; add byte ptr [rax], cl ; mov dh, 0xdd ; call rdi
0x00000000005cfd8b : sub eax, dword ptr [rbx] ; call rax
0x000000000041ba37 : sub eax, dword ptr [rcx + 0x26] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006c5714 : sub eax, dword ptr [rcx - 0x77] ; ret 0x1674
0x000000000075e245 : sub eax, dword ptr [rcx] ; add al, ah ; or al, 0xd2 ; call qword ptr [rbx]
0x0000000000746271 : sub eax, dword ptr [rdi] ; add al, dh ; retf -0xe
0x000000000061cdd7 : sub eax, dword ptr [rdi] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000746269 : sub eax, dword ptr [rdi] ; add byte ptr [rax - 0x36], al ; jmp rax
0x0000000000746249 : sub eax, dword ptr [rdi] ; add byte ptr [rax - 0x54], dh ; jmp qword ptr [rax]
0x00000000007217eb : sub eax, dword ptr [rdx + rbp*2] ; mov bl, 0x5c ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x000000000065cf3c : sub eax, dword ptr [rdx] ; add byte ptr [rax], al ; mov rdi, qword ptr [r12 + 8] ; call rax
0x00000000005dfdce : sub eax, dword ptr [rdx] ; call rax
0x00000000006c5c62 : sub eax, dword ptr [rdx] ; movzx eax, byte ptr [rdx + rax] ; ret
0x000000000079e235 : sub eax, dword ptr [rip - 0x1801fe00] ; jmp rsp
0x00000000007401d9 : sub eax, dword ptr [rip - 0x1ade3000] ; call rax
0x000000000040d8bb : sub eax, dword ptr cs:[rax] ; leave ; ret
0x000000000040c84d : sub eax, dword ptr ds:[rax] ; leave ; ret
0x00000000006d139b : sub eax, eax ; mov byte ptr [rsi + rax], dl ; ret
0x00000000006a00a5 : sub eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006d1450 : sub eax, ecx ; mov byte ptr [rdx + rax], 0x2d ; ret
0x00000000006d0a5a : sub eax, ecx ; mov byte ptr [rdx + rax], sil ; mov eax, r8d ; ret
0x00000000006a1760 : sub eax, ecx ; or rax, rsi ; ret
0x00000000006940bd : sub eax, ecx ; sub edi, eax ; mov eax, edi ; ret
0x00000000006bf4e6 : sub eax, edi ; cmp rdi, rsi ; cmova eax, edx ; ret
0x0000000000676ef8 : sub eax, edi ; ret
0x0000000000506ad4 : sub eax, edx ; add eax, 1 ; ret
0x000000000057691b : sub eax, edx ; mov dword ptr [rdi + 0x10], eax ; add rsp, 8 ; ret
0x00000000006b22f8 : sub eax, edx ; mov qword ptr [rax - 8], rsi ; pop rbx ; ret
0x00000000006a1858 : sub eax, edx ; ret
0x00000000006b6be0 : sub eax, esi ; cmp byte ptr [rcx + rax], 0x7d ; sete al ; ret
0x000000000053adb9 : sub eax, esi ; cmp rdx, rax ; je 0x53ae09 ; xor eax, eax ; ret
0x000000000056fe86 : sub eax, esi ; mov dword ptr [rdi + 0x10], eax ; ret
0x00000000006777cd : sub eax, esi ; sub rcx, rax ; mov rax, rcx ; pop rbx ; ret
0x0000000000562318 : sub ebp, 0xf ; call 0x6be5d5
0x0000000000555181 : sub ebp, dword ptr [rax + 0x29480013] ; ret
0x00000000004138a1 : sub ebp, dword ptr [rbp - 0x76b7ffd6] ; ret 0x8948
0x000000000040db63 : sub ebp, dword ptr [rbx] ; add cl, cl ; ret
0x000000000061fbb1 : sub ebp, dword ptr [rip - 0x2f00ffc2] ; leave ; ret
0x000000000073ac7d : sub ebp, ebx ; call rax
0x00000000007b3cb9 : sub ebp, edi ; call qword ptr [rbx]
0x00000000007b3c71 : sub ebp, edi ; jmp qword ptr [rcx]
0x00000000007402cd : sub ebp, esp ; call rax
0x00000000004bba40 : sub ebx, 1 ; jmp 0x4bba0c
0x00000000004fe702 : sub ebx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044fd5e : sub ebx, dword ptr [rbx] ; call rax
0x00000000004ac981 : sub ebx, dword ptr [rdi] ; and dword ptr [rax], eax ; leave ; ret
0x000000000040fd10 : sub ebx, dword ptr [rdi] ; call rax
0x000000000061cab1 : sub ebx, dword ptr [rsi + 0x3e] ; add bh, bh ; ror cl, 1 ; ret
0x0000000000429ae2 : sub ebx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041fcfa : sub ebx, dword ptr [rsi] ; call rax
0x000000000053fd53 : sub ecx, dword ptr [rax + rax + 0x48] ; add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000006c45d3 : sub ecx, dword ptr [rax - 0x73] ; pop rsi ; retf 0x1ba
0x000000000057597b : sub ecx, dword ptr [rax - 0x77] ; ret
0x00000000006a6746 : sub ecx, dword ptr [rax - 0x77] ; retf 0x2948
0x0000000000632324 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x000000000053ad9c : sub ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000006a218c : sub ecx, dword ptr [rax - 0x7d] ; ret 0x4c01
0x00000000005ad462 : sub ecx, dword ptr [rcx + rcx*4 - 0x19] ; mov r13, rbx ; call 0x5a9e99
0x0000000000664723 : sub ecx, dword ptr [rcx - 0x7d] ; ret
0x000000000062ba3e : sub ecx, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005cdb13 : sub ecx, dword ptr [rdi] ; add cl, cl ; ret
0x000000000054bc37 : sub ecx, dword ptr [rdx + 0x13] ; add al, ch ; retf -0x1472
0x00000000006609e6 : sub ecx, dword ptr [rdx + 0x54] ; add rax, rcx ; ret
0x00000000006a8d94 : sub ecx, dword ptr [rdx] ; mov rax, qword ptr [rax] ; mov byte ptr [rax + rcx], dl ; ret
0x00000000005adacb : sub ecx, dword ptr [rip + 0x48906600] ; mov eax, dword ptr [rdi + 8] ; ret
0x00000000004d2ee7 : sub ecx, dword ptr [rip - 0x70410000] ; ret 0x6e
0x000000000059e7a5 : sub ecx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000069425d : sub ecx, eax ; mov eax, ecx ; add rsp, 0x28 ; ret
0x00000000006777d0 : sub ecx, eax ; mov rax, rcx ; pop rbx ; ret
0x000000000069ca47 : sub ecx, eax ; rol edx, cl ; lea eax, dword ptr [rdx + rsi] ; ret
0x00000000006d68f8 : sub ecx, ebx ; ret 0xf764
0x000000000075b9a9 : sub ecx, edx ; jmp qword ptr [rax]
0x000000000050864e : sub ecx, edx ; xor edx, edx ; div ecx ; mov eax, edx ; pop rbx ; ret
0x00000000007bdd69 : sub ecx, esi ; jmp qword ptr [rbx]
0x00000000005815b1 : sub ecx, esi ; lea rdi, qword ptr [rcx + 1] ; jmp 0x581583
0x000000000074c619 : sub ecx, esp ; call rsp
0x000000000075b9a8 : sub ecx, r10d ; jmp qword ptr [rax]
0x00000000004057b9 : sub edi, 0x2c ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000061acb9 : sub edi, dword ptr [rsi + rdi] ; call rax
0x00000000005bcab5 : sub edi, dword ptr [rsp + rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006940bf : sub edi, eax ; mov eax, edi ; ret
0x000000000068f0bb : sub edi, eax ; mov rax, rdi ; ret
0x000000000074a6dd : sub edi, ecx ; jmp qword ptr [rax]
0x00000000006b71ba : sub edx, 0x19 ; call 0x403c75
0x0000000000693a82 : sub edx, 1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000519f83 : sub edx, 1 ; ret
0x000000000057e7b3 : sub edx, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; cli ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000054a681 : sub edx, dword ptr [rbx + 0x14] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000058ba29 : sub edx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000048fce6 : sub edx, dword ptr [rdi] ; call rax
0x00000000004db251 : sub edx, dword ptr [rip - 0x70410000] ; ret 0x6e
0x000000000049fdcc : sub edx, dword ptr [rsi] ; call rax
0x000000000067f290 : sub edx, eax ; mov byte ptr [rsi + rdx], dil ; mov eax, ebx ; pop rbx ; ret
0x00000000006be45d : sub edx, eax ; movzx eax, byte ptr [rdi + rdx] ; ret
0x0000000000763d29 : sub edx, ebp ; call rcx
0x000000000074b6bd : sub edx, edi ; call qword ptr [rax]
0x000000000074b6ad : sub edx, edi ; jmp rax
0x00000000005bcbfd : sub esi, -1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000534814 : sub esi, dword ptr [rcx + 0x148d231] ; ret
0x0000000000584881 : sub esi, dword ptr [rcx + 0x29480010] ; ret
0x00000000005d37f4 : sub esi, dword ptr [rcx] ; mov rdi, rax ; call 0x68fa48
0x000000000051b8fb : sub esi, eax ; add eax, 1 ; cmp edi, esi ; jl 0x51b8e9 ; ret
0x000000000058654b : sub esi, eax ; add eax, 1 ; cmp edi, esi ; jl 0x586539 ; ret
0x0000000000586db7 : sub esi, eax ; add eax, 1 ; cmp edi, esi ; jl 0x586da9 ; ret
0x0000000000501489 : sub esi, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000006b27a2 : sub esi, eax ; lea rax, qword ptr [rsi + 1] ; ret
0x00000000007bde41 : sub esi, ecx ; call qword ptr [rcx]
0x00000000006b7989 : sub esi, esi ; add rsi, rbp ; call 0x403c77
0x00000000006cd1c1 : sub esi, esi ; ret
0x00000000006116e9 : sub esp, -0x80 ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000060726a : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006acc58 : sub esp, -0x80 ; pop rbx ; ret
0x00000000006b4f79 : sub esp, 0x18 ; call 0x6819b5
0x00000000005b1da4 : sub esp, 0x18 ; call 0x6be895
0x0000000000575e4d : sub esp, 0x30 ; call qword ptr [rip + 0x48ca92]
0x00000000006d6655 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004aba4d : sub esp, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x2c7
0x0000000000795fa1 : sub esp, ebp ; call rcx
0x0000000000775ec9 : sub esp, ebx ; jmp qword ptr [rax]
0x000000000074c4d9 : sub esp, ecx ; call qword ptr [rdx]
0x000000000079b409 : sub esp, edi ; jmp qword ptr [rax]
0x000000000058bc81 : sub qword ptr [r11], rdx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000429a7e : sub qword ptr [rax], r8 ; leave ; ret
0x000000000079e054 : sub qword ptr [rip - 0x180b1c00], r8 ; call qword ptr [rsi]
0x000000000047fe9f : sub r11b, byte ptr [r8] ; call rax
0x0000000000562317 : sub r13, 0xf ; call 0x6be5d6
0x000000000041c107 : sub r8b, byte ptr [r8] ; leave ; ret
0x000000000040a460 : sub r8d, dword ptr [rax] ; leave ; ret
0x000000000057196f : sub rax, 0x28 ; ret
0x00000000006bf2b7 : sub rax, 1 ; jne 0x6bf2b6 ; ret
0x000000000060c3fa : sub rax, 1 ; ret
0x00000000006c5c61 : sub rax, qword ptr [r10] ; movzx eax, byte ptr [rdx + rax] ; ret
0x000000000061ce61 : sub rax, qword ptr [r15] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000006d139a : sub rax, r8 ; mov byte ptr [rsi + rax], dl ; ret
0x00000000006a00a4 : sub rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006d144f : sub rax, rcx ; mov byte ptr [rdx + rax], 0x2d ; ret
0x0000000000676ef7 : sub rax, rdi ; ret
0x00000000006b22f7 : sub rax, rdx ; mov qword ptr [rax - 8], rsi ; pop rbx ; ret
0x00000000006a1857 : sub rax, rdx ; ret
0x00000000007b3cb8 : sub rbp, rdi ; call qword ptr [rbx]
0x00000000006a8d93 : sub rcx, qword ptr [r10] ; mov rax, qword ptr [rax] ; mov byte ptr [rax + rcx], dl ; ret
0x00000000006777cf : sub rcx, rax ; mov rax, rcx ; pop rbx ; ret
0x00000000005815b0 : sub rcx, rsi ; lea rdi, qword ptr [rcx + 1] ; jmp 0x581584
0x000000000068f0ba : sub rdi, rax ; mov rax, rdi ; ret
0x00000000006b71b9 : sub rdx, 0x19 ; call 0x403c76
0x00000000006be45c : sub rdx, rax ; movzx eax, byte ptr [rdi + rdx] ; ret
0x00000000006b7988 : sub rsi, r14 ; add rsi, rbp ; call 0x403c78
0x00000000006b27a1 : sub rsi, rax ; lea rax, qword ptr [rsi + 1] ; ret
0x00000000006116e8 : sub rsp, -0x80 ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000607269 : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006acc57 : sub rsp, -0x80 ; pop rbx ; ret
0x00000000006b4f78 : sub rsp, 0x18 ; call 0x6819b6
0x00000000005b1da3 : sub rsp, 0x18 ; call 0x6be896
0x0000000000575e4c : sub rsp, 0x30 ; call qword ptr [rip + 0x48ca92]
0x00000000006d6654 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000078bb18 : sub spl, cl ; call qword ptr [rcx]
0x0000000000441965 : subps xmm0, xmmword ptr [rax] ; call rax
0x0000000000400a48 : syscall
0x000000000057c73d : sysenter
0x0000000000745c69 : sysret ; add al, dh ; stosb byte ptr [rdi], al ; int1 ; call rax
0x000000000059e6e6 : test ah, 1 ; jne 0x59e736 ; call r12
0x000000000059e893 : test ah, 1 ; jne 0x59e8e6 ; call r12
0x00000000005a125b : test ah, 1 ; jne 0x5a12ae ; call r12
0x00000000005a4e1f : test ah, 1 ; jne 0x5a4e76 ; call r12
0x0000000000589b67 : test ah, 1 ; mov rcx, r12 ; jne 0x589bc0 ; call rcx
0x0000000000526dd5 : test ah, 1 ; mov rdx, r12 ; jne 0x526e28 ; call rdx
0x0000000000589752 : test ah, 1 ; mov rdx, r12 ; jne 0x5897a8 ; call rdx
0x0000000000590bb5 : test ah, 1 ; mov rdx, r12 ; jne 0x590c08 ; call rdx
0x00000000004f81d7 : test ah, al ; jne 0x4f81e8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000550800 : test ah, al ; jne 0x550811 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000056f39f : test ah, al ; jne 0x56f3b0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005bd233 : test ah, al ; jne 0x5bd244 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005bd9ba : test ah, al ; jne 0x5bd9cb ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005fd912 : test ah, al ; jne 0x5fd923 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000608d70 : test ah, al ; jne 0x608d81 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000609180 : test ah, al ; jne 0x609191 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000063702a : test ah, al ; jne 0x63703b ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000063b0cf : test ah, al ; jne 0x63b125 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000063b353 : test ah, al ; jne 0x63b3a5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000052d25f : test ah, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005503f5 : test ah, bl ; jne 0x550412 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000550715 : test ah, bl ; jne 0x550733 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005597b6 : test ah, bl ; jne 0x5597c7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000057212f : test ah, bl ; jne 0x572140 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000062e294 : test ah, bl ; jne 0x62e2a5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000076a38c : test ah, ch ; add dword ptr [rax], eax ; and byte ptr [rsi - 0x27], ch ; jmp qword ptr [rax]
0x0000000000512da3 : test ah, ch ; jne 0x512db4 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005321c7 : test ah, ch ; jne 0x5321d8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005596f6 : test ah, ch ; jne 0x559707 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000588068 : test ah, ch ; jne 0x58808d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000593877 : test ah, ch ; jne 0x593888 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000593e07 : test ah, ch ; jne 0x593e18 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005bd381 : test ah, ch ; jne 0x5bd392 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005fdb50 : test ah, ch ; jne 0x5fdb61 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000062e894 : test ah, ch ; jne 0x62e8a5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000063a2fb : test ah, ch ; jne 0x63a32c ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000647fb6 : test ah, ch ; jne 0x647fe1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006481b1 : test ah, ch ; jne 0x6481f5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000648338 : test ah, ch ; jne 0x64836a ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006484b4 : test ah, ch ; jne 0x648502 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000678fa7 : test ah, ch ; jne 0x678fb8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000679067 : test ah, ch ; jne 0x679078 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005bc206 : test ah, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006cd976 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004f74b3 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000007a7a88 : test al, 0x10 ; in al, dx ; jmp qword ptr [rsi]
0x0000000000555122 : test al, 0x13 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000546ac2 : test al, 0x13 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000563cdc : test al, 0x15 ; add byte ptr [rax - 0x75], cl ; push rbp ; sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000563dbf : test al, 0x15 ; add byte ptr [rax - 0x77], cl ; ret 0xc7
0x0000000000555e24 : test al, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000539ef2 : test al, 0x19 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a3cf2 : test al, 0x21 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000476528 : test al, 0x22 ; add byte ptr [rcx - 0x77], cl ; ret 0x8949
0x000000000046ffa1 : test al, 0x23 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004252a8 : test al, 0x25 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000453cfa : test al, 0x26 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000749a10 : test al, 0x33 ; or byte ptr [rax], al ; push rax ; loop 0x749a15 ; call rax
0x000000000062481c : test al, 0x3e ; add byte ptr ds:[rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4847
0x000000000073d508 : test al, 0x45 ; add al, 0 ; push rax ; ret
0x000000000047c7f1 : test al, 0x48 ; add esp, 0x70 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000044b94c : test al, 0x48 ; add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000005f6ace : test al, 0x48 ; mov eax, dword ptr [rip + 0x40be12] ; call rax
0x00000000005f1608 : test al, 0x48 ; mov eax, dword ptr [rip + 0x4112d8] ; call rax
0x00000000005edd9f : test al, 0x48 ; mov eax, dword ptr [rip + 0x414b41] ; call rax
0x0000000000479c19 : test al, 0x48 ; mov eax, dword ptr [rip + 0x588cc7] ; call rax
0x0000000000509a04 : test al, 0x48 ; mov ebx, eax ; jmp 0x5099d2
0x0000000000523f15 : test al, 0x48 ; mov ebx, eax ; jmp 0x523ee3
0x00000000005693d5 : test al, 0x48 ; mov ebx, eax ; jmp 0x5693a3
0x0000000000628a64 : test al, 0x48 ; mov ebx, eax ; jmp 0x628a32
0x0000000000421fe9 : test al, 0x48 ; mov edi, edx ; mov rsi, rax ; call 0x41ea63
0x0000000000462916 : test al, 0x4b ; add byte ptr [rax], al ; leave ; ret
0x0000000000736fd0 : test al, 0x51 ; add al, byte ptr [rax] ; js 0x736fb0 ; call rax
0x0000000000737008 : test al, 0x52 ; add al, byte ptr [rax] ; push rax ; jge 0x736fe8 ; call rax
0x00000000007446ec : test al, 0x54 ; out dx, al ; jmp qword ptr [rax]
0x000000000073a580 : test al, 0x56 ; add eax, dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; rcr bl, cl ; call rax
0x0000000000434126 : test al, 0x58 ; ret
0x000000000062221c : test al, 0x64 ; add byte ptr ds:[rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4847
0x00000000007411d8 : test al, 0x7f ; add eax, 0xe6a98000 ; call qword ptr [rax]
0x000000000043bc3a : test al, 0x89 ; push rax ; sbb cl, ch ; ret
0x00000000007ad658 : test al, 0x8a ; in eax, dx ; call qword ptr [rcx]
0x00000000005d9553 : test al, 0x8b ; adc byte ptr [rcx], dil ; ret 0x2b7e
0x00000000004c9df7 : test al, 0x8b ; add al, 0x39 ; ret 0x277e
0x0000000000452635 : test al, 0x8b ; add byte ptr [rcx], bh ; ret 0x167c
0x0000000000452646 : test al, 0x8b ; add byte ptr [rcx], ch ; ret 0xd089
0x0000000000737c88 : test al, 0x8e ; add al, byte ptr [rax] ; ret 0xd3eb
0x000000000043ca5f : test al, 0x90 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000074af88 : test al, 0x91 ; or byte ptr [rax], al ; mov al, 0x9c ; stc ; jmp rax
0x000000000073b1d0 : test al, 0x98 ; add eax, dword ptr [rax] ; mov ebp, ebx ; jmp rax
0x0000000000629e80 : test al, 0xa ; add byte ptr [rax - 0x77], cl ; ret
0x000000000074b388 : test al, 0xa0 ; or byte ptr [rax], al ; add al, al ; stc ; call rax
0x00000000007382d8 : test al, 0xac ; add al, byte ptr [rax] ; sahf ; ret 0xffd4
0x00000000007b75a8 : test al, 0xb9 ; out dx, eax ; jmp qword ptr [rsi]
0x00000000007385c8 : test al, 0xbb ; add al, byte ptr [rax] ; retf -0x2b
0x000000000066ab69 : test al, 0xc ; add byte ptr [rax], al ; leave ; ret
0x0000000000669d38 : test al, 0xc ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x0000000000547f53 : test al, 0xc4 ; add byte ptr [r8], al ; setne al ; ret
0x00000000007572f0 : test al, 0xce ; iretd ; call rcx
0x00000000005a3a58 : test al, 0xd ; add cl, ch ; ret 0xfffe
0x0000000000735d35 : test al, 0xd0 ; call qword ptr [rax]
0x0000000000737925 : test al, 0xd3 ; jmp qword ptr [rax]
0x0000000000738125 : test al, 0xd4 ; call qword ptr [rax]
0x0000000000738115 : test al, 0xd4 ; call rax
0x0000000000762bd9 : test al, 0xd4 ; jmp qword ptr [rbx]
0x0000000000770691 : test al, 0xda ; jmp qword ptr [rcx]
0x0000000000735708 : test al, 0xdc ; add dword ptr [rax], eax ; mov edx, ds ; iretd ; call rax
0x000000000073bf78 : test al, 0xdd ; add eax, dword ptr [rax] ; ret
0x000000000079c581 : test al, 0xe7 ; call rsp
0x00000000004351d1 : test al, 0xe8 ; pop rbx ; ret
0x0000000000742cb5 : test al, 0xea ; jmp qword ptr [rax]
0x00000000007436f5 : test al, 0xeb ; jmp rax
0x0000000000743dbd : test al, 0xec ; jmp qword ptr [rax]
0x00000000007c0e9d : test al, 0xf ; add eax, 0xc4000fd4 ; syscall
0x0000000000723216 : test al, 0xf ; mov esi, 0x6e1077f ; ret
0x00000000006af73c : test al, 0xf ; test bh, dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0xb60f
0x0000000000746215 : test al, 0xf2 ; call rax
0x0000000000747fdd : test al, 0xf5 ; call rax
0x0000000000747fa5 : test al, 0xf5 ; jmp qword ptr [rax]
0x00000000007497ad : test al, 0xf7 ; call rax
0x000000000074b1cd : test al, 0xf9 ; call rax
0x00000000005125e9 : test al, 0xff ; ror byte ptr [rax - 0x7d], 1 ; clc ; dec dword ptr [rax - 0x77] ; ret 0xb8
0x00000000007f3b43 : test al, 1 ; add eax, 0x195ac ; retf
0x00000000004f7868 : test al, 1 ; jne 0x4f79fa ; call rax
0x00000000004f7fcd : test al, 1 ; jne 0x4f813d ; call rax
0x00000000004f802b : test al, 1 ; jne 0x4f8157 ; call rax
0x00000000005011bb : test al, 1 ; jne 0x5011cf ; mov esi, 1 ; jmp rax
0x00000000005019db : test al, 1 ; jne 0x501ae5 ; call rax
0x0000000000501aa7 : test al, 1 ; jne 0x501b3b ; call rax
0x0000000000503c5b : test al, 1 ; jne 0x503c65 ; jmp rax
0x00000000005043f0 : test al, 1 ; jne 0x504419 ; mov rdi, rbx ; call rax
0x0000000000504430 : test al, 1 ; jne 0x504456 ; mov rdi, rbx ; call rax
0x0000000000504470 : test al, 1 ; jne 0x504496 ; mov rdi, rbx ; call rax
0x00000000005044ac : test al, 1 ; jne 0x5044b6 ; jmp rax
0x000000000050adfb : test al, 1 ; jne 0x50ae53 ; mov rsi, rsp ; call rax
0x000000000050bd3b : test al, 1 ; jne 0x50bd4f ; mov esi, 1 ; jmp rax
0x000000000050beeb : test al, 1 ; jne 0x50beff ; mov esi, 1 ; jmp rax
0x000000000050bf5b : test al, 1 ; jne 0x50bf6f ; mov esi, 1 ; jmp rax
0x000000000050f57b : test al, 1 ; jne 0x50f58f ; mov esi, 1 ; jmp rax
0x000000000050f60b : test al, 1 ; jne 0x50f61f ; mov esi, 1 ; jmp rax
0x000000000050f6bb : test al, 1 ; jne 0x50f6cf ; mov esi, 1 ; jmp rax
0x000000000050f8af : test al, 1 ; jne 0x50f8e0 ; xor esi, esi ; jmp rax
0x000000000050face : test al, 1 ; jne 0x50fb39 ; call rax
0x0000000000512523 : test al, 1 ; jne 0x51283d ; call rax
0x0000000000512b8b : test al, 1 ; jne 0x512b9f ; mov esi, 1 ; jmp rax
0x000000000051327e : test al, 1 ; jne 0x5132a1 ; add rsp, 8 ; jmp rax
0x0000000000513303 : test al, 1 ; jne 0x513337 ; add rsp, 8 ; jmp rax
0x00000000005133a7 : test al, 1 ; jne 0x5133c7 ; call rax
0x00000000005133e0 : test al, 1 ; jne 0x5133ea ; jmp rax
0x0000000000513423 : test al, 1 ; jne 0x51342d ; jmp rax
0x0000000000513463 : test al, 1 ; jne 0x51346d ; jmp rax
0x00000000005134a3 : test al, 1 ; jne 0x5134ad ; jmp rax
0x0000000000513514 : test al, 1 ; jne 0x513534 ; call rax
0x0000000000513553 : test al, 1 ; jne 0x51355d ; jmp rax
0x0000000000513590 : test al, 1 ; jne 0x51359a ; jmp rax
0x00000000005135d4 : test al, 1 ; jne 0x5135de ; jmp rax
0x00000000005135d3 : test al, 1 ; jne 0x5135df ; jmp rax
0x00000000005135d2 : test al, 1 ; jne 0x5135e0 ; jmp rax
0x000000000051385b : test al, 1 ; jne 0x513925 ; call rax
0x0000000000513ced : test al, 1 ; jne 0x513deb ; call rax
0x0000000000513cec : test al, 1 ; jne 0x513dec ; call rax
0x0000000000516e0b : test al, 1 ; jne 0x516e1f ; mov esi, 1 ; jmp rax
0x0000000000516e84 : test al, 1 ; jne 0x516ea7 ; mov esi, 1 ; call rax
0x0000000000517acb : test al, 1 ; jne 0x517cde ; call rax
0x0000000000517db0 : test al, 1 ; jne 0x517dd0 ; mov rsi, rbx ; call rax
0x0000000000517e40 : test al, 1 ; jne 0x517e60 ; mov rsi, rbx ; call rax
0x0000000000517fe0 : test al, 1 ; jne 0x518000 ; mov rsi, rbx ; call rax
0x0000000000518070 : test al, 1 ; jne 0x518090 ; mov rsi, rbx ; call rax
0x00000000005187cd : test al, 1 ; jne 0x51892c ; call rax
0x0000000000518a3f : test al, 1 ; jne 0x518ab5 ; call rax
0x0000000000519310 : test al, 1 ; jne 0x519327 ; jmp rax
0x0000000000519344 : test al, 1 ; jne 0x519366 ; call rax
0x0000000000519343 : test al, 1 ; jne 0x519367 ; call rax
0x0000000000519342 : test al, 1 ; jne 0x519368 ; call rax
0x0000000000519384 : test al, 1 ; jne 0x5193b0 ; call rax
0x0000000000519383 : test al, 1 ; jne 0x5193b1 ; call rax
0x0000000000519382 : test al, 1 ; jne 0x5193b2 ; call rax
0x00000000005193d4 : test al, 1 ; jne 0x5193f7 ; call rax
0x00000000005193d3 : test al, 1 ; jne 0x5193f8 ; call rax
0x00000000005193d2 : test al, 1 ; jne 0x5193f9 ; call rax
0x0000000000519414 : test al, 1 ; jne 0x51943a ; call rax
0x0000000000519413 : test al, 1 ; jne 0x51943b ; call rax
0x0000000000519412 : test al, 1 ; jne 0x51943c ; call rax
0x0000000000519450 : test al, 1 ; jne 0x51945a ; jmp rax
0x000000000051944f : test al, 1 ; jne 0x51945b ; jmp rax
0x000000000051944e : test al, 1 ; jne 0x51945c ; jmp rax
0x0000000000519496 : test al, 1 ; jne 0x5194a0 ; jmp rax
0x00000000005194d0 : test al, 1 ; jne 0x5194da ; jmp rax
0x0000000000519510 : test al, 1 ; jne 0x519527 ; jmp rax
0x0000000000519dd6 : test al, 1 ; jne 0x519eaf ; call rax
0x000000000051a5f7 : test al, 1 ; jne 0x51a8d0 ; call rax
0x000000000051a6e1 : test al, 1 ; jne 0x51a99d ; call rax
0x000000000051abf4 : test al, 1 ; jne 0x51ac2d ; mov esi, ebx ; call rax
0x000000000051ab27 : test al, 1 ; jne 0x51ac98 ; call rax
0x0000000000525ea3 : test al, 1 ; jne 0x525f0f ; mov rsi, rsp ; call rax
0x000000000052b914 : test al, 1 ; jne 0x52bc96 ; call rax
0x000000000052b8d6 : test al, 1 ; jne 0x52bcf8 ; call rax
0x000000000052c449 : test al, 1 ; jne 0x52c4ce ; mov esi, 1 ; call rax
0x000000000052cbd2 : test al, 1 ; jne 0x52cfe0 ; call rax
0x000000000052db6b : test al, 1 ; jne 0x52db7f ; mov esi, 1 ; jmp rax
0x000000000052dceb : test al, 1 ; jne 0x52dcff ; mov esi, 1 ; jmp rax
0x000000000052dd6b : test al, 1 ; jne 0x52dd7f ; mov esi, 1 ; jmp rax
0x000000000052eddb : test al, 1 ; jne 0x52edef ; mov esi, 1 ; jmp rax
0x000000000052ef7b : test al, 1 ; jne 0x52ef8f ; mov esi, 1 ; jmp rax
0x000000000053001b : test al, 1 ; jne 0x53002f ; mov esi, 1 ; jmp rax
0x000000000053019b : test al, 1 ; jne 0x5301af ; mov esi, 1 ; jmp rax
0x000000000053021b : test al, 1 ; jne 0x53022f ; mov esi, 1 ; jmp rax
0x000000000053113a : test al, 1 ; jne 0x531418 ; call rax
0x00000000005312b0 : test al, 1 ; jne 0x531425 ; call rax
0x0000000000530fb1 : test al, 1 ; jne 0x531432 ; call rax
0x0000000000535694 : test al, 1 ; jne 0x5356cc ; call rax
0x000000000053574c : test al, 1 ; jne 0x5357b1 ; call rax
0x0000000000536dbb : test al, 1 ; jne 0x536dcf ; mov esi, 1 ; jmp rax
0x000000000053722c : test al, 1 ; jne 0x537274 ; mov rdx, rsp ; call rax
0x000000000053880b : test al, 1 ; jne 0x53881f ; mov esi, 1 ; jmp rax
0x000000000053928b : test al, 1 ; jne 0x53929f ; mov esi, 1 ; jmp rax
0x000000000053acab : test al, 1 ; jne 0x53acbf ; mov esi, 1 ; jmp rax
0x000000000053ae51 : test al, 1 ; jne 0x53af18 ; call rax
0x000000000053afc3 : test al, 1 ; jne 0x53b08b ; call rax
0x000000000053c7eb : test al, 1 ; jne 0x53c7ff ; mov esi, 1 ; jmp rax
0x000000000053c86b : test al, 1 ; jne 0x53c87f ; mov esi, 1 ; jmp rax
0x000000000053da40 : test al, 1 ; jne 0x53da4f ; call rax
0x000000000053ed1b : test al, 1 ; jne 0x53ed2f ; mov esi, 1 ; jmp rax
0x000000000053eef0 : test al, 1 ; jne 0x53ef10 ; mov rsi, rbx ; call rax
0x000000000053ef80 : test al, 1 ; jne 0x53efa0 ; mov rsi, rbx ; call rax
0x0000000000542a8b : test al, 1 ; jne 0x542a9f ; mov esi, 1 ; jmp rax
0x000000000054647b : test al, 1 ; jne 0x54648f ; mov esi, 1 ; jmp rax
0x00000000005465fb : test al, 1 ; jne 0x54660f ; mov esi, 1 ; jmp rax
0x000000000054667b : test al, 1 ; jne 0x54668f ; mov esi, 1 ; jmp rax
0x000000000054a31a : test al, 1 ; jne 0x54a392 ; call rax
0x000000000054a3de : test al, 1 ; jne 0x54a543 ; call rax
0x000000000054a910 : test al, 1 ; jne 0x54a927 ; jmp rax
0x000000000054a944 : test al, 1 ; jne 0x54a966 ; call rax
0x000000000054a943 : test al, 1 ; jne 0x54a967 ; call rax
0x000000000054a942 : test al, 1 ; jne 0x54a968 ; call rax
0x000000000054a984 : test al, 1 ; jne 0x54a9a4 ; call rax
0x000000000054a983 : test al, 1 ; jne 0x54a9a5 ; call rax
0x000000000054a982 : test al, 1 ; jne 0x54a9a6 ; call rax
0x000000000054a9c4 : test al, 1 ; jne 0x54a9e7 ; call rax
0x000000000054a9c3 : test al, 1 ; jne 0x54a9e8 ; call rax
0x000000000054a9c2 : test al, 1 ; jne 0x54a9e9 ; call rax
0x000000000054aa04 : test al, 1 ; jne 0x54aa2a ; call rax
0x000000000054aa03 : test al, 1 ; jne 0x54aa2b ; call rax
0x000000000054aa02 : test al, 1 ; jne 0x54aa2c ; call rax
0x000000000054aa40 : test al, 1 ; jne 0x54aa4a ; jmp rax
0x000000000054aa3f : test al, 1 ; jne 0x54aa4b ; jmp rax
0x000000000054aa3e : test al, 1 ; jne 0x54aa4c ; jmp rax
0x000000000054aa86 : test al, 1 ; jne 0x54aa90 ; jmp rax
0x000000000054aac0 : test al, 1 ; jne 0x54aaca ; jmp rax
0x000000000054ab00 : test al, 1 ; jne 0x54ab17 ; jmp rax
0x000000000054ab89 : test al, 1 ; jne 0x54ac5e ; call rax
0x000000000054ae57 : test al, 1 ; jne 0x54b130 ; call rax
0x000000000054af37 : test al, 1 ; jne 0x54b1fd ; call rax
0x000000000054b450 : test al, 1 ; jne 0x54b489 ; mov esi, ebx ; call rax
0x000000000054b384 : test al, 1 ; jne 0x54b4f8 ; call rax
0x000000000054bae0 : test al, 1 ; jne 0x54baf7 ; jmp rax
0x000000000054eb45 : test al, 1 ; jne 0x54eeaf ; call rax
0x000000000054eb08 : test al, 1 ; jne 0x54ef11 ; call rax
0x000000000054f658 : test al, 1 ; jne 0x54f6dd ; mov esi, 1 ; call rax
0x000000000054f8bb : test al, 1 ; jne 0x54f8cf ; mov esi, 1 ; jmp rax
0x000000000054fa5b : test al, 1 ; jne 0x54fa6f ; mov esi, 1 ; jmp rax
0x00000000005516e1 : test al, 1 ; jne 0x551a14 ; call rax
0x000000000055124e : test al, 1 ; jne 0x551a42 ; call rax
0x000000000055270d : test al, 1 ; jne 0x553480 ; call rax
0x00000000005527cc : test al, 1 ; jne 0x55348d ; call rax
0x0000000000552680 : test al, 1 ; jne 0x553e65 ; call rax
0x0000000000552bc2 : test al, 1 ; jne 0x553edb ; call rax
0x000000000055263e : test al, 1 ; jne 0x55403b ; call rax
0x00000000005549a6 : test al, 1 ; jne 0x554b3f ; call rax
0x0000000000558a2b : test al, 1 ; jne 0x558a3f ; mov esi, 1 ; jmp rax
0x0000000000558bdb : test al, 1 ; jne 0x558bef ; mov esi, 1 ; jmp rax
0x0000000000558c4b : test al, 1 ; jne 0x558c5f ; mov esi, 1 ; jmp rax
0x0000000000562db0 : test al, 1 ; jne 0x562dd0 ; mov rsi, rbx ; call rax
0x0000000000562e40 : test al, 1 ; jne 0x562e60 ; mov rsi, rbx ; call rax
0x000000000056b3b2 : test al, 1 ; jne 0x56b41e ; mov rsi, rsp ; call rax
0x000000000056b79b : test al, 1 ; jne 0x56b7af ; mov esi, 1 ; jmp rax
0x000000000056b91b : test al, 1 ; jne 0x56b92f ; mov esi, 1 ; jmp rax
0x000000000056b99b : test al, 1 ; jne 0x56b9af ; mov esi, 1 ; jmp rax
0x0000000000572edb : test al, 1 ; jne 0x572eef ; mov esi, 1 ; jmp rax
0x000000000057306b : test al, 1 ; jne 0x57307f ; mov esi, 1 ; jmp rax
0x000000000057e3fb : test al, 1 ; jne 0x57e40f ; mov esi, 1 ; jmp rax
0x000000000058167b : test al, 1 ; jne 0x58168f ; mov esi, 1 ; jmp rax
0x00000000005820b9 : test al, 1 ; jne 0x5820d9 ; mov rdi, rsi ; jmp rax
0x00000000005826eb : test al, 1 ; jne 0x5826ff ; mov esi, 1 ; jmp rax
0x0000000000584220 : test al, 1 ; jne 0x584240 ; mov rsi, rbx ; call rax
0x00000000005842b0 : test al, 1 ; jne 0x5842d0 ; mov rsi, rbx ; call rax
0x0000000000595cdc : test al, 1 ; jne 0x595d34 ; mov rsi, rsp ; call rax
0x000000000059608b : test al, 1 ; jne 0x59609f ; mov esi, 1 ; jmp rax
0x000000000059621b : test al, 1 ; jne 0x59622f ; mov esi, 1 ; jmp rax
0x0000000000596eeb : test al, 1 ; jne 0x596eff ; mov esi, 1 ; jmp rax
0x000000000059708b : test al, 1 ; jne 0x59709f ; mov esi, 1 ; jmp rax
0x0000000000597e4b : test al, 1 ; jne 0x597e5f ; mov esi, 1 ; jmp rax
0x0000000000597fcb : test al, 1 ; jne 0x597fdf ; mov esi, 1 ; jmp rax
0x000000000059804b : test al, 1 ; jne 0x59805f ; mov esi, 1 ; jmp rax
0x0000000000598f8b : test al, 1 ; jne 0x598f9f ; mov esi, 1 ; jmp rax
0x00000000005a2ccb : test al, 1 ; jne 0x5a2cdf ; mov esi, 1 ; jmp rax
0x00000000005a2e6b : test al, 1 ; jne 0x5a2e7f ; mov esi, 1 ; jmp rax
0x00000000005a6fc0 : test al, 1 ; jne 0x5a6fe0 ; mov rsi, rbx ; call rax
0x00000000005a7050 : test al, 1 ; jne 0x5a7070 ; mov rsi, rbx ; call rax
0x00000000005a8c8b : test al, 1 ; jne 0x5a8c9f ; mov esi, 1 ; jmp rax
0x00000000005a8e0b : test al, 1 ; jne 0x5a8e1f ; mov esi, 1 ; jmp rax
0x00000000005a8e7b : test al, 1 ; jne 0x5a8e8f ; mov esi, 1 ; jmp rax
0x00000000005b8a3a : test al, 1 ; jne 0x5b8a49 ; call rax
0x00000000005b8c1c : test al, 1 ; jne 0x5b8dd7 ; call rax
0x00000000005c6897 : test al, 1 ; jne 0x5c68c5 ; mov esi, 2 ; call rax
0x00000000005c72f8 : test al, 1 ; jne 0x5c74bc ; call rax
0x00000000005f7c44 : test al, 1 ; jne 0x5f7c4e ; jmp rax
0x00000000005f7c84 : test al, 1 ; jne 0x5f7c8e ; jmp rax
0x00000000005f8ca4 : test al, 1 ; jne 0x5f8cae ; jmp rax
0x00000000005f8f4b : test al, 1 ; jne 0x5f8f5f ; mov esi, 1 ; jmp rax
0x000000000060ca87 : test al, 1 ; jne 0x60cf7b ; call rax
0x000000000060ca66 : test al, 1 ; jne 0x60cf88 ; call rax
0x00000000006265a0 : test al, 1 ; jne 0x626628 ; mov rsi, rsp ; call rax
0x000000000062a296 : test al, 1 ; jne 0x62a2ee ; mov rsi, rsp ; call rax
0x000000000062b1ab : test al, 1 ; jne 0x62b1bf ; mov esi, 1 ; jmp rax
0x000000000062b35b : test al, 1 ; jne 0x62b36f ; mov esi, 1 ; jmp rax
0x000000000062b3cb : test al, 1 ; jne 0x62b3df ; mov esi, 1 ; jmp rax
0x000000000062dd90 : test al, 1 ; jne 0x62df43 ; call rax
0x0000000000631a88 : test al, 1 ; jne 0x631abd ; call rax
0x0000000000636a2f : test al, 1 ; jne 0x636f25 ; call rax
0x0000000000636b19 : test al, 1 ; jne 0x636f3f ; call rax
0x0000000000637f5b : test al, 1 ; jne 0x6382ca ; call rax
0x000000000063a2e6 : test al, 1 ; jne 0x63a33e ; mov esi, 1 ; call rax
0x0000000000640326 : test al, 1 ; jne 0x646122 ; call rax
0x0000000000647f95 : test al, 1 ; jne 0x647ff3 ; mov esi, 1 ; call rax
0x0000000000647f73 : test al, 1 ; jne 0x647ffd ; mov esi, 1 ; call rax
0x0000000000648316 : test al, 1 ; jne 0x64837c ; mov esi, 1 ; call rax
0x0000000000649475 : test al, 1 ; jne 0x649870 ; call rax
0x000000000064a062 : test al, 1 ; jne 0x64a50f ; call rax
0x000000000064f8fb : test al, 1 ; jne 0x650690 ; call rax
0x0000000000651562 : test al, 1 ; jne 0x6526e6 ; call rax
0x00000000006528b7 : test al, 1 ; jne 0x6530c8 ; call rax
0x0000000000653fbc : test al, 1 ; jne 0x656146 ; call rax
0x0000000000656891 : test al, 1 ; jne 0x6574e1 ; call rax
0x000000000065993b : test al, 1 ; jne 0x65994f ; mov esi, 1 ; jmp rax
0x000000000065c78b : test al, 1 ; jne 0x65c79f ; mov esi, 1 ; jmp rax
0x000000000066ba76 : test al, 1 ; jne 0x66baa0 ; call rax
0x000000000066d215 : test al, 1 ; jne 0x66d289 ; mov esi, ebp ; call rax
0x000000000066d232 : test al, 1 ; jne 0x66d293 ; mov esi, ebp ; call rax
0x0000000000672a8e : test al, 1 ; jne 0x672c07 ; call rax
0x000000000067924b : test al, 1 ; jne 0x67925f ; mov esi, 1 ; jmp rax
0x0000000000681a1b : test al, 1 ; jne 0x681a2f ; mov esi, 1 ; jmp rax
0x0000000000685f9b : test al, 1 ; jne 0x685faa ; call rax
0x0000000000685fba : test al, 1 ; jne 0x685fd2 ; mov rdx, rbx ; call rax
0x0000000000686007 : test al, 1 ; jne 0x686011 ; jmp rax
0x0000000000689aab : test al, 1 ; jne 0x689abf ; mov esi, 1 ; jmp rax
0x000000000068f2e4 : test al, 1 ; jne 0x68f2f9 ; mov rdi, rbx ; call rax
0x000000000068fa00 : test al, 1 ; jne 0x68fa0a ; jmp rax
0x00000000006a69a8 : test al, 1 ; jne 0x6a6ab8 ; call rax
0x00000000006a8c7b : test al, 1 ; jne 0x6a8c8f ; mov esi, 1 ; jmp rax
0x00000000006b17db : test al, 1 ; jne 0x6b17f6 ; call rax
0x00000000006b6acb : test al, 1 ; jne 0x6b6adf ; mov esi, 1 ; jmp rax
0x00000000006bfca7 : test al, 1 ; jne 0x6bfcb1 ; jmp rax
0x00000000006bfcc7 : test al, 1 ; jne 0x6bfcd1 ; jmp rax
0x00000000006bfd1b : test al, 1 ; jne 0x6bfd25 ; jmp rax
0x00000000006bfd8e : test al, 1 ; jne 0x6bfdbf ; mov rdi, rbp ; call rax
0x00000000006bfd8d : test al, 1 ; jne 0x6bfdc0 ; mov rdi, rbp ; call rax
0x00000000006bfd8c : test al, 1 ; jne 0x6bfdc1 ; mov rdi, rbp ; call rax
0x00000000006bfddb : test al, 1 ; jne 0x6bfde5 ; jmp rax
0x00000000006bfdfb : test al, 1 ; jne 0x6bfe05 ; jmp rax
0x00000000006c03cb : test al, 1 ; jne 0x6c03d5 ; jmp rax
0x00000000006c04ae : test al, 1 ; jne 0x6c04b8 ; jmp rax
0x00000000006d10e6 : test al, 1 ; jne 0x6d10fb ; mov rsi, rsp ; call rax
0x00000000006d1dbd : test al, 1 ; jne 0x6d1dd6 ; mov rsi, rbx ; xor ebx, ebx ; call rax
0x00000000007e1201 : test al, 1 ; outsb dx, byte ptr [rsi] ; ret 4
0x000000000062dd6b : test al, 2 ; add byte ptr [rax], al ; mov esi, 1 ; call rax
0x00000000005b043c : test al, 2 ; add byte ptr [rax], al ; ret
0x00000000007381d1 : test al, 2 ; add byte ptr [rsi], ah ; mov ch, 0xd4 ; jmp qword ptr [rax]
0x0000000000738201 : test al, 2 ; add dh, al ; mov dh, 0xd4 ; jmp rax
0x000000000064621f : test al, 3 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000795f9d : test al, 4 ; add byte ptr [rdx], dh ; sub esp, ebp ; call rcx
0x0000000000741a01 : test al, 5 ; add al, ah ; ja 0x7419f4 ; jmp qword ptr [rax]
0x0000000000626a5e : test al, 5 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007a5f8d : test al, 5 ; add dh, ch ; and eax, esi ; call qword ptr [rdx]
0x0000000000747c79 : test al, 7 ; add al, dl ; push rbp ; cmc ; jmp qword ptr [rax]
0x000000000074b511 : test al, 8 ; add al, al ; in eax, dx ; stc ; jmp rax
0x00000000005b016c : test al, 8 ; add byte ptr [rax], al ; ret
0x0000000000639e63 : test al, 9 ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000067b133 : test al, al ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xfa83
0x00000000006be53e : test al, al ; cmove eax, edx ; ret
0x0000000000547874 : test al, al ; je 0x547885 ; pop rbx ; ret
0x0000000000554387 : test al, al ; je 0x554398 ; add rsp, 8 ; ret
0x0000000000659709 : test al, al ; je 0x659715 ; pop rbx ; ret
0x0000000000659729 : test al, al ; je 0x659735 ; pop rbx ; ret
0x000000000043abe2 : test al, al ; jne 0x43abb7 ; mov eax, dword ptr [rbp - 4] ; nop ; leave ; ret
0x00000000005053cd : test al, al ; jne 0x5053dd ; pop rbx ; ret
0x00000000005291ad : test al, al ; jne 0x5291c8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005fae5a : test al, al ; jne 0x5fae07 ; add rsp, 8 ; ret
0x00000000006735c5 : test al, al ; jne 0x6735d4 ; ret
0x0000000000674429 : test al, al ; jne 0x67443a ; add rsp, 8 ; ret
0x00000000006cbd16 : test al, al ; jne 0x6cbd0f ; mov byte ptr [rdi], 0 ; ret
0x00000000006cc27e : test al, al ; jne 0x6cc263 ; mov byte ptr [rsi], 0 ; ret
0x0000000000799f8c : test al, ch ; add al, 0 ; ja 0x799f80 ; call qword ptr [rbx]
0x0000000000777f8c : test al, cl ; add al, byte ptr [rax] ; retf -0x38
0x00000000006725b3 : test al, dl ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000004a5f52 : test al, dl ; add byte ptr [rax], al ; add dh, al ; retf
0x000000000079bcf1 : test bh, ah ; call rsp
0x00000000006461d7 : test bh, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000059dcf4 : test bh, al ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x00000000007a7e8c : test bh, al ; add eax, 0xec188000 ; jmp qword ptr [rdx]
0x000000000055e024 : test bh, bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000413ae6 : test bh, bh ; dec ecx ; ret
0x0000000000668fd1 : test bh, bh ; jne 0x668fe4 ; ret
0x00000000006c7bb1 : test bh, bh ; jne 0x6c7bba ; ret
0x0000000000678701 : test bh, bh ; mov eax, edi ; cmovs eax, esi ; ret
0x00000000005218c1 : test bh, bh ; setne al ; ret
0x0000000000653b4e : test bh, ch ; adc eax, 0x3d800000 ; ret 0x3b4f
0x0000000000745595 : test bh, ch ; jmp rax
0x000000000079ae8c : test bh, dh ; add al, 0 ; add al, 0xe7 ; jmp qword ptr [rcx]
0x00000000006a6574 : test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000006af73e : test bh, dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0xb60f
0x000000000064b7b4 : test bh, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000062995e : test bl, 0xdd ; dec dword ptr [rax - 0x77] ; ret
0x00000000007792cc : test bl, bl ; add al, byte ptr [rax] ; ret 0xffdc
0x00000000006bef80 : test bl, ch ; add dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x49], al ; ret 0x8941
0x000000000059846b : test bl, ch ; mov rdi, r12 ; jne 0x598401 ; call 0x6d4749
0x00000000005755de : test bl, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000061ff7b : test bl, dl ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000606e6b : test bpl, 1 ; jne 0x606ecc ; call rax
0x000000000051d9ca : test bpl, 1 ; mov rcx, rbp ; jne 0x51da13 ; call rcx
0x000000000051dbb1 : test bpl, 1 ; mov rcx, rbp ; jne 0x51dc09 ; call rcx
0x00000000005405e8 : test bpl, 1 ; mov rcx, rbp ; jne 0x54062c ; call rcx
0x000000000054c643 : test bpl, 1 ; mov rcx, rbp ; jne 0x54c68d ; call rcx
0x0000000000589cf1 : test bpl, 1 ; mov rcx, rbp ; jne 0x589d49 ; call rcx
0x000000000051d72c : test bpl, 1 ; mov rdx, rbp ; jne 0x51d789 ; call rdx
0x000000000051d889 : test bpl, 1 ; mov rdx, rbp ; jne 0x51d8e1 ; call rdx
0x000000000052b4af : test bpl, 1 ; mov rdx, rbp ; jne 0x52b4f3 ; call rdx
0x000000000054514f : test bpl, 1 ; mov rdx, rbp ; jne 0x545193 ; call rdx
0x000000000054e2fb : test bpl, 1 ; mov rdx, rbp ; jne 0x54e33f ; call rdx
0x0000000000589610 : test bpl, 1 ; mov rdx, rbp ; jne 0x589669 ; call rdx
0x000000000058989c : test bpl, 1 ; mov rdx, rbp ; jne 0x5898f9 ; call rdx
0x00000000005899f9 : test bpl, 1 ; mov rdx, rbp ; jne 0x589a51 ; call rdx
0x000000000058f92c : test bpl, 1 ; mov rdx, rbp ; jne 0x58f981 ; call rdx
0x000000000053d408 : test bpl, al ; jne 0x53d448 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000571e01 : test bpl, al ; jne 0x571e14 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006792b7 : test bpl, al ; jne 0x6792ca ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006793c7 : test bpl, al ; jne 0x6793da ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000539f68 : test bpl, bl ; jne 0x539f7b ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004e48bd : test byte ptr [r9], r15b ; ret 0x107e
0x00000000005fb7e8 : test byte ptr [rax + 0x1c44c6ff], al ; jmp qword ptr [rdx]
0x000000000042c648 : test byte ptr [rax + 0x29], al ; add cl, cl ; ret
0x00000000006b4c89 : test byte ptr [rax + 0xf], 0xaf ; ret
0x00000000006b798a : test byte ptr [rax + 1], 0xee ; call 0x403c76
0x00000000006a17f3 : test byte ptr [rax + 1], 0xf0 ; ret
0x000000000060d4e6 : test byte ptr [rax + rax - 0x76b80000], cl ; ret
0x000000000056263f : test byte ptr [rax + rax - 0x7cb80000], cl ; ret
0x00000000006314ed : test byte ptr [rax + rax], 0xbe ; retf
0x000000000073e1e1 : test byte ptr [rax + rax], al ; nop ; ret 0xffe1
0x000000000063a3f3 : test byte ptr [rax + rax], bh ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000066b5f8 : test byte ptr [rax + rax], cl ; add byte ptr [rax + 0x39], cl ; dec byte ptr [rdi] ; xchg eax, ebp ; ret
0x00000000006735f4 : test byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mfence ; ret
0x00000000007d48f9 : test byte ptr [rax + rax], dl ; retf 0x1e09
0x0000000000537c29 : test byte ptr [rax + rcx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000053eda9 : test byte ptr [rax - 0x3f], 0xe8 ; and byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000063087c : test byte ptr [rax - 0x73], 0x78 ; and al, ch ; retf -0xdc9
0x000000000066324a : test byte ptr [rax - 0x75000000], dh ; push rbx ; sub byte ptr [rcx], bh ; ret 0x870f
0x000000000068fba6 : test byte ptr [rax - 0x75], 0x40 ; mov byte ptr [rax + rsi*8], dl ; ret
0x000000000068fb66 : test byte ptr [rax - 0x75], 0x40 ; mov dword ptr [rax + rsi*8 - 4], edx ; ret
0x000000000068f516 : test byte ptr [rax - 0x75], 0x40 ; mov eax, dword ptr [rax + rsi*8 - 4] ; ret
0x000000000068f526 : test byte ptr [rax - 0x75], 0x40 ; movzx eax, byte ptr [rax + rsi*8] ; ret
0x00000000005135cf : test byte ptr [rax - 0x75], 0x40 ; test al, 1 ; jne 0x5135e3 ; jmp rax
0x00000000006b6548 : test byte ptr [rax - 0x76b80000], al ; ret
0x000000000059de04 : test byte ptr [rax - 0x77], 0x45 ; or byte ptr [rdi], cl ; lahf ; ret 0x3944
0x00000000006a1869 : test byte ptr [rax - 0x77], 0xd0 ; ret
0x00000000005358f7 : test byte ptr [rax - 0x77], 0xdf ; call rax
0x00000000006ca8bb : test byte ptr [rax - 0x77], 0xf0 ; ret
0x00000000006a1821 : test byte ptr [rax - 0x77], 0xf8 ; xor edx, edx ; div rsi ; ret
0x0000000000550785 : test byte ptr [rax - 0x77], cl ; ret
0x00000000004525f0 : test byte ptr [rax - 0x7cffffff], al ; ret
0x00000000005806bf : test byte ptr [rax - 0x7d], cl ; cli ; or dword ptr [rax - 0x77], ecx ; ret
0x00000000006a545a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; fstp st(1) ; ret
0x0000000000667a3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 0x64], esi ; ret
0x0000000000596bfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], esi ; ret
0x0000000000517f1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; ret
0x000000000053f07a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x18] ; ret
0x0000000000554b5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; ret
0x0000000000517dfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000058449a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x38] ; ret
0x000000000058448a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x58] ; ret
0x00000000006be2ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0xc] ; ret
0x00000000005f97ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; ret
0x000000000065e0ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 8] ; ret
0x00000000006aad4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; ret
0x00000000005429aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edi ; ret
0x0000000000503aaa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, esi ; ret
0x000000000052609a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000525c5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; ret
0x000000000065c89a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000054db5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000053d7da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdi] ; ret
0x00000000006c67a9 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, edi ; ret
0x00000000006675d9 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000006be9d9 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; xor eax, eax ; ret
0x0000000000667697 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x0000000000408a7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004f565a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000050994a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000501aab : test byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000065dc04 : test byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000674152 : test byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000753be5 : test byte ptr [rax], al ; add byte ptr [rax], bl ; fmul st(6), st(0) ; call rdi
0x00000000004c30eb : test byte ptr [rax], al ; mov rax, qword ptr [rip + 0x53f7f4] ; call rax
0x000000000054ef8f : test byte ptr [rax], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054c248 : test byte ptr [rax], bl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000750f8c : test byte ptr [rax], bl ; add dh, ah ; retf -0x33
0x00000000004fc9dc : test byte ptr [rax], ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005f76d3 : test byte ptr [rax], cl ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000005f76bf : test byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000079bf8c : test byte ptr [rax], cl ; add eax, 0xe7918400 ; jmp rdi
0x00000000007d322d : test byte ptr [rax], dl ; add al, ch ; syscall
0x0000000000604b21 : test byte ptr [rbp + 0x39000000], cl ; ret
0x000000000078fc8c : test byte ptr [rbp + 4], al ; add al, dh ; or edx, esp ; jmp qword ptr [rbx]
0x000000000075ed98 : test byte ptr [rbp - 0x2e], dh ; jmp qword ptr [rsi]
0x000000000069b536 : test byte ptr [rbp - 0x76fffffd], dl ; ret 0xe283
0x0000000000579444 : test byte ptr [rbp - 0x7d000000], dl ; ret
0x000000000042a4df : test byte ptr [rbp], bl ; call rax
0x00000000004e4941 : test byte ptr [rbx + 0x2948c445], cl ; ret 0x8948
0x000000000054dc22 : test byte ptr [rbx + 0xf40246c], 0x95 ; ret 0xd184
0x000000000078438c : test byte ptr [rbx + rax - 0x205fc000], cl ; call qword ptr [rbx]
0x00000000005f8709 : test byte ptr [rbx - 0x73000000], cl ; add rdi, qword ptr [rcx] ; retf 0x737c
0x0000000000503d34 : test byte ptr [rbx - 0x7d000000], bl ; ret
0x000000000066556e : test byte ptr [rbx], 0 ; add byte ptr [rcx + 0x63], cl ; ret 0x8f8b
0x00000000007d46b5 : test byte ptr [rbx], 0x41 ; add byte ptr [rax], al ; ret
0x00000000006a1318 : test byte ptr [rbx], al ; add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; retf
0x0000000000610968 : test byte ptr [rbx], al ; cwde ; add al, byte ptr [rax] ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000006bd5b8 : test byte ptr [rbx], bh ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000004bb1de : test byte ptr [rcx + 0x1c], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b9828 : test byte ptr [rcx + 0x1d], ah ; add byte ptr [rax + 0x29], cl ; ret
0x00000000006d3a4c : test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x0000000000599450 : test byte ptr [rcx + rax], dl ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000065f49f : test byte ptr [rcx + rcx*4 - 0x18], 0x75 ; ret
0x00000000006d4942 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x000000000040489c : test byte ptr [rcx + rcx*4 - 0x19], 0xe8 ; retf
0x0000000000653325 : test byte ptr [rcx - 0x44], 1 ; add byte ptr [rax], al ; add cl, ch ; retf
0x0000000000653a2e : test byte ptr [rcx - 0x44], 2 ; add byte ptr [rax], al ; add cl, ch ; ret 0xfff6
0x0000000000653425 : test byte ptr [rcx - 0x44], 2 ; add byte ptr [rax], al ; add cl, ch ; retf
0x000000000043db74 : test byte ptr [rcx - 0x6f37762f], 0xc9 ; ret
0x000000000051a5b8 : test byte ptr [rcx - 0x76b7ffe5], ah ; ret
0x00000000005e9339 : test byte ptr [rcx - 0x7cffffff], al ; ret
0x0000000000452c7e : test byte ptr [rcx - 0x7d000000], cl ; ret
0x0000000000688cc6 : test byte ptr [rcx], 0x40 ; test dh, dh ; je 0x688c9f ; ret
0x00000000006c5c01 : test byte ptr [rcx], 0xf0 ; add rsp, 8 ; ret
0x0000000000476eef : test byte ptr [rcx], ah ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007aba38 : test byte ptr [rcx], bh ; in eax, dx ; jmp qword ptr [rcx]
0x00000000004e48be : test byte ptr [rcx], bh ; ret 0x107e
0x000000000046a4d6 : test byte ptr [rcx], bl ; call rax
0x0000000000653529 : test byte ptr [rcx], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006d75c0 : test byte ptr [rdi + 0x40], bh ; add byte ptr [rax], al ; retf 0x40bf
0x0000000000683f30 : test byte ptr [rdi + 0xa], al ; add byte ptr [rsi + 0xf], ah ; retf -0x78f1
0x000000000077068c : test byte ptr [rdi + 2], cl ; add byte ptr [rax], dh ; test al, 0xda ; jmp qword ptr [rcx]
0x0000000000645e53 : test byte ptr [rdi + rax], bl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006bd354 : test byte ptr [rdi + rsi], al ; setne al ; ret
0x00000000007cc22b : test byte ptr [rdi], 0x44 ; add byte ptr [rax], al ; retf 0x1d08
0x00000000005016f7 : test byte ptr [rdi], 0x4c ; ret 0x9848
0x00000000005add51 : test byte ptr [rdi], 0x84 ; ret
0x000000000057233d : test byte ptr [rdi], 0x84 ; ret 0
0x0000000000634732 : test byte ptr [rdi], 0x84 ; retf
0x0000000000534a12 : test byte ptr [rdi], 0x94 ; ret 0x8548
0x0000000000525bdb : test byte ptr [rdi], 0x94 ; ret 0xd184
0x000000000054e70d : test byte ptr [rdi], 0x95 ; ret 0x8441
0x00000000005baaad : test byte ptr [rdi], 0x9c ; ret 0xc238
0x00000000005c734b : test byte ptr [rdi], 0x9e ; ret 0x3945
0x00000000005a2fbb : test byte ptr [rdi], 0x9e ; ret 0x840
0x0000000000659998 : test byte ptr [rdi], 0x9e ; ret 0xd384
0x00000000006881f3 : test byte ptr [rdi], 0xb6 ; add al, 0x37 ; ret
0x000000000068998b : test byte ptr [rdi], 0xb6 ; xor byte ptr [rbx], r9b ; ret
0x0000000000687587 : test byte ptr [rdi], 0xbe ; cmp ecx, dword ptr [rax - 0x77] ; call 0xffffffffd167a210
0x00000000007ea45f : test byte ptr [rdi], 5 ; ret
0x0000000000747441 : test byte ptr [rdi], al ; add ah, ch ; ret 0xfff4
0x0000000000747449 : test byte ptr [rdi], al ; add byte ptr [rdx], dl ; ret
0x000000000067abc6 : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret 0xfa83
0x0000000000642f33 : test byte ptr [rdi], al ; ret 0xffff
0x000000000057b492 : test byte ptr [rdi], ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040e56e : test byte ptr [rdx + 0x5f], 0 ; call rax
0x00000000005c57ca : test byte ptr [rdx + rax], dl ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000645ea4 : test byte ptr [rdx + rcx - 0x76b80000], ch ; ret
0x000000000059bc28 : test byte ptr [rdx + rdx], ch ; add byte ptr [rax - 0x77], cl ; ret
0x000000000057f88e : test byte ptr [rdx - 0x76ffffff], cl ; ret
0x000000000077adb5 : test byte ptr [rdx], 0 ; pop rax ; add ch, bl ; jmp qword ptr [rax]
0x00000000004960fc : test byte ptr [rdx], ah ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000773bc5 : test byte ptr [rdx], al ; add al, bl ; jae 0x773bac ; jmp qword ptr [rdx]
0x0000000000773bdd : test byte ptr [rdx], al ; add al, dh ; jae 0x773bc4 ; jmp qword ptr [rdx]
0x0000000000737a31 : test byte ptr [rdx], al ; add dh, al ; ret
0x00000000007c91d4 : test byte ptr [rdx], al ; add esp, dword ptr [rax + 0x1301] ; ret
0x00000000005da451 : test byte ptr [rdx], al ; call rax
0x000000000045a4c4 : test byte ptr [rdx], bl ; call rax
0x0000000000618213 : test byte ptr [rdx], cl ; add cl, cl ; ret
0x0000000000643c16 : test byte ptr [rdx], dh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004da43b : test byte ptr [rdx], dl ; call rax
0x00000000007e120f : test byte ptr [rip + 0x4103a900], al ; retf 5
0x00000000007e120e : test byte ptr [rip + 0x4103a900], r8b ; retf 5
0x00000000007ac48c : test byte ptr [rip + 0x46d40006], cl ; in eax, dx ; call qword ptr [rbx]
0x000000000051a65e : test byte ptr [rip - 0x17fffffe], bl ; retf 0x166e
0x00000000006719a4 : test byte ptr [rip - 0x17ffffff], al ; ret 0x38f
0x0000000000741291 : test byte ptr [rip - 0x19355000], al ; jmp rax
0x00000000004ef4d1 : test byte ptr [rip - 0x41000001], ah ; retf
0x00000000004d8034 : test byte ptr [rip - 0x70410000], cl ; ret 0x6e
0x00000000007f311a : test byte ptr [rsi + 5], cl ; ret
0x00000000007b538c : test byte ptr [rsi + rax - 0x10a4c000], bl ; jmp qword ptr [rcx]
0x00000000005de3b6 : test byte ptr [rsi + rcx], 0 ; leave ; ret
0x000000000073a18c : test byte ptr [rsi - 0x26], dl ; jmp qword ptr [rax]
0x00000000005596bd : test byte ptr [rsi - 0x70], ah ; ret
0x00000000005c843c : test byte ptr [rsi - 0x76b7fff5], al ; ret
0x00000000005ff9f3 : test byte ptr [rsi - 0x7cfffff2], al ; ret
0x0000000000604507 : test byte ptr [rsi - 0x7cfffffe], al ; ret
0x00000000007bad35 : test byte ptr [rsi], 0 ; cwde ; ret 0xfff0
0x00000000007bad4d : test byte ptr [rsi], 0 ; nop ; ret 0xfff0
0x00000000004182ab : test byte ptr [rsi], ah ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006274ef : test byte ptr [rsi], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000007cceea : test byte ptr [rsi], al ; add byte ptr [rcx + 0x503], bh ; retf 0x1603
0x0000000000744461 : test byte ptr [rsi], al ; add byte ptr [rdi + rdx - 0x12], bl ; call qword ptr [rax]
0x00000000007df7d7 : test byte ptr [rsi], al ; add byte ptr [rdx + rax + 0x5db04], dh ; ret
0x000000000074d5cc : test byte ptr [rsi], bl ; add byte ptr [rax], al ; jae 0x74d5a6 ; call rcx
0x00000000004d81ed : test byte ptr [rsi], bl ; add cl, cl ; ret
0x000000000041a472 : test byte ptr [rsi], bl ; call rax
0x00000000005d6134 : test byte ptr [rsi], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000005bbd9c : test byte ptr [rsi], cl ; add eax, 0x89480000 ; ret
0x00000000006bd8cf : test byte ptr [rsi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc783
0x00000000007953cc : test byte ptr [rsp + rax - 0x1b022c00], bl ; call rsp
0x00000000005da4a6 : test byte ptr ds:[rdx], al ; call rax
0x00000000004182aa : test byte ptr ss:[rsi], ah ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000606e6c : test ch, 1 ; jne 0x606ecb ; call rax
0x000000000051d9cb : test ch, 1 ; mov rcx, rbp ; jne 0x51da12 ; call rcx
0x000000000051dbb2 : test ch, 1 ; mov rcx, rbp ; jne 0x51dc08 ; call rcx
0x00000000005405e9 : test ch, 1 ; mov rcx, rbp ; jne 0x54062b ; call rcx
0x000000000054c644 : test ch, 1 ; mov rcx, rbp ; jne 0x54c68c ; call rcx
0x0000000000589cf2 : test ch, 1 ; mov rcx, rbp ; jne 0x589d48 ; call rcx
0x000000000051d72d : test ch, 1 ; mov rdx, rbp ; jne 0x51d788 ; call rdx
0x000000000051d88a : test ch, 1 ; mov rdx, rbp ; jne 0x51d8e0 ; call rdx
0x000000000052b4b0 : test ch, 1 ; mov rdx, rbp ; jne 0x52b4f2 ; call rdx
0x0000000000545150 : test ch, 1 ; mov rdx, rbp ; jne 0x545192 ; call rdx
0x000000000054e2fc : test ch, 1 ; mov rdx, rbp ; jne 0x54e33e ; call rdx
0x0000000000589611 : test ch, 1 ; mov rdx, rbp ; jne 0x589668 ; call rdx
0x000000000058989d : test ch, 1 ; mov rdx, rbp ; jne 0x5898f8 ; call rdx
0x00000000005899fa : test ch, 1 ; mov rdx, rbp ; jne 0x589a50 ; call rdx
0x000000000058f92d : test ch, 1 ; mov rdx, rbp ; jne 0x58f980 ; call rdx
0x00000000005a84bf : test ch, ah ; mov rdi, rbx ; jne 0x5a848f ; call 0x6d4749
0x000000000053d409 : test ch, al ; jne 0x53d447 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000571e02 : test ch, al ; jne 0x571e13 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006792b8 : test ch, al ; jne 0x6792c9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006793c8 : test ch, al ; jne 0x6793d9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000073b1b5 : test ch, bl ; call qword ptr [rax]
0x000000000077c8a1 : test ch, bl ; jmp qword ptr [rbx]
0x000000000073b1a5 : test ch, bl ; jmp rax
0x0000000000539f69 : test ch, bl ; jne 0x539f7a ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000598546 : test cl, 0x13 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005115b3 : test cl, 1 ; jne 0x5115fc ; mov rdi, rbp ; call rcx
0x00000000004c5356 : test cl, al ; add byte ptr [rax], al ; add cl, ch ; retf
0x0000000000606589 : test cl, al ; je 0x60654e ; xor eax, eax ; ret
0x000000000066b89a : test cl, bl ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000643dae : test cl, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000065e304 : test cl, cl ; jne 0x65e2e5 ; mov dword ptr [rdi], r8d ; ret
0x00000000004bbaf6 : test dh, 0x1e ; add byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000005524b8 : test dh, 1 ; jne 0x552516 ; call rsi
0x0000000000741085 : test dh, ah ; jmp qword ptr [rax]
0x00000000004714e8 : test dh, bh ; and al, 0 ; leave ; ret
0x000000000059ab8d : test dh, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000066556d : test dh, dh ; add eax, dword ptr [rax] ; add byte ptr [rcx + 0x63], cl ; ret 0x8f8b
0x0000000000688cc9 : test dh, dh ; je 0x688c9c ; ret
0x00000000006a0ef7 : test dh, dh ; je 0x6a0f18 ; add rsp, 8 ; ret
0x000000000068e122 : test dh, dh ; jne 0x68e14f ; mov eax, 0xffffffff ; ret
0x00000000006903e2 : test dh, dh ; jne 0x69040f ; mov eax, 0xffffffff ; ret
0x00000000005f915d : test dh, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000668fd0 : test dil, dil ; jne 0x668fe5 ; ret
0x00000000006c7bb0 : test dil, dil ; jne 0x6c7bbb ; ret
0x00000000006c7baf : test dil, dil ; jne 0x6c7bbc ; ret
0x0000000000678700 : test dil, dil ; mov eax, edi ; cmovs eax, esi ; ret
0x00000000005218c0 : test dil, dil ; setne al ; ret
0x000000000051b45c : test dl, 1 ; jne 0x51b4b9 ; call rdx
0x000000000054bc5c : test dl, 1 ; jne 0x54bcb9 ; call rdx
0x000000000060c6ad : test dl, 1 ; jne 0x60c76c ; call rdx
0x000000000062c2bc : test dl, 1 ; jne 0x62c2f4 ; mov rdi, rbx ; call rdx
0x00000000006c02bb : test dl, 1 ; jne 0x6c02ce ; call rdx
0x0000000000675b9f : test dl, al ; jne 0x675bad ; pop rbx ; ret
0x0000000000692674 : test dl, al ; jne 0x692685 ; pop rbx ; ret
0x00000000006a1e36 : test dl, al ; jne 0x6a1e49 ; lea rax, qword ptr [rdi + rsi - 1] ; ret
0x00000000004b7d10 : test dl, bh ; dec ecx ; ret
0x0000000000522aff : test dl, bh ; je 0x522ab1 ; ret
0x000000000052872f : test dl, bh ; je 0x5286e1 ; ret
0x00000000005440ff : test dl, bh ; je 0x5440b1 ; ret
0x00000000005679ef : test dl, bh ; je 0x5679a1 ; ret
0x000000000059173f : test dl, bh ; je 0x5916f1 ; ret
0x00000000005aa02f : test dl, bh ; je 0x5a9fe1 ; ret
0x00000000006d35a2 : test dl, ch ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rax]
0x00000000006b4129 : test dl, cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf 0x2b48
0x0000000000647cb8 : test dl, cl ; or byte ptr [rax], al ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000745ee5 : test dl, dh ; call rax
0x000000000066fe91 : test dl, dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x6349
0x0000000000688288 : test dl, dl ; je 0x688296 ; xor eax, 1 ; ret
0x00000000004da3a1 : test dword ptr [r10], edx ; call rax
0x000000000045a397 : test dword ptr [r10], r11d ; call rax
0x00000000005b6369 : test dword ptr [r8], edx ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x00000000004d9a62 : test dword ptr [rax + 0x39ffffef], ebx ; ret 0x267e
0x00000000004e8927 : test dword ptr [rax + 0x39fffffc], ebp ; ret 0x117c
0x00000000004e8986 : test dword ptr [rax + 0x39fffffc], ebp ; ret 0x217c
0x000000000051ad82 : test dword ptr [rax + 0x48000000], ecx ; mov edi, ebx ; call rax
0x00000000006a87c8 : test dword ptr [rax + 0x48000000], esp ; mov edi, ebx ; call rax
0x000000000052928b : test dword ptr [rax + 0x48000002], esp ; mov edi, ebx ; call rax
0x000000000054e9c5 : test dword ptr [rax + 0x48000004], esi ; mov edi, eax ; call rdx
0x0000000000437b51 : test dword ptr [rax + 0x48fffff5], ebx ; ret
0x00000000004fc5ab : test dword ptr [rax + 0x4c000003], ebx ; mov edi, esp ; call rax
0x000000000055115c : test dword ptr [rax + 0x4c000008], edi ; mov edi, esp ; call rax
0x0000000000633a04 : test dword ptr [rax + 0x4c000008], esi ; mov edi, esp ; call rax
0x0000000000437ae5 : test dword ptr [rax + 0x50fffff5], ecx ; ret
0x00000000004384b5 : test dword ptr [rax + 0x68fffff6], edi ; ret
0x000000000043679c : test dword ptr [rax + 0x68fffff7], edi ; ret
0x0000000000434dda : test dword ptr [rax + 0x68fffffb], edi ; ret
0x0000000000437dbf : test dword ptr [rax + 0x70fffff5], edi ; ret
0x0000000000438467 : test dword ptr [rax + 0x70fffff6], ebp ; ret
0x0000000000435c6e : test dword ptr [rax + 0x70fffffa], ebp ; ret
0x00000000004346a3 : test dword ptr [rax + 0x78fffffa], edx ; ret
0x00000000004347c1 : test dword ptr [rax + 0x7efffffa], esp ; ret
0x0000000000434802 : test dword ptr [rax + 0x7ffffffa], esi ; ret
0x0000000000656894 : test dword ptr [rax + 0xc], eax ; add byte ptr [rax], al ; call rax
0x00000000006570d3 : test dword ptr [rax + 0xfffffec], edx ; sahf ; ret 0xc839
0x0000000000656248 : test dword ptr [rax + 0xfffffef], edi ; sahf ; ret 0xc839
0x00000000005ff865 : test dword ptr [rax + 0xffffffb], edx ; sahf ; ret 0x3944
0x00000000005c8ca8 : test dword ptr [rax + 0xffffffc], ebp ; sahf ; ret 0x3944
0x00000000005787eb : test dword ptr [rax + 0xffffffe], ebx ; sahf ; ret 0xc839
0x0000000000510621 : test dword ptr [rax + 1], ecx ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004f7fd0 : test dword ptr [rax + 1], esp ; add byte ptr [rax], al ; call rax
0x0000000000649512 : test dword ptr [rax + 4], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x0000000000793c8d : test dword ptr [rax + rax], eax ; sub dl, byte ptr [rbx - 0x1c] ; call rsp
0x00000000005f62bb : test dword ptr [rax + rax], ecx ; leave ; ret
0x00000000007efca0 : test dword ptr [rax + rax], ecx ; retf
0x000000000063a31f : test dword ptr [rax + rax], edi ; jmp rax
0x00000000007c672d : test dword ptr [rax + rax], edx ; ret 0x3e0e
0x0000000000793c8c : test dword ptr [rax + rax], r8d ; sub dl, byte ptr [rbx - 0x1c] ; call rsp
0x000000000048fb3d : test dword ptr [rax - 0x16000002], ecx ; ret
0x00000000004d6874 : test dword ptr [rax - 0x16000006], esp ; ret
0x0000000000434d1e : test dword ptr [rax - 0x3b000005], ebx ; ret
0x0000000000434cba : test dword ptr [rax - 0x3b000005], ecx ; ret
0x0000000000436707 : test dword ptr [rax - 0x4b000009], ebx ; ret
0x00000000004366ca : test dword ptr [rax - 0x4b000009], ecx ; ret
0x00000000004cb5ce : test dword ptr [rax - 0x4e000003], esi ; retf
0x000000000043480d : test dword ptr [rax - 0x53000006], edi ; ret
0x00000000004347cc : test dword ptr [rax - 0x5b000006], ebp ; ret
0x00000000004346ae : test dword ptr [rax - 0x63000006], ebx ; ret
0x0000000000434dcf : test dword ptr [rax - 0x68000005], esi ; ret
0x000000000067ec74 : test dword ptr [rax - 0x73], 0x8348c075 ; ret
0x00000000004f1edb : test dword ptr [rax - 0x74000002], ebx ; add byte ptr [rcx], bh ; ret 0x2c7c
0x00000000005d2cd4 : test dword ptr [rax - 0x74000002], edi ; adc byte ptr [rcx], dil ; ret 0x8f0f
0x00000000004f1f8c : test dword ptr [rax - 0x74000002], edi ; add byte ptr [rcx], bh ; ret 0x187c
0x00000000004f1aa7 : test dword ptr [rax - 0x74000003], ebx ; add byte ptr [rcx], bh ; ret 0x2c7c
0x00000000004f1b16 : test dword ptr [rax - 0x74000003], edi ; add byte ptr [rcx], bh ; ret 0x2c7c
0x00000000005efefe : test dword ptr [rax - 0x74000003], edx ; add al, 0x89 ; ret
0x00000000005eff28 : test dword ptr [rax - 0x74000003], edx ; add al, 0x89 ; ret 0xc889
0x00000000004da218 : test dword ptr [rax - 0x74000013], ebx ; add byte ptr [rcx], bh ; ret 0x2c7c
0x00000000004da287 : test dword ptr [rax - 0x74000013], edi ; add byte ptr [rcx], bh ; ret 0x2c7c
0x00000000004d9ced : test dword ptr [rax - 0x74000014], ebx ; add al, 0x39 ; ret 0x147f
0x00000000004d9e85 : test dword ptr [rax - 0x74000014], edi ; add byte ptr [rcx], bh ; ret 0x187c
0x00000000006c636d : test dword ptr [rax - 0x76fffffe], ebx ; ret 0x448b
0x00000000006c70da : test dword ptr [rax - 0x77], 0xa548f3c6 ; ret
0x000000000051f8d0 : test dword ptr [rax - 0x77], ecx ; ret
0x00000000006a6575 : test dword ptr [rax], 0x83480000 ; ret
0x00000000004caf7d : test dword ptr [rax], 0x8fbf0000 ; ret 0x6e
0x00000000006b3875 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000006482f4 : test dword ptr [rax], eax ; add byte ptr [rax], al ; mov esi, 1 ; call rax
0x0000000000753c65 : test dword ptr [rax], eax ; add dl, al ; fxch st(0), st(6) ; call rsp
0x00000000006d3414 : test dword ptr [rax], eax ; add r8, r13 ; jmp r8
0x00000000005ce547 : test dword ptr [rax], eax ; str word ptr [rax - 0x77] ; ret 0x8948
0x00000000004d05e4 : test dword ptr [rax], ebp ; idiv edi ; call qword ptr [rax]
0x00000000004f86a4 : test dword ptr [rax], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000074ac31 : test dword ptr [rax], ecx ; add al, al ; jge 0x74ac36 ; jmp qword ptr [rax]
0x000000000074ac51 : test dword ptr [rax], ecx ; add byte ptr [rax + 0x7f], al ; stc ; jmp rax
0x00000000004fbf52 : test dword ptr [rax], edi ; or dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000007f560c : test dword ptr [rax], edx ; add bl, bh ; syscall
0x00000000005b636a : test dword ptr [rax], edx ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x00000000004d0138 : test dword ptr [rax], edx ; idiv bh ; call rax
0x00000000004770e5 : test dword ptr [rax], edx ; idiv bh ; dec dword ptr [rcx - 0x77] ; ret 0x1be
0x0000000000478184 : test dword ptr [rax], edx ; idiv bh ; dec dword ptr [rcx - 0x77] ; ret 0xe5e8
0x00000000004cda72 : test dword ptr [rax], edx ; idiv edi ; dec dword ptr [rcx - 0x77] ; ret 0x8948
0x00000000004cd798 : test dword ptr [rax], edx ; idiv edi ; dec dword ptr [rcx - 0x77] ; ret 0x8ba
0x00000000004cd750 : test dword ptr [rax], edx ; idiv edi ; dec dword ptr [rcx - 0x77] ; ret 0xba
0x00000000004cda0c : test dword ptr [rax], edx ; idiv edi ; dec dword ptr [rcx - 0x77] ; ret 0xbfe8
0x00000000004cdd57 : test dword ptr [rax], edx ; idiv edi ; dec dword ptr [rcx - 0x77] ; ret 0xc0e8
0x00000000004cdb08 : test dword ptr [rax], edx ; idiv edi ; dec dword ptr [rcx - 0x77] ; ret 0xcfe8
0x00000000004d061d : test dword ptr [rax], esi ; idiv edi ; call rax
0x00000000004b6061 : test dword ptr [rax], esp ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000505652 : test dword ptr [rax], esp ; and byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf
0x00000000006d3413 : test dword ptr [rax], r8d ; add r8, r13 ; jmp r8
0x000000000055314f : test dword ptr [rbp + 0x4c000007], edi ; mov edi, ebp ; call rax
0x00000000006902c0 : test dword ptr [rbp + 0x5b000000], ebp ; pop rbp ; pop r12 ; ret
0x00000000005ea427 : test dword ptr [rbp + 0xa], edx ; add byte ptr [rax + 0x29], cl ; ret
0x000000000054a3e1 : test dword ptr [rbp + 1], edx ; add byte ptr [rax], al ; call rax
0x00000000006a7563 : test dword ptr [rbp + 1], esi ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x00000000005312b3 : test dword ptr [rbp + 1], esp ; add byte ptr [rax], al ; call rax
0x000000000067514a : test dword ptr [rbp + 2], ebx ; add byte ptr [rax], al ; mov esi, r12d ; call rax
0x0000000000652955 : test dword ptr [rbp + 8], esi ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00000000004aeae2 : test dword ptr [rbp + rdi*8 + 0x2948ffff], esp ; ret 0x8948
0x0000000000604cde : test dword ptr [rbp + rdi*8 + 0x3948ffff], edi ; ret
0x00000000007f3aba : test dword ptr [rbp - 0x635cd2ff], esp ; add dword ptr [rax], eax ; ret
0x0000000000516ddd : test dword ptr [rbp - 0x76b7ffea], ecx ; ret
0x000000000056a1b7 : test dword ptr [rbp - 0x76b7ffea], esp ; ret
0x000000000042a3dd : test dword ptr [rbp], ebx ; call rax
0x00000000006a761e : test dword ptr [rbp], edi ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x0000000000543805 : test dword ptr [rbx + 0x31000000], ecx ; shr al, 0x3f ; ret
0x00000000005c3047 : test dword ptr [rbx + 0x31fffffd], edi ; shr al, 0xfd ; retf 0xb
0x000000000051c5a0 : test dword ptr [rbx + 0x39000000], ecx ; ret
0x0000000000552710 : test dword ptr [rbx + 0xd], esp ; add byte ptr [rax], al ; call rax
0x000000000063e8d0 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x0000000000529a70 : test dword ptr [rbx + 4], ebp ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000529b4f : test dword ptr [rbx + 4], esp ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000005299b8 : test dword ptr [rbx + 5], edx ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000651851 : test dword ptr [rbx + rdi*8 - 0x6af00001], esi ; ret 0x8539
0x00000000004cbc57 : test dword ptr [rbx + rdx*2], ebp ; call rax
0x000000000059cab7 : test dword ptr [rbx + rdx], edi ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000645f9b : test dword ptr [rbx - 0x4100005c], ebp ; retf
0x000000000066d0ee : test dword ptr [rbx - 0x76ffffff], eax ; out dx, al ; call rax
0x00000000006b427c : test dword ptr [rbx - 0x7c000003], edx ; ret
0x00000000007dd969 : test dword ptr [rbx], 0xc8c05 ; cdq ; or al, 5 ; ret 0xc
0x00000000004fc75b : test dword ptr [rbx], eax ; add al, 0 ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000057fcb0 : test dword ptr [rbx], ecx ; add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000005310fe : test dword ptr [rbx], edi ; add al, 0 ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000646617 : test dword ptr [rbx], edx ; retf -1
0x0000000000486317 : test dword ptr [rbx], esp ; add cl, cl ; ret
0x000000000052a9dd : test dword ptr [rcx + 0x15], edx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054a477 : test dword ptr [rcx + 0x44000000], edx ; mov esi, esp ; call rax
0x00000000005543f7 : test dword ptr [rcx + 0x4c000002], ebx ; mov edi, esp ; call rax
0x00000000004fc7ab : test dword ptr [rcx + 0x4c000003], esp ; mov edi, esp ; call rax
0x0000000000723233 : test dword ptr [rcx + 0x7e], ebp ; and al, 0x7b ; retf
0x000000000058c4dd : test dword ptr [rcx + 0xf], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000672a91 : test dword ptr [rcx + 1], ebp ; add byte ptr [rax], al ; call rax
0x0000000000510224 : test dword ptr [rcx + 1], ebx ; add byte ptr [rax], al ; mov rdi, rbx ; call rdx
0x000000000051ab2a : test dword ptr [rcx + 1], esp ; add byte ptr [rax], al ; call rax
0x0000000000530fb4 : test dword ptr [rcx + 4], esi ; add byte ptr [rax], al ; call rax
0x00000000004f802e : test dword ptr [rcx + rax], ebx ; add byte ptr [rax], al ; call rax
0x00000000006a7131 : test dword ptr [rcx + rax], ebx ; add dh, al ; ret
0x0000000000529421 : test dword ptr [rcx + rax], esp ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000051f1d1 : test dword ptr [rcx - 0x74fffffe], esi ; pop rdi ; adc byte ptr [rcx], bh ; retf
0x00000000006bd7aa : test dword ptr [rcx - 0x75000000], edx ; mov r12b, 0x39 ; retf
0x000000000050b5b7 : test dword ptr [rcx - 0x76b7ffe4], edx ; ret
0x000000000052e990 : test dword ptr [rcx - 0x77], 0xec8348f4 ; adc al, ch ; ret
0x00000000005265df : test dword ptr [rcx - 0x7d000000], ebp ; ret
0x00000000006d0d67 : test dword ptr [rcx - 0x7d], 0x39016046 ; retf
0x00000000007f3117 : test dword ptr [rcx], 0x54e8400 ; ret
0x0000000000735cd1 : test dword ptr [rcx], 0xd09a0800 ; jmp qword ptr [rax]
0x000000000076ae8d : test dword ptr [rcx], 0xd99a3000 ; call qword ptr [rbx]
0x00000000007bf9b1 : test dword ptr [rcx], eax ; ret
0x000000000053c14b : test dword ptr [rcx], ebx ; add bl, ch ; retf -0x74b8
0x000000000054ec77 : test dword ptr [rcx], edx ; add eax, 0x894c0000 ; out dx, eax ; call rax
0x0000000000551f2d : test dword ptr [rcx], esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000004a6045 : test dword ptr [rcx], esp ; add byte ptr [rax - 0x77], cl ; ret 0x2c7
0x00000000004684ed : test dword ptr [rcx], esp ; add byte ptr [rcx], bh ; ret 0x127c
0x00000000006a79a7 : test dword ptr [rdi + 0x3948ffd5], edi ; ret
0x0000000000503b2a : test dword ptr [rdi + 0x48000000], edi ; mov edi, ebx ; call rax
0x00000000005306de : test dword ptr [rdi + 0x48000001], ebx ; mov edi, ebx ; call rax
0x0000000000532f7b : test dword ptr [rdi + 0x4c000003], esp ; mov edi, esp ; call rax
0x000000000054e995 : test dword ptr [rdi + 0x4c000004], ebx ; mov edi, edi ; call rax
0x0000000000510569 : test dword ptr [rdi + 1], ebp ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000005187d0 : test dword ptr [rdi + 1], ecx ; add byte ptr [rax], al ; call rax
0x0000000000606c62 : test dword ptr [rdi + 1], esp ; add byte ptr [rax], al ; call rax
0x0000000000637f5e : test dword ptr [rdi + 3], ebx ; add byte ptr [rax], al ; call rax
0x000000000064bd4a : test dword ptr [rdi + 6], esp ; add byte ptr [rax], al ; call 0x6487d7
0x00000000005a3805 : test dword ptr [rdi + rdi*8 - 1], eax ; push qword ptr [rcx] ; shr al, 0x3f ; ret
0x00000000006c8df1 : test dword ptr [rdi + rdi*8 - 1], ebp ; call qword ptr [rax]
0x00000000004adcaf : test dword ptr [rdi + rdi*8 - 1], ebx ; ljmp ptr [rcx] ; ret 0xd089
0x00000000005d6ed1 : test dword ptr [rdi + rdi*8 - 1], ecx ; dec dword ptr [rax - 0x7d] ; ret 0x4808
0x00000000004c8249 : test dword ptr [rdi + rdi*8 - 1], edx ; dec dword ptr [rax + 0x29] ; ret 0x8948
0x00000000005f4f81 : test dword ptr [rdi + rdi*8 - 1], esp ; ljmp ptr [rcx] ; ret 0xd089
0x00000000004f3b47 : test dword ptr [rdi - 0x3f40ffe7], edi ; retf
0x000000000049e8c7 : test dword ptr [rdi - 0x76b7ffe0], edi ; ret
0x0000000000748ce9 : test dword ptr [rdi], 0xf7094000 ; jmp rax
0x0000000000748cf1 : test dword ptr [rdi], 0xf70af000 ; call qword ptr [rax]
0x000000000065c23c : test dword ptr [rdi], eax ; add bl, ch ; retf -0x76b8
0x0000000000608d87 : test dword ptr [rdi], eax ; add byte ptr [rax - 0x7d], cl ; cli ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000052c989 : test dword ptr [rdi], ebp ; or byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000651602 : test dword ptr [rdi], ecx ; adc dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x00000000004fecbc : test dword ptr [rdi], ecx ; add al, 0 ; add al, ch ; retf 0x1bfb
0x0000000000508da1 : test dword ptr [rdi], edx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006d6e34 : test dword ptr [rdi], esi ; in eax, -0x15 ; hlt ; ret
0x000000000065405a : test dword ptr [rdx + 0x20], ecx ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x0000000000653fbf : test dword ptr [rdx + 0x21], edi ; add byte ptr [rax], al ; call rax
0x000000000061d657 : test dword ptr [rdx + 0x3e], edx ; add bh, bh ; ror cl, 1 ; ret
0x000000000050fd3d : test dword ptr [rdx + 0x48000000], eax ; mov edi, ebx ; call rax
0x0000000000510aa6 : test dword ptr [rdx + 0x48000000], ebx ; mov edi, ebx ; call rax
0x000000000063d602 : test dword ptr [rdx + 0x48000001], edx ; mov edi, ebp ; call rax
0x00000000006070ef : test dword ptr [rdx + 0x4c000000], ebp ; mov edi, esi ; call rax
0x000000000064f99e : test dword ptr [rdx + 0x4c00000c], ebx ; mov edi, esp ; call rax
0x000000000054894a : test dword ptr [rdx + 1], ecx ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000005521e6 : test dword ptr [rdx + 1], esp ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x0000000000529389 : test dword ptr [rdx + 1], esp ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000054eb48 : test dword ptr [rdx + 3], ebx ; add byte ptr [rax], al ; call rax
0x000000000052b917 : test dword ptr [rdx + 3], esi ; add byte ptr [rax], al ; call rax
0x00000000006ba110 : test dword ptr [rdx - 0x7c000004], esi ; ret
0x0000000000739211 : test dword ptr [rdx], 0xd8075a00 ; jmp rax
0x0000000000773c15 : test dword ptr [rdx], eax ; add byte ptr [rax], bh ; je 0x773bfc ; jmp qword ptr [rdx]
0x00000000006c0857 : test dword ptr [rdx], eax ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000005da2e9 : test dword ptr [rdx], eax ; call rax
0x000000000064525e : test dword ptr [rdx], eax ; ret 0xffff
0x0000000000675170 : test dword ptr [rdx], ebp ; add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x1e], al ; call rax
0x000000000045a37c : test dword ptr [rdx], ebx ; call rax
0x00000000006339bd : test dword ptr [rdx], ebx ; or dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000618453 : test dword ptr [rdx], ecx ; add cl, cl ; ret
0x00000000005ac18b : test dword ptr [rdx], edx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004da3a2 : test dword ptr [rdx], edx ; call rax
0x0000000000496034 : test dword ptr [rdx], esp ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000631bb2 : test dword ptr [rip + 0x48000001], edi ; mov edi, ebp ; call rax
0x000000000051a0b0 : test dword ptr [rip + 0x48000002], ebx ; mov edi, ebx ; call rax
0x0000000000505568 : test dword ptr [rip + 0x48000002], esi ; mov edx, esp ; call rax
0x000000000052ba46 : test dword ptr [rip + 0x48000005], esp ; mov edi, ebx ; call rax
0x0000000000674c29 : test dword ptr [rip - 0x76fffffc], eax ; out dx, al ; call rax
0x00000000005515fd : test dword ptr [rsi + 0x4c000002], edi ; mov edi, esi ; call rax
0x0000000000532fa1 : test dword ptr [rsi + 0x4c000003], ecx ; mov edi, esp ; call rax
0x0000000000537440 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; mov rdx, rsp ; call rax
0x000000000066d10e : test dword ptr [rsi + 1], edx ; add byte ptr [rax], al ; mov esi, ebp ; call rax
0x0000000000529b2d : test dword ptr [rsi + 3], esp ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000578a69 : test dword ptr [rsi + rdi*8 - 0x52170001], esi ; ret
0x00000000005907a7 : test dword ptr [rsi - 0x7d000000], ebp ; ret 0x4801
0x00000000005e839b : test dword ptr [rsi - 2], eax ; dec ecx ; ret
0x00000000007baf3d : test dword ptr [rsi], 0xf0c85000 ; call rsi
0x00000000007b3cb5 : test dword ptr [rsi], eax ; add byte ptr [rax + 0x2b], cl ; out dx, eax ; call qword ptr [rbx]
0x00000000007b3c6d : test dword ptr [rsi], eax ; add byte ptr [rax], ah ; sub ebp, edi ; jmp qword ptr [rcx]
0x0000000000744491 : test dword ptr [rsi], eax ; add byte ptr [rsi], bl ; sbb esi, ebp ; jmp rax
0x000000000041a30c : test dword ptr [rsi], ebx ; call rax
0x0000000000597560 : test dword ptr [rsi], ecx ; add al, ch ; retf 0xe9f
0x000000000059756f : test dword ptr [rsi], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005273ef : test dword ptr [rsi], edx ; add byte ptr [rax + 0x29], cl ; ret
0x000000000051864e : test dword ptr [rsi], edx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000611165 : test dword ptr [rsi], edx ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000005ba286 : test dword ptr [rsp + rbp*8 - 1], ebx ; call qword ptr [rax]
0x0000000000530cdc : test dword ptr [rsp + rcx], ebx ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x0000000000552880 : test dword ptr [rsp + rcx], esi ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00000000006d6e33 : test dword ptr ds:[rdi], esi ; in eax, -0x15 ; hlt ; ret
0x00000000007b3c6c : test dword ptr fs:[rsi], eax ; add byte ptr [rax], ah ; sub ebp, edi ; jmp qword ptr [rcx]
0x0000000000690086 : test eax, 0x10428941 ; ret
0x0000000000723229 : test eax, 0x154c59b8 ; fistp qword ptr [rcx + rdx*8] ; ret 0x85e7
0x00000000007d96c0 : test eax, 0x1582050f ; add ah, al ; syscall
0x000000000072222a : test eax, 0x15df3cf4 ; test rdi, r12 ; ret 0xe0d1
0x000000000055b30d : test eax, 0x17942de8 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050a9ed : test eax, 0x1c9d4de8 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007d071e : test eax, 0x1dda140f ; add al, al ; syscall
0x000000000074b531 : test eax, 0x2500008 ; cli ; jmp qword ptr [rax]
0x00000000007cee0d : test eax, 0x2c71301 ; add edi, eax ; add dword ptr [rax], ebx ; ret 0x102
0x00000000006c6ad5 : test eax, 0x30a7 ; sete al ; ret
0x0000000000593052 : test eax, 0x31c78948 ; shr al, 0xf3 ; retf 0xe
0x000000000068ec1c : test eax, 0x3737 ; ret
0x000000000049caf7 : test eax, 0x3900002e ; ret
0x00000000007a6cc7 : test eax, 0x41180e0a ; ret
0x000000000072247d : test eax, 0x41387e37 ; jg 0x722463 ; pop rbp ; ret
0x0000000000407293 : test eax, 0x58002cd4 ; pop rbx ; pop rbp ; ret
0x0000000000639db3 : test eax, 0x5b580009 ; pop rbp ; ret
0x00000000007cb40b : test eax, 0x71 ; ret
0x00000000005265e0 : test eax, 0x83000000 ; ret
0x0000000000628785 : test eax, 0x8900058d ; ret
0x000000000063612d : test eax, 0x89480004 ; ret
0x0000000000627e45 : test eax, 0x8948000a ; ret
0x00000000005b611c : test eax, 0x8948000c ; ret
0x0000000000569da1 : test eax, 0x89480016 ; ret
0x000000000046fe92 : test eax, 0x89480023 ; ret
0x000000000042e475 : test eax, 0x89480025 ; ret
0x0000000000439dc2 : test eax, 0x89480029 ; ret
0x0000000000597f6b : test eax, 0x89480046 ; fucompi st(0) ; retf 0x13c7
0x00000000006b690d : test eax, 0x8948fffc ; ret
0x0000000000563c0c : test eax, 0x8b480015 ; push rbp ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000043f975 : test eax, 0x90ffffd4 ; leave ; ret
0x00000000007f402c : test eax, 0xa70001c9 ; retf 0x501
0x0000000000629e7d : test eax, 0xaa8bde8 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000744c59 : test eax, 0xab1a0006 ; out dx, al ; call rax
0x0000000000744c69 : test eax, 0xab840006 ; out dx, al ; call qword ptr [rax]
0x000000000051aaf0 : test eax, 0xbe000001 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000435506 : test eax, 0xbf000000 ; scasb al, byte ptr [rdi] ; ret 0x6d
0x00000000004d79f3 : test eax, 0xc9001e8f ; ret
0x0000000000428803 : test eax, 0xc9002960 ; ret
0x000000000040bcfd : test eax, 0xc9fffffe ; ret
0x00000000004b7fb6 : test eax, 0xd0ff0054 ; leave ; ret
0x00000000005ae7b9 : test eax, 0xeb000d13 ; ret 0xc0eb
0x00000000004a2aa5 : test eax, 0xeb001dd0 ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000004c6a19 : test eax, 0xebeb894c ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000006560b2 : test eax, 0xebffffdf ; retf
0x0000000000721a55 : test eax, 0xfad2c7cc ; loope 0x721a50 ; xchg eax, ebx ; retf
0x0000000000722a56 : test eax, 0xfae1ec11 ; sal ch, cl ; cli ; retf
0x000000000074b529 : test eax, 0xfec00008 ; stc ; call rax
0x00000000004b5533 : test eax, 0xff0054d3 ; ror cl, 1 ; ret
0x000000000053a74a : test eax, 0xfffe54e9 ; dec dword ptr [rax - 0x77] ; ret
0x00000000006cc642 : test eax, eax ; cmovs eax, edx ; add rsp, 8 ; ret
0x00000000005ce0b9 : test eax, eax ; cmovs eax, edx ; nop ; nop ; pop rbp ; ret
0x0000000000517e80 : test eax, eax ; cmovs eax, edx ; ret
0x00000000004d0414 : test eax, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000408b06 : test eax, eax ; je 0x408b03 ; push rbp ; mov rbp, rsp ; call rax
0x0000000000506c95 : test eax, eax ; je 0x506ca7 ; lock sub dword ptr [rax + 0x24], 1 ; ret
0x0000000000506ca5 : test eax, eax ; je 0x506cb7 ; lock sub dword ptr [rax + 0x24], 1 ; ret
0x0000000000506cb5 : test eax, eax ; je 0x506cc7 ; lock sub dword ptr [rax + 0x24], 1 ; ret
0x00000000005083d3 : test eax, eax ; je 0x5083c5 ; pop rbx ; ret
0x00000000005085ee : test eax, eax ; je 0x5085e4 ; ret
0x00000000005086e5 : test eax, eax ; je 0x5086f4 ; ret
0x000000000050fd25 : test eax, eax ; je 0x50fd38 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005134e7 : test eax, eax ; je 0x5134f6 ; movzx eax, byte ptr [rax] ; ret
0x0000000000518305 : test eax, eax ; je 0x518317 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x0000000000518315 : test eax, eax ; je 0x518327 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x0000000000518325 : test eax, eax ; je 0x518337 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x00000000005183a5 : test eax, eax ; je 0x5183b7 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x00000000005183b5 : test eax, eax ; je 0x5183c7 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x00000000005183c5 : test eax, eax ; je 0x5183d7 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x00000000005198a5 : test eax, eax ; je 0x5198b6 ; mov rax, qword ptr [rax + 0x28] ; ret
0x00000000005198d5 : test eax, eax ; je 0x5198e6 ; mov rax, qword ptr [rax + 0x20] ; ret
0x0000000000519905 : test eax, eax ; je 0x519916 ; mov rax, qword ptr [rax + 0x28] ; ret
0x0000000000519935 : test eax, eax ; je 0x519946 ; mov rax, qword ptr [rax + 0x20] ; ret
0x0000000000526b4c : test eax, eax ; je 0x526b55 ; ret
0x000000000053da3c : test eax, eax ; je 0x53da60 ; test al, 1 ; jne 0x53da53 ; call rax
0x000000000053f725 : test eax, eax ; je 0x53f737 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x000000000053f735 : test eax, eax ; je 0x53f747 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x000000000053f745 : test eax, eax ; je 0x53f757 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x000000000053fa05 : test eax, eax ; je 0x53fa14 ; mov eax, dword ptr [rax + 0x1c] ; ret
0x000000000053fa35 : test eax, eax ; je 0x53fa44 ; mov eax, dword ptr [rax + 0x1c] ; ret
0x00000000005482e5 : test eax, eax ; je 0x5482f5 ; pop rbx ; ret
0x0000000000548375 : test eax, eax ; je 0x548385 ; pop rbx ; ret
0x000000000054a225 : test eax, eax ; je 0x54a237 ; lock sub dword ptr [rax + 0x1c], 1 ; ret
0x000000000054a235 : test eax, eax ; je 0x54a247 ; lock sub dword ptr [rax + 0x1c], 1 ; ret
0x000000000054a245 : test eax, eax ; je 0x54a257 ; lock sub dword ptr [rax + 0x1c], 1 ; ret
0x000000000054a8b5 : test eax, eax ; je 0x54a8c4 ; mov rax, qword ptr [rax] ; ret
0x000000000054a8d5 : test eax, eax ; je 0x54a8e4 ; mov rax, qword ptr [rax] ; ret
0x0000000000554ed5 : test eax, eax ; je 0x554ee7 ; lock sub dword ptr [rax + 0x24], 1 ; ret
0x0000000000554ee5 : test eax, eax ; je 0x554ef7 ; lock sub dword ptr [rax + 0x24], 1 ; ret
0x0000000000554ef5 : test eax, eax ; je 0x554f07 ; lock sub dword ptr [rax + 0x24], 1 ; ret
0x0000000000556753 : test eax, eax ; je 0x556745 ; pop rbx ; ret
0x000000000055696e : test eax, eax ; je 0x556964 ; ret
0x0000000000556a65 : test eax, eax ; je 0x556a74 ; ret
0x0000000000562f85 : test eax, eax ; je 0x562f97 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x0000000000562f95 : test eax, eax ; je 0x562fa7 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x0000000000562fa5 : test eax, eax ; je 0x562fb7 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x0000000000581895 : test eax, eax ; je 0x5818a6 ; mov eax, dword ptr [rax] ; ret
0x00000000005845a5 : test eax, eax ; je 0x5845b7 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x00000000005845b5 : test eax, eax ; je 0x5845c7 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x00000000005845c5 : test eax, eax ; je 0x5845d7 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x000000000059091c : test eax, eax ; je 0x590925 ; ret
0x000000000059c445 : test eax, eax ; je 0x59c458 ; lock sub dword ptr [rax + 0x14], 1 ; ret
0x00000000005a4ae1 : test eax, eax ; je 0x5a4b14 ; add rsp, 8 ; ret
0x00000000005a70b5 : test eax, eax ; je 0x5a70c7 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x00000000005a70c5 : test eax, eax ; je 0x5a70d7 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x00000000005a70d5 : test eax, eax ; je 0x5a70e7 ; lock sub dword ptr [rax + 0x2c], 1 ; ret
0x0000000000625c05 : test eax, eax ; je 0x625c17 ; lock sub dword ptr [rax + 0x24], 1 ; ret
0x0000000000625c15 : test eax, eax ; je 0x625c27 ; lock sub dword ptr [rax + 0x24], 1 ; ret
0x0000000000625c25 : test eax, eax ; je 0x625c37 ; lock sub dword ptr [rax + 0x24], 1 ; ret
0x0000000000627463 : test eax, eax ; je 0x627455 ; pop rbx ; ret
0x000000000062767e : test eax, eax ; je 0x627674 ; ret
0x0000000000627775 : test eax, eax ; je 0x627784 ; ret
0x000000000066919a : test eax, eax ; je 0x6691a4 ; ret
0x00000000006691ca : test eax, eax ; je 0x6691d4 ; ret
0x00000000006691ea : test eax, eax ; je 0x6691f4 ; ret
0x000000000066c0bc : test eax, eax ; je 0x66c0cc ; ret
0x00000000006a46a3 : test eax, eax ; je 0x6a46b4 ; add rsp, 8 ; ret
0x00000000006a82cd : test eax, eax ; je 0x6a82df ; cmp rdi, qword ptr [rax] ; jne 0x6a82d1 ; ret
0x000000000051c28f : test eax, eax ; jg 0x51c280 ; mov dword ptr [rbx + 0x10], eax ; pop rbx ; ret
0x0000000000587e4f : test eax, eax ; jg 0x587e40 ; mov dword ptr [rbx + 0x10], eax ; pop rbx ; ret
0x000000000059eba6 : test eax, eax ; jg 0x59eb65 ; pop rbx ; ret
0x00000000006a17c6 : test eax, eax ; jg 0x6a17cf ; ret
0x00000000005af858 : test eax, eax ; jle 0x5af8aa ; add rsp, 8 ; ret
0x00000000005af8f3 : test eax, eax ; jle 0x5af942 ; add rsp, 8 ; ret
0x00000000005ff4d3 : test eax, eax ; jle 0x5ff4dc ; ret
0x0000000000507d82 : test eax, eax ; jne 0x507d8b ; ret
0x0000000000507d93 : test eax, eax ; jne 0x507d9c ; ret
0x00000000005210b0 : test eax, eax ; jne 0x5210c9 ; mov eax, 1 ; ret
0x0000000000522002 : test eax, eax ; jne 0x52200b ; ret
0x0000000000522013 : test eax, eax ; jne 0x52201c ; ret
0x0000000000522082 : test eax, eax ; jne 0x52208b ; ret
0x0000000000522093 : test eax, eax ; jne 0x52209c ; ret
0x0000000000522102 : test eax, eax ; jne 0x52210b ; ret
0x0000000000522113 : test eax, eax ; jne 0x52211c ; ret
0x00000000005222b5 : test eax, eax ; jne 0x5222ac ; ret
0x0000000000522385 : test eax, eax ; jne 0x52237c ; ret
0x0000000000522b50 : test eax, eax ; jne 0x522b69 ; mov eax, 1 ; ret
0x00000000005272b5 : test eax, eax ; jne 0x5272ac ; ret
0x0000000000527385 : test eax, eax ; jne 0x52737c ; ret
0x0000000000528780 : test eax, eax ; jne 0x528799 ; mov eax, 1 ; ret
0x0000000000542ad2 : test eax, eax ; jne 0x542adb ; ret
0x0000000000542ae3 : test eax, eax ; jne 0x542aec ; ret
0x0000000000542c85 : test eax, eax ; jne 0x542c7c ; ret
0x0000000000542d55 : test eax, eax ; jne 0x542d4c ; ret
0x0000000000544150 : test eax, eax ; jne 0x544169 ; mov eax, 1 ; ret
0x000000000054bf23 : test eax, eax ; jne 0x54bf34 ; ret
0x000000000054c083 : test eax, eax ; jne 0x54c094 ; ret
0x000000000054c2d7 : test eax, eax ; jne 0x54c344 ; ret
0x000000000054c357 : test eax, eax ; jne 0x54c3c4 ; ret
0x000000000054d6c0 : test eax, eax ; jne 0x54d6d9 ; mov eax, 1 ; ret
0x000000000054dac2 : test eax, eax ; jne 0x54dacb ; ret
0x000000000054dad3 : test eax, eax ; jne 0x54dadc ; ret
0x000000000054fa33 : test eax, eax ; jne 0x54fa44 ; ret
0x0000000000551d93 : test eax, eax ; jne 0x551da4 ; ret
0x0000000000556012 : test eax, eax ; jne 0x55601b ; ret
0x0000000000556023 : test eax, eax ; jne 0x55602c ; ret
0x0000000000566ff2 : test eax, eax ; jne 0x566ffb ; ret
0x0000000000567003 : test eax, eax ; jne 0x56700c ; ret
0x00000000005671a5 : test eax, eax ; jne 0x56719c ; ret
0x0000000000567275 : test eax, eax ; jne 0x56726c ; ret
0x0000000000567a40 : test eax, eax ; jne 0x567a59 ; mov eax, 1 ; ret
0x0000000000571520 : test eax, eax ; jne 0x571539 ; mov eax, 1 ; ret
0x0000000000571902 : test eax, eax ; jne 0x57190b ; ret
0x0000000000571913 : test eax, eax ; jne 0x57191c ; ret
0x0000000000585ea6 : test eax, eax ; jne 0x585eb1 ; pop rbx ; ret
0x000000000058e560 : test eax, eax ; jne 0x58e579 ; mov eax, 1 ; ret
0x000000000058e8e0 : test eax, eax ; jne 0x58e8f9 ; mov eax, 1 ; ret
0x000000000058ed72 : test eax, eax ; jne 0x58ed7b ; ret
0x000000000058ed83 : test eax, eax ; jne 0x58ed8c ; ret
0x000000000058edf2 : test eax, eax ; jne 0x58edfb ; ret
0x000000000058ee03 : test eax, eax ; jne 0x58ee0c ; ret
0x000000000058ee72 : test eax, eax ; jne 0x58ee7b ; ret
0x000000000058ee83 : test eax, eax ; jne 0x58ee8c ; ret
0x0000000000590ef5 : test eax, eax ; jne 0x590eec ; ret
0x0000000000590fc5 : test eax, eax ; jne 0x590fbc ; ret
0x00000000005a2b42 : test eax, eax ; jne 0x5a2b4b ; ret
0x00000000005a2b53 : test eax, eax ; jne 0x5a2b5c ; ret
0x00000000005a8ac2 : test eax, eax ; jne 0x5a8acb ; ret
0x00000000005a8ad3 : test eax, eax ; jne 0x5a8adc ; ret
0x00000000005a97e5 : test eax, eax ; jne 0x5a97dc ; ret
0x00000000005a98b5 : test eax, eax ; jne 0x5a98ac ; ret
0x00000000005aa080 : test eax, eax ; jne 0x5aa099 ; mov eax, 1 ; ret
0x0000000000626e02 : test eax, eax ; jne 0x626e0b ; ret
0x0000000000626e13 : test eax, eax ; jne 0x626e1c ; ret
0x0000000000669cb6 : test eax, eax ; jne 0x669cc4 ; ret
0x000000000066b790 : test eax, eax ; jne 0x66b784 ; ret
0x000000000068d83b : test eax, eax ; jne 0x68d850 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000068e0eb : test eax, eax ; jne 0x68e0fc ; add rsp, 8 ; ret
0x000000000068ee6b : test eax, eax ; jne 0x68ee35 ; pop rbx ; ret
0x000000000069f506 : test eax, eax ; jne 0x69f514 ; ret
0x00000000006a6975 : test eax, eax ; jne 0x6a6980 ; pop rbx ; ret
0x00000000006a7958 : test eax, eax ; jne 0x6a7968 ; pop rbx ; ret
0x00000000006a84cd : test eax, eax ; jne 0x6a84c4 ; ret
0x00000000006ab1ef : test eax, eax ; jne 0x6ab200 ; add rsp, 8 ; ret
0x00000000006d63b2 : test eax, eax ; jne 0x6d63c5 ; ret
0x000000000059c09e : test eax, eax ; js 0x59c0c0 ; add rsp, 8 ; ret
0x000000000065ced2 : test eax, eax ; js 0x65cef2 ; add rsp, 8 ; ret
0x000000000065d1d2 : test eax, eax ; js 0x65d1f2 ; add rsp, 8 ; ret
0x00000000006a11d6 : test eax, eax ; js 0x6a1208 ; add rsp, 8 ; ret
0x000000000040c155 : test eax, eax ; nop ; pop rbp ; ret
0x00000000004f6ea6 : test eax, eax ; sete al ; add rsp, 8 ; ret
0x000000000040df5b : test eax, eax ; sete al ; nop ; pop rbp ; ret
0x000000000053ae11 : test eax, eax ; sete al ; pop rdx ; ret
0x0000000000506b83 : test eax, eax ; sete al ; ret
0x000000000068936b : test eax, eax ; setg al ; add rsp, 8 ; ret
0x0000000000517f67 : test eax, eax ; setg al ; ret
0x00000000006670ee : test eax, eax ; setg cl ; cmp cl, dl ; jne 0x667101 ; ret
0x00000000006892a5 : test eax, eax ; setle al ; add rsp, 8 ; ret
0x00000000005d3377 : test eax, eax ; setle al ; nop ; pop rbp ; ret
0x0000000000517ee3 : test eax, eax ; setle al ; ret
0x0000000000508e5e : test eax, eax ; setne al ; add rsp, 8 ; ret
0x00000000004417f7 : test eax, eax ; setne al ; nop ; leave ; ret
0x000000000040d868 : test eax, eax ; setne al ; nop ; pop rbp ; ret
0x000000000062e6a3 : test eax, ebp ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000510207 : test eax, ebp ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000436ab9 : test eax, ebp ; idiv edi ; call qword ptr [rax - 0x3d]
0x00000000004d047c : test eax, ebx ; idiv bh ; call qword ptr [rax]
0x00000000005101e3 : test eax, edx ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rdx
0x00000000004d04fd : test eax, esi ; idiv bh ; call rax
0x00000000004d0ff5 : test eax, esp ; idiv edi ; call rax
0x000000000062de33 : test ebp, eax ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000005a268e : test ebp, ebp ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x1f7c
0x0000000000721b8f : test ebp, ebp ; jns 0x721c02 ; retf 0x48ac
0x0000000000656aad : test ebp, ebp ; sldt word ptr [rax] ; call rax
0x000000000077cb41 : test ebp, ebx ; call qword ptr [rbx]
0x000000000077cb19 : test ebp, ebx ; jmp qword ptr [rdi]
0x0000000000750269 : test ebp, ecx ; jmp qword ptr [rbx]
0x00000000007384ad : test ebp, edx ; jmp qword ptr [rax]
0x0000000000511aa2 : test ebp, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000532f51 : test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000006452e3 : test ebx, ebp ; ret 0xffff
0x00000000006a1bbd : test ebx, ebp ; xchg eax, esi ; xor eax, eax ; ret
0x00000000006cb5ad : test ebx, ebx ; setne al ; pop rbx ; ret
0x000000000069b33e : test ebx, ecx ; retf
0x00000000006512a7 : test ebx, esi ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000004faa7a : test ebx, esi ; add eax, dword ptr [rax] ; add byte ptr [rcx], dh ; leave ; call r8
0x00000000007469c5 : test ebx, esi ; call rax
0x000000000060706d : test ebx, esp ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x00000000004f2727 : test ecx, eax ; sbb al, 0 ; leave ; ret
0x000000000063d6c9 : test ecx, ebp ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000051af05 : test ecx, ecx ; cmove rax, rdx ; mov rdx, rcx ; ret
0x00000000006895b1 : test ecx, ecx ; setle al ; ret
0x00000000007b6519 : test edi, ebp ; call rcx
0x00000000006d0488 : test edi, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000534b6c : test edi, ecx ; add al, 0 ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000432598 : test edi, edi ; dec ecx ; ret
0x0000000000504341 : test edi, edi ; je 0x504352 ; movzx eax, byte ptr [rdi + 8] ; ret
0x0000000000658821 : test edi, edi ; je 0x65882a ; ret
0x0000000000674761 : test edi, edi ; je 0x674770 ; call 0x680a6a
0x000000000068e361 : test edi, edi ; je 0x68e372 ; movzx eax, byte ptr [rdi + 0x38] ; ret
0x0000000000691821 : test edi, edi ; je 0x691832 ; movzx eax, byte ptr [rdi + 0x38] ; ret
0x00000000006a60b1 : test edi, edi ; je 0x6a60ba ; ret
0x00000000006a6821 : test edi, edi ; je 0x6a6832 ; movzx eax, byte ptr [rdi + 0x38] ; ret
0x00000000006cb671 : test edi, edi ; je 0x6cb682 ; lea rax, qword ptr [rdi + rsi*8] ; ret
0x00000000006cb861 : test edi, edi ; je 0x6cb872 ; lea rax, qword ptr [rdi - 8] ; ret
0x00000000006cb871 : test edi, edi ; je 0x6cb882 ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000006a0801 : test edi, edi ; jne 0x6a0816 ; xor eax, eax ; ret
0x00000000006a17e1 : test edi, edi ; js 0x6a17f0 ; mov rax, rdi ; ret
0x0000000000525981 : test edi, edi ; mov eax, 1 ; je 0x525999 ; ret
0x000000000052b161 : test edi, edi ; mov eax, 1 ; je 0x52b179 ; ret
0x0000000000544e21 : test edi, edi ; mov eax, 1 ; je 0x544e39 ; ret
0x000000000056ae91 : test edi, edi ; mov eax, 1 ; je 0x56aea9 ; ret
0x0000000000571981 : test edi, edi ; mov eax, 1 ; je 0x571999 ; ret
0x000000000058f6c1 : test edi, edi ; mov eax, 1 ; je 0x58f6d9 ; ret
0x00000000005957c1 : test edi, edi ; mov eax, 1 ; je 0x5957d9 ; ret
0x00000000005ad821 : test edi, edi ; mov eax, 1 ; je 0x5ad839 ; ret
0x000000000068d997 : test edi, edi ; mov rax, r13 ; jne 0x68d9bd ; call rax
0x000000000073905d : test edi, edx ; jmp rax
0x00000000007495fd : test edi, esi ; jmp qword ptr [rax]
0x0000000000722230 : test edi, esp ; ret 0xe0d1
0x00000000005a26b1 : test edx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000005d5282 : test edx, ecx ; add eax, dword ptr [rax] ; add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xa
0x00000000005fff9e : test edx, edi ; add eax, dword ptr [rax] ; add byte ptr [rcx], al ; retf -0x2ec7
0x0000000000631c2a : test edx, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000054a83a : test edx, edx ; cmove rax, rcx ; pop rbx ; ret
0x000000000054ad2d : test edx, edx ; cmove rax, rcx ; ret
0x0000000000517d5a : test edx, edx ; cmovne rax, rdi ; ret
0x00000000004f7c69 : test edx, edx ; je 0x4f7c7a ; mov byte ptr [rdx + 4], 1 ; ret
0x0000000000506b1e : test edx, edx ; je 0x506b17 ; mov rax, rdi ; ret
0x0000000000506b6e : test edx, edx ; je 0x506b64 ; ret
0x000000000050700e : test edx, edx ; je 0x507005 ; pop rbx ; ret
0x000000000050abdb : test edx, edx ; je 0x50abf0 ; mov rax, rbx ; pop rbx ; ret
0x000000000050ac2b : test edx, edx ; je 0x50ac48 ; mov rax, rbx ; pop rbx ; ret
0x00000000005190c5 : test edx, edx ; je 0x5190d5 ; pop rbx ; ret
0x00000000005190f5 : test edx, edx ; je 0x519105 ; pop rbx ; ret
0x0000000000519123 : test edx, edx ; je 0x519137 ; mov edx, edx ; pop rbx ; ret
0x0000000000519163 : test edx, edx ; je 0x519177 ; mov edx, edx ; pop rbx ; ret
0x00000000005191a5 : test edx, edx ; je 0x5191b5 ; pop rbx ; ret
0x00000000005191d5 : test edx, edx ; je 0x5191e5 ; pop rbx ; ret
0x000000000051aef9 : test edx, edx ; je 0x51af04 ; ret
0x000000000051af19 : test edx, edx ; je 0x51af24 ; ret
0x000000000051af39 : test edx, edx ; je 0x51af44 ; ret
0x000000000051af59 : test edx, edx ; je 0x51af64 ; ret
0x000000000053f9b5 : test edx, edx ; je 0x53f9c5 ; pop rbx ; ret
0x000000000053f9e5 : test edx, edx ; je 0x53f9f5 ; pop rbx ; ret
0x000000000053fce9 : test edx, edx ; je 0x53fcf4 ; ret
0x000000000053fd09 : test edx, edx ; je 0x53fd14 ; ret
0x000000000054a825 : test edx, edx ; je 0x54a835 ; pop rbx ; ret
0x000000000054a865 : test edx, edx ; je 0x54a875 ; pop rbx ; ret
0x000000000054b709 : test edx, edx ; je 0x54b714 ; ret
0x000000000054b729 : test edx, edx ; je 0x54b734 ; ret
0x000000000054e12a : test edx, edx ; je 0x54e13f ; mov rax, rdi ; ret
0x000000000054e17a : test edx, edx ; je 0x54e18f ; mov rax, rdi ; ret
0x0000000000554d5e : test edx, edx ; je 0x554d57 ; mov rax, rdi ; ret
0x0000000000554dae : test edx, edx ; je 0x554da4 ; ret
0x000000000055528e : test edx, edx ; je 0x555285 ; pop rbx ; ret
0x00000000005578db : test edx, edx ; je 0x5578f0 ; mov rax, rbx ; pop rbx ; ret
0x000000000055792b : test edx, edx ; je 0x557948 ; mov rax, rbx ; pop rbx ; ret
0x00000000005639b5 : test edx, edx ; je 0x5639c5 ; pop rbx ; ret
0x00000000005639e5 : test edx, edx ; je 0x5639f5 ; pop rbx ; ret
0x0000000000563de9 : test edx, edx ; je 0x563df4 ; ret
0x0000000000563e09 : test edx, edx ; je 0x563e14 ; ret
0x000000000056fb83 : test edx, edx ; je 0x56fb97 ; mov edx, edx ; pop rbx ; ret
0x000000000056fbc3 : test edx, edx ; je 0x56fbd7 ; mov edx, edx ; pop rbx ; ret
0x0000000000584c23 : test edx, edx ; je 0x584c37 ; mov edx, edx ; pop rbx ; ret
0x0000000000584c63 : test edx, edx ; je 0x584c77 ; mov edx, edx ; pop rbx ; ret
0x0000000000584ca3 : test edx, edx ; je 0x584cb7 ; mov edx, edx ; pop rbx ; ret
0x0000000000584ce3 : test edx, edx ; je 0x584cf7 ; mov edx, edx ; pop rbx ; ret
0x0000000000584d25 : test edx, edx ; je 0x584d35 ; pop rbx ; ret
0x0000000000584d55 : test edx, edx ; je 0x584d65 ; pop rbx ; ret
0x0000000000585539 : test edx, edx ; je 0x585544 ; ret
0x0000000000585559 : test edx, edx ; je 0x585564 ; ret
0x00000000005a72e5 : test edx, edx ; je 0x5a72f5 ; pop rbx ; ret
0x00000000005a7315 : test edx, edx ; je 0x5a7325 ; pop rbx ; ret
0x00000000005a78d9 : test edx, edx ; je 0x5a78e4 ; ret
0x00000000005a78f9 : test edx, edx ; je 0x5a7904 ; ret
0x00000000005f8475 : test edx, edx ; je 0x5f8484 ; ret
0x0000000000625a8e : test edx, edx ; je 0x625a87 ; mov rax, rdi ; ret
0x0000000000625ade : test edx, edx ; je 0x625ad4 ; ret
0x0000000000625dce : test edx, edx ; je 0x625dc5 ; pop rbx ; ret
0x000000000062a06b : test edx, edx ; je 0x62a080 ; mov rax, rbx ; pop rbx ; ret
0x000000000062a0bb : test edx, edx ; je 0x62a0d8 ; mov rax, rbx ; pop rbx ; ret
0x000000000068fa1b : test edx, edx ; je 0x68fa30 ; mov rax, qword ptr [rax + 0x50] ; ret
0x0000000000518288 : test edx, edx ; jle 0x518294 ; ret
0x0000000000522240 : test edx, edx ; jne 0x52223c ; ret
0x0000000000522260 : test edx, edx ; jne 0x52225c ; ret
0x0000000000522288 : test edx, edx ; jne 0x522284 ; ret
0x0000000000522358 : test edx, edx ; jne 0x522354 ; ret
0x0000000000527240 : test edx, edx ; jne 0x52723c ; ret
0x0000000000527260 : test edx, edx ; jne 0x52725c ; ret
0x0000000000527288 : test edx, edx ; jne 0x527284 ; ret
0x0000000000527358 : test edx, edx ; jne 0x527354 ; ret
0x000000000052a49d : test edx, edx ; jne 0x52a48c ; ret
0x0000000000542a07 : test edx, edx ; jne 0x5429f1 ; ret
0x0000000000542c10 : test edx, edx ; jne 0x542c0c ; ret
0x0000000000542c30 : test edx, edx ; jne 0x542c2c ; ret
0x0000000000542c58 : test edx, edx ; jne 0x542c54 ; ret
0x0000000000542d28 : test edx, edx ; jne 0x542d24 ; ret
0x0000000000544b5c : test edx, edx ; jne 0x544b4c ; ret
0x0000000000567130 : test edx, edx ; jne 0x56712c ; ret
0x0000000000567150 : test edx, edx ; jne 0x56714c ; ret
0x0000000000567178 : test edx, edx ; jne 0x567174 ; ret
0x0000000000567248 : test edx, edx ; jne 0x567244 ; ret
0x0000000000590e80 : test edx, edx ; jne 0x590e7c ; ret
0x0000000000590ea0 : test edx, edx ; jne 0x590e9c ; ret
0x0000000000590ec8 : test edx, edx ; jne 0x590ec4 ; ret
0x0000000000590f98 : test edx, edx ; jne 0x590f94 ; ret
0x00000000005a5577 : test edx, edx ; jne 0x5a5561 ; ret
0x00000000005a9770 : test edx, edx ; jne 0x5a976c ; ret
0x00000000005a9790 : test edx, edx ; jne 0x5a978c ; ret
0x00000000005a97b8 : test edx, edx ; jne 0x5a97b4 ; ret
0x00000000005a9888 : test edx, edx ; jne 0x5a9884 ; ret
0x00000000006ce0fb : test edx, edx ; jne 0x6ce10d ; ret
0x00000000006d6087 : test edx, edx ; jne 0x6d6094 ; ret
0x00000000006d6112 : test edx, edx ; jne 0x6d6124 ; ret
0x000000000053ade9 : test edx, edx ; sete al ; ret
0x0000000000566c48 : test edx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000745f55 : test edx, esi ; jmp qword ptr [rax]
0x00000000006a4637 : test edx, esp ; xor eax, 0x5bd88900 ; ret
0x000000000052b755 : test esi, eax ; add al, 0 ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000056edab : test esi, ebp ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf
0x000000000073be05 : test esi, ebx ; jmp rax
0x0000000000552fb7 : test esi, ebx ; or dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000511123 : test esi, ecx ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000738915 : test esi, edx ; jmp qword ptr [rax]
0x000000000073890d : test esi, edx ; push rax ; retf
0x000000000052b101 : test esi, esi ; je 0x52b112 ; mov rax, qword ptr [rsi + 0x28] ; ret
0x000000000052b1f1 : test esi, esi ; je 0x52b202 ; mov rax, qword ptr [rsi + 0x20] ; ret
0x0000000000544e81 : test esi, esi ; je 0x544e90 ; mov eax, dword ptr [rsi + 0x1c] ; ret
0x000000000054db21 : test esi, esi ; je 0x54db30 ; mov rax, qword ptr [rsi] ; ret
0x0000000000660430 : test esi, esi ; je 0x66044a ; mov rdi, qword ptr [rdi + 0x50] ; call rdx
0x00000000006cb681 : test esi, esi ; je 0x6cb692 ; lea rax, qword ptr [rsi + rdi*8] ; ret
0x000000000067f901 : test esi, esi ; jg 0x67f8cf ; ret
0x00000000006a1785 : test esi, esi ; jle 0x6a17a8 ; add rsp, 8 ; ret
0x000000000056fe70 : test esi, esi ; jne 0x56fe7c ; ret
0x00000000005861f0 : test esi, esi ; jne 0x5861fc ; ret
0x000000000059f1f0 : test esi, esi ; jne 0x59f1fc ; ret
0x000000000069f67c : test esi, esi ; jne 0x69f679 ; mov eax, 1 ; ret
0x00000000006a3311 : test esi, esi ; jne 0x6a3324 ; ret
0x000000000050aab1 : test esi, esi ; setne al ; ret
0x00000000007410b5 : test esi, esp ; call rax
0x000000000064a100 : test esp, ebp ; add al, 0 ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000062de19 : test esp, ebp ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x0000000000640329 : test esp, ebp ; pop rbp ; add byte ptr [rax], al ; call rax
0x000000000063391c : test esp, ecx ; or byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000004fbf32 : test esp, edx ; or byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000068dbdc : test esp, esp ; mov rax, rbp ; jne 0x68dc06 ; call rax
0x0000000000510fc7 : test esp, esp ; setg al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000618452 : test qword ptr [rdx], rcx ; add cl, cl ; ret
0x000000000041a314 : test qword ptr [rsi], rbx ; call rax
0x00000000004b7e1f : test r10b, dil ; dec ecx ; ret
0x0000000000522afe : test r10b, dil ; je 0x522ab2 ; ret
0x000000000052872e : test r10b, dil ; je 0x5286e2 ; ret
0x00000000005440fe : test r10b, dil ; je 0x5440b2 ; ret
0x00000000005679ee : test r10b, dil ; je 0x5679a2 ; ret
0x000000000059173e : test r10b, dil ; je 0x5916f2 ; ret
0x00000000005aa02e : test r10b, dil ; je 0x5a9fe2 ; ret
0x000000000068dbdb : test r12, r12 ; mov rax, rbp ; jne 0x68dc07 ; call rax
0x000000000059e6e5 : test r12b, 1 ; jne 0x59e737 ; call r12
0x000000000059e892 : test r12b, 1 ; jne 0x59e8e7 ; call r12
0x00000000005a125a : test r12b, 1 ; jne 0x5a12af ; call r12
0x00000000005a4e1e : test r12b, 1 ; jne 0x5a4e77 ; call r12
0x0000000000589b66 : test r12b, 1 ; mov rcx, r12 ; jne 0x589bc1 ; call rcx
0x0000000000526dd4 : test r12b, 1 ; mov rdx, r12 ; jne 0x526e29 ; call rdx
0x0000000000589751 : test r12b, 1 ; mov rdx, r12 ; jne 0x5897a9 ; call rdx
0x0000000000590bb4 : test r12b, 1 ; mov rdx, r12 ; jne 0x590c09 ; call rdx
0x00000000004f81d6 : test r12b, al ; jne 0x4f81e9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005507ff : test r12b, al ; jne 0x550812 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000056f39e : test r12b, al ; jne 0x56f3b1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005bd232 : test r12b, al ; jne 0x5bd245 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005bd9b9 : test r12b, al ; jne 0x5bd9cc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005fd911 : test r12b, al ; jne 0x5fd924 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000608d6f : test r12b, al ; jne 0x608d82 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000060917f : test r12b, al ; jne 0x609192 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000637029 : test r12b, al ; jne 0x63703c ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000063b0ce : test r12b, al ; jne 0x63b126 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000063b352 : test r12b, al ; jne 0x63b3a6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005503f4 : test r12b, bl ; jne 0x550413 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000550714 : test r12b, bl ; jne 0x550734 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005597b5 : test r12b, bl ; jne 0x5597c8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000057212e : test r12b, bl ; jne 0x572141 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000062e293 : test r12b, bl ; jne 0x62e2a6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000512da2 : test r12b, bpl ; jne 0x512db5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005321c6 : test r12b, bpl ; jne 0x5321d9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005596f5 : test r12b, bpl ; jne 0x559708 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000588067 : test r12b, bpl ; jne 0x58808e ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000593876 : test r12b, bpl ; jne 0x593889 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000593e06 : test r12b, bpl ; jne 0x593e19 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005bd380 : test r12b, bpl ; jne 0x5bd393 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000005fdb4f : test r12b, bpl ; jne 0x5fdb62 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000062e893 : test r12b, bpl ; jne 0x62e8a6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000063a2fa : test r12b, bpl ; jne 0x63a32d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000647fb5 : test r12b, bpl ; jne 0x647fe2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006481b0 : test r12b, bpl ; jne 0x6481f6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000648337 : test r12b, bpl ; jne 0x64836b ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006484b3 : test r12b, bpl ; jne 0x648503 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000678fa6 : test r12b, bpl ; jne 0x678fb9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000679066 : test r12b, bpl ; jne 0x679079 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000068d996 : test r15, r15 ; mov rax, r13 ; jne 0x68d9be ; call rax
0x00000000005fae59 : test r8b, al ; jne 0x5fae08 ; add rsp, 8 ; ret
0x0000000000408b05 : test rax, rax ; je 0x408b04 ; push rbp ; mov rbp, rsp ; call rax
0x00000000005083d2 : test rax, rax ; je 0x5083c6 ; pop rbx ; ret
0x00000000005085ed : test rax, rax ; je 0x5085e5 ; ret
0x00000000005086e4 : test rax, rax ; je 0x5086f5 ; ret
0x00000000005134e6 : test rax, rax ; je 0x5134f7 ; movzx eax, byte ptr [rax] ; ret
0x00000000005198a4 : test rax, rax ; je 0x5198b7 ; mov rax, qword ptr [rax + 0x28] ; ret
0x00000000005198d4 : test rax, rax ; je 0x5198e7 ; mov rax, qword ptr [rax + 0x20] ; ret
0x0000000000519904 : test rax, rax ; je 0x519917 ; mov rax, qword ptr [rax + 0x28] ; ret
0x0000000000519934 : test rax, rax ; je 0x519947 ; mov rax, qword ptr [rax + 0x20] ; ret
0x0000000000526b4b : test rax, rax ; je 0x526b56 ; ret
0x000000000053da3b : test rax, rax ; je 0x53da61 ; test al, 1 ; jne 0x53da54 ; call rax
0x000000000053fa04 : test rax, rax ; je 0x53fa15 ; mov eax, dword ptr [rax + 0x1c] ; ret
0x000000000053fa34 : test rax, rax ; je 0x53fa45 ; mov eax, dword ptr [rax + 0x1c] ; ret
0x00000000005482e4 : test rax, rax ; je 0x5482f6 ; pop rbx ; ret
0x0000000000548374 : test rax, rax ; je 0x548386 ; pop rbx ; ret
0x000000000054a8b4 : test rax, rax ; je 0x54a8c5 ; mov rax, qword ptr [rax] ; ret
0x000000000054a8d4 : test rax, rax ; je 0x54a8e5 ; mov rax, qword ptr [rax] ; ret
0x0000000000556752 : test rax, rax ; je 0x556746 ; pop rbx ; ret
0x000000000055696d : test rax, rax ; je 0x556965 ; ret
0x0000000000556a64 : test rax, rax ; je 0x556a75 ; ret
0x0000000000581894 : test rax, rax ; je 0x5818a7 ; mov eax, dword ptr [rax] ; ret
0x000000000059091b : test rax, rax ; je 0x590926 ; ret
0x00000000005a4ae0 : test rax, rax ; je 0x5a4b15 ; add rsp, 8 ; ret
0x0000000000627462 : test rax, rax ; je 0x627456 ; pop rbx ; ret
0x000000000062767d : test rax, rax ; je 0x627675 ; ret
0x0000000000627774 : test rax, rax ; je 0x627785 ; ret
0x0000000000669199 : test rax, rax ; je 0x6691a5 ; ret
0x00000000006691c9 : test rax, rax ; je 0x6691d5 ; ret
0x00000000006691e9 : test rax, rax ; je 0x6691f5 ; ret
0x000000000066c0bb : test rax, rax ; je 0x66c0cd ; ret
0x00000000006a46a2 : test rax, rax ; je 0x6a46b5 ; add rsp, 8 ; ret
0x00000000006a17c5 : test rax, rax ; jg 0x6a17d0 ; ret
0x00000000005222b4 : test rax, rax ; jne 0x5222ad ; ret
0x0000000000522384 : test rax, rax ; jne 0x52237d ; ret
0x00000000005272b4 : test rax, rax ; jne 0x5272ad ; ret
0x0000000000527384 : test rax, rax ; jne 0x52737d ; ret
0x0000000000542c84 : test rax, rax ; jne 0x542c7d ; ret
0x0000000000542d54 : test rax, rax ; jne 0x542d4d ; ret
0x00000000005671a4 : test rax, rax ; jne 0x56719d ; ret
0x0000000000567274 : test rax, rax ; jne 0x56726d ; ret
0x0000000000590ef4 : test rax, rax ; jne 0x590eed ; ret
0x0000000000590fc4 : test rax, rax ; jne 0x590fbd ; ret
0x00000000005a97e4 : test rax, rax ; jne 0x5a97dd ; ret
0x00000000005a98b4 : test rax, rax ; jne 0x5a98ad ; ret
0x0000000000669cb5 : test rax, rax ; jne 0x669cc5 ; ret
0x000000000066b78f : test rax, rax ; jne 0x66b785 ; ret
0x000000000068ee6a : test rax, rax ; jne 0x68ee36 ; pop rbx ; ret
0x00000000006a84cc : test rax, rax ; jne 0x6a84c5 ; ret
0x000000000065ced1 : test rax, rax ; js 0x65cef3 ; add rsp, 8 ; ret
0x000000000065d1d1 : test rax, rax ; js 0x65d1f3 ; add rsp, 8 ; ret
0x00000000006a11d5 : test rax, rax ; js 0x6a1209 ; add rsp, 8 ; ret
0x00000000004417f6 : test rax, rax ; setne al ; nop ; leave ; ret
0x000000000040d867 : test rax, rax ; setne al ; nop ; pop rbp ; ret
0x000000000072222f : test rdi, r12 ; ret 0xe0d1
0x0000000000504340 : test rdi, rdi ; je 0x504353 ; movzx eax, byte ptr [rdi + 8] ; ret
0x0000000000658820 : test rdi, rdi ; je 0x65882b ; ret
0x0000000000674760 : test rdi, rdi ; je 0x674771 ; call 0x680a6b
0x000000000068e360 : test rdi, rdi ; je 0x68e373 ; movzx eax, byte ptr [rdi + 0x38] ; ret
0x0000000000691820 : test rdi, rdi ; je 0x691833 ; movzx eax, byte ptr [rdi + 0x38] ; ret
0x00000000006a60b0 : test rdi, rdi ; je 0x6a60bb ; ret
0x00000000006a6820 : test rdi, rdi ; je 0x6a6833 ; movzx eax, byte ptr [rdi + 0x38] ; ret
0x00000000006cb670 : test rdi, rdi ; je 0x6cb683 ; lea rax, qword ptr [rdi + rsi*8] ; ret
0x00000000006cb860 : test rdi, rdi ; je 0x6cb873 ; lea rax, qword ptr [rdi - 8] ; ret
0x00000000006cb870 : test rdi, rdi ; je 0x6cb883 ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000006a0800 : test rdi, rdi ; jne 0x6a0817 ; xor eax, eax ; ret
0x00000000006a17e0 : test rdi, rdi ; js 0x6a17f1 ; mov rax, rdi ; ret
0x000000000054a839 : test rdx, rdx ; cmove rax, rcx ; pop rbx ; ret
0x000000000054ad2c : test rdx, rdx ; cmove rax, rcx ; ret
0x0000000000517d59 : test rdx, rdx ; cmovne rax, rdi ; ret
0x00000000004f7c68 : test rdx, rdx ; je 0x4f7c7b ; mov byte ptr [rdx + 4], 1 ; ret
0x0000000000506b1d : test rdx, rdx ; je 0x506b18 ; mov rax, rdi ; ret
0x0000000000506b6d : test rdx, rdx ; je 0x506b65 ; ret
0x000000000050700d : test rdx, rdx ; je 0x507006 ; pop rbx ; ret
0x000000000050abda : test rdx, rdx ; je 0x50abf1 ; mov rax, rbx ; pop rbx ; ret
0x000000000050ac2a : test rdx, rdx ; je 0x50ac49 ; mov rax, rbx ; pop rbx ; ret
0x00000000005190c4 : test rdx, rdx ; je 0x5190d6 ; pop rbx ; ret
0x00000000005190f4 : test rdx, rdx ; je 0x519106 ; pop rbx ; ret
0x00000000005191a4 : test rdx, rdx ; je 0x5191b6 ; pop rbx ; ret
0x00000000005191d4 : test rdx, rdx ; je 0x5191e6 ; pop rbx ; ret
0x000000000051aef8 : test rdx, rdx ; je 0x51af05 ; ret
0x000000000051af18 : test rdx, rdx ; je 0x51af25 ; ret
0x000000000051af38 : test rdx, rdx ; je 0x51af45 ; ret
0x000000000051af58 : test rdx, rdx ; je 0x51af65 ; ret
0x000000000053f9b4 : test rdx, rdx ; je 0x53f9c6 ; pop rbx ; ret
0x000000000053f9e4 : test rdx, rdx ; je 0x53f9f6 ; pop rbx ; ret
0x000000000053fce8 : test rdx, rdx ; je 0x53fcf5 ; ret
0x000000000053fd08 : test rdx, rdx ; je 0x53fd15 ; ret
0x000000000054a824 : test rdx, rdx ; je 0x54a836 ; pop rbx ; ret
0x000000000054a864 : test rdx, rdx ; je 0x54a876 ; pop rbx ; ret
0x000000000054b708 : test rdx, rdx ; je 0x54b715 ; ret
0x000000000054b728 : test rdx, rdx ; je 0x54b735 ; ret
0x000000000054e129 : test rdx, rdx ; je 0x54e140 ; mov rax, rdi ; ret
0x000000000054e179 : test rdx, rdx ; je 0x54e190 ; mov rax, rdi ; ret
0x0000000000554d5d : test rdx, rdx ; je 0x554d58 ; mov rax, rdi ; ret
0x0000000000554dad : test rdx, rdx ; je 0x554da5 ; ret
0x000000000055528d : test rdx, rdx ; je 0x555286 ; pop rbx ; ret
0x00000000005578da : test rdx, rdx ; je 0x5578f1 ; mov rax, rbx ; pop rbx ; ret
0x000000000055792a : test rdx, rdx ; je 0x557949 ; mov rax, rbx ; pop rbx ; ret
0x00000000005639b4 : test rdx, rdx ; je 0x5639c6 ; pop rbx ; ret
0x00000000005639e4 : test rdx, rdx ; je 0x5639f6 ; pop rbx ; ret
0x0000000000563de8 : test rdx, rdx ; je 0x563df5 ; ret
0x0000000000563e08 : test rdx, rdx ; je 0x563e15 ; ret
0x0000000000584d24 : test rdx, rdx ; je 0x584d36 ; pop rbx ; ret
0x0000000000584d54 : test rdx, rdx ; je 0x584d66 ; pop rbx ; ret
0x0000000000585538 : test rdx, rdx ; je 0x585545 ; ret
0x0000000000585558 : test rdx, rdx ; je 0x585565 ; ret
0x00000000005a72e4 : test rdx, rdx ; je 0x5a72f6 ; pop rbx ; ret
0x00000000005a7314 : test rdx, rdx ; je 0x5a7326 ; pop rbx ; ret
0x00000000005a78d8 : test rdx, rdx ; je 0x5a78e5 ; ret
0x00000000005a78f8 : test rdx, rdx ; je 0x5a7905 ; ret
0x0000000000625a8d : test rdx, rdx ; je 0x625a88 ; mov rax, rdi ; ret
0x0000000000625add : test rdx, rdx ; je 0x625ad5 ; ret
0x0000000000625dcd : test rdx, rdx ; je 0x625dc6 ; pop rbx ; ret
0x000000000062a06a : test rdx, rdx ; je 0x62a081 ; mov rax, rbx ; pop rbx ; ret
0x000000000062a0ba : test rdx, rdx ; je 0x62a0d9 ; mov rax, rbx ; pop rbx ; ret
0x000000000052223f : test rdx, rdx ; jne 0x52223d ; ret
0x000000000052225f : test rdx, rdx ; jne 0x52225d ; ret
0x0000000000522287 : test rdx, rdx ; jne 0x522285 ; ret
0x0000000000522357 : test rdx, rdx ; jne 0x522355 ; ret
0x000000000052723f : test rdx, rdx ; jne 0x52723d ; ret
0x000000000052725f : test rdx, rdx ; jne 0x52725d ; ret
0x0000000000527287 : test rdx, rdx ; jne 0x527285 ; ret
0x0000000000527357 : test rdx, rdx ; jne 0x527355 ; ret
0x000000000052a49c : test rdx, rdx ; jne 0x52a48d ; ret
0x0000000000542a06 : test rdx, rdx ; jne 0x5429f2 ; ret
0x0000000000542c0f : test rdx, rdx ; jne 0x542c0d ; ret
0x0000000000542c2f : test rdx, rdx ; jne 0x542c2d ; ret
0x0000000000542c57 : test rdx, rdx ; jne 0x542c55 ; ret
0x0000000000542d27 : test rdx, rdx ; jne 0x542d25 ; ret
0x0000000000544b5b : test rdx, rdx ; jne 0x544b4d ; ret
0x000000000056712f : test rdx, rdx ; jne 0x56712d ; ret
0x000000000056714f : test rdx, rdx ; jne 0x56714d ; ret
0x0000000000567177 : test rdx, rdx ; jne 0x567175 ; ret
0x0000000000567247 : test rdx, rdx ; jne 0x567245 ; ret
0x0000000000590e7f : test rdx, rdx ; jne 0x590e7d ; ret
0x0000000000590e9f : test rdx, rdx ; jne 0x590e9d ; ret
0x0000000000590ec7 : test rdx, rdx ; jne 0x590ec5 ; ret
0x0000000000590f97 : test rdx, rdx ; jne 0x590f95 ; ret
0x00000000005a5576 : test rdx, rdx ; jne 0x5a5562 ; ret
0x00000000005a976f : test rdx, rdx ; jne 0x5a976d ; ret
0x00000000005a978f : test rdx, rdx ; jne 0x5a978d ; ret
0x00000000005a97b7 : test rdx, rdx ; jne 0x5a97b5 ; ret
0x00000000005a9887 : test rdx, rdx ; jne 0x5a9885 ; ret
0x000000000053ade8 : test rdx, rdx ; sete al ; ret
0x000000000052b100 : test rsi, rsi ; je 0x52b113 ; mov rax, qword ptr [rsi + 0x28] ; ret
0x000000000052b1f0 : test rsi, rsi ; je 0x52b203 ; mov rax, qword ptr [rsi + 0x20] ; ret
0x0000000000544e80 : test rsi, rsi ; je 0x544e91 ; mov eax, dword ptr [rsi + 0x1c] ; ret
0x000000000054db20 : test rsi, rsi ; je 0x54db31 ; mov rax, qword ptr [rsi] ; ret
0x000000000066042f : test rsi, rsi ; je 0x66044b ; mov rdi, qword ptr [rdi + 0x50] ; call rdx
0x00000000006cb680 : test rsi, rsi ; je 0x6cb693 ; lea rax, qword ptr [rsi + rdi*8] ; ret
0x00000000006a1784 : test rsi, rsi ; jle 0x6a17a9 ; add rsp, 8 ; ret
0x00000000006a3310 : test rsi, rsi ; jne 0x6a3325 ; ret
0x000000000050aab0 : test rsi, rsi ; setne al ; ret
0x00000000005524b7 : test sil, 1 ; jne 0x552517 ; call rsi
0x0000000000688cc8 : test sil, sil ; je 0x688c9d ; ret
0x00000000006a0ef6 : test sil, sil ; je 0x6a0f19 ; add rsp, 8 ; ret
0x00000000006a4fb5 : ucomiss xmm0, xmm1 ; jbe 0x6a4fc9 ; movapd xmm0, xmm2 ; ret
0x00000000006a51ae : ucomiss xmm2, xmm1 ; jbe 0x6a51c9 ; add rsp, 0x18 ; ret
0x00000000006a523e : ucomiss xmm2, xmm1 ; jbe 0x6a5259 ; add rsp, 0x18 ; ret
0x00000000006a52d2 : ucomiss xmm2, xmm1 ; jbe 0x6a531a ; add rsp, 0x18 ; ret
0x0000000000683729 : ucomiss xmm7, xmm0 ; ja 0x683759 ; add rsp, 0x28 ; ret
0x00000000007eb97f : unpckhps xmm0, xmmword ptr [rbx + 0xceb4c0f] ; add bh, dl ; syscall
0x00000000005d14cd : unpcklps xmm0, xmmword ptr [rbx] ; call rax
0x00000000004fe4de : vandnps ymm9, ymm1, ymmword ptr [rax - 0x77] ; ret
0x000000000045ea17 : vcvtss2sd xmm8, xmm8, dword ptr [rax] ; call rax
0x00000000007c6510 : verr cx ; syscall
0x00000000007f8a0a : verr dx ; syscall
0x00000000007e6089 : verr word ptr [rbp + 0xfc7060f] ; add al, al ; syscall
0x00000000007e1110 : verr word ptr [rcx + 0xfc1050f] ; add bl, cl ; syscall
0x00000000007efcf5 : verr word ptr [rdx + 0x1299050f] ; add bh, cl ; syscall
0x000000000058c987 : verw bx ; mov byte ptr [rax - 0x77], cl ; ret
0x000000000058be27 : verw bx ; mov dword ptr [rax - 0x77], ecx ; ret
0x00000000007f4d73 : verw bx ; syscall
0x000000000058cd7d : verw bx ; test dword ptr [rax - 0x77], ecx ; ret
0x000000000058f3a0 : verw bx ; xchg byte ptr [rax - 0x77], cl ; ret
0x0000000000580b7b : verw cx ; ret 0xfff7
0x00000000007e6657 : verw cx ; syscall
0x000000000058cd7c : verw r11w ; test dword ptr [rax - 0x77], ecx ; ret
0x00000000007cdaa2 : verw sp ; syscall
0x00000000007d321c : verw word ptr [rdi + 0x9f8050f] ; add bl, al ; syscall
0x00000000007d738b : verw word ptr [rdx + 0xfe1050f] ; add ch, al ; syscall
0x0000000000411c1f : vmaxps ymm8, ymm14, ymmword ptr [rax] ; call rax
0x000000000053a38a : vminps ymm9, ymm1, ymmword ptr [rax - 0x77] ; ret
0x00000000004fcb7d : vmulps ymm9, ymm1, ymmword ptr [rax - 0x77] ; ret
0x0000000000510d3b : vpaddsw ymm1, ymm15, ymmword ptr [rdi] ; sahf ; ret 0xdd39
0x000000000060f75f : vpand xmm13, xmm9, xmm0 ; retf
0x000000000057c560 : vpand xmm13, xmm9, xmm0 ; retf 0x104f
0x000000000059e6b2 : vpand ymm1, ymm15, ymmword ptr [rdi] ; sahf ; ret 0x840
0x00000000007f3f70 : vpavgb ymm8, ymm15, ymm12 ; add dword ptr [rax], eax ; ret
0x0000000000573ab2 : vpavgw ymm11, ymm1, ymmword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000057e977 : vpmaxub ymm11, ymm1, ymmword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000060baec : vpminsw xmm12, xmm14, xmmword ptr [rcx] ; ret 0xd589
0x00000000005013fb : vpor xmm9, xmm8, xmmword ptr [rdi] ; sahf ; ret 0xdb85
0x00000000006ba0df : vpsadbw xmm9, xmm9, xmmword ptr [rbp + 1] ; ret
0x00000000005a2fb9 : vpsadbw ymm1, ymm15, ymmword ptr [rdi] ; sahf ; ret 0x840
0x000000000062b89e : vpshufb ymm9, ymm15, ymmword ptr [r8 - 0x77] ; ret
0x0000000000456c11 : vunpcklps xmm13, xmm2, xmmword ptr [rsi] ; jmp rax
0x0000000000636e2e : vunpcklps ymm9, ymm1, ymmword ptr [rax - 0x77] ; ret
0x00000000005235a1 : wait ; adc dword ptr [rbx], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004dc16a : wait ; adc eax, 0x8fbf0000 ; ret 0x6e
0x00000000007e68d5 : wait ; adc edx, dword ptr [rsi] ; add byte ptr [rax], al ; retf 0x513
0x0000000000775235 : wait ; add al, byte ptr [rax] ; call 0x11772e11
0x0000000000755225 : wait ; add byte ptr [rax], al ; mov dl, 0x6b ; iretd ; call qword ptr [rdi]
0x000000000075529d : wait ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; insb byte ptr [rdi], dx ; iretd ; call rsp
0x0000000000734989 : wait ; add dword ptr [rax], eax ; pop rsi ; adc esi, ecx ; call rax
0x0000000000734999 : wait ; add dword ptr [rax], eax ; xchg eax, esp ; adc esi, ecx ; call qword ptr [rax]
0x00000000007e8bd2 : wait ; add dword ptr [rdx], eax ; ret
0x00000000007f8fa0 : wait ; add dword ptr [rsi], edx ; add byte ptr [rax], al ; ret
0x00000000007d8f09 : wait ; add eax, 0x504bb05 ; ret
0x0000000000741749 : wait ; add eax, 0xe73e7000 ; call rax
0x00000000007a5265 : wait ; add eax, 0xeb46c800 ; jmp qword ptr [rax]
0x00000000007e6cef : wait ; and byte ptr [rbx], al ; retf
0x00000000004babae : wait ; and dword ptr [rax], eax ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000054d9b3 : wait ; and dword ptr [rbx], edx ; add bl, ch ; test dword ptr [rax - 0x77], ecx ; ret
0x0000000000733a20 : wait ; cld ; stc ; jmp rsp
0x0000000000678d48 : wait ; cmp byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x000000000059be11 : wait ; cmp ecx, dword ptr [rdi] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000414b41 : wait ; fstp qword ptr [rsi] ; call rax
0x00000000005bc278 : wait ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000007ade61 : wait ; in eax, dx ; call qword ptr [rdx]
0x0000000000577331 : wait ; jb 0x57734e ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000466931 : wait ; jl 0x46695f ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000577531 : wait ; jo 0x57754e ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000605d5b : wait ; mov ch, 7 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000538ba1 : wait ; mov ebx, 0x63480019 ; ret
0x00000000007d0cd3 : wait ; or al, byte ptr [rax] ; add byte ptr [rax], al ; ror dword ptr [rdx], 5 ; ret
0x000000000063ab53 : wait ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007c7265 : wait ; or eax, 0x5029c00 ; stc ; or al, byte ptr [rbx] ; ret 0xaf02
0x00000000007c72ba : wait ; or eax, 0x50c9600 ; ret 0xc
0x000000000050a4ff : wait ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000004f3723 : wait ; outsb dx, byte ptr [rsi] ; add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000005e90c7 : wait ; push 9 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005fbe7c : wait ; ret 0x440f
0x00000000006820d2 : wait ; ret 0x450f
0x0000000000722800 : wait ; ret 0xecb0
0x0000000000682dd4 : wait ; ror byte ptr [rdi], 0x45 ; ret 0xc084
0x000000000045b52d : wait ; sar bh, 0xff ; leave ; ret
0x00000000006a4c87 : wait ; sar byte ptr [rdx], 0xf ; ret 0xf183
0x00000000007dcb97 : wait ; syscall
0x0000000000413ae5 : wait ; test bh, bh ; dec ecx ; ret
0x0000000000619948 : wbinvd ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007cd452 : wbinvd ; sahf ; syscall
0x000000000040c150 : xadd dword ptr [rdx], eax ; add eax, ecx ; test eax, eax ; nop ; pop rbp ; ret
0x00000000006bf545 : xchg ah, bh ; mov qword ptr [rdi + 0x40], rax ; ret
0x000000000073571c : xchg ah, bl ; iretd ; jmp qword ptr [rax]
0x00000000007471e5 : xchg ah, dh ; jmp qword ptr [rax]
0x0000000000598471 : xchg al, ch ; leave ; ret 0x13
0x000000000079bd51 : xchg bh, ah ; call rsp
0x000000000059a27e : xchg bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000414274 : xchg bh, bh ; dec ecx ; ret
0x00000000007b6631 : xchg bh, ch ; call qword ptr [rbx]
0x00000000007b6601 : xchg bh, ch ; call qword ptr [rdi]
0x00000000007b6619 : xchg bh, ch ; jmp qword ptr [rbx]
0x000000000073545d : xchg bh, cl ; call rax
0x0000000000749645 : xchg bh, dh ; jmp qword ptr [rax]
0x0000000000739065 : xchg bh, dl ; call qword ptr [rax]
0x000000000074350d : xchg bl, ch ; jmp rax
0x00000000006d02ed : xchg bl, dl ; ljmp ptr [rcx] ; ret 0xc283
0x00000000005abadc : xchg byte ptr [rax + 0xd], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007d4cb8 : xchg byte ptr [rax + rax], al ; retf
0x0000000000793dc5 : xchg byte ptr [rax + rax], al ; sbb byte ptr [rcx - 0x1c], bl ; jmp qword ptr [rbx]
0x000000000063a203 : xchg byte ptr [rax + rax], bh ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000005479a6 : xchg byte ptr [rax - 0x77], cl ; ret
0x000000000054c041 : xchg byte ptr [rax], bl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007cb5dd : xchg byte ptr [rax], dl ; add eax, 0xab0512d8 ; adc byte ptr [rsi], cl ; ret
0x00000000004ff7e6 : xchg byte ptr [rbp - 0x76b7ffe8], dh ; ret
0x000000000055a1b6 : xchg byte ptr [rbp - 0x76b7ffe9], ah ; ret
0x0000000000679570 : xchg byte ptr [rbp], bh ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042a1fe : xchg byte ptr [rbp], bl ; call rax
0x000000000061afe6 : xchg byte ptr [rbx + 0xa], ah ; add cl, cl ; ret
0x0000000000448046 : xchg byte ptr [rbx], ah ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004861bc : xchg byte ptr [rbx], ah ; add cl, cl ; ret
0x00000000005c843d : xchg byte ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004ca221 : xchg byte ptr [rbx], dl ; call rax
0x00000000005ad5b6 : xchg byte ptr [rcx + 0x12], dh ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004fa446 : xchg byte ptr [rcx + 0x1c], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042d246 : xchg byte ptr [rcx + rbp], dh ; add cl, cl ; ret
0x000000000062bdb6 : xchg byte ptr [rcx - 0x76b7fff6], cl ; ret
0x00000000006a1ab7 : xchg byte ptr [rcx - 0x7d], cl ; ret 0x4401
0x0000000000468545 : xchg byte ptr [rcx], ah ; add byte ptr [rcx], bh ; ret 0x167c
0x00000000005e80c8 : xchg byte ptr [rcx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000060c3b2 : xchg byte ptr [rdi + 7], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000796920 : xchg byte ptr [rdi - 0x1b], al ; call rsp
0x00000000006084f9 : xchg byte ptr [rdi], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007474e1 : xchg byte ptr [rdi], al ; add byte ptr [rax], bh ; retf
0x00000000006135ea : xchg byte ptr [rdi], ch ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004839b4 : xchg byte ptr [rdx - 0x76b80000], bl ; ret 0x894c
0x0000000000662989 : xchg byte ptr [rdx - 0x76fffff6], bh ; ret 0xe283
0x00000000004961b3 : xchg byte ptr [rdx], ah ; add cl, cl ; ret
0x00000000007eed0b : xchg byte ptr [rdx], al ; add dword ptr [rbp + 1], esp ; ret 0x1e01
0x00000000005da2bc : xchg byte ptr [rdx], al ; call rax
0x00000000007f22a9 : xchg byte ptr [rdx], bh ; add ebp, dword ptr [rax + 0x22] ; ret
0x00000000007c6a0f : xchg byte ptr [rdx], bl ; add ah, dl ; syscall
0x00000000007c84a8 : xchg byte ptr [rdx], ch ; add esp, dword ptr [rcx + rbp + 0x329d305] ; ret
0x000000000062c0ab : xchg byte ptr [rdx], cl ; add byte ptr [rax - 0x73], cl ; jnp 0x62c0cb ; call 0x628b79
0x00000000005672df : xchg byte ptr [rdx], dl ; add byte ptr [rax + 0x29], cl ; ret
0x00000000005ac0b4 : xchg byte ptr [rdx], dl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000062803d : xchg byte ptr [rip - 0x157cb800], al ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000007412d1 : xchg byte ptr [rip - 0x191f3000], al ; jmp qword ptr [rax]
0x00000000007412c9 : xchg byte ptr [rip - 0x19226000], al ; call rax
0x00000000004d805e : xchg byte ptr [rip - 0x70410000], cl ; ret 0x6e
0x00000000006a7cc8 : xchg byte ptr [rsi - 3], bh ; dec dword ptr [rax - 0x77] ; out dx, eax ; call 0x6d4749
0x00000000007ce778 : xchg byte ptr [rsi], al ; add al, al ; add eax, 0x5f405 ; retf 0x505
0x00000000007444a1 : xchg byte ptr [rsi], al ; add byte ptr [rax + 0x19], dl ; out dx, al ; jmp qword ptr [rax]
0x00000000005a72b6 : xchg byte ptr [rsi], cl ; add byte ptr [rax + 0x29], cl ; ret
0x00000000005d5f02 : xchg byte ptr [rsi], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000052731f : xchg byte ptr [rsi], dl ; add byte ptr [rax + 0x29], cl ; ret
0x00000000007c6a0e : xchg byte ptr fs:[rdx], bl ; add ah, dl ; syscall
0x000000000077ceb1 : xchg ch, bl ; call qword ptr [rbx]
0x000000000073582c : xchg ch, ch ; iretd ; jmp rax
0x0000000000680f26 : xchg cl, bl ; add eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000739064 : xchg dil, dl ; call qword ptr [rax]
0x00000000007474dc : xchg dl, cl ; hlt ; ljmp ptr [rax + 0x38000786] ; retf
0x000000000066b331 : xchg dword ptr [rax + 0x100000c], edx ; ret
0x00000000005af16b : xchg dword ptr [rax + 0xa], ebx ; add byte ptr [rax], al ; ret
0x000000000063e0eb : xchg dword ptr [rax + 0xa], ecx ; add byte ptr [rax], al ; ret
0x00000000005b01fa : xchg dword ptr [rax + 1], ebx ; add byte ptr [rax], al ; ret
0x00000000005af76a : xchg dword ptr [rax + 4], ebx ; add byte ptr [rax], al ; ret
0x00000000005af1fb : xchg dword ptr [rax + 7], ebx ; add byte ptr [rax], al ; ret
0x00000000005af6ab : xchg dword ptr [rax + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000005af70b : xchg dword ptr [rax + 8], edi ; add byte ptr [rax], al ; ret
0x0000000000793ef5 : xchg dword ptr [rax + rax], eax ; sbb byte ptr [rbp - 0x1c], bl ; call rsp
0x000000000040bf79 : xchg dword ptr [rax + rax], ebp ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000063a153 : xchg dword ptr [rax + rax], edi ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000403fdb : xchg dword ptr [rax - 0x77], ecx ; ret
0x000000000063eeb4 : xchg dword ptr [rax - 0x7bfffff7], esi ; ror byte ptr [rdi], 0x85 ; retf 0x51
0x00000000005f12ff : xchg dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000753e95 : xchg dword ptr [rax], eax ; add byte ptr [rdx], dl ; in eax, -0x32 ; call rsp
0x0000000000753ef5 : xchg dword ptr [rax], eax ; add byte ptr [rsi - 0x32], dh ; call rsp
0x00000000006784c5 : xchg dword ptr [rax], eax ; imul esi, dword ptr [rdx], 0xc0950f06 ; ret
0x00000000006783e5 : xchg dword ptr [rax], eax ; imul esi, dword ptr [rdx], 0xc0950f26 ; ret
0x0000000000678445 : xchg dword ptr [rax], eax ; imul esi, dword ptr [rdx], 0xc0950f66 ; ret
0x000000000066bbd8 : xchg dword ptr [rax], ebx ; add eax, 0x49800000 ; jb 0x66bbea ; ret
0x000000000047a1a9 : xchg dword ptr [rax], ebx ; call rax
0x0000000000633d75 : xchg dword ptr [rax], ebx ; or al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret 0x8f0f
0x000000000074ace9 : xchg dword ptr [rax], ecx ; add byte ptr [rax - 0x7e], ah ; stc ; jmp rax
0x000000000064cfe1 : xchg dword ptr [rax], ecx ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000004809e1 : xchg dword ptr [rax], esp ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x8d48
0x00000000005058e9 : xchg dword ptr [rax], esp ; and byte ptr [rax], al ; add byte ptr [rdi + 8], bh ; xor eax, eax ; ret
0x000000000057d00f : xchg dword ptr [rbp - 0x77000000], edi ; ret 0x8944
0x000000000042a18e : xchg dword ptr [rbp], ebx ; call rax
0x000000000058f3b5 : xchg dword ptr [rbx + 0x14], edx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e9d05 : xchg dword ptr [rbx], ecx ; add byte ptr [rax + rcx + 0x30a9e05], ah ; retf -0x62f8
0x00000000005c8490 : xchg dword ptr [rbx], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054736b : xchg dword ptr [rbx], edx ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf 0x18d3
0x00000000006735db : xchg dword ptr [rcx + 0x100000c], ecx ; ret
0x000000000072193f : xchg dword ptr [rcx + 0x12], edx ; ret 0x104a
0x00000000006d1f01 : xchg dword ptr [rcx + rax - 2], ecx ; jmp rsi
0x00000000006beb38 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000006cbbf1 : xchg dword ptr [rcx + rax], esp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000508db5 : xchg dword ptr [rcx - 0x76b7ffe4], edi ; ret
0x00000000007f7096 : xchg dword ptr [rcx], eax ; ret
0x000000000059a36f : xchg dword ptr [rdi + 0xe], ebp ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000665ea3 : xchg dword ptr [rdi + rdx], esp ; add byte ptr [rax], al ; pop r13 ; pop r14 ; ret
0x0000000000587f59 : xchg dword ptr [rdi - 0x76b7fff1], eax ; ret
0x00000000004fa410 : xchg dword ptr [rdi - 0x76ffffff], eax ; shr dword ptr [rcx], cl ; ret
0x0000000000747521 : xchg dword ptr [rdi], eax ; add byte ptr [rsp + rcx*8 - 0xc], al ; call rax
0x0000000000747509 : xchg dword ptr [rdi], eax ; add dh, al ; retf
0x0000000000747511 : xchg dword ptr [rdi], eax ; add dl, bh ; retf
0x0000000000587f5a : xchg dword ptr [rdi], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007d438e : xchg dword ptr [rdi], ecx ; add eax, 0x9e030bfc ; syscall
0x0000000000428101 : xchg dword ptr [rdi], esp ; add byte ptr [rax - 0x77], cl ; ret 0x858b
0x00000000007fa4f2 : xchg dword ptr [rdx - 0x2a], edi ; add edi, eax ; js 0x7fa505 ; ret 0xd37b
0x00000000005da16d : xchg dword ptr [rdx], eax ; call rax
0x00000000005e2660 : xchg dword ptr [rdx], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000617f09 : xchg dword ptr [rdx], ecx ; add cl, cl ; ret
0x00000000007f7d95 : xchg dword ptr [rdx], ecx ; add eax, 0xf9050dae ; syscall
0x000000000056720f : xchg dword ptr [rdx], edx ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000495e29 : xchg dword ptr [rdx], esp ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000541e4e : xchg dword ptr [rip + 0x39480000], eax ; ret 0x10bf
0x00000000007a3ea5 : xchg dword ptr [rip - 0x39c48e00], eax ; call qword ptr [rdx]
0x00000000007a3ebd : xchg dword ptr [rip - 0x39c49400], eax ; call qword ptr [rdx]
0x00000000004c4b7a : xchg dword ptr [rip - 0x70410000], eax ; ret 0x6e
0x00000000004dbeea : xchg dword ptr [rip - 0x70410000], edx ; ret 0x6e
0x000000000069cf8f : xchg dword ptr [rip - 0x76bb0b2b], ecx ; ret 0x8941
0x00000000004b8859 : xchg dword ptr [rsi + 0x1c], edi ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005e8255 : xchg dword ptr [rsi - 0x2f00ffbf], esp ; leave ; ret
0x00000000004f98b5 : xchg dword ptr [rsi - 0x76b7ffe3], ebp ; ret
0x00000000007b3e55 : xchg dword ptr [rsi], eax ; add al, ch ; cmp edi, ebp ; call rsi
0x0000000000539017 : xchg dword ptr [rsi], ebp ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000005a71d2 : xchg dword ptr [rsi], ecx ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000538a14 : xchg dword ptr [rsi], edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000542133 : xchg dword ptr [rsi], edx ; add byte ptr [rax - 0x77], cl ; ret 0xc748
0x000000000049a132 : xchg dword ptr [rsi], edx ; call rax
0x0000000000417392 : xchg dword ptr [rsi], esp ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006735c0 : xchg dword ptr [rsp + rcx - 0x3f7c0000], eax ; jne 0x6735d9 ; ret
0x00000000007c47eb : xchg dword ptr [rsp + rdi*2], eax ; out dx, al ; add eax, 0x5059e00 ; retf
0x00000000004dc090 : xchg eax, ebp ; adc eax, 0x8fbf0000 ; ret 0x6e
0x000000000045f607 : xchg eax, ebp ; adc esp, dword ptr [rsi] ; add cl, cl ; ret
0x00000000007e5c07 : xchg eax, ebp ; add al, 5 ; ret
0x000000000057f623 : xchg eax, ebp ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; retf
0x0000000000774cc5 : xchg eax, ebp ; add al, byte ptr [rax] ; mov bl, 0xdb ; jmp qword ptr [rax]
0x0000000000774cdd : xchg eax, ebp ; add al, byte ptr [rax] ; push rax ; mov bl, 0xdb ; call qword ptr [rax]
0x0000000000737e01 : xchg eax, ebp ; add al, byte ptr [rax] ; ret 0xd447
0x0000000000737df1 : xchg eax, ebp ; add al, byte ptr [rax] ; retf -0x2bf9
0x00000000007f3b47 : xchg eax, ebp ; add dword ptr [rax], eax ; retf
0x00000000007f2779 : xchg eax, ebp ; add eax, 0x5059a05 ; retf 0x505
0x00000000007415f9 : xchg eax, ebp ; add eax, 0xe7343000 ; jmp rax
0x0000000000741609 : xchg eax, ebp ; add eax, 0xe7348000 ; call qword ptr [rax]
0x00000000007a4cb5 : xchg eax, ebp ; add eax, 0xeb3b3800 ; jmp qword ptr [rcx]
0x0000000000561dd1 : xchg eax, ebp ; add eax, dword ptr [rax] ; add byte ptr [rbp + 0x144034e], cl ; retf -0x97b
0x0000000000450847 : xchg eax, ebp ; and byte ptr [rbx], bl ; call rax
0x0000000000746a45 : xchg eax, ebp ; call qword ptr [rax]
0x00000000004e8eb4 : xchg eax, ebp ; cmp bl, 0xff ; dec dword ptr [rcx - 0x77] ; retf -0x76b8
0x00000000004c4b4f : xchg eax, ebp ; fst qword ptr [rbx] ; call rax
0x0000000000743cfd : xchg eax, ebp ; in al, dx ; jmp qword ptr [rax]
0x00000000005984b9 : xchg eax, ebp ; jbe 0x5984d3 ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x6d4749
0x00000000004092c7 : xchg eax, ebp ; jmp qword ptr [rsi]
0x00000000005e2090 : xchg eax, ebp ; leave ; ret
0x0000000000645f61 : xchg eax, ebp ; mov bl, 3 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000063babb : xchg eax, ebp ; mov eax, 0xe8fffffd ; retf
0x000000000061b37b : xchg eax, ebp ; movsxd rdi, edi ; dec ecx ; ret
0x00000000005c7ae8 : xchg eax, ebp ; or byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000004f7671 : xchg eax, ebp ; or byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000461f4f : xchg eax, ebp ; or dword ptr [rdx], ebx ; call rax
0x0000000000744b45 : xchg eax, ebp ; out dx, al ; jmp rax
0x00000000005d3947 : xchg eax, ebp ; out dx, eax ; add dil, dil ; ror cl, 1 ; ret
0x00000000004f36d3 : xchg eax, ebp ; outsb dx, byte ptr [rsi] ; add al, ch ; cmc ; ret
0x00000000005c78c0 : xchg eax, ebp ; push -0x17000002 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000000004b938e : xchg eax, ebp ; push rsp ; add bh, bh ; ror cl, 1 ; ret
0x000000000050276c : xchg eax, ebp ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004042cd : xchg eax, ebp ; ret
0x0000000000515299 : xchg eax, ebp ; ret 0x16
0x000000000050d390 : xchg eax, ebp ; ret 0x1ae9
0x0000000000691dc6 : xchg eax, ebp ; ret 0x3945
0x0000000000522af5 : xchg eax, ebp ; ret 0x3948
0x000000000054e8bd : xchg eax, ebp ; ret 0x3949
0x000000000054e8db : xchg eax, ebp ; ret 0x394d
0x000000000054dfe1 : xchg eax, ebp ; ret 0x5441
0x000000000066373a : xchg eax, ebp ; ret 0x7983
0x00000000006bd39c : xchg eax, ebp ; ret 0x8040
0x00000000006b9e2e : xchg eax, ebp ; ret 0x8041
0x0000000000651c63 : xchg eax, ebp ; ret 0x8348
0x000000000054e70f : xchg eax, ebp ; ret 0x8441
0x0000000000651857 : xchg eax, ebp ; ret 0x8539
0x000000000051bf42 : xchg eax, ebp ; ret 0x8548
0x00000000005a00f2 : xchg eax, ebp ; ret 0x8953
0x00000000006a2d17 : xchg eax, ebp ; ret 0xc085
0x00000000005370f1 : xchg eax, ebp ; ret 0xca21
0x0000000000632384 : xchg eax, ebp ; ret 0xd084
0x000000000054dc28 : xchg eax, ebp ; ret 0xd184
0x00000000006065f1 : xchg eax, ebp ; ret 0xe883
0x0000000000603060 : xchg eax, ebp ; ret 0xed85
0x00000000006b5299 : xchg eax, ebp ; ret 0xfffc
0x00000000004c4999 : xchg eax, ebp ; retf
0x0000000000514a99 : xchg eax, ebp ; retf 0x16
0x00000000005fc5f7 : xchg eax, ebp ; retf 0xa
0x000000000060b327 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or bl, al ; nop ; ret
0x000000000051b48d : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000522b31 : xchg eax, ebp ; ror byte ptr [rcx], 0xd0 ; xor eax, 1 ; ret
0x000000000054cec4 : xchg eax, ebp ; ror dword ptr [rcx - 0x3b7cb738], 8 ; ret
0x000000000067f971 : xchg eax, ebp ; sar byte ptr [rip + 0xc7], 0xf ; sahf ; ret 0x8441
0x0000000000483a17 : xchg eax, ebp ; scasb al, byte ptr [rdi] ; and eax, dword ptr [rax] ; leave ; ret
0x000000000074aedd : xchg eax, ebp ; stc ; call qword ptr [rax]
0x00000000006a710c : xchg eax, ebp ; std ; call qword ptr [rax - 0x57c3dd7]
0x00000000004b7e47 : xchg eax, ebp ; stosb byte ptr [rdi], al ; push rsp ; add bh, bh ; ror cl, 1 ; ret
0x0000000000534813 : xchg eax, ebp ; sub esi, dword ptr [rcx + 0x148d231] ; ret
0x00000000007dd9b6 : xchg eax, ebp ; syscall
0x000000000061b137 : xchg eax, ebp ; xor al, 0xa ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000007cc597 : xchg eax, ebx ; adc byte ptr [rsi], al ; ret 0x10
0x000000000057e8cf : xchg eax, ebx ; adc dl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005942a9 : xchg eax, ebx ; add al, 0x14 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046524a : xchg eax, ebx ; add byte ptr [r8 - 0x77], cl ; ret 0xbe
0x00000000004551dc : xchg eax, ebx ; add byte ptr es:[rax - 0x77], cl ; ret 0x8948
0x00000000007db449 : xchg eax, ebx ; add dword ptr [rax], eax ; and byte ptr [rax], al ; add byte ptr [rax + 0x30], bl ; retf
0x00000000007fa48b : xchg eax, ebx ; add dword ptr [rax], eax ; retf
0x00000000007d5c6a : xchg eax, ebx ; add eax, 0x105f321 ; ret 0x1805
0x00000000007415a9 : xchg eax, ebx ; add eax, 0xe7227000 ; jmp qword ptr [rax]
0x00000000007a4a75 : xchg eax, ebx ; add eax, 0xea9b1800 ; call qword ptr [rcx]
0x00000000007a4afd : xchg eax, ebx ; add eax, 0xeabe7000 ; jmp rax
0x0000000000784aa5 : xchg eax, ebx ; add eax, dword ptr [rax] ; call 0x14782a80
0x000000000073b0c1 : xchg eax, ebx ; add eax, dword ptr [rax] ; jnp 0x73b0aa ; call rax
0x0000000000722cfc : xchg eax, ebx ; and al, 0xfd ; jb 0x722d0a ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x376a
0x000000000057bb02 : xchg eax, ebx ; call 0xffffffffc3e1040c
0x00000000006417af : xchg eax, ebx ; call 0xffffffffc3ed60bb
0x000000000052ee49 : xchg eax, ebx ; cmp cl, byte ptr [rbp] ; jmp rax
0x0000000000797971 : xchg eax, ebx ; in eax, -1 ; retf 1
0x00000000006030d9 : xchg eax, ebx ; jl 0x6030ea ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000671bf9 : xchg eax, ebx ; jne 0x671c01 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000546a39 : xchg eax, ebx ; jnp 0x546a59 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006c3ca9 : xchg eax, ebx ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000530539 : xchg eax, ebx ; loopne 0x53055a ; add byte ptr [rax - 0x77], cl ; ret
0x000000000064272b : xchg eax, ebx ; mov cl, 0xe7 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000679208 : xchg eax, ebx ; nop dword ptr [rax] ; ret
0x00000000005650a9 : xchg eax, ebx ; not byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007e615e : xchg eax, ebx ; or al, 0x19 ; add byte ptr [rax], al ; ret
0x000000000074afe9 : xchg eax, ebx ; or byte ptr [rax], al ; jo 0x74af92 ; stc ; jmp qword ptr [rax]
0x0000000000672ac2 : xchg eax, ebx ; or byte ptr [rip + 0x9480000], al ; ret 0x840f
0x00000000007e5dd4 : xchg eax, ebx ; or dword ptr [rax], eax ; retf 0x506
0x00000000007f699a : xchg eax, ebx ; or qword ptr [r12 + r9 + 0xb4af61e], rsp ; ret 0x60c
0x0000000000496fc2 : xchg eax, ebx ; outsb dx, byte ptr [rsi] ; add bh, bh ; loopne 0x49702b ; ret
0x000000000063fcaf : xchg eax, ebx ; pop rsi ; call 0xffffffffc3ed45bb
0x00000000004b5659 : xchg eax, ebx ; ret
0x000000000063c581 : xchg eax, ebx ; ret 0x3c
0x00000000005fbe8a : xchg eax, ebx ; ret 0xca09
0x00000000004a2fb9 : xchg eax, ebx ; retf
0x00000000006d6b0e : xchg eax, ebx ; retf 0x69bc
0x00000000007cc4b6 : xchg eax, ebx ; sbb al, byte ptr [rax] ; retf 0x50a
0x000000000049d4b9 : xchg eax, ebx ; shl dword ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007f80d2 : xchg eax, ebx ; sldt word ptr [rdi + rcx - 0x73fffffb] ; syscall
0x000000000048fe49 : xchg eax, ebx ; sub dl, byte ptr [rdi] ; call rax
0x00000000007c6736 : xchg eax, ebx ; syscall
0x0000000000496139 : xchg eax, ebx ; test byte ptr [rdx], ah ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000739095 : xchg eax, ebx ; xlatb ; call qword ptr [rax]
0x00000000007d014b : xchg eax, ecx ; adc al, byte ptr [rax] ; ret
0x000000000045184b : xchg eax, ecx ; adc byte ptr [rbx], bl ; call rax
0x00000000006544c3 : xchg eax, ecx ; adc dword ptr [rax], eax ; add byte ptr [rsi + 1], bh ; call rax
0x0000000000502157 : xchg eax, ecx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x4848
0x00000000007c6d9c : xchg eax, ecx ; add al, byte ptr [rbx] ; add byte ptr [rcx], 0x3b ; add byte ptr [rax], al ; retf
0x0000000000662115 : xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf -0x9cf
0x000000000054a478 : xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1a], al ; call rax
0x00000000006c52b3 : xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; fld qword ptr [rcx] ; retf
0x0000000000754885 : xchg eax, ecx ; add byte ptr [rax], al ; retf -0x30d2
0x00000000005f97a5 : xchg eax, ecx ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000007d4ef3 : xchg eax, ecx ; add dh, byte ptr [rcx] ; add byte ptr [rax], al ; ret 0x2a02
0x00000000006115b1 : xchg eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0x00000000004326db : xchg eax, ecx ; add dword ptr [rbp], ebx ; call rax
0x00000000007f13ba : xchg eax, ecx ; add eax, 0x5ae1b ; retf 0x505
0x00000000004c52f0 : xchg eax, ecx ; add eax, 0x8fbf0000 ; ret 0x6e
0x00000000007414e1 : xchg eax, ecx ; add eax, 0xe714f000 ; jmp qword ptr [rax]
0x0000000000741521 : xchg eax, ecx ; add eax, 0xe715f000 ; jmp rax
0x0000000000741531 : xchg eax, ecx ; add eax, 0xe7163000 ; call qword ptr [rax]
0x00000000007d5b92 : xchg eax, ecx ; add eax, dword ptr [rax] ; add ch, byte ptr [rbx] ; ret 3
0x000000000073b041 : xchg eax, ecx ; add eax, dword ptr [rax] ; and byte ptr [rax - 0x23], dh ; jmp qword ptr [rax]
0x00000000007848ed : xchg eax, ecx ; add eax, dword ptr [rax] ; or ch, 0xdf ; jmp qword ptr [rax]
0x00000000004bb5f1 : xchg eax, ecx ; and dword ptr [rax], eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000007460b5 : xchg eax, ecx ; call qword ptr [rax]
0x0000000000639703 : xchg eax, ecx ; cmp al, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000053a233 : xchg eax, ecx ; in al, 0x4c ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000063f185 : xchg eax, ecx ; insb byte ptr [rdi], dx ; call 0xffffffffc3ed3a91
0x0000000000689049 : xchg eax, ecx ; jb 0x689052 ; mov rdi, rbx ; call rax
0x0000000000689940 : xchg eax, ecx ; jb 0x689949 ; mov rdi, rbx ; call rax
0x0000000000722aea : xchg eax, ecx ; jl 0x722abc ; retf
0x00000000007460a5 : xchg eax, ecx ; jmp rax
0x00000000006033db : xchg eax, ecx ; jns 0x6033ec ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007f404c : xchg eax, ecx ; mov al, byte ptr [rcx] ; add byte ptr [rcx - 0x38fafe35], cl ; retf
0x000000000059293b : xchg eax, ecx ; mov esp, 0x89480012 ; ret
0x0000000000427c8b : xchg eax, ecx ; mov esp, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x858b
0x00000000006568d8 : xchg eax, ecx ; or al, 0 ; add byte ptr [rax + 0x63], cl ; ror dword ptr [rax + 0x29], cl ; ret 0x14c
0x000000000074af89 : xchg eax, ecx ; or byte ptr [rax], al ; mov al, 0x9c ; stc ; jmp rax
0x00000000007f57b9 : xchg eax, ecx ; or eax, 0x21da23 ; ret 0x90d
0x00000000007f69e9 : xchg eax, ecx ; or r14d, r14d ; syscall
0x0000000000681305 : xchg eax, ecx ; out -1, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000744acd : xchg eax, ecx ; out dx, al ; jmp rax
0x0000000000434c70 : xchg eax, ecx ; ret
0x00000000004feadb : xchg eax, ecx ; ret 0x18
0x0000000000563bd1 : xchg eax, ecx ; retf 0x11
0x000000000048402f : xchg eax, ecx ; retf 0x1f
0x00000000007f4028 : xchg eax, ecx ; retf 0x501
0x00000000005d7cab : xchg eax, ecx ; retf 0xf
0x000000000047d555 : xchg eax, ecx ; sar bh, 1 ; dec ecx ; ret
0x00000000007ea3cd : xchg eax, ecx ; sbb dword ptr [rax], eax ; ret
0x00000000006a74d4 : xchg eax, ecx ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000006a7496 : xchg eax, ecx ; std ; dec dword ptr [rax - 0x7d] ; cli ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000007e871c : xchg eax, ecx ; syscall
0x0000000000414273 : xchg eax, ecx ; xchg bh, bh ; dec ecx ; ret
0x00000000007d1ed7 : xchg eax, edi ; add al, 5 ; pushfq ; add al, 7 ; retf
0x0000000000737e69 : xchg eax, edi ; add al, byte ptr [rax] ; retf -0x2bb3
0x00000000007f8337 : xchg eax, edi ; add al, byte ptr [rcx] ; movsd dword ptr [rdi], dword ptr [rsi] ; add bl, byte ptr [rcx] ; int1 ; add al, byte ptr [rax] ; retf 0x2702
0x00000000004fd0de : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x6348
0x000000000062cb32 : xchg eax, edi ; add byte ptr [rax], al ; ret
0x000000000053f1ba : xchg eax, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000007348a9 : xchg eax, edi ; add dword ptr [rax], eax ; retf -0x31fe
0x00000000007cd950 : xchg eax, edi ; add dword ptr [rbp + 0x316e201], ecx ; retf 0x502
0x00000000007e4cc7 : xchg eax, edi ; add ebx, dword ptr [rcx] ; call qword ptr [rdx]
0x00000000007fbcf8 : xchg eax, edi ; add esp, dword ptr [rsi] ; ret
0x00000000007e3667 : xchg eax, edi ; and dword ptr [rbx], eax ; stosb byte ptr [rdi], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; retf 0x512
0x000000000056fa15 : xchg eax, edi ; call qword ptr [rcx]
0x00000000006391ab : xchg eax, edi ; cmp al, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000626ca5 : xchg eax, edi ; fimul dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005926cb : xchg eax, edi ; fisttp word ptr [rsi] ; add byte ptr [rax + 0x1847b60f], dl ; ret
0x00000000007559e1 : xchg eax, edi ; iretd ; call rsp
0x00000000007559a1 : xchg eax, edi ; iretd ; jmp qword ptr [rsi]
0x0000000000427a85 : xchg eax, edi ; lea esp, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x858b
0x0000000000581915 : xchg eax, edi ; loopne 0x58192e ; add byte ptr [rax + 0x29], cl ; ret
0x00000000005ae455 : xchg eax, edi ; mov ah, 0xd ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000005248cb : xchg eax, edi ; mov dl, 0x15 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005fbe85 : xchg eax, edi ; mov ebx, 0x930f0011 ; ret 0xca09
0x00000000007c30e2 : xchg eax, edi ; or al, 0 ; ret
0x00000000005e8751 : xchg eax, edi ; or al, byte ptr [rax] ; add cl, cl ; ret
0x000000000063af70 : xchg eax, edi ; or dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000005b5e55 : xchg eax, edi ; or eax, 0x8115ff00 ; retf 0x44
0x00000000006568e9 : xchg eax, edi ; or eax, dword ptr [rax] ; add byte ptr [rcx], ch ; ret
0x0000000000519115 : xchg eax, edi ; push 0x29480017 ; ret
0x000000000054d5d5 : xchg eax, edi ; push rdx ; add byte ptr [r8 - 0x75], cl ; cmp ebp, eax ; jmp qword ptr [rbx]
0x0000000000434dd4 : xchg eax, edi ; ret
0x000000000069b768 : xchg eax, edi ; ret 0x8341
0x00000000006d11cd : xchg eax, edi ; ret 0x8441
0x0000000000574075 : xchg eax, edi ; ret 0xb60f
0x000000000063201c : xchg eax, edi ; ret 0xc148
0x0000000000683419 : xchg eax, edi ; ret 0xf66
0x0000000000694631 : xchg eax, edi ; ret 0xfb83
0x0000000000483f51 : xchg eax, edi ; retf
0x00000000007dcc83 : xchg eax, edi ; sbb al, byte ptr [rax] ; retf 0x517
0x00000000007e383c : xchg eax, edi ; sbb byte ptr [rbx], al ; ret
0x00000000007eb826 : xchg eax, edi ; sbb dword ptr [rax], eax ; ret 0x1b04
0x000000000047d5b5 : xchg eax, edi ; shl byte ptr [rdx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005c4e2a : xchg eax, edi ; str word ptr [rax - 0x77] ; ret 0xc7
0x00000000004053a5 : xchg eax, edi ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007ed0c2 : xchg eax, edi ; syscall
0x00000000005ef64d : xchg eax, edi ; xor al, byte ptr [rcx] ; call rax
0x00000000007e76be : xchg eax, edi ; xor al, byte ptr [rdx] ; ret 0x34
0x00000000007dc570 : xchg eax, edi ; xor dword ptr [rax], eax ; iretd ; sldt word ptr [rax] ; add dh, dl ; syscall
0x0000000000733d49 : xchg eax, edx ; add al, 0 ; adc cl, ch ; jmp rax
0x0000000000794a35 : xchg eax, edx ; add al, 0 ; ret 0xe4b8
0x0000000000737d69 : xchg eax, edx ; add al, byte ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; not ebx ; call rax
0x00000000007267ef : xchg eax, edx ; add byte ptr [rax], al ; lahf ; push rbx ; retf 0x7cee
0x000000000075495d : xchg eax, edx ; add byte ptr [rax], al ; sbb bh, byte ptr [rbx] ; iretd ; call rsp
0x00000000007549bd : xchg eax, edx ; add byte ptr [rax], al ; xchg eax, edx ; cmp al, 0xcf ; call rsp
0x00000000005f95f1 : xchg eax, edx ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x00000000005f96ca : xchg eax, edx ; add dil, dil ; loopne 0x5f9694 ; retf
0x000000000063d603 : xchg eax, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000004326d2 : xchg eax, edx ; add dword ptr [rbp], ebx ; call rax
0x00000000007deb42 : xchg eax, edx ; add dword ptr [rcx], edx ; add byte ptr [rax], al ; ret 0x501
0x0000000000733ee9 : xchg eax, edx ; add eax, 0xcd1a7c00 ; jmp qword ptr [rax]
0x0000000000741559 : xchg eax, edx ; add eax, 0xe71a8000 ; jmp rax
0x0000000000741569 : xchg eax, edx ; add eax, 0xe71af000 ; call qword ptr [rax]
0x0000000000763688 : xchg eax, edx ; and ch, dl ; call rsp
0x000000000044d7d0 : xchg eax, edx ; and esp, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007549c0 : xchg eax, edx ; cmp al, 0xcf ; call rsp
0x00000000007f6c39 : xchg eax, edx ; cmp eax, 0x538c100 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp dword ptr [rax], eax ; retf
0x0000000000736dc4 : xchg eax, edx ; cmp edx, edx ; dec eax ; add r8b, byte ptr [r8] ; retf -0x2dc7
0x0000000000484b52 : xchg eax, edx ; fst qword ptr [rdi] ; call rax
0x0000000000689b79 : xchg eax, edx ; jb 0x689b85 ; xor eax, eax ; add rsp, 8 ; ret
0x000000000053d0aa : xchg eax, edx ; jbe 0x53d0cc ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000759ee1 : xchg eax, edx ; jmp rcx
0x00000000007cb45a : xchg eax, edx ; jns 0x7cb465 ; ret 0x79
0x00000000006d67db : xchg eax, edx ; jp 0x6d6789 ; push rdi ; mov al, 0x5d ; retf -0x403e
0x0000000000794428 : xchg eax, edx ; js 0x794412 ; jmp qword ptr [rdx]
0x0000000000601fda : xchg eax, edx ; lea ecx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000424706 : xchg eax, edx ; loope 0x42470d ; dec ecx ; ret
0x00000000006791aa : xchg eax, edx ; mov ch, 5 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005f5675 : xchg eax, edx ; or al, 0 ; leave ; ret
0x0000000000403eaa : xchg eax, edx ; or byte ptr [rip + 0x5d5b5800], ch ; ret
0x0000000000502550 : xchg eax, edx ; or dword ptr [rax], eax ; add rsp, 8 ; ret
0x00000000007d435e : xchg eax, edx ; or eax, 0x30cb105 ; retf 0x50d
0x0000000000744add : xchg eax, edx ; out dx, al ; jmp qword ptr [rax]
0x00000000007ca9d4 : xchg eax, edx ; outsb dx, byte ptr [rsi] ; loope 0x7ca9de ; ret
0x00000000004047be : xchg eax, edx ; outsd dx, dword ptr [rsi] ; add byte ptr [rcx], dh ; shr al, 0xc4 ; ret
0x00000000007217e8 : xchg eax, edx ; pop rdx ; mov ah, 0x2b ; add al, 0x6a ; mov bl, 0x5c ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x00000000007672f8 : xchg eax, edx ; pop rsp ; salc ; jmp qword ptr [rsi]
0x00000000004542d0 : xchg eax, edx ; ret
0x000000000050b6ba : xchg eax, edx ; ret 0x17
0x0000000000736554 : xchg eax, edx ; ret 0xffd1
0x000000000052002a : xchg eax, edx ; ret 0xffff
0x0000000000750ff8 : xchg eax, edx ; retf
0x0000000000739b44 : xchg eax, edx ; retf -0x28
0x000000000075d4c0 : xchg eax, edx ; retf -0x2f
0x0000000000757108 : xchg eax, edx ; retf -0x31
0x0000000000575e52 : xchg eax, edx ; retf 0x48
0x0000000000505e4a : xchg eax, edx ; retf 0x4f
0x00000000005c30ba : xchg eax, edx ; retf 0xb
0x00000000007f0db4 : xchg eax, edx ; sbb eax, 0x6058c09 ; out dx, eax ; or eax, dword ptr [rbx] ; ret 0x7105
0x00000000004086aa : xchg eax, edx ; shr byte ptr [rax + rax], 0x5b ; pop rbp ; pop r12 ; ret
0x000000000074ae95 : xchg eax, edx ; stc ; jmp qword ptr [rax]
0x00000000006a7421 : xchg eax, edx ; std ; dec dword ptr [rax - 0x7d] ; cli ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000007d35b3 : xchg eax, edx ; sub byte ptr [rax], al ; jrcxz 0x7d35e8 ; cmp al, 0xde ; and dword ptr [rax], eax ; ret
0x00000000005c1caa : xchg eax, edx ; sub dl, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007dfc37 : xchg eax, edx ; syscall
0x00000000007e76d7 : xchg eax, edx ; xor al, 5 ; ret 0x34
0x000000000057e4e8 : xchg eax, esi ; adc byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000007f8a0f : xchg eax, esi ; adc byte ptr [rax], al ; in al, dx ; syscall
0x00000000007d96db : xchg eax, esi ; adc eax, 0x510ae00 ; retf
0x0000000000536509 : xchg eax, esi ; adc eax, 0x76a0bf00 ; outsd dx, dword ptr [rsi] ; add al, ch ; retf 0x1596
0x0000000000774d95 : xchg eax, esi ; add al, byte ptr [rax] ; clc ; mov bl, 0xdb ; jmp qword ptr [rax]
0x0000000000774d2d : xchg eax, esi ; add al, byte ptr [rax] ; nop ; mov bl, 0xdb ; call qword ptr [rax]
0x000000000060b782 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7c], al ; dec dword ptr [rdi] ; ret
0x000000000062382e : xchg eax, esi ; add byte ptr ds:[rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4847
0x0000000000416490 : xchg eax, esi ; add byte ptr es:[rax - 0x77], cl ; ret
0x00000000007369dc : xchg eax, esi ; add dl, dl ; jmp qword ptr [rax]
0x00000000007e169a : xchg eax, esi ; add dword ptr [rbx], edx ; add byte ptr [rax], al ; retf 0x501
0x00000000004c56a3 : xchg eax, esi ; add eax, 0x8fbf0000 ; ret 0x6e
0x0000000000741641 : xchg eax, esi ; add eax, 0xe7355000 ; call rax
0x00000000007a4d1d : xchg eax, esi ; add eax, 0xeb3b5000 ; call qword ptr [rbx]
0x00000000007a4d55 : xchg eax, esi ; add eax, 0xeb3b5800 ; call qword ptr [rbx]
0x0000000000784d9d : xchg eax, esi ; add eax, dword ptr [rax] ; push rax ; rcr edi, 1 ; call qword ptr [rbx]
0x00000000007cfca3 : xchg eax, esi ; add edx, dword ptr [rbp - 0x51ffffff] ; add al, 6 ; ret 4
0x00000000007daf89 : xchg eax, esi ; add esi, dword ptr [rcx] ; add byte ptr [rax], al ; retf 0x603
0x00000000006525a6 : xchg eax, esi ; and dword ptr [rax], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004aed4e : xchg eax, esi ; cmp edx, dword ptr [rbp] ; call rax
0x0000000000482936 : xchg eax, esi ; frstor dword ptr [rbx] ; add cl, cl ; ret
0x00000000004f0106 : xchg eax, esi ; idiv edi ; pop rbp ; ret
0x00000000006d9691 : xchg eax, esi ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; retf 0x9f
0x00000000006d9711 : xchg eax, esi ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; retf
0x00000000007626b8 : xchg eax, esi ; jb 0x762692 ; call rdi
0x0000000000437216 : xchg eax, esi ; jbe 0x437246 ; add cl, cl ; ret
0x00000000007fa73e : xchg eax, esi ; jbe 0x7fa744 ; retf
0x00000000007fa879 : xchg eax, esi ; jbe 0x7fa87f ; retf 0x194
0x0000000000755cc8 : xchg eax, esi ; lahf ; iretd ; call rsp
0x00000000007c72bd : xchg eax, esi ; or al, 5 ; ret 0xc
0x000000000072191d : xchg eax, esi ; or byte ptr [r10 - 0x44b63727], r9b ; ret 0x8ad1
0x00000000006ea088 : xchg eax, esi ; or cl, byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0x49
0x00000000005df1cc : xchg eax, esi ; or dword ptr [rdx], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000074b948 : xchg eax, esi ; out dx, eax ; retf
0x0000000000554606 : xchg eax, esi ; ret
0x0000000000674c98 : xchg eax, esi ; ret 0x23c
0x0000000000674962 : xchg eax, esi ; ret 0x4388
0x0000000000675b90 : xchg eax, esi ; ret 0x4788
0x0000000000606506 : xchg eax, esi ; ret 0x8040
0x000000000065e2a9 : xchg eax, esi ; ret 0xd285
0x00000000006bd3b6 : xchg eax, esi ; ret 0xef83
0x00000000005c043b : xchg eax, esi ; ret 0xf3c
0x0000000000694775 : xchg eax, esi ; ret 0xfb83
0x0000000000514998 : xchg eax, esi ; retf
0x00000000006d11c6 : xchg eax, esi ; rol byte ptr [rax - 0x80], 0xff ; jle 0x6d11e4 ; xchg eax, edi ; ret 0x8441
0x00000000006bd3c0 : xchg eax, esi ; ror byte ptr [rcx], 0xd0 ; ret
0x0000000000531ea6 : xchg eax, esi ; sub byte ptr [rdx], bl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007f23d1 : xchg eax, esi ; sub eax, 0x3228906 ; ret
0x00000000007d96ba : xchg eax, esi ; syscall
0x0000000000486316 : xchg eax, esi ; test dword ptr [rbx], esp ; add cl, cl ; ret
0x00000000005db136 : xchg eax, esi ; xor al, 0xe ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000006a1bbf : xchg eax, esi ; xor eax, eax ; ret
0x00000000006cb436 : xchg eax, esi ; xor edi, edi ; dec dword ptr [rax - 0x77] ; ret 0xc7
0x00000000007e65e2 : xchg eax, esp ; adc byte ptr [rax], al ; ret
0x000000000079c7dc : xchg eax, esp ; adc byte ptr [rip - 0x184a9800], al ; call rsp
0x000000000075f6f0 : xchg eax, esp ; adc edx, ebx ; jmp qword ptr [rbx]
0x000000000073499c : xchg eax, esp ; adc esi, ecx ; call qword ptr [rax]
0x0000000000418ea8 : xchg eax, esp ; add ah, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x8948
0x00000000007bf458 : xchg eax, esp ; add al, 0x48 ; mov al, 7 ; add cl, dh ; add al, 5 ; ret 7
0x00000000007f4fd6 : xchg eax, esp ; add bl, byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x000000000069f396 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], al ; retf 0x2374
0x000000000066331b : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rbx + 0x39442853], cl ; ret 0xd089
0x00000000006dea29 : xchg eax, esp ; add byte ptr [rax], r8b ; add byte ptr [rax], al ; add byte ptr [rdx], bl ; retf 0x4c
0x000000000075059c : xchg eax, esp ; add byte ptr [rax], r8b ; retf -0x325c
0x000000000079b79c : xchg eax, esp ; add byte ptr [rip - 0x18ae2000], al ; call qword ptr [rax]
0x0000000000764b85 : xchg eax, esp ; add dword ptr [rax], eax ; retf -0x2abb
0x00000000007d1a02 : xchg eax, esp ; add eax, 0x3104f800 ; add byte ptr [rax], al ; retf 0x605
0x00000000006b207a : xchg eax, esp ; add eax, 0x358244 ; ret
0x000000000066d4ca : xchg eax, esp ; add eax, 0x39be18 ; ret
0x00000000007aaa9c : xchg eax, esp ; add eax, 0xecdb1000 ; call qword ptr [rdx]
0x00000000005c6c00 : xchg eax, esp ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x63], cl ; fmul dword ptr [rax + 0x63] ; retf -0x7cb8
0x00000000007f8f9d : xchg eax, esp ; add eax, dword ptr [rcx] ; wait ; add dword ptr [rsi], edx ; add byte ptr [rax], al ; ret
0x000000000069cfd5 : xchg eax, esp ; add eax, dword ptr [rip - 0x3e561c17] ; retf 0x440c
0x000000000040f7ce : xchg eax, esp ; add esp, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000079ffdc : xchg eax, esp ; add rax, -0x17885000 ; call rdi
0x00000000006b2af1 : xchg eax, esp ; and al, 0 ; add byte ptr [rax + 0x2a0ff300], al ; ret 0x9ba
0x00000000004783e6 : xchg eax, esp ; and al, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000049720d : xchg eax, esp ; and al, byte ptr [rax] ; leave ; ret
0x00000000004b8216 : xchg eax, esp ; and byte ptr [rax], al ; leave ; ret
0x0000000000722f73 : xchg eax, esp ; cmc ; retf
0x0000000000721b78 : xchg eax, esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xd5ef
0x00000000007bb59c : xchg eax, esp ; inc byte ptr [rsi] ; add al, dh ; loopne 0x7bb59a ; call qword ptr [rdx]
0x00000000007aa89c : xchg eax, esp ; int1 ; add eax, 0xecda6000 ; jmp qword ptr [rcx]
0x0000000000769000 : xchg eax, esp ; jb 0x768fde ; jmp qword ptr [rbx]
0x000000000078339c : xchg eax, esp ; jl 0x7833a9 ; add byte ptr [rax], al ; or bh, bl ; jmp qword ptr [rsi]
0x0000000000611e9e : xchg eax, esp ; jo 0x611ea7 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000794448 : xchg eax, esp ; js 0x794432 ; call rsp
0x00000000007a809c : xchg eax, esp ; leave ; add eax, 0xec1c2600 ; call qword ptr [rdi]
0x000000000042e918 : xchg eax, esp ; ljmp ptr [rax] ; add cl, cl ; ret
0x00000000005319ce : xchg eax, esp ; loope 0x5319eb ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000738c5c : xchg eax, esp ; loopne 0x738c38 ; call qword ptr [rax]
0x0000000000515e62 : xchg eax, esp ; mov ah, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000432956 : xchg eax, esp ; mov bh, bh ; dec ecx ; ret
0x00000000004f4a8b : xchg eax, esp ; mov byte ptr [rcx + rdi - 0x18], 0xf ; lahf ; ret 0x8441
0x0000000000488daa : xchg eax, esp ; mov eax, 0 ; nop ; leave ; ret
0x00000000007b6f9c : xchg eax, esp ; mov eax, 0xb0d00006 ; out dx, eax ; call qword ptr [rcx]
0x000000000074356c : xchg eax, esp ; mov gs, ebx ; call rax
0x00000000007a5b9c : xchg eax, esp ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0xeb6b7000 ; call qword ptr [rax]
0x000000000074b029 : xchg eax, esp ; or byte ptr [rax], al ; mov al, 0x9f ; stc ; jmp qword ptr [rax]
0x0000000000751a28 : xchg eax, esp ; or dh, cl ; call qword ptr [rax]
0x000000000061df18 : xchg eax, esp ; or dword ptr [rdx], ecx ; add cl, cl ; ret
0x0000000000744b15 : xchg eax, esp ; out dx, al ; call qword ptr [rax]
0x00000000007b6a39 : xchg eax, esp ; out dx, eax ; call qword ptr [rdi]
0x0000000000790a9c : xchg eax, esp ; push rbx ; add al, 0 ; shr byte ptr [rbx - 0x1e], 1 ; jmp qword ptr [rdx]
0x000000000050275f : xchg eax, esp ; ret
0x00000000007579dc : xchg eax, esp ; ret 0
0x00000000004e84a8 : xchg eax, esp ; ret 0x1e
0x000000000049e648 : xchg eax, esp ; ret 0x20
0x00000000006a4b0b : xchg eax, esp ; ret 0x2174
0x000000000069266d : xchg eax, esp ; ret 0x23c
0x00000000006a55ff : xchg eax, esp ; ret 0x2574
0x0000000000661cc4 : xchg eax, esp ; ret 0x2944
0x00000000006a65b4 : xchg eax, esp ; ret 0x3941
0x0000000000650aa1 : xchg eax, esp ; ret 0x3944
0x000000000054e83e : xchg eax, esp ; ret 0x3948
0x000000000054e82c : xchg eax, esp ; ret 0x3949
0x00000000006cd315 : xchg eax, esp ; ret 0x5388
0x00000000006a447b : xchg eax, esp ; ret 0x5584
0x0000000000665358 : xchg eax, esp ; ret 0x575
0x00000000006a50da : xchg eax, esp ; ret 0x5a74
0x00000000006a5c4c : xchg eax, esp ; ret 0x6cdb
0x00000000006c5aa7 : xchg eax, esp ; ret 0x8040
0x0000000000505103 : xchg eax, esp ; ret 0x8041
0x00000000006cc9fa : xchg eax, esp ; ret 0x8148
0x00000000005b28be : xchg eax, esp ; ret 0x840
0x00000000006c4c86 : xchg eax, esp ; ret 0x8440
0x00000000005bf43c : xchg eax, esp ; ret 0x8441
0x00000000005c0424 : xchg eax, esp ; ret 0x8444
0x0000000000534a14 : xchg eax, esp ; ret 0x8548
0x000000000052cac7 : xchg eax, esp ; ret 0x854d
0x0000000000661e2e : xchg eax, esp ; ret 0xab83
0x00000000004f72ee : xchg eax, esp ; ret 0xb60f
0x0000000000652f82 : xchg eax, esp ; ret 0xbd80
0x00000000006802b4 : xchg eax, esp ; ret 0xc085
0x00000000006b2039 : xchg eax, esp ; ret 0xc148
0x0000000000693b0f : xchg eax, esp ; ret 0xc284
0x0000000000650aae : xchg eax, esp ; ret 0xd008
0x000000000067ba2e : xchg eax, esp ; ret 0xd084
0x00000000006ccf0d : xchg eax, esp ; ret 0xd089
0x000000000068e531 : xchg eax, esp ; ret 0xd138
0x0000000000525bdd : xchg eax, esp ; ret 0xd184
0x00000000004cf144 : xchg eax, esp ; ret 0xd284
0x00000000005390ad : xchg eax, esp ; ret 0xd301
0x0000000000511012 : xchg eax, esp ; ret 0xf685
0x000000000069464b : xchg eax, esp ; ret 0xfb83
0x000000000079799c : xchg eax, esp ; ret 4
0x000000000040f4c4 : xchg eax, esp ; retf
0x00000000004e8aa2 : xchg eax, esp ; retf -0xa
0x00000000005c30ce : xchg eax, esp ; retf 0xb
0x000000000063402c : xchg eax, esp ; retf 4
0x0000000000548fb8 : xchg eax, esp ; retf 5
0x000000000050f687 : xchg eax, esp ; rol bl, 0x66 ; nop dword ptr [rax + rax] ; ret
0x000000000053adec : xchg eax, esp ; rol bl, 0x90 ; mov eax, 1 ; ret
0x0000000000693b07 : xchg eax, esp ; rol byte ptr [rbp - 0x1b76b62e], 0xf ; xchg eax, esp ; ret 0xc284
0x0000000000669969 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or bl, al ; ret
0x0000000000506e5e : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000006bd3a3 : xchg eax, esp ; ror byte ptr [rcx], 0xd0 ; ret
0x00000000006cd312 : xchg eax, esp ; ror byte ptr [rdi], 0x94 ; ret 0x5388
0x00000000006cbc9b : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000005edece : xchg eax, esp ; sbb al, 9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000075cf9c : xchg eax, esp ; sbb byte ptr [rcx], al ; add al, ah ; jno 0x75cf7b ; jmp qword ptr [rbx]
0x00000000007c6b43 : xchg eax, esp ; sbb byte ptr [rdi], ch ; ret
0x00000000006c5aae : xchg eax, esp ; shl byte ptr [rcx], 0xd0 ; ret
0x00000000004d5784 : xchg eax, esp ; sti ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000007e768f : xchg eax, esp ; sub al, 5 ; ret
0x00000000007be19c : xchg eax, esp ; sub al, byte ptr [rdi] ; add byte ptr [rax + 0x2f], ah ; int1 ; jmp qword ptr [rbx]
0x0000000000435465 : xchg eax, esp ; sub byte ptr [rax], al ; leave ; ret
0x00000000007d0d53 : xchg eax, esp ; syscall
0x00000000005da450 : xchg eax, esp ; test byte ptr [rdx], al ; call rax
0x000000000063612c : xchg eax, esp ; test eax, 0x89480004 ; ret
0x000000000060baeb : xchg eax, esp ; vpminsw xmm12, xmm14, xmmword ptr [rcx] ; ret 0xd589
0x0000000000784d9c : xchg eax, esp ; xchg eax, esi ; add eax, dword ptr [rax] ; push rax ; rcr edi, 1 ; call qword ptr [rbx]
0x000000000073a424 : xchg eax, esp ; xchg ebx, ebx ; jmp qword ptr [rax]
0x000000000048d438 : xchg eax, esp ; xor ah, byte ptr [rbx] ; add cl, cl ; ret
0x0000000000722f72 : xchg eax, r12d ; cmc ; retf
0x000000000045e707 : xchg eax, r8d ; mov rax, qword ptr [rip + 0x5a41d8] ; call rax
0x000000000052ec73 : xchg ebx, ebp ; test dword ptr [rax - 0x77], ecx ; ret
0x000000000073a425 : xchg ebx, ebx ; jmp qword ptr [rax]
0x000000000073a415 : xchg ebx, ebx ; jmp rax
0x000000000078cd41 : xchg edi, eax ; call qword ptr [rdx]
0x00000000007b6671 : xchg edi, ebp ; call qword ptr [rbx]
0x00000000007455d5 : xchg edi, ebp ; jmp qword ptr [rax]
0x000000000044f0c5 : xchg edi, edi ; dec ecx ; ret
0x0000000000752f01 : xchg esi, ecx ; call rsp
0x00000000004b5455 : xchg esp, edx ; push rsp ; add bh, bh ; ror cl, 1 ; ret
0x0000000000753e94 : xchg qword ptr [rax], r8 ; add byte ptr [rdx], dl ; in eax, -0x32 ; call rsp
0x00000000004b938d : xchg rax, r13 ; push rsp ; add bh, bh ; ror cl, 1 ; ret
0x0000000000737e68 : xchg rax, rdi ; add al, byte ptr [rax] ; retf -0x2bb3
0x00000000007a4d54 : xchg rax, rsi ; add eax, 0xeb3b5800 ; call qword ptr [rbx]
0x00000000006d9690 : xchg rax, rsi ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; retf 0x9f
0x0000000000744b14 : xchg rax, rsp ; out dx, al ; call qword ptr [rax]
0x0000000000435464 : xchg rax, rsp ; sub byte ptr [rax], al ; leave ; ret
0x00000000006bf544 : xchg spl, r15b ; mov qword ptr [rdi + 0x40], rax ; ret
0x00000000007ccb86 : xlatb ; add al, 0 ; ret 0x501
0x00000000007f5d47 : xlatb ; add al, 5 ; int1 ; sbb al, byte ptr [rax] ; ret
0x0000000000738b81 : xlatb ; add al, byte ptr [rax] ; mov ebx, cs ; salc ; call qword ptr [rax]
0x00000000007d5568 : xlatb ; add al, byte ptr [rax] ; retf 0xd02
0x0000000000545130 : xlatb ; add byte ptr [r8 - 0x7d], cl ; ret
0x000000000064a14e : xlatb ; add byte ptr [rax - 0x7d], cl ; ret 0x481f
0x00000000006af73f : xlatb ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0xb60f
0x00000000004c3202 : xlatb ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000064b7b5 : xlatb ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000050be97 : xlatb ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x50be8f ; ret
0x0000000000558b87 : xlatb ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x558b7f ; ret
0x000000000062b307 : xlatb ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x62b2ff ; ret
0x00000000006a41a8 : xlatb ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x6a419f ; ret
0x00000000007f4232 : xlatb ; add dword ptr [rax], esp ; ret 0x1d7
0x0000000000742339 : xlatb ; add eax, 0xe8974000 ; jmp qword ptr [rax]
0x0000000000742361 : xlatb ; add eax, 0xe89c6000 ; call qword ptr [rax]
0x000000000068110b : xlatb ; add eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000007d2533 : xlatb ; add eax, dword ptr [rax] ; retf 0xd03
0x00000000007daf86 : xlatb ; add eax, dword ptr [rax] ; xchg eax, esi ; add esi, dword ptr [rcx] ; add byte ptr [rax], al ; retf 0x603
0x000000000054a0f8 : xlatb ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000619901 : xlatb ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000528130 : xlatb ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000005de5c5 : xlatb ; and ecx, dword ptr [rsi] ; add cl, cl ; ret
0x000000000047c7c2 : xlatb ; call 0x4791e3
0x0000000000738fd6 : xlatb ; call qword ptr [rax]
0x0000000000560bd9 : xlatb ; call qword ptr [rcx]
0x0000000000767f3a : xlatb ; call qword ptr [rdx]
0x000000000040b108 : xlatb ; call rax
0x000000000068e9ee : xlatb ; clc ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x68e9e8 ; ret
0x000000000068e9ed : xlatb ; clc ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x68e9e9 ; ret
0x000000000074a2fd : xlatb ; clc ; jmp qword ptr [rax]
0x000000000074a2ed : xlatb ; clc ; jmp rax
0x0000000000721c01 : xlatb ; cli ; retf
0x00000000006c0a65 : xlatb ; cmp al, 1 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006b3b28 : xlatb ; cmp edi, dword ptr [rax + 0x44c] ; jg 0x6b3b3b ; ret
0x00000000006902ba : xlatb ; dec dword ptr [rax + 0x39] ; ret
0x000000000068aa0b : xlatb ; dec dword ptr [rax + 0x63] ; ret
0x000000000068b238 : xlatb ; dec dword ptr [rbx + 0x458b0455] ; add byte ptr [rcx], bh ; ret 0x447d
0x000000000042500d : xlatb ; fcomp dword ptr [rbp] ; call rax
0x000000000067641b : xlatb ; fdivr st(7) ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000005e4b0d : xlatb ; fld qword ptr [rcx] ; call rax
0x0000000000739126 : xlatb ; inc dword ptr [rax] ; add al, byte ptr [rax] ; out dx, al ; retf -0x29
0x00000000007390f6 : xlatb ; inc dword ptr [rax] ; add al, byte ptr [rax] ; xor al, 0xae ; xlatb ; jmp qword ptr [rax]
0x00000000006895f3 : xlatb ; inc dword ptr [rbp - 0x3f6bf040] ; pop rdx ; ret
0x000000000068c4a7 : xlatb ; inc dword ptr [rcx - 0x77] ; pop rsi ; or cl, ch ; retf
0x0000000000739086 : xlatb ; inc eax ; out dx, eax ; add al, byte ptr [rax] ; call 0xffffffffe1736828
0x00000000006775ff : xlatb ; je 0x677611 ; and edi, 3 ; sete al ; ret
0x0000000000738f46 : xlatb ; jmp qword ptr [rax]
0x0000000000767cca : xlatb ; jmp qword ptr [rbx]
0x0000000000738fce : xlatb ; jmp rax
0x000000000076884a : xlatb ; jmp rdx
0x0000000000687981 : xlatb ; jne 0x687973 ; ret
0x00000000006a1cc3 : xlatb ; jne 0x6a1c93 ; ret
0x00000000006a1d30 : xlatb ; jne 0x6a1cf3 ; ret
0x00000000006a1e13 : xlatb ; jne 0x6a1de3 ; ret
0x000000000062b1c8 : xlatb ; jno 0x62b1d2 ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000568a8b : xlatb ; jnp 0x568aa8 ; add byte ptr [rax + 0x1847b60f], dl ; ret
0x00000000007222f9 : xlatb ; loopne 0x72228a ; retf 0x5cb0
0x000000000067b125 : xlatb ; mov bl, 2 ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000506fd5 : xlatb ; mov dword ptr [rax], ebx ; add byte ptr [rax + 0x29], cl ; ret
0x00000000005639d5 : xlatb ; mov edi, 0x29480012 ; ret
0x0000000000721a36 : xlatb ; mov r12d, dword ptr [r10 - 6] ; outsb dx, byte ptr [rsi] ; retf -0x1ead
0x00000000004d7d11 : xlatb ; mov rax, r14 ; mov rdi, rax ; call 0x6d4749
0x0000000000421fec : xlatb ; mov rsi, rax ; call 0x41ea60
0x000000000043f3b1 : xlatb ; mov rsi, rax ; call 0x43be3c
0x0000000000412634 : xlatb ; mov rsi, rax ; call 0x6be8b6
0x0000000000453dd7 : xlatb ; or al, byte ptr [rax] ; add cl, cl ; ret
0x00000000005ae445 : xlatb ; out -2, eax ; lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000006d68b3 : xlatb ; pop rdx ; ret 0x44fd
0x00000000007390e6 : xlatb ; push qword ptr [rax + 0x3c0002f1] ; lodsd eax, dword ptr [rsi] ; xlatb ; jmp rax
0x0000000000739056 : xlatb ; push qword ptr [rax + 0x5e0002ee] ; test edi, edx ; jmp rax
0x000000000064086b : xlatb ; push rdx ; call 0xffffffffc3ed5177
0x000000000040428b : xlatb ; ret
0x00000000007217f2 : xlatb ; ret 0xcf31
0x00000000004e19f5 : xlatb ; retf
0x000000000068e9bc : xlatb ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x1c], dh ; ret
0x000000000068f056 : xlatb ; sete al ; ret
0x00000000007234a3 : xlatb ; stosd dword ptr [rdi], eax ; ja 0x7234bb ; mov dl, 0xb9 ; ret 0x5ca1
0x0000000000406fb0 : xlatb ; sub al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000007e396d : xlatb ; sub al, byte ptr [rax] ; retf
0x0000000000431120 : xlatb ; sub byte ptr [rax], al ; leave ; ret
0x00000000004efe0d : xlatb ; sub dl, byte ptr [rcx] ; call rax
0x00000000007f71db : xlatb ; sub eax, 0x52ff603 ; ret 0x30
0x00000000005fb7f5 : xlatb ; sub eax, 0x8948000c ; ret
0x00000000007eb987 : xlatb ; syscall
0x00000000005a72d5 : xlatb ; xchg byte ptr [rsi], cl ; add byte ptr [rax + 0x29], cl ; ret
0x00000000005a2ce7 : xor ah, 0x70 ; add byte ptr [rax - 0x77], cl ; ja 0x5a2cff ; ret
0x0000000000476e90 : xor ah, 0xff ; jmp qword ptr [rax]
0x00000000007af270 : xor ah, ah ; in eax, dx ; call rax
0x000000000073cce5 : xor ah, al ; call qword ptr [rax]
0x0000000000748274 : xor ah, al ; cmc ; call rax
0x000000000073ccd5 : xor ah, al ; jmp rax
0x00000000007f3587 : xor ah, bh ; retf 1
0x000000000040a0ba : xor ah, byte ptr [rax] ; nop ; leave ; ret
0x000000000044c432 : xor ah, byte ptr [rbx + rbx*2] ; call rax
0x000000000061b45c : xor ah, byte ptr [rbx - 1] ; dec ecx ; ret
0x000000000048d3e9 : xor ah, byte ptr [rbx] ; add cl, cl ; ret
0x00000000004ab62a : xor ah, byte ptr [rcx] ; add cl, cl ; ret
0x0000000000740345 : xor ah, ch ; jmp qword ptr [rax]
0x00000000007961e9 : xor ah, ch ; jmp qword ptr [rcx]
0x0000000000740c75 : xor ah, dh ; call rax
0x00000000007cdc95 : xor al, 0 ; add ah, bh ; syscall
0x00000000006bf47c : xor al, 0 ; add byte ptr [rax - 0x75], cl ; pop rbp ; clc ; leave ; ret
0x000000000067de3a : xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046240d : xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000462489 : xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000006bec91 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000787a38 : xor al, 0 ; add byte ptr [rax], al ; hlt ; ret 3
0x0000000000777af0 : xor al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x0000000000787ae0 : xor al, 0 ; add byte ptr [rax], al ; pushfq ; ret
0x0000000000787aa8 : xor al, 0 ; add byte ptr [rax], al ; ret
0x0000000000787990 : xor al, 0 ; add byte ptr [rax], al ; ret 3
0x0000000000778288 : xor al, 0 ; add byte ptr [rax], al ; retf
0x000000000074ec0d : xor al, 0 ; add byte ptr [rdx + rax - 0x33], ah ; call rsp
0x000000000074ebad : xor al, 0 ; add byte ptr [rdx], al ; add ebp, ecx ; call rsp
0x00000000007cd241 : xor al, 0 ; add byte ptr [rsi + rax + 0x6c105], bh ; retf 0x506
0x00000000007f5600 : xor al, 0 ; add dh, dl ; syscall
0x00000000006bf4cc : xor al, 0 ; add dword ptr [rax - 0x75], ecx ; pop rbp ; clc ; leave ; ret
0x00000000006cbcf2 : xor al, 0 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000006be9c0 : xor al, 0 ; add rsp, 8 ; jmp rax
0x00000000006bf340 : xor al, 0 ; add rsp, 8 ; ret
0x00000000006bebc5 : xor al, 0 ; jmp rax
0x00000000006bfac8 : xor al, 0 ; mov qword ptr [rax], rbx ; pop rbx ; ret
0x00000000006be898 : xor al, 0 ; mov rdx, qword ptr [rax] ; add rsp, 8 ; ret
0x00000000006c0660 : xor al, 0 ; pop rbx ; jmp rax
0x00000000006bea35 : xor al, 0 ; ret
0x00000000007f1f53 : xor al, 0 ; ret 0x3001
0x00000000007f21da : xor al, 0 ; ret 0x519
0x00000000007f24fb : xor al, 0 ; retf
0x00000000006bfab5 : xor al, 0 ; sub byte ptr [rax], 0 ; ret
0x00000000006be53c : xor al, 0 ; test al, al ; cmove eax, edx ; ret
0x00000000007e76bc : xor al, 0 ; xchg eax, edi ; xor al, byte ptr [rdx] ; ret 0x34
0x00000000007e76d5 : xor al, 0 ; xchg eax, edx ; xor al, 5 ; ret 0x34
0x000000000056c6b9 : xor al, 0x11 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000053c681 : xor al, 0x14 ; add bl, ch ; test dword ptr [rax - 0x77], ecx ; ret
0x000000000075e640 : xor al, 0x14 ; sar bh, cl ; retf
0x000000000052d694 : xor al, 0x15 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000052d75d : xor al, 0x15 ; add byte ptr [rax - 0x7d], cl ; cli ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000078cd3c : xor al, 0x16 ; add al, 0 ; retf -0x3879
0x000000000057123e : xor al, 0x16 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050c6fe : xor al, 0x17 ; add bl, ch ; ret 0x8948
0x000000000054d1f4 : xor al, 0x17 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006881e6 : xor al, 0x17 ; ret
0x000000000055bf9b : xor al, 0x1f ; mov edi, 0x728b80 ; call 0x6881f9
0x00000000007ca1da : xor al, 0x1f ; retf
0x000000000078db3c : xor al, 0x24 ; add al, 0 ; mov cl, 0xe1 ; jmp qword ptr [rax]
0x000000000047b14c : xor al, 0x24 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000005306a3 : xor al, 0x24 ; mov rdi, rbx ; call rax
0x000000000042e098 : xor al, 0x26 ; sub dword ptr [rax], eax ; leave ; ret
0x0000000000415c73 : xor al, 0x27 ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x8948
0x000000000042d247 : xor al, 0x29 ; add cl, cl ; ret
0x000000000048f386 : xor al, 0x29 ; ret 0xd089
0x00000000006bf63b : xor al, 0x34 ; add byte ptr [rax - 0x77], cl ; retf 0x6348
0x0000000000685ed6 : xor al, 0x38 ; add byte ptr [rbx + 0x5d], bl ; pop r14 ; ret
0x00000000004bd0ae : xor al, 0x38 ; ret 0x6075
0x000000000048f433 : xor al, 0x39 ; ret 0x117c
0x000000000048f3f6 : xor al, 0x39 ; ret 0x157c
0x000000000048f378 : xor al, 0x39 ; ret 0x167c
0x00000000005f4226 : xor al, 0x39 ; ret 0x1c7c
0x00000000004bc344 : xor al, 0x39 ; ret 0x850f
0x000000000041bff3 : xor al, 0x39 ; ret 0xd74
0x000000000041cfe4 : xor al, 0x39 ; ret 0xf75
0x00000000005f56ff : xor al, 0x39 ; ret 0xf7c
0x000000000077f63c : xor al, 0x3f ; add eax, dword ptr [rax] ; and ebx, esi ; call rax
0x000000000078f73c : xor al, 0x40 ; add al, 0 ; add spl, dl ; jmp qword ptr [rdx]
0x000000000079f83c : xor al, 0x41 ; add eax, 0xe8671000 ; jmp qword ptr [rdi]
0x000000000079023c : xor al, 0x4b ; add al, 0 ; xor byte ptr [rax - 0x1e], dl ; jmp qword ptr [rbx]
0x000000000079083c : xor al, 0x51 ; add al, 0 ; xor byte ptr [rcx - 0x1e], ah ; jmp qword ptr [rbx]
0x0000000000750c7c : xor al, 0x55 ; add byte ptr [rax], al ; retf -0x3243
0x0000000000780f3c : xor al, 0x58 ; add eax, dword ptr [rax] ; mov esi, ds ; jmp qword ptr [rdx]
0x00000000007a237c : xor al, 0x6c ; add eax, 0xe8f60000 ; call rdi
0x000000000074485c : xor al, 0x72 ; out dx, al ; call qword ptr [rax]
0x00000000006c4975 : xor al, 0x85 ; push qword ptr [rcx + rax*2 - 0x7d] ; call qword ptr [rsi]
0x00000000006d1f00 : xor al, 0x87 ; add rsi, r15 ; jmp rsi
0x000000000058ef41 : xor al, 0x88 ; mov dword ptr [rdi + 0x10], edx ; ret
0x000000000061b138 : xor al, 0xa ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004f40de : xor al, 0xa0 ; add al, ch ; retf 0x1b3c
0x00000000007ea45b : xor al, 0xa2 ; sbb byte ptr [rax], al ; test byte ptr [rdi], 5 ; ret
0x0000000000769bc0 : xor al, 0xa3 ; leave ; call qword ptr [rdx]
0x0000000000486198 : xor al, 0xa5 ; and eax, dword ptr [rax] ; leave ; ret
0x00000000007390fc : xor al, 0xae ; xlatb ; jmp qword ptr [rax]
0x0000000000586ec3 : xor al, 0xb3 ; call 0x4038f4
0x0000000000776b7c : xor al, 0xb4 ; add al, byte ptr [rax] ; mov al, 0x56 ; fdiv st(7), st(0) ; retf 1
0x000000000077703c : xor al, 0xb9 ; add al, byte ptr [rax] ; and byte ptr [rdi - 0x24], ah ; call qword ptr [rdx]
0x00000000007a703c : xor al, 0xb9 ; add eax, 0xebdda000 ; call rsi
0x000000000079767c : xor al, 0xbf ; add al, 0 ; in ax, -1 ; ret 1
0x00000000004e1b7f : xor al, 0xbf ; or al, 0 ; add byte ptr [rax], al ; call 0x6be5d8
0x0000000000552881 : xor al, 0xc ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00000000006cdac4 : xor al, 0xc2 ; ret
0x0000000000434185 : xor al, 0xc3 ; insd dword ptr [rdi], dx ; add byte ptr [rcx - 0x41], al ; pop rax ; ret
0x0000000000674592 : xor al, 0xc7 ; mov qword ptr [rdi + rax*8 + 8], rdx ; ret
0x000000000074f269 : xor al, 0xcd ; jmp qword ptr [rax]
0x000000000074f249 : xor al, 0xcd ; jmp qword ptr [rbx]
0x0000000000735265 : xor al, 0xcf ; call qword ptr [rax]
0x00000000005ade49 : xor al, 0xd ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006c4996 : xor al, 0xd8 ; retf 0x3bdb
0x000000000073ad8d : xor al, 0xdd ; jmp qword ptr [rax]
0x000000000077f8c1 : xor al, 0xde ; call qword ptr [rcx]
0x00000000005db137 : xor al, 0xe ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000079c57c : xor al, 0xe ; add eax, 0xe7a81000 ; call rsp
0x00000000007f2492 : xor al, 0xe ; mov dword ptr [rdx], esp ; add edi, ebp ; xor al, 5 ; ret 0x3935
0x0000000000740cc5 : xor al, 0xe6 ; call rax
0x000000000074160d : xor al, 0xe7 ; call qword ptr [rax]
0x00000000007415fd : xor al, 0xe7 ; jmp rax
0x000000000079ec39 : xor al, 0xe8 ; call qword ptr [rax]
0x00000000006030d7 : xor al, 0xe8 ; xchg eax, ebx ; jl 0x6030ec ; add byte ptr [rax - 0x77], cl ; ret
0x000000000077a53c : xor al, 0xee ; add al, byte ptr [rax] ; cmp dl, 0xdc ; jmp qword ptr [rcx]
0x00000000007b1441 : xor al, 0xee ; call qword ptr [rdx]
0x000000000059c4ff : xor al, 0xf ; add byte ptr [rax + 0x29], cl ; ret
0x000000000067861b : xor al, 0xf ; jne 0x678604 ; ret
0x00000000006787fb : xor al, 0xf ; jne 0x6787e4 ; ret
0x00000000006789db : xor al, 0xf ; jne 0x6789c4 ; ret
0x000000000055118a : xor al, 0xf ; ret 0x8d48
0x000000000075a93c : xor al, 0xf2 ; add byte ptr [rax], al ; ret 0xd0b7
0x0000000000749d7d : xor al, 0xf8 ; jmp rax
0x000000000074a83d : xor al, 0xf9 ; jmp qword ptr [rax]
0x000000000078b13c : xor al, 0xfa ; add eax, dword ptr [rax] ; or al, 0xe1 ; jmp qword ptr [rdi]
0x000000000065e37f : xor al, 1 ; fidivr dword ptr [rcx] ; ret 0x5589
0x00000000006a9a27 : xor al, 1 ; fstp xword ptr [r10] ; add rsp, 8 ; ret
0x00000000005fc7b3 : xor al, 1 ; je 0x5fc7c1 ; mov byte ptr [rdi], 1 ; ret
0x000000000076eb65 : xor al, 2 ; add byte ptr [rdx], dh ; push rsi ; leave ; call qword ptr [rdx]
0x000000000069c911 : xor al, 2 ; jne 0x69c8d4 ; ret
0x00000000006d0a5e : xor al, 2 ; mov eax, r8d ; ret
0x000000000068b1b3 : xor al, 3 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000067f126 : xor al, 3 ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000000007e3560 : xor al, 3 ; ret 0x1609
0x000000000063decb : xor al, 4 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000740391 : xor al, 5 ; add byte ptr [rax], dh ; cmp ebp, esp ; call qword ptr [rax]
0x00000000007f1e7b : xor al, 5 ; ret
0x00000000007e76d8 : xor al, 5 ; ret 0x34
0x00000000007f2498 : xor al, 5 ; ret 0x3935
0x0000000000749a51 : xor al, 8 ; add al, dh ; in eax, -9 ; call qword ptr [rax]
0x00000000005fd6e1 : xor al, 8 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007aae30 : xor al, ah ; in al, dx ; jmp qword ptr [rdi]
0x0000000000516e2b : xor al, al ; or rax, rcx ; ret
0x00000000006a1b0a : xor al, al ; ret
0x0000000000749d3d : xor al, bh ; call rax
0x0000000000768949 : xor al, bl ; call qword ptr [rbx]
0x000000000069ca8d : xor al, bl ; nop ; mov eax, esi ; xor eax, edx ; xor eax, edi ; ret
0x00000000005ef699 : xor al, byte ptr [r9] ; call rax
0x00000000005517af : xor al, byte ptr [rax + rax] ; add byte ptr [rsi + 1], bh ; call rax
0x000000000078e995 : xor al, byte ptr [rax + rax] ; cwde ; out 0xe1, al ; jmp qword ptr [rdx]
0x00000000006d6138 : xor al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007dc554 : xor al, byte ptr [rax] ; cdq ; syscall
0x00000000007e39ae : xor al, byte ptr [rbx] ; retf
0x00000000004f800c : xor al, byte ptr [rcx] ; add byte ptr [rax], al ; mov esi, 1 ; call rax
0x00000000005ef64e : xor al, byte ptr [rcx] ; call rax
0x000000000076e92d : xor al, byte ptr [rdx] ; add dl, ch ; push rdi ; leave ; call qword ptr [rdx]
0x00000000007e76bf : xor al, byte ptr [rdx] ; ret 0x34
0x00000000007bf085 : xor al, byte ptr [rip + 0x53e016d] ; retf 0x301
0x000000000079e985 : xor al, byte ptr [rip - 0x17ddca00] ; call qword ptr [rdi]
0x0000000000740341 : xor al, byte ptr [rip - 0x1acd3000] ; jmp qword ptr [rax]
0x00000000004c369d : xor al, byte ptr [rip - 0x70410000] ; ret 0x6e
0x00000000007421d5 : xor al, ch ; call qword ptr [rax]
0x0000000000594f63 : xor al, ch ; mov bh, 0x12 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000646b00 : xor al, ch ; retf 0x77a
0x000000000052466c : xor bh, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x000000000074a46c : xor bh, bh ; clc ; jmp qword ptr [rax]
0x00000000006cb328 : xor bh, bh ; dec dword ptr [rax - 0x77] ; ret 0xc7
0x0000000000794578 : xor bh, byte ptr [rsi - 0x1c] ; call qword ptr [rax]
0x0000000000748544 : xor bh, ch ; cmc ; jmp qword ptr [rax]
0x0000000000748f7d : xor bh, dh ; call qword ptr [rax]
0x0000000000746b5c : xor bh, dl ; jmp qword ptr [rax]
0x000000000073bb10 : xor bl, al ; add eax, dword ptr [rax] ; and byte ptr [rdi - 0x22], dl ; call qword ptr [rax - 0x3d]
0x000000000074a16c : xor bl, al ; clc ; lcall ptr [rax + 0x53] ; or byte ptr [rax], al ; push rax ; ret
0x000000000073f504 : xor bl, al ; jrcxz 0x73f510 ; sub dl, ch ; add al, 0 ; ret
0x000000000073d504 : xor bl, al ; loopne 0x73d510 ; test al, 0x45 ; add al, 0 ; push rax ; ret
0x000000000074a37c : xor bl, bl ; clc ; jmp qword ptr [rax]
0x0000000000772c01 : xor bl, bl ; jmp rax
0x000000000052b38b : xor bl, byte ptr [r9] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000053b309 : xor bl, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rbp ; or byte ptr [rax - 0x77], cl ; ret
0x000000000043c8c6 : xor bl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000054da6f : xor bl, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000042f6df : xor bl, byte ptr [rbp] ; call rax
0x000000000053d40c : xor bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000052b38c : xor bl, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000057e80a : xor bl, byte ptr [rdi + 0x15] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000079b8c0 : xor bl, byte ptr [rsi - 0x19] ; jmp qword ptr [rcx]
0x000000000041f5fe : xor bl, byte ptr [rsi] ; call rax
0x0000000000690b8e : xor bl, ch ; ret
0x000000000048ab35 : xor byte ptr [ebx], ah ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005716f7 : xor byte ptr [r14], r10b ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006bb843 : xor byte ptr [r8 - 0x75], cl ; cmp byte ptr [rax + 0x63], cl ; ret 0x2b48
0x0000000000522c4b : xor byte ptr [r8 - 0x75], r9b ; add byte ptr [rax + 0x39], cl ; ret 0x3b74
0x0000000000467b49 : xor byte ptr [r8 - 0x77], cl ; ror byte ptr [r8 - 0x75], 5 ; retf 0x5957
0x00000000006a81e1 : xor byte ptr [r8], r8b ; ret
0x000000000048f37f : xor byte ptr [r9 + 0x458b41c2], r9b ; xor al, 0x29 ; ret 0xd089
0x0000000000559332 : xor byte ptr [rax + 0x12], ch ; add byte ptr [rax - 0x77], cl ; ret
0x000000000069cc66 : xor byte ptr [rax + 0x246c8944], ch ; rol byte ptr [rcx - 0x3f], 1 ; ret 0x440c
0x0000000000688114 : xor byte ptr [rax + 0x39], cl ; cli ; jne 0x6880fe ; ret
0x00000000004b9e3a : xor byte ptr [rax + 0x39], cl ; ret 0x2a75
0x00000000004b9c7a : xor byte ptr [rax + 0x39], cl ; ret 0x3f75
0x00000000004b9b51 : xor byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000006521bc : xor byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000006586b7 : xor byte ptr [rax + 0x39], cl ; ret 0xe775
0x0000000000652f7d : xor byte ptr [rax + 0x39], cl ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret 0xbd80
0x00000000006a95f9 : xor byte ptr [rax + 0x5d5b011c], cl ; pop r12 ; ret
0x00000000006a8cb4 : xor byte ptr [rax + 0x63], cl ; adc ch, byte ptr [rcx] ; ret
0x00000000006b7cfd : xor byte ptr [rax + 0x63], cl ; or dword ptr [rcx + 0x29], ecx ; retf 0xf42
0x00000000006b80d7 : xor byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 0x29], cl ; retf 0x3c80
0x0000000000583f4f : xor byte ptr [rax + 0x70], dh ; add byte ptr [rcx], dh ; shr al, 0xf6 ; retf
0x0000000000733ce8 : xor byte ptr [rax + 4], 0 ; pop rax ; adc ch, cl ; call rax
0x00000000006cad65 : xor byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000640325 : xor byte ptr [rax - 0x137af0ff], ch ; pop rbp ; add byte ptr [rax], al ; call rax
0x0000000000799e30 : xor byte ptr [rax - 0x1a], bl ; call qword ptr [rdx]
0x000000000073e7d4 : xor byte ptr [rax - 0x1e], dl ; call rax
0x0000000000790240 : xor byte ptr [rax - 0x1e], dl ; jmp qword ptr [rbx]
0x000000000078c5d0 : xor byte ptr [rax - 0x1f], ch ; call qword ptr [rdi]
0x0000000000522c4c : xor byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x39], cl ; ret 0x3b74
0x00000000006bb844 : xor byte ptr [rax - 0x75], cl ; cmp byte ptr [rax + 0x63], cl ; ret 0x2b48
0x00000000006b16eb : xor byte ptr [rax - 0x75], cl ; je 0x6b171c ; cmp byte ptr [rax - 0x77], cl ; ret
0x00000000006c04a9 : xor byte ptr [rax - 0x75], cl ; pop rax ; test al, 1 ; jne 0x6c04bd ; jmp rax
0x000000000053a072 : xor byte ptr [rax - 0x76b7ff91], bl ; out dx, eax ; call rax
0x00000000005309e4 : xor byte ptr [rax - 0x77], cl ; ret
0x000000000041cd62 : xor byte ptr [rax - 0x77], cl ; retf
0x000000000051bea2 : xor byte ptr [rax - 0x77], cl ; retf -0x2177
0x000000000059da58 : xor byte ptr [rax - 0x77], cl ; retf -0x7cb8
0x0000000000467b4a : xor byte ptr [rax - 0x77], cl ; ror byte ptr [r8 - 0x75], 5 ; retf 0x5957
0x000000000041cd5e : xor byte ptr [rax - 0x77], cl ; xor byte ptr [rax - 0x77], cl ; retf
0x00000000006cf6a7 : xor byte ptr [rax - 0x7d], cl ; ret
0x00000000005f7e41 : xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000005742b8 : xor byte ptr [rax - 0x7d], cl ; ret 0xe808
0x0000000000678432 : xor byte ptr [rax - 0x80], al ; dec dword ptr [rcx] ; setbe al ; ret
0x00000000005524b6 : xor byte ptr [rax - 0xa], al ; mov byte ptr [rcx], 0x75 ; push rsp ; call rsi
0x00000000006bf9f4 : xor byte ptr [rax], 0x34 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000747aac : xor byte ptr [rax], 0xf5 ; call qword ptr [rax]
0x0000000000749d3c : xor byte ptr [rax], 0xf8 ; call rax
0x00000000007e5ef5 : xor byte ptr [rax], al ; add dh, ah ; syscall
0x000000000073364c : xor byte ptr [rax], al ; cli ; call rax
0x00000000007dc582 : xor byte ptr [rax], al ; out dx, eax ; syscall
0x00000000006a81e2 : xor byte ptr [rax], al ; ret
0x00000000004bc32e : xor byte ptr [rax], bh ; ret 0x850f
0x00000000006a1af7 : xor byte ptr [rax], bh ; retf -0x7af1
0x000000000054acb3 : xor byte ptr [rax], bl ; add rsp, 8 ; ret
0x00000000006a582f : xor byte ptr [rax], cl ; add cl, bl ; retf 0xceb
0x00000000004bc32d : xor byte ptr [rax], dil ; ret 0x850f
0x000000000054acb2 : xor byte ptr [rax], r11b ; add rsp, 8 ; ret
0x00000000004b3710 : xor byte ptr [rbp + 0x14], 0xbe ; retf
0x000000000073d4e8 : xor byte ptr [rbp + 4], al ; add byte ptr [rax], al ; ret
0x000000000069ccb9 : xor byte ptr [rbp + 9], al ; retf 0x145
0x00000000007e11a3 : xor byte ptr [rbp + rdx + 0x515a600], bh ; retf
0x00000000007a6290 : xor byte ptr [rbp - 0x15], bh ; call qword ptr [rsi]
0x000000000073f0ac : xor byte ptr [rbp - 0x1d], ch ; jmp rax
0x00000000006a6932 : xor byte ptr [rbp - 0x76b70003], bl ; ret
0x000000000053b6a0 : xor byte ptr [rbp - 0x76b7ff91], bl ; out dx, eax ; call rcx
0x000000000042f882 : xor byte ptr [rbp], bl ; call rax
0x00000000006bf301 : xor byte ptr [rbx + 0x34376405], cl ; add byte ptr [rax - 0x7d], cl ; ret 0x481f
0x00000000004113c6 : xor byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000413581 : xor byte ptr [rbx + 0x41], bl ; pop rsp ; pop rbp ; ret
0x00000000004fdb30 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000050a985 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000050e8ba : xor byte ptr [rbx + 0x63480458], cl ; ret
0x00000000007a6b67 : xor byte ptr [rbx + 0xa800206], al ; ret
0x00000000006b48fd : xor byte ptr [rbx + rcx*4 + 0x40], cl ; sub byte ptr [rax + 0x29], cl ; retf -0x7fbf
0x00000000006b465d : xor byte ptr [rbx + rcx*4 + 0x40], cl ; sub byte ptr [rax + 0x29], cl ; retf 0xf41
0x0000000000744044 : xor byte ptr [rbx - 0x13], ah ; call qword ptr [rax]
0x0000000000496fc1 : xor byte ptr [rbx - 0x1f00ff92], dl ; pop rbp ; ret
0x00000000006ab6bc : xor byte ptr [rbx - 0x3d], bl ; nop ; mov rax, qword ptr [rdi + 0x50] ; ret
0x0000000000555032 : xor byte ptr [rbx - 0x76b7ffee], ch ; ret
0x0000000000746ffc : xor byte ptr [rbx - 0xc], cl ; call qword ptr [rax]
0x000000000074a934 : xor byte ptr [rbx - 7], al ; call qword ptr [rax]
0x000000000073b75c : xor byte ptr [rbx], 0xde ; call qword ptr [rax]
0x000000000048ab36 : xor byte ptr [rbx], ah ; add byte ptr [rax - 0x77], cl ; ret
0x000000000077e7e5 : xor byte ptr [rbx], al ; add al, bl ; retf
0x000000000064e235 : xor byte ptr [rbx], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007a6d87 : xor byte ptr [rbx], al ; add eax, 0x41280e02 ; ret
0x00000000007464f4 : xor byte ptr [rbx], bh ; jmp rax
0x000000000054f83a : xor byte ptr [rbx], cl ; jmp rax
0x000000000068998f : xor byte ptr [rbx], cl ; ret
0x000000000058b557 : xor byte ptr [rbx], dl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007a7c70 : xor byte ptr [rbx], dl ; in al, dx ; jmp qword ptr [rax]
0x000000000068998e : xor byte ptr [rbx], r9b ; ret
0x000000000074b670 : xor byte ptr [rcx + 0x25500008], 0xfa ; call rax
0x00000000006632e0 : xor byte ptr [rcx + 0x299bebc8], cl ; ret 0x348
0x000000000048f380 : xor byte ptr [rcx + 0x458b41c2], cl ; xor al, 0x29 ; ret 0xd089
0x00000000004401d9 : xor byte ptr [rcx + 0x5c], al ; pop r13 ; pop rbp ; ret
0x00000000005fada6 : xor byte ptr [rcx + rcx], bh ; setbe al ; jmp 0x5fad80
0x000000000074a83c : xor byte ptr [rcx + rdi*8], dh ; jmp qword ptr [rax]
0x00000000006f7900 : xor byte ptr [rcx + rdx*2], dh ; add al, dh ; ret 0x51
0x0000000000745a3c : xor byte ptr [rcx - 0x10], ch ; call rax
0x00000000007452e4 : xor byte ptr [rcx - 0x11], dl ; call qword ptr [rax]
0x000000000073f944 : xor byte ptr [rcx - 0x1c], cl ; call rax
0x0000000000790840 : xor byte ptr [rcx - 0x1e], ah ; jmp qword ptr [rbx]
0x0000000000788500 : xor byte ptr [rcx - 0x20], ch ; call qword ptr [rbx]
0x000000000058b6e7 : xor byte ptr [rcx - 0x73], al ; push rdi ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x000000000048f43b : xor byte ptr [rcx - 0x75], al ; xor al, 0x29 ; ret 0xd089
0x000000000048f42f : xor byte ptr [rcx - 0x75], al ; xor al, 0x39 ; ret 0x117c
0x000000000048f3f2 : xor byte ptr [rcx - 0x75], al ; xor al, 0x39 ; ret 0x157c
0x000000000048f374 : xor byte ptr [rcx - 0x75], al ; xor al, 0x39 ; ret 0x167c
0x00000000006bad32 : xor byte ptr [rcx - 0x75], cl ; sub byte ptr [r8 + 0x29], r9b ; ret 0xb60f
0x00000000006d128f : xor byte ptr [rcx - 0x78], al ; jp 0x6d12a5 ; ret
0x0000000000747dec : xor byte ptr [rcx - 0xb], ah ; jmp qword ptr [rax]
0x0000000000748fcc : xor byte ptr [rcx - 9], al ; call rax
0x0000000000607091 : xor byte ptr [rcx], 0x4c ; mov edi, esi ; call rax
0x000000000074a7dc : xor byte ptr [rcx], 0xf9 ; call rax
0x00000000004ab594 : xor byte ptr [rcx], ah ; add byte ptr [rax - 0x77], cl ; ret 0x2c7
0x00000000005ef8e2 : xor byte ptr [rcx], al ; call rax
0x00000000004bd09a : xor byte ptr [rcx], bh ; ret 0x7475
0x0000000000736378 : xor byte ptr [rcx], bl ; add al, byte ptr [rax] ; ret 0xd18c
0x00000000004d226e : xor byte ptr [rcx], bl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046f7f8 : xor byte ptr [rcx], bl ; call rax
0x000000000042d5e3 : xor byte ptr [rcx], ch ; add cl, cl ; ret
0x000000000062b54e : xor byte ptr [rcx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007b13d0 : xor byte ptr [rcx], dh ; out dx, al ; jmp rsi
0x00000000004bd099 : xor byte ptr [rcx], dil ; ret 0x7475
0x000000000056d9c4 : xor byte ptr [rcx], dl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006d9798 : xor byte ptr [rdi + 0x6d], dl ; add byte ptr [rax], al ; retf
0x0000000000777070 : xor byte ptr [rdi - 0x24], ah ; call qword ptr [rdx]
0x0000000000745e4c : xor byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x000000000074f448 : xor byte ptr [rdi], 0xcd ; call rsp
0x00000000007be795 : xor byte ptr [rdi], al ; add al, cl ; pop rsi ; int1 ; call rsp
0x000000000060e237 : xor byte ptr [rdi], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006a4955 : xor byte ptr [rdi], al ; add byte ptr [rsi + 0xf], ah ; push rsp ; ret 0xf66
0x000000000040f8a8 : xor byte ptr [rdi], bl ; call rax
0x000000000051a3d3 : xor byte ptr [rdi], ch ; mov rdi, rbx ; call rax
0x0000000000532091 : xor byte ptr [rdi], ch ; ret
0x0000000000534074 : xor byte ptr [rdi], ch ; xor eax, eax ; call 0x680af3
0x0000000000535025 : xor byte ptr [rdi], ch ; xor eax, eax ; call 0x681301
0x00000000006c186a : xor byte ptr [rdi], cl ; jae 0x6c1875 ; mov rdi, rbx ; call rax
0x00000000006c1c4c : xor byte ptr [rdi], cl ; jae 0x6c1c58 ; mov rdi, r14 ; call r9
0x00000000006c1f8a : xor byte ptr [rdi], cl ; jae 0x6c1f95 ; mov rdi, rbx ; call rax
0x00000000006c237c : xor byte ptr [rdi], cl ; jae 0x6c2387 ; mov rdi, rbp ; call rcx
0x00000000006c29f0 : xor byte ptr [rdi], cl ; jae 0x6c29fb ; mov rdi, r15 ; call rax
0x00000000006c2d12 : xor byte ptr [rdi], cl ; jae 0x6c2d1d ; mov rdi, rbx ; call rax
0x00000000006c30ed : xor byte ptr [rdi], cl ; jae 0x6c30f8 ; mov rdi, r15 ; call rax
0x00000000006c33da : xor byte ptr [rdi], cl ; jae 0x6c33e5 ; mov rdi, rbx ; call rax
0x00000000006c37bd : xor byte ptr [rdi], cl ; jae 0x6c37c8 ; mov rdi, r15 ; call rax
0x000000000068333e : xor byte ptr [rdi], cl ; wait ; ret 0x450f
0x00000000007415fc : xor byte ptr [rdi], dh ; jmp rax
0x0000000000561703 : xor byte ptr [rdi], dl ; add bl, ch ; ret
0x0000000000663f90 : xor byte ptr [rdi], dl ; add byte ptr [rax], al ; call rax
0x00000000004f85dc : xor byte ptr [rdx + 0x6ede40], bh ; mov rdi, rbx ; call rax
0x00000000005151dd : xor byte ptr [rdx + 0x6f2110], bh ; mov rdi, rbx ; call rax
0x0000000000513fd4 : xor byte ptr [rdx + 0x6f2130], bh ; mov rdi, rbx ; call rax
0x000000000052543e : xor byte ptr [rdx + 0x6f2690], bh ; mov rdi, r14 ; call rax
0x0000000000525332 : xor byte ptr [rdx + 0x6f26a0], bh ; mov rdi, r14 ; call rax
0x000000000053eab7 : xor byte ptr [rdx + 0x6fa4d0], bh ; mov rdi, r15 ; call rax
0x000000000056a842 : xor byte ptr [rdx + 0x701f80], bh ; mov rdi, r14 ; call rax
0x00000000005ad102 : xor byte ptr [rdx + 0x70fa50], bh ; mov rdi, r15 ; call rax
0x00000000005c9b9c : xor byte ptr [rdx + 0xf], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b70d0 : xor byte ptr [rdx + rdi*8 - 1], al ; leave ; ret
0x00000000007218bf : xor byte ptr [rdx + rsi*8], bl ; mov ebp, 0xbac28abd ; retf -0x6cd0
0x00000000007439b4 : xor byte ptr [rdx - 0x14], al ; call rax
0x0000000000747cf4 : xor byte ptr [rdx - 0xb], bl ; jmp rax
0x0000000000746904 : xor byte ptr [rdx - 0xd], bh ; call qword ptr [rax]
0x000000000073ccd4 : xor byte ptr [rdx], 0xe0 ; jmp rax
0x00000000007ba56f : xor byte ptr [rdx], al ; ret
0x00000000007a0263 : xor byte ptr [rdx], al ; retf
0x000000000076ffcd : xor byte ptr [rdx], al ; retf 0xe0a
0x000000000045f816 : xor byte ptr [rdx], bl ; call rax
0x000000000041d67b : xor byte ptr [rdx], ch ; add cl, cl ; ret
0x000000000059b594 : xor byte ptr [rdx], dl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005b1694 : xor byte ptr [rdx], dl ; add byte ptr [rax - 0x7d], cl ; cli ; sbb cl, byte ptr [rax - 0x77] ; ret
0x00000000007f2e60 : xor byte ptr [rip + 0x19ca3], al ; ret 0x5d30
0x00000000007c64a7 : xor byte ptr [rip + 0x7f6], cl ; or dword ptr [rax], 5 ; call qword ptr [rbx]
0x00000000007e54a9 : xor byte ptr [rip - 0x12c8cd7b], al ; xor byte ptr [rsi], al ; retf
0x000000000055bf0e : xor byte ptr [rip - 0x48], al ; dec dword ptr [rax + 0x39] ; ret 0x870f
0x00000000007f5aa6 : xor byte ptr [rip - 0x7ef6cf11], al ; xor dword ptr [rcx], edx ; ret
0x0000000000746b18 : xor byte ptr [rsi + 7], dl ; add al, dl ; retf
0x00000000007a6430 : xor byte ptr [rsi - 0x15], bh ; call qword ptr [rdx]
0x000000000073e78c : xor byte ptr [rsi - 0x1e], cl ; jmp rax
0x0000000000780048 : xor byte ptr [rsi - 0x38], cl ; call qword ptr [rdx]
0x0000000000657cc6 : xor byte ptr [rsi - 0x76b7fffe], dl ; ret
0x0000000000745d94 : xor byte ptr [rsi - 0xe], dl ; call rax
0x000000000073eeb4 : xor byte ptr [rsi], 0xe3 ; jmp qword ptr [rax - 0x35]
0x00000000007ae77d : xor byte ptr [rsi], al ; add byte ptr [rax], al ; mov dl, 0xed ; jmp qword ptr [rdi]
0x00000000007e54af : xor byte ptr [rsi], al ; retf
0x00000000005716f8 : xor byte ptr [rsi], dl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000006521bb : xor byte ptr cs:[rax + 0x39], cl ; ret 0x850f
0x00000000006586b6 : xor byte ptr cs:[rax + 0x39], cl ; ret 0xe775
0x0000000000652f7c : xor byte ptr cs:[rax + 0x39], cl ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret 0xbd80
0x00000000007a2320 : xor ch, 0xe8 ; call qword ptr [rax]
0x000000000073acbd : xor ch, bl ; jmp rax
0x000000000074cff8 : xor ch, byte ptr [rax - 0x34] ; call qword ptr [rax]
0x000000000040d6d6 : xor ch, byte ptr [rbx] ; add cl, cl ; ret
0x0000000000658c1c : xor ch, byte ptr [rdi + 2] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054d90a : xor ch, byte ptr [rsi + 0x18] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000747aad : xor ch, dh ; call qword ptr [rax]
0x0000000000505d05 : xor cl, 0x6e ; add al, ch ; ret 0x1893
0x0000000000786330 : xor cl, 0xdf ; jmp qword ptr [rcx]
0x000000000079ab30 : xor cl, 0xe6 ; jmp qword ptr [rcx]
0x000000000074a795 : xor cl, bh ; call rax
0x000000000074a32c : xor cl, bl ; clc ; jmp rax
0x00000000006696bd : xor cl, byte ptr [rax + 0x39] ; ret
0x00000000006c5d7d : xor cl, byte ptr [rax + 0x63] ; ret 0x294c
0x0000000000495d9a : xor cl, byte ptr [rax - 0x76b7ffde] ; ret 0x8948
0x0000000000610cf3 : xor cl, byte ptr [rax - 0x77] ; ret
0x000000000050923b : xor cl, byte ptr [rax - 0x77] ; retf -0x4318
0x00000000006282ab : xor cl, byte ptr [rax - 0x77] ; retf 0x4ce8
0x000000000049acae : xor cl, byte ptr [rbp] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000060b350 : xor cl, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000005fd50d : xor cl, byte ptr [rcx + 0x63] ; retf 0x6349
0x000000000073878c : xor cl, byte ptr [rdi - 0x2a] ; jmp rax
0x00000000007d7d26 : xor cl, byte ptr [rdi] ; stosb byte ptr [rdi], al ; sbb ecx, dword ptr [rbx] ; shl byte ptr [rax + rax], 1 ; ret 0x1b
0x00000000004d2f86 : xor cl, byte ptr [rip - 0x70410000] ; ret 0x6e
0x00000000005db3a8 : xor cl, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000007cb912 : xor cl, ch ; adc al, byte ptr [rax] ; cld ; syscall
0x00000000007484bc : xor cl, ch ; cmc ; jmp rax
0x000000000078e210 : xor cl, cl ; loope 0x78e217 ; retf
0x000000000069f829 : xor dh, byte ptr [rbp - 0x1c] ; pop rbx ; ret
0x00000000005a920a : xor dh, byte ptr [rbp - 0x76b7ffee] ; ret
0x00000000007c6825 : xor dh, byte ptr [rcx + 0x21ae0b29] ; mov word ptr [rdx], es ; retf 0x2a
0x00000000007e54ac : xor dh, byte ptr [rdi] ; in eax, dx ; xor byte ptr [rsi], al ; retf
0x000000000051b45b : xor dh, dh ; ret 0x7501
0x000000000051aa31 : xor dh, dh ; ret 0xf01
0x00000000007a42c8 : xor dl, bpl ; jmp rsi
0x00000000004af673 : xor dl, byte ptr [rbp] ; call rax
0x000000000058b31a : xor dl, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007f356a : xor dl, byte ptr [rcx - 0x49fffe41] ; jge 0x7f3580 ; lodsb al, byte ptr [rsi] ; retf -0x27ff
0x00000000004ef60a : xor dl, byte ptr [rcx] ; call rax
0x000000000050c91f : xor dl, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000076eb68 : xor dl, byte ptr [rsi - 0x37] ; call qword ptr [rdx]
0x00000000005714ec : xor dl, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000049f5e8 : xor dl, byte ptr [rsi] ; call rax
0x00000000004af6b6 : xor dl, byte ptr cs:[rbp] ; call rax
0x0000000000738425 : xor dl, ch ; jmp qword ptr [rax]
0x00000000007a42c9 : xor dl, ch ; jmp rsi
0x000000000075bb59 : xor dl, cl ; call rsp
0x00000000007360bd : xor dl, cl ; jmp rax
0x000000000074a264 : xor dl, dl ; clc ; call rax
0x000000000075e979 : xor dl, dl ; jmp qword ptr [rbx]
0x000000000046b861 : xor dword ptr [rax + 0x59], 0 ; call rax
0x000000000051859e : xor dword ptr [rax + 0x63], ecx ; add ecx, dword ptr [rax + 0x63] ; ret
0x00000000005aa31d : xor dword ptr [rax + 0xd], ebx ; add cl, ch ; ret 0xfffe
0x0000000000511622 : xor dword ptr [rax + rax], ebx ; call 0x6ce055
0x00000000007eebee : xor dword ptr [rax + rcx + 0x506dc00], ebp ; ret 8
0x0000000000579f63 : xor dword ptr [rax - 0x77], ecx ; fmul dword ptr [rax - 0x77] ; ret
0x000000000064e1f5 : xor dword ptr [rax - 0x77], ecx ; ret
0x00000000006d1364 : xor dword ptr [rax - 0x77], ecx ; ret 0x294c
0x00000000006a1f24 : xor dword ptr [rax - 0x77], ecx ; ret 0xf089
0x00000000006cc501 : xor dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000072119a : xor dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret
0x0000000000720d9a : xor dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0x1000
0x00000000007dc571 : xor dword ptr [rax], eax ; iretd ; sldt word ptr [rax] ; add dh, dl ; syscall
0x00000000007dc566 : xor dword ptr [rax], eax ; mov ch, 0xf ; add byte ptr [rax], al ; add dl, cl ; syscall
0x00000000007e6e26 : xor dword ptr [rax], eax ; ret 0x420f
0x00000000004fca54 : xor dword ptr [rax], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047f732 : xor dword ptr [rax], ebx ; call rax
0x000000000057da71 : xor dword ptr [rax], edx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047c994 : xor dword ptr [rax], esp ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004af72c : xor dword ptr [rbp], edx ; call rax
0x000000000058bfc5 : xor dword ptr [rbx + 0xf], edx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000068b417 : xor dword ptr [rbx], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050b460 : xor dword ptr [rbx], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000054f7ca : xor dword ptr [rbx], ecx ; jmp rax
0x000000000058b469 : xor dword ptr [rbx], edx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042349b : xor dword ptr [rcx - 0x76b7ffd7], esi ; ret 0x8948
0x0000000000601c3b : xor dword ptr [rcx - 0x76b7fff8], edx ; ret
0x00000000006d1256 : xor dword ptr [rcx - 0x77], ecx ; ret 0xf889
0x0000000000551f2e : xor dword ptr [rcx], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x0000000000632eca : xor dword ptr [rcx], eax ; je 0x632ed5 ; pop rbx ; ret
0x000000000042d823 : xor dword ptr [rcx], ebp ; add cl, cl ; ret
0x000000000056da1b : xor dword ptr [rcx], edx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007f5aac : xor dword ptr [rcx], edx ; ret
0x0000000000658f31 : xor dword ptr [rdi + 2], esi ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040ccb3 : xor dword ptr [rdi + rbx*2], ebx ; call rax
0x00000000005ec3df : xor dword ptr [rdi], 9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058c986 : xor dword ptr [rdi], ecx ; add bl, ch ; mov byte ptr [rax - 0x77], cl ; ret
0x000000000067e52f : xor dword ptr [rdi], ecx ; ret
0x0000000000415f77 : xor dword ptr [rdi], esp ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x8948
0x00000000004b911d : xor dword ptr [rdx + 0x1c], ebp ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000721b8a : xor dword ptr [rdx + rbp - 0x127ad511], ebx ; jns 0x721c07 ; retf 0x48ac
0x00000000004ab629 : xor dword ptr [rdx], 0x21 ; add cl, cl ; ret
0x000000000059b711 : xor dword ptr [rdx], edx ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x77] ; ret
0x000000000079e885 : xor dword ptr [rip - 0x17e13200], eax ; call qword ptr [rdi]
0x00000000007e76b9 : xor dword ptr [rip - 0x68ffcb23], edx ; xor al, byte ptr [rdx] ; ret 0x34
0x000000000068a89b : xor dword ptr [rip - 0x76b7fffd], edi ; ret
0x000000000057851d : xor dword ptr [rsi + 0x10], esi ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x6d4749
0x0000000000722bfa : xor dword ptr [rsi], 0x63 ; pop rbp ; mov dl, 0x77 ; retf
0x000000000063c4df : xor dword ptr [rsi], 4 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007ae8ad : xor dword ptr [rsi], eax ; add al, dh ; mov dl, 0xed ; jmp qword ptr [rcx]
0x00000000006521ba : xor dword ptr [rsi], ebp ; xor byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000006586b5 : xor dword ptr [rsi], ebp ; xor byte ptr [rax + 0x39], cl ; ret 0xe775
0x0000000000652f7b : xor dword ptr [rsi], ebp ; xor byte ptr [rax + 0x39], cl ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret 0xbd80
0x000000000049f675 : xor dword ptr [rsi], edx ; call rax
0x0000000000569c1b : xor dword ptr [rsp + rdx], ecx ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058b468 : xor dword ptr fs:[rbx], edx ; add byte ptr [rax - 0x77], cl ; ret
0x00000000007463b9 : xor eax, 0x11e00007 ; jmp qword ptr [rax]
0x000000000048c4ef : xor eax, 0x19e800a0 ; retf
0x000000000059c486 : xor eax, 0x2948000f ; ret
0x00000000006d6229 : xor eax, 0x3373c2 ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000006d6101 : xor eax, 0x3374ea ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000007e76ef : xor eax, 0x36af05 ; retf
0x00000000004c78f5 : xor eax, 0x39000293 ; ret
0x00000000007e77de : xor eax, 0x40b2a01 ; add byte ptr [rax], al ; cmp dword ptr [rsi], edx ; ret
0x00000000006a7636 : xor eax, 0x415d5b00 ; pop rsp ; ret
0x0000000000505569 : xor eax, 0x48000002 ; mov edx, esp ; call rax
0x00000000007f7272 : xor eax, 0x535b400 ; ret
0x00000000007dc823 : xor eax, 0x535f900 ; ret 0x36
0x0000000000408607 : xor eax, 0x58002cc1 ; pop rbx ; pop rbp ; ret
0x00000000006a4622 : xor eax, 0x5bd88900 ; ret
0x00000000006a82eb : xor eax, 0x5c60100 ; ret
0x0000000000688323 : xor eax, 0x83d97400 ; ret
0x00000000006029f9 : xor eax, 0x890007eb ; ret
0x00000000005b7f67 : xor eax, 0x89000dab ; ret
0x000000000049c489 : xor eax, 0x89480000 ; ret 0x894c
0x000000000065d56d : xor eax, 0x89480002 ; ret
0x000000000064dd7c : xor eax, 0x89480003 ; ret
0x000000000063c591 : xor eax, 0x89480004 ; ret
0x000000000054c577 : xor eax, 0x89480013 ; ret
0x000000000052d586 : xor eax, 0x89480015 ; ret
0x00000000005011a3 : xor eax, 0x8948001d ; ret
0x0000000000467776 : xor eax, 0x89480022 ; ret
0x000000000048a684 : xor eax, 0x89480023 ; ret
0x000000000048afdd : xor eax, 0x89480023 ; ret 0x8948
0x000000000049f35c : xor eax, 0x8948004a ; ret 0xbe
0x000000000057191b : xor eax, 0x9066ffe9 ; lock sub dword ptr [rdi], 1 ; ret
0x00000000005524e5 : xor eax, 0xbedf8948 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x00000000006a7c74 : xor eax, 0xc4834800 ; or byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000006a6056 : xor eax, 0xc4834800 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000006a78cb : xor eax, 0xc4834800 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004a0277 : xor eax, 0xc90021e6 ; ret
0x0000000000431977 : xor eax, 0xc90028cf ; ret
0x00000000004a21c5 : xor eax, 0xc9ffff81 ; ret
0x00000000006a83b3 : xor eax, 0xd0894800 ; ret
0x00000000006a7d24 : xor eax, 0xdf894800 ; call 0x6d4747
0x00000000006b26fb : xor eax, 0xe8894800 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006aa845 : xor eax, 0xf0ae0f00 ; ret
0x0000000000722d61 : xor eax, 0xf713c8f2 ; cwde ; call qword ptr [rcx]
0x000000000061e4a7 : xor eax, 0xff003e44 ; ror cl, 1 ; ret
0x0000000000522b35 : xor eax, 1 ; ret
0x00000000006cc493 : xor eax, dword ptr [eax] ; cmp eax, 0xff ; je 0x6cc4a8 ; ret
0x00000000004e9512 : xor eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000074ea6d : xor eax, dword ptr [rax] ; add byte ptr [rax], cl ; dec esp ; call qword ptr [rdx]
0x00000000006d10a9 : xor eax, dword ptr [rax] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000006cbba9 : xor eax, dword ptr [rax] ; add rsp, 8 ; jmp rax
0x00000000006c6d8a : xor eax, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000006cea0d : xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000006cc494 : xor eax, dword ptr [rax] ; cmp eax, 0xff ; je 0x6cc4a7 ; ret
0x00000000006ce9d4 : xor eax, dword ptr [rax] ; cmp eax, 0xff ; je 0x6ce9e7 ; ret
0x00000000006ce9d3 : xor eax, dword ptr [rax] ; cmp eax, 0xff ; je 0x6ce9e8 ; ret
0x00000000006c6e8b : xor eax, dword ptr [rax] ; jmp rax
0x00000000006d111d : xor eax, dword ptr [rax] ; mfence ; ret
0x00000000006d606c : xor eax, dword ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000006ce0e5 : xor eax, dword ptr [rax] ; movsxd rdi, edi ; movzx eax, byte ptr [rax + rdi] ; ret
0x00000000006cdc64 : xor eax, dword ptr [rax] ; ret
0x00000000006cb5ab : xor eax, dword ptr [rax] ; test ebx, ebx ; setne al ; pop rbx ; ret
0x000000000064dfb9 : xor eax, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000480031 : xor eax, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; clc ; leave ; ret
0x00000000007b6b4d : xor eax, dword ptr [rcx] ; or cl, byte ptr [rdi + rax] ; or byte ptr [rbx + rcx + 2], al ; ret
0x00000000007d4ddf : xor eax, dword ptr [rcx] ; ret 2
0x00000000006c6831 : xor eax, dword ptr [rdi + 0xc] ; or rdx, rax ; sete al ; ret
0x0000000000746379 : xor eax, dword ptr [rdi] ; add byte ptr [rax], ah ; or esi, ebx ; call rax
0x00000000007e84d3 : xor eax, dword ptr [rdi] ; retf
0x000000000079eac5 : xor eax, dword ptr [rip - 0x17d34a00] ; call rax
0x0000000000740359 : xor eax, dword ptr [rip - 0x1ac9b000] ; jmp qword ptr [rax]
0x00000000007e76d2 : xor eax, dword ptr [rip - 0x6dffcb5d] ; xor al, 5 ; ret 0x34
0x00000000007f5ae6 : xor eax, dword ptr [rip - 0x6fffc912] ; xor al, 5 ; ret
0x000000000062f62f : xor eax, dword ptr [rip - 0x76b7fffb] ; ret
0x000000000061c7d6 : xor eax, dword ptr [rsi] ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000061c7c2 : xor eax, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000743509 : xor eax, dword ptr [rsi] ; add byte ptr [rax], al ; xchg bl, ch ; jmp rax
0x00000000007e69d3 : xor eax, dword ptr [rsi] ; ret
0x000000000064dfb8 : xor eax, dword ptr ds:[rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000074ea6c : xor eax, dword ptr fs:[rax] ; add byte ptr [rax], cl ; dec esp ; call qword ptr [rdx]
0x00000000006d4e9a : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000006d41b2 : xor eax, eax ; add rsp, 0x18 ; ret
0x0000000000591798 : xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004f7a5f : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004f45a9 : xor eax, eax ; add rsp, 8 ; ret
0x00000000005438a7 : xor eax, eax ; call 0x67fb54
0x00000000005438b3 : xor eax, eax ; call 0x67fb56
0x00000000005c38e6 : xor eax, eax ; call 0x67fb6a
0x00000000005547d9 : xor eax, eax ; call 0x680ac8
0x00000000005b480c : xor eax, eax ; call 0x680af0
0x00000000006c4866 : xor eax, eax ; call 0x680b18
0x00000000005a482c : xor eax, eax ; call 0x680b2c
0x000000000064412c : xor eax, eax ; call 0x680b40
0x00000000005c4892 : xor eax, eax ; call 0x680b90
0x0000000000404113 : xor eax, eax ; call 0x680bb8
0x0000000000405006 : xor eax, eax ; call 0x6812fe
0x00000000006ccea6 : xor eax, eax ; cmp byte ptr [rdi], 0x2f ; sete al ; ret
0x00000000006c6813 : xor eax, eax ; cmp dl, byte ptr [rdi] ; je 0x6c6826 ; ret
0x00000000006cba90 : xor eax, eax ; cmp dl, cl ; je 0x6cbaa6 ; ret
0x000000000066070e : xor eax, eax ; cmp dword ptr [rdx], 0xd ; je 0x660728 ; ret
0x00000000006ce8b0 : xor eax, eax ; cmp edi, 2 ; sete al ; ret
0x0000000000509207 : xor eax, eax ; cmp rcx, r9 ; je 0x50923c ; ret
0x0000000000628277 : xor eax, eax ; cmp rcx, r9 ; je 0x6282ac ; ret
0x00000000006c6cd0 : xor eax, eax ; cmp sil, dil ; je 0x6c6ce7 ; ret
0x00000000006c5bab : xor eax, eax ; mov al, dl ; mov ah, cl ; ret
0x00000000005230ad : xor eax, eax ; mov ebp, 1 ; call 0x67fb5b
0x0000000000503c80 : xor eax, eax ; mov ecx, dword ptr [rsi] ; cmp dword ptr [rsi + 4], ecx ; jge 0x503c99 ; ret
0x0000000000517f40 : xor eax, eax ; mov edx, 1 ; ret
0x00000000004f6e80 : xor eax, eax ; mov edx, dword ptr [rsi + 4] ; cmp dword ptr [rsi], edx ; jle 0x4f6e99 ; ret
0x00000000005b3120 : xor eax, eax ; mov r13, rdx ; call 0x67fb59
0x00000000005b3108 : xor eax, eax ; mov r14, rdx ; call 0x67fb59
0x00000000006be680 : xor eax, eax ; mov rbx, rbp ; call 0x6aa8e7
0x00000000005b38e9 : xor eax, eax ; mov rbx, rdx ; call 0x67fb59
0x00000000005730cc : xor eax, eax ; mov rdi, rbx ; call 0x67fb59
0x00000000006a4a7c : xor eax, eax ; movapd xmm0, xmm1 ; ret
0x0000000000545564 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000050701a : xor eax, eax ; pop rbx ; ret
0x0000000000503e90 : xor eax, eax ; ret
0x00000000005f8473 : xor eax, eax ; test edx, edx ; je 0x5f8486 ; ret
0x0000000000660723 : xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000050ac51 : xor eax, eax ; xor edx, edx ; pop rbx ; ret
0x0000000000506b30 : xor eax, eax ; xor edx, edx ; ret
0x00000000006642a5 : xor eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000069ca94 : xor eax, edi ; ret
0x00000000006b2a5c : xor eax, edx ; mov edx, eax ; shr edx, 0x12 ; xor eax, edx ; ret
0x00000000006b2a63 : xor eax, edx ; ret
0x00000000006a1855 : xor eax, edx ; sub rax, rdx ; ret
0x000000000069ca92 : xor eax, edx ; xor eax, edi ; ret
0x00000000007a4791 : xor eax, esi ; call qword ptr [rdx]
0x000000000069cad6 : xor eax, esi ; ret
0x000000000055666e : xor ebp, 1 ; call qword ptr [rip + 0x4ac269]
0x0000000000525ec5 : xor ebp, 1 ; call qword ptr [rip + 0x4dca12]
0x00000000004f75f9 : xor ebp, dword ptr [rcx] ; or al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000041d3c3 : xor ebp, dword ptr [rdx] ; add cl, cl ; ret
0x0000000000515e40 : xor ebp, ebp ; call qword ptr [rip + 0x4eca98]
0x00000000005541ce : xor ebp, ebp ; jmp 0x554198
0x000000000059eea4 : xor ebp, ebp ; jmp 0x59ee76
0x0000000000575e8e : xor ebp, ebp ; xor ebx, 1 ; call qword ptr [rip + 0x48ca47]
0x0000000000626683 : xor ebp, ebp ; xor r12d, 1 ; call qword ptr [rip + 0x3dc251]
0x000000000059660b : xor ebp, ebp ; xor r12d, 1 ; call qword ptr [rip + 0x46c2c9]
0x0000000000526674 : xor ebp, ebp ; xor r12d, 1 ; call qword ptr [rip + 0x4dc260]
0x000000000055666b : xor ebp, ebp ; xor r13d, 1 ; call qword ptr [rip + 0x4ac269]
0x000000000073accd : xor ebp, ebx ; call qword ptr [rax]
0x000000000073ad0d : xor ebp, ebx ; call rax
0x000000000074516d : xor ebp, edi ; inc dword ptr [rax] ; ret 6
0x00000000007451ad : xor ebp, edi ; inc eax ; ret 6
0x0000000000745175 : xor ebp, edi ; lcall ptr [rax] ; ret 6
0x000000000074517d : xor ebp, edi ; push qword ptr [rax] ; ret 6
0x00000000007961b9 : xor ebp, esp ; call qword ptr [rax]
0x0000000000575e90 : xor ebx, 1 ; call qword ptr [rip + 0x48ca47]
0x00000000004066ce : xor ebx, 1 ; call qword ptr [rip + 0x5fc209]
0x000000000040663a : xor ebx, 1 ; call qword ptr [rip + 0x5fc29d]
0x00000000004fd7d6 : xor ebx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004fd78f : xor ebx, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; cli ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000047f5a6 : xor ebx, dword ptr [rax] ; call rax
0x0000000000713349 : xor ebx, dword ptr [rbp] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5ce0
0x000000000042f5ac : xor ebx, dword ptr [rbp] ; call rax
0x00000000005213d5 : xor ebx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004f6c77 : xor ebx, dword ptr [rcx] ; add bl, ch ; ret
0x00000000004cb543 : xor ebx, dword ptr [rdi] ; add cl, cl ; ret
0x000000000062e909 : xor ebx, dword ptr [rsi + 0xa] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041f505 : xor ebx, dword ptr [rsi] ; call rax
0x00000000004f6c76 : xor ebx, dword ptr ss:[rcx] ; add bl, ch ; ret
0x00000000006b65f1 : xor ebx, ebx ; call qword ptr [rip + 0x34c2e7]
0x00000000006d1dc4 : xor ebx, ebx ; call rax
0x000000000060a718 : xor ebx, ebx ; jmp 0x60a6e2
0x000000000057ca9b : xor ebx, ebx ; lea rdi, qword ptr [rsp + 0x40] ; call 0x4c94f7
0x000000000063220c : xor ebx, ebx ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000050842e : xor ebx, ebx ; mov rax, rbx ; mov rdx, rcx ; pop rbx ; ret
0x00000000005084b6 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000050abfb : xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x0000000000525ec3 : xor ebx, ebx ; xor ebp, 1 ; call qword ptr [rip + 0x4dca12]
0x00000000005565fe : xor ebx, ebx ; xor r12d, 1 ; call qword ptr [rip + 0x4ac2d6]
0x000000000073b75d : xor ebx, esi ; call qword ptr [rax]
0x00000000005d1819 : xor ecx, 0xe ; add cl, cl ; ret
0x0000000000522481 : xor ecx, dword ptr [rax - 0x75] ; or byte ptr [rax + 0x39], r9b ; ret
0x000000000051609a : xor ecx, dword ptr [rax - 0x77] ; ret
0x000000000063472f : xor ecx, dword ptr [rax - 0x7b] ; test byte ptr [rdi], 0x84 ; retf
0x000000000053eacf : xor ecx, dword ptr [rax - 0x7d] ; ret
0x00000000006c7c1b : xor ecx, dword ptr [rax - 0x7d] ; ret 0xf01
0x00000000006d2663 : xor ecx, ebp ; retf -8
0x00000000004faa7f : xor ecx, ecx ; call r8
0x0000000000502937 : xor ecx, ecx ; jmp r8
0x00000000005012e9 : xor ecx, ecx ; jmp rax
0x0000000000606f9a : xor ecx, ecx ; mov rdx, rsp ; mov rdi, r14 ; call rax
0x00000000004fcf76 : xor ecx, ecx ; mov rsi, rbx ; mov rdx, r13 ; call rax
0x00000000004ff9cf : xor ecx, ecx ; mov rsi, rbx ; mov rdx, r14 ; call rax
0x0000000000503144 : xor ecx, ecx ; mov rsi, rbx ; mov rdx, r15 ; call rax
0x000000000074a7dd : xor ecx, edi ; call rax
0x000000000073525d : xor ecx, edi ; jmp rax
0x0000000000724e38 : xor ecx, edx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; retf 0x66
0x000000000075bae1 : xor ecx, edx ; call qword ptr [rdi]
0x000000000060dcc5 : xor edi, 0x8948ffff ; ret
0x000000000061ada9 : xor edi, dword ptr [rbx + 0x3e] ; add bh, bh ; ror cl, 1 ; ret
0x000000000050cfa2 : xor edi, dword ptr [rcx] ; ret
0x000000000065c853 : xor edi, dword ptr [rdx] ; add byte ptr [rcx], al ; mfence ; ret
0x000000000074a825 : xor edi, ecx ; call rax
0x0000000000550feb : xor edi, edi ; call rax
0x0000000000676032 : xor edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000006cb3f7 : xor edi, edi ; dec dword ptr [rax - 0x77] ; ret 0xc7
0x00000000006671f4 : xor edi, edi ; mov rsi, rsp ; call 0x403c37
0x0000000000525c00 : xor edi, edi ; xor edx, edx ; mov rax, rdi ; pop rbx ; ret
0x0000000000525c10 : xor edi, edi ; xor edx, edx ; mov rax, rdi ; ret
0x0000000000721a35 : xor edi, edx ; mov r12d, dword ptr [r10 - 6] ; outsb dx, byte ptr [rsi] ; retf -0x1ead
0x00000000007f71da : xor edi, edx ; sub eax, 0x52ff603 ; ret 0x30
0x000000000057d2f0 : xor edx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000058b249 : xor edx, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047d579 : xor edx, dword ptr [rbx] ; and al, 0 ; leave ; ret
0x00000000004de16d : xor edx, dword ptr [rip - 0x70410000] ; ret 0x6e
0x000000000051dfe6 : xor edx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000065653d : xor edx, ebp ; dec dword ptr [rax - 0x77] ; ret
0x00000000005c552b : xor edx, ebp ; sldt word ptr [rbx - 0x78f0d208] ; retf
0x000000000076e3b1 : xor edx, ebx ; jmp qword ptr [rcx]
0x00000000007360c5 : xor edx, ecx ; call qword ptr [rax]
0x0000000000508650 : xor edx, edx ; div ecx ; mov eax, edx ; pop rbx ; ret
0x00000000006a1865 : xor edx, edx ; div rsi ; mov rax, rdx ; ret
0x00000000006a1825 : xor edx, edx ; div rsi ; ret
0x00000000005c6837 : xor edx, edx ; mov dl, cl ; pop rbx ; ret
0x00000000006a5550 : xor edx, edx ; mov dword ptr [rax + 0x10], edx ; fstp xword ptr [rax] ; ret
0x00000000006ce90b : xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000005084c2 : xor edx, edx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006a8640 : xor edx, edx ; mov rax, rbx ; pop rbx ; ret
0x0000000000525c02 : xor edx, edx ; mov rax, rdi ; pop rbx ; ret
0x0000000000525c12 : xor edx, edx ; mov rax, rdi ; ret
0x000000000068ecc0 : xor edx, edx ; mov rax, rdx ; ret
0x0000000000530d00 : xor edx, edx ; mov rdi, r12 ; call rax
0x00000000005105d6 : xor edx, edx ; mov rdi, rbx ; call rax
0x000000000050ac53 : xor edx, edx ; pop rbx ; ret
0x0000000000506b32 : xor edx, edx ; ret
0x0000000000507018 : xor edx, edx ; xor eax, eax ; pop rbx ; ret
0x0000000000506b78 : xor edx, edx ; xor eax, eax ; ret
0x000000000050abf9 : xor edx, edx ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x00000000006ca8b8 : xor edx, edx ; xor esi, esi ; mov rax, rsi ; ret
0x000000000073872d : xor edx, esi ; jmp qword ptr [rax]
0x0000000000636661 : xor esi, 0xffffffff ; dec dword ptr [rax - 0x77] ; ret
0x0000000000688cc5 : xor esi, 1 ; test sil, sil ; je 0x688ca0 ; ret
0x000000000056ce89 : xor esi, dword ptr [rax] ; call rax
0x000000000056ce84 : xor esi, dword ptr [rax] ; mov esi, 0x703358 ; call rax
0x000000000056cf70 : xor esi, dword ptr [rax] ; mov esi, 0x703368 ; call rax
0x000000000056f2d9 : xor esi, dword ptr [rax] ; mov esi, 0x703390 ; call rax
0x00000000006b3299 : xor esi, dword ptr [rbx - 0x76b80000] ; ret 0xc7
0x00000000006b279f : xor esi, eax ; sub rsi, rax ; lea rax, qword ptr [rsi + 1] ; ret
0x00000000007b13d1 : xor esi, ebp ; jmp rsi
0x000000000077f801 : xor esi, ebx ; jmp rax
0x00000000004135a9 : xor esi, ebx ; pop rsi ; add bh, bh ; ror cl, 1 ; ret
0x000000000053dab9 : xor esi, ecx ; adc dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000073871d : xor esi, edx ; call rax
0x0000000000738725 : xor esi, edx ; push rax ; ret 2
0x00000000006a696e : xor esi, esi ; call 0x403444
0x0000000000514a46 : xor esi, esi ; call 0x681536
0x00000000006a7568 : xor esi, esi ; call rax
0x000000000050f8b3 : xor esi, esi ; jmp rax
0x0000000000554454 : xor esi, esi ; mov edi, 0xa0a2c8 ; call 0x6c06d9
0x0000000000676b31 : xor esi, esi ; mov rax, qword ptr [rip + 0x38bd1e] ; jmp rax
0x00000000006ca8ba : xor esi, esi ; mov rax, rsi ; ret
0x0000000000626686 : xor esp, 1 ; call qword ptr [rip + 0x3dc251]
0x000000000059660e : xor esp, 1 ; call qword ptr [rip + 0x46c2c9]
0x0000000000556601 : xor esp, 1 ; call qword ptr [rip + 0x4ac2d6]
0x0000000000526677 : xor esp, 1 ; call qword ptr [rip + 0x4dc260]
0x00000000006208a9 : xor esp, dword ptr [rax] ; add bh, bh ; ror cl, 1 ; ret
0x000000000048b251 : xor esp, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000509a2f : xor esp, dword ptr [rcx + 0x17] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000073cd25 : xor esp, eax ; call rax
0x0000000000796219 : xor esp, ebp ; jmp qword ptr [rcx]
0x00000000005d0908 : xor esp, ebx ; dec dword ptr [rax + 0x63] ; ret
0x0000000000776161 : xor esp, ebx ; jmp qword ptr [rax]
0x00000000007994f1 : xor esp, esi ; call qword ptr [rsi]
0x0000000000564a92 : xor esp, esp ; call 0x681536
0x00000000006b663b : xor esp, esp ; call qword ptr [rip + 0x34c29d]
0x00000000005c308c : xor esp, esp ; mov rdi, r12 ; xor eax, eax ; call 0x67fb5b
0x000000000054d485 : xor r10b, byte ptr [r15] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000050c91e : xor r10b, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000626685 : xor r12d, 1 ; call qword ptr [rip + 0x3dc251]
0x000000000059660d : xor r12d, 1 ; call qword ptr [rip + 0x46c2c9]
0x0000000000556600 : xor r12d, 1 ; call qword ptr [rip + 0x4ac2d6]
0x0000000000526676 : xor r12d, 1 ; call qword ptr [rip + 0x4dc260]
0x0000000000564a91 : xor r12d, r12d ; call 0x681537
0x00000000006b663a : xor r12d, r12d ; call qword ptr [rip + 0x34c29d]
0x000000000055666d : xor r13d, 1 ; call qword ptr [rip + 0x4ac269]
0x000000000056cf6f : xor r14d, dword ptr [rax] ; mov esi, 0x703368 ; call rax
0x0000000000514a45 : xor r14d, r14d ; call 0x681537
0x00000000006cde84 : xor r8, qword ptr [rax] ; ret
0x00000000005230a2 : xor r8d, r8d ; call 0x67fb55
0x000000000059389c : xor rax, r8 ; call 0x67fb55
0x000000000065e753 : xor rax, rax ; ret
0x00000000006642a4 : xor rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000006a1854 : xor rax, rdx ; sub rax, rdx ; ret
0x00000000007a4808 : xor rax, rsi ; call qword ptr [rdx]
0x0000000000721a34 : xor rdi, rdx ; mov r12d, dword ptr [r10 - 6] ; outsb dx, byte ptr [rsi] ; retf -0x1ead
0x00000000006a4f1d : xorpd xmm0, xmm1 ; add rsp, 0x18 ; ret
0x0000000000683186 : xorpd xmm0, xmm1 ; add rsp, 0x28 ; ret
0x000000000068310d : xorpd xmm0, xmm1 ; add rsp, 8 ; ret
0x00000000006a4984 : xorpd xmm0, xmm1 ; ret
0x0000000000683a16 : xorpd xmm0, xmm2 ; add rsp, 0x18 ; ret
0x000000000068392c : xorpd xmm0, xmm4 ; add rsp, 0x28 ; ret
0x00000000006a4a4d : xorpd xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x00000000006a4f1e : xorps xmm0, xmm1 ; add rsp, 0x18 ; ret
0x0000000000683187 : xorps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x000000000068310e : xorps xmm0, xmm1 ; add rsp, 8 ; ret
0x00000000006a4985 : xorps xmm0, xmm1 ; ret
0x0000000000683a17 : xorps xmm0, xmm2 ; add rsp, 0x18 ; ret
0x000000000068392d : xorps xmm0, xmm4 ; add rsp, 0x28 ; ret
0x0000000000491937 : xorps xmm0, xmmword ptr [rax] ; call rax
0x00000000006a4a4e : xorps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x000000000047d1cd : xorps xmm3, xmmword ptr [rax] ; call rax

Unique gadgets found: 58816
